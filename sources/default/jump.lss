
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000cea6  0000cfa6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000cea6  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000091f  00800106  00800106  0000cfac  2**1
                  ALLOC
  3 .noinit       000004db  00800a25  00800a25  0000d000  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000d4db  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000d4ec  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004d8  00000000  00000000  0000d528  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007810  00000000  00000000  0000da00  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013a0  00000000  00000000  00015210  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000058bf  00000000  00000000  000165b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c10  00000000  00000000  0001be70  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000150e  00000000  00000000  0001ca80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005139  00000000  00000000  0001df8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000538  00000000  00000000  000230c8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c9 3b 	jmp	0x7792	; 0x7792 <__ctors_end>
       4:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
       8:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
       c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      10:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      14:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      18:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      1c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      20:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      24:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      28:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      2c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      30:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      34:	0c 94 7f 3f 	jmp	0x7efe	; 0x7efe <__vector_13>
      38:	0c 94 be 3f 	jmp	0x7f7c	; 0x7f7c <__vector_14>
      3c:	0c 94 ea 3c 	jmp	0x79d4	; 0x79d4 <__vector_15>
      40:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      44:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      48:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      4c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      50:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      54:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      58:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      5c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      60:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      64:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      68:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>
      6c:	0c 94 34 3c 	jmp	0x7868	; 0x7868 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	fd 41 00 42 5c 42 60 42 67 42 08 42 0d 42 12 42     .A.B\B`BgB.B.B.B
      d2:	6f 42 15 42 18 42 1b 42 56 42 59 42 7f 42           oB.B.B.BVBYB.B

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     93b:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     983:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     993:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     9a3:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bc3:	29 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00     )...............
     bd3:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 33 00 00 00 00 00 00     '........3......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e27:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     e6f:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     e7f:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     e8f:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1313:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
    135b:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
    136b:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
    137b:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
    16df:	00 15 16 00 00 00 00 00 19 1a 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
    1737:	00 00 00 17 18 00 00 00 00 00 1b 1c 01 01 01 05     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    180b:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1847:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 03     ..%&............
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19e3:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 15 16 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 15 16 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	15 16 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 17 18     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 17 18 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c13:	00 00 17 18 00 00 04 04 04 00 00 00 00 29 00 00     .............)..
    1c23:	00 00 00 04 04 04 04 04 04 04 0d 0e 01 01 01 01     ................
    1c33:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c43:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c53:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 06 05     ................
    1c63:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c73:	01 01 01 05 00 00 00 08 00 00 06 01 01 01 01 01     ................
    1c83:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1cf7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1d33:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1d4f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1d73:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    1d8f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    1d9f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1db7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    1dcf:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1df7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e1b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e47:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1e9f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    1eaf:	00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 03     ................
    1ebf:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f23:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
	...
    1f43:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    1f67:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    1f7f:	00 02 02 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    1fbf:	00 00 00 02 02 02 00 00 00 00 00 00 00 02 02 02     ................
	...
    1fdb:	00 00 04 00 00 00 00 00 00 00 04 00 00 04 00 00     ................
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
    1ffb:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
    200b:	00 00 00 00 00 29 00 00 00 29 00 00 00 00 00 00     .....)...)......
	...
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 02 03 03 02 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    2063:	00 00 00 00 00 00 00 04 00 32 00 04 00 00 00 00     .........2......
    2073:	00 04 00 00 00 00 00 00 04 1f 21 00 00 15 16 00     ..........!.....
	...
    208b:	00 00 04 00 00 00 04 00 02 00 00 04 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 04 04 04 04 04 00 00     ................
    20cb:	00 00 00 04 00 00 00 00 00 00 04 20 22 00 00 17     ........... "...
    20db:	18 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00     ................
    20eb:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	29 00 00 00 00 00 1b 1c 01 05 00 00 00 00 00 00     )...............
    2123:	00 00 06 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2133:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    2143:	01 01 05 00 00 00 00 00 00 00 00 00 00 06 01 01     ................
    2153:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2163:	05 00 08 00 08 00 06 01 05 00 06 01 01 01 01 01     ................
    2173:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000021cf <level4>:
	...
    21e3:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    221f:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    241b:	00 02 02 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    2557:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    2567:	00 1f 21 00 33 15 16 00 00 00 00 00 00 0f 10 00     ..!.3...........
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 17 18     ................
    25b3:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    25c3:	22 00 02 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    26cf:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    270b:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28a7:	07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2957:	0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0b 0c 00 00 00 0f 10 00 00 00 00     ................
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0f 10 00 00 00 0f 10 00 00     ................
    2a0f:	00 00 00 00 00 07 07 07 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0f 10 00 00 00 0f 10 00 00 00 00 00 00 00 00     ................
	...
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0d 0e 00 00 00 0d 0e 00 00 00 00 00 00     ................
	...
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 06 05 00 00 00 00 00 00 00 00     ................
    2b23:	00 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bbb:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2bf7:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
	...
    2c13:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2c53:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
    2c63:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2c7b:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    2c93:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
    2cdf:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2d0b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2d63:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	00 00 00 00 00 00 32 00 00 00 00 29 29 00 00 00     ......2....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 00 00 00 00 04 04 04 04 04 00 00 00 02 02 00     ................
	...
    2e67:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     3...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 04 04     ...2............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 00 00 04     ................
    2eef:	04 04 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 00 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f3f:	00 1f 21 00 00 00 00 00 04 04 04 04 00 0b 0c 00     ..!.............
    2f4f:	02 02 02 02 02 02 00 00 00 00 00 00 00 00 00 29     ...............)
    2f5f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    2f6f:	00 04 04 04 04 04 04 00 00 00 00 00 15 16 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f97:	00 00 00 20 22 00 00 04 04 04 04 04 04 04 00 0d     ... "...........
    2fa7:	0e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 00 00 00 00 00 17 18     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 00 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
	...
    30a7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    30e3:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3123:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    3267:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    32bb:	00 32 00 02 03 02 00 00 00 01 00 00 00 00 00 00     .2..............
	...
    32d3:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    331b:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    332b:	00 00 00 00 02 02 02 02 00 00 00 00 00 00 00 00     ................
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    3377:	00 01 00 00 00 00 00 00 00 00 00 00 00 0b 0c 00     ................
	...
    33a7:	04 04 04 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    33cb:	02 03 02 03 03 02 00 01 00 00 00 00 00 00 00 00     ................
    33db:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    33f3:	03 02 02 03 00 02 00 00 00 00 00 00 00 04 04 04     ................
    3403:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    341b:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    342b:	00 1f 21 00 00 15 16 00 00 00 00 00 00 0b 0c 00     ..!.............
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    3467:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 17 18     .!..............
    3477:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    3487:	22 00 00 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 20 22     .............. "
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    35cf:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    35df:	04 04 04 00 00 25 26 00 00 00 00 00 00 00 00 00     .....%&.........
	...
    3627:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    3637:	00 00 04 00 00 04 00 04 00 00 04 00 04 00 00 00     ................
    3647:	00 04 00 00 00 00 32 00 00 00 00 00 00 00 00 00     ......2.........
	...
    3663:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     3...............
	...
    367b:	00 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
	...
    3693:	04 00 00 04 00 04 00 00 04 00 04 04 00 00 00 04     ................
	...
    36d7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
    36e7:	00 00 00 00 00 00 04 00 04 00 00 04 00 00 04 00     ................
    36f7:	04 00 04 00 00 04 00 00 00 00 00 00 00 00 00 00     ................
	...
    373b:	00 00 25 26 00 00 00 00 00 00 00 00 04 04 00 00     ..%&............
    374b:	00 04 00 00 04 00 04 00 00 04 00 04 00 00 00 00     ................
	...
    379f:	00 00 04 00 04 00 00 04 00 00 04 00 04 00 00 00     ................
    37af:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    37fb:	04 00 00 04 00 04 04 04 04 00 04 00 00 00 00 04     ................
    380b:	00 00 03 00 00 00 00 00 00 00 00 00 03 00 00 00     ................
    381b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    3907:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    3917:	00 1f 21 00 00 15 16 00 00 00 00 00 00 00 00 00     ..!.............
	...
    392f:	00 15 16 00 00 00 00 00 00 00 00 00 00 15 16 00     ................
    393f:	00 00 00 00 00 00 1f 21 00 00 00 00 00 00 00 00     .......!........
    394f:	00 00 00 00 1f 21 00 00 00 00 00 00 19 1a 00 00     .....!..........
    395f:	00 00 17 18 00 00 20 22 00 00 00 00 00 00 00 00     ...... "........
    396f:	00 00 00 20 22 00 00 17 18 00 00 00 00 00 00 00     ... "...........
	...
    3987:	00 00 00 17 18 00 00 00 00 00 00 00 00 00 00 17     ................
    3997:	18 00 00 00 00 00 00 00 20 22 00 00 00 00 00 00     ........ "......
    39a7:	29 29 29 29 00 00 20 22 00 00 00 00 00 00 1b 1c     )))).. "........
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4043:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4053:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 00 00 00     ..??????..???...
    4063:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    4073:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4083:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4093:	3f 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 3f 00 fe     ??????...?????..
    40a3:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f 00     ???????.???????.
    40b3:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    40c3:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    40d3:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    40e3:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    40f3:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4103:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4113:	00 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 00 00 00 fe     .?????..????....
    4123:	3f 3f 00 00 fe fe fe fe 00 00 fe fe fe fe fe fe     ??..............
    4133:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4143:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4153:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    4163:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00     .???????.??????.
    4173:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4183:	3f 3f 3f 3f 00 fe fe fe 00 3f 3f 00 fe fe fe fe     ????.....??.....
    4193:	00 3f 00 fe fe fe fe fe 3f 00 fe fe fe fe fe fe     .?......?.......
    41a3:	00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41b3:	fe fe fe fe fe fe fe 07 fe fe fe fe fe 07 07 07     ................
    41c3:	fe fe fe fe 07 07 07 07 fe fe fe 07 07 07 07 07     ................
    41d3:	fe fe 07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0     ................
    41e3:	fe fe 07 07 ff ff e0 e0 fe 07 07 07 ff ff ff ff     ................
    41f3:	07 fe fe fe fe fe fe fe 07 07 07 fe fe fe fe fe     ................
    4203:	07 07 07 07 fe fe fe fe 07 07 07 07 07 fe fe fe     ................
    4213:	07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0 fe fe     ................
    4223:	07 07 ff ff e0 e0 fe fe 07 07 ff ff ff ff 07 fe     ................
    4233:	fe fe fe fe fe fe fe c9 fe fe fe fe fe c9 c9 c9     ................
    4243:	fe fe fe fe c9 c9 c9 c9 fe fe fe c9 c9 c9 c9 c9     ................
    4253:	fe fe c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9     ................
    4263:	fe fe c9 c9 c9 ff ff c9 fe c9 c9 c9 c9 ff ff c9     ................
    4273:	c9 fe fe fe fe fe fe fe c9 c9 c9 fe fe fe fe fe     ................
    4283:	c9 c9 c9 c9 fe fe fe fe c9 c9 c9 c9 c9 fe fe fe     ................
    4293:	c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9 fe fe     ................
    42a3:	c9 ff ff c9 c9 c9 fe fe c9 ff ff c9 c9 c9 c9 fe     ................
    42b3:	fe fe fe fe fe fe 2a 2a fe fe fe fe fe fe fe 2a     ......**.......*
    42c3:	fe fe fe 2a 2a 2a 2a 2a fe fe 05 2a 2a 2a 2a 2a     ...*****...*****
    42d3:	fe fe 05 07 07 07 2a 2a fe 05 07 07 07 07 07 07     ......**........
    42e3:	05 05 07 07 07 ff ff 07 05 05 07 07 ff ff e0 e0     ................
    42f3:	2a fe fe fe fe fe fe fe 2a fe fe fe fe fe fe fe     *.......*.......
    4303:	2a 2a 2a 2a 2a fe fe fe 2a 2a 2a 2a 2a 07 fe fe     *****...*****...
    4313:	2a 2a 07 07 07 07 fe fe 07 07 07 07 07 07 07 fe     **..............
    4323:	07 07 07 ff ff 07 07 07 07 07 ff ff e0 e0 07 07     ................
    4333:	fe fe fe fe fe fe fe cf fe fe fe fe fe cf cf cf     ................
    4343:	fe fe fe fe cf cf cf cf fe fe fe cf cf cf cf cf     ................
    4353:	fe fe cf cf cf ff ff cf fe fe cf cf ff ff e0 e0     ................
    4363:	fe fe cf cf ff ff e0 e0 fe cf cf cf ff ff ff ff     ................
    4373:	cf fe fe fe fe fe fe fe cf cf cf fe fe fe fe fe     ................
    4383:	cf cf cf cf fe fe fe fe cf cf cf cf cf fe fe fe     ................
    4393:	cf cf cf ff ff cf fe fe cf cf ff ff e0 e0 fe fe     ................
    43a3:	cf cf ff ff e0 e0 fe fe cf cf ff ff ff ff cf fe     ................
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43f3:	00 3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 3f 3f     .??????..???????
    4403:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 3f 3f 3f     ..??????..??????
    4413:	fe fe 00 3f 3f 3f 3f 3f fe fe fe 00 3f 3f 3f 3f     ...?????....????
    4423:	fe fe fe fe 00 00 3f 3f fe fe fe fe fe fe 00 00     ......??........
	...
    443b:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00 fe     ???????.??????..
    444b:	3f 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 00 fe fe     ??????..?????...
    445b:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    446b:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    447b:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    448b:	3f 3f 3f 3f 00 00 00 fe 3f 3f 3f 3f 3f 3f 00 fe     ????....??????..
    449b:	3f 3f 3f 3f 3f 00 fe fe 3f 3f 3f 00 00 fe fe fe     ?????...???.....
    44ab:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44bb:	00 fe fe fe fe fe fe fe 3f 00 fe fe fe fe fe fe     ........?.......
    44cb:	3f 3f 00 fe fe fe fe fe 3f 3f 3f 00 fe fe fe fe     ??......???.....
    44db:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    44eb:	00 00 fe fe fe fe fe fe fe 07 07 07 07 ff ff 07     ................
    44fb:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    450b:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    451b:	fe 07 07 07 07 07 07 07 fe 07 07 fe 07 07 07 fe     ................
    452b:	fe 07 fe fe fe 07 07 fe 07 07 07 ff ff 07 07 fe     ................
    453b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    454b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    455b:	07 07 07 07 07 07 07 fe fe 07 07 07 fe 07 07 fe     ................
    456b:	fe 07 07 fe fe fe 07 fe fe c9 c9 c9 c9 c9 c9 c9     ................
    457b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9     ................
    458b:	fe c9 c9 ff ff c9 c9 ff fe c9 ff c9 c9 ff ff c9     ................
    459b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 fe c9 c9 c9 fe     ................
    45ab:	fe c9 fe fe fe c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45bb:	c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45cb:	ff c9 c9 ff ff c9 c9 fe c9 ff ff c9 c9 ff c9 fe     ................
    45db:	c9 c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 fe c9 c9 fe     ................
    45eb:	fe c9 c9 fe fe fe c9 fe 05 05 07 07 ff ff e0 e0     ................
    45fb:	fe 05 05 07 ff ff ff ff fe fe 05 07 07 ff ff 07     ................
    460b:	fe fe 05 05 07 07 07 07 fe fe fe 05 05 07 07 ff     ................
    461b:	fe fe fe 05 05 05 07 07 fe fe fe fe fe fe 05 05     ................
    462b:	fe fe fe fe fe fe 05 05 07 07 ff ff e0 e0 07 07     ................
    463b:	07 07 ff ff ff ff 07 fe 07 07 07 ff ff 07 fe fe     ................
    464b:	07 07 07 07 07 07 fe fe ff ff 07 07 07 fe fe fe     ................
    465b:	07 07 07 07 07 fe fe fe 07 07 fe fe fe fe fe fe     ................
    466b:	05 07 fe fe fe fe fe fe fe cf cf cf cf ff ff cf     ................
    467b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    468b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    469b:	fe cf cf cf cf cf cf cf fe cf cf fe cf cf cf fe     ................
    46ab:	fe cf fe fe fe cf cf fe cf cf cf ff ff cf cf fe     ................
    46bb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46cb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46db:	cf cf cf cf cf cf cf fe fe cf cf cf fe cf cf fe     ................
    46eb:	fe cf cf fe fe fe cf fe                             ........

000046f3 <blob1>:
    46f3:	02 02 08 09 15 16                                   ......

000046f9 <blob0>:
    46f9:	02 02 0c 0d 19 1a                                   ......

000046ff <run1>:
    46ff:	02 02 0a 0b 17 18                                   ......

00004705 <run0>:
    4705:	02 02 0a 0b 17 18                                   ......

0000470b <owl1>:
    470b:	02 02 08 09 15 16                                   ......

00004711 <owl0>:
    4711:	02 02 06 07 13 14                                   ......

00004717 <pac2>:
    4717:	02 02 04 05 0f 12                                   ......

0000471d <pac1>:
    471d:	02 02 02 03 0f 11                                   ......

00004723 <pac0>:
    4723:	02 02 00 01 0f 10                                   ......

00004729 <uMTiles>:
    4729:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4739:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4749:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    4759:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    4769:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4779:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4789:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    4799:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    47a9:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    47b9:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    47c9:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    47d9:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    47e9:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    47f9:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    4809:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    4819:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    4829:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    4839:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4849:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4859:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    4869:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    4879:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4889:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    4899:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    48a9:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    48b9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    48c9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    48d9:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    48e9:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    48f9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    4909:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    4919:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    4929:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    4939:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    4949:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4959:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4969:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4979:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4989:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4999:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    49a9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    49b9:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    49c9:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    49d9:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    49e9:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    49f9:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a09:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    4a19:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    4a29:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    4a39:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a49:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    4a59:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    4a69:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    4a79:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    4a89:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    4a99:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    4aa9:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    4ab9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4ac9:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    4ad9:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    4b29:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    4b39:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    4b49:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    4b59:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    4b69:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4b79:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4b89:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    4b99:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4ba9:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4bb9:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4bc9:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    4bd9:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4be9:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    4bf9:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    4c09:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    4c19:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    4c29:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    4c39:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    4c49:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    4c59:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    4c69:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    4c79:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    4c89:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4c99:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    4ca9:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    4cb9:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4cc9:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    4cd9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    4ce9:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    4cf9:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    4d09:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4d19:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4d29:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    4d39:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    4d49:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    4d59:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    4d69:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    4d79:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    4d89:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    4d99:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    4da9:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    4db9:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    4dc9:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    4dd9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    4de9:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    4e2d:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4e69:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    4e79:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    4e89:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    4e99:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    4ea9:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    4eb9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4ec9:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    4ed9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    4ee9:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    4ef9:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    4f09:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    4f19:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
    4f29:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    4f39:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    4f49:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    4f59:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    4f69:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    4f79:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    4f89:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    4f99:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    4fa9:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    4fb9:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    4fc9:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    4fd9:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    4fe9:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    4ff9:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5009:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5019:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5029:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5039:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    5049:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    5059:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    5069:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5079:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5089:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5099:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    50a9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    50b9:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    50c9:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    50d9:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    50e9:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    50f9:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    5109:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    5119:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5129:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5139:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5149:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    5159:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    5169:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5179:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    5189:	e4 e4 1a 63 64 6d 6d 76 e4 e4 1a 63 63 6d 64 6d     ...cdmmv...ccmdm
    5199:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    51a9:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    51b9:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    51c9:	6e 77 b7 b7 b7 77 b7 76 76 b7 b7 b7 b7 b7 6e 6e     nw...w.vv.....nn
    51d9:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    51e9:	1b 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6e 6d 76     ..mmvww...dcmnmv
    51f9:	1a 63 64 1a 64 6d 6d 6e 11 1a 63 64 6d 6e 6e 77     .cd.dmmn..cdmnnw
    5209:	e4 11 11 1a 63 1a 63 1b e4 e4 11 11 19 63 1b 64     ....c.c......c.d
    5219:	e4 e4 11 63 63 6c 6d 6d e4 e4 19 64 63 64 6e 6d     ...cclmm...dcdnm
    5229:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 6e 77 77     .......ww...vnww
    5239:	77 b7 b7 76 6e 77 76 76 77 b7 bf b7 77 77 77 77     w..vnwvvw...wwww
    5249:	64 64 64 63 64 64 64 64 65 63 6d 6d 6c 6d 6c 6c     dddcddddecmmlmll
    5259:	76 76 b7 b7 b7 77 77 76 6e b7 b7 b7 77 77 76 76     vv...wwvn...wwvv
    5269:	77 77 76 6e 6e 76 6e 6d 6e 6e 76 6e 6d 6d 64 64     wwvnnvnmnnvnmmdd
    5279:	6e 6e 6e 6d 6d 6d 64 6d 77 76 6e 76 64 6d 63 63     nnnmmmdmwvnvdmcc
    5289:	64 64 64 23 1a 1a 1a 11 63 63 63 1a 1a 19 11 08     ddd#....ccc.....
    5299:	76 76 6d 6d 6d 6d 1b 1a 6e 6d 76 6d 64 64 63 63     vvmmmm..nmvmddcc
    52a9:	1b 64 6c 1a 1a 63 11 11 63 64 63 11 11 1a 11 11     .dl..c..cdc.....
    52b9:	63 63 1a 11 11 11 11 11 63 1a 1a 1a 19 11 11 11     cc......c.......
    52c9:	11 11 11 11 11 11 11 e4 11 11 11 11 11 11 e4 e4     ................
    52d9:	63 1a 08 11 11 11 e4 e4 19 19 11 11 11 11 e4 e4     c...............
    52e9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    52f9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5309:	e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4 e4 e4 15 16     ................
    5319:	e4 e4 e4 e4 0c 15 16 1f e4 e4 e4 14 15 16 1f 67     ...............g
    5329:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5339:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5349:	14 14 14 e4 e4 e4 e4 e4 16 1d 14 14 14 e4 e4 e4     ................
    5359:	1f 1f 16 15 0c e4 e4 e4 5f 67 66 15 14 14 e4 e4     ........_gf.....
    5369:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 15 15 15     ................
    5379:	e4 e4 14 14 16 16 1f 1f e4 14 15 1d 1f 1f 67 67     ..............gg
    5389:	e4 15 16 1e 1f 17 5f 67 14 15 16 17 1f 67 67 1f     ......_g.....gg.
    5399:	0c 1d 1e 17 17 6e 6f 1f 0c 5d 6e 17 17 6e 67 1f     .....no..]n..ng.
    53a9:	e4 e4 e4 e4 e4 e4 e4 e4 14 14 e4 e4 e4 e4 e4 e4     ................
    53b9:	16 0d 0c e4 e4 e4 e4 e4 17 16 15 14 e4 e4 e4 e4     ................
    53c9:	1f 77 5e 15 14 e4 e4 e4 1f 77 66 16 15 14 e4 e4     .w^......wf.....
    53d9:	1f 1f 1f 17 1d 1d 0c e4 1f 17 17 1f 5e 15 14 e4     ............^...
    53e9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    53f9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 74 74     ..............tt
    5409:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4 74 74 74     .....ttt.....ttt
    5419:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 74 74 74 74 74     .....ttt...ttttt
    5429:	e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 74 74 e4 e4     ........t...tt..
    5439:	74 e4 74 74 74 74 e4 74 74 74 e4 e4 74 74 74 e4     t.tttt.ttt..ttt.
    5449:	74 e4 74 74 74 74 74 74 74 74 74 74 74 74 74 74     t.tttttttttttttt
    5459:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    5469:	e4 e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 e4 e4 e4     .........t......
    5479:	e4 74 e4 e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4     .t......ttt.....
    5489:	74 74 74 e4 e4 e4 74 e4 74 74 74 74 e4 74 e4 e4     ttt...t.tttt.t..
    5499:	74 74 74 e4 74 74 74 e4 e4 74 74 74 74 74 74 e4     ttt.ttt..tttttt.
    54a9:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    54b9:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    54c9:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    54d9:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    54e9:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    54f9:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    5509:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    5519:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    5529:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 00 ff     ................
    5539:	e4 e4 e4 e4 e4 00 ff ff e4 e4 e4 e4 00 ff ff ff     ................
    5549:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 ff ff 3a 3a     .....:.:......::
    5559:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    5569:	00 e4 e4 e4 e4 e4 e4 e4 3a 00 e4 e4 e4 e4 e4 e4     ........:.......
    5579:	3a 3a 00 e4 e4 e4 e4 e4 3a 3a 3a 00 e4 e4 e4 e4     ::......:::.....
    5589:	00 3a 00 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     .:.:....:.::....
    5599:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    55a9:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    55b9:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    55c9:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    55d9:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    55e9:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    55f9:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    5609:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    5619:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    5629:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    5639:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    5649:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5659:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    5669:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    5679:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5689:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    5699:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    56a9:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    56b9:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    56c9:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    56d9:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    56e9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    56f9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5709:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    5719:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    5729:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    5739:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    5749:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    5759:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    5769:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    5779:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    5789:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    5799:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    57a9:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    57b9:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    57c9:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    57d9:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    57e9:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    57f9:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    5809:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    5819:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    5829:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5839:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    5849:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5859:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    5869:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5879:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    5889:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5899:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    58a9:	e4 e4 e4 14 66 1f 1f 67 e4 e4 14 16 27 1f 1f 1f     ....f..g....'...
    58b9:	e4 e4 15 1e 17 1f 5f 67 e4 14 15 27 17 17 5f be     ......_g...'.._.
    58c9:	e4 14 16 1e 1f 1f 1f 6e e4 14 16 1e 1e 67 17 16     .......n.....g..
    58d9:	e4 14 15 1e 16 1e 16 16 e4 e4 14 15 16 16 16 1e     ................
    58e9:	1f 6e 6e 16 1c 0c e4 e4 1f 1f 1e 16 1d 14 e4 e4     .nn.............
    58f9:	1f 17 17 16 15 14 14 e4 1f 17 1e 15 14 14 e4 e4     ................
    5909:	1f 16 1d 15 14 14 e4 e4 17 16 15 14 0c e4 e4 e4     ................
    5919:	16 15 0d 14 e4 e4 e4 e4 15 0c 14 5c e4 e4 e4 e4     ...........\....
    5929:	0c 1d 66 17 1f 1f 1f 1f 14 15 16 1f 1f 1f 1f 1f     ..f.............
    5939:	e4 15 16 17 1f 1f 1f 1f e4 14 15 16 1e 1e 1f 1f     ................
    5949:	e4 e4 15 16 16 1f 1f 1f e4 e4 14 15 16 17 1f 1f     ................
    5959:	e4 5b 64 14 15 16 16 1e e4 5b 6d 64 14 14 14 15     .[d......[md....
    5969:	5f 1f 17 27 1e 0d 14 e4 6f 6f 17 17 1e 15 14 14     _..'....oo......
    5979:	6f 6e 17 17 6e 65 0c 14 1f 1f 1f 17 6e 65 0c 14     on..ne......ne..
    5989:	17 17 1f 17 16 15 14 14 1e 17 1e 1e 16 15 14 e4     ................
    5999:	1e 16 1e 16 15 14 14 e4 16 16 16 15 14 14 e4 e4     ................
    59a9:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    59b9:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 74 74 e4 74     .....ttt....tt.t
    59c9:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    59d9:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    59e9:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    59f9:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    5a09:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    5a19:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    5a29:	74 74 74 74 74 74 e4 e4 74 74 74 74 74 e4 e4 e4     tttttt..ttttt...
    5a39:	74 74 74 74 74 e4 74 e4 74 74 74 74 74 74 e4 e4     ttttt.t.tttttt..
    5a49:	74 74 74 74 74 74 74 e4 74 74 74 74 74 74 e4 e4     ttttttt.tttttt..
    5a59:	74 74 74 74 74 74 e4 74 74 74 74 74 74 74 74 e4     tttttt.tttttttt.
    5a69:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5a79:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    5a89:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    5a99:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5aa9:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    5ab9:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    5ac9:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    5ad9:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5ae9:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    5af9:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 3a 3a 3a ff     .....:.:....:::.
    5b09:	e4 e4 e4 e4 00 3a 3a 3a e4 e4 e4 e4 e4 00 3a 3a     .....:::......::
    5b19:	e4 e4 e4 e4 e4 e4 00 3a e4 e4 e4 e4 e4 e4 e4 00     .......:........
    5b29:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    5b39:	3a 00 3a 3a 00 e4 e4 e4 00 ff 00 3a 00 e4 e4 e4     :.::.......:....
    5b49:	3a 3a 3a 00 e4 e4 e4 e4 3a 3a 00 e4 e4 e4 e4 e4     :::.....::......
    5b59:	3a 00 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     :...............
    5b69:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    5b79:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    5b89:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    5b99:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    5ba9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    5bb9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    5bc9:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    5bd9:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    5be9:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    5bf9:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5c09:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    5c19:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    5c29:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c39:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c49:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c59:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c69:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5c79:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    5c89:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    5c99:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5ca9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5cb9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5cc9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5cd9:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    5ce9:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5cf9:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5d09:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    5d19:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5d29:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5d39:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5d49:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    5d59:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5d69:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    5d79:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    5d89:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    5d99:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5da9:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    5db9:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    5dc9:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    5dd9:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    5de9:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5df9:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    5e09:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    5e19:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    5e29:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5e39:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    5e49:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    5e59:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    5e69:	e4 e4 e4 14 15 15 15 14 e4 e4 e4 e4 14 14 14 14     ................
    5e79:	e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4 5b     .......[.......[
    5e89:	e4 14 0c 14 e4 e4 e4 5b 14 16 1e 5e 1c e4 e4 5b     .......[...^...[
    5e99:	1e 1f 67 67 15 0c e4 5b 16 67 1f 1e 15 0c e4 5b     ..gg...[.g.....[
    5ea9:	14 14 5c 64 64 e4 e4 e4 14 64 6d 6d 64 13 e4 e4     ..\dd....dmmd...
    5eb9:	64 6d 76 76 1c 15 5e 14 6d 6e bf 65 0c 67 67 1e     dmvv..^.mn.e.gg.
    5ec9:	6d 76 6e 0c 16 67 67 1f 6d 6d 65 15 1f 17 67 1f     mvn..gg.mme...g.
    5ed9:	65 6d 5c 15 1e 17 1f 1f 64 6e 6d 14 16 1f 1f 1f     em\.....dnm.....
    5ee9:	5b 64 6d 6d 64 64 5c 14 5b 64 6d 6e 76 6d 6d 63     [dmmdd\.[dmnvmmc
    5ef9:	14 5c 6d 6e 77 76 76 64 15 14 6d 76 77 76 76 64     .\mnwvvd..mvwvvd
    5f09:	1f 1d 1d b7 77 6e 6e 6d 67 1e 0c 6e bf 76 6d 65     ....wnnmg..n.vme
    5f19:	67 1e 0c 65 bf bf 6d 64 16 1d 14 65 bf 77 6e 64     g..e..md...e.wnd
    5f29:	14 15 14 14 0c e4 e4 e4 13 0c 14 e4 e4 e4 e4 e4     ................
    5f39:	e4 e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     ........[.......
    5f49:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    5f59:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    5f69:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 74 74 74 e4 74     ...ttttt...ttt.t
    5f79:	e4 e4 e4 e4 74 e4 74 74 e4 e4 e4 74 74 e4 e4 74     ....t.tt...tt..t
    5f89:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    5f99:	e4 e4 e4 e4 e4 74 e4 74 e4 e4 e4 e4 e4 e4 e4 74     .....t.t.......t
    5fa9:	74 74 74 1d 74 74 74 74 1d 74 74 1d 74 74 74 74     ttt.tttt.tt.tttt
    5fb9:	1c 1d 1d 1d 74 74 74 1d 74 1c 1c 1c 74 74 74 1c     ....ttt.t...ttt.
    5fc9:	74 1d 1d 1c 1d 1c 1c 1c 74 74 74 1c 1c 1c 1c 1c     t.......ttt.....
    5fd9:	e4 74 74 1d 1c 1c 1c 74 74 e4 e4 74 1c 1c 1c e4     .tt....tt..t....
    5fe9:	74 1d 1d 74 74 74 74 74 1d 1d 1d 74 74 74 74 e4     t..ttttt...tttt.
    5ff9:	1c 74 74 74 74 e4 74 e4 74 74 74 74 e4 e4 74 e4     .tttt.t.tttt..t.
    6009:	1c 1c 1c 74 74 e4 e4 e4 1d 74 74 74 74 e4 e4 e4     ...tt....tttt...
    6019:	e4 74 74 e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4     .tt......tt.....
	...
    6031:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    6041:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    6051:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6061:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    6071:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6081:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6091:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    60a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    60b1:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    60c1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    60d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    60e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    60f1:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6101:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6111:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6121:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6131:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 00     ................
    6141:	e4 e4 e4 e4 e4 00 00 3f e4 e4 e4 e4 00 3f 3f 3f     .......?.....???
    6151:	e4 00 00 00 3f 3f 00 3f 00 3f 3f 3f 3f 3f 3f 3f     ....??.?.???????
    6161:	e4 00 00 00 00 00 00 00 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6171:	e4 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    6181:	3f 00 00 e4 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ?.......???.....
    6191:	3f 00 3f 3f 00 00 00 e4 3f 3f 3f 3f 3f 3f 3f 00     ?.??....???????.
    61a1:	00 00 00 00 00 00 00 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    61b1:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    61c1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    61d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    61e1:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    61f1:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    6201:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6211:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6221:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6231:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    6241:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6251:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6261:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    6271:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    6281:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6291:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62a1:	e4 e4 e4 e4 e4 e4 e4 e4 6e 6e 6d 64 6c 6d 63 63     ........nnmdlmcc
    62b1:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    62c1:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    62d1:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    62e1:	76 6d 6c 6d 6d 6d 64 63 63 11 1a 19 11 11 e4 e4     vmlmmmdcc.......
    62f1:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6301:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    6311:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6321:	23 1a 11 19 11 09 e4 e4 e4 e4 1a 63 63 6d 6d 6d     #..........ccmmm
    6331:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    6341:	e4 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6d 6d 76     ..mmvww...dcmmmv
    6351:	1a 63 1b 64 6d 64 76 76 11 1a 64 63 64 6d 76 76     .c.dmdvv..dcdmvv
    6361:	1a 1a 1b 64 6d 6e 6e 76 6e 77 b7 b7 77 77 77 6e     ...dmnnvnw..wwwn
    6371:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    6381:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 76 77 76     .......ww...vvwv
    6391:	77 b7 b7 b7 b7 6e 6e 76 6e b7 b7 77 76 6e 6e 76     w....nnvn..wvnnv
    63a1:	77 b7 b7 77 76 77 77 76 6e 6e 6d 64 64 63 63 63     w..wvwwvnnmddccc
    63b1:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    63c1:	77 77 76 6e 76 76 6e 6d 6e 6e 6e 6d 6d 64 64 63     wwvnvvnmnnnmmddc
    63d1:	6e 6e 6d 6d 64 6d 64 64 76 6e 6e 6e 6d 64 64 63     nnmmdmddvnnnmddc
    63e1:	6e 6e 6d 76 6d 63 63 6c 11 1a 19 19 11 11 e4 e4     nnmvmccl........
    63f1:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    6401:	1b 6c 6d 19 1a 63 11 e4 64 63 1a 11 11 11 11 11     .lm..c..dc......
    6411:	64 1a 1b 1a 19 11 11 11 1a 63 1a 11 11 11 11 11     d........c......
    6421:	63 1b 1a 11 19 11 11 11 15 1e 16 15 14 13 e4 e4     c...............
    6431:	14 14 14 0c 1c 5b e4 e4 e4 e4 5b 5c 64 64 e4 e4     .....[....[\dd..
    6441:	e4 e4 5b 6d 6e 64 5b e4 e4 e4 5b 64 6e 65 5b e4     ..[mnd[...[dne[.
    6451:	e4 e4 e4 5c 6d 65 5b e4 e4 e4 e4 5b 65 6d 5b e4     ...\me[....[em[.
    6461:	e4 e4 e4 e4 64 65 5b e4 5c 6d 76 65 0c 16 1e 16     ....de[.\mve....
    6471:	5b 64 76 76 5c 14 14 14 5b 64 6d 6e 64 5c 5c 5c     [dvv\...[dmnd\\\
    6481:	e4 5c 6d 65 5b 6d 76 6d e4 5b 64 64 5b 6d 76 6e     .\me[mvm.[dd[mvn
    6491:	e4 e4 5c 64 64 64 6e 6e e4 e4 5b 65 64 5b 6d 65     ..\dddnn..[ed[me
    64a1:	e4 e4 e4 64 6d 5c 6d 64 0d 0c 1c 76 bf 76 6e 64     ...dm\md...v.vnd
    64b1:	0c 14 6d 77 76 6e 6d 5b 5b 6d 76 76 6d 6d 64 5b     ..mwvnm[[mvvmmd[
    64c1:	64 6d bf 76 6d 64 5c e4 64 64 76 76 65 64 5b e4     dm.vmd\.ddvved[.
    64d1:	5b 64 76 76 6d 5b e4 e4 5b 6d 76 6e 65 5b e4 e4     [dvvm[..[mvne[..
    64e1:	64 6e 76 6d 64 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     dnvmd...........
    64f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff e4 e4     ................
    6501:	e4 ff e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4     ................
    6511:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6521:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6531:	e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6541:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6551:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6561:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6571:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6581:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6591:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    65a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    65b1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    65c1:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    65d1:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    65e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    65f1:	e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    6601:	e4 ff e4 e4 ff e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    6611:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6621:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    6631:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    6641:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6651:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6661:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4     ................
    6671:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6681:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6691:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    66a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    66b1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    66c1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    66d1:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    66e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    66f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6701:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6711:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6721:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6731:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6741:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6751:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4     ................
    6761:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6771:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6781:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6791:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    67a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    67b1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    67c1:	e4 e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff     ................
    67d1:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    67e1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    67f1:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6801:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6811:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    6821:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    6831:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff     ................
    6841:	e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 ff e4 e4     ................
    6851:	e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff     ................
    6861:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    6871:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6881:	e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6891:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    68a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4 ff     ................
    68b1:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    68c1:	ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    68d1:	ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 e4 ff     ................
    68e1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4     ................
    68f1:	e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff e4     ................
    6901:	e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff     ................
    6911:	e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 e4     ................
    6921:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    6931:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    6941:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    6951:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    6961:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    6971:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4     ................
    6981:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6991:	ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    69a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    69b1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    69c1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    69d1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    69e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 ff     ................
    69f1:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    6a01:	e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6a11:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    6a21:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    6a31:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6a41:	ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 ff e4 e4     ................
    6a51:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff     ................
    6a61:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6a71:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6a81:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6a91:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    6aa1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ab1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6ac1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6ad1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ae1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff     ................
    6af1:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    6b01:	ff e4 e4 ff ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    6b11:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff     ................
    6b21:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff ff ff ff ff     ................
    6b31:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6b41:	ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6b51:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 ff e4 e4     ................
    6b61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    6b71:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6b81:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 ff     ................
    6b91:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6ba1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    6bb1:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4     ................
    6bc1:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6bd1:	ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4     ................
    6be1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff ff     ................
    6bf1:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    6c01:	e4 ff e4 ff e4 e4 ff e4 ff ff ff ff ff e4 ff e4     ................
    6c11:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    6c21:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    6c31:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 ff     ................
    6c41:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6c51:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    6c61:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6c71:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6c81:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6c91:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6ca1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff     ................
    6cb1:	ff e4 e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff     ................
    6cc1:	ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    6cd1:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    6ce1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    6cf1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6d01:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    6d11:	e4 e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    6d21:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff     ................
    6d31:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6d41:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6d51:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6d61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    6d71:	e4 ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff     ................
    6d81:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6d91:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6da1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    6db1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6dc1:	ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6dd1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    6de1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 ff     ................
    6df1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6e01:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    6e11:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    6e21:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff ff     ................
    6e31:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6e41:	ff ff ff e4 e4 ff ff ff e4 ff e4 e4 e4 ff e4 e4     ................
    6e51:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    6e61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    6e71:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6e81:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    6e91:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    6ea1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4 ff     ................
    6eb1:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    6ec1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff ff     ................
    6ed1:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    6ee1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4     ................
    6ef1:	e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff     ................
    6f01:	ff e4 e4 ff ff ff ff e4 ff ff e4 ff e4 ff e4 e4     ................
    6f11:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    6f21:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    6f31:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6f41:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6f51:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6f61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f71:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4     ................
    6f81:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    6f91:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 0f 0f 0f e4 e4 e4     ................
    6fa1:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fb1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fc1:	e4 ff e4 e4 e4 e4 e4 e4 e4 f6 f6 e4 e4 e4 e4 e4     ................
    6fd1:	e4 ad ad f6 e4 e4 e4 e4 e4 ad a4 ad f6 e4 e4 e4     ................
    6fe1:	e4 ad a4 a4 ad f6 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    6ff1:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7001:	ff e4 e4 ff ff e4 e4 ff ff e4 e4 e4 ff e4 ff ff     ................
    7011:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4     ................
    7021:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7031:	ff e4 e4 e4 ff ff e4 ff e4 ff e4 e4 ff e4 ff e4     ................
    7041:	e4 ff e4 e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4     ................
    7051:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7061:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7071:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7081:	ff e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7091:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    70a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4     ................
    70b1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    70c1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    70d1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4     ................
    70e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    70f1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7101:	e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    7111:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7121:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 ff ff ff ff     ................
    7131:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7141:	ff ff e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4     ................
    7151:	e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4     ................
    7161:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7171:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7181:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7191:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    71a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff e4     ................
    71b1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    71c1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    71d1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    71e1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff ff     ................
    71f1:	ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7201:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7211:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7221:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff e4 e4 ff ff     ................
    7231:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7241:	ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7251:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 e4 ff ff     ................
    7261:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7271:	e4 ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7281:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7291:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    72a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    72b1:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    72c1:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    72d1:	e4 e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    72e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    72f1:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7301:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7311:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7321:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7331:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7341:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7351:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    7361:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff e4     ................
    7371:	e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff     ................
    7381:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4     ................
    7391:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4     ................
    73a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4     ................
    73b1:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4     ................
    73c1:	e4 ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 ff     ................
    73d1:	ff ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4     ................
    73e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    73f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7401:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7411:	e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7421:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff     ................
    7431:	e4 ff e4 e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7441:	ff e4 ff e4 e4 e4 ff e4 ff ff ff ff e4 e4 ff e4     ................
    7451:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    7461:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    7471:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7481:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7491:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    74a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    74b1:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4     ................
    74c1:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff ff ff     ................
    74d1:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    74e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4     ................
    74f1:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7501:	ff e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    7511:	e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    7521:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    7531:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7541:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7551:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7561:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff e4 ff e4     ................
    7571:	ff ff e4 e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7581:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 ff ff e4 ff e4     ................
    7591:	ff e4 e4 ff ff e4 e4 e4 ff e4 e4 e4 ff e4 ff e4     ................
    75a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    75b1:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f 0f e4 e4     ................
    75c1:	e4 e4 0f 0c 0c 0f e4 e4 e4 0f 0f 0c 0c 0f 0f e4     ................
    75d1:	e4 0f 0c 0c 0c 0c 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    75e1:	0f 0f 0c 0c 0c 0c 0f 0f e4 ad a4 a4 a4 ad f6 e4     ................
    75f1:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7601:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7611:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
	...

00007629 <spike1>:
    7629:	01 02 a2 bb                                         ....

0000762d <spike0>:
    762d:	01 02 a1 ba                                         ....

00007631 <congra0>:
    7631:	0a 01 b0 b1 b2 b3 b4 b5 b6 b7 b8 b9                 ............

0000763d <timeup0>:
    763d:	06 01 aa ab ac ad ae af                             ........

00007645 <over0>:
    7645:	07 01 a3 a4 a5 a6 a7 a8 a9                          .........

0000764e <press0>:
    764e:	08 01 9b 9c 97 89 9d 9e 9f a0                       ..........

00007658 <time0>:
    7658:	03 01 98 99 9a                                      .....

0000765d <live0>:
    765d:	03 01 96 8c 97                                      .....

00007662 <get0>:
    7662:	07 01 8f 90 91 92 93 94 95                          .........

0000766b <x0>:
    766b:	01 01 8e                                            ...

0000766e <level0>:
    766e:	04 01 8a 8b 8c 8d                                   ......

00007674 <bonus0>:
    7674:	04 01 86 87 88 89                                   ......

0000767a <score0>:
    767a:	04 01 82 83 84 85                                   ......

00007680 <nm>:
    7680:	01 01 81                                            ...

00007683 <n9>:
    7683:	01 01 80                                            ...

00007686 <n8>:
    7686:	01 01 7f                                            ...

00007689 <n7>:
    7689:	01 01 7e                                            ..~

0000768c <n6>:
    768c:	01 01 7d                                            ..}

0000768f <n5>:
    768f:	01 01 7c                                            ..|

00007692 <n4>:
    7692:	01 01 7b                                            ..{

00007695 <n3>:
    7695:	01 01 7a                                            ..z

00007698 <n2>:
    7698:	01 01 79                                            ..y

0000769b <n1>:
    769b:	01 01 78                                            ..x

0000769e <n0>:
    769e:	01 01 77                                            ..w

000076a1 <nb>:
    76a1:	01 01 09                                            ...

000076a4 <bridge3>:
    76a4:	01 01 67                                            ..g

000076a7 <bridge2>:
    76a7:	01 01 66                                            ..f

000076aa <bridge1>:
    76aa:	01 01 65                                            ..e

000076ad <bridge0>:
    76ad:	01 01 64                                            ..d

000076b0 <mush3>:
    76b0:	02 02 5f 60 76 09                                   .._`v.

000076b6 <mush2>:
    76b6:	02 02 5d 5e 74 75                                   ..]^tu

000076bc <mush1>:
    76bc:	02 02 31 32 48 49                                   ..12HI

000076c2 <mush0>:
    76c2:	02 02 2f 30 46 47                                   ../0FG

000076c8 <tube5>:
    76c8:	02 02 57 58 6e 6f                                   ..WXno

000076ce <tube4>:
    76ce:	02 02 29 2a 40 41                                   ..)*@A

000076d4 <tube3>:
    76d4:	02 02 5b 5c 72 73                                   ..[\rs

000076da <tube2>:
    76da:	02 02 59 5a 70 71                                   ..YZpq

000076e0 <tube1>:
    76e0:	02 02 2d 2e 44 45                                   ..-.DE

000076e6 <tube0>:
    76e6:	02 02 2b 2c 42 43                                   ..+,BC

000076ec <cloud3>:
    76ec:	02 02 55 56 6c 6d                                   ..UVlm

000076f2 <cloud2>:
    76f2:	02 02 53 54 6a 6b                                   ..STjk

000076f8 <cloud1>:
    76f8:	02 02 28 09 3e 3f                                   ..(.>?

000076fe <cloud0>:
    76fe:	02 02 26 27 3c 3d                                   ..&'<=

00007704 <bush4>:
    7704:	02 02 4c 09 63 09                                   ..L.c.

0000770a <bush3>:
    770a:	02 02 09 09 35 09                                   ....5.

00007710 <bush2>:
    7710:	02 02 4a 4b 61 62                                   ..JKab

00007716 <bush1>:
    7716:	02 02 09 09 33 34                                   ....34

0000771c <blue>:
    771c:	01 01 09                                            ...

0000771f <banana2>:
    771f:	02 01 68 69                                         ..hi

00007723 <banana>:
    7723:	02 02 3a 3b 51 52                                   ..:;QR

00007729 <diamond0>:
    7729:	02 02 38 39 4f 50                                   ..89OP

0000772f <block3>:
    772f:	02 02 08 08 19 19                                   ......

00007735 <block2>:
    7735:	02 02 36 37 4d 4e                                   ..67MN

0000773b <door3>:
    773b:	02 02 0f 10 0f 1f                                   ......

00007741 <door2>:
    7741:	02 02 0e 0f 1e 0f                                   ......

00007747 <door1>:
    7747:	02 02 0c 0d 1c 1d                                   ......

0000774d <door0>:
    774d:	02 02 0a 0b 1a 1b                                   ......

00007753 <block5>:
    7753:	02 02 09 08 09 19                                   ......

00007759 <block4>:
    7759:	02 02 08 09 19 09                                   ......

0000775f <ground3>:
    775f:	02 03 07 06 18 17 24 23                             ......$#

00007767 <ground2>:
    7767:	02 03 07 05 18 16 24 25                             ......$%

0000776f <ground1>:
    776f:	02 03 04 06 15 17 22 23                             ......"#

00007777 <ground>:
    7777:	02 03 04 05 15 16 20 21                             ...... !

0000777f <block1>:
    777f:	02 02 02 03 13 14                                   ......

00007785 <block0>:
    7785:	02 02 00 01 11 12                                   ......

0000778b <bigblue0>:
    778b:	02 02 09 09 09 09 00                                .......

00007792 <__ctors_end>:
    7792:	11 24       	eor	r1, r1
    7794:	1f be       	out	0x3f, r1	; 63
    7796:	cf ef       	ldi	r28, 0xFF	; 255
    7798:	d0 e1       	ldi	r29, 0x10	; 16
    779a:	de bf       	out	0x3e, r29	; 62
    779c:	cd bf       	out	0x3d, r28	; 61

0000779e <__do_copy_data>:
    779e:	11 e0       	ldi	r17, 0x01	; 1
    77a0:	a0 e0       	ldi	r26, 0x00	; 0
    77a2:	b1 e0       	ldi	r27, 0x01	; 1
    77a4:	e6 ea       	ldi	r30, 0xA6	; 166
    77a6:	fe ec       	ldi	r31, 0xCE	; 206
    77a8:	02 c0       	rjmp	.+4      	; 0x77ae <__do_copy_data+0x10>
    77aa:	05 90       	lpm	r0, Z+
    77ac:	0d 92       	st	X+, r0
    77ae:	a6 30       	cpi	r26, 0x06	; 6
    77b0:	b1 07       	cpc	r27, r17
    77b2:	d9 f7       	brne	.-10     	; 0x77aa <__do_copy_data+0xc>

000077b4 <__do_clear_bss>:
    77b4:	2a e0       	ldi	r18, 0x0A	; 10
    77b6:	a6 e0       	ldi	r26, 0x06	; 6
    77b8:	b1 e0       	ldi	r27, 0x01	; 1
    77ba:	01 c0       	rjmp	.+2      	; 0x77be <.do_clear_bss_start>

000077bc <.do_clear_bss_loop>:
    77bc:	1d 92       	st	X+, r1

000077be <.do_clear_bss_start>:
    77be:	a5 32       	cpi	r26, 0x25	; 37
    77c0:	b2 07       	cpc	r27, r18
    77c2:	e1 f7       	brne	.-8      	; 0x77bc <.do_clear_bss_loop>

000077c4 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    77c4:	14 be       	out	0x34, r1	; 52
    77c6:	0f b6       	in	r0, 0x3f	; 63
    77c8:	f8 94       	cli
    77ca:	a8 95       	wdr
    77cc:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    77d0:	88 61       	ori	r24, 0x18	; 24
    77d2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    77d6:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    77da:	0f be       	out	0x3f, r0	; 63

000077dc <Initialize>:
    77dc:	f8 94       	cli
    77de:	80 e7       	ldi	r24, 0x70	; 112
    77e0:	90 e0       	ldi	r25, 0x00	; 0
    77e2:	42 ea       	ldi	r20, 0xA2	; 162
    77e4:	50 e0       	ldi	r21, 0x00	; 0
    77e6:	fc 01       	movw	r30, r24
    77e8:	25 91       	lpm	r18, Z+
    77ea:	34 91       	lpm	r19, Z
    77ec:	f9 01       	movw	r30, r18
    77ee:	ff 27       	eor	r31, r31
    77f0:	30 83       	st	Z, r19
    77f2:	02 96       	adiw	r24, 0x02	; 2
    77f4:	48 17       	cp	r20, r24
    77f6:	59 07       	cpc	r21, r25
    77f8:	b1 f7       	brne	.-20     	; 0x77e6 <Initialize+0xa>
    77fa:	0e 94 e6 41 	call	0x83cc	; 0x83cc <isEepromFormatted>
    77fe:	81 11       	cpse	r24, r1
    7800:	02 c0       	rjmp	.+4      	; 0x7806 <Initialize+0x2a>
    7802:	0e 94 c4 41 	call	0x8388	; 0x8388 <FormatEeprom>
    7806:	81 e0       	ldi	r24, 0x01	; 1
    7808:	80 93 8e 08 	sts	0x088E, r24	; 0x80088e <tr4_barrel_lo>
    780c:	80 93 8f 08 	sts	0x088F, r24	; 0x80088f <tr4_barrel_hi>
    7810:	80 93 8d 08 	sts	0x088D, r24	; 0x80088d <tr4_params>
    7814:	10 92 7a 08 	sts	0x087A, r1	; 0x80087a <mixer>
    7818:	10 92 80 08 	sts	0x0880, r1	; 0x800880 <tr2_vol>
    781c:	10 92 86 08 	sts	0x0886, r1	; 0x800886 <tr3_vol>
    7820:	10 92 8c 08 	sts	0x088C, r1	; 0x80088c <tr4_vol>
    7824:	10 92 92 08 	sts	0x0892, r1	; 0x800892 <tr5_vol>
    7828:	10 92 64 08 	sts	0x0864, r1	; 0x800864 <sync_phase>
    782c:	10 92 66 08 	sts	0x0866, r1	; 0x800866 <sync_flags>
    7830:	92 e1       	ldi	r25, 0x12	; 18
    7832:	90 93 65 08 	sts	0x0865, r25	; 0x800865 <sync_pulse>
    7836:	90 ee       	ldi	r25, 0xE0	; 224
    7838:	90 93 6c 08 	sts	0x086C, r25	; 0x80086c <render_lines_count>
    783c:	98 e1       	ldi	r25, 0x18	; 24
    783e:	90 93 6b 08 	sts	0x086B, r25	; 0x80086b <first_render_line>
    7842:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <joypad1_status_hi+0x1>
    7846:	10 92 6f 08 	sts	0x086F, r1	; 0x80086f <joypad1_status_hi>
    784a:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <joypad2_status_hi+0x1>
    784e:	10 92 73 08 	sts	0x0873, r1	; 0x800873 <joypad2_status_hi>
    7852:	80 93 79 08 	sts	0x0879, r24	; 0x800879 <sound_enabled>
    7856:	0e 94 ae 4d 	call	0x9b5c	; 0x9b5c <InitializeVideoMode>
    785a:	78 94       	sei
    785c:	0e 94 18 4e 	call	0x9c30	; 0x9c30 <DisplayLogo>
    7860:	0e 94 2b 65 	call	0xca56	; 0xca56 <main>
    7864:	0c 94 51 67 	jmp	0xcea2	; 0xcea2 <_exit>

00007868 <__bad_interrupt>:
    7868:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000786c <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    786c:	03 e8       	ldi	r16, 0x83	; 131
    786e:	0a 95       	dec	r16
    7870:	f1 f7       	brne	.-4      	; 0x786e <sub_video_mode3+0x2>
    7872:	00 c0       	rjmp	.+0      	; 0x7874 <sub_video_mode3+0x8>
    7874:	00 91 50 08 	lds	r16, 0x0850	; 0x800850 <user_ram_tiles_c>
    7878:	ee ef       	ldi	r30, 0xFE	; 254
    787a:	f7 e0       	ldi	r31, 0x07	; 7
    787c:	23 e0       	ldi	r18, 0x03	; 3
    787e:	02 9f       	mul	r16, r18
    7880:	e0 0d       	add	r30, r0
    7882:	f1 1d       	adc	r31, r1
    7884:	20 91 4f 08 	lds	r18, 0x084F	; 0x80084f <free_tile_index>
    7888:	3c e3       	ldi	r19, 0x3C	; 60
    788a:	32 1b       	sub	r19, r18
    788c:	30 0f       	add	r19, r16
    788e:	20 17       	cp	r18, r16
    7890:	51 f0       	breq	.+20     	; 0x78a6 <no_ramtiles>
    7892:	00 00       	nop
	...

00007896 <upd_loop>:
    7896:	a1 91       	ld	r26, Z+
    7898:	b1 91       	ld	r27, Z+
    789a:	1c 91       	ld	r17, X
    789c:	11 93       	st	Z+, r17
    789e:	0c 93       	st	X, r16
    78a0:	03 95       	inc	r16
    78a2:	02 17       	cp	r16, r18
    78a4:	c0 f3       	brcs	.-16     	; 0x7896 <upd_loop>

000078a6 <no_ramtiles>:
    78a6:	13 e0       	ldi	r17, 0x03	; 3
    78a8:	1a 95       	dec	r17
    78aa:	f1 f7       	brne	.-4      	; 0x78a8 <no_ramtiles+0x2>
    78ac:	00 c0       	rjmp	.+0      	; 0x78ae <no_ramtiles+0x8>
    78ae:	3a 95       	dec	r19
    78b0:	d1 f7       	brne	.-12     	; 0x78a6 <no_ramtiles>
    78b2:	c0 e0       	ldi	r28, 0x00	; 0
    78b4:	db e0       	ldi	r29, 0x0B	; 11
    78b6:	20 91 60 08 	lds	r18, 0x0860	; 0x800860 <screen_scrollX>
    78ba:	92 2f       	mov	r25, r18
    78bc:	28 7f       	andi	r18, 0xF8	; 248
    78be:	c2 0f       	add	r28, r18
    78c0:	6e 01       	movw	r12, r28
    78c2:	00 91 61 08 	lds	r16, 0x0861	; 0x800861 <screen_scrollY>
    78c6:	60 2f       	mov	r22, r16
    78c8:	06 95       	lsr	r16
    78ca:	06 95       	lsr	r16
    78cc:	06 95       	lsr	r16
    78ce:	10 91 62 08 	lds	r17, 0x0862	; 0x800862 <screen_scrollHeight>
    78d2:	10 1b       	sub	r17, r16
    78d4:	f1 2e       	mov	r15, r17
    78d6:	10 2f       	mov	r17, r16
    78d8:	06 95       	lsr	r16
    78da:	06 95       	lsr	r16
    78dc:	06 95       	lsr	r16
    78de:	d0 0f       	add	r29, r16
    78e0:	17 70       	andi	r17, 0x07	; 7
    78e2:	c1 0f       	add	r28, r17
    78e4:	67 70       	andi	r22, 0x07	; 7
    78e6:	40 91 5e 08 	lds	r20, 0x085E	; 0x80085e <overlay_tile_table>
    78ea:	50 91 5f 08 	lds	r21, 0x085F	; 0x80085f <overlay_tile_table+0x1>
    78ee:	60 90 5a 08 	lds	r6, 0x085A	; 0x80085a <tile_table_lo>
    78f2:	70 90 5b 08 	lds	r7, 0x085B	; 0x80085b <tile_table_hi>
    78f6:	d3 01       	movw	r26, r6
    78f8:	5e 01       	movw	r10, r28
    78fa:	76 2f       	mov	r23, r22
    78fc:	8f 2d       	mov	r24, r15
    78fe:	99 2e       	mov	r9, r25
    7900:	00 91 62 08 	lds	r16, 0x0862	; 0x800862 <screen_scrollHeight>
    7904:	20 2f       	mov	r18, r16
    7906:	06 95       	lsr	r16
    7908:	06 95       	lsr	r16
    790a:	06 95       	lsr	r16
    790c:	03 95       	inc	r16
    790e:	27 70       	andi	r18, 0x07	; 7
    7910:	30 91 5d 08 	lds	r19, 0x085D	; 0x80085d <Screen>
    7914:	30 30       	cpi	r19, 0x00	; 0
    7916:	0f b6       	in	r0, 0x3f	; 63
    7918:	01 fe       	sbrs	r0, 1
    791a:	66 27       	eor	r22, r22
    791c:	01 fe       	sbrs	r0, 1
    791e:	c2 2f       	mov	r28, r18
    7920:	01 fe       	sbrs	r0, 1
    7922:	d0 2f       	mov	r29, r16
    7924:	01 fe       	sbrs	r0, 1
    7926:	8f ef       	ldi	r24, 0xFF	; 255
    7928:	01 fe       	sbrs	r0, 1
    792a:	99 24       	eor	r9, r9
    792c:	01 fe       	sbrs	r0, 1
    792e:	da 01       	movw	r26, r20
    7930:	80 90 6c 08 	lds	r8, 0x086C	; 0x80086c <render_lines_count>
    7934:	07 e0       	ldi	r16, 0x07	; 7
    7936:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    793a:	01 e0       	ldi	r16, 0x01	; 1
    793c:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7940:	01 e0       	ldi	r16, 0x01	; 1
    7942:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00007946 <next_tile_line>:
    7946:	08 e0       	ldi	r16, 0x08	; 8
    7948:	60 9f       	mul	r22, r16
    794a:	8d 01       	movw	r16, r26
    794c:	00 5c       	subi	r16, 0xC0	; 192
    794e:	16 40       	sbci	r17, 0x06	; 6
    7950:	00 0d       	add	r16, r0
    7952:	11 1d       	adc	r17, r1
    7954:	18 01       	movw	r2, r16
    7956:	0e e3       	ldi	r16, 0x3E	; 62
    7958:	11 e0       	ldi	r17, 0x01	; 1
    795a:	00 0d       	add	r16, r0
    795c:	11 1d       	adc	r17, r1
    795e:	28 01       	movw	r4, r16
    7960:	00 e4       	ldi	r16, 0x40	; 64
    7962:	e0 2e       	mov	r14, r16
    7964:	03 e9       	ldi	r16, 0x93	; 147
    7966:	1a ef       	ldi	r17, 0xFA	; 250
    7968:	cf 93       	push	r28
    796a:	df 93       	push	r29
    796c:	58 81       	ld	r21, Y
    796e:	c8 5f       	subi	r28, 0xF8	; 248
    7970:	48 81       	ld	r20, Y
    7972:	c8 5f       	subi	r28, 0xF8	; 248
    7974:	a5 d3       	rcall	.+1866   	; 0x80c0 <hsync_pulse>
    7976:	2c e0       	ldi	r18, 0x0C	; 12
    7978:	2a 95       	dec	r18
    797a:	f1 f7       	brne	.-4      	; 0x7978 <next_tile_line+0x32>
    797c:	20 e1       	ldi	r18, 0x10	; 16
    797e:	2a 95       	dec	r18
    7980:	f1 f7       	brne	.-4      	; 0x797e <next_tile_line+0x38>
    7982:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7986:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    798a:	78 94       	sei
    798c:	00 27       	eor	r16, r16
    798e:	5e 9d       	mul	r21, r14
    7990:	5b 31       	cpi	r21, 0x1B	; 27
    7992:	f1 01       	movw	r30, r2
    7994:	08 f4       	brcc	.+2      	; 0x7998 <next_tile_line+0x52>
    7996:	f2 01       	movw	r30, r4
    7998:	00 1f       	adc	r16, r16
    799a:	e0 0d       	add	r30, r0
    799c:	f1 1d       	adc	r31, r1
    799e:	29 2d       	mov	r18, r9
    79a0:	27 70       	andi	r18, 0x07	; 7
    79a2:	11 24       	eor	r1, r1
    79a4:	e2 0f       	add	r30, r18
    79a6:	f1 1d       	adc	r31, r1
    79a8:	4e 9d       	mul	r20, r14
    79aa:	4b 31       	cpi	r20, 0x1B	; 27
    79ac:	a1 01       	movw	r20, r2
    79ae:	08 f4       	brcc	.+2      	; 0x79b2 <next_tile_line+0x6c>
    79b0:	a2 01       	movw	r20, r4
    79b2:	00 1f       	adc	r16, r16
    79b4:	40 0d       	add	r20, r0
    79b6:	51 1d       	adc	r21, r1
    79b8:	1a e1       	ldi	r17, 0x1A	; 26
    79ba:	01 9f       	mul	r16, r17
    79bc:	00 2d       	mov	r16, r0
    79be:	13 e0       	ldi	r17, 0x03	; 3
    79c0:	21 9f       	mul	r18, r17
    79c2:	11 27       	eor	r17, r17
    79c4:	0d 5c       	subi	r16, 0xCD	; 205
    79c6:	12 4c       	sbci	r17, 0xC2	; 194
    79c8:	00 0e       	add	r0, r16
    79ca:	11 1e       	adc	r1, r17
    79cc:	11 27       	eor	r17, r17
    79ce:	0f 92       	push	r0
    79d0:	1f 92       	push	r1
    79d2:	08 95       	ret

000079d4 <__vector_15>:
    79d4:	18 b9       	out	0x08, r17	; 8
    79d6:	0f 90       	pop	r0
    79d8:	0f 90       	pop	r0
    79da:	df 91       	pop	r29
    79dc:	cf 91       	pop	r28
    79de:	03 e1       	ldi	r16, 0x13	; 19
    79e0:	0a 95       	dec	r16
    79e2:	f1 f7       	brne	.-4      	; 0x79e0 <__vector_15+0xc>
    79e4:	00 c0       	rjmp	.+0      	; 0x79e6 <__vector_15+0x12>
    79e6:	63 95       	inc	r22
    79e8:	8a 94       	dec	r8
    79ea:	f9 f0       	breq	.+62     	; 0x7a2a <text_frame_end>
    79ec:	68 30       	cpi	r22, 0x08	; 8
    79ee:	29 f0       	breq	.+10     	; 0x79fa <next_tile_row>
    79f0:	07 e0       	ldi	r16, 0x07	; 7
    79f2:	0a 95       	dec	r16
    79f4:	f1 f7       	brne	.-4      	; 0x79f2 <__vector_15+0x1e>
    79f6:	00 c0       	rjmp	.+0      	; 0x79f8 <__vector_15+0x24>
    79f8:	a6 cf       	rjmp	.-180    	; 0x7946 <next_tile_line>

000079fa <next_tile_row>:
    79fa:	66 27       	eor	r22, r22
    79fc:	0c 2f       	mov	r16, r28
    79fe:	07 70       	andi	r16, 0x07	; 7
    7a00:	07 30       	cpi	r16, 0x07	; 7
    7a02:	11 f0       	breq	.+4      	; 0x7a08 <next_tile_row+0xe>
    7a04:	c3 95       	inc	r28
    7a06:	02 c0       	rjmp	.+4      	; 0x7a0c <next_tile_row+0x12>
    7a08:	c8 7f       	andi	r28, 0xF8	; 248
    7a0a:	d3 95       	inc	r29
    7a0c:	8a 95       	dec	r24
    7a0e:	09 f4       	brne	.+2      	; 0x7a12 <next_tile_row+0x18>
    7a10:	e6 01       	movw	r28, r12
    7a12:	3a 95       	dec	r19
    7a14:	09 f4       	brne	.+2      	; 0x7a18 <next_tile_row+0x1e>
    7a16:	67 2f       	mov	r22, r23
    7a18:	09 f4       	brne	.+2      	; 0x7a1c <next_tile_row+0x22>
    7a1a:	e5 01       	movw	r28, r10
    7a1c:	09 f4       	brne	.+2      	; 0x7a20 <next_tile_row+0x26>
    7a1e:	8f 2d       	mov	r24, r15
    7a20:	09 f4       	brne	.+2      	; 0x7a24 <next_tile_row+0x2a>
    7a22:	99 2e       	mov	r9, r25
    7a24:	09 f4       	brne	.+2      	; 0x7a28 <next_tile_row+0x2e>
    7a26:	d3 01       	movw	r26, r6
    7a28:	8e cf       	rjmp	.-228    	; 0x7946 <next_tile_line>

00007a2a <text_frame_end>:
    7a2a:	20 e1       	ldi	r18, 0x10	; 16
    7a2c:	2a 95       	dec	r18
    7a2e:	f1 f7       	brne	.-4      	; 0x7a2c <text_frame_end+0x2>
    7a30:	00 e0       	ldi	r16, 0x00	; 0
    7a32:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7a36:	0c e2       	ldi	r16, 0x2C	; 44
    7a38:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7a3c:	41 d3       	rcall	.+1666   	; 0x80c0 <hsync_pulse>
    7a3e:	11 24       	eor	r1, r1
    7a40:	0e 94 05 3f 	call	0x7e0a	; 0x7e0a <RestoreBackground>
    7a44:	e0 91 66 08 	lds	r30, 0x0866	; 0x800866 <sync_flags>
    7a48:	42 e0       	ldi	r20, 0x02	; 2
    7a4a:	e1 60       	ori	r30, 0x01	; 1
    7a4c:	e4 27       	eor	r30, r20
    7a4e:	e0 93 66 08 	sts	0x0866, r30	; 0x800866 <sync_flags>
    7a52:	07 e0       	ldi	r16, 0x07	; 7
    7a54:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7a58:	09 e0       	ldi	r16, 0x09	; 9
    7a5a:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7a5e:	02 e0       	ldi	r16, 0x02	; 2
    7a60:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7a64:	08 95       	ret

00007a66 <romrom_e>:
    7a66:	00 c0       	rjmp	.+0      	; 0x7a68 <romrom_e+0x2>
    7a68:	05 91       	lpm	r16, Z+
    7a6a:	08 b9       	out	0x08, r16	; 8
    7a6c:	00 c0       	rjmp	.+0      	; 0x7a6e <romrom_e+0x8>
    7a6e:	05 91       	lpm	r16, Z+
    7a70:	08 b9       	out	0x08, r16	; 8
    7a72:	00 c0       	rjmp	.+0      	; 0x7a74 <romrom_e+0xe>
    7a74:	05 91       	lpm	r16, Z+
    7a76:	08 b9       	out	0x08, r16	; 8
    7a78:	00 c0       	rjmp	.+0      	; 0x7a7a <romrom_e+0x14>
    7a7a:	05 91       	lpm	r16, Z+
    7a7c:	08 b9       	out	0x08, r16	; 8
    7a7e:	00 c0       	rjmp	.+0      	; 0x7a80 <romrom_e+0x1a>
    7a80:	05 91       	lpm	r16, Z+
    7a82:	08 b9       	out	0x08, r16	; 8
    7a84:	00 c0       	rjmp	.+0      	; 0x7a86 <romrom_e+0x20>
    7a86:	05 91       	lpm	r16, Z+
    7a88:	08 b9       	out	0x08, r16	; 8
    7a8a:	00 c0       	rjmp	.+0      	; 0x7a8c <romrom_e+0x26>
    7a8c:	05 91       	lpm	r16, Z+
    7a8e:	08 b9       	out	0x08, r16	; 8
    7a90:	00 00       	nop
    7a92:	05 91       	lpm	r16, Z+
    7a94:	fa 01       	movw	r30, r20
    7a96:	08 b9       	out	0x08, r16	; 8
    7a98:	56 c0       	rjmp	.+172    	; 0x7b46 <romloop_px0>

00007a9a <romram_e>:
    7a9a:	00 c0       	rjmp	.+0      	; 0x7a9c <romram_e+0x2>
    7a9c:	05 91       	lpm	r16, Z+
    7a9e:	08 b9       	out	0x08, r16	; 8
    7aa0:	00 c0       	rjmp	.+0      	; 0x7aa2 <romram_e+0x8>
    7aa2:	05 91       	lpm	r16, Z+
    7aa4:	08 b9       	out	0x08, r16	; 8
    7aa6:	00 c0       	rjmp	.+0      	; 0x7aa8 <romram_e+0xe>
    7aa8:	05 91       	lpm	r16, Z+
    7aaa:	08 b9       	out	0x08, r16	; 8
    7aac:	00 c0       	rjmp	.+0      	; 0x7aae <romram_e+0x14>
    7aae:	05 91       	lpm	r16, Z+
    7ab0:	08 b9       	out	0x08, r16	; 8
    7ab2:	00 c0       	rjmp	.+0      	; 0x7ab4 <romram_e+0x1a>
    7ab4:	05 91       	lpm	r16, Z+
    7ab6:	08 b9       	out	0x08, r16	; 8
    7ab8:	00 c0       	rjmp	.+0      	; 0x7aba <romram_e+0x20>
    7aba:	05 91       	lpm	r16, Z+
    7abc:	08 b9       	out	0x08, r16	; 8
    7abe:	00 c0       	rjmp	.+0      	; 0x7ac0 <romram_e+0x26>
    7ac0:	05 91       	lpm	r16, Z+
    7ac2:	08 b9       	out	0x08, r16	; 8
    7ac4:	00 00       	nop
    7ac6:	05 91       	lpm	r16, Z+
    7ac8:	fa 01       	movw	r30, r20
    7aca:	08 b9       	out	0x08, r16	; 8
    7acc:	59 c0       	rjmp	.+178    	; 0x7b80 <ramloop_px0>

00007ace <ramrom_e>:
    7ace:	04 91       	lpm	r16, Z
    7ad0:	01 91       	ld	r16, Z+
    7ad2:	08 b9       	out	0x08, r16	; 8
    7ad4:	04 91       	lpm	r16, Z
    7ad6:	01 91       	ld	r16, Z+
    7ad8:	08 b9       	out	0x08, r16	; 8
    7ada:	04 91       	lpm	r16, Z
    7adc:	01 91       	ld	r16, Z+
    7ade:	08 b9       	out	0x08, r16	; 8
    7ae0:	04 91       	lpm	r16, Z
    7ae2:	01 91       	ld	r16, Z+
    7ae4:	08 b9       	out	0x08, r16	; 8
    7ae6:	04 91       	lpm	r16, Z
    7ae8:	01 91       	ld	r16, Z+
    7aea:	08 b9       	out	0x08, r16	; 8
    7aec:	04 91       	lpm	r16, Z
    7aee:	01 91       	ld	r16, Z+
    7af0:	08 b9       	out	0x08, r16	; 8
    7af2:	04 91       	lpm	r16, Z
    7af4:	01 91       	ld	r16, Z+
    7af6:	08 b9       	out	0x08, r16	; 8
    7af8:	00 c0       	rjmp	.+0      	; 0x7afa <ramrom_e+0x2c>
    7afa:	01 91       	ld	r16, Z+
    7afc:	fa 01       	movw	r30, r20
    7afe:	08 b9       	out	0x08, r16	; 8
    7b00:	22 c0       	rjmp	.+68     	; 0x7b46 <romloop_px0>

00007b02 <ramram_e>:
    7b02:	04 91       	lpm	r16, Z
    7b04:	01 91       	ld	r16, Z+
    7b06:	08 b9       	out	0x08, r16	; 8
    7b08:	04 91       	lpm	r16, Z
    7b0a:	01 91       	ld	r16, Z+
    7b0c:	08 b9       	out	0x08, r16	; 8
    7b0e:	04 91       	lpm	r16, Z
    7b10:	01 91       	ld	r16, Z+
    7b12:	08 b9       	out	0x08, r16	; 8
    7b14:	04 91       	lpm	r16, Z
    7b16:	01 91       	ld	r16, Z+
    7b18:	08 b9       	out	0x08, r16	; 8
    7b1a:	04 91       	lpm	r16, Z
    7b1c:	01 91       	ld	r16, Z+
    7b1e:	08 b9       	out	0x08, r16	; 8
    7b20:	04 91       	lpm	r16, Z
    7b22:	01 91       	ld	r16, Z+
    7b24:	08 b9       	out	0x08, r16	; 8
    7b26:	04 91       	lpm	r16, Z
    7b28:	01 91       	ld	r16, Z+
    7b2a:	08 b9       	out	0x08, r16	; 8
    7b2c:	00 c0       	rjmp	.+0      	; 0x7b2e <ramram_e+0x2c>
    7b2e:	01 91       	ld	r16, Z+
    7b30:	fa 01       	movw	r30, r20
    7b32:	08 b9       	out	0x08, r16	; 8
    7b34:	25 c0       	rjmp	.+74     	; 0x7b80 <ramloop_px0>

00007b36 <romloop>:
    7b36:	05 91       	lpm	r16, Z+
    7b38:	08 b9       	out	0x08, r16	; 8
    7b3a:	02 0c       	add	r0, r2
    7b3c:	00 00       	nop
    7b3e:	05 91       	lpm	r16, Z+
    7b40:	08 b9       	out	0x08, r16	; 8
    7b42:	13 1c       	adc	r1, r3
    7b44:	f0 01       	movw	r30, r0

00007b46 <romloop_px0>:
    7b46:	05 91       	lpm	r16, Z+
    7b48:	08 b9       	out	0x08, r16	; 8
    7b4a:	00 c0       	rjmp	.+0      	; 0x7b4c <romloop_px0+0x6>
    7b4c:	05 91       	lpm	r16, Z+
    7b4e:	08 b9       	out	0x08, r16	; 8
    7b50:	48 81       	ld	r20, Y
    7b52:	05 91       	lpm	r16, Z+
    7b54:	08 b9       	out	0x08, r16	; 8
    7b56:	c8 5f       	subi	r28, 0xF8	; 248
    7b58:	00 00       	nop
    7b5a:	05 91       	lpm	r16, Z+
    7b5c:	08 b9       	out	0x08, r16	; 8
    7b5e:	4e 9d       	mul	r20, r14
    7b60:	05 91       	lpm	r16, Z+
    7b62:	08 b9       	out	0x08, r16	; 8
    7b64:	4b 31       	cpi	r20, 0x1B	; 27
    7b66:	00 00       	nop
    7b68:	05 91       	lpm	r16, Z+
    7b6a:	08 b9       	out	0x08, r16	; 8
    7b6c:	20 f7       	brcc	.-56     	; 0x7b36 <romloop>
    7b6e:	00 00       	nop
    7b70:	05 91       	lpm	r16, Z+
    7b72:	08 b9       	out	0x08, r16	; 8
    7b74:	04 0c       	add	r0, r4
    7b76:	00 00       	nop
    7b78:	05 91       	lpm	r16, Z+
    7b7a:	08 b9       	out	0x08, r16	; 8
    7b7c:	15 1c       	adc	r1, r5
    7b7e:	f0 01       	movw	r30, r0

00007b80 <ramloop_px0>:
    7b80:	00 00       	nop
    7b82:	01 91       	ld	r16, Z+
    7b84:	08 b9       	out	0x08, r16	; 8
    7b86:	48 81       	ld	r20, Y
    7b88:	00 00       	nop
    7b8a:	01 91       	ld	r16, Z+
    7b8c:	08 b9       	out	0x08, r16	; 8
    7b8e:	c8 5f       	subi	r28, 0xF8	; 248
    7b90:	4e 9d       	mul	r20, r14
    7b92:	01 91       	ld	r16, Z+
    7b94:	08 b9       	out	0x08, r16	; 8
    7b96:	04 91       	lpm	r16, Z
    7b98:	01 91       	ld	r16, Z+
    7b9a:	08 b9       	out	0x08, r16	; 8
    7b9c:	04 91       	lpm	r16, Z
    7b9e:	01 91       	ld	r16, Z+
    7ba0:	08 b9       	out	0x08, r16	; 8
    7ba2:	4b 31       	cpi	r20, 0x1B	; 27
    7ba4:	00 c0       	rjmp	.+0      	; 0x7ba6 <ramloop_px0+0x26>
    7ba6:	01 91       	ld	r16, Z+
    7ba8:	08 b9       	out	0x08, r16	; 8
    7baa:	50 f4       	brcc	.+20     	; 0x7bc0 <ramloop_tr>
    7bac:	00 00       	nop
    7bae:	04 0c       	add	r0, r4
    7bb0:	01 91       	ld	r16, Z+
    7bb2:	08 b9       	out	0x08, r16	; 8
    7bb4:	15 1c       	adc	r1, r5
    7bb6:	00 00       	nop
    7bb8:	01 91       	ld	r16, Z+
    7bba:	f0 01       	movw	r30, r0
    7bbc:	08 b9       	out	0x08, r16	; 8
    7bbe:	e0 cf       	rjmp	.-64     	; 0x7b80 <ramloop_px0>

00007bc0 <ramloop_tr>:
    7bc0:	02 0c       	add	r0, r2
    7bc2:	01 91       	ld	r16, Z+
    7bc4:	08 b9       	out	0x08, r16	; 8
    7bc6:	13 1c       	adc	r1, r3
    7bc8:	00 00       	nop
    7bca:	01 91       	ld	r16, Z+
    7bcc:	f0 01       	movw	r30, r0
    7bce:	08 b9       	out	0x08, r16	; 8
    7bd0:	ba cf       	rjmp	.-140    	; 0x7b46 <romloop_px0>

00007bd2 <CopyFlashTile>:
    7bd2:	20 e4       	ldi	r18, 0x40	; 64
    7bd4:	e0 91 5a 08 	lds	r30, 0x085A	; 0x80085a <tile_table_lo>
    7bd8:	f0 91 5b 08 	lds	r31, 0x085B	; 0x80085b <tile_table_hi>
    7bdc:	82 9f       	mul	r24, r18
    7bde:	e0 0d       	add	r30, r0
    7be0:	f1 1d       	adc	r31, r1
    7be2:	ae e3       	ldi	r26, 0x3E	; 62
    7be4:	b1 e0       	ldi	r27, 0x01	; 1
    7be6:	62 9f       	mul	r22, r18
    7be8:	a0 0d       	add	r26, r0
    7bea:	b1 1d       	adc	r27, r1
    7bec:	15 90       	lpm	r1, Z+
    7bee:	1d 92       	st	X+, r1
    7bf0:	15 90       	lpm	r1, Z+
    7bf2:	1d 92       	st	X+, r1
    7bf4:	15 90       	lpm	r1, Z+
    7bf6:	1d 92       	st	X+, r1
    7bf8:	15 90       	lpm	r1, Z+
    7bfa:	1d 92       	st	X+, r1
    7bfc:	15 90       	lpm	r1, Z+
    7bfe:	1d 92       	st	X+, r1
    7c00:	15 90       	lpm	r1, Z+
    7c02:	1d 92       	st	X+, r1
    7c04:	15 90       	lpm	r1, Z+
    7c06:	1d 92       	st	X+, r1
    7c08:	15 90       	lpm	r1, Z+
    7c0a:	1d 92       	st	X+, r1
    7c0c:	15 90       	lpm	r1, Z+
    7c0e:	1d 92       	st	X+, r1
    7c10:	15 90       	lpm	r1, Z+
    7c12:	1d 92       	st	X+, r1
    7c14:	15 90       	lpm	r1, Z+
    7c16:	1d 92       	st	X+, r1
    7c18:	15 90       	lpm	r1, Z+
    7c1a:	1d 92       	st	X+, r1
    7c1c:	15 90       	lpm	r1, Z+
    7c1e:	1d 92       	st	X+, r1
    7c20:	15 90       	lpm	r1, Z+
    7c22:	1d 92       	st	X+, r1
    7c24:	15 90       	lpm	r1, Z+
    7c26:	1d 92       	st	X+, r1
    7c28:	15 90       	lpm	r1, Z+
    7c2a:	1d 92       	st	X+, r1
    7c2c:	15 90       	lpm	r1, Z+
    7c2e:	1d 92       	st	X+, r1
    7c30:	15 90       	lpm	r1, Z+
    7c32:	1d 92       	st	X+, r1
    7c34:	15 90       	lpm	r1, Z+
    7c36:	1d 92       	st	X+, r1
    7c38:	15 90       	lpm	r1, Z+
    7c3a:	1d 92       	st	X+, r1
    7c3c:	15 90       	lpm	r1, Z+
    7c3e:	1d 92       	st	X+, r1
    7c40:	15 90       	lpm	r1, Z+
    7c42:	1d 92       	st	X+, r1
    7c44:	15 90       	lpm	r1, Z+
    7c46:	1d 92       	st	X+, r1
    7c48:	15 90       	lpm	r1, Z+
    7c4a:	1d 92       	st	X+, r1
    7c4c:	15 90       	lpm	r1, Z+
    7c4e:	1d 92       	st	X+, r1
    7c50:	15 90       	lpm	r1, Z+
    7c52:	1d 92       	st	X+, r1
    7c54:	15 90       	lpm	r1, Z+
    7c56:	1d 92       	st	X+, r1
    7c58:	15 90       	lpm	r1, Z+
    7c5a:	1d 92       	st	X+, r1
    7c5c:	15 90       	lpm	r1, Z+
    7c5e:	1d 92       	st	X+, r1
    7c60:	15 90       	lpm	r1, Z+
    7c62:	1d 92       	st	X+, r1
    7c64:	15 90       	lpm	r1, Z+
    7c66:	1d 92       	st	X+, r1
    7c68:	15 90       	lpm	r1, Z+
    7c6a:	1d 92       	st	X+, r1
    7c6c:	15 90       	lpm	r1, Z+
    7c6e:	1d 92       	st	X+, r1
    7c70:	15 90       	lpm	r1, Z+
    7c72:	1d 92       	st	X+, r1
    7c74:	15 90       	lpm	r1, Z+
    7c76:	1d 92       	st	X+, r1
    7c78:	15 90       	lpm	r1, Z+
    7c7a:	1d 92       	st	X+, r1
    7c7c:	15 90       	lpm	r1, Z+
    7c7e:	1d 92       	st	X+, r1
    7c80:	15 90       	lpm	r1, Z+
    7c82:	1d 92       	st	X+, r1
    7c84:	15 90       	lpm	r1, Z+
    7c86:	1d 92       	st	X+, r1
    7c88:	15 90       	lpm	r1, Z+
    7c8a:	1d 92       	st	X+, r1
    7c8c:	15 90       	lpm	r1, Z+
    7c8e:	1d 92       	st	X+, r1
    7c90:	15 90       	lpm	r1, Z+
    7c92:	1d 92       	st	X+, r1
    7c94:	15 90       	lpm	r1, Z+
    7c96:	1d 92       	st	X+, r1
    7c98:	15 90       	lpm	r1, Z+
    7c9a:	1d 92       	st	X+, r1
    7c9c:	15 90       	lpm	r1, Z+
    7c9e:	1d 92       	st	X+, r1
    7ca0:	15 90       	lpm	r1, Z+
    7ca2:	1d 92       	st	X+, r1
    7ca4:	15 90       	lpm	r1, Z+
    7ca6:	1d 92       	st	X+, r1
    7ca8:	15 90       	lpm	r1, Z+
    7caa:	1d 92       	st	X+, r1
    7cac:	15 90       	lpm	r1, Z+
    7cae:	1d 92       	st	X+, r1
    7cb0:	15 90       	lpm	r1, Z+
    7cb2:	1d 92       	st	X+, r1
    7cb4:	15 90       	lpm	r1, Z+
    7cb6:	1d 92       	st	X+, r1
    7cb8:	15 90       	lpm	r1, Z+
    7cba:	1d 92       	st	X+, r1
    7cbc:	15 90       	lpm	r1, Z+
    7cbe:	1d 92       	st	X+, r1
    7cc0:	15 90       	lpm	r1, Z+
    7cc2:	1d 92       	st	X+, r1
    7cc4:	15 90       	lpm	r1, Z+
    7cc6:	1d 92       	st	X+, r1
    7cc8:	15 90       	lpm	r1, Z+
    7cca:	1d 92       	st	X+, r1
    7ccc:	15 90       	lpm	r1, Z+
    7cce:	1d 92       	st	X+, r1
    7cd0:	15 90       	lpm	r1, Z+
    7cd2:	1d 92       	st	X+, r1
    7cd4:	15 90       	lpm	r1, Z+
    7cd6:	1d 92       	st	X+, r1
    7cd8:	15 90       	lpm	r1, Z+
    7cda:	1d 92       	st	X+, r1
    7cdc:	15 90       	lpm	r1, Z+
    7cde:	1d 92       	st	X+, r1
    7ce0:	15 90       	lpm	r1, Z+
    7ce2:	1d 92       	st	X+, r1
    7ce4:	15 90       	lpm	r1, Z+
    7ce6:	1d 92       	st	X+, r1
    7ce8:	15 90       	lpm	r1, Z+
    7cea:	1d 92       	st	X+, r1
    7cec:	11 24       	eor	r1, r1
    7cee:	08 95       	ret

00007cf0 <CopyRamTile>:
    7cf0:	20 e4       	ldi	r18, 0x40	; 64
    7cf2:	ee e3       	ldi	r30, 0x3E	; 62
    7cf4:	f1 e0       	ldi	r31, 0x01	; 1
    7cf6:	82 9f       	mul	r24, r18
    7cf8:	e0 0d       	add	r30, r0
    7cfa:	f1 1d       	adc	r31, r1
    7cfc:	ae e3       	ldi	r26, 0x3E	; 62
    7cfe:	b1 e0       	ldi	r27, 0x01	; 1
    7d00:	62 9f       	mul	r22, r18
    7d02:	a0 0d       	add	r26, r0
    7d04:	b1 1d       	adc	r27, r1
    7d06:	11 90       	ld	r1, Z+
    7d08:	1d 92       	st	X+, r1
    7d0a:	11 90       	ld	r1, Z+
    7d0c:	1d 92       	st	X+, r1
    7d0e:	11 90       	ld	r1, Z+
    7d10:	1d 92       	st	X+, r1
    7d12:	11 90       	ld	r1, Z+
    7d14:	1d 92       	st	X+, r1
    7d16:	11 90       	ld	r1, Z+
    7d18:	1d 92       	st	X+, r1
    7d1a:	11 90       	ld	r1, Z+
    7d1c:	1d 92       	st	X+, r1
    7d1e:	11 90       	ld	r1, Z+
    7d20:	1d 92       	st	X+, r1
    7d22:	11 90       	ld	r1, Z+
    7d24:	1d 92       	st	X+, r1
    7d26:	11 90       	ld	r1, Z+
    7d28:	1d 92       	st	X+, r1
    7d2a:	11 90       	ld	r1, Z+
    7d2c:	1d 92       	st	X+, r1
    7d2e:	11 90       	ld	r1, Z+
    7d30:	1d 92       	st	X+, r1
    7d32:	11 90       	ld	r1, Z+
    7d34:	1d 92       	st	X+, r1
    7d36:	11 90       	ld	r1, Z+
    7d38:	1d 92       	st	X+, r1
    7d3a:	11 90       	ld	r1, Z+
    7d3c:	1d 92       	st	X+, r1
    7d3e:	11 90       	ld	r1, Z+
    7d40:	1d 92       	st	X+, r1
    7d42:	11 90       	ld	r1, Z+
    7d44:	1d 92       	st	X+, r1
    7d46:	11 90       	ld	r1, Z+
    7d48:	1d 92       	st	X+, r1
    7d4a:	11 90       	ld	r1, Z+
    7d4c:	1d 92       	st	X+, r1
    7d4e:	11 90       	ld	r1, Z+
    7d50:	1d 92       	st	X+, r1
    7d52:	11 90       	ld	r1, Z+
    7d54:	1d 92       	st	X+, r1
    7d56:	11 90       	ld	r1, Z+
    7d58:	1d 92       	st	X+, r1
    7d5a:	11 90       	ld	r1, Z+
    7d5c:	1d 92       	st	X+, r1
    7d5e:	11 90       	ld	r1, Z+
    7d60:	1d 92       	st	X+, r1
    7d62:	11 90       	ld	r1, Z+
    7d64:	1d 92       	st	X+, r1
    7d66:	11 90       	ld	r1, Z+
    7d68:	1d 92       	st	X+, r1
    7d6a:	11 90       	ld	r1, Z+
    7d6c:	1d 92       	st	X+, r1
    7d6e:	11 90       	ld	r1, Z+
    7d70:	1d 92       	st	X+, r1
    7d72:	11 90       	ld	r1, Z+
    7d74:	1d 92       	st	X+, r1
    7d76:	11 90       	ld	r1, Z+
    7d78:	1d 92       	st	X+, r1
    7d7a:	11 90       	ld	r1, Z+
    7d7c:	1d 92       	st	X+, r1
    7d7e:	11 90       	ld	r1, Z+
    7d80:	1d 92       	st	X+, r1
    7d82:	11 90       	ld	r1, Z+
    7d84:	1d 92       	st	X+, r1
    7d86:	11 90       	ld	r1, Z+
    7d88:	1d 92       	st	X+, r1
    7d8a:	11 90       	ld	r1, Z+
    7d8c:	1d 92       	st	X+, r1
    7d8e:	11 90       	ld	r1, Z+
    7d90:	1d 92       	st	X+, r1
    7d92:	11 90       	ld	r1, Z+
    7d94:	1d 92       	st	X+, r1
    7d96:	11 90       	ld	r1, Z+
    7d98:	1d 92       	st	X+, r1
    7d9a:	11 90       	ld	r1, Z+
    7d9c:	1d 92       	st	X+, r1
    7d9e:	11 90       	ld	r1, Z+
    7da0:	1d 92       	st	X+, r1
    7da2:	11 90       	ld	r1, Z+
    7da4:	1d 92       	st	X+, r1
    7da6:	11 90       	ld	r1, Z+
    7da8:	1d 92       	st	X+, r1
    7daa:	11 90       	ld	r1, Z+
    7dac:	1d 92       	st	X+, r1
    7dae:	11 90       	ld	r1, Z+
    7db0:	1d 92       	st	X+, r1
    7db2:	11 90       	ld	r1, Z+
    7db4:	1d 92       	st	X+, r1
    7db6:	11 90       	ld	r1, Z+
    7db8:	1d 92       	st	X+, r1
    7dba:	11 90       	ld	r1, Z+
    7dbc:	1d 92       	st	X+, r1
    7dbe:	11 90       	ld	r1, Z+
    7dc0:	1d 92       	st	X+, r1
    7dc2:	11 90       	ld	r1, Z+
    7dc4:	1d 92       	st	X+, r1
    7dc6:	11 90       	ld	r1, Z+
    7dc8:	1d 92       	st	X+, r1
    7dca:	11 90       	ld	r1, Z+
    7dcc:	1d 92       	st	X+, r1
    7dce:	11 90       	ld	r1, Z+
    7dd0:	1d 92       	st	X+, r1
    7dd2:	11 90       	ld	r1, Z+
    7dd4:	1d 92       	st	X+, r1
    7dd6:	11 90       	ld	r1, Z+
    7dd8:	1d 92       	st	X+, r1
    7dda:	11 90       	ld	r1, Z+
    7ddc:	1d 92       	st	X+, r1
    7dde:	11 90       	ld	r1, Z+
    7de0:	1d 92       	st	X+, r1
    7de2:	11 90       	ld	r1, Z+
    7de4:	1d 92       	st	X+, r1
    7de6:	11 90       	ld	r1, Z+
    7de8:	1d 92       	st	X+, r1
    7dea:	11 90       	ld	r1, Z+
    7dec:	1d 92       	st	X+, r1
    7dee:	11 90       	ld	r1, Z+
    7df0:	1d 92       	st	X+, r1
    7df2:	11 90       	ld	r1, Z+
    7df4:	1d 92       	st	X+, r1
    7df6:	11 90       	ld	r1, Z+
    7df8:	1d 92       	st	X+, r1
    7dfa:	11 90       	ld	r1, Z+
    7dfc:	1d 92       	st	X+, r1
    7dfe:	11 90       	ld	r1, Z+
    7e00:	1d 92       	st	X+, r1
    7e02:	11 90       	ld	r1, Z+
    7e04:	1d 92       	st	X+, r1
    7e06:	11 24       	eor	r1, r1
    7e08:	08 95       	ret

00007e0a <RestoreBackground>:
    7e0a:	e0 91 50 08 	lds	r30, 0x0850	; 0x800850 <user_ram_tiles_c>
    7e0e:	8e 2f       	mov	r24, r30
    7e10:	ee 0f       	add	r30, r30
    7e12:	e8 0f       	add	r30, r24
    7e14:	ff 27       	eor	r31, r31
    7e16:	e2 50       	subi	r30, 0x02	; 2
    7e18:	f8 4f       	sbci	r31, 0xF8	; 248
    7e1a:	00 90 4f 08 	lds	r0, 0x084F	; 0x80084f <free_tile_index>
    7e1e:	80 19       	sub	r24, r0
    7e20:	30 f4       	brcc	.+12     	; 0x7e2e <rbg_exit>

00007e22 <rbg_loop>:
    7e22:	a1 91       	ld	r26, Z+
    7e24:	b1 91       	ld	r27, Z+
    7e26:	01 90       	ld	r0, Z+
    7e28:	0c 92       	st	X, r0
    7e2a:	83 95       	inc	r24
    7e2c:	d1 f7       	brne	.-12     	; 0x7e22 <rbg_loop>

00007e2e <rbg_exit>:
    7e2e:	08 95       	ret

00007e30 <BlitSpritePart>:
    7e30:	98 e0       	ldi	r25, 0x08	; 8
    7e32:	79 9f       	mul	r23, r25
    7e34:	a1 2d       	mov	r26, r1
    7e36:	bb 27       	eor	r27, r27
    7e38:	ae 5a       	subi	r26, 0xAE	; 174
    7e3a:	b7 4f       	sbci	r27, 0xF7	; 247
    7e3c:	ed 91       	ld	r30, X+
    7e3e:	fd 91       	ld	r31, X+

00007e40 <bsp_send>:
    7e40:	90 e4       	ldi	r25, 0x40	; 64
    7e42:	69 9f       	mul	r22, r25
    7e44:	e0 0d       	add	r30, r0
    7e46:	f1 1d       	adc	r31, r1
    7e48:	89 9f       	mul	r24, r25
    7e4a:	d0 01       	movw	r26, r0
    7e4c:	a2 5c       	subi	r26, 0xC2	; 194
    7e4e:	be 4f       	sbci	r27, 0xFE	; 254
    7e50:	90 e0       	ldi	r25, 0x00	; 0
    7e52:	40 fd       	sbrc	r20, 0
    7e54:	09 c0       	rjmp	.+18     	; 0x7e68 <x_2nd_tile>
    7e56:	82 2f       	mov	r24, r18
    7e58:	48 e0       	ldi	r20, 0x08	; 8
    7e5a:	42 1b       	sub	r20, r18
    7e5c:	70 ff       	sbrs	r23, 0
    7e5e:	0a c0       	rjmp	.+20     	; 0x7e74 <x_1st_tile_nxf>
    7e60:	17 96       	adiw	r26, 0x07	; 7

00007e62 <x_2nd_tile_nxf>:
    7e62:	e8 0f       	add	r30, r24
    7e64:	f9 1f       	adc	r31, r25
    7e66:	08 c0       	rjmp	.+16     	; 0x7e78 <x_check_end>

00007e68 <x_2nd_tile>:
    7e68:	88 e0       	ldi	r24, 0x08	; 8
    7e6a:	82 1b       	sub	r24, r18
    7e6c:	42 2f       	mov	r20, r18
    7e6e:	70 ff       	sbrs	r23, 0
    7e70:	f8 cf       	rjmp	.-16     	; 0x7e62 <x_2nd_tile_nxf>
    7e72:	11 97       	sbiw	r26, 0x01	; 1

00007e74 <x_1st_tile_nxf>:
    7e74:	a2 0f       	add	r26, r18
    7e76:	b9 1f       	adc	r27, r25

00007e78 <x_check_end>:
    7e78:	68 e0       	ldi	r22, 0x08	; 8
    7e7a:	28 e0       	ldi	r18, 0x08	; 8
    7e7c:	23 1b       	sub	r18, r19
    7e7e:	50 fd       	sbrc	r21, 0
    7e80:	09 c0       	rjmp	.+18     	; 0x7e94 <y_2nd_tile>
    7e82:	63 9f       	mul	r22, r19
    7e84:	a0 0d       	add	r26, r0
    7e86:	b1 1d       	adc	r27, r1
    7e88:	71 fd       	sbrc	r23, 1
    7e8a:	e8 5c       	subi	r30, 0xC8	; 200
    7e8c:	71 fd       	sbrc	r23, 1
    7e8e:	ff 4f       	sbci	r31, 0xFF	; 255
    7e90:	12 2e       	mov	r1, r18
    7e92:	08 c0       	rjmp	.+16     	; 0x7ea4 <y_check_end>

00007e94 <y_2nd_tile>:
    7e94:	13 2e       	mov	r1, r19
    7e96:	1a 94       	dec	r1
    7e98:	71 ff       	sbrs	r23, 1
    7e9a:	12 2e       	mov	r1, r18
    7e9c:	61 9d       	mul	r22, r1
    7e9e:	e0 0d       	add	r30, r0
    7ea0:	f1 1d       	adc	r31, r1
    7ea2:	13 2e       	mov	r1, r19

00007ea4 <y_check_end>:
    7ea4:	71 fd       	sbrc	r23, 1
    7ea6:	40 97       	sbiw	r24, 0x10	; 16
    7ea8:	70 fd       	sbrc	r23, 0
    7eaa:	05 c0       	rjmp	.+10     	; 0x7eb6 <x_diff_xf>
    7eac:	57 ef       	ldi	r21, 0xF7	; 247
    7eae:	54 0f       	add	r21, r20
    7eb0:	70 e0       	ldi	r23, 0x00	; 0
    7eb2:	61 e0       	ldi	r22, 0x01	; 1
    7eb4:	04 c0       	rjmp	.+8      	; 0x7ebe <x_diff_end>

00007eb6 <x_diff_xf>:
    7eb6:	59 ef       	ldi	r21, 0xF9	; 249
    7eb8:	54 1b       	sub	r21, r20
    7eba:	7f ef       	ldi	r23, 0xFF	; 255
    7ebc:	6f ef       	ldi	r22, 0xFF	; 255

00007ebe <x_diff_end>:
    7ebe:	3e ef       	ldi	r19, 0xFE	; 254
    7ec0:	04 2e       	mov	r0, r20
    7ec2:	46 95       	lsr	r20
    7ec4:	30 f4       	brcc	.+12     	; 0x7ed2 <x_loop1>
    7ec6:	61 f0       	breq	.+24     	; 0x7ee0 <x_loopx>

00007ec8 <x_loop0>:
    7ec8:	25 91       	lpm	r18, Z+
    7eca:	23 13       	cpse	r18, r19
    7ecc:	2c 93       	st	X, r18
    7ece:	a6 0f       	add	r26, r22
    7ed0:	b7 1f       	adc	r27, r23

00007ed2 <x_loop1>:
    7ed2:	25 91       	lpm	r18, Z+
    7ed4:	23 13       	cpse	r18, r19
    7ed6:	2c 93       	st	X, r18
    7ed8:	a6 0f       	add	r26, r22
    7eda:	b7 1f       	adc	r27, r23
    7edc:	41 50       	subi	r20, 0x01	; 1
    7ede:	a1 f7       	brne	.-24     	; 0x7ec8 <x_loop0>

00007ee0 <x_loopx>:
    7ee0:	25 91       	lpm	r18, Z+
    7ee2:	23 13       	cpse	r18, r19
    7ee4:	2c 93       	st	X, r18
    7ee6:	1a 94       	dec	r1
    7ee8:	49 f0       	breq	.+18     	; 0x7efc <loop_e>
    7eea:	e8 0f       	add	r30, r24
    7eec:	f9 1f       	adc	r31, r25
    7eee:	a5 1b       	sub	r26, r21
    7ef0:	bf 4f       	sbci	r27, 0xFF	; 255
    7ef2:	40 2d       	mov	r20, r0
    7ef4:	46 95       	lsr	r20
    7ef6:	68 f7       	brcc	.-38     	; 0x7ed2 <x_loop1>
    7ef8:	39 f7       	brne	.-50     	; 0x7ec8 <x_loop0>
    7efa:	f2 cf       	rjmp	.-28     	; 0x7ee0 <x_loopx>

00007efc <loop_e>:
    7efc:	08 95       	ret

00007efe <__vector_13>:
    7efe:	0f 92       	push	r0
    7f00:	1f 92       	push	r1
    7f02:	ef 93       	push	r30
    7f04:	ff 93       	push	r31
    7f06:	ff b7       	in	r31, 0x3f	; 63
    7f08:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7f0c:	ff 93       	push	r31
    7f0e:	e2 fd       	sbrc	r30, 2
    7f10:	04 c0       	rjmp	.+8      	; 0x7f1a <__vector_13+0x1c>
    7f12:	e1 fd       	sbrc	r30, 1
    7f14:	02 c0       	rjmp	.+4      	; 0x7f1a <__vector_13+0x1c>
    7f16:	00 00       	nop
    7f18:	00 c0       	rjmp	.+0      	; 0x7f1a <__vector_13+0x1c>
    7f1a:	e0 ff       	sbrs	r30, 0
    7f1c:	00 c0       	rjmp	.+0      	; 0x7f1e <__vector_13+0x20>
    7f1e:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <sync_pulse>
    7f22:	ea 95       	dec	r30
    7f24:	e0 93 65 08 	sts	0x0865, r30	; 0x800865 <sync_pulse>
    7f28:	f0 91 64 08 	lds	r31, 0x0864	; 0x800864 <sync_phase>
    7f2c:	f0 fd       	sbrc	r31, 0
    7f2e:	51 c0       	rjmp	.+162    	; 0x7fd2 <sync_hsync>
    7f30:	ec 30       	cpi	r30, 0x0C	; 12
    7f32:	98 f0       	brcs	.+38     	; 0x7f5a <sync_eq>
    7f34:	f3 e0       	ldi	r31, 0x03	; 3
    7f36:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    7f3a:	fd e8       	ldi	r31, 0x8D	; 141
    7f3c:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    7f40:	e0 fb       	bst	r30, 0
    7f42:	28 98       	cbi	0x05, 0	; 5
    7f44:	26 f4       	brtc	.+8      	; 0x7f4e <sync_pre_eq_no_sound_update>
    7f46:	e1 e0       	ldi	r30, 0x01	; 1
    7f48:	0e 94 71 40 	call	0x80e2	; 0x80e2 <update_sound>
    7f4c:	b2 c0       	rjmp	.+356    	; 0x80b2 <sync_end>

00007f4e <sync_pre_eq_no_sound_update>:
    7f4e:	e5 e1       	ldi	r30, 0x15	; 21
    7f50:	ea 95       	dec	r30
    7f52:	f1 f7       	brne	.-4      	; 0x7f50 <sync_pre_eq_no_sound_update+0x2>
    7f54:	00 00       	nop
    7f56:	28 9a       	sbi	0x05, 0	; 5
    7f58:	ac c0       	rjmp	.+344    	; 0x80b2 <sync_end>

00007f5a <sync_eq>:
    7f5a:	e6 30       	cpi	r30, 0x06	; 6
    7f5c:	08 f1       	brcs	.+66     	; 0x7fa0 <sync_post_eq>
    7f5e:	00 c0       	rjmp	.+0      	; 0x7f60 <sync_eq+0x6>
    7f60:	00 c0       	rjmp	.+0      	; 0x7f62 <sync_eq+0x8>
    7f62:	28 98       	cbi	0x05, 0	; 5
    7f64:	e0 fb       	bst	r30, 0
    7f66:	e4 e0       	ldi	r30, 0x04	; 4
    7f68:	16 f4       	brtc	.+4      	; 0x7f6e <sync_eq_skip>
    7f6a:	0e 94 71 40 	call	0x80e2	; 0x80e2 <update_sound>

00007f6e <sync_eq_skip>:
    7f6e:	e4 e0       	ldi	r30, 0x04	; 4
    7f70:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7f74:	e6 e0       	ldi	r30, 0x06	; 6
    7f76:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7f7a:	9b c0       	rjmp	.+310    	; 0x80b2 <sync_end>

00007f7c <__vector_14>:
    7f7c:	ef 93       	push	r30
    7f7e:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7f82:	e2 fd       	sbrc	r30, 2
    7f84:	04 c0       	rjmp	.+8      	; 0x7f8e <__vector_14+0x12>
    7f86:	e1 fd       	sbrc	r30, 1
    7f88:	02 c0       	rjmp	.+4      	; 0x7f8e <__vector_14+0x12>
    7f8a:	00 00       	nop
    7f8c:	00 c0       	rjmp	.+0      	; 0x7f8e <__vector_14+0x12>
    7f8e:	e0 ff       	sbrs	r30, 0
    7f90:	00 c0       	rjmp	.+0      	; 0x7f92 <__vector_14+0x16>
    7f92:	e2 e0       	ldi	r30, 0x02	; 2
    7f94:	00 00       	nop
    7f96:	28 9a       	sbi	0x05, 0	; 5
    7f98:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7f9c:	ef 91       	pop	r30
    7f9e:	18 95       	reti

00007fa0 <sync_post_eq>:
    7fa0:	00 c0       	rjmp	.+0      	; 0x7fa2 <sync_post_eq+0x2>
    7fa2:	e0 fb       	bst	r30, 0
    7fa4:	28 98       	cbi	0x05, 0	; 5
    7fa6:	26 f4       	brtc	.+8      	; 0x7fb0 <sync_post_eq_no_sound_update>
    7fa8:	e1 e0       	ldi	r30, 0x01	; 1
    7faa:	0e 94 71 40 	call	0x80e2	; 0x80e2 <update_sound>
    7fae:	05 c0       	rjmp	.+10     	; 0x7fba <sync_pre_eq_cont>

00007fb0 <sync_post_eq_no_sound_update>:
    7fb0:	e5 e1       	ldi	r30, 0x15	; 21
    7fb2:	ea 95       	dec	r30
    7fb4:	f1 f7       	brne	.-4      	; 0x7fb2 <sync_post_eq_no_sound_update+0x2>
    7fb6:	00 00       	nop
    7fb8:	28 9a       	sbi	0x05, 0	; 5

00007fba <sync_pre_eq_cont>:
    7fba:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <sync_pulse>
    7fbe:	e0 30       	cpi	r30, 0x00	; 0
    7fc0:	09 f0       	breq	.+2      	; 0x7fc4 <sync_pre_eq_cont+0xa>
    7fc2:	77 c0       	rjmp	.+238    	; 0x80b2 <sync_end>
    7fc4:	ed ef       	ldi	r30, 0xFD	; 253
    7fc6:	e0 93 65 08 	sts	0x0865, r30	; 0x800865 <sync_pulse>
    7fca:	e1 e0       	ldi	r30, 0x01	; 1
    7fcc:	e0 93 64 08 	sts	0x0864, r30	; 0x800864 <sync_phase>
    7fd0:	70 c0       	rjmp	.+224    	; 0x80b2 <sync_end>

00007fd2 <sync_hsync>:
    7fd2:	e7 e0       	ldi	r30, 0x07	; 7
    7fd4:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    7fd8:	eb e1       	ldi	r30, 0x1B	; 27
    7fda:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    7fde:	00 c0       	rjmp	.+0      	; 0x7fe0 <sync_hsync+0xe>
    7fe0:	28 98       	cbi	0x05, 0	; 5
    7fe2:	e2 e0       	ldi	r30, 0x02	; 2
    7fe4:	00 c0       	rjmp	.+0      	; 0x7fe6 <sync_hsync+0x14>
    7fe6:	0e 94 71 40 	call	0x80e2	; 0x80e2 <update_sound>
    7fea:	fd ef       	ldi	r31, 0xFD	; 253
    7fec:	00 90 6b 08 	lds	r0, 0x086B	; 0x80086b <first_render_line>
    7ff0:	f0 19       	sub	r31, r0
    7ff2:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <sync_pulse>
    7ff6:	ef 17       	cp	r30, r31
    7ff8:	d8 f4       	brcc	.+54     	; 0x8030 <no_render>
    7ffa:	fd ef       	ldi	r31, 0xFD	; 253
    7ffc:	00 90 6b 08 	lds	r0, 0x086B	; 0x80086b <first_render_line>
    8000:	f0 19       	sub	r31, r0
    8002:	00 90 6c 08 	lds	r0, 0x086C	; 0x80086c <render_lines_count>
    8006:	f0 19       	sub	r31, r0
    8008:	ef 17       	cp	r30, r31
    800a:	90 f0       	brcs	.+36     	; 0x8030 <no_render>
    800c:	ed e1       	ldi	r30, 0x1D	; 29
    800e:	ff 27       	eor	r31, r31

00008010 <push_loop>:
    8010:	00 80       	ld	r0, Z
    8012:	0f 92       	push	r0
    8014:	ea 95       	dec	r30
    8016:	e1 f7       	brne	.-8      	; 0x8010 <push_loop>
    8018:	0d e0       	ldi	r16, 0x0D	; 13
    801a:	0a 95       	dec	r16
    801c:	f1 f7       	brne	.-4      	; 0x801a <push_loop+0xa>
    801e:	00 c0       	rjmp	.+0      	; 0x8020 <push_loop+0x10>
    8020:	0e 94 36 3c 	call	0x786c	; 0x786c <sub_video_mode3>
    8024:	e1 e0       	ldi	r30, 0x01	; 1
    8026:	ff 27       	eor	r31, r31

00008028 <pop_loop>:
    8028:	0f 90       	pop	r0
    802a:	01 92       	st	Z+, r0
    802c:	ee 31       	cpi	r30, 0x1E	; 30
    802e:	e0 f3       	brcs	.-8      	; 0x8028 <pop_loop>

00008030 <no_render>:
    8030:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <sync_pulse>
    8034:	e0 30       	cpi	r30, 0x00	; 0
    8036:	09 f0       	breq	.+2      	; 0x803a <no_render+0xa>
    8038:	3c c0       	rjmp	.+120    	; 0x80b2 <sync_end>
    803a:	2f 93       	push	r18
    803c:	3f 93       	push	r19
    803e:	4f 93       	push	r20
    8040:	5f 93       	push	r21
    8042:	6f 93       	push	r22
    8044:	7f 93       	push	r23
    8046:	8f 93       	push	r24
    8048:	9f 93       	push	r25
    804a:	af 93       	push	r26
    804c:	bf 93       	push	r27
    804e:	78 94       	sei
    8050:	11 24       	eor	r1, r1
    8052:	ee 27       	eor	r30, r30
    8054:	e0 93 64 08 	sts	0x0864, r30	; 0x800864 <sync_phase>
    8058:	e2 e1       	ldi	r30, 0x12	; 18
    805a:	e0 93 65 08 	sts	0x0865, r30	; 0x800865 <sync_pulse>
    805e:	80 91 75 08 	lds	r24, 0x0875	; 0x800875 <vsync_counter>
    8062:	90 91 76 08 	lds	r25, 0x0876	; 0x800876 <vsync_counter+0x1>
    8066:	01 96       	adiw	r24, 0x01	; 1
    8068:	80 93 75 08 	sts	0x0875, r24	; 0x800875 <vsync_counter>
    806c:	90 93 76 08 	sts	0x0876, r25	; 0x800876 <vsync_counter+0x1>
    8070:	e0 91 67 08 	lds	r30, 0x0867	; 0x800867 <pre_vsync_user_callback>
    8074:	f0 91 68 08 	lds	r31, 0x0868	; 0x800868 <pre_vsync_user_callback+0x1>
    8078:	e1 15       	cp	r30, r1
    807a:	f1 05       	cpc	r31, r1
    807c:	09 f0       	breq	.+2      	; 0x8080 <no_render+0x50>
    807e:	09 95       	icall
    8080:	0e 94 b4 41 	call	0x8368	; 0x8368 <ReadControllers>
    8084:	0e 94 9a 4e 	call	0x9d34	; 0x9d34 <VideoModeVsync>
    8088:	0e 94 6b 40 	call	0x80d6	; 0x80d6 <process_music>
    808c:	11 24       	eor	r1, r1
    808e:	e0 91 69 08 	lds	r30, 0x0869	; 0x800869 <post_vsync_user_callback>
    8092:	f0 91 6a 08 	lds	r31, 0x086A	; 0x80086a <post_vsync_user_callback+0x1>
    8096:	e1 15       	cp	r30, r1
    8098:	f1 05       	cpc	r31, r1
    809a:	09 f0       	breq	.+2      	; 0x809e <no_render+0x6e>
    809c:	09 95       	icall
    809e:	bf 91       	pop	r27
    80a0:	af 91       	pop	r26
    80a2:	9f 91       	pop	r25
    80a4:	8f 91       	pop	r24
    80a6:	7f 91       	pop	r23
    80a8:	6f 91       	pop	r22
    80aa:	5f 91       	pop	r21
    80ac:	4f 91       	pop	r20
    80ae:	3f 91       	pop	r19
    80b0:	2f 91       	pop	r18

000080b2 <sync_end>:
    80b2:	ef 91       	pop	r30
    80b4:	ef bf       	out	0x3f, r30	; 63
    80b6:	ff 91       	pop	r31
    80b8:	ef 91       	pop	r30
    80ba:	1f 90       	pop	r1
    80bc:	0f 90       	pop	r0
    80be:	18 95       	reti

000080c0 <hsync_pulse>:
    80c0:	28 98       	cbi	0x05, 0	; 5
    80c2:	e2 e0       	ldi	r30, 0x02	; 2
    80c4:	00 c0       	rjmp	.+0      	; 0x80c6 <hsync_pulse+0x6>
    80c6:	0e 94 71 40 	call	0x80e2	; 0x80e2 <update_sound>
    80ca:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <sync_pulse>
    80ce:	ea 95       	dec	r30
    80d0:	e0 93 65 08 	sts	0x0865, r30	; 0x800865 <sync_pulse>
    80d4:	08 95       	ret

000080d6 <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    80d6:	e0 91 79 08 	lds	r30, 0x0879	; 0x800879 <sound_enabled>
    80da:	e0 fd       	sbrc	r30, 0
    80dc:	0e 94 29 44 	call	0x8852	; 0x8852 <ProcessMusic>
    80e0:	08 95       	ret

000080e2 <update_sound>:
    80e2:	2f 93       	push	r18
    80e4:	1f 93       	push	r17
    80e6:	0f 93       	push	r16
    80e8:	2e 2f       	mov	r18, r30
    80ea:	10 91 7d 08 	lds	r17, 0x087D	; 0x80087d <tr1_pos_frac>
    80ee:	e0 91 7e 08 	lds	r30, 0x087E	; 0x80087e <tr1_pos_lo>
    80f2:	f0 91 7f 08 	lds	r31, 0x087F	; 0x80087f <tr1_pos_hi>
    80f6:	00 91 7b 08 	lds	r16, 0x087B	; 0x80087b <tr1_step_lo>
    80fa:	10 0f       	add	r17, r16
    80fc:	00 91 7c 08 	lds	r16, 0x087C	; 0x80087c <tr1_step_hi>
    8100:	e0 1f       	adc	r30, r16
    8102:	04 91       	lpm	r16, Z
    8104:	e0 93 7e 08 	sts	0x087E, r30	; 0x80087e <tr1_pos_lo>
    8108:	10 93 7d 08 	sts	0x087D, r17	; 0x80087d <tr1_pos_frac>
    810c:	10 91 7a 08 	lds	r17, 0x087A	; 0x80087a <mixer>
    8110:	01 03       	mulsu	r16, r17
    8112:	00 08       	sbc	r0, r0
    8114:	10 91 83 08 	lds	r17, 0x0883	; 0x800883 <tr2_pos_frac>
    8118:	e0 91 84 08 	lds	r30, 0x0884	; 0x800884 <tr2_pos_lo>
    811c:	f0 91 85 08 	lds	r31, 0x0885	; 0x800885 <tr2_pos_hi>
    8120:	00 91 81 08 	lds	r16, 0x0881	; 0x800881 <tr2_step_lo>
    8124:	10 0f       	add	r17, r16
    8126:	00 91 82 08 	lds	r16, 0x0882	; 0x800882 <tr2_step_hi>
    812a:	e0 1f       	adc	r30, r16
    812c:	04 91       	lpm	r16, Z
    812e:	e0 93 84 08 	sts	0x0884, r30	; 0x800884 <tr2_pos_lo>
    8132:	10 93 83 08 	sts	0x0883, r17	; 0x800883 <tr2_pos_frac>
    8136:	f0 01       	movw	r30, r0
    8138:	10 91 80 08 	lds	r17, 0x0880	; 0x800880 <tr2_vol>
    813c:	01 03       	mulsu	r16, r17
    813e:	00 08       	sbc	r0, r0
    8140:	1f 0e       	add	r1, r31
    8142:	10 91 89 08 	lds	r17, 0x0889	; 0x800889 <tr3_pos_frac>
    8146:	20 fd       	sbrc	r18, 0
    8148:	28 9a       	sbi	0x05, 0	; 5
    814a:	0e 1e       	adc	r0, r30
    814c:	e0 91 8a 08 	lds	r30, 0x088A	; 0x80088a <tr3_pos_lo>
    8150:	f0 91 8b 08 	lds	r31, 0x088B	; 0x80088b <tr3_pos_hi>
    8154:	00 91 87 08 	lds	r16, 0x0887	; 0x800887 <tr3_step_lo>
    8158:	10 0f       	add	r17, r16
    815a:	00 91 88 08 	lds	r16, 0x0888	; 0x800888 <tr3_step_hi>
    815e:	e0 1f       	adc	r30, r16
    8160:	04 91       	lpm	r16, Z
    8162:	e0 93 8a 08 	sts	0x088A, r30	; 0x80088a <tr3_pos_lo>
    8166:	10 93 89 08 	sts	0x0889, r17	; 0x800889 <tr3_pos_frac>
    816a:	f0 01       	movw	r30, r0
    816c:	10 91 86 08 	lds	r17, 0x0886	; 0x800886 <tr3_vol>
    8170:	01 03       	mulsu	r16, r17
    8172:	00 08       	sbc	r0, r0
    8174:	1f 0e       	add	r1, r31
    8176:	0e 1e       	adc	r0, r30
    8178:	00 91 8e 08 	lds	r16, 0x088E	; 0x80088e <tr4_barrel_lo>
    817c:	10 91 8f 08 	lds	r17, 0x088F	; 0x80088f <tr4_barrel_hi>
    8180:	f0 91 8c 08 	lds	r31, 0x088C	; 0x80088c <tr4_vol>
    8184:	f6 95       	lsr	r31
    8186:	88 94       	clc
    8188:	00 fd       	sbrc	r16, 0
    818a:	f1 95       	neg	r31
    818c:	ee 0b       	sbc	r30, r30
    818e:	1f 0e       	add	r1, r31
    8190:	0e 1e       	adc	r0, r30
    8192:	e0 91 90 08 	lds	r30, 0x0890	; 0x800890 <tr4_divider>
    8196:	e2 50       	subi	r30, 0x02	; 2
    8198:	20 f0       	brcs	.+8      	; 0x81a2 <ch4_shift>
    819a:	e4 91       	lpm	r30, Z
    819c:	e4 91       	lpm	r30, Z
    819e:	e4 91       	lpm	r30, Z
    81a0:	0a c0       	rjmp	.+20     	; 0x81b6 <ch4_end>

000081a2 <ch4_shift>:
    81a2:	e0 2f       	mov	r30, r16
    81a4:	16 95       	lsr	r17
    81a6:	07 95       	ror	r16
    81a8:	e0 27       	eor	r30, r16
    81aa:	e0 fb       	bst	r30, 0
    81ac:	16 f9       	bld	r17, 6
    81ae:	e0 91 8d 08 	lds	r30, 0x088D	; 0x80088d <tr4_params>
    81b2:	e0 ff       	sbrs	r30, 0
    81b4:	06 f9       	bld	r16, 6

000081b6 <ch4_end>:
    81b6:	00 93 8e 08 	sts	0x088E, r16	; 0x80088e <tr4_barrel_lo>
    81ba:	10 93 8f 08 	sts	0x088F, r17	; 0x80088f <tr4_barrel_hi>
    81be:	e0 93 90 08 	sts	0x0890, r30	; 0x800890 <tr4_divider>
    81c2:	10 e0       	ldi	r17, 0x00	; 0
    81c4:	e0 91 95 08 	lds	r30, 0x0895	; 0x800895 <tr5_pos_frac>
    81c8:	f0 91 93 08 	lds	r31, 0x0893	; 0x800893 <tr5_step_lo>
    81cc:	21 fd       	sbrc	r18, 1
    81ce:	28 9a       	sbi	0x05, 0	; 5
    81d0:	ef 0f       	add	r30, r31
    81d2:	e0 93 95 08 	sts	0x0895, r30	; 0x800895 <tr5_pos_frac>
    81d6:	e0 91 96 08 	lds	r30, 0x0896	; 0x800896 <tr5_pos_lo>
    81da:	f0 91 97 08 	lds	r31, 0x0897	; 0x800897 <tr5_pos_hi>
    81de:	00 91 94 08 	lds	r16, 0x0894	; 0x800894 <tr5_step_hi>
    81e2:	e0 1f       	adc	r30, r16
    81e4:	f1 1f       	adc	r31, r17
    81e6:	00 91 9a 08 	lds	r16, 0x089A	; 0x80089a <tr5_loop_end_lo>
    81ea:	10 91 9b 08 	lds	r17, 0x089B	; 0x80089b <tr5_loop_end_hi>
    81ee:	e0 17       	cp	r30, r16
    81f0:	f1 07       	cpc	r31, r17
    81f2:	18 f4       	brcc	.+6      	; 0x81fa <ch5_reset>
    81f4:	04 91       	lpm	r16, Z
    81f6:	00 c0       	rjmp	.+0      	; 0x81f8 <ch4_end+0x42>
    81f8:	06 c0       	rjmp	.+12     	; 0x8206 <ch5_nores>

000081fa <ch5_reset>:
    81fa:	00 91 98 08 	lds	r16, 0x0898	; 0x800898 <tr5_loop_len_lo>
    81fe:	10 91 99 08 	lds	r17, 0x0899	; 0x800899 <tr5_loop_len_hi>
    8202:	e0 1b       	sub	r30, r16
    8204:	f1 0b       	sbc	r31, r17

00008206 <ch5_nores>:
    8206:	e0 93 96 08 	sts	0x0896, r30	; 0x800896 <tr5_pos_lo>
    820a:	f0 93 97 08 	sts	0x0897, r31	; 0x800897 <tr5_pos_hi>
    820e:	04 91       	lpm	r16, Z
    8210:	f0 01       	movw	r30, r0
    8212:	10 91 92 08 	lds	r17, 0x0892	; 0x800892 <tr5_vol>
    8216:	01 03       	mulsu	r16, r17
    8218:	00 08       	sbc	r0, r0
    821a:	1f 0e       	add	r1, r31
    821c:	0e 1e       	adc	r0, r30
    821e:	f0 01       	movw	r30, r0
    8220:	0f 91       	pop	r16
    8222:	1f 91       	pop	r17
    8224:	f0 58       	subi	r31, 0x80	; 128
    8226:	ef 4f       	sbci	r30, 0xFF	; 255
    8228:	1a f4       	brpl	.+6      	; 0x8230 <ch5_nores+0x2a>
    822a:	f0 e0       	ldi	r31, 0x00	; 0
    822c:	00 00       	nop
    822e:	03 c0       	rjmp	.+6      	; 0x8236 <ch5_nores+0x30>
    8230:	e0 30       	cpi	r30, 0x00	; 0
    8232:	09 f0       	breq	.+2      	; 0x8236 <ch5_nores+0x30>
    8234:	ff ef       	ldi	r31, 0xFF	; 255
    8236:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    823a:	2f 91       	pop	r18
    823c:	08 95       	ret

0000823e <SetSpritesTileTable>:
    823e:	80 93 52 08 	sts	0x0852, r24	; 0x800852 <sprites_tile_banks>
    8242:	90 93 53 08 	sts	0x0853, r25	; 0x800853 <sprites_tile_banks+0x1>
    8246:	08 95       	ret

00008248 <ClearVram>:
    8248:	e0 e2       	ldi	r30, 0x20	; 32
    824a:	f4 e0       	ldi	r31, 0x04	; 4
    824c:	a0 e0       	ldi	r26, 0x00	; 0
    824e:	bb e0       	ldi	r27, 0x0B	; 11
    8250:	6b e1       	ldi	r22, 0x1B	; 27

00008252 <fill_vram_loop>:
    8252:	6d 93       	st	X+, r22
    8254:	31 97       	sbiw	r30, 0x01	; 1
    8256:	e9 f7       	brne	.-6      	; 0x8252 <fill_vram_loop>
    8258:	11 24       	eor	r1, r1
    825a:	08 95       	ret

0000825c <SetTile>:
    825c:	8f 71       	andi	r24, 0x1F	; 31
    825e:	76 2f       	mov	r23, r22
    8260:	66 95       	lsr	r22
    8262:	66 95       	lsr	r22
    8264:	66 95       	lsr	r22
    8266:	28 e0       	ldi	r18, 0x08	; 8
    8268:	82 9f       	mul	r24, r18
    826a:	d0 01       	movw	r26, r0
    826c:	a0 50       	subi	r26, 0x00	; 0
    826e:	b5 4f       	sbci	r27, 0xF5	; 245
    8270:	b6 0f       	add	r27, r22
    8272:	77 70       	andi	r23, 0x07	; 7
    8274:	a7 0f       	add	r26, r23
    8276:	45 5e       	subi	r20, 0xE5	; 229
    8278:	4c 93       	st	X, r20
    827a:	11 24       	eor	r1, r1
    827c:	08 95       	ret

0000827e <SetTileTable>:
    827e:	80 93 5a 08 	sts	0x085A, r24	; 0x80085a <tile_table_lo>
    8282:	90 93 5b 08 	sts	0x085B, r25	; 0x80085b <tile_table_hi>
    8286:	08 95       	ret

00008288 <GetVsyncFlag>:
    8288:	80 91 66 08 	lds	r24, 0x0866	; 0x800866 <sync_flags>
    828c:	81 70       	andi	r24, 0x01	; 1
    828e:	08 95       	ret

00008290 <ClearVsyncFlag>:
    8290:	20 91 66 08 	lds	r18, 0x0866	; 0x800866 <sync_flags>
    8294:	2e 7f       	andi	r18, 0xFE	; 254
    8296:	20 93 66 08 	sts	0x0866, r18	; 0x800866 <sync_flags>
    829a:	08 95       	ret

0000829c <ReadJoypad>:
    829c:	88 23       	and	r24, r24
    829e:	29 f4       	brne	.+10     	; 0x82aa <rj_p2>
    82a0:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad1_status_lo>
    82a4:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad1_status_lo+0x1>
    82a8:	08 95       	ret

000082aa <rj_p2>:
    82aa:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <joypad2_status_lo>
    82ae:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <joypad2_status_lo+0x1>
    82b2:	08 95       	ret

000082b4 <SoftReset>:
    82b4:	e0 e6       	ldi	r30, 0x60	; 96
    82b6:	f0 e0       	ldi	r31, 0x00	; 0
    82b8:	80 81       	ld	r24, Z
    82ba:	83 fd       	sbrc	r24, 3
    82bc:	08 95       	ret
    82be:	88 e1       	ldi	r24, 0x18	; 24
    82c0:	98 e0       	ldi	r25, 0x08	; 8
    82c2:	f8 94       	cli
    82c4:	80 83       	st	Z, r24
    82c6:	90 83       	st	Z, r25
    82c8:	78 94       	sei
    82ca:	ff cf       	rjmp	.-2      	; 0x82ca <SoftReset+0x16>

000082cc <WriteEeprom>:
    82cc:	f9 99       	sbic	0x1f, 1	; 31
    82ce:	fe cf       	rjmp	.-4      	; 0x82cc <WriteEeprom>
    82d0:	92 bd       	out	0x22, r25	; 34
    82d2:	81 bd       	out	0x21, r24	; 33
    82d4:	60 bd       	out	0x20, r22	; 32
    82d6:	f8 94       	cli
    82d8:	fa 9a       	sbi	0x1f, 2	; 31
    82da:	f9 9a       	sbi	0x1f, 1	; 31
    82dc:	78 94       	sei
    82de:	08 95       	ret

000082e0 <ReadEeprom>:
    82e0:	f9 99       	sbic	0x1f, 1	; 31
    82e2:	fe cf       	rjmp	.-4      	; 0x82e0 <ReadEeprom>
    82e4:	92 bd       	out	0x22, r25	; 34
    82e6:	81 bd       	out	0x21, r24	; 33
    82e8:	f8 94       	cli
    82ea:	f8 9a       	sbi	0x1f, 0	; 31
    82ec:	80 b5       	in	r24, 0x20	; 32
    82ee:	78 94       	sei
    82f0:	08 95       	ret

000082f2 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    82f2:	80 93 69 08 	sts	0x0869, r24	; 0x800869 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    82f6:	90 93 6a 08 	sts	0x086A, r25	; 0x80086a <post_vsync_user_callback+0x1>
	ret
    82fa:	08 95       	ret

000082fc <ReadButtons>:
    82fc:	12 9a       	sbi	0x02, 2	; 2
    82fe:	c8 95       	lpm
    8300:	c8 95       	lpm
    8302:	c8 95       	lpm
    8304:	c8 95       	lpm
    8306:	12 98       	cbi	0x02, 2	; 2
    8308:	40 e1       	ldi	r20, 0x10	; 16
    830a:	80 e0       	ldi	r24, 0x00	; 0
    830c:	90 e0       	ldi	r25, 0x00	; 0
    830e:	20 e0       	ldi	r18, 0x00	; 0
    8310:	30 e0       	ldi	r19, 0x00	; 0
    8312:	36 95       	lsr	r19
    8314:	27 95       	ror	r18
    8316:	96 95       	lsr	r25
    8318:	87 95       	ror	r24
    831a:	c8 95       	lpm
    831c:	c8 95       	lpm
    831e:	c8 95       	lpm
    8320:	c8 95       	lpm
    8322:	13 98       	cbi	0x02, 3	; 2
    8324:	00 9b       	sbis	0x00, 0	; 0
    8326:	30 68       	ori	r19, 0x80	; 128
    8328:	01 9b       	sbis	0x00, 1	; 0
    832a:	90 68       	ori	r25, 0x80	; 128
    832c:	13 9a       	sbi	0x02, 3	; 2
    832e:	c8 95       	lpm
    8330:	c8 95       	lpm
    8332:	c8 95       	lpm
    8334:	c8 95       	lpm
    8336:	41 50       	subi	r20, 0x01	; 1
    8338:	61 f7       	brne	.-40     	; 0x8312 <ReadButtons+0x16>
    833a:	30 93 6e 08 	sts	0x086E, r19	; 0x80086e <joypad1_status_lo+0x1>
    833e:	20 93 6d 08 	sts	0x086D, r18	; 0x80086d <joypad1_status_lo>
    8342:	90 93 72 08 	sts	0x0872, r25	; 0x800872 <joypad2_status_lo+0x1>
    8346:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <joypad2_status_lo>
    834a:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad1_status_lo>
    834e:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad1_status_lo+0x1>
    8352:	0f 97       	sbiw	r24, 0x0f	; 15
    8354:	31 f0       	breq	.+12     	; 0x8362 <ReadButtons+0x66>
    8356:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <joypad2_status_lo>
    835a:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <joypad2_status_lo+0x1>
    835e:	0f 97       	sbiw	r24, 0x0f	; 15
    8360:	11 f4       	brne	.+4      	; 0x8366 <ReadButtons+0x6a>
    8362:	0c 94 5a 41 	jmp	0x82b4	; 0x82b4 <SoftReset>
    8366:	08 95       	ret

00008368 <ReadControllers>:
    8368:	10 92 9e 08 	sts	0x089E, r1	; 0x80089e <joypadsConnectionStatus>
    836c:	00 99       	sbic	0x00, 0	; 0
    836e:	03 c0       	rjmp	.+6      	; 0x8376 <ReadControllers+0xe>
    8370:	81 e0       	ldi	r24, 0x01	; 1
    8372:	80 93 9e 08 	sts	0x089E, r24	; 0x80089e <joypadsConnectionStatus>
    8376:	01 99       	sbic	0x00, 1	; 0
    8378:	05 c0       	rjmp	.+10     	; 0x8384 <ReadControllers+0x1c>
    837a:	80 91 9e 08 	lds	r24, 0x089E	; 0x80089e <joypadsConnectionStatus>
    837e:	82 60       	ori	r24, 0x02	; 2
    8380:	80 93 9e 08 	sts	0x089E, r24	; 0x80089e <joypadsConnectionStatus>
    8384:	0c 94 7e 41 	jmp	0x82fc	; 0x82fc <ReadButtons>

00008388 <FormatEeprom>:
    8388:	cf 93       	push	r28
    838a:	df 93       	push	r29
    838c:	c0 e0       	ldi	r28, 0x00	; 0
    838e:	d0 e0       	ldi	r29, 0x00	; 0
    8390:	fe 01       	movw	r30, r28
    8392:	ee 55       	subi	r30, 0x5E	; 94
    8394:	ff 4f       	sbci	r31, 0xFF	; 255
    8396:	64 91       	lpm	r22, Z
    8398:	ce 01       	movw	r24, r28
    839a:	0e 94 66 41 	call	0x82cc	; 0x82cc <WriteEeprom>
    839e:	21 96       	adiw	r28, 0x01	; 1
    83a0:	c0 32       	cpi	r28, 0x20	; 32
    83a2:	d1 05       	cpc	r29, r1
    83a4:	a9 f7       	brne	.-22     	; 0x8390 <FormatEeprom+0x8>
    83a6:	c0 e2       	ldi	r28, 0x20	; 32
    83a8:	d0 e0       	ldi	r29, 0x00	; 0
    83aa:	6f ef       	ldi	r22, 0xFF	; 255
    83ac:	ce 01       	movw	r24, r28
    83ae:	0e 94 66 41 	call	0x82cc	; 0x82cc <WriteEeprom>
    83b2:	6f ef       	ldi	r22, 0xFF	; 255
    83b4:	ce 01       	movw	r24, r28
    83b6:	01 96       	adiw	r24, 0x01	; 1
    83b8:	0e 94 66 41 	call	0x82cc	; 0x82cc <WriteEeprom>
    83bc:	a0 96       	adiw	r28, 0x20	; 32
    83be:	c1 15       	cp	r28, r1
    83c0:	88 e0       	ldi	r24, 0x08	; 8
    83c2:	d8 07       	cpc	r29, r24
    83c4:	91 f7       	brne	.-28     	; 0x83aa <FormatEeprom+0x22>
    83c6:	df 91       	pop	r29
    83c8:	cf 91       	pop	r28
    83ca:	08 95       	ret

000083cc <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    83cc:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    83ce:	80 e0       	ldi	r24, 0x00	; 0
    83d0:	90 e0       	ldi	r25, 0x00	; 0
    83d2:	0e 94 70 41 	call	0x82e0	; 0x82e0 <ReadEeprom>
    83d6:	c8 2f       	mov	r28, r24
    83d8:	81 e0       	ldi	r24, 0x01	; 1
    83da:	90 e0       	ldi	r25, 0x00	; 0
    83dc:	0e 94 70 41 	call	0x82e0	; 0x82e0 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    83e0:	28 2f       	mov	r18, r24
    83e2:	30 e0       	ldi	r19, 0x00	; 0
    83e4:	32 2f       	mov	r19, r18
    83e6:	22 27       	eor	r18, r18
    83e8:	2c 0f       	add	r18, r28
    83ea:	31 1d       	adc	r19, r1
    83ec:	81 e0       	ldi	r24, 0x01	; 1
    83ee:	2a 35       	cpi	r18, 0x5A	; 90
    83f0:	35 45       	sbci	r19, 0x55	; 85
    83f2:	09 f0       	breq	.+2      	; 0x83f6 <isEepromFormatted+0x2a>
    83f4:	80 e0       	ldi	r24, 0x00	; 0
}
    83f6:	cf 91       	pop	r28
    83f8:	08 95       	ret

000083fa <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    83fa:	fc 01       	movw	r30, r24
    83fc:	67 87       	std	Z+15, r22	; 0x0f
    83fe:	08 95       	ret

00008400 <PatchCommand01>:
    8400:	ea e7       	ldi	r30, 0x7A	; 122
    8402:	f8 e0       	ldi	r31, 0x08	; 8
    8404:	81 e0       	ldi	r24, 0x01	; 1
    8406:	91 e0       	ldi	r25, 0x01	; 1
    8408:	95 8b       	std	Z+21, r25	; 0x15
    840a:	84 8b       	std	Z+20, r24	; 0x14
    840c:	63 8b       	std	Z+19, r22	; 0x13
    840e:	08 95       	ret

00008410 <PatchCommand05>:
    8410:	fc 01       	movw	r30, r24
    8412:	90 81       	ld	r25, Z
    8414:	9f 75       	andi	r25, 0x5F	; 95
    8416:	90 83       	st	Z, r25
    8418:	08 95       	ret

0000841a <PatchCommand06>:
    841a:	fc 01       	movw	r30, r24
    841c:	90 81       	ld	r25, Z
    841e:	90 64       	ori	r25, 0x40	; 64
    8420:	90 83       	st	Z, r25
    8422:	08 95       	ret

00008424 <PatchCommand07>:
    8424:	fc 01       	movw	r30, r24
    8426:	66 87       	std	Z+14, r22	; 0x0e
    8428:	08 95       	ret

0000842a <PatchCommand09>:
    842a:	fc 01       	movw	r30, r24
    842c:	62 87       	std	Z+10, r22	; 0x0a
    842e:	08 95       	ret

00008430 <PatchCommand10>:
    8430:	fc 01       	movw	r30, r24
    8432:	63 87       	std	Z+11, r22	; 0x0b
    8434:	08 95       	ret

00008436 <PatchCommand11>:
    8436:	cf 93       	push	r28
    8438:	df 93       	push	r29
    843a:	ec 01       	movw	r28, r24
    843c:	26 2f       	mov	r18, r22
    843e:	89 81       	ldd	r24, Y+1	; 0x01
    8440:	90 e0       	ldi	r25, 0x00	; 0
    8442:	fc 01       	movw	r30, r24
    8444:	ee 0f       	add	r30, r30
    8446:	ff 1f       	adc	r31, r31
    8448:	e4 59       	subi	r30, 0x94	; 148
    844a:	f3 47       	sbci	r31, 0x73	; 115
    844c:	45 91       	lpm	r20, Z+
    844e:	54 91       	lpm	r21, Z
    8450:	fc 01       	movw	r30, r24
    8452:	e6 0f       	add	r30, r22
    8454:	f1 1d       	adc	r31, r1
    8456:	67 fd       	sbrc	r22, 7
    8458:	fa 95       	dec	r31
    845a:	ee 0f       	add	r30, r30
    845c:	ff 1f       	adc	r31, r31
    845e:	e4 59       	subi	r30, 0x94	; 148
    8460:	f3 47       	sbci	r31, 0x73	; 115
    8462:	85 91       	lpm	r24, Z+
    8464:	94 91       	lpm	r25, Z
    8466:	84 1b       	sub	r24, r20
    8468:	95 0b       	sbc	r25, r21
    846a:	68 85       	ldd	r22, Y+8	; 0x08
    846c:	70 e0       	ldi	r23, 0x00	; 0
    846e:	0e 94 e6 66 	call	0xcdcc	; 0xcdcc <__divmodhi4>
    8472:	61 15       	cp	r22, r1
    8474:	71 05       	cpc	r23, r1
    8476:	11 f4       	brne	.+4      	; 0x847c <PatchCommand11+0x46>
    8478:	61 e0       	ldi	r22, 0x01	; 1
    847a:	70 e0       	ldi	r23, 0x00	; 0
    847c:	ea 81       	ldd	r30, Y+2	; 0x02
    847e:	86 e0       	ldi	r24, 0x06	; 6
    8480:	e8 9f       	mul	r30, r24
    8482:	f0 01       	movw	r30, r0
    8484:	11 24       	eor	r1, r1
    8486:	e6 58       	subi	r30, 0x86	; 134
    8488:	f7 4f       	sbci	r31, 0xF7	; 247
    848a:	81 81       	ldd	r24, Z+1	; 0x01
    848c:	92 81       	ldd	r25, Z+2	; 0x02
    848e:	86 0f       	add	r24, r22
    8490:	97 1f       	adc	r25, r23
    8492:	92 83       	std	Z+2, r25	; 0x02
    8494:	81 83       	std	Z+1, r24	; 0x01
    8496:	7e 83       	std	Y+6, r23	; 0x06
    8498:	6d 83       	std	Y+5, r22	; 0x05
    849a:	88 81       	ld	r24, Y
    849c:	88 60       	ori	r24, 0x08	; 8
    849e:	88 83       	st	Y, r24
    84a0:	89 81       	ldd	r24, Y+1	; 0x01
    84a2:	28 0f       	add	r18, r24
    84a4:	2f 83       	std	Y+7, r18	; 0x07
    84a6:	df 91       	pop	r29
    84a8:	cf 91       	pop	r28
    84aa:	08 95       	ret

000084ac <PatchCommand12>:
    84ac:	fc 01       	movw	r30, r24
    84ae:	60 87       	std	Z+8, r22	; 0x08
    84b0:	08 95       	ret

000084b2 <PatchCommand13>:
    84b2:	fc 01       	movw	r30, r24
    84b4:	64 83       	std	Z+4, r22	; 0x04
    84b6:	08 95       	ret

000084b8 <PatchCommand02>:
    84b8:	fc 01       	movw	r30, r24
    84ba:	82 81       	ldd	r24, Z+2	; 0x02
    84bc:	0c 94 19 46 	jmp	0x8c32	; 0x8c32 <SetMixerWave>

000084c0 <PatchCommand03>:
    84c0:	fc 01       	movw	r30, r24
    84c2:	91 81       	ldd	r25, Z+1	; 0x01
    84c4:	69 0f       	add	r22, r25
    84c6:	61 83       	std	Z+1, r22	; 0x01
    84c8:	82 81       	ldd	r24, Z+2	; 0x02
    84ca:	0c 94 02 46 	jmp	0x8c04	; 0x8c04 <SetMixerNote>

000084ce <PatchCommand04>:
    84ce:	fc 01       	movw	r30, r24
    84d0:	91 81       	ldd	r25, Z+1	; 0x01
    84d2:	96 1b       	sub	r25, r22
    84d4:	69 2f       	mov	r22, r25
    84d6:	91 83       	std	Z+1, r25	; 0x01
    84d8:	82 81       	ldd	r24, Z+2	; 0x02
    84da:	0c 94 02 46 	jmp	0x8c04	; 0x8c04 <SetMixerNote>

000084de <PatchCommand08>:
    84de:	1f 93       	push	r17
    84e0:	cf 93       	push	r28
    84e2:	df 93       	push	r29
    84e4:	ec 01       	movw	r28, r24
    84e6:	16 2f       	mov	r17, r22
    84e8:	8a 81       	ldd	r24, Y+2	; 0x02
    84ea:	0e 94 02 46 	call	0x8c04	; 0x8c04 <SetMixerNote>
    84ee:	19 83       	std	Y+1, r17	; 0x01
    84f0:	88 81       	ld	r24, Y
    84f2:	87 7f       	andi	r24, 0xF7	; 247
    84f4:	88 83       	st	Y, r24
    84f6:	df 91       	pop	r29
    84f8:	cf 91       	pop	r28
    84fa:	1f 91       	pop	r17
    84fc:	08 95       	ret

000084fe <PatchCommand14>:
    84fe:	dc 01       	movw	r26, r24
    8500:	14 96       	adiw	r26, 0x04	; 4
    8502:	8c 91       	ld	r24, X
    8504:	14 97       	sbiw	r26, 0x04	; 4
    8506:	88 23       	and	r24, r24
    8508:	19 f1       	breq	.+70     	; 0x8550 <PatchCommand14+0x52>
    850a:	55 96       	adiw	r26, 0x15	; 21
    850c:	2d 91       	ld	r18, X+
    850e:	3c 91       	ld	r19, X
    8510:	56 97       	sbiw	r26, 0x16	; 22
    8512:	66 23       	and	r22, r22
    8514:	79 f0       	breq	.+30     	; 0x8534 <PatchCommand14+0x36>
    8516:	06 2e       	mov	r0, r22
    8518:	00 0c       	add	r0, r0
    851a:	77 0b       	sbc	r23, r23
    851c:	6f 5f       	subi	r22, 0xFF	; 255
    851e:	7f 4f       	sbci	r23, 0xFF	; 255
    8520:	ab 01       	movw	r20, r22
    8522:	44 0f       	add	r20, r20
    8524:	55 1f       	adc	r21, r21
    8526:	64 0f       	add	r22, r20
    8528:	75 1f       	adc	r23, r21
    852a:	26 1b       	sub	r18, r22
    852c:	37 0b       	sbc	r19, r23
    852e:	09 c0       	rjmp	.+18     	; 0x8542 <PatchCommand14+0x44>
    8530:	ef 3f       	cpi	r30, 0xFF	; 255
    8532:	39 f0       	breq	.+14     	; 0x8542 <PatchCommand14+0x44>
    8534:	23 50       	subi	r18, 0x03	; 3
    8536:	31 09       	sbc	r19, r1
    8538:	f9 01       	movw	r30, r18
    853a:	32 97       	sbiw	r30, 0x02	; 2
    853c:	e4 91       	lpm	r30, Z
    853e:	ed 30       	cpi	r30, 0x0D	; 13
    8540:	b9 f7       	brne	.-18     	; 0x8530 <PatchCommand14+0x32>
    8542:	56 96       	adiw	r26, 0x16	; 22
    8544:	3c 93       	st	X, r19
    8546:	2e 93       	st	-X, r18
    8548:	55 97       	sbiw	r26, 0x15	; 21
    854a:	81 50       	subi	r24, 0x01	; 1
    854c:	14 96       	adiw	r26, 0x04	; 4
    854e:	8c 93       	st	X, r24
    8550:	08 95       	ret

00008552 <InitMusicPlayer>:
    8552:	90 93 17 09 	sts	0x0917, r25	; 0x800917 <patchPointers+0x1>
    8556:	80 93 16 09 	sts	0x0916, r24	; 0x800916 <patchPointers>
    855a:	8f e6       	ldi	r24, 0x6F	; 111
    855c:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <masterVolume>
    8560:	10 92 78 08 	sts	0x0878, r1	; 0x800878 <playSong>
    8564:	e1 ea       	ldi	r30, 0xA1	; 161
    8566:	f8 e0       	ldi	r31, 0x08	; 8
    8568:	80 e0       	ldi	r24, 0x00	; 0
    856a:	90 e1       	ldi	r25, 0x10	; 16
    856c:	3f ef       	ldi	r19, 0xFF	; 255
    856e:	28 e1       	ldi	r18, 0x18	; 24
    8570:	82 83       	std	Z+2, r24	; 0x02
    8572:	90 83       	st	Z, r25
    8574:	15 86       	std	Z+13, r1	; 0x0d
    8576:	34 87       	std	Z+12, r19	; 0x0c
    8578:	10 8a       	std	Z+16, r1	; 0x10
    857a:	23 87       	std	Z+11, r18	; 0x0b
    857c:	90 87       	std	Z+8, r25	; 0x08
    857e:	8f 5f       	subi	r24, 0xFF	; 255
    8580:	77 96       	adiw	r30, 0x17	; 23
    8582:	85 30       	cpi	r24, 0x05	; 5
    8584:	a9 f7       	brne	.-22     	; 0x8570 <InitMusicPlayer+0x1e>
    8586:	08 95       	ret

00008588 <StartSong>:
    8588:	e1 ea       	ldi	r30, 0xA1	; 161
    858a:	f8 e0       	ldi	r31, 0x08	; 8
    858c:	3f ef       	ldi	r19, 0xFF	; 255
    858e:	20 81       	ld	r18, Z
    8590:	2f 77       	andi	r18, 0x7F	; 127
    8592:	20 83       	st	Z, r18
    8594:	33 83       	std	Z+3, r19	; 0x03
    8596:	77 96       	adiw	r30, 0x17	; 23
    8598:	29 e0       	ldi	r18, 0x09	; 9
    859a:	e4 31       	cpi	r30, 0x14	; 20
    859c:	f2 07       	cpc	r31, r18
    859e:	b9 f7       	brne	.-18     	; 0x858e <StartSong+0x6>
    85a0:	01 96       	adiw	r24, 0x01	; 1
    85a2:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <songPos+0x1>
    85a6:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <songPos>
    85aa:	90 93 a0 08 	sts	0x08A0, r25	; 0x8008a0 <songStart+0x1>
    85ae:	80 93 9f 08 	sts	0x089F, r24	; 0x80089f <songStart>
    85b2:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <loopStart+0x1>
    85b6:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <loopStart>
    85ba:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <nextDeltaTime+0x1>
    85be:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <nextDeltaTime>
    85c2:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <currDeltaTime+0x1>
    85c6:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <currDeltaTime>
    85ca:	10 92 1c 09 	sts	0x091C, r1	; 0x80091c <songSpeed>
    85ce:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <lastStatus>
    85d2:	81 e0       	ldi	r24, 0x01	; 1
    85d4:	80 93 78 08 	sts	0x0878, r24	; 0x800878 <playSong>
    85d8:	08 95       	ret

000085da <StopSong>:
    85da:	e1 ea       	ldi	r30, 0xA1	; 161
    85dc:	f8 e0       	ldi	r31, 0x08	; 8
    85de:	8a ef       	ldi	r24, 0xFA	; 250
    85e0:	87 87       	std	Z+15, r24	; 0x0f
    85e2:	86 a3       	std	Z+38, r24	; 0x26
    85e4:	85 af       	std	Z+61, r24	; 0x3d
    85e6:	80 93 f5 08 	sts	0x08F5, r24	; 0x8008f5 <tracks+0x54>
    85ea:	80 93 0c 09 	sts	0x090C, r24	; 0x80090c <tracks+0x6b>
    85ee:	10 92 78 08 	sts	0x0878, r1	; 0x800878 <playSong>
    85f2:	08 95       	ret

000085f4 <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    85f4:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    85f6:	ed 91       	ld	r30, X+
    85f8:	fc 91       	ld	r31, X
    85fa:	11 97       	sbiw	r26, 0x01	; 1
    85fc:	9f 01       	movw	r18, r30
    85fe:	2f 5f       	subi	r18, 0xFF	; 255
    8600:	3f 4f       	sbci	r19, 0xFF	; 255
    8602:	11 96       	adiw	r26, 0x01	; 1
    8604:	3c 93       	st	X, r19
    8606:	2e 93       	st	-X, r18
    8608:	e4 91       	lpm	r30, Z
    860a:	e7 fd       	sbrc	r30, 7
    860c:	03 c0       	rjmp	.+6      	; 0x8614 <ReadVarLen+0x20>
    860e:	8e 2f       	mov	r24, r30
    8610:	90 e0       	ldi	r25, 0x00	; 0
    8612:	08 95       	ret
    {
       value &= 0x7F;
    8614:	ef 77       	andi	r30, 0x7F	; 127
    8616:	8e 2f       	mov	r24, r30
    8618:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    861a:	96 95       	lsr	r25
    861c:	98 2f       	mov	r25, r24
    861e:	88 27       	eor	r24, r24
    8620:	97 95       	ror	r25
    8622:	87 95       	ror	r24
    8624:	2f 5f       	subi	r18, 0xFF	; 255
    8626:	3f 4f       	sbci	r19, 0xFF	; 255
    8628:	f9 01       	movw	r30, r18
    862a:	31 97       	sbiw	r30, 0x01	; 1
    862c:	e4 91       	lpm	r30, Z
    862e:	4e 2f       	mov	r20, r30
    8630:	4f 77       	andi	r20, 0x7F	; 127
    8632:	84 0f       	add	r24, r20
    8634:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    8636:	e7 fd       	sbrc	r30, 7
    8638:	f0 cf       	rjmp	.-32     	; 0x861a <ReadVarLen+0x26>
    863a:	2d 93       	st	X+, r18
    863c:	3c 93       	st	X, r19
    }


    return value;
}
    863e:	08 95       	ret

00008640 <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    8640:	ff 92       	push	r15
    8642:	0f 93       	push	r16
    8644:	1f 93       	push	r17
    8646:	cf 93       	push	r28
    8648:	df 93       	push	r29
    864a:	ec 01       	movw	r28, r24
    864c:	16 2f       	mov	r17, r22
    864e:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    8650:	88 81       	ld	r24, Y
    8652:	28 2f       	mov	r18, r24
    8654:	20 78       	andi	r18, 0x80	; 128
    8656:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    8658:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    865a:	9f ef       	ldi	r25, 0xFF	; 255
    865c:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    865e:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    8660:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    8662:	87 7b       	andi	r24, 0xB7	; 183
    8664:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    8666:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    8668:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    866a:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    866c:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    866e:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    8670:	8a 81       	ldd	r24, Y+2	; 0x02
    8672:	83 30       	cpi	r24, 0x03	; 3
    8674:	69 f4       	brne	.+26     	; 0x8690 <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    8676:	21 11       	cpse	r18, r1
    8678:	01 c0       	rjmp	.+2      	; 0x867c <TriggerCommon+0x3c>
    867a:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    867c:	81 e0       	ldi	r24, 0x01	; 1
    867e:	91 e0       	ldi	r25, 0x01	; 1
    8680:	90 93 8f 08 	sts	0x088F, r25	; 0x80088f <tr4_barrel_hi>
    8684:	80 93 8e 08 	sts	0x088E, r24	; 0x80088e <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    8688:	81 e0       	ldi	r24, 0x01	; 1
    868a:	80 93 8d 08 	sts	0x088D, r24	; 0x80088d <tr4_params>
    868e:	36 c0       	rjmp	.+108    	; 0x86fc <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    8690:	84 30       	cpi	r24, 0x04	; 4
    8692:	69 f5       	brne	.+90     	; 0x86ee <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    8694:	10 92 95 08 	sts	0x0895, r1	; 0x800895 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    8698:	80 91 16 09 	lds	r24, 0x0916	; 0x800916 <patchPointers>
    869c:	90 91 17 09 	lds	r25, 0x0917	; 0x800917 <patchPointers+0x1>
    86a0:	e9 e0       	ldi	r30, 0x09	; 9
    86a2:	6e 9f       	mul	r22, r30
    86a4:	80 0d       	add	r24, r0
    86a6:	91 1d       	adc	r25, r1
    86a8:	11 24       	eor	r1, r1
    86aa:	fc 01       	movw	r30, r24
    86ac:	31 96       	adiw	r30, 0x01	; 1
    86ae:	45 91       	lpm	r20, Z+
    86b0:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    86b2:	50 93 97 08 	sts	0x0897, r21	; 0x800897 <tr5_pos_hi>
    86b6:	40 93 96 08 	sts	0x0896, r20	; 0x800896 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    86ba:	9c 01       	movw	r18, r24
    86bc:	29 5f       	subi	r18, 0xF9	; 249
    86be:	3f 4f       	sbci	r19, 0xFF	; 255
    86c0:	f9 01       	movw	r30, r18
    86c2:	65 91       	lpm	r22, Z+
    86c4:	74 91       	lpm	r23, Z
    86c6:	05 96       	adiw	r24, 0x05	; 5
    86c8:	fc 01       	movw	r30, r24
    86ca:	85 91       	lpm	r24, Z+
    86cc:	94 91       	lpm	r25, Z
    86ce:	68 1b       	sub	r22, r24
    86d0:	79 0b       	sbc	r23, r25
    86d2:	70 93 99 08 	sts	0x0899, r23	; 0x800899 <tr5_loop_len_hi>
    86d6:	60 93 98 08 	sts	0x0898, r22	; 0x800898 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    86da:	f9 01       	movw	r30, r18
    86dc:	85 91       	lpm	r24, Z+
    86de:	94 91       	lpm	r25, Z
    86e0:	48 0f       	add	r20, r24
    86e2:	59 1f       	adc	r21, r25
    86e4:	50 93 9b 08 	sts	0x089B, r21	; 0x80089b <tr5_loop_end_hi>
    86e8:	40 93 9a 08 	sts	0x089A, r20	; 0x80089a <tr5_loop_end_lo>
    86ec:	03 c0       	rjmp	.+6      	; 0x86f4 <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    86ee:	60 e0       	ldi	r22, 0x00	; 0
    86f0:	0e 94 19 46 	call	0x8c32	; 0x8c32 <SetMixerWave>
			SetMixerNote(track->channel,note);
    86f4:	60 2f       	mov	r22, r16
    86f6:	8a 81       	ldd	r24, Y+2	; 0x02
    86f8:	0e 94 02 46 	call	0x8c04	; 0x8c04 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    86fc:	ff 20       	and	r15, r15
    86fe:	11 f0       	breq	.+4      	; 0x8704 <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    8700:	19 8b       	std	Y+17, r17	; 0x11
    8702:	01 c0       	rjmp	.+2      	; 0x8706 <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    8704:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    8706:	e0 91 16 09 	lds	r30, 0x0916	; 0x800916 <patchPointers>
    870a:	f0 91 17 09 	lds	r31, 0x0917	; 0x800917 <patchPointers+0x1>
    870e:	29 e0       	ldi	r18, 0x09	; 9
    8710:	12 9f       	mul	r17, r18
    8712:	e0 0d       	add	r30, r0
    8714:	f1 1d       	adc	r31, r1
    8716:	11 24       	eor	r1, r1
    8718:	33 96       	adiw	r30, 0x03	; 3
    871a:	85 91       	lpm	r24, Z+
    871c:	94 91       	lpm	r25, Z
	if(pos==NULL){
    871e:	00 97       	sbiw	r24, 0x00	; 0
    8720:	19 f4       	brne	.+6      	; 0x8728 <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    8722:	1e 8a       	std	Y+22, r1	; 0x16
    8724:	1d 8a       	std	Y+21, r1	; 0x15
    8726:	07 c0       	rjmp	.+14     	; 0x8736 <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    8728:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    872a:	fc 01       	movw	r30, r24
    872c:	24 91       	lpm	r18, Z
    872e:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    8730:	01 96       	adiw	r24, 0x01	; 1
    8732:	9e 8b       	std	Y+22, r25	; 0x16
    8734:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    8736:	df 91       	pop	r29
    8738:	cf 91       	pop	r28
    873a:	1f 91       	pop	r17
    873c:	0f 91       	pop	r16
    873e:	ff 90       	pop	r15
    8740:	08 95       	ret

00008742 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    8742:	cf 93       	push	r28
    8744:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    8746:	e0 91 16 09 	lds	r30, 0x0916	; 0x800916 <patchPointers>
    874a:	f0 91 17 09 	lds	r31, 0x0917	; 0x800917 <patchPointers+0x1>
    874e:	99 e0       	ldi	r25, 0x09	; 9
    8750:	89 9f       	mul	r24, r25
    8752:	e0 0d       	add	r30, r0
    8754:	f1 1d       	adc	r31, r1
    8756:	11 24       	eor	r1, r1
    8758:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    875a:	e1 30       	cpi	r30, 0x01	; 1
    875c:	e9 f0       	breq	.+58     	; 0x8798 <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    875e:	e2 30       	cpi	r30, 0x02	; 2
    8760:	e9 f0       	breq	.+58     	; 0x879c <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    8762:	90 91 b8 08 	lds	r25, 0x08B8	; 0x8008b8 <tracks+0x17>
    8766:	97 ff       	sbrs	r25, 7
    8768:	1b c0       	rjmp	.+54     	; 0x87a0 <TriggerFx+0x5e>
    876a:	90 91 c9 08 	lds	r25, 0x08C9	; 0x8008c9 <tracks+0x28>
    876e:	89 13       	cpse	r24, r25
    8770:	02 c0       	rjmp	.+4      	; 0x8776 <TriggerFx+0x34>
    8772:	41 11       	cpse	r20, r1
    8774:	15 c0       	rjmp	.+42     	; 0x87a0 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    8776:	90 91 cf 08 	lds	r25, 0x08CF	; 0x8008cf <tracks+0x2e>
    877a:	97 ff       	sbrs	r25, 7
    877c:	13 c0       	rjmp	.+38     	; 0x87a4 <TriggerFx+0x62>
    877e:	90 91 e0 08 	lds	r25, 0x08E0	; 0x8008e0 <tracks+0x3f>
    8782:	89 13       	cpse	r24, r25
    8784:	02 c0       	rjmp	.+4      	; 0x878a <TriggerFx+0x48>
    8786:	41 11       	cpse	r20, r1
    8788:	0d c0       	rjmp	.+26     	; 0x87a4 <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    878a:	20 91 cc 08 	lds	r18, 0x08CC	; 0x8008cc <tracks+0x2b>
    878e:	90 91 e3 08 	lds	r25, 0x08E3	; 0x8008e3 <tracks+0x42>
    8792:	92 17       	cp	r25, r18
    8794:	38 f4       	brcc	.+14     	; 0x87a4 <TriggerFx+0x62>
    8796:	04 c0       	rjmp	.+8      	; 0x87a0 <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    8798:	c3 e0       	ldi	r28, 0x03	; 3
    879a:	05 c0       	rjmp	.+10     	; 0x87a6 <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    879c:	c4 e0       	ldi	r28, 0x04	; 4
    879e:	03 c0       	rjmp	.+6      	; 0x87a6 <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    87a0:	c1 e0       	ldi	r28, 0x01	; 1
    87a2:	01 c0       	rjmp	.+2      	; 0x87a6 <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    87a4:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    87a6:	97 e1       	ldi	r25, 0x17	; 23
    87a8:	c9 9f       	mul	r28, r25
    87aa:	e0 01       	movw	r28, r0
    87ac:	11 24       	eor	r1, r1
    87ae:	cf 55       	subi	r28, 0x5F	; 95
    87b0:	d7 4f       	sbci	r29, 0xF7	; 247
    87b2:	90 e8       	ldi	r25, 0x80	; 128
    87b4:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    87b6:	1e 8a       	std	Y+22, r1	; 0x16
    87b8:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    87ba:	20 e5       	ldi	r18, 0x50	; 80
    87bc:	46 2f       	mov	r20, r22
    87be:	68 2f       	mov	r22, r24
    87c0:	ce 01       	movw	r24, r28
    87c2:	0e 94 20 43 	call	0x8640	; 0x8640 <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    87c6:	88 81       	ld	r24, Y
    87c8:	80 62       	ori	r24, 0x20	; 32
    87ca:	88 83       	st	Y, r24
}
    87cc:	df 91       	pop	r29
    87ce:	cf 91       	pop	r28
    87d0:	08 95       	ret

000087d2 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    87d2:	cf 93       	push	r28
    87d4:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    87d6:	a8 2f       	mov	r26, r24
    87d8:	b0 e0       	ldi	r27, 0x00	; 0
    87da:	97 e1       	ldi	r25, 0x17	; 23
    87dc:	89 9f       	mul	r24, r25
    87de:	f0 01       	movw	r30, r0
    87e0:	11 24       	eor	r1, r1
    87e2:	ef 55       	subi	r30, 0x5F	; 95
    87e4:	f7 4f       	sbci	r31, 0xF7	; 247
    87e6:	80 81       	ld	r24, Z
    87e8:	85 ff       	sbrs	r24, 5
    87ea:	02 c0       	rjmp	.+4      	; 0x87f0 <TriggerNote+0x1e>
    87ec:	87 fd       	sbrc	r24, 7
    87ee:	2e c0       	rjmp	.+92     	; 0x884c <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    87f0:	21 11       	cpse	r18, r1
    87f2:	18 c0       	rjmp	.+48     	; 0x8824 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    87f4:	97 e1       	ldi	r25, 0x17	; 23
    87f6:	9a 9f       	mul	r25, r26
    87f8:	f0 01       	movw	r30, r0
    87fa:	9b 9f       	mul	r25, r27
    87fc:	f0 0d       	add	r31, r0
    87fe:	11 24       	eor	r1, r1
    8800:	ef 55       	subi	r30, 0x5F	; 95
    8802:	f7 4f       	sbci	r31, 0xF7	; 247
    8804:	97 85       	ldd	r25, Z+15	; 0x0f
    8806:	91 11       	cpse	r25, r1
    8808:	02 c0       	rjmp	.+4      	; 0x880e <TriggerNote+0x3c>
    880a:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    880c:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    880e:	97 e1       	ldi	r25, 0x17	; 23
    8810:	9a 9f       	mul	r25, r26
    8812:	f0 01       	movw	r30, r0
    8814:	9b 9f       	mul	r25, r27
    8816:	f0 0d       	add	r31, r0
    8818:	11 24       	eor	r1, r1
    881a:	ef 55       	subi	r30, 0x5F	; 95
    881c:	f7 4f       	sbci	r31, 0xF7	; 247
    881e:	8f 7b       	andi	r24, 0xBF	; 191
    8820:	80 83       	st	Z, r24
    8822:	14 c0       	rjmp	.+40     	; 0x884c <TriggerNote+0x7a>
    8824:	82 2f       	mov	r24, r18
    8826:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8828:	97 e1       	ldi	r25, 0x17	; 23
    882a:	9a 9f       	mul	r25, r26
    882c:	e0 01       	movw	r28, r0
    882e:	9b 9f       	mul	r25, r27
    8830:	d0 0d       	add	r29, r0
    8832:	11 24       	eor	r1, r1
    8834:	cf 55       	subi	r28, 0x5F	; 95
    8836:	d7 4f       	sbci	r29, 0xF7	; 247
    8838:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    883a:	1e 8a       	std	Y+22, r1	; 0x16
    883c:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    883e:	48 2f       	mov	r20, r24
    8840:	ce 01       	movw	r24, r28
    8842:	0e 94 20 43 	call	0x8640	; 0x8640 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    8846:	88 81       	ld	r24, Y
    8848:	80 62       	ori	r24, 0x20	; 32
    884a:	88 83       	st	Y, r24
		}

	}
}
    884c:	df 91       	pop	r29
    884e:	cf 91       	pop	r28
    8850:	08 95       	ret

00008852 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    8852:	ef 92       	push	r14
    8854:	ff 92       	push	r15
    8856:	0f 93       	push	r16
    8858:	1f 93       	push	r17
    885a:	cf 93       	push	r28
    885c:	df 93       	push	r29
    885e:	c1 ea       	ldi	r28, 0xA1	; 161
    8860:	d8 e0       	ldi	r29, 0x08	; 8
    8862:	0a e7       	ldi	r16, 0x7A	; 122
    8864:	18 e0       	ldi	r17, 0x08	; 8
    8866:	98 01       	movw	r18, r16
    8868:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    886a:	1f 96       	adiw	r26, 0x0f	; 15
    886c:	8c 91       	ld	r24, X
    886e:	1f 97       	sbiw	r26, 0x0f	; 15
    8870:	88 23       	and	r24, r24
    8872:	a9 f0       	breq	.+42     	; 0x889e <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    8874:	1e 96       	adiw	r26, 0x0e	; 14
    8876:	4c 91       	ld	r20, X
    8878:	1e 97       	sbiw	r26, 0x0e	; 14
    887a:	08 2e       	mov	r0, r24
    887c:	00 0c       	add	r0, r0
    887e:	99 0b       	sbc	r25, r25
    8880:	84 0f       	add	r24, r20
    8882:	91 1d       	adc	r25, r1
    8884:	8f 3f       	cpi	r24, 0xFF	; 255
    8886:	91 05       	cpc	r25, r1
    8888:	19 f0       	breq	.+6      	; 0x8890 <ProcessMusic+0x3e>
    888a:	14 f0       	brlt	.+4      	; 0x8890 <ProcessMusic+0x3e>
    888c:	8f ef       	ldi	r24, 0xFF	; 255
    888e:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    8890:	97 ff       	sbrs	r25, 7
    8892:	02 c0       	rjmp	.+4      	; 0x8898 <ProcessMusic+0x46>
    8894:	80 e0       	ldi	r24, 0x00	; 0
    8896:	90 e0       	ldi	r25, 0x00	; 0
    8898:	1e 96       	adiw	r26, 0x0e	; 14
    889a:	8c 93       	st	X, r24
    889c:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    889e:	6c 91       	ld	r22, X
    88a0:	63 ff       	sbrs	r22, 3
    88a2:	26 c0       	rjmp	.+76     	; 0x88f0 <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    88a4:	15 96       	adiw	r26, 0x05	; 5
    88a6:	4d 91       	ld	r20, X+
    88a8:	5c 91       	ld	r21, X
    88aa:	16 97       	sbiw	r26, 0x06	; 6
    88ac:	f9 01       	movw	r30, r18
    88ae:	81 81       	ldd	r24, Z+1	; 0x01
    88b0:	92 81       	ldd	r25, Z+2	; 0x02
    88b2:	84 0f       	add	r24, r20
    88b4:	95 1f       	adc	r25, r21
    88b6:	92 83       	std	Z+2, r25	; 0x02
    88b8:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    88ba:	17 96       	adiw	r26, 0x07	; 7
    88bc:	ec 91       	ld	r30, X
    88be:	17 97       	sbiw	r26, 0x07	; 7
    88c0:	f0 e0       	ldi	r31, 0x00	; 0
    88c2:	ee 0f       	add	r30, r30
    88c4:	ff 1f       	adc	r31, r31
    88c6:	e4 59       	subi	r30, 0x94	; 148
    88c8:	f3 47       	sbci	r31, 0x73	; 115
    88ca:	e5 90       	lpm	r14, Z+
    88cc:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    88ce:	14 16       	cp	r1, r20
    88d0:	15 06       	cpc	r1, r21
    88d2:	24 f4       	brge	.+8      	; 0x88dc <ProcessMusic+0x8a>
    88d4:	8e 15       	cp	r24, r14
    88d6:	9f 05       	cpc	r25, r15
    88d8:	30 f4       	brcc	.+12     	; 0x88e6 <ProcessMusic+0x94>
    88da:	0a c0       	rjmp	.+20     	; 0x88f0 <ProcessMusic+0x9e>
    88dc:	45 2b       	or	r20, r21
    88de:	41 f0       	breq	.+16     	; 0x88f0 <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    88e0:	e8 16       	cp	r14, r24
    88e2:	f9 06       	cpc	r15, r25
    88e4:	28 f0       	brcs	.+10     	; 0x88f0 <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    88e6:	f9 01       	movw	r30, r18
    88e8:	f2 82       	std	Z+2, r15	; 0x02
    88ea:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    88ec:	67 7f       	andi	r22, 0xF7	; 247
    88ee:	6c 93       	st	X, r22
    88f0:	57 96       	adiw	r26, 0x17	; 23
    88f2:	2a 5f       	subi	r18, 0xFA	; 250
    88f4:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    88f6:	f9 e0       	ldi	r31, 0x09	; 9
    88f8:	a4 31       	cpi	r26, 0x14	; 20
    88fa:	bf 07       	cpc	r27, r31
    88fc:	09 f0       	breq	.+2      	; 0x8900 <ProcessMusic+0xae>
    88fe:	b5 cf       	rjmp	.-150    	; 0x886a <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    8900:	80 91 78 08 	lds	r24, 0x0878	; 0x800878 <playSong>
    8904:	88 23       	and	r24, r24
    8906:	09 f4       	brne	.+2      	; 0x890a <ProcessMusic+0xb8>
    8908:	cc c0       	rjmp	.+408    	; 0x8aa2 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    890a:	87 e1       	ldi	r24, 0x17	; 23
    890c:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    890e:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <currDeltaTime>
    8912:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <currDeltaTime+0x1>
    8916:	20 91 1a 09 	lds	r18, 0x091A	; 0x80091a <nextDeltaTime>
    891a:	30 91 1b 09 	lds	r19, 0x091B	; 0x80091b <nextDeltaTime+0x1>
    891e:	82 17       	cp	r24, r18
    8920:	93 07       	cpc	r25, r19
    8922:	09 f0       	breq	.+2      	; 0x8926 <ProcessMusic+0xd4>
    8924:	b9 c0       	rjmp	.+370    	; 0x8a98 <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    8926:	20 91 1d 09 	lds	r18, 0x091D	; 0x80091d <songPos>
    892a:	30 91 1e 09 	lds	r19, 0x091E	; 0x80091e <songPos+0x1>
    892e:	b9 01       	movw	r22, r18
    8930:	6f 5f       	subi	r22, 0xFF	; 255
    8932:	7f 4f       	sbci	r23, 0xFF	; 255
    8934:	70 93 1e 09 	sts	0x091E, r23	; 0x80091e <songPos+0x1>
    8938:	60 93 1d 09 	sts	0x091D, r22	; 0x80091d <songPos>
    893c:	f9 01       	movw	r30, r18
    893e:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    8940:	4f 3f       	cpi	r20, 0xFF	; 255
    8942:	79 f5       	brne	.+94     	; 0x89a2 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    8944:	a9 01       	movw	r20, r18
    8946:	4e 5f       	subi	r20, 0xFE	; 254
    8948:	5f 4f       	sbci	r21, 0xFF	; 255
    894a:	50 93 1e 09 	sts	0x091E, r21	; 0x80091e <songPos+0x1>
    894e:	40 93 1d 09 	sts	0x091D, r20	; 0x80091d <songPos>
    8952:	fb 01       	movw	r30, r22
    8954:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    8956:	6f 32       	cpi	r22, 0x2F	; 47
    8958:	19 f4       	brne	.+6      	; 0x8960 <ProcessMusic+0x10e>
						playSong=false;
    895a:	10 92 78 08 	sts	0x0878, r1	; 0x800878 <playSong>
						break;	
    895e:	9c c0       	rjmp	.+312    	; 0x8a98 <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    8960:	66 30       	cpi	r22, 0x06	; 6
    8962:	09 f0       	breq	.+2      	; 0x8966 <ProcessMusic+0x114>
    8964:	8c c0       	rjmp	.+280    	; 0x8a7e <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    8966:	fa 01       	movw	r30, r20
    8968:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    896a:	c9 01       	movw	r24, r18
    896c:	04 96       	adiw	r24, 0x04	; 4
    896e:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <songPos+0x1>
    8972:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    8976:	f9 01       	movw	r30, r18
    8978:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    897a:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    897c:	e3 35       	cpi	r30, 0x53	; 83
    897e:	29 f4       	brne	.+10     	; 0x898a <ProcessMusic+0x138>
							loopStart=songPos;
    8980:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <loopStart+0x1>
    8984:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <loopStart>
    8988:	7a c0       	rjmp	.+244    	; 0x8a7e <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    898a:	e5 34       	cpi	r30, 0x45	; 69
    898c:	09 f0       	breq	.+2      	; 0x8990 <ProcessMusic+0x13e>
    898e:	77 c0       	rjmp	.+238    	; 0x8a7e <ProcessMusic+0x22c>
							songPos=loopStart;
    8990:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <loopStart>
    8994:	90 91 20 09 	lds	r25, 0x0920	; 0x800920 <loopStart+0x1>
    8998:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <songPos+0x1>
    899c:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <songPos>
    89a0:	6e c0       	rjmp	.+220    	; 0x8a7e <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    89a2:	47 fd       	sbrc	r20, 7
    89a4:	40 93 18 09 	sts	0x0918, r20	; 0x800918 <lastStatus>
					channel=lastStatus&0x0f;
    89a8:	90 91 18 09 	lds	r25, 0x0918	; 0x800918 <lastStatus>
    89ac:	89 2f       	mov	r24, r25
    89ae:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    89b0:	47 ff       	sbrs	r20, 7
    89b2:	08 c0       	rjmp	.+16     	; 0x89c4 <ProcessMusic+0x172>
    89b4:	2e 5f       	subi	r18, 0xFE	; 254
    89b6:	3f 4f       	sbci	r19, 0xFF	; 255
    89b8:	30 93 1e 09 	sts	0x091E, r19	; 0x80091e <songPos+0x1>
    89bc:	20 93 1d 09 	sts	0x091D, r18	; 0x80091d <songPos>
    89c0:	fb 01       	movw	r30, r22
    89c2:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    89c4:	90 7f       	andi	r25, 0xF0	; 240
    89c6:	90 3b       	cpi	r25, 0xB0	; 176
    89c8:	e1 f0       	breq	.+56     	; 0x8a02 <ProcessMusic+0x1b0>
    89ca:	90 3c       	cpi	r25, 0xC0	; 192
    89cc:	09 f4       	brne	.+2      	; 0x89d0 <ProcessMusic+0x17e>
    89ce:	51 c0       	rjmp	.+162    	; 0x8a72 <ProcessMusic+0x220>
    89d0:	90 39       	cpi	r25, 0x90	; 144
    89d2:	09 f0       	breq	.+2      	; 0x89d6 <ProcessMusic+0x184>
    89d4:	54 c0       	rjmp	.+168    	; 0x8a7e <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    89d6:	e0 91 1d 09 	lds	r30, 0x091D	; 0x80091d <songPos>
    89da:	f0 91 1e 09 	lds	r31, 0x091E	; 0x80091e <songPos+0x1>
    89de:	9f 01       	movw	r18, r30
    89e0:	2f 5f       	subi	r18, 0xFF	; 255
    89e2:	3f 4f       	sbci	r19, 0xFF	; 255
    89e4:	30 93 1e 09 	sts	0x091E, r19	; 0x80091e <songPos+0x1>
    89e8:	20 93 1d 09 	sts	0x091D, r18	; 0x80091d <songPos>
    89ec:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    89ee:	22 0f       	add	r18, r18
    89f0:	f8 9e       	mul	r15, r24
    89f2:	f0 01       	movw	r30, r0
    89f4:	11 24       	eor	r1, r1
    89f6:	ef 55       	subi	r30, 0x5F	; 95
    89f8:	f7 4f       	sbci	r31, 0xF7	; 247
    89fa:	60 89       	ldd	r22, Z+16	; 0x10
    89fc:	0e 94 e9 43 	call	0x87d2	; 0x87d2 <TriggerNote>
    8a00:	3e c0       	rjmp	.+124    	; 0x8a7e <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    8a02:	e0 91 1d 09 	lds	r30, 0x091D	; 0x80091d <songPos>
    8a06:	f0 91 1e 09 	lds	r31, 0x091E	; 0x80091e <songPos+0x1>
    8a0a:	9f 01       	movw	r18, r30
    8a0c:	2f 5f       	subi	r18, 0xFF	; 255
    8a0e:	3f 4f       	sbci	r19, 0xFF	; 255
    8a10:	30 93 1e 09 	sts	0x091E, r19	; 0x80091e <songPos+0x1>
    8a14:	20 93 1d 09 	sts	0x091D, r18	; 0x80091d <songPos>
    8a18:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    8a1a:	47 30       	cpi	r20, 0x07	; 7
    8a1c:	49 f4       	brne	.+18     	; 0x8a30 <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    8a1e:	f8 9e       	mul	r15, r24
    8a20:	d0 01       	movw	r26, r0
    8a22:	11 24       	eor	r1, r1
    8a24:	af 55       	subi	r26, 0x5F	; 95
    8a26:	b7 4f       	sbci	r27, 0xF7	; 247
    8a28:	ee 0f       	add	r30, r30
    8a2a:	1c 96       	adiw	r26, 0x0c	; 12
    8a2c:	ec 93       	st	X, r30
    8a2e:	27 c0       	rjmp	.+78     	; 0x8a7e <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    8a30:	4b 30       	cpi	r20, 0x0B	; 11
    8a32:	49 f4       	brne	.+18     	; 0x8a46 <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    8a34:	f8 9e       	mul	r15, r24
    8a36:	d0 01       	movw	r26, r0
    8a38:	11 24       	eor	r1, r1
    8a3a:	af 55       	subi	r26, 0x5F	; 95
    8a3c:	b7 4f       	sbci	r27, 0xF7	; 247
    8a3e:	ee 0f       	add	r30, r30
    8a40:	13 96       	adiw	r26, 0x03	; 3
    8a42:	ec 93       	st	X, r30
    8a44:	1c c0       	rjmp	.+56     	; 0x8a7e <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    8a46:	4c 35       	cpi	r20, 0x5C	; 92
    8a48:	49 f4       	brne	.+18     	; 0x8a5c <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    8a4a:	f8 9e       	mul	r15, r24
    8a4c:	d0 01       	movw	r26, r0
    8a4e:	11 24       	eor	r1, r1
    8a50:	af 55       	subi	r26, 0x5F	; 95
    8a52:	b7 4f       	sbci	r27, 0xF7	; 247
    8a54:	ee 0f       	add	r30, r30
    8a56:	1a 96       	adiw	r26, 0x0a	; 10
    8a58:	ec 93       	st	X, r30
    8a5a:	11 c0       	rjmp	.+34     	; 0x8a7e <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    8a5c:	44 36       	cpi	r20, 0x64	; 100
    8a5e:	79 f4       	brne	.+30     	; 0x8a7e <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    8a60:	f8 9e       	mul	r15, r24
    8a62:	d0 01       	movw	r26, r0
    8a64:	11 24       	eor	r1, r1
    8a66:	af 55       	subi	r26, 0x5F	; 95
    8a68:	b7 4f       	sbci	r27, 0xF7	; 247
    8a6a:	ee 0f       	add	r30, r30
    8a6c:	1b 96       	adiw	r26, 0x0b	; 11
    8a6e:	ec 93       	st	X, r30
    8a70:	06 c0       	rjmp	.+12     	; 0x8a7e <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    8a72:	f8 9e       	mul	r15, r24
    8a74:	f0 01       	movw	r30, r0
    8a76:	11 24       	eor	r1, r1
    8a78:	ef 55       	subi	r30, 0x5F	; 95
    8a7a:	f7 4f       	sbci	r31, 0xF7	; 247
    8a7c:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    8a7e:	8d e1       	ldi	r24, 0x1D	; 29
    8a80:	99 e0       	ldi	r25, 0x09	; 9
    8a82:	0e 94 fa 42 	call	0x85f4	; 0x85f4 <ReadVarLen>
    8a86:	90 93 1b 09 	sts	0x091B, r25	; 0x80091b <nextDeltaTime+0x1>
    8a8a:	80 93 1a 09 	sts	0x091A, r24	; 0x80091a <nextDeltaTime>
				currDeltaTime=0;
    8a8e:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <currDeltaTime+0x1>
    8a92:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <currDeltaTime>
    8a96:	3b cf       	rjmp	.-394    	; 0x890e <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    8a98:	01 96       	adiw	r24, 0x01	; 1
    8a9a:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <currDeltaTime+0x1>
    8a9e:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8aa2:	ee 24       	eor	r14, r14
    8aa4:	ea 94       	dec	r14
    8aa6:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    8aa8:	88 81       	ld	r24, Y
    8aaa:	85 ff       	sbrs	r24, 5
    8aac:	37 c0       	rjmp	.+110    	; 0x8b1c <ProcessMusic+0x2ca>
    8aae:	2d 89       	ldd	r18, Y+21	; 0x15
    8ab0:	3e 89       	ldd	r19, Y+22	; 0x16
    8ab2:	23 2b       	or	r18, r19
    8ab4:	09 f4       	brne	.+2      	; 0x8ab8 <ProcessMusic+0x266>
    8ab6:	32 c0       	rjmp	.+100    	; 0x8b1c <ProcessMusic+0x2ca>
    8ab8:	86 fd       	sbrc	r24, 6
    8aba:	30 c0       	rjmp	.+96     	; 0x8b1c <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    8abc:	9b 89       	ldd	r25, Y+19	; 0x13
    8abe:	8a 89       	ldd	r24, Y+18	; 0x12
    8ac0:	98 13       	cpse	r25, r24
    8ac2:	2a c0       	rjmp	.+84     	; 0x8b18 <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    8ac4:	ed 89       	ldd	r30, Y+21	; 0x15
    8ac6:	fe 89       	ldd	r31, Y+22	; 0x16
    8ac8:	bf 01       	movw	r22, r30
    8aca:	6f 5f       	subi	r22, 0xFF	; 255
    8acc:	7f 4f       	sbci	r23, 0xFF	; 255
    8ace:	7e 8b       	std	Y+22, r23	; 0x16
    8ad0:	6d 8b       	std	Y+21, r22	; 0x15
    8ad2:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    8ad4:	8f 3f       	cpi	r24, 0xFF	; 255
    8ad6:	31 f4       	brne	.+12     	; 0x8ae4 <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8ad8:	88 81       	ld	r24, Y
    8ada:	8f 77       	andi	r24, 0x7F	; 127
    8adc:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    8ade:	1e 8a       	std	Y+22, r1	; 0x16
    8ae0:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    8ae2:	1a c0       	rjmp	.+52     	; 0x8b18 <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    8ae4:	32 96       	adiw	r30, 0x02	; 2
    8ae6:	fe 8b       	std	Y+22, r31	; 0x16
    8ae8:	ed 8b       	std	Y+21, r30	; 0x15
    8aea:	fb 01       	movw	r30, r22
    8aec:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    8aee:	e8 2f       	mov	r30, r24
    8af0:	f0 e0       	ldi	r31, 0x00	; 0
    8af2:	ee 0f       	add	r30, r30
    8af4:	ff 1f       	adc	r31, r31
    8af6:	ee 53       	subi	r30, 0x3E	; 62
    8af8:	ff 4f       	sbci	r31, 0xFF	; 255
    8afa:	25 91       	lpm	r18, Z+
    8afc:	34 91       	lpm	r19, Z
    8afe:	ce 01       	movw	r24, r28
    8b00:	f9 01       	movw	r30, r18
    8b02:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    8b04:	ed 89       	ldd	r30, Y+21	; 0x15
    8b06:	fe 89       	ldd	r31, Y+22	; 0x16
    8b08:	cf 01       	movw	r24, r30
    8b0a:	01 96       	adiw	r24, 0x01	; 1
    8b0c:	9e 8b       	std	Y+22, r25	; 0x16
    8b0e:	8d 8b       	std	Y+21, r24	; 0x15
    8b10:	e4 91       	lpm	r30, Z
    8b12:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    8b14:	1b 8a       	std	Y+19, r1	; 0x13
    8b16:	d2 cf       	rjmp	.-92     	; 0x8abc <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    8b18:	9f 5f       	subi	r25, 0xFF	; 255
    8b1a:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    8b1c:	98 81       	ld	r25, Y
    8b1e:	95 ff       	sbrs	r25, 5
    8b20:	5e c0       	rjmp	.+188    	; 0x8bde <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    8b22:	8c 89       	ldd	r24, Y+20	; 0x14
    8b24:	8f 3f       	cpi	r24, 0xFF	; 255
    8b26:	11 f0       	breq	.+4      	; 0x8b2c <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    8b28:	8f 5f       	subi	r24, 0xFF	; 255
    8b2a:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    8b2c:	97 fd       	sbrc	r25, 7
    8b2e:	02 c0       	rjmp	.+4      	; 0x8b34 <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    8b30:	9c 85       	ldd	r25, Y+12	; 0x0c
    8b32:	01 c0       	rjmp	.+2      	; 0x8b36 <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    8b34:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    8b36:	8d 85       	ldd	r24, Y+13	; 0x0d
    8b38:	49 85       	ldd	r20, Y+9	; 0x09
    8b3a:	88 23       	and	r24, r24
    8b3c:	09 f4       	brne	.+2      	; 0x8b40 <ProcessMusic+0x2ee>
    8b3e:	49 c0       	rjmp	.+146    	; 0x8bd2 <ProcessMusic+0x380>
    8b40:	6e 85       	ldd	r22, Y+14	; 0x0e
    8b42:	66 23       	and	r22, r22
    8b44:	09 f4       	brne	.+2      	; 0x8b48 <ProcessMusic+0x2f6>
    8b46:	45 c0       	rjmp	.+138    	; 0x8bd2 <ProcessMusic+0x380>
    8b48:	99 23       	and	r25, r25
    8b4a:	09 f4       	brne	.+2      	; 0x8b4e <ProcessMusic+0x2fc>
    8b4c:	42 c0       	rjmp	.+132    	; 0x8bd2 <ProcessMusic+0x380>
    8b4e:	50 91 19 09 	lds	r21, 0x0919	; 0x800919 <masterVolume>
    8b52:	55 23       	and	r21, r21
    8b54:	09 f4       	brne	.+2      	; 0x8b58 <ProcessMusic+0x306>
    8b56:	3d c0       	rjmp	.+122    	; 0x8bd2 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    8b58:	89 9f       	mul	r24, r25
    8b5a:	c0 01       	movw	r24, r0
    8b5c:	11 24       	eor	r1, r1
    8b5e:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    8b60:	89 2f       	mov	r24, r25
    8b62:	99 27       	eor	r25, r25
    8b64:	68 9f       	mul	r22, r24
    8b66:	90 01       	movw	r18, r0
    8b68:	69 9f       	mul	r22, r25
    8b6a:	30 0d       	add	r19, r0
    8b6c:	11 24       	eor	r1, r1
    8b6e:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    8b70:	23 2f       	mov	r18, r19
    8b72:	33 27       	eor	r19, r19
    8b74:	6b 81       	ldd	r22, Y+3	; 0x03
    8b76:	62 9f       	mul	r22, r18
    8b78:	c0 01       	movw	r24, r0
    8b7a:	63 9f       	mul	r22, r19
    8b7c:	90 0d       	add	r25, r0
    8b7e:	11 24       	eor	r1, r1
    8b80:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    8b82:	89 2f       	mov	r24, r25
    8b84:	99 27       	eor	r25, r25
    8b86:	58 9f       	mul	r21, r24
    8b88:	90 01       	movw	r18, r0
    8b8a:	59 9f       	mul	r21, r25
    8b8c:	30 0d       	add	r19, r0
    8b8e:	11 24       	eor	r1, r1
    8b90:	33 95       	inc	r19
				uVol>>=8;
    8b92:	23 2f       	mov	r18, r19
    8b94:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    8b96:	8a 85       	ldd	r24, Y+10	; 0x0a
    8b98:	88 23       	and	r24, r24
    8b9a:	e9 f0       	breq	.+58     	; 0x8bd6 <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    8b9c:	e4 2f       	mov	r30, r20
    8b9e:	f0 e0       	ldi	r31, 0x00	; 0
    8ba0:	e0 50       	subi	r30, 0x00	; 0
    8ba2:	f2 47       	sbci	r31, 0x72	; 114
    8ba4:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    8ba6:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    8ba8:	8e 9f       	mul	r24, r30
    8baa:	f0 01       	movw	r30, r0
    8bac:	11 24       	eor	r1, r1
    8bae:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8bb0:	ef 2f       	mov	r30, r31
    8bb2:	ff 27       	eor	r31, r31
    8bb4:	b7 01       	movw	r22, r14
    8bb6:	6e 1b       	sub	r22, r30
    8bb8:	7f 0b       	sbc	r23, r31
    8bba:	62 9f       	mul	r22, r18
    8bbc:	c0 01       	movw	r24, r0
    8bbe:	63 9f       	mul	r22, r19
    8bc0:	90 0d       	add	r25, r0
    8bc2:	72 9f       	mul	r23, r18
    8bc4:	90 0d       	add	r25, r0
    8bc6:	11 24       	eor	r1, r1
    8bc8:	9c 01       	movw	r18, r24
    8bca:	33 95       	inc	r19
					uVol>>=8;
    8bcc:	23 2f       	mov	r18, r19
    8bce:	33 27       	eor	r19, r19
    8bd0:	02 c0       	rjmp	.+4      	; 0x8bd6 <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    8bd2:	20 e0       	ldi	r18, 0x00	; 0
    8bd4:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    8bd6:	8b 85       	ldd	r24, Y+11	; 0x0b
    8bd8:	48 0f       	add	r20, r24
    8bda:	49 87       	std	Y+9, r20	; 0x09
    8bdc:	02 c0       	rjmp	.+4      	; 0x8be2 <ProcessMusic+0x390>

		}else{
			uVol=0;
    8bde:	20 e0       	ldi	r18, 0x00	; 0
    8be0:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    8be2:	f8 01       	movw	r30, r16
    8be4:	20 83       	st	Z, r18
    8be6:	67 96       	adiw	r28, 0x17	; 23
    8be8:	0a 5f       	subi	r16, 0xFA	; 250
    8bea:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8bec:	f9 e0       	ldi	r31, 0x09	; 9
    8bee:	c4 31       	cpi	r28, 0x14	; 20
    8bf0:	df 07       	cpc	r29, r31
    8bf2:	09 f0       	breq	.+2      	; 0x8bf6 <ProcessMusic+0x3a4>
    8bf4:	59 cf       	rjmp	.-334    	; 0x8aa8 <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    8bf6:	df 91       	pop	r29
    8bf8:	cf 91       	pop	r28
    8bfa:	1f 91       	pop	r17
    8bfc:	0f 91       	pop	r16
    8bfe:	ff 90       	pop	r15
    8c00:	ef 90       	pop	r14
    8c02:	08 95       	ret

00008c04 <SetMixerNote>:
    8c04:	99 27       	eor	r25, r25
    8c06:	77 27       	eor	r23, r23
    8c08:	83 30       	cpi	r24, 0x03	; 3
    8c0a:	09 f4       	brne	.+2      	; 0x8c0e <set_note_waves>
    8c0c:	08 95       	ret

00008c0e <set_note_waves>:
    8c0e:	ec e6       	ldi	r30, 0x6C	; 108
    8c10:	fc e8       	ldi	r31, 0x8C	; 140
    8c12:	66 0f       	add	r22, r22
    8c14:	77 1f       	adc	r23, r23
    8c16:	e6 0f       	add	r30, r22
    8c18:	f7 1f       	adc	r31, r23
    8c1a:	a5 91       	lpm	r26, Z+
    8c1c:	b4 91       	lpm	r27, Z
    8c1e:	ea e7       	ldi	r30, 0x7A	; 122
    8c20:	f8 e0       	ldi	r31, 0x08	; 8
    8c22:	26 e0       	ldi	r18, 0x06	; 6
    8c24:	28 9f       	mul	r18, r24
    8c26:	e0 0d       	add	r30, r0
    8c28:	f1 1d       	adc	r31, r1
    8c2a:	a1 83       	std	Z+1, r26	; 0x01
    8c2c:	b2 83       	std	Z+2, r27	; 0x02
    8c2e:	11 24       	eor	r1, r1
    8c30:	08 95       	ret

00008c32 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    8c32:	99 27       	eor	r25, r25
	clr r23
    8c34:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    8c36:	ea e7       	ldi	r30, 0x7A	; 122
	ldi ZH,hi8(mixerStruct)
    8c38:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    8c3a:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    8c3c:	28 9f       	mul	r18, r24
	add ZL,r0
    8c3e:	e0 0d       	add	r30, r0
	adc ZH,r1
    8c40:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    8c42:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    8c44:	31 f4       	brne	.+12     	; 0x8c52 <smw1>
	lds r22,tr4_params
    8c46:	60 91 8d 08 	lds	r22, 0x088D	; 0x80088d <tr4_params>
	andi r22,0xfe;
    8c4a:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    8c4c:	60 93 8d 08 	sts	0x088D, r22	; 0x80088d <tr4_params>
	rjmp esmw	
    8c50:	0b c0       	rjmp	.+22     	; 0x8c68 <esmw>

00008c52 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    8c52:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    8c54:	31 f4       	brne	.+12     	; 0x8c62 <smw2>
	lds r22,tr4_params
    8c56:	60 91 8d 08 	lds	r22, 0x088D	; 0x80088d <tr4_params>
	ori r22,0xfe;
    8c5a:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    8c5c:	60 93 8d 08 	sts	0x088D, r22	; 0x80088d <tr4_params>
	rjmp esmw
    8c60:	03 c0       	rjmp	.+6      	; 0x8c68 <esmw>

00008c62 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    8c62:	7e e8       	ldi	r23, 0x8E	; 142
	add r23,r22
    8c64:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    8c66:	75 83       	std	Z+5, r23	; 0x05

00008c68 <esmw>:
#endif

esmw:
	clr r1	
    8c68:	11 24       	eor	r1, r1
	ret
    8c6a:	08 95       	ret

00008c6c <steptable>:
    8c6c:	22 00       	.word	0x0022	; ????
    8c6e:	24 00       	.word	0x0024	; ????
    8c70:	26 00       	.word	0x0026	; ????
    8c72:	28 00       	.word	0x0028	; ????
    8c74:	2b 00       	.word	0x002b	; ????
    8c76:	2d 00       	.word	0x002d	; ????
    8c78:	30 00       	.word	0x0030	; ????
    8c7a:	33 00       	.word	0x0033	; ????
    8c7c:	36 00       	.word	0x0036	; ????
    8c7e:	39 00       	.word	0x0039	; ????
    8c80:	3d 00       	.word	0x003d	; ????
    8c82:	40 00       	.word	0x0040	; ????
    8c84:	44 00       	.word	0x0044	; ????
    8c86:	48 00       	.word	0x0048	; ????
    8c88:	4c 00       	.word	0x004c	; ????
    8c8a:	51 00       	.word	0x0051	; ????
    8c8c:	56 00       	.word	0x0056	; ????
    8c8e:	5b 00       	.word	0x005b	; ????
    8c90:	60 00       	.word	0x0060	; ????
    8c92:	66 00       	.word	0x0066	; ????
    8c94:	6c 00       	.word	0x006c	; ????
    8c96:	73 00       	.word	0x0073	; ????
    8c98:	79 00       	.word	0x0079	; ????
    8c9a:	81 00       	.word	0x0081	; ????
    8c9c:	88 00       	.word	0x0088	; ????
    8c9e:	90 00       	.word	0x0090	; ????
    8ca0:	99 00       	.word	0x0099	; ????
    8ca2:	a2 00       	.word	0x00a2	; ????
    8ca4:	ac 00       	.word	0x00ac	; ????
    8ca6:	b6 00       	.word	0x00b6	; ????
    8ca8:	c1 00       	.word	0x00c1	; ????
    8caa:	cc 00       	.word	0x00cc	; ????
    8cac:	d8 00       	.word	0x00d8	; ????
    8cae:	e5 00       	.word	0x00e5	; ????
    8cb0:	f3 00       	.word	0x00f3	; ????
    8cb2:	01 01       	movw	r0, r2
    8cb4:	10 01       	movw	r2, r0
    8cb6:	21 01       	movw	r4, r2
    8cb8:	32 01       	movw	r6, r4
    8cba:	44 01       	movw	r8, r8
    8cbc:	57 01       	movw	r10, r14
    8cbe:	6c 01       	movw	r12, r24
    8cc0:	81 01       	movw	r16, r2
    8cc2:	98 01       	movw	r18, r16
    8cc4:	b0 01       	movw	r22, r0
    8cc6:	ca 01       	movw	r24, r20
    8cc8:	e5 01       	movw	r28, r10
    8cca:	02 02       	muls	r16, r18
    8ccc:	21 02       	muls	r18, r17
    8cce:	41 02       	muls	r20, r17
    8cd0:	64 02       	muls	r22, r20
    8cd2:	88 02       	muls	r24, r24
    8cd4:	ae 02       	muls	r26, r30
    8cd6:	d7 02       	muls	r29, r23
    8cd8:	03 03       	mulsu	r16, r19
    8cda:	30 03       	mulsu	r19, r16
    8cdc:	61 03       	mulsu	r22, r17
    8cde:	94 03       	fmuls	r17, r20
    8ce0:	cb 03       	fmulsu	r20, r19
    8ce2:	05 04       	cpc	r0, r5
    8ce4:	42 04       	cpc	r4, r2
    8ce6:	83 04       	cpc	r8, r3
    8ce8:	c7 04       	cpc	r12, r7
    8cea:	10 05       	cpc	r17, r0
    8cec:	5d 05       	cpc	r21, r13
    8cee:	af 05       	cpc	r26, r15
    8cf0:	05 06       	cpc	r0, r21
    8cf2:	61 06       	cpc	r6, r17
    8cf4:	c2 06       	cpc	r12, r18
    8cf6:	29 07       	cpc	r18, r25
    8cf8:	96 07       	cpc	r25, r22
    8cfa:	09 08       	sbc	r0, r9
    8cfc:	83 08       	sbc	r8, r3
    8cfe:	05 09       	sbc	r16, r5
    8d00:	8e 09       	sbc	r24, r14
    8d02:	20 0a       	sbc	r2, r16
    8d04:	ba 0a       	sbc	r11, r26
    8d06:	5d 0b       	sbc	r21, r29
    8d08:	0a 0c       	add	r0, r10
    8d0a:	c1 0c       	add	r12, r1
    8d0c:	84 0d       	add	r24, r4
    8d0e:	51 0e       	add	r5, r17
    8d10:	2b 0f       	add	r18, r27
    8d12:	12 10       	cpse	r1, r2
    8d14:	07 11       	cpse	r16, r7
    8d16:	0a 12       	cpse	r0, r26
    8d18:	1d 13       	cpse	r17, r29
    8d1a:	40 14       	cp	r4, r0
    8d1c:	74 15       	cp	r23, r4
    8d1e:	ba 16       	cp	r11, r26
    8d20:	14 18       	sub	r1, r4
    8d22:	83 19       	sub	r24, r3
    8d24:	07 1b       	sub	r16, r23
    8d26:	a3 1c       	adc	r10, r3
    8d28:	57 1e       	adc	r5, r23
    8d2a:	24 20       	and	r2, r4
    8d2c:	0e 22       	and	r0, r30
    8d2e:	14 24       	eor	r1, r4
    8d30:	39 26       	eor	r3, r25
    8d32:	7f 28       	or	r7, r15
    8d34:	e8 2a       	or	r14, r24
    8d36:	75 2d       	mov	r23, r5
    8d38:	29 30       	cpi	r18, 0x09	; 9
    8d3a:	06 33       	cpi	r16, 0x36	; 54
    8d3c:	0f 36       	cpi	r16, 0x6F	; 111
    8d3e:	45 39       	cpi	r20, 0x95	; 149
    8d40:	ad 3c       	cpi	r26, 0xCD	; 205
    8d42:	49 40       	sbci	r20, 0x09	; 9
    8d44:	1b 44       	sbci	r17, 0x4B	; 75
    8d46:	28 48       	sbci	r18, 0x88	; 136
    8d48:	73 4c       	sbci	r23, 0xC3	; 195
    8d4a:	fe 50       	subi	r31, 0x0E	; 14
    8d4c:	cf 55       	subi	r28, 0x5F	; 95
    8d4e:	ea 5a       	subi	r30, 0xAA	; 170
    8d50:	51 60       	ori	r21, 0x01	; 1
    8d52:	0c 66       	ori	r16, 0x6C	; 108
    8d54:	1d 6c       	ori	r17, 0xCD	; 205
    8d56:	8b 72       	andi	r24, 0x2B	; 43
    8d58:	5a 79       	andi	r21, 0x9A	; 154
    8d5a:	92 80       	ldd	r9, Z+2	; 0x02
    8d5c:	37 88       	ldd	r3, Z+23	; 0x17
    8d5e:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x89e5>
    8d62:	fd a1       	ldd	r31, Y+37	; 0x25
    8d64:	9f ab       	std	Y+55, r25	; 0x37
    8d66:	d3 b5       	in	r29, 0x23	; 35
    8d68:	a3 c0       	rjmp	.+326    	; 0x8eb0 <waves+0xb0>
	...

00008e00 <waves>:
    8e00:	00 03       	mulsu	r16, r16
    8e02:	06 09       	sbc	r16, r6
    8e04:	0c 10       	cpse	r0, r12
    8e06:	13 16       	cp	r1, r19
    8e08:	19 1c       	adc	r1, r9
    8e0a:	1f 22       	and	r1, r31
    8e0c:	25 28       	or	r2, r5
    8e0e:	2b 2e       	mov	r2, r27
    8e10:	31 33       	cpi	r19, 0x31	; 49
    8e12:	36 39       	cpi	r19, 0x96	; 150
    8e14:	3c 3f       	cpi	r19, 0xFC	; 252
    8e16:	41 44       	sbci	r20, 0x41	; 65
    8e18:	47 49       	sbci	r20, 0x97	; 151
    8e1a:	4c 4e       	sbci	r20, 0xEC	; 236
    8e1c:	51 53       	subi	r21, 0x31	; 49
    8e1e:	55 58       	subi	r21, 0x85	; 133
    8e20:	5a 5c       	subi	r21, 0xCA	; 202
    8e22:	5e 60       	ori	r21, 0x0E	; 14
    8e24:	62 64       	ori	r22, 0x42	; 66
    8e26:	66 68       	ori	r22, 0x86	; 134
    8e28:	6a 6b       	ori	r22, 0xBA	; 186
    8e2a:	6d 6f       	ori	r22, 0xFD	; 253
    8e2c:	70 71       	andi	r23, 0x10	; 16
    8e2e:	73 74       	andi	r23, 0x43	; 67
    8e30:	75 76       	andi	r23, 0x65	; 101
    8e32:	78 79       	andi	r23, 0x98	; 152
    8e34:	7a 7a       	andi	r23, 0xAA	; 170
    8e36:	7b 7c       	andi	r23, 0xCB	; 203
    8e38:	7d 7d       	andi	r23, 0xDD	; 221
    8e3a:	7e 7e       	andi	r23, 0xEE	; 238
    8e3c:	7e 7f       	andi	r23, 0xFE	; 254
    8e3e:	7f 7f       	andi	r23, 0xFF	; 255
    8e40:	7f 7f       	andi	r23, 0xFF	; 255
    8e42:	7f 7f       	andi	r23, 0xFF	; 255
    8e44:	7e 7e       	andi	r23, 0xEE	; 238
    8e46:	7e 7d       	andi	r23, 0xDE	; 222
    8e48:	7d 7c       	andi	r23, 0xCD	; 205
    8e4a:	7b 7a       	andi	r23, 0xAB	; 171
    8e4c:	7a 79       	andi	r23, 0x9A	; 154
    8e4e:	78 76       	andi	r23, 0x68	; 104
    8e50:	75 74       	andi	r23, 0x45	; 69
    8e52:	73 71       	andi	r23, 0x13	; 19
    8e54:	70 6f       	ori	r23, 0xF0	; 240
    8e56:	6d 6b       	ori	r22, 0xBD	; 189
    8e58:	6a 68       	ori	r22, 0x8A	; 138
    8e5a:	66 64       	ori	r22, 0x46	; 70
    8e5c:	62 60       	ori	r22, 0x02	; 2
    8e5e:	5e 5c       	subi	r21, 0xCE	; 206
    8e60:	5a 58       	subi	r21, 0x8A	; 138
    8e62:	55 53       	subi	r21, 0x35	; 53
    8e64:	51 4e       	sbci	r21, 0xE1	; 225
    8e66:	4c 49       	sbci	r20, 0x9C	; 156
    8e68:	47 44       	sbci	r20, 0x47	; 71
    8e6a:	41 3f       	cpi	r20, 0xF1	; 241
    8e6c:	3c 39       	cpi	r19, 0x9C	; 156
    8e6e:	36 33       	cpi	r19, 0x36	; 54
    8e70:	31 2e       	mov	r3, r17
    8e72:	2b 28       	or	r2, r11
    8e74:	25 22       	and	r2, r21
    8e76:	1f 1c       	adc	r1, r15
    8e78:	19 16       	cp	r1, r25
    8e7a:	13 10       	cpse	r1, r3
    8e7c:	0c 09       	sbc	r16, r12
    8e7e:	06 03       	mulsu	r16, r22
    8e80:	00 fd       	sbrc	r16, 0
    8e82:	fa f7       	brpl	.-2      	; 0x8e82 <waves+0x82>
    8e84:	f4 f0       	brlt	.+60     	; 0x8ec2 <waves+0xc2>
    8e86:	ed ea       	ldi	r30, 0xAD	; 173
    8e88:	e7 e4       	ldi	r30, 0x47	; 71
    8e8a:	e1 de       	rcall	.-574    	; 0x8c4e <SetMixerWave+0x1c>
    8e8c:	db d8       	rcall	.-3658   	; 0x8044 <no_render+0x14>
    8e8e:	d5 d2       	rcall	.+1450   	; 0x943a <waves+0x63a>
    8e90:	cf cd       	rjmp	.-1122   	; 0x8a30 <ProcessMusic+0x1de>
    8e92:	ca c7       	rjmp	.+3988   	; 0x9e28 <drawplayer+0xc4>
    8e94:	c4 c1       	rjmp	.+904    	; 0x921e <waves+0x41e>
    8e96:	bf bc       	out	0x2f, r11	; 47
    8e98:	b9 b7       	in	r27, 0x39	; 57
    8e9a:	b4 b2       	in	r11, 0x14	; 20
    8e9c:	af ad       	ldd	r26, Y+63	; 0x3f
    8e9e:	ab a8       	ldd	r10, Y+51	; 0x33
    8ea0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    8ea2:	a2 a0       	ldd	r10, Z+34	; 0x22
    8ea4:	9e 9c       	mul	r9, r14
    8ea6:	9a 98       	cbi	0x13, 2	; 19
    8ea8:	96 95       	lsr	r25
    8eaa:	93 91       	.word	0x9193	; ????
    8eac:	90 8f       	std	Z+24, r25	; 0x18
    8eae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    8eb0:	8b 8a       	std	Y+19, r8	; 0x13
    8eb2:	88 87       	std	Y+8, r24	; 0x08
    8eb4:	86 86       	std	Z+14, r8	; 0x0e
    8eb6:	85 84       	ldd	r8, Z+13	; 0x0d
    8eb8:	83 83       	std	Z+3, r24	; 0x03
    8eba:	82 82       	std	Z+2, r8	; 0x02
    8ebc:	82 81       	ldd	r24, Z+2	; 0x02
    8ebe:	81 81       	ldd	r24, Z+1	; 0x01
    8ec0:	81 81       	ldd	r24, Z+1	; 0x01
    8ec2:	81 81       	ldd	r24, Z+1	; 0x01
    8ec4:	82 82       	std	Z+2, r8	; 0x02
    8ec6:	82 83       	std	Z+2, r24	; 0x02
    8ec8:	83 84       	ldd	r8, Z+11	; 0x0b
    8eca:	85 86       	std	Z+13, r8	; 0x0d
    8ecc:	86 87       	std	Z+14, r24	; 0x0e
    8ece:	88 8a       	std	Y+16, r8	; 0x10
    8ed0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    8ed2:	8d 8f       	std	Y+29, r24	; 0x1d
    8ed4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8693>
    8ed8:	96 98       	cbi	0x12, 6	; 18
    8eda:	9a 9c       	mul	r9, r10
    8edc:	9e a0       	ldd	r9, Y+38	; 0x26
    8ede:	a2 a4       	ldd	r10, Z+42	; 0x2a
    8ee0:	a6 a8       	ldd	r10, Z+54	; 0x36
    8ee2:	ab ad       	ldd	r26, Y+59	; 0x3b
    8ee4:	af b2       	in	r10, 0x1f	; 31
    8ee6:	b4 b7       	in	r27, 0x34	; 52
    8ee8:	b9 bc       	out	0x29, r11	; 41
    8eea:	bf c1       	rjmp	.+894    	; 0x926a <waves+0x46a>
    8eec:	c4 c7       	rjmp	.+3976   	; 0x9e76 <drawplayer+0x112>
    8eee:	ca cd       	rjmp	.-1132   	; 0x8a84 <ProcessMusic+0x232>
    8ef0:	cf d2       	rcall	.+1438   	; 0x9490 <waves+0x690>
    8ef2:	d5 d8       	rcall	.-3670   	; 0x809e <no_render+0x6e>
    8ef4:	db de       	rcall	.-586    	; 0x8cac <steptable+0x40>
    8ef6:	e1 e4       	ldi	r30, 0x41	; 65
    8ef8:	e7 ea       	ldi	r30, 0xA7	; 167
    8efa:	ed f0       	brhs	.+58     	; 0x8f36 <waves+0x136>
    8efc:	f4 f7       	brge	.-4      	; 0x8efa <waves+0xfa>
    8efe:	fa fd       	.word	0xfdfa	; ????
    8f00:	80 81       	ld	r24, Z
    8f02:	82 83       	std	Z+2, r24	; 0x02
    8f04:	84 85       	ldd	r24, Z+12	; 0x0c
    8f06:	86 87       	std	Z+14, r24	; 0x0e
    8f08:	88 89       	ldd	r24, Y+16	; 0x10
    8f0a:	8a 8b       	std	Y+18, r24	; 0x12
    8f0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    8f0e:	8e 8f       	std	Y+30, r24	; 0x1e
    8f10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8492>
    8f14:	94 95       	.word	0x9594	; ????
    8f16:	96 97       	sbiw	r26, 0x26	; 38
    8f18:	98 99       	sbic	0x13, 0	; 19
    8f1a:	9a 9b       	sbis	0x13, 2	; 19
    8f1c:	9c 9d       	mul	r25, r12
    8f1e:	9e 9f       	mul	r25, r30
    8f20:	a0 a1       	ldd	r26, Z+32	; 0x20
    8f22:	a2 a3       	std	Z+34, r26	; 0x22
    8f24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    8f26:	a6 a7       	std	Z+46, r26	; 0x2e
    8f28:	a8 a9       	ldd	r26, Y+48	; 0x30
    8f2a:	aa ab       	std	Y+50, r26	; 0x32
    8f2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    8f2e:	ae af       	std	Y+62, r26	; 0x3e
    8f30:	b0 b1       	in	r27, 0x00	; 0
    8f32:	b2 b3       	in	r27, 0x12	; 18
    8f34:	b4 b5       	in	r27, 0x24	; 36
    8f36:	b6 b7       	in	r27, 0x36	; 54
    8f38:	b8 b9       	out	0x08, r27	; 8
    8f3a:	ba bb       	out	0x1a, r27	; 26
    8f3c:	bc bd       	out	0x2c, r27	; 44
    8f3e:	be bf       	out	0x3e, r27	; 62
    8f40:	c0 c1       	rjmp	.+896    	; 0x92c2 <waves+0x4c2>
    8f42:	c2 c3       	rjmp	.+1924   	; 0x96c8 <waves+0x8c8>
    8f44:	c4 c5       	rjmp	.+2952   	; 0x9ace <MapSprite2+0x3e>
    8f46:	c6 c7       	rjmp	.+3980   	; 0x9ed4 <drawplayer2+0x44>
    8f48:	c8 c9       	rjmp	.-3184   	; 0x82da <WriteEeprom+0xe>
    8f4a:	ca cb       	rjmp	.-2156   	; 0x86e0 <TriggerCommon+0xa0>
    8f4c:	cc cd       	rjmp	.-1128   	; 0x8ae6 <ProcessMusic+0x294>
    8f4e:	ce cf       	rjmp	.-100    	; 0x8eec <waves+0xec>
    8f50:	d0 d1       	rcall	.+928    	; 0x92f2 <waves+0x4f2>
    8f52:	d2 d3       	rcall	.+1956   	; 0x96f8 <waves+0x8f8>
    8f54:	d4 d5       	rcall	.+2984   	; 0x9afe <MapSprite2+0x6e>
    8f56:	d6 d7       	rcall	.+4012   	; 0x9f04 <drawplayer2+0x74>
    8f58:	d8 d9       	rcall	.-3152   	; 0x830a <ReadButtons+0xe>
    8f5a:	da db       	rcall	.-2124   	; 0x8710 <TriggerCommon+0xd0>
    8f5c:	dc dd       	rcall	.-1096   	; 0x8b16 <ProcessMusic+0x2c4>
    8f5e:	de df       	rcall	.-68     	; 0x8f1c <waves+0x11c>
    8f60:	e0 e1       	ldi	r30, 0x10	; 16
    8f62:	e2 e3       	ldi	r30, 0x32	; 50
    8f64:	e4 e5       	ldi	r30, 0x54	; 84
    8f66:	e6 e7       	ldi	r30, 0x76	; 118
    8f68:	e8 e9       	ldi	r30, 0x98	; 152
    8f6a:	ea eb       	ldi	r30, 0xBA	; 186
    8f6c:	ec ed       	ldi	r30, 0xDC	; 220
    8f6e:	ee ef       	ldi	r30, 0xFE	; 254
    8f70:	f0 f1       	brcs	.+124    	; 0x8fee <waves+0x1ee>
    8f72:	f2 f3       	brmi	.-4      	; 0x8f70 <waves+0x170>
    8f74:	f4 f5       	brge	.+124    	; 0x8ff2 <waves+0x1f2>
    8f76:	f6 f7       	brtc	.-4      	; 0x8f74 <waves+0x174>
    8f78:	f8 f9       	.word	0xf9f8	; ????
    8f7a:	fa fb       	.word	0xfbfa	; ????
    8f7c:	fc fd       	.word	0xfdfc	; ????
    8f7e:	fe ff       	.word	0xfffe	; ????
    8f80:	00 01       	movw	r0, r0
    8f82:	02 03       	mulsu	r16, r18
    8f84:	04 05       	cpc	r16, r4
    8f86:	06 07       	cpc	r16, r22
    8f88:	08 09       	sbc	r16, r8
    8f8a:	0a 0b       	sbc	r16, r26
    8f8c:	0c 0d       	add	r16, r12
    8f8e:	0e 0f       	add	r16, r30
    8f90:	10 11       	cpse	r17, r0
    8f92:	12 13       	cpse	r17, r18
    8f94:	14 15       	cp	r17, r4
    8f96:	16 17       	cp	r17, r22
    8f98:	18 19       	sub	r17, r8
    8f9a:	1a 1b       	sub	r17, r26
    8f9c:	1c 1d       	adc	r17, r12
    8f9e:	1e 1f       	adc	r17, r30
    8fa0:	20 21       	and	r18, r0
    8fa2:	22 23       	and	r18, r18
    8fa4:	24 25       	eor	r18, r4
    8fa6:	26 27       	eor	r18, r22
    8fa8:	28 29       	or	r18, r8
    8faa:	2a 2b       	or	r18, r26
    8fac:	2c 2d       	mov	r18, r12
    8fae:	2e 2f       	mov	r18, r30
    8fb0:	30 31       	cpi	r19, 0x10	; 16
    8fb2:	32 33       	cpi	r19, 0x32	; 50
    8fb4:	34 35       	cpi	r19, 0x54	; 84
    8fb6:	36 37       	cpi	r19, 0x76	; 118
    8fb8:	38 39       	cpi	r19, 0x98	; 152
    8fba:	3a 3b       	cpi	r19, 0xBA	; 186
    8fbc:	3c 3d       	cpi	r19, 0xDC	; 220
    8fbe:	3e 3f       	cpi	r19, 0xFE	; 254
    8fc0:	40 41       	sbci	r20, 0x10	; 16
    8fc2:	42 43       	sbci	r20, 0x32	; 50
    8fc4:	44 45       	sbci	r20, 0x54	; 84
    8fc6:	46 47       	sbci	r20, 0x76	; 118
    8fc8:	48 49       	sbci	r20, 0x98	; 152
    8fca:	4a 4b       	sbci	r20, 0xBA	; 186
    8fcc:	4c 4d       	sbci	r20, 0xDC	; 220
    8fce:	4e 4f       	sbci	r20, 0xFE	; 254
    8fd0:	50 51       	subi	r21, 0x10	; 16
    8fd2:	52 53       	subi	r21, 0x32	; 50
    8fd4:	54 55       	subi	r21, 0x54	; 84
    8fd6:	56 57       	subi	r21, 0x76	; 118
    8fd8:	58 59       	subi	r21, 0x98	; 152
    8fda:	5a 5b       	subi	r21, 0xBA	; 186
    8fdc:	5c 5d       	subi	r21, 0xDC	; 220
    8fde:	5e 5f       	subi	r21, 0xFE	; 254
    8fe0:	60 61       	ori	r22, 0x10	; 16
    8fe2:	62 63       	ori	r22, 0x32	; 50
    8fe4:	64 65       	ori	r22, 0x54	; 84
    8fe6:	66 67       	ori	r22, 0x76	; 118
    8fe8:	68 69       	ori	r22, 0x98	; 152
    8fea:	6a 6b       	ori	r22, 0xBA	; 186
    8fec:	6c 6d       	ori	r22, 0xDC	; 220
    8fee:	6e 6f       	ori	r22, 0xFE	; 254
    8ff0:	70 71       	andi	r23, 0x10	; 16
    8ff2:	72 73       	andi	r23, 0x32	; 50
    8ff4:	74 75       	andi	r23, 0x54	; 84
    8ff6:	76 77       	andi	r23, 0x76	; 118
    8ff8:	78 79       	andi	r23, 0x98	; 152
    8ffa:	7a 7b       	andi	r23, 0xBA	; 186
    8ffc:	7c 7d       	andi	r23, 0xDC	; 220
    8ffe:	7e 7f       	andi	r23, 0xFE	; 254
    9000:	00 02       	muls	r16, r16
    9002:	04 06       	cpc	r0, r20
    9004:	08 0a       	sbc	r0, r24
    9006:	0c 0e       	add	r0, r28
    9008:	10 12       	cpse	r1, r16
    900a:	14 16       	cp	r1, r20
    900c:	18 1a       	sub	r1, r24
    900e:	1c 1e       	adc	r1, r28
    9010:	20 22       	and	r2, r16
    9012:	24 26       	eor	r2, r20
    9014:	28 2a       	or	r2, r24
    9016:	2c 2e       	mov	r2, r28
    9018:	30 32       	cpi	r19, 0x20	; 32
    901a:	34 36       	cpi	r19, 0x64	; 100
    901c:	38 3a       	cpi	r19, 0xA8	; 168
    901e:	3c 3e       	cpi	r19, 0xEC	; 236
    9020:	40 42       	sbci	r20, 0x20	; 32
    9022:	44 46       	sbci	r20, 0x64	; 100
    9024:	48 4a       	sbci	r20, 0xA8	; 168
    9026:	4c 4e       	sbci	r20, 0xEC	; 236
    9028:	50 52       	subi	r21, 0x20	; 32
    902a:	54 56       	subi	r21, 0x64	; 100
    902c:	58 5a       	subi	r21, 0xA8	; 168
    902e:	5c 5e       	subi	r21, 0xEC	; 236
    9030:	60 62       	ori	r22, 0x20	; 32
    9032:	64 66       	ori	r22, 0x64	; 100
    9034:	68 6a       	ori	r22, 0xA8	; 168
    9036:	6c 6e       	ori	r22, 0xEC	; 236
    9038:	70 72       	andi	r23, 0x20	; 32
    903a:	74 76       	andi	r23, 0x64	; 100
    903c:	78 7a       	andi	r23, 0xA8	; 168
    903e:	7c 7e       	andi	r23, 0xEC	; 236
    9040:	7f 7d       	andi	r23, 0xDF	; 223
    9042:	7b 79       	andi	r23, 0x9B	; 155
    9044:	77 75       	andi	r23, 0x57	; 87
    9046:	73 71       	andi	r23, 0x13	; 19
    9048:	6f 6d       	ori	r22, 0xDF	; 223
    904a:	6b 69       	ori	r22, 0x9B	; 155
    904c:	67 65       	ori	r22, 0x57	; 87
    904e:	63 61       	ori	r22, 0x13	; 19
    9050:	5f 5d       	subi	r21, 0xDF	; 223
    9052:	5b 59       	subi	r21, 0x9B	; 155
    9054:	57 55       	subi	r21, 0x57	; 87
    9056:	53 51       	subi	r21, 0x13	; 19
    9058:	4f 4d       	sbci	r20, 0xDF	; 223
    905a:	4b 49       	sbci	r20, 0x9B	; 155
    905c:	47 45       	sbci	r20, 0x57	; 87
    905e:	43 41       	sbci	r20, 0x13	; 19
    9060:	3f 3d       	cpi	r19, 0xDF	; 223
    9062:	3b 39       	cpi	r19, 0x9B	; 155
    9064:	37 35       	cpi	r19, 0x57	; 87
    9066:	33 31       	cpi	r19, 0x13	; 19
    9068:	2f 2d       	mov	r18, r15
    906a:	2b 29       	or	r18, r11
    906c:	27 25       	eor	r18, r7
    906e:	23 21       	and	r18, r3
    9070:	1f 1d       	adc	r17, r15
    9072:	1b 19       	sub	r17, r11
    9074:	17 15       	cp	r17, r7
    9076:	13 11       	cpse	r17, r3
    9078:	0f 0d       	add	r16, r15
    907a:	0b 09       	sbc	r16, r11
    907c:	07 05       	cpc	r16, r7
    907e:	03 01       	movw	r0, r6
    9080:	ff fd       	.word	0xfdff	; ????
    9082:	fb f9       	.word	0xf9fb	; ????
    9084:	f7 f5       	brid	.+124    	; 0x9102 <waves+0x302>
    9086:	f3 f1       	brvs	.+124    	; 0x9104 <waves+0x304>
    9088:	ef ed       	ldi	r30, 0xDF	; 223
    908a:	eb e9       	ldi	r30, 0x9B	; 155
    908c:	e7 e5       	ldi	r30, 0x57	; 87
    908e:	e3 e1       	ldi	r30, 0x13	; 19
    9090:	df dd       	rcall	.-1090   	; 0x8c50 <SetMixerWave+0x1e>
    9092:	db d9       	rcall	.-3146   	; 0x844a <PatchCommand11+0x14>
    9094:	d7 d5       	rcall	.+2990   	; 0x9c44 <DisplayLogo+0x14>
    9096:	d3 d1       	rcall	.+934    	; 0x943e <waves+0x63e>
    9098:	cf cd       	rjmp	.-1122   	; 0x8c38 <SetMixerWave+0x6>
    909a:	cb c9       	rjmp	.-3178   	; 0x8432 <PatchCommand10+0x2>
    909c:	c7 c5       	rjmp	.+2958   	; 0x9c2c <WaitVsync+0x2a>
    909e:	c3 c1       	rjmp	.+902    	; 0x9426 <waves+0x626>
    90a0:	bf bd       	out	0x2f, r27	; 47
    90a2:	bb b9       	out	0x0b, r27	; 11
    90a4:	b7 b5       	in	r27, 0x27	; 39
    90a6:	b3 b1       	in	r27, 0x03	; 3
    90a8:	af ad       	ldd	r26, Y+63	; 0x3f
    90aa:	ab a9       	ldd	r26, Y+51	; 0x33
    90ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    90ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    90b0:	9f 9d       	mul	r25, r15
    90b2:	9b 99       	sbic	0x13, 3	; 19
    90b4:	97 95       	ror	r25
    90b6:	93 91       	.word	0x9193	; ????
    90b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    90ba:	8b 89       	ldd	r24, Y+19	; 0x13
    90bc:	87 85       	ldd	r24, Z+15	; 0x0f
    90be:	83 81       	ldd	r24, Z+3	; 0x03
    90c0:	80 82       	st	Z, r8
    90c2:	84 86       	std	Z+12, r8	; 0x0c
    90c4:	88 8a       	std	Y+16, r8	; 0x10
    90c6:	8c 8e       	std	Y+28, r8	; 0x1c
    90c8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8794>
    90cc:	98 9a       	sbi	0x13, 0	; 19
    90ce:	9c 9e       	mul	r9, r28
    90d0:	a0 a2       	std	Z+32, r10	; 0x20
    90d2:	a4 a6       	std	Z+44, r10	; 0x2c
    90d4:	a8 aa       	std	Y+48, r10	; 0x30
    90d6:	ac ae       	std	Y+60, r10	; 0x3c
    90d8:	b0 b2       	in	r11, 0x10	; 16
    90da:	b4 b6       	in	r11, 0x34	; 52
    90dc:	b8 ba       	out	0x18, r11	; 24
    90de:	bc be       	out	0x3c, r11	; 60
    90e0:	c0 c2       	rjmp	.+1408   	; 0x9662 <waves+0x862>
    90e2:	c4 c6       	rjmp	.+3464   	; 0x9e6c <drawplayer+0x108>
    90e4:	c8 ca       	rjmp	.-2672   	; 0x8676 <TriggerCommon+0x36>
    90e6:	cc ce       	rjmp	.-616    	; 0x8e80 <waves+0x80>
    90e8:	d0 d2       	rcall	.+1440   	; 0x968a <waves+0x88a>
    90ea:	d4 d6       	rcall	.+3496   	; 0x9e94 <drawplayer2+0x4>
    90ec:	d8 da       	rcall	.-2640   	; 0x869e <TriggerCommon+0x5e>
    90ee:	dc de       	rcall	.-584    	; 0x8ea8 <waves+0xa8>
    90f0:	e0 e2       	ldi	r30, 0x20	; 32
    90f2:	e4 e6       	ldi	r30, 0x64	; 100
    90f4:	e8 ea       	ldi	r30, 0xA8	; 168
    90f6:	ec ee       	ldi	r30, 0xEC	; 236
    90f8:	f0 f2       	brcs	.-68     	; 0x90b6 <waves+0x2b6>
    90fa:	f4 f6       	brge	.-68     	; 0x90b8 <waves+0x2b8>
    90fc:	f8 fa       	.word	0xfaf8	; ????
    90fe:	fc fe       	.word	0xfefc	; ????
    9100:	7f 7f       	andi	r23, 0xFF	; 255
    9102:	7f 7f       	andi	r23, 0xFF	; 255
    9104:	7f 7f       	andi	r23, 0xFF	; 255
    9106:	7f 7f       	andi	r23, 0xFF	; 255
    9108:	7f 7f       	andi	r23, 0xFF	; 255
    910a:	7f 7f       	andi	r23, 0xFF	; 255
    910c:	7f 7f       	andi	r23, 0xFF	; 255
    910e:	7f 7f       	andi	r23, 0xFF	; 255
    9110:	7f 7f       	andi	r23, 0xFF	; 255
    9112:	7f 7f       	andi	r23, 0xFF	; 255
    9114:	7f 7f       	andi	r23, 0xFF	; 255
    9116:	7f 7f       	andi	r23, 0xFF	; 255
    9118:	7f 7f       	andi	r23, 0xFF	; 255
    911a:	7f 7f       	andi	r23, 0xFF	; 255
    911c:	7f 7f       	andi	r23, 0xFF	; 255
    911e:	7f 7f       	andi	r23, 0xFF	; 255
    9120:	7f 7f       	andi	r23, 0xFF	; 255
    9122:	7f 7f       	andi	r23, 0xFF	; 255
    9124:	7f 7f       	andi	r23, 0xFF	; 255
    9126:	7f 7f       	andi	r23, 0xFF	; 255
    9128:	7f 7f       	andi	r23, 0xFF	; 255
    912a:	7f 7f       	andi	r23, 0xFF	; 255
    912c:	7f 7f       	andi	r23, 0xFF	; 255
    912e:	7f 7f       	andi	r23, 0xFF	; 255
    9130:	7f 7f       	andi	r23, 0xFF	; 255
    9132:	7f 7f       	andi	r23, 0xFF	; 255
    9134:	7f 7f       	andi	r23, 0xFF	; 255
    9136:	7f 7f       	andi	r23, 0xFF	; 255
    9138:	7f 7f       	andi	r23, 0xFF	; 255
    913a:	7f 7f       	andi	r23, 0xFF	; 255
    913c:	7f 7f       	andi	r23, 0xFF	; 255
    913e:	7f 7f       	andi	r23, 0xFF	; 255
    9140:	80 80       	ld	r8, Z
    9142:	80 80       	ld	r8, Z
    9144:	80 80       	ld	r8, Z
    9146:	80 80       	ld	r8, Z
    9148:	80 80       	ld	r8, Z
    914a:	80 80       	ld	r8, Z
    914c:	80 80       	ld	r8, Z
    914e:	80 80       	ld	r8, Z
    9150:	80 80       	ld	r8, Z
    9152:	80 80       	ld	r8, Z
    9154:	80 80       	ld	r8, Z
    9156:	80 80       	ld	r8, Z
    9158:	80 80       	ld	r8, Z
    915a:	80 80       	ld	r8, Z
    915c:	80 80       	ld	r8, Z
    915e:	80 80       	ld	r8, Z
    9160:	80 80       	ld	r8, Z
    9162:	80 80       	ld	r8, Z
    9164:	80 80       	ld	r8, Z
    9166:	80 80       	ld	r8, Z
    9168:	80 80       	ld	r8, Z
    916a:	80 80       	ld	r8, Z
    916c:	80 80       	ld	r8, Z
    916e:	80 80       	ld	r8, Z
    9170:	80 80       	ld	r8, Z
    9172:	80 80       	ld	r8, Z
    9174:	80 80       	ld	r8, Z
    9176:	80 80       	ld	r8, Z
    9178:	80 80       	ld	r8, Z
    917a:	80 80       	ld	r8, Z
    917c:	80 80       	ld	r8, Z
    917e:	80 80       	ld	r8, Z
    9180:	80 80       	ld	r8, Z
    9182:	80 80       	ld	r8, Z
    9184:	80 80       	ld	r8, Z
    9186:	80 80       	ld	r8, Z
    9188:	80 80       	ld	r8, Z
    918a:	80 80       	ld	r8, Z
    918c:	80 80       	ld	r8, Z
    918e:	80 80       	ld	r8, Z
    9190:	80 80       	ld	r8, Z
    9192:	80 80       	ld	r8, Z
    9194:	80 80       	ld	r8, Z
    9196:	80 80       	ld	r8, Z
    9198:	80 80       	ld	r8, Z
    919a:	80 80       	ld	r8, Z
    919c:	80 80       	ld	r8, Z
    919e:	80 80       	ld	r8, Z
    91a0:	80 80       	ld	r8, Z
    91a2:	80 80       	ld	r8, Z
    91a4:	80 80       	ld	r8, Z
    91a6:	80 80       	ld	r8, Z
    91a8:	80 80       	ld	r8, Z
    91aa:	80 80       	ld	r8, Z
    91ac:	80 80       	ld	r8, Z
    91ae:	80 80       	ld	r8, Z
    91b0:	80 80       	ld	r8, Z
    91b2:	80 80       	ld	r8, Z
    91b4:	80 80       	ld	r8, Z
    91b6:	80 80       	ld	r8, Z
    91b8:	80 80       	ld	r8, Z
    91ba:	80 80       	ld	r8, Z
    91bc:	80 80       	ld	r8, Z
    91be:	80 80       	ld	r8, Z
    91c0:	80 80       	ld	r8, Z
    91c2:	80 80       	ld	r8, Z
    91c4:	80 80       	ld	r8, Z
    91c6:	80 80       	ld	r8, Z
    91c8:	80 80       	ld	r8, Z
    91ca:	80 80       	ld	r8, Z
    91cc:	80 80       	ld	r8, Z
    91ce:	80 80       	ld	r8, Z
    91d0:	80 80       	ld	r8, Z
    91d2:	80 80       	ld	r8, Z
    91d4:	80 80       	ld	r8, Z
    91d6:	80 80       	ld	r8, Z
    91d8:	80 80       	ld	r8, Z
    91da:	80 80       	ld	r8, Z
    91dc:	80 80       	ld	r8, Z
    91de:	80 80       	ld	r8, Z
    91e0:	80 80       	ld	r8, Z
    91e2:	80 80       	ld	r8, Z
    91e4:	80 80       	ld	r8, Z
    91e6:	80 80       	ld	r8, Z
    91e8:	80 80       	ld	r8, Z
    91ea:	80 80       	ld	r8, Z
    91ec:	80 80       	ld	r8, Z
    91ee:	80 80       	ld	r8, Z
    91f0:	80 80       	ld	r8, Z
    91f2:	80 80       	ld	r8, Z
    91f4:	80 80       	ld	r8, Z
    91f6:	80 80       	ld	r8, Z
    91f8:	80 80       	ld	r8, Z
    91fa:	80 80       	ld	r8, Z
    91fc:	80 80       	ld	r8, Z
    91fe:	80 80       	ld	r8, Z
    9200:	7f 7f       	andi	r23, 0xFF	; 255
    9202:	7f 7f       	andi	r23, 0xFF	; 255
    9204:	7f 7f       	andi	r23, 0xFF	; 255
    9206:	7f 7f       	andi	r23, 0xFF	; 255
    9208:	7f 7f       	andi	r23, 0xFF	; 255
    920a:	7f 7f       	andi	r23, 0xFF	; 255
    920c:	7f 7f       	andi	r23, 0xFF	; 255
    920e:	7f 7f       	andi	r23, 0xFF	; 255
    9210:	7f 7f       	andi	r23, 0xFF	; 255
    9212:	7f 7f       	andi	r23, 0xFF	; 255
    9214:	7f 7f       	andi	r23, 0xFF	; 255
    9216:	7f 7f       	andi	r23, 0xFF	; 255
    9218:	7f 7f       	andi	r23, 0xFF	; 255
    921a:	7f 7f       	andi	r23, 0xFF	; 255
    921c:	7f 7f       	andi	r23, 0xFF	; 255
    921e:	7f 7f       	andi	r23, 0xFF	; 255
    9220:	7f 7f       	andi	r23, 0xFF	; 255
    9222:	7f 7f       	andi	r23, 0xFF	; 255
    9224:	7f 7f       	andi	r23, 0xFF	; 255
    9226:	7f 7f       	andi	r23, 0xFF	; 255
    9228:	7f 7f       	andi	r23, 0xFF	; 255
    922a:	7f 7f       	andi	r23, 0xFF	; 255
    922c:	7f 7f       	andi	r23, 0xFF	; 255
    922e:	7f 7f       	andi	r23, 0xFF	; 255
    9230:	7f 7f       	andi	r23, 0xFF	; 255
    9232:	7f 7f       	andi	r23, 0xFF	; 255
    9234:	7f 7f       	andi	r23, 0xFF	; 255
    9236:	7f 7f       	andi	r23, 0xFF	; 255
    9238:	7f 7f       	andi	r23, 0xFF	; 255
    923a:	7f 7f       	andi	r23, 0xFF	; 255
    923c:	7f 7f       	andi	r23, 0xFF	; 255
    923e:	7f 7f       	andi	r23, 0xFF	; 255
    9240:	7f 7f       	andi	r23, 0xFF	; 255
    9242:	7f 7f       	andi	r23, 0xFF	; 255
    9244:	7f 7f       	andi	r23, 0xFF	; 255
    9246:	7f 7f       	andi	r23, 0xFF	; 255
    9248:	7f 7f       	andi	r23, 0xFF	; 255
    924a:	7f 7f       	andi	r23, 0xFF	; 255
    924c:	7f 7f       	andi	r23, 0xFF	; 255
    924e:	7f 7f       	andi	r23, 0xFF	; 255
    9250:	7f 7f       	andi	r23, 0xFF	; 255
    9252:	7f 7f       	andi	r23, 0xFF	; 255
    9254:	7f 7f       	andi	r23, 0xFF	; 255
    9256:	7f 7f       	andi	r23, 0xFF	; 255
    9258:	7f 7f       	andi	r23, 0xFF	; 255
    925a:	7f 7f       	andi	r23, 0xFF	; 255
    925c:	7f 7f       	andi	r23, 0xFF	; 255
    925e:	7f 7f       	andi	r23, 0xFF	; 255
    9260:	7f 7f       	andi	r23, 0xFF	; 255
    9262:	7f 7f       	andi	r23, 0xFF	; 255
    9264:	7f 7f       	andi	r23, 0xFF	; 255
    9266:	7f 7f       	andi	r23, 0xFF	; 255
    9268:	7f 7f       	andi	r23, 0xFF	; 255
    926a:	7f 7f       	andi	r23, 0xFF	; 255
    926c:	7f 7f       	andi	r23, 0xFF	; 255
    926e:	7f 7f       	andi	r23, 0xFF	; 255
    9270:	7f 7f       	andi	r23, 0xFF	; 255
    9272:	7f 7f       	andi	r23, 0xFF	; 255
    9274:	7f 7f       	andi	r23, 0xFF	; 255
    9276:	7f 7f       	andi	r23, 0xFF	; 255
    9278:	7f 7f       	andi	r23, 0xFF	; 255
    927a:	7f 7f       	andi	r23, 0xFF	; 255
    927c:	7f 7f       	andi	r23, 0xFF	; 255
    927e:	7f 7f       	andi	r23, 0xFF	; 255
    9280:	80 80       	ld	r8, Z
    9282:	80 80       	ld	r8, Z
    9284:	80 80       	ld	r8, Z
    9286:	80 80       	ld	r8, Z
    9288:	80 80       	ld	r8, Z
    928a:	80 80       	ld	r8, Z
    928c:	80 80       	ld	r8, Z
    928e:	80 80       	ld	r8, Z
    9290:	80 80       	ld	r8, Z
    9292:	80 80       	ld	r8, Z
    9294:	80 80       	ld	r8, Z
    9296:	80 80       	ld	r8, Z
    9298:	80 80       	ld	r8, Z
    929a:	80 80       	ld	r8, Z
    929c:	80 80       	ld	r8, Z
    929e:	80 80       	ld	r8, Z
    92a0:	80 80       	ld	r8, Z
    92a2:	80 80       	ld	r8, Z
    92a4:	80 80       	ld	r8, Z
    92a6:	80 80       	ld	r8, Z
    92a8:	80 80       	ld	r8, Z
    92aa:	80 80       	ld	r8, Z
    92ac:	80 80       	ld	r8, Z
    92ae:	80 80       	ld	r8, Z
    92b0:	80 80       	ld	r8, Z
    92b2:	80 80       	ld	r8, Z
    92b4:	80 80       	ld	r8, Z
    92b6:	80 80       	ld	r8, Z
    92b8:	80 80       	ld	r8, Z
    92ba:	80 80       	ld	r8, Z
    92bc:	80 80       	ld	r8, Z
    92be:	80 80       	ld	r8, Z
    92c0:	80 80       	ld	r8, Z
    92c2:	80 80       	ld	r8, Z
    92c4:	80 80       	ld	r8, Z
    92c6:	80 80       	ld	r8, Z
    92c8:	80 80       	ld	r8, Z
    92ca:	80 80       	ld	r8, Z
    92cc:	80 80       	ld	r8, Z
    92ce:	80 80       	ld	r8, Z
    92d0:	80 80       	ld	r8, Z
    92d2:	80 80       	ld	r8, Z
    92d4:	80 80       	ld	r8, Z
    92d6:	80 80       	ld	r8, Z
    92d8:	80 80       	ld	r8, Z
    92da:	80 80       	ld	r8, Z
    92dc:	80 80       	ld	r8, Z
    92de:	80 80       	ld	r8, Z
    92e0:	80 80       	ld	r8, Z
    92e2:	80 80       	ld	r8, Z
    92e4:	80 80       	ld	r8, Z
    92e6:	80 80       	ld	r8, Z
    92e8:	80 80       	ld	r8, Z
    92ea:	80 80       	ld	r8, Z
    92ec:	80 80       	ld	r8, Z
    92ee:	80 80       	ld	r8, Z
    92f0:	80 80       	ld	r8, Z
    92f2:	80 80       	ld	r8, Z
    92f4:	80 80       	ld	r8, Z
    92f6:	80 80       	ld	r8, Z
    92f8:	80 80       	ld	r8, Z
    92fa:	80 80       	ld	r8, Z
    92fc:	80 80       	ld	r8, Z
    92fe:	80 80       	ld	r8, Z
    9300:	7f 7f       	andi	r23, 0xFF	; 255
    9302:	7f 7f       	andi	r23, 0xFF	; 255
    9304:	7f 7f       	andi	r23, 0xFF	; 255
    9306:	7f 7f       	andi	r23, 0xFF	; 255
    9308:	7f 7f       	andi	r23, 0xFF	; 255
    930a:	7f 7f       	andi	r23, 0xFF	; 255
    930c:	7f 7f       	andi	r23, 0xFF	; 255
    930e:	7f 7f       	andi	r23, 0xFF	; 255
    9310:	7f 7f       	andi	r23, 0xFF	; 255
    9312:	7f 7f       	andi	r23, 0xFF	; 255
    9314:	7f 7f       	andi	r23, 0xFF	; 255
    9316:	7f 7f       	andi	r23, 0xFF	; 255
    9318:	7f 7f       	andi	r23, 0xFF	; 255
    931a:	7f 7f       	andi	r23, 0xFF	; 255
    931c:	7f 7f       	andi	r23, 0xFF	; 255
    931e:	7f 7f       	andi	r23, 0xFF	; 255
    9320:	7f 7f       	andi	r23, 0xFF	; 255
    9322:	7f 7f       	andi	r23, 0xFF	; 255
    9324:	7f 7f       	andi	r23, 0xFF	; 255
    9326:	7f 7f       	andi	r23, 0xFF	; 255
    9328:	7f 7f       	andi	r23, 0xFF	; 255
    932a:	7f 7f       	andi	r23, 0xFF	; 255
    932c:	7f 7f       	andi	r23, 0xFF	; 255
    932e:	7f 7f       	andi	r23, 0xFF	; 255
    9330:	7f 7f       	andi	r23, 0xFF	; 255
    9332:	7f 7f       	andi	r23, 0xFF	; 255
    9334:	7f 7f       	andi	r23, 0xFF	; 255
    9336:	7f 7f       	andi	r23, 0xFF	; 255
    9338:	7f 7f       	andi	r23, 0xFF	; 255
    933a:	7f 7f       	andi	r23, 0xFF	; 255
    933c:	7f 7f       	andi	r23, 0xFF	; 255
    933e:	7f 7f       	andi	r23, 0xFF	; 255
    9340:	7f 7f       	andi	r23, 0xFF	; 255
    9342:	7f 7f       	andi	r23, 0xFF	; 255
    9344:	7f 7f       	andi	r23, 0xFF	; 255
    9346:	7f 7f       	andi	r23, 0xFF	; 255
    9348:	7f 7f       	andi	r23, 0xFF	; 255
    934a:	7f 7f       	andi	r23, 0xFF	; 255
    934c:	7f 7f       	andi	r23, 0xFF	; 255
    934e:	7f 7f       	andi	r23, 0xFF	; 255
    9350:	7f 7f       	andi	r23, 0xFF	; 255
    9352:	7f 7f       	andi	r23, 0xFF	; 255
    9354:	7f 7f       	andi	r23, 0xFF	; 255
    9356:	7f 7f       	andi	r23, 0xFF	; 255
    9358:	7f 7f       	andi	r23, 0xFF	; 255
    935a:	7f 7f       	andi	r23, 0xFF	; 255
    935c:	7f 7f       	andi	r23, 0xFF	; 255
    935e:	7f 7f       	andi	r23, 0xFF	; 255
    9360:	7f 7f       	andi	r23, 0xFF	; 255
    9362:	7f 7f       	andi	r23, 0xFF	; 255
    9364:	7f 7f       	andi	r23, 0xFF	; 255
    9366:	7f 7f       	andi	r23, 0xFF	; 255
    9368:	7f 7f       	andi	r23, 0xFF	; 255
    936a:	7f 7f       	andi	r23, 0xFF	; 255
    936c:	7f 7f       	andi	r23, 0xFF	; 255
    936e:	7f 7f       	andi	r23, 0xFF	; 255
    9370:	7f 7f       	andi	r23, 0xFF	; 255
    9372:	7f 7f       	andi	r23, 0xFF	; 255
    9374:	7f 7f       	andi	r23, 0xFF	; 255
    9376:	7f 7f       	andi	r23, 0xFF	; 255
    9378:	7f 7f       	andi	r23, 0xFF	; 255
    937a:	7f 7f       	andi	r23, 0xFF	; 255
    937c:	7f 7f       	andi	r23, 0xFF	; 255
    937e:	7f 7f       	andi	r23, 0xFF	; 255
    9380:	7f 7f       	andi	r23, 0xFF	; 255
    9382:	7f 7f       	andi	r23, 0xFF	; 255
    9384:	7f 7f       	andi	r23, 0xFF	; 255
    9386:	7f 7f       	andi	r23, 0xFF	; 255
    9388:	7f 7f       	andi	r23, 0xFF	; 255
    938a:	7f 7f       	andi	r23, 0xFF	; 255
    938c:	7f 7f       	andi	r23, 0xFF	; 255
    938e:	7f 7f       	andi	r23, 0xFF	; 255
    9390:	7f 7f       	andi	r23, 0xFF	; 255
    9392:	7f 7f       	andi	r23, 0xFF	; 255
    9394:	7f 7f       	andi	r23, 0xFF	; 255
    9396:	7f 7f       	andi	r23, 0xFF	; 255
    9398:	7f 7f       	andi	r23, 0xFF	; 255
    939a:	7f 7f       	andi	r23, 0xFF	; 255
    939c:	7f 7f       	andi	r23, 0xFF	; 255
    939e:	7f 7f       	andi	r23, 0xFF	; 255
    93a0:	7f 7f       	andi	r23, 0xFF	; 255
    93a2:	7f 7f       	andi	r23, 0xFF	; 255
    93a4:	7f 7f       	andi	r23, 0xFF	; 255
    93a6:	7f 7f       	andi	r23, 0xFF	; 255
    93a8:	7f 7f       	andi	r23, 0xFF	; 255
    93aa:	7f 7f       	andi	r23, 0xFF	; 255
    93ac:	7f 7f       	andi	r23, 0xFF	; 255
    93ae:	7f 7f       	andi	r23, 0xFF	; 255
    93b0:	7f 7f       	andi	r23, 0xFF	; 255
    93b2:	7f 7f       	andi	r23, 0xFF	; 255
    93b4:	7f 7f       	andi	r23, 0xFF	; 255
    93b6:	7f 7f       	andi	r23, 0xFF	; 255
    93b8:	7f 7f       	andi	r23, 0xFF	; 255
    93ba:	7f 7f       	andi	r23, 0xFF	; 255
    93bc:	7f 7f       	andi	r23, 0xFF	; 255
    93be:	7f 7f       	andi	r23, 0xFF	; 255
    93c0:	80 80       	ld	r8, Z
    93c2:	80 80       	ld	r8, Z
    93c4:	80 80       	ld	r8, Z
    93c6:	80 80       	ld	r8, Z
    93c8:	80 80       	ld	r8, Z
    93ca:	80 80       	ld	r8, Z
    93cc:	80 80       	ld	r8, Z
    93ce:	80 80       	ld	r8, Z
    93d0:	80 80       	ld	r8, Z
    93d2:	80 80       	ld	r8, Z
    93d4:	80 80       	ld	r8, Z
    93d6:	80 80       	ld	r8, Z
    93d8:	80 80       	ld	r8, Z
    93da:	80 80       	ld	r8, Z
    93dc:	80 80       	ld	r8, Z
    93de:	80 80       	ld	r8, Z
    93e0:	80 80       	ld	r8, Z
    93e2:	80 80       	ld	r8, Z
    93e4:	80 80       	ld	r8, Z
    93e6:	80 80       	ld	r8, Z
    93e8:	80 80       	ld	r8, Z
    93ea:	80 80       	ld	r8, Z
    93ec:	80 80       	ld	r8, Z
    93ee:	80 80       	ld	r8, Z
    93f0:	80 80       	ld	r8, Z
    93f2:	80 80       	ld	r8, Z
    93f4:	80 80       	ld	r8, Z
    93f6:	80 80       	ld	r8, Z
    93f8:	80 80       	ld	r8, Z
    93fa:	80 80       	ld	r8, Z
    93fc:	80 80       	ld	r8, Z
    93fe:	80 80       	ld	r8, Z
    9400:	03 09       	sbc	r16, r3
    9402:	13 1e       	adc	r1, r19
    9404:	28 31       	cpi	r18, 0x18	; 24
    9406:	3a 40       	sbci	r19, 0x0A	; 10
    9408:	46 4c       	sbci	r20, 0xC6	; 198
    940a:	50 54       	subi	r21, 0x40	; 64
    940c:	58 5b       	subi	r21, 0xB8	; 184
    940e:	5e 61       	ori	r21, 0x1E	; 30
    9410:	63 65       	ori	r22, 0x53	; 83
    9412:	67 69       	ori	r22, 0x97	; 151
    9414:	6b 6c       	ori	r22, 0xCB	; 203
    9416:	6e 6f       	ori	r22, 0xFE	; 254
    9418:	70 71       	andi	r23, 0x10	; 16
    941a:	72 73       	andi	r23, 0x32	; 50
    941c:	74 75       	andi	r23, 0x54	; 84
    941e:	76 77       	andi	r23, 0x76	; 118
    9420:	77 78       	andi	r23, 0x87	; 135
    9422:	79 79       	andi	r23, 0x99	; 153
    9424:	7a 7a       	andi	r23, 0xAA	; 170
    9426:	7b 7b       	andi	r23, 0xBB	; 187
    9428:	7c 7c       	andi	r23, 0xCC	; 204
    942a:	7c 7d       	andi	r23, 0xDC	; 220
    942c:	7d 7d       	andi	r23, 0xDD	; 221
    942e:	7e 7e       	andi	r23, 0xEE	; 238
    9430:	7e 7e       	andi	r23, 0xEE	; 238
    9432:	7f 7f       	andi	r23, 0xFF	; 255
    9434:	7f 7f       	andi	r23, 0xFF	; 255
    9436:	7f 7f       	andi	r23, 0xFF	; 255
    9438:	7f 7f       	andi	r23, 0xFF	; 255
    943a:	7f 7f       	andi	r23, 0xFF	; 255
    943c:	7f 7f       	andi	r23, 0xFF	; 255
    943e:	7f 7f       	andi	r23, 0xFF	; 255
    9440:	7f 7f       	andi	r23, 0xFF	; 255
    9442:	7f 7f       	andi	r23, 0xFF	; 255
    9444:	7f 7f       	andi	r23, 0xFF	; 255
    9446:	7f 7f       	andi	r23, 0xFF	; 255
    9448:	7f 7f       	andi	r23, 0xFF	; 255
    944a:	7f 7f       	andi	r23, 0xFF	; 255
    944c:	7f 7e       	andi	r23, 0xEF	; 239
    944e:	7e 7e       	andi	r23, 0xEE	; 238
    9450:	7e 7d       	andi	r23, 0xDE	; 222
    9452:	7d 7d       	andi	r23, 0xDD	; 221
    9454:	7c 7c       	andi	r23, 0xCC	; 204
    9456:	7c 7b       	andi	r23, 0xBC	; 188
    9458:	7b 7a       	andi	r23, 0xAB	; 171
    945a:	7a 79       	andi	r23, 0x9A	; 154
    945c:	79 78       	andi	r23, 0x89	; 137
    945e:	77 77       	andi	r23, 0x77	; 119
    9460:	76 75       	andi	r23, 0x56	; 86
    9462:	74 73       	andi	r23, 0x34	; 52
    9464:	72 71       	andi	r23, 0x12	; 18
    9466:	70 6f       	ori	r23, 0xF0	; 240
    9468:	6e 6c       	ori	r22, 0xCE	; 206
    946a:	6b 69       	ori	r22, 0x9B	; 155
    946c:	67 65       	ori	r22, 0x57	; 87
    946e:	63 61       	ori	r22, 0x13	; 19
    9470:	5e 5b       	subi	r21, 0xBE	; 190
    9472:	58 54       	subi	r21, 0x48	; 72
    9474:	50 4c       	sbci	r21, 0xC0	; 192
    9476:	46 40       	sbci	r20, 0x06	; 6
    9478:	3a 31       	cpi	r19, 0x1A	; 26
    947a:	28 1e       	adc	r2, r24
    947c:	13 09       	sbc	r17, r3
    947e:	03 00       	.word	0x0003	; ????
    9480:	c6 cc       	rjmp	.-1652   	; 0x8e0e <waves+0xe>
    9482:	d5 db       	rcall	.-2134   	; 0x8c2e <set_note_waves+0x20>
    9484:	df e3       	ldi	r29, 0x3F	; 63
    9486:	e5 e7       	ldi	r30, 0x75	; 117
    9488:	e9 ea       	ldi	r30, 0xA9	; 169
    948a:	eb ec       	ldi	r30, 0xCB	; 203
    948c:	ed ee       	ldi	r30, 0xED	; 237
    948e:	ef ef       	ldi	r30, 0xFF	; 255
    9490:	f0 f0       	brcs	.+60     	; 0x94ce <waves+0x6ce>
    9492:	f0 f1       	brcs	.+124    	; 0x9510 <waves+0x710>
    9494:	f1 f1       	breq	.+124    	; 0x9512 <waves+0x712>
    9496:	f1 f2       	breq	.-68     	; 0x9454 <waves+0x654>
    9498:	f2 f2       	brmi	.-68     	; 0x9456 <waves+0x656>
    949a:	f2 f2       	brmi	.-68     	; 0x9458 <waves+0x658>
    949c:	f2 f2       	brmi	.-68     	; 0x945a <waves+0x65a>
    949e:	f2 f3       	brmi	.-4      	; 0x949c <waves+0x69c>
    94a0:	f3 f3       	brvs	.-4      	; 0x949e <waves+0x69e>
    94a2:	f3 f3       	brvs	.-4      	; 0x94a0 <waves+0x6a0>
    94a4:	f3 f3       	brvs	.-4      	; 0x94a2 <waves+0x6a2>
    94a6:	f3 f3       	brvs	.-4      	; 0x94a4 <waves+0x6a4>
    94a8:	f3 f3       	brvs	.-4      	; 0x94a6 <waves+0x6a6>
    94aa:	f3 f3       	brvs	.-4      	; 0x94a8 <waves+0x6a8>
    94ac:	f3 f3       	brvs	.-4      	; 0x94aa <waves+0x6aa>
    94ae:	f3 f3       	brvs	.-4      	; 0x94ac <waves+0x6ac>
    94b0:	f3 f3       	brvs	.-4      	; 0x94ae <waves+0x6ae>
    94b2:	f3 f3       	brvs	.-4      	; 0x94b0 <waves+0x6b0>
    94b4:	f3 f3       	brvs	.-4      	; 0x94b2 <waves+0x6b2>
    94b6:	f3 f3       	brvs	.-4      	; 0x94b4 <waves+0x6b4>
    94b8:	f3 f3       	brvs	.-4      	; 0x94b6 <waves+0x6b6>
    94ba:	f3 f3       	brvs	.-4      	; 0x94b8 <waves+0x6b8>
    94bc:	f3 f3       	brvs	.-4      	; 0x94ba <waves+0x6ba>
    94be:	f3 f3       	brvs	.-4      	; 0x94bc <waves+0x6bc>
    94c0:	f3 f3       	brvs	.-4      	; 0x94be <waves+0x6be>
    94c2:	f3 f3       	brvs	.-4      	; 0x94c0 <waves+0x6c0>
    94c4:	f3 f3       	brvs	.-4      	; 0x94c2 <waves+0x6c2>
    94c6:	f3 f3       	brvs	.-4      	; 0x94c4 <waves+0x6c4>
    94c8:	f3 f3       	brvs	.-4      	; 0x94c6 <waves+0x6c6>
    94ca:	f3 f3       	brvs	.-4      	; 0x94c8 <waves+0x6c8>
    94cc:	f3 f3       	brvs	.-4      	; 0x94ca <waves+0x6ca>
    94ce:	f3 f3       	brvs	.-4      	; 0x94cc <waves+0x6cc>
    94d0:	f3 f3       	brvs	.-4      	; 0x94ce <waves+0x6ce>
    94d2:	f3 f3       	brvs	.-4      	; 0x94d0 <waves+0x6d0>
    94d4:	f3 f3       	brvs	.-4      	; 0x94d2 <waves+0x6d2>
    94d6:	f3 f3       	brvs	.-4      	; 0x94d4 <waves+0x6d4>
    94d8:	f3 f3       	brvs	.-4      	; 0x94d6 <waves+0x6d6>
    94da:	f3 f3       	brvs	.-4      	; 0x94d8 <waves+0x6d8>
    94dc:	f3 f3       	brvs	.-4      	; 0x94da <waves+0x6da>
    94de:	f3 f3       	brvs	.-4      	; 0x94dc <waves+0x6dc>
    94e0:	f2 f2       	brmi	.-68     	; 0x949e <waves+0x69e>
    94e2:	f2 f2       	brmi	.-68     	; 0x94a0 <waves+0x6a0>
    94e4:	f2 f2       	brmi	.-68     	; 0x94a2 <waves+0x6a2>
    94e6:	f2 f2       	brmi	.-68     	; 0x94a4 <waves+0x6a4>
    94e8:	f1 f1       	breq	.+124    	; 0x9566 <waves+0x766>
    94ea:	f1 f1       	breq	.+124    	; 0x9568 <waves+0x768>
    94ec:	f0 f0       	brcs	.+60     	; 0x952a <waves+0x72a>
    94ee:	f0 ef       	ldi	r31, 0xF0	; 240
    94f0:	ef ee       	ldi	r30, 0xEF	; 239
    94f2:	ed ec       	ldi	r30, 0xCD	; 205
    94f4:	eb ea       	ldi	r30, 0xAB	; 171
    94f6:	e9 e7       	ldi	r30, 0x79	; 121
    94f8:	e5 e3       	ldi	r30, 0x35	; 53
    94fa:	df db       	rcall	.-2114   	; 0x8cba <steptable+0x4e>
    94fc:	d5 cc       	rjmp	.-1622   	; 0x8ea8 <waves+0xa8>
    94fe:	c6 00       	.word	0x00c6	; ????
    9500:	00 28       	or	r0, r0
    9502:	3d 42       	sbci	r19, 0x2D	; 45
    9504:	30 2d       	mov	r19, r0
    9506:	2c 2b       	or	r18, r28
    9508:	2c 2d       	mov	r18, r12
    950a:	2e 2f       	mov	r18, r30
    950c:	30 32       	cpi	r19, 0x20	; 32
    950e:	33 35       	cpi	r19, 0x53	; 83
    9510:	37 39       	cpi	r19, 0x97	; 151
    9512:	3b 3d       	cpi	r19, 0xDB	; 219
    9514:	3f 41       	sbci	r19, 0x1F	; 31
    9516:	43 45       	sbci	r20, 0x53	; 83
    9518:	48 4a       	sbci	r20, 0xA8	; 168
    951a:	4c 4e       	sbci	r20, 0xEC	; 236
    951c:	50 53       	subi	r21, 0x30	; 48
    951e:	55 57       	subi	r21, 0x75	; 117
    9520:	59 5b       	subi	r21, 0xB9	; 185
    9522:	5d 5f       	subi	r21, 0xFD	; 253
    9524:	61 63       	ori	r22, 0x31	; 49
    9526:	65 67       	ori	r22, 0x75	; 117
    9528:	69 6b       	ori	r22, 0xB9	; 185
    952a:	6c 6e       	ori	r22, 0xEC	; 236
    952c:	70 71       	andi	r23, 0x10	; 16
    952e:	73 74       	andi	r23, 0x43	; 67
    9530:	75 77       	andi	r23, 0x75	; 117
    9532:	78 79       	andi	r23, 0x98	; 152
    9534:	7a 7b       	andi	r23, 0xBA	; 186
    9536:	7c 7d       	andi	r23, 0xDC	; 220
    9538:	7d 7e       	andi	r23, 0xED	; 237
    953a:	7e 7f       	andi	r23, 0xFE	; 254
    953c:	7f 7f       	andi	r23, 0xFF	; 255
    953e:	7f 7f       	andi	r23, 0xFF	; 255
    9540:	7f 7f       	andi	r23, 0xFF	; 255
    9542:	7f 7f       	andi	r23, 0xFF	; 255
    9544:	7f 7f       	andi	r23, 0xFF	; 255
    9546:	7e 7e       	andi	r23, 0xEE	; 238
    9548:	7d 7d       	andi	r23, 0xDD	; 221
    954a:	7c 7b       	andi	r23, 0xBC	; 188
    954c:	7a 79       	andi	r23, 0x9A	; 154
    954e:	78 77       	andi	r23, 0x78	; 120
    9550:	75 74       	andi	r23, 0x45	; 69
    9552:	73 71       	andi	r23, 0x13	; 19
    9554:	70 6e       	ori	r23, 0xE0	; 224
    9556:	6c 6b       	ori	r22, 0xBC	; 188
    9558:	69 67       	ori	r22, 0x79	; 121
    955a:	65 63       	ori	r22, 0x35	; 53
    955c:	61 5f       	subi	r22, 0xF1	; 241
    955e:	5d 5b       	subi	r21, 0xBD	; 189
    9560:	59 57       	subi	r21, 0x79	; 121
    9562:	55 53       	subi	r21, 0x35	; 53
    9564:	50 4e       	sbci	r21, 0xE0	; 224
    9566:	4c 4a       	sbci	r20, 0xAC	; 172
    9568:	48 45       	sbci	r20, 0x58	; 88
    956a:	43 41       	sbci	r20, 0x13	; 19
    956c:	3f 3d       	cpi	r19, 0xDF	; 223
    956e:	3b 39       	cpi	r19, 0x9B	; 155
    9570:	37 35       	cpi	r19, 0x57	; 87
    9572:	33 32       	cpi	r19, 0x23	; 35
    9574:	30 2f       	mov	r19, r16
    9576:	2e 2d       	mov	r18, r14
    9578:	2c 2b       	or	r18, r28
    957a:	2c 2d       	mov	r18, r12
    957c:	30 42       	sbci	r19, 0x20	; 32
    957e:	3d 28       	or	r3, r13
    9580:	00 e9       	ldi	r16, 0x90	; 144
    9582:	e5 fe       	sbrs	r14, 5
    9584:	d4 d7       	rcall	.+4008   	; 0xa52e <printheadlineintro+0x36>
    9586:	d7 d7       	rcall	.+4014   	; 0xa536 <printheadlineintro+0x3e>
    9588:	d6 d4       	rcall	.+2476   	; 0x9f36 <drawplayer2+0xa6>
    958a:	d2 d0       	rcall	.+420    	; 0x9730 <waves+0x930>
    958c:	ce cc       	rjmp	.-1636   	; 0x8f2a <waves+0x12a>
    958e:	ca c8       	rjmp	.-3692   	; 0x8724 <TriggerCommon+0xe4>
    9590:	c6 c3       	rjmp	.+1932   	; 0x9d1e <ProcessFading+0x34>
    9592:	c1 bf       	out	0x31, r28	; 49
    9594:	bd ba       	out	0x1d, r11	; 29
    9596:	b8 b6       	in	r11, 0x38	; 56
    9598:	b4 b1       	in	r27, 0x04	; 4
    959a:	af ad       	ldd	r26, Y+63	; 0x3f
    959c:	ab a9       	ldd	r26, Y+51	; 0x33
    959e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    95a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    95a2:	9f 9e       	mul	r9, r31
    95a4:	9c 9a       	sbi	0x13, 4	; 19
    95a6:	99 97       	sbiw	r26, 0x29	; 41
    95a8:	95 94       	asr	r9
    95aa:	93 91       	.word	0x9193	; ????
    95ac:	90 8f       	std	Z+24, r25	; 0x18
    95ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    95b0:	8b 8a       	std	Y+19, r8	; 0x13
    95b2:	89 88       	ldd	r8, Y+17	; 0x11
    95b4:	88 87       	std	Y+8, r24	; 0x08
    95b6:	86 85       	ldd	r24, Z+14	; 0x0e
    95b8:	85 84       	ldd	r8, Z+13	; 0x0d
    95ba:	84 84       	ldd	r8, Z+12	; 0x0c
    95bc:	83 83       	std	Z+3, r24	; 0x03
    95be:	83 83       	std	Z+3, r24	; 0x03
    95c0:	83 83       	std	Z+3, r24	; 0x03
    95c2:	83 83       	std	Z+3, r24	; 0x03
    95c4:	83 84       	ldd	r8, Z+11	; 0x0b
    95c6:	84 84       	ldd	r8, Z+12	; 0x0c
    95c8:	85 85       	ldd	r24, Z+13	; 0x0d
    95ca:	86 87       	std	Z+14, r24	; 0x0e
    95cc:	88 88       	ldd	r8, Y+16	; 0x10
    95ce:	89 8a       	std	Y+17, r8	; 0x11
    95d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    95d2:	8d 8f       	std	Y+29, r24	; 0x1d
    95d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8593>
    95d8:	95 97       	sbiw	r26, 0x25	; 37
    95da:	99 9a       	sbi	0x13, 1	; 19
    95dc:	9c 9e       	mul	r9, r28
    95de:	9f a1       	ldd	r25, Y+39	; 0x27
    95e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    95e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    95e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    95e6:	af b1       	in	r26, 0x0f	; 15
    95e8:	b4 b6       	in	r11, 0x34	; 52
    95ea:	b8 ba       	out	0x18, r11	; 24
    95ec:	bd bf       	out	0x3d, r27	; 61
    95ee:	c1 c3       	rjmp	.+1922   	; 0x9d72 <drawplayer+0xe>
    95f0:	c6 c8       	rjmp	.-3700   	; 0x877e <TriggerFx+0x3c>
    95f2:	ca cc       	rjmp	.-1644   	; 0x8f88 <waves+0x188>
    95f4:	ce d0       	rcall	.+412    	; 0x9792 <waves+0x992>
    95f6:	d2 d4       	rcall	.+2468   	; 0x9f9c <drawplayer2+0x10c>
    95f8:	d6 d7       	rcall	.+4012   	; 0xa5a6 <checkcollide+0x44>
    95fa:	d7 d7       	rcall	.+4014   	; 0xa5aa <checkcollide+0x48>
    95fc:	d4 fe       	sbrs	r13, 4
    95fe:	e5 e9       	ldi	r30, 0x95	; 149
    9600:	f9 f8       	.word	0xf8f9	; ????
    9602:	f9 f5       	brne	.+126    	; 0x9682 <waves+0x882>
    9604:	eb e1       	ldi	r30, 0x1B	; 27
    9606:	dd de       	rcall	.-582    	; 0x93c2 <waves+0x5c2>
    9608:	e0 e2       	ldi	r30, 0x20	; 32
    960a:	e4 e5       	ldi	r30, 0x54	; 84
    960c:	e6 e5       	ldi	r30, 0x56	; 86
    960e:	e4 e2       	ldi	r30, 0x24	; 36
    9610:	de d9       	rcall	.-3140   	; 0x89ce <ProcessMusic+0x17c>
    9612:	d2 ca       	rjmp	.-2652   	; 0x8bb8 <ProcessMusic+0x366>
    9614:	c1 b7       	in	r28, 0x31	; 49
    9616:	ac a2       	std	Y+36, r10	; 0x24
    9618:	99 91       	ld	r25, Y+
    961a:	8a 86       	std	Y+10, r8	; 0x0a
    961c:	83 81       	ldd	r24, Z+3	; 0x03
    961e:	80 80       	ld	r8, Z
    9620:	81 82       	std	Z+1, r8	; 0x01
    9622:	83 85       	ldd	r24, Z+11	; 0x0b
    9624:	86 88       	ldd	r8, Z+22	; 0x16
    9626:	8a 8c       	ldd	r8, Y+26	; 0x1a
    9628:	8d 8f       	std	Y+29, r24	; 0x1d
    962a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8693>
    962e:	96 97       	sbiw	r26, 0x26	; 38
    9630:	98 99       	sbic	0x13, 0	; 19
    9632:	9a 9b       	sbis	0x13, 2	; 19
    9634:	9b 9c       	mul	r9, r11
    9636:	9d 9d       	mul	r25, r13
    9638:	9d 9e       	mul	r9, r29
    963a:	9e 9e       	mul	r9, r30
    963c:	9f 9f       	mul	r25, r31
    963e:	9f 9f       	mul	r25, r31
    9640:	9f 9f       	mul	r25, r31
    9642:	9f 9e       	mul	r9, r31
    9644:	9e 9e       	mul	r9, r30
    9646:	9d 9d       	mul	r25, r13
    9648:	9d 9c       	mul	r9, r13
    964a:	9b 9b       	sbis	0x13, 3	; 19
    964c:	9a 99       	sbic	0x13, 2	; 19
    964e:	98 97       	sbiw	r26, 0x28	; 40
    9650:	96 95       	lsr	r25
    9652:	93 92       	.word	0x9293	; ????
    9654:	90 8f       	std	Z+24, r25	; 0x18
    9656:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9658:	8a 88       	ldd	r8, Y+18	; 0x12
    965a:	86 85       	ldd	r24, Z+14	; 0x0e
    965c:	83 82       	std	Z+3, r8	; 0x03
    965e:	81 80       	ldd	r8, Z+1	; 0x01
    9660:	80 81       	ld	r24, Z
    9662:	83 86       	std	Z+11, r8	; 0x0b
    9664:	8a 91       	ld	r24, -Y
    9666:	99 a2       	std	Y+33, r9	; 0x21
    9668:	ac b7       	in	r26, 0x3c	; 60
    966a:	c1 ca       	rjmp	.-2686   	; 0x8bee <ProcessMusic+0x39c>
    966c:	d2 d9       	rcall	.-3164   	; 0x8a12 <ProcessMusic+0x1c0>
    966e:	de e2       	ldi	r29, 0x2E	; 46
    9670:	e4 e5       	ldi	r30, 0x54	; 84
    9672:	e6 e5       	ldi	r30, 0x56	; 86
    9674:	e4 e2       	ldi	r30, 0x24	; 36
    9676:	e0 de       	rcall	.-576    	; 0x9438 <waves+0x638>
    9678:	dd e1       	ldi	r29, 0x1D	; 29
    967a:	eb f5       	brvc	.+122    	; 0x96f6 <waves+0x8f6>
    967c:	f9 f8       	.word	0xf8f9	; ????
    967e:	f9 00       	.word	0x00f9	; ????
    9680:	07 08       	sbc	r0, r7
    9682:	07 0b       	sbc	r16, r23
    9684:	15 1f       	adc	r17, r21
    9686:	23 22       	and	r2, r19
    9688:	20 1e       	adc	r2, r16
    968a:	1c 1b       	sub	r17, r28
    968c:	1a 1b       	sub	r17, r26
    968e:	1c 1e       	adc	r1, r28
    9690:	22 27       	eor	r18, r18
    9692:	2e 36       	cpi	r18, 0x6E	; 110
    9694:	3f 49       	sbci	r19, 0x9F	; 159
    9696:	54 5e       	subi	r21, 0xE4	; 228
    9698:	67 6f       	ori	r22, 0xF7	; 247
    969a:	76 7a       	andi	r23, 0xA6	; 166
    969c:	7e 7f       	andi	r23, 0xFE	; 254
    969e:	7f 7f       	andi	r23, 0xFF	; 255
    96a0:	7f 7e       	andi	r23, 0xEF	; 239
    96a2:	7d 7b       	andi	r23, 0xBD	; 189
    96a4:	7a 78       	andi	r23, 0x8A	; 138
    96a6:	76 74       	andi	r23, 0x46	; 70
    96a8:	73 71       	andi	r23, 0x13	; 19
    96aa:	70 6e       	ori	r23, 0xE0	; 224
    96ac:	6d 6b       	ori	r22, 0xBD	; 189
    96ae:	6a 69       	ori	r22, 0x9A	; 154
    96b0:	68 67       	ori	r22, 0x78	; 120
    96b2:	66 65       	ori	r22, 0x56	; 86
    96b4:	65 64       	ori	r22, 0x45	; 69
    96b6:	64 63       	ori	r22, 0x34	; 52
    96b8:	63 62       	ori	r22, 0x23	; 35
    96ba:	62 62       	ori	r22, 0x22	; 34
    96bc:	61 61       	ori	r22, 0x11	; 17
    96be:	61 61       	ori	r22, 0x11	; 17
    96c0:	61 61       	ori	r22, 0x11	; 17
    96c2:	61 62       	ori	r22, 0x21	; 33
    96c4:	62 62       	ori	r22, 0x22	; 34
    96c6:	63 63       	ori	r22, 0x33	; 51
    96c8:	63 64       	ori	r22, 0x43	; 67
    96ca:	65 65       	ori	r22, 0x55	; 85
    96cc:	66 67       	ori	r22, 0x76	; 118
    96ce:	68 69       	ori	r22, 0x98	; 152
    96d0:	6a 6b       	ori	r22, 0xBA	; 186
    96d2:	6d 6e       	ori	r22, 0xED	; 237
    96d4:	70 71       	andi	r23, 0x10	; 16
    96d6:	73 74       	andi	r23, 0x43	; 67
    96d8:	76 78       	andi	r23, 0x86	; 134
    96da:	7a 7b       	andi	r23, 0xBA	; 186
    96dc:	7d 7e       	andi	r23, 0xED	; 237
    96de:	7f 7f       	andi	r23, 0xFF	; 255
    96e0:	7f 7f       	andi	r23, 0xFF	; 255
    96e2:	7e 7a       	andi	r23, 0xAE	; 174
    96e4:	76 6f       	ori	r23, 0xF6	; 246
    96e6:	67 5e       	subi	r22, 0xE7	; 231
    96e8:	54 49       	sbci	r21, 0x94	; 148
    96ea:	3f 36       	cpi	r19, 0x6F	; 111
    96ec:	2e 27       	eor	r18, r30
    96ee:	22 1e       	adc	r2, r18
    96f0:	1c 1b       	sub	r17, r28
    96f2:	1a 1b       	sub	r17, r26
    96f4:	1c 1e       	adc	r1, r28
    96f6:	20 22       	and	r2, r16
    96f8:	23 1f       	adc	r18, r19
    96fa:	15 0b       	sbc	r17, r21
    96fc:	07 08       	sbc	r0, r7
    96fe:	07 00       	.word	0x0007	; ????
    9700:	1f 31       	cpi	r17, 0x1F	; 31
    9702:	3d 44       	sbci	r19, 0x4D	; 77
    9704:	4e 53       	subi	r20, 0x3E	; 62
    9706:	54 56       	subi	r21, 0x64	; 100
    9708:	5a 5f       	subi	r21, 0xFA	; 250
    970a:	64 69       	ori	r22, 0x94	; 148
    970c:	6e 74       	andi	r22, 0x4E	; 78
    970e:	76 79       	andi	r23, 0x96	; 150
    9710:	7c 7f       	andi	r23, 0xFC	; 252
    9712:	7f 7f       	andi	r23, 0xFF	; 255
    9714:	7f 7f       	andi	r23, 0xFF	; 255
    9716:	7f 7f       	andi	r23, 0xFF	; 255
    9718:	7f 7f       	andi	r23, 0xFF	; 255
    971a:	7f 7f       	andi	r23, 0xFF	; 255
    971c:	7f 7f       	andi	r23, 0xFF	; 255
    971e:	7f 7f       	andi	r23, 0xFF	; 255
    9720:	7f 7f       	andi	r23, 0xFF	; 255
    9722:	7f 7f       	andi	r23, 0xFF	; 255
    9724:	7f 7f       	andi	r23, 0xFF	; 255
    9726:	7f 7f       	andi	r23, 0xFF	; 255
    9728:	7f 7f       	andi	r23, 0xFF	; 255
    972a:	7f 7f       	andi	r23, 0xFF	; 255
    972c:	7f 7f       	andi	r23, 0xFF	; 255
    972e:	7f 7f       	andi	r23, 0xFF	; 255
    9730:	7f 7f       	andi	r23, 0xFF	; 255
    9732:	7f 7f       	andi	r23, 0xFF	; 255
    9734:	7f 7f       	andi	r23, 0xFF	; 255
    9736:	7f 7f       	andi	r23, 0xFF	; 255
    9738:	7f 7f       	andi	r23, 0xFF	; 255
    973a:	7f 7f       	andi	r23, 0xFF	; 255
    973c:	7f 7f       	andi	r23, 0xFF	; 255
    973e:	7f 7f       	andi	r23, 0xFF	; 255
    9740:	7f 7f       	andi	r23, 0xFF	; 255
    9742:	7f 7f       	andi	r23, 0xFF	; 255
    9744:	7f 7f       	andi	r23, 0xFF	; 255
    9746:	7f 7f       	andi	r23, 0xFF	; 255
    9748:	7f 7f       	andi	r23, 0xFF	; 255
    974a:	7f 7f       	andi	r23, 0xFF	; 255
    974c:	7f 7f       	andi	r23, 0xFF	; 255
    974e:	7f 7f       	andi	r23, 0xFF	; 255
    9750:	7f 7f       	andi	r23, 0xFF	; 255
    9752:	7f 7f       	andi	r23, 0xFF	; 255
    9754:	7f 7f       	andi	r23, 0xFF	; 255
    9756:	7f 7f       	andi	r23, 0xFF	; 255
    9758:	7f 7f       	andi	r23, 0xFF	; 255
    975a:	7f 7f       	andi	r23, 0xFF	; 255
    975c:	7f 7f       	andi	r23, 0xFF	; 255
    975e:	7f 7f       	andi	r23, 0xFF	; 255
    9760:	7f 7f       	andi	r23, 0xFF	; 255
    9762:	7f 7f       	andi	r23, 0xFF	; 255
    9764:	7f 7f       	andi	r23, 0xFF	; 255
    9766:	7f 7f       	andi	r23, 0xFF	; 255
    9768:	7f 7f       	andi	r23, 0xFF	; 255
    976a:	7f 7f       	andi	r23, 0xFF	; 255
    976c:	7f 7f       	andi	r23, 0xFF	; 255
    976e:	7f 7f       	andi	r23, 0xFF	; 255
    9770:	7f 7f       	andi	r23, 0xFF	; 255
    9772:	7f 7f       	andi	r23, 0xFF	; 255
    9774:	7f 7f       	andi	r23, 0xFF	; 255
    9776:	7f 7f       	andi	r23, 0xFF	; 255
    9778:	7f 7f       	andi	r23, 0xFF	; 255
    977a:	7f 7c       	andi	r23, 0xCF	; 207
    977c:	78 71       	andi	r23, 0x18	; 24
    977e:	68 4c       	sbci	r22, 0xC8	; 200
    9780:	2c 1c       	adc	r2, r12
    9782:	12 0c       	add	r1, r2
    9784:	0a 0b       	sbc	r16, r26
    9786:	0a 05       	cpc	r16, r10
    9788:	fd f3       	brhs	.-2      	; 0x9788 <waves+0x988>
    978a:	e9 df       	rcall	.-46     	; 0x975e <waves+0x95e>
    978c:	d4 ca       	rjmp	.-2648   	; 0x8d36 <steptable+0xca>
    978e:	c0 b7       	in	r28, 0x30	; 48
    9790:	ae a6       	std	Y+46, r10	; 0x2e
    9792:	9e 97       	sbiw	r26, 0x2e	; 46
    9794:	91 8b       	std	Z+17, r25	; 0x11
    9796:	86 85       	ldd	r24, Z+14	; 0x0e
    9798:	82 80       	ldd	r8, Z+2	; 0x02
    979a:	80 80       	ld	r8, Z
    979c:	80 80       	ld	r8, Z
    979e:	80 80       	ld	r8, Z
    97a0:	80 80       	ld	r8, Z
    97a2:	80 80       	ld	r8, Z
    97a4:	80 80       	ld	r8, Z
    97a6:	80 80       	ld	r8, Z
    97a8:	80 80       	ld	r8, Z
    97aa:	80 80       	ld	r8, Z
    97ac:	80 80       	ld	r8, Z
    97ae:	80 80       	ld	r8, Z
    97b0:	80 80       	ld	r8, Z
    97b2:	80 80       	ld	r8, Z
    97b4:	80 80       	ld	r8, Z
    97b6:	80 80       	ld	r8, Z
    97b8:	80 80       	ld	r8, Z
    97ba:	80 80       	ld	r8, Z
    97bc:	80 80       	ld	r8, Z
    97be:	80 80       	ld	r8, Z
    97c0:	80 80       	ld	r8, Z
    97c2:	80 80       	ld	r8, Z
    97c4:	80 80       	ld	r8, Z
    97c6:	80 80       	ld	r8, Z
    97c8:	80 80       	ld	r8, Z
    97ca:	80 80       	ld	r8, Z
    97cc:	80 80       	ld	r8, Z
    97ce:	80 80       	ld	r8, Z
    97d0:	80 80       	ld	r8, Z
    97d2:	80 80       	ld	r8, Z
    97d4:	80 80       	ld	r8, Z
    97d6:	80 80       	ld	r8, Z
    97d8:	80 80       	ld	r8, Z
    97da:	80 80       	ld	r8, Z
    97dc:	80 80       	ld	r8, Z
    97de:	80 80       	ld	r8, Z
    97e0:	80 80       	ld	r8, Z
    97e2:	80 80       	ld	r8, Z
    97e4:	80 80       	ld	r8, Z
    97e6:	80 80       	ld	r8, Z
    97e8:	80 80       	ld	r8, Z
    97ea:	80 80       	ld	r8, Z
    97ec:	80 80       	ld	r8, Z
    97ee:	80 80       	ld	r8, Z
    97f0:	80 80       	ld	r8, Z
    97f2:	80 80       	ld	r8, Z
    97f4:	80 87       	std	Z+8, r24	; 0x08
    97f6:	91 9d       	mul	r25, r1
    97f8:	ac c4       	rjmp	.+2392   	; 0xa152 <printtileint+0x192>
    97fa:	cb d4       	rcall	.+2454   	; 0xa192 <printtileint+0x1d2>
    97fc:	dd f2       	brhs	.-74     	; 0x97b4 <waves+0x9b4>
    97fe:	fa fa       	.word	0xfafa	; ????

00009800 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    9800:	2f 92       	push	r2
    9802:	3f 92       	push	r3
    9804:	4f 92       	push	r4
    9806:	5f 92       	push	r5
    9808:	6f 92       	push	r6
    980a:	7f 92       	push	r7
    980c:	8f 92       	push	r8
    980e:	9f 92       	push	r9
    9810:	af 92       	push	r10
    9812:	bf 92       	push	r11
    9814:	cf 92       	push	r12
    9816:	df 92       	push	r13
    9818:	ef 92       	push	r14
    981a:	ff 92       	push	r15
    981c:	0f 93       	push	r16
    981e:	1f 93       	push	r17
    9820:	cf 93       	push	r28
    9822:	df 93       	push	r29
    9824:	00 d0       	rcall	.+0      	; 0x9826 <ProcessSprites+0x26>
    9826:	00 d0       	rcall	.+0      	; 0x9828 <ProcessSprites+0x28>
    9828:	00 d0       	rcall	.+0      	; 0x982a <ProcessSprites+0x2a>
    982a:	cd b7       	in	r28, 0x3d	; 61
    982c:	de b7       	in	r29, 0x3e	; 62
    982e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    9832:	88 23       	and	r24, r24
    9834:	09 f4       	brne	.+2      	; 0x9838 <ProcessSprites+0x38>
    9836:	f9 c0       	rjmp	.+498    	; 0x9a2a <ProcessSprites+0x22a>
    9838:	80 91 51 08 	lds	r24, 0x0851	; 0x800851 <user_ram_tiles_c_tmp>
    983c:	80 93 50 08 	sts	0x0850, r24	; 0x800850 <user_ram_tiles_c>
    9840:	80 93 4f 08 	sts	0x084F, r24	; 0x80084f <free_tile_index>
    9844:	06 e0       	ldi	r16, 0x06	; 6
    9846:	11 e0       	ldi	r17, 0x01	; 1
    9848:	f8 01       	movw	r30, r16
    984a:	f3 81       	ldd	r31, Z+3	; 0x03
    984c:	fb 83       	std	Y+3, r31	; 0x03
    984e:	f2 ff       	sbrs	r31, 2
    9850:	20 c0       	rjmp	.+64     	; 0x9892 <ProcessSprites+0x92>
    9852:	0c 5f       	subi	r16, 0xFC	; 252
    9854:	1f 4f       	sbci	r17, 0xFF	; 255
    9856:	21 e0       	ldi	r18, 0x01	; 1
    9858:	0e 33       	cpi	r16, 0x3E	; 62
    985a:	12 07       	cpc	r17, r18
    985c:	a9 f7       	brne	.-22     	; 0x9848 <ProcessSprites+0x48>
    985e:	26 96       	adiw	r28, 0x06	; 6
    9860:	0f b6       	in	r0, 0x3f	; 63
    9862:	f8 94       	cli
    9864:	de bf       	out	0x3e, r29	; 62
    9866:	0f be       	out	0x3f, r0	; 63
    9868:	cd bf       	out	0x3d, r28	; 61
    986a:	df 91       	pop	r29
    986c:	cf 91       	pop	r28
    986e:	1f 91       	pop	r17
    9870:	0f 91       	pop	r16
    9872:	ff 90       	pop	r15
    9874:	ef 90       	pop	r14
    9876:	df 90       	pop	r13
    9878:	cf 90       	pop	r12
    987a:	bf 90       	pop	r11
    987c:	af 90       	pop	r10
    987e:	9f 90       	pop	r9
    9880:	8f 90       	pop	r8
    9882:	7f 90       	pop	r7
    9884:	6f 90       	pop	r6
    9886:	5f 90       	pop	r5
    9888:	4f 90       	pop	r4
    988a:	3f 90       	pop	r3
    988c:	2f 90       	pop	r2
    988e:	0c 94 05 3f 	jmp	0x7e0a	; 0x7e0a <RestoreBackground>
    9892:	f8 01       	movw	r30, r16
    9894:	51 81       	ldd	r21, Z+1	; 0x01
    9896:	40 81       	ld	r20, Z
    9898:	20 91 60 08 	lds	r18, 0x0860	; 0x800860 <screen_scrollX>
    989c:	24 0f       	add	r18, r20
    989e:	30 91 61 08 	lds	r19, 0x0861	; 0x800861 <screen_scrollY>
    98a2:	85 2f       	mov	r24, r21
    98a4:	90 e0       	ldi	r25, 0x00	; 0
    98a6:	83 0f       	add	r24, r19
    98a8:	91 1d       	adc	r25, r1
    98aa:	30 91 62 08 	lds	r19, 0x0862	; 0x800862 <screen_scrollHeight>
    98ae:	33 0f       	add	r19, r19
    98b0:	33 0f       	add	r19, r19
    98b2:	33 0f       	add	r19, r19
    98b4:	31 50       	subi	r19, 0x01	; 1
    98b6:	35 17       	cp	r19, r21
    98b8:	08 f4       	brcc	.+2      	; 0x98bc <ProcessSprites+0xbc>
    98ba:	9a 95       	dec	r25
    98bc:	32 2e       	mov	r3, r18
    98be:	36 94       	lsr	r3
    98c0:	36 94       	lsr	r3
    98c2:	36 94       	lsr	r3
    98c4:	27 70       	andi	r18, 0x07	; 7
    98c6:	19 f0       	breq	.+6      	; 0x98ce <ProcessSprites+0xce>
    98c8:	f2 e0       	ldi	r31, 0x02	; 2
    98ca:	f9 83       	std	Y+1, r31	; 0x01
    98cc:	02 c0       	rjmp	.+4      	; 0x98d2 <ProcessSprites+0xd2>
    98ce:	31 e0       	ldi	r19, 0x01	; 1
    98d0:	39 83       	std	Y+1, r19	; 0x01
    98d2:	bc 01       	movw	r22, r24
    98d4:	e3 e0       	ldi	r30, 0x03	; 3
    98d6:	76 95       	lsr	r23
    98d8:	67 95       	ror	r22
    98da:	ea 95       	dec	r30
    98dc:	e1 f7       	brne	.-8      	; 0x98d6 <ProcessSprites+0xd6>
    98de:	26 2e       	mov	r2, r22
    98e0:	87 70       	andi	r24, 0x07	; 7
    98e2:	19 f0       	breq	.+6      	; 0x98ea <ProcessSprites+0xea>
    98e4:	62 e0       	ldi	r22, 0x02	; 2
    98e6:	6a 83       	std	Y+2, r22	; 0x02
    98e8:	02 c0       	rjmp	.+4      	; 0x98ee <ProcessSprites+0xee>
    98ea:	71 e0       	ldi	r23, 0x01	; 1
    98ec:	7a 83       	std	Y+2, r23	; 0x02
    98ee:	68 2e       	mov	r6, r24
    98f0:	71 2c       	mov	r7, r1
    98f2:	76 2c       	mov	r7, r6
    98f4:	66 24       	eor	r6, r6
    98f6:	62 0e       	add	r6, r18
    98f8:	71 1c       	adc	r7, r1
    98fa:	fb 81       	ldd	r31, Y+3	; 0x03
    98fc:	ef 2f       	mov	r30, r31
    98fe:	f0 e0       	ldi	r31, 0x00	; 0
    9900:	7e 2f       	mov	r23, r30
    9902:	66 27       	eor	r22, r22
    9904:	f8 01       	movw	r30, r16
    9906:	92 81       	ldd	r25, Z+2	; 0x02
    9908:	69 0f       	add	r22, r25
    990a:	71 1d       	adc	r23, r1
    990c:	7e 83       	std	Y+6, r23	; 0x06
    990e:	6d 83       	std	Y+5, r22	; 0x05
    9910:	c1 2c       	mov	r12, r1
    9912:	d1 2c       	mov	r13, r1
    9914:	97 e0       	ldi	r25, 0x07	; 7
    9916:	95 0f       	add	r25, r21
    9918:	98 1b       	sub	r25, r24
    991a:	9b 83       	std	Y+3, r25	; 0x03
    991c:	87 e0       	ldi	r24, 0x07	; 7
    991e:	84 0f       	add	r24, r20
    9920:	82 1b       	sub	r24, r18
    9922:	8c 83       	std	Y+4, r24	; 0x04
    9924:	8c 2d       	mov	r24, r12
    9926:	90 91 62 08 	lds	r25, 0x0862	; 0x800862 <screen_scrollHeight>
    992a:	91 11       	cpse	r25, r1
    992c:	07 c0       	rjmp	.+14     	; 0x993c <ProcessSprites+0x13c>
    992e:	ff ef       	ldi	r31, 0xFF	; 255
    9930:	cf 1a       	sub	r12, r31
    9932:	df 0a       	sbc	r13, r31
    9934:	2a 81       	ldd	r18, Y+2	; 0x02
    9936:	c2 16       	cp	r12, r18
    9938:	a8 f3       	brcs	.-22     	; 0x9924 <ProcessSprites+0x124>
    993a:	8b cf       	rjmp	.-234    	; 0x9852 <ProcessSprites+0x52>
    993c:	29 2f       	mov	r18, r25
    993e:	22 0f       	add	r18, r18
    9940:	22 0f       	add	r18, r18
    9942:	22 0f       	add	r18, r18
    9944:	21 50       	subi	r18, 0x01	; 1
    9946:	3b 81       	ldd	r19, Y+3	; 0x03
    9948:	48 e0       	ldi	r20, 0x08	; 8
    994a:	c4 9e       	mul	r12, r20
    994c:	30 0d       	add	r19, r0
    994e:	11 24       	eor	r1, r1
    9950:	32 17       	cp	r19, r18
    9952:	68 f7       	brcc	.-38     	; 0x992e <ProcessSprites+0x12e>
    9954:	82 0d       	add	r24, r2
    9956:	89 17       	cp	r24, r25
    9958:	10 f0       	brcs	.+4      	; 0x995e <ProcessSprites+0x15e>
    995a:	89 1b       	sub	r24, r25
    995c:	fc cf       	rjmp	.-8      	; 0x9956 <ProcessSprites+0x156>
    995e:	e8 2e       	mov	r14, r24
    9960:	e6 94       	lsr	r14
    9962:	e6 94       	lsr	r14
    9964:	e6 94       	lsr	r14
    9966:	f1 2c       	mov	r15, r1
    9968:	fe 2c       	mov	r15, r14
    996a:	ee 24       	eor	r14, r14
    996c:	87 70       	andi	r24, 0x07	; 7
    996e:	e8 0e       	add	r14, r24
    9970:	f1 1c       	adc	r15, r1
    9972:	9c 2c       	mov	r9, r12
    9974:	88 24       	eor	r8, r8
    9976:	41 2c       	mov	r4, r1
    9978:	8c 81       	ldd	r24, Y+4	; 0x04
    997a:	68 e0       	ldi	r22, 0x08	; 8
    997c:	46 9e       	mul	r4, r22
    997e:	80 0d       	add	r24, r0
    9980:	11 24       	eor	r1, r1
    9982:	87 3e       	cpi	r24, 0xE7	; 231
    9984:	08 f0       	brcs	.+2      	; 0x9988 <ProcessSprites+0x188>
    9986:	49 c0       	rjmp	.+146    	; 0x9a1a <ProcessSprites+0x21a>
    9988:	83 2d       	mov	r24, r3
    998a:	84 0d       	add	r24, r4
    998c:	88 0f       	add	r24, r24
    998e:	88 0f       	add	r24, r24
    9990:	88 0f       	add	r24, r24
    9992:	f7 01       	movw	r30, r14
    9994:	e8 0f       	add	r30, r24
    9996:	f1 1d       	adc	r31, r1
    9998:	9f 01       	movw	r18, r30
    999a:	20 50       	subi	r18, 0x00	; 0
    999c:	35 4f       	sbci	r19, 0xF5	; 245
    999e:	59 01       	movw	r10, r18
    99a0:	f9 01       	movw	r30, r18
    99a2:	50 80       	ld	r5, Z
    99a4:	80 91 50 08 	lds	r24, 0x0850	; 0x800850 <user_ram_tiles_c>
    99a8:	fa e1       	ldi	r31, 0x1A	; 26
    99aa:	f5 15       	cp	r31, r5
    99ac:	10 f0       	brcs	.+4      	; 0x99b2 <ProcessSprites+0x1b2>
    99ae:	58 16       	cp	r5, r24
    99b0:	48 f5       	brcc	.+82     	; 0x9a04 <ProcessSprites+0x204>
    99b2:	60 91 4f 08 	lds	r22, 0x084F	; 0x80084f <free_tile_index>
    99b6:	6b 31       	cpi	r22, 0x1B	; 27
    99b8:	10 f5       	brcc	.+68     	; 0x99fe <ProcessSprites+0x1fe>
    99ba:	2a e1       	ldi	r18, 0x1A	; 26
    99bc:	25 15       	cp	r18, r5
    99be:	28 f4       	brcc	.+10     	; 0x99ca <ProcessSprites+0x1ca>
    99c0:	85 ee       	ldi	r24, 0xE5	; 229
    99c2:	85 0d       	add	r24, r5
    99c4:	0e 94 e9 3d 	call	0x7bd2	; 0x7bd2 <CopyFlashTile>
    99c8:	05 c0       	rjmp	.+10     	; 0x99d4 <ProcessSprites+0x1d4>
    99ca:	58 16       	cp	r5, r24
    99cc:	18 f4       	brcc	.+6      	; 0x99d4 <ProcessSprites+0x1d4>
    99ce:	85 2d       	mov	r24, r5
    99d0:	0e 94 78 3e 	call	0x7cf0	; 0x7cf0 <CopyRamTile>
    99d4:	80 91 4f 08 	lds	r24, 0x084F	; 0x80084f <free_tile_index>
    99d8:	e8 2f       	mov	r30, r24
    99da:	f0 e0       	ldi	r31, 0x00	; 0
    99dc:	9f 01       	movw	r18, r30
    99de:	22 0f       	add	r18, r18
    99e0:	33 1f       	adc	r19, r19
    99e2:	e2 0f       	add	r30, r18
    99e4:	f3 1f       	adc	r31, r19
    99e6:	e2 50       	subi	r30, 0x02	; 2
    99e8:	f8 4f       	sbci	r31, 0xF8	; 248
    99ea:	b1 82       	std	Z+1, r11	; 0x01
    99ec:	a0 82       	st	Z, r10
    99ee:	52 82       	std	Z+2, r5	; 0x02
    99f0:	f5 01       	movw	r30, r10
    99f2:	80 83       	st	Z, r24
    99f4:	91 e0       	ldi	r25, 0x01	; 1
    99f6:	98 0f       	add	r25, r24
    99f8:	90 93 4f 08 	sts	0x084F, r25	; 0x80084f <free_tile_index>
    99fc:	58 2e       	mov	r5, r24
    99fe:	fa e1       	ldi	r31, 0x1A	; 26
    9a00:	f5 15       	cp	r31, r5
    9a02:	58 f0       	brcs	.+22     	; 0x9a1a <ProcessSprites+0x21a>
    9a04:	80 91 50 08 	lds	r24, 0x0850	; 0x800850 <user_ram_tiles_c>
    9a08:	58 16       	cp	r5, r24
    9a0a:	38 f0       	brcs	.+14     	; 0x9a1a <ProcessSprites+0x21a>
    9a0c:	93 01       	movw	r18, r6
    9a0e:	a4 01       	movw	r20, r8
    9a10:	6d 81       	ldd	r22, Y+5	; 0x05
    9a12:	7e 81       	ldd	r23, Y+6	; 0x06
    9a14:	85 2d       	mov	r24, r5
    9a16:	0e 94 18 3f 	call	0x7e30	; 0x7e30 <BlitSpritePart>
    9a1a:	43 94       	inc	r4
    9a1c:	2f ef       	ldi	r18, 0xFF	; 255
    9a1e:	82 1a       	sub	r8, r18
    9a20:	92 0a       	sbc	r9, r18
    9a22:	39 81       	ldd	r19, Y+1	; 0x01
    9a24:	43 12       	cpse	r4, r19
    9a26:	a8 cf       	rjmp	.-176    	; 0x9978 <ProcessSprites+0x178>
    9a28:	82 cf       	rjmp	.-252    	; 0x992e <ProcessSprites+0x12e>
    9a2a:	26 96       	adiw	r28, 0x06	; 6
    9a2c:	0f b6       	in	r0, 0x3f	; 63
    9a2e:	f8 94       	cli
    9a30:	de bf       	out	0x3e, r29	; 62
    9a32:	0f be       	out	0x3f, r0	; 63
    9a34:	cd bf       	out	0x3d, r28	; 61
    9a36:	df 91       	pop	r29
    9a38:	cf 91       	pop	r28
    9a3a:	1f 91       	pop	r17
    9a3c:	0f 91       	pop	r16
    9a3e:	ff 90       	pop	r15
    9a40:	ef 90       	pop	r14
    9a42:	df 90       	pop	r13
    9a44:	cf 90       	pop	r12
    9a46:	bf 90       	pop	r11
    9a48:	af 90       	pop	r10
    9a4a:	9f 90       	pop	r9
    9a4c:	8f 90       	pop	r8
    9a4e:	7f 90       	pop	r7
    9a50:	6f 90       	pop	r6
    9a52:	5f 90       	pop	r5
    9a54:	4f 90       	pop	r4
    9a56:	3f 90       	pop	r3
    9a58:	2f 90       	pop	r2
    9a5a:	08 95       	ret

00009a5c <Scroll>:
    9a5c:	90 91 62 08 	lds	r25, 0x0862	; 0x800862 <screen_scrollHeight>
    9a60:	29 2f       	mov	r18, r25
    9a62:	22 0f       	add	r18, r18
    9a64:	22 0f       	add	r18, r18
    9a66:	22 0f       	add	r18, r18
    9a68:	90 91 61 08 	lds	r25, 0x0861	; 0x800861 <screen_scrollY>
    9a6c:	96 0f       	add	r25, r22
    9a6e:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <screen_scrollY>
    9a72:	30 91 60 08 	lds	r19, 0x0860	; 0x800860 <screen_scrollX>
    9a76:	83 0f       	add	r24, r19
    9a78:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <screen_scrollX>
    9a7c:	92 17       	cp	r25, r18
    9a7e:	38 f0       	brcs	.+14     	; 0x9a8e <Scroll+0x32>
    9a80:	67 fd       	sbrc	r22, 7
    9a82:	02 c0       	rjmp	.+4      	; 0x9a88 <Scroll+0x2c>
    9a84:	92 1b       	sub	r25, r18
    9a86:	01 c0       	rjmp	.+2      	; 0x9a8a <Scroll+0x2e>
    9a88:	92 0f       	add	r25, r18
    9a8a:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <screen_scrollY>
    9a8e:	08 95       	ret

00009a90 <MapSprite2>:
    9a90:	df 92       	push	r13
    9a92:	ef 92       	push	r14
    9a94:	ff 92       	push	r15
    9a96:	0f 93       	push	r16
    9a98:	1f 93       	push	r17
    9a9a:	cf 93       	push	r28
    9a9c:	df 93       	push	r29
    9a9e:	fb 01       	movw	r30, r22
    9aa0:	14 91       	lpm	r17, Z
    9aa2:	31 96       	adiw	r30, 0x01	; 1
    9aa4:	54 91       	lpm	r21, Z
    9aa6:	2f ef       	ldi	r18, 0xFF	; 255
    9aa8:	21 0f       	add	r18, r17
    9aaa:	e4 2f       	mov	r30, r20
    9aac:	e1 70       	andi	r30, 0x01	; 1
    9aae:	40 ff       	sbrs	r20, 0
    9ab0:	03 c0       	rjmp	.+6      	; 0x9ab8 <MapSprite2+0x28>
    9ab2:	92 2f       	mov	r25, r18
    9ab4:	df ef       	ldi	r29, 0xFF	; 255
    9ab6:	02 c0       	rjmp	.+4      	; 0x9abc <MapSprite2+0x2c>
    9ab8:	d1 e0       	ldi	r29, 0x01	; 1
    9aba:	90 e0       	ldi	r25, 0x00	; 0
    9abc:	41 ff       	sbrs	r20, 1
    9abe:	04 c0       	rjmp	.+8      	; 0x9ac8 <MapSprite2+0x38>
    9ac0:	3f ef       	ldi	r19, 0xFF	; 255
    9ac2:	35 0f       	add	r19, r21
    9ac4:	0f ef       	ldi	r16, 0xFF	; 255
    9ac6:	02 c0       	rjmp	.+4      	; 0x9acc <MapSprite2+0x3c>
    9ac8:	01 e0       	ldi	r16, 0x01	; 1
    9aca:	30 e0       	ldi	r19, 0x00	; 0
    9acc:	ee 23       	and	r30, r30
    9ace:	11 f0       	breq	.+4      	; 0x9ad4 <MapSprite2+0x44>
    9ad0:	e2 2e       	mov	r14, r18
    9ad2:	01 c0       	rjmp	.+2      	; 0x9ad6 <MapSprite2+0x46>
    9ad4:	e1 2c       	mov	r14, r1
    9ad6:	c0 e0       	ldi	r28, 0x00	; 0
    9ad8:	c5 17       	cp	r28, r21
    9ada:	f9 f0       	breq	.+62     	; 0x9b1a <MapSprite2+0x8a>
    9adc:	31 03       	mulsu	r19, r17
    9ade:	d0 01       	movw	r26, r0
    9ae0:	11 24       	eor	r1, r1
    9ae2:	d8 2e       	mov	r13, r24
    9ae4:	d1 0e       	add	r13, r17
    9ae6:	8d 15       	cp	r24, r13
    9ae8:	a1 f0       	breq	.+40     	; 0x9b12 <MapSprite2+0x82>
    9aea:	fd 01       	movw	r30, r26
    9aec:	e9 0f       	add	r30, r25
    9aee:	f1 1d       	adc	r31, r1
    9af0:	97 fd       	sbrc	r25, 7
    9af2:	fa 95       	dec	r31
    9af4:	32 96       	adiw	r30, 0x02	; 2
    9af6:	e6 0f       	add	r30, r22
    9af8:	f7 1f       	adc	r31, r23
    9afa:	f4 90       	lpm	r15, Z
    9afc:	24 e0       	ldi	r18, 0x04	; 4
    9afe:	82 9f       	mul	r24, r18
    9b00:	f0 01       	movw	r30, r0
    9b02:	11 24       	eor	r1, r1
    9b04:	ea 5f       	subi	r30, 0xFA	; 250
    9b06:	fe 4f       	sbci	r31, 0xFE	; 254
    9b08:	f2 82       	std	Z+2, r15	; 0x02
    9b0a:	8f 5f       	subi	r24, 0xFF	; 255
    9b0c:	43 83       	std	Z+3, r20	; 0x03
    9b0e:	9d 0f       	add	r25, r29
    9b10:	ea cf       	rjmp	.-44     	; 0x9ae6 <MapSprite2+0x56>
    9b12:	30 0f       	add	r19, r16
    9b14:	cf 5f       	subi	r28, 0xFF	; 255
    9b16:	9e 2d       	mov	r25, r14
    9b18:	df cf       	rjmp	.-66     	; 0x9ad8 <MapSprite2+0x48>
    9b1a:	df 91       	pop	r29
    9b1c:	cf 91       	pop	r28
    9b1e:	1f 91       	pop	r17
    9b20:	0f 91       	pop	r16
    9b22:	ff 90       	pop	r15
    9b24:	ef 90       	pop	r14
    9b26:	df 90       	pop	r13
    9b28:	08 95       	ret

00009b2a <MoveSprite>:
    9b2a:	0f 93       	push	r16
    9b2c:	30 e0       	ldi	r19, 0x00	; 0
    9b2e:	30 17       	cp	r19, r16
    9b30:	99 f0       	breq	.+38     	; 0x9b58 <MoveSprite+0x2e>
    9b32:	58 2f       	mov	r21, r24
    9b34:	52 0f       	add	r21, r18
    9b36:	96 2f       	mov	r25, r22
    9b38:	85 17       	cp	r24, r21
    9b3a:	59 f0       	breq	.+22     	; 0x9b52 <MoveSprite+0x28>
    9b3c:	74 e0       	ldi	r23, 0x04	; 4
    9b3e:	87 9f       	mul	r24, r23
    9b40:	f0 01       	movw	r30, r0
    9b42:	11 24       	eor	r1, r1
    9b44:	ea 5f       	subi	r30, 0xFA	; 250
    9b46:	fe 4f       	sbci	r31, 0xFE	; 254
    9b48:	90 83       	st	Z, r25
    9b4a:	41 83       	std	Z+1, r20	; 0x01
    9b4c:	8f 5f       	subi	r24, 0xFF	; 255
    9b4e:	98 5f       	subi	r25, 0xF8	; 248
    9b50:	f3 cf       	rjmp	.-26     	; 0x9b38 <MoveSprite+0xe>
    9b52:	3f 5f       	subi	r19, 0xFF	; 255
    9b54:	48 5f       	subi	r20, 0xF8	; 248
    9b56:	eb cf       	rjmp	.-42     	; 0x9b2e <MoveSprite+0x4>
    9b58:	0f 91       	pop	r16
    9b5a:	08 95       	ret

00009b5c <InitializeVideoMode>:
    9b5c:	e6 e0       	ldi	r30, 0x06	; 6
    9b5e:	f1 e0       	ldi	r31, 0x01	; 1
    9b60:	80 ee       	ldi	r24, 0xE0	; 224
    9b62:	80 83       	st	Z, r24
    9b64:	81 83       	std	Z+1, r24	; 0x01
    9b66:	34 96       	adiw	r30, 0x04	; 4
    9b68:	91 e0       	ldi	r25, 0x01	; 1
    9b6a:	ee 33       	cpi	r30, 0x3E	; 62
    9b6c:	f9 07       	cpc	r31, r25
    9b6e:	c9 f7       	brne	.-14     	; 0x9b62 <InitializeVideoMode+0x6>
    9b70:	80 e2       	ldi	r24, 0x20	; 32
    9b72:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <screen_scrollHeight>
    9b76:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <Screen>
    9b7a:	10 92 4f 08 	sts	0x084F, r1	; 0x80084f <free_tile_index>
    9b7e:	10 92 51 08 	sts	0x0851, r1	; 0x800851 <user_ram_tiles_c_tmp>
    9b82:	08 95       	ret

00009b84 <DrawMap>:
    9b84:	7f 92       	push	r7
    9b86:	8f 92       	push	r8
    9b88:	9f 92       	push	r9
    9b8a:	af 92       	push	r10
    9b8c:	bf 92       	push	r11
    9b8e:	cf 92       	push	r12
    9b90:	df 92       	push	r13
    9b92:	ef 92       	push	r14
    9b94:	ff 92       	push	r15
    9b96:	0f 93       	push	r16
    9b98:	1f 93       	push	r17
    9b9a:	cf 93       	push	r28
    9b9c:	df 93       	push	r29
    9b9e:	98 2e       	mov	r9, r24
    9ba0:	86 2e       	mov	r8, r22
    9ba2:	fa 01       	movw	r30, r20
    9ba4:	e4 90       	lpm	r14, Z
    9ba6:	31 96       	adiw	r30, 0x01	; 1
    9ba8:	f4 90       	lpm	r15, Z
    9baa:	ae 2c       	mov	r10, r14
    9bac:	b1 2c       	mov	r11, r1
    9bae:	ea 01       	movw	r28, r20
    9bb0:	22 96       	adiw	r28, 0x02	; 2
    9bb2:	10 e0       	ldi	r17, 0x00	; 0
    9bb4:	1f 15       	cp	r17, r15
    9bb6:	b9 f0       	breq	.+46     	; 0x9be6 <DrawMap+0x62>
    9bb8:	6e 01       	movw	r12, r28
    9bba:	00 e0       	ldi	r16, 0x00	; 0
    9bbc:	71 2e       	mov	r7, r17
    9bbe:	78 0c       	add	r7, r8
    9bc0:	0e 15       	cp	r16, r14
    9bc2:	69 f0       	breq	.+26     	; 0x9bde <DrawMap+0x5a>
    9bc4:	f6 01       	movw	r30, r12
    9bc6:	44 91       	lpm	r20, Z
    9bc8:	50 e0       	ldi	r21, 0x00	; 0
    9bca:	67 2d       	mov	r22, r7
    9bcc:	80 2f       	mov	r24, r16
    9bce:	89 0d       	add	r24, r9
    9bd0:	0e 94 2e 41 	call	0x825c	; 0x825c <SetTile>
    9bd4:	0f 5f       	subi	r16, 0xFF	; 255
    9bd6:	ff ef       	ldi	r31, 0xFF	; 255
    9bd8:	cf 1a       	sub	r12, r31
    9bda:	df 0a       	sbc	r13, r31
    9bdc:	f1 cf       	rjmp	.-30     	; 0x9bc0 <DrawMap+0x3c>
    9bde:	1f 5f       	subi	r17, 0xFF	; 255
    9be0:	ca 0d       	add	r28, r10
    9be2:	db 1d       	adc	r29, r11
    9be4:	e7 cf       	rjmp	.-50     	; 0x9bb4 <DrawMap+0x30>
    9be6:	df 91       	pop	r29
    9be8:	cf 91       	pop	r28
    9bea:	1f 91       	pop	r17
    9bec:	0f 91       	pop	r16
    9bee:	ff 90       	pop	r15
    9bf0:	ef 90       	pop	r14
    9bf2:	df 90       	pop	r13
    9bf4:	cf 90       	pop	r12
    9bf6:	bf 90       	pop	r11
    9bf8:	af 90       	pop	r10
    9bfa:	9f 90       	pop	r9
    9bfc:	8f 90       	pop	r8
    9bfe:	7f 90       	pop	r7
    9c00:	08 95       	ret

00009c02 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    9c02:	0f 93       	push	r16
    9c04:	1f 93       	push	r17
    9c06:	cf 93       	push	r28
    9c08:	df 93       	push	r29
    9c0a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9c0c:	c0 e0       	ldi	r28, 0x00	; 0
    9c0e:	d0 e0       	ldi	r29, 0x00	; 0
    9c10:	c0 17       	cp	r28, r16
    9c12:	d1 07       	cpc	r29, r17
    9c14:	44 f4       	brge	.+16     	; 0x9c26 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    9c16:	0e 94 44 41 	call	0x8288	; 0x8288 <GetVsyncFlag>
    9c1a:	88 23       	and	r24, r24
    9c1c:	e1 f3       	breq	.-8      	; 0x9c16 <WaitVsync+0x14>
		ClearVsyncFlag();		
    9c1e:	0e 94 48 41 	call	0x8290	; 0x8290 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9c22:	21 96       	adiw	r28, 0x01	; 1
    9c24:	f5 cf       	rjmp	.-22     	; 0x9c10 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    9c26:	df 91       	pop	r29
    9c28:	cf 91       	pop	r28
    9c2a:	1f 91       	pop	r17
    9c2c:	0f 91       	pop	r16
    9c2e:	08 95       	ret

00009c30 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    9c30:	83 e1       	ldi	r24, 0x13	; 19
    9c32:	99 e0       	ldi	r25, 0x09	; 9
    9c34:	0e 94 a9 42 	call	0x8552	; 0x8552 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    9c38:	83 e1       	ldi	r24, 0x13	; 19
    9c3a:	91 e0       	ldi	r25, 0x01	; 1
    9c3c:	0e 94 3f 41 	call	0x827e	; 0x827e <SetTileTable>

	/* Draw logo */
	ClearVram();
    9c40:	0e 94 24 41 	call	0x8248	; 0x8248 <ClearVram>
	WaitVsync(15U);
    9c44:	8f e0       	ldi	r24, 0x0F	; 15
    9c46:	90 e0       	ldi	r25, 0x00	; 0
    9c48:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    9c4c:	41 e0       	ldi	r20, 0x01	; 1
    9c4e:	6f ef       	ldi	r22, 0xFF	; 255
    9c50:	80 e0       	ldi	r24, 0x00	; 0
    9c52:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9c56:	4d ef       	ldi	r20, 0xFD	; 253
    9c58:	50 e0       	ldi	r21, 0x00	; 0
    9c5a:	6c e0       	ldi	r22, 0x0C	; 12
    9c5c:	8c e0       	ldi	r24, 0x0C	; 12
    9c5e:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
	WaitVsync(3);
    9c62:	83 e0       	ldi	r24, 0x03	; 3
    9c64:	90 e0       	ldi	r25, 0x00	; 0
    9c66:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    9c6a:	4c ee       	ldi	r20, 0xEC	; 236
    9c6c:	50 e0       	ldi	r21, 0x00	; 0
    9c6e:	6c e0       	ldi	r22, 0x0C	; 12
    9c70:	8c e0       	ldi	r24, 0x0C	; 12
    9c72:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
	WaitVsync(2);
    9c76:	82 e0       	ldi	r24, 0x02	; 2
    9c78:	90 e0       	ldi	r25, 0x00	; 0
    9c7a:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9c7e:	4d ef       	ldi	r20, 0xFD	; 253
    9c80:	50 e0       	ldi	r21, 0x00	; 0
    9c82:	6c e0       	ldi	r22, 0x0C	; 12
    9c84:	8c e0       	ldi	r24, 0x0C	; 12
    9c86:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    9c8a:	81 e4       	ldi	r24, 0x41	; 65
    9c8c:	90 e0       	ldi	r25, 0x00	; 0
    9c8e:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
	ClearVram();
    9c92:	0e 94 24 41 	call	0x8248	; 0x8248 <ClearVram>
	WaitVsync(20U);
    9c96:	84 e1       	ldi	r24, 0x14	; 20
    9c98:	90 e0       	ldi	r25, 0x00	; 0
    9c9a:	0c 94 01 4e 	jmp	0x9c02	; 0x9c02 <WaitVsync>

00009c9e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    9c9e:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <fadeSpeed>
	currFadeFrame=0;
    9ca2:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <currFadeFrame>
	fadeActive=true;
    9ca6:	81 e0       	ldi	r24, 0x01	; 1
    9ca8:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <fadeActive>
		
	if(blocking){
    9cac:	66 23       	and	r22, r22
    9cae:	21 f0       	breq	.+8      	; 0x9cb8 <doFade+0x1a>
		while(fadeActive==true);
    9cb0:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <fadeActive>
    9cb4:	81 11       	cpse	r24, r1
    9cb6:	fc cf       	rjmp	.-8      	; 0x9cb0 <doFade+0x12>
    9cb8:	08 95       	ret

00009cba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    9cba:	81 11       	cpse	r24, r1
    9cbc:	03 c0       	rjmp	.+6      	; 0x9cc4 <FadeIn+0xa>
		DDRC=0xff;
    9cbe:	8f ef       	ldi	r24, 0xFF	; 255
    9cc0:	87 b9       	out	0x07, r24	; 7
		return;
    9cc2:	08 95       	ret
	}
	fadeStep=1;
    9cc4:	91 e0       	ldi	r25, 0x01	; 1
    9cc6:	90 93 26 09 	sts	0x0926, r25	; 0x800926 <fadeStep>
	fadeDir=1;
    9cca:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <fadeDir>
	doFade(speed,blocking);
    9cce:	0c 94 4f 4e 	jmp	0x9c9e	; 0x9c9e <doFade>

00009cd2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    9cd2:	81 11       	cpse	r24, r1
    9cd4:	02 c0       	rjmp	.+4      	; 0x9cda <FadeOut+0x8>
		DDRC=0;
    9cd6:	17 b8       	out	0x07, r1	; 7
		return;
    9cd8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    9cda:	9c e0       	ldi	r25, 0x0C	; 12
    9cdc:	90 93 26 09 	sts	0x0926, r25	; 0x800926 <fadeStep>
	fadeDir=-1;
    9ce0:	9f ef       	ldi	r25, 0xFF	; 255
    9ce2:	90 93 23 09 	sts	0x0923, r25	; 0x800923 <fadeDir>
	doFade(speed,blocking);
    9ce6:	0c 94 4f 4e 	jmp	0x9c9e	; 0x9c9e <doFade>

00009cea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    9cea:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <fadeActive>
    9cee:	88 23       	and	r24, r24
    9cf0:	01 f1       	breq	.+64     	; 0x9d32 <ProcessFading+0x48>
		if(currFadeFrame==0){
    9cf2:	80 91 25 09 	lds	r24, 0x0925	; 0x800925 <currFadeFrame>
    9cf6:	81 11       	cpse	r24, r1
    9cf8:	19 c0       	rjmp	.+50     	; 0x9d2c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    9cfa:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeSpeed>
    9cfe:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    9d02:	e0 91 26 09 	lds	r30, 0x0926	; 0x800926 <fadeStep>
    9d06:	f0 e0       	ldi	r31, 0x00	; 0
    9d08:	e1 52       	subi	r30, 0x21	; 33
    9d0a:	ff 4f       	sbci	r31, 0xFF	; 255
    9d0c:	e4 91       	lpm	r30, Z
    9d0e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    9d10:	90 91 26 09 	lds	r25, 0x0926	; 0x800926 <fadeStep>
    9d14:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <fadeDir>
    9d18:	89 0f       	add	r24, r25
    9d1a:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    9d1e:	88 23       	and	r24, r24
    9d20:	11 f0       	breq	.+4      	; 0x9d26 <ProcessFading+0x3c>
    9d22:	8d 30       	cpi	r24, 0x0D	; 13
    9d24:	31 f4       	brne	.+12     	; 0x9d32 <ProcessFading+0x48>
				fadeActive=false;
    9d26:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <fadeActive>
    9d2a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    9d2c:	81 50       	subi	r24, 0x01	; 1
    9d2e:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <currFadeFrame>
    9d32:	08 95       	ret

00009d34 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    9d34:	0e 94 75 4e 	call	0x9cea	; 0x9cea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    9d38:	0c 94 00 4c 	jmp	0x9800	; 0x9800 <ProcessSprites>

00009d3c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    9d3c:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    9d40:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    9d44:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    9d48:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    9d4c:	01 96       	adiw	r24, 0x01	; 1
    9d4e:	a1 1d       	adc	r26, r1
    9d50:	b1 1d       	adc	r27, r1
    9d52:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <time>
    9d56:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <time+0x1>
    9d5a:	a0 93 b5 09 	sts	0x09B5, r26	; 0x8009b5 <time+0x2>
    9d5e:	b0 93 b6 09 	sts	0x09B6, r27	; 0x8009b6 <time+0x3>
    9d62:	08 95       	ret

00009d64 <drawplayer>:
return;
  
}

void drawplayer()
{
    9d64:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,0);
    9d66:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9d6a:	82 37       	cpi	r24, 0x72	; 114
    9d6c:	49 f4       	brne	.+18     	; 0x9d80 <drawplayer+0x1c>
    9d6e:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9d72:	81 11       	cpse	r24, r1
    9d74:	05 c0       	rjmp	.+10     	; 0x9d80 <drawplayer+0x1c>
    9d76:	40 e0       	ldi	r20, 0x00	; 0
    9d78:	63 e2       	ldi	r22, 0x23	; 35
    9d7a:	77 e4       	ldi	r23, 0x47	; 71
    9d7c:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,1);
    9d80:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9d84:	8c 36       	cpi	r24, 0x6C	; 108
    9d86:	49 f4       	brne	.+18     	; 0x9d9a <drawplayer+0x36>
    9d88:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9d8c:	81 11       	cpse	r24, r1
    9d8e:	05 c0       	rjmp	.+10     	; 0x9d9a <drawplayer+0x36>
    9d90:	41 e0       	ldi	r20, 0x01	; 1
    9d92:	63 e2       	ldi	r22, 0x23	; 35
    9d94:	77 e4       	ldi	r23, 0x47	; 71
    9d96:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,0);
    9d9a:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9d9e:	82 37       	cpi	r24, 0x72	; 114
    9da0:	59 f4       	brne	.+22     	; 0x9db8 <drawplayer+0x54>
    9da2:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9da6:	81 50       	subi	r24, 0x01	; 1
    9da8:	88 30       	cpi	r24, 0x08	; 8
    9daa:	30 f4       	brcc	.+12     	; 0x9db8 <drawplayer+0x54>
    9dac:	40 e0       	ldi	r20, 0x00	; 0
    9dae:	63 e2       	ldi	r22, 0x23	; 35
    9db0:	77 e4       	ldi	r23, 0x47	; 71
    9db2:	80 e0       	ldi	r24, 0x00	; 0
    9db4:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,0);    
    9db8:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9dbc:	82 37       	cpi	r24, 0x72	; 114
    9dbe:	59 f4       	brne	.+22     	; 0x9dd6 <drawplayer+0x72>
    9dc0:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9dc4:	89 50       	subi	r24, 0x09	; 9
    9dc6:	88 30       	cpi	r24, 0x08	; 8
    9dc8:	30 f4       	brcc	.+12     	; 0x9dd6 <drawplayer+0x72>
    9dca:	40 e0       	ldi	r20, 0x00	; 0
    9dcc:	6d e1       	ldi	r22, 0x1D	; 29
    9dce:	77 e4       	ldi	r23, 0x47	; 71
    9dd0:	80 e0       	ldi	r24, 0x00	; 0
    9dd2:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,0);  
    9dd6:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9dda:	82 37       	cpi	r24, 0x72	; 114
    9ddc:	59 f4       	brne	.+22     	; 0x9df4 <drawplayer+0x90>
    9dde:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9de2:	81 51       	subi	r24, 0x11	; 17
    9de4:	88 30       	cpi	r24, 0x08	; 8
    9de6:	30 f4       	brcc	.+12     	; 0x9df4 <drawplayer+0x90>
    9de8:	40 e0       	ldi	r20, 0x00	; 0
    9dea:	67 e1       	ldi	r22, 0x17	; 23
    9dec:	77 e4       	ldi	r23, 0x47	; 71
    9dee:	80 e0       	ldi	r24, 0x00	; 0
    9df0:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,1);
    9df4:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9df8:	8c 36       	cpi	r24, 0x6C	; 108
    9dfa:	59 f4       	brne	.+22     	; 0x9e12 <drawplayer+0xae>
    9dfc:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9e00:	81 50       	subi	r24, 0x01	; 1
    9e02:	88 30       	cpi	r24, 0x08	; 8
    9e04:	30 f4       	brcc	.+12     	; 0x9e12 <drawplayer+0xae>
    9e06:	41 e0       	ldi	r20, 0x01	; 1
    9e08:	63 e2       	ldi	r22, 0x23	; 35
    9e0a:	77 e4       	ldi	r23, 0x47	; 71
    9e0c:	80 e0       	ldi	r24, 0x00	; 0
    9e0e:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,1);    
    9e12:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9e16:	8c 36       	cpi	r24, 0x6C	; 108
    9e18:	59 f4       	brne	.+22     	; 0x9e30 <drawplayer+0xcc>
    9e1a:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9e1e:	89 50       	subi	r24, 0x09	; 9
    9e20:	88 30       	cpi	r24, 0x08	; 8
    9e22:	30 f4       	brcc	.+12     	; 0x9e30 <drawplayer+0xcc>
    9e24:	41 e0       	ldi	r20, 0x01	; 1
    9e26:	6d e1       	ldi	r22, 0x1D	; 29
    9e28:	77 e4       	ldi	r23, 0x47	; 71
    9e2a:	80 e0       	ldi	r24, 0x00	; 0
    9e2c:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,1);  
    9e30:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0xe>
    9e34:	8c 36       	cpi	r24, 0x6C	; 108
    9e36:	59 f4       	brne	.+22     	; 0x9e4e <drawplayer+0xea>
    9e38:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1a>
    9e3c:	81 51       	subi	r24, 0x11	; 17
    9e3e:	88 30       	cpi	r24, 0x08	; 8
    9e40:	30 f4       	brcc	.+12     	; 0x9e4e <drawplayer+0xea>
    9e42:	41 e0       	ldi	r20, 0x01	; 1
    9e44:	67 e1       	ldi	r22, 0x17	; 23
    9e46:	77 e4       	ldi	r23, 0x47	; 71
    9e48:	80 e0       	ldi	r24, 0x00	; 0
    9e4a:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    9e4e:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0xa>
    9e52:	88 23       	and	r24, r24
    9e54:	31 f0       	breq	.+12     	; 0x9e62 <drawplayer+0xfe>
{
   MapSprite2(0 ,pac0 ,0);
    9e56:	40 e0       	ldi	r20, 0x00	; 0
    9e58:	63 e2       	ldi	r22, 0x23	; 35
    9e5a:	77 e4       	ldi	r23, 0x47	; 71
    9e5c:	80 e0       	ldi	r24, 0x00	; 0
    9e5e:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    9e62:	40 91 65 09 	lds	r20, 0x0965	; 0x800965 <player+0x2>
    9e66:	45 51       	subi	r20, 0x15	; 21
    9e68:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player>
    9e6c:	67 50       	subi	r22, 0x07	; 7
    9e6e:	02 e0       	ldi	r16, 0x02	; 2
    9e70:	22 e0       	ldi	r18, 0x02	; 2
    9e72:	80 e0       	ldi	r24, 0x00	; 0
    9e74:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>



aniframe++;
    9e78:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <aniframe>
    9e7c:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    9e7e:	85 31       	cpi	r24, 0x15	; 21
    9e80:	18 f4       	brcc	.+6      	; 0x9e88 <drawplayer+0x124>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);



aniframe++;
    9e82:	80 93 21 0a 	sts	0x0A21, r24	; 0x800a21 <aniframe>
    9e86:	02 c0       	rjmp	.+4      	; 0x9e8c <drawplayer+0x128>
if ( aniframe > 20 ) aniframe = 0;     
    9e88:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <aniframe>


}
    9e8c:	0f 91       	pop	r16
    9e8e:	08 95       	ret

00009e90 <drawplayer2>:
void drawplayer2()
{
    9e90:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,0);
    9e92:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9e96:	82 37       	cpi	r24, 0x72	; 114
    9e98:	51 f4       	brne	.+20     	; 0x9eae <drawplayer2+0x1e>
    9e9a:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9e9e:	81 11       	cpse	r24, r1
    9ea0:	06 c0       	rjmp	.+12     	; 0x9eae <drawplayer2+0x1e>
    9ea2:	40 e0       	ldi	r20, 0x00	; 0
    9ea4:	65 e0       	ldi	r22, 0x05	; 5
    9ea6:	77 e4       	ldi	r23, 0x47	; 71
    9ea8:	8a e0       	ldi	r24, 0x0A	; 10
    9eaa:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,1);
    9eae:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9eb2:	8c 36       	cpi	r24, 0x6C	; 108
    9eb4:	51 f4       	brne	.+20     	; 0x9eca <drawplayer2+0x3a>
    9eb6:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9eba:	81 11       	cpse	r24, r1
    9ebc:	06 c0       	rjmp	.+12     	; 0x9eca <drawplayer2+0x3a>
    9ebe:	41 e0       	ldi	r20, 0x01	; 1
    9ec0:	65 e0       	ldi	r22, 0x05	; 5
    9ec2:	77 e4       	ldi	r23, 0x47	; 71
    9ec4:	8a e0       	ldi	r24, 0x0A	; 10
    9ec6:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,0);
    9eca:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9ece:	82 37       	cpi	r24, 0x72	; 114
    9ed0:	59 f4       	brne	.+22     	; 0x9ee8 <drawplayer2+0x58>
    9ed2:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9ed6:	81 50       	subi	r24, 0x01	; 1
    9ed8:	88 30       	cpi	r24, 0x08	; 8
    9eda:	30 f4       	brcc	.+12     	; 0x9ee8 <drawplayer2+0x58>
    9edc:	40 e0       	ldi	r20, 0x00	; 0
    9ede:	65 e0       	ldi	r22, 0x05	; 5
    9ee0:	77 e4       	ldi	r23, 0x47	; 71
    9ee2:	8a e0       	ldi	r24, 0x0A	; 10
    9ee4:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,0);    
    9ee8:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9eec:	82 37       	cpi	r24, 0x72	; 114
    9eee:	59 f4       	brne	.+22     	; 0x9f06 <drawplayer2+0x76>
    9ef0:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9ef4:	89 50       	subi	r24, 0x09	; 9
    9ef6:	88 30       	cpi	r24, 0x08	; 8
    9ef8:	30 f4       	brcc	.+12     	; 0x9f06 <drawplayer2+0x76>
    9efa:	40 e0       	ldi	r20, 0x00	; 0
    9efc:	6f ef       	ldi	r22, 0xFF	; 255
    9efe:	76 e4       	ldi	r23, 0x46	; 70
    9f00:	8a e0       	ldi	r24, 0x0A	; 10
    9f02:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,0);  
    9f06:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9f0a:	82 37       	cpi	r24, 0x72	; 114
    9f0c:	59 f4       	brne	.+22     	; 0x9f24 <drawplayer2+0x94>
    9f0e:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9f12:	81 51       	subi	r24, 0x11	; 17
    9f14:	88 30       	cpi	r24, 0x08	; 8
    9f16:	30 f4       	brcc	.+12     	; 0x9f24 <drawplayer2+0x94>
    9f18:	40 e0       	ldi	r20, 0x00	; 0
    9f1a:	65 e0       	ldi	r22, 0x05	; 5
    9f1c:	77 e4       	ldi	r23, 0x47	; 71
    9f1e:	8a e0       	ldi	r24, 0x0A	; 10
    9f20:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,1);
    9f24:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9f28:	8c 36       	cpi	r24, 0x6C	; 108
    9f2a:	59 f4       	brne	.+22     	; 0x9f42 <drawplayer2+0xb2>
    9f2c:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9f30:	81 50       	subi	r24, 0x01	; 1
    9f32:	88 30       	cpi	r24, 0x08	; 8
    9f34:	30 f4       	brcc	.+12     	; 0x9f42 <drawplayer2+0xb2>
    9f36:	41 e0       	ldi	r20, 0x01	; 1
    9f38:	65 e0       	ldi	r22, 0x05	; 5
    9f3a:	77 e4       	ldi	r23, 0x47	; 71
    9f3c:	8a e0       	ldi	r24, 0x0A	; 10
    9f3e:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,1);    
    9f42:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9f46:	8c 36       	cpi	r24, 0x6C	; 108
    9f48:	59 f4       	brne	.+22     	; 0x9f60 <drawplayer2+0xd0>
    9f4a:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9f4e:	89 50       	subi	r24, 0x09	; 9
    9f50:	88 30       	cpi	r24, 0x08	; 8
    9f52:	30 f4       	brcc	.+12     	; 0x9f60 <drawplayer2+0xd0>
    9f54:	41 e0       	ldi	r20, 0x01	; 1
    9f56:	6f ef       	ldi	r22, 0xFF	; 255
    9f58:	76 e4       	ldi	r23, 0x46	; 70
    9f5a:	8a e0       	ldi	r24, 0x0A	; 10
    9f5c:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,1);  
    9f60:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <player2+0xe>
    9f64:	8c 36       	cpi	r24, 0x6C	; 108
    9f66:	59 f4       	brne	.+22     	; 0x9f7e <drawplayer2+0xee>
    9f68:	80 91 d2 09 	lds	r24, 0x09D2	; 0x8009d2 <player2+0x1a>
    9f6c:	81 51       	subi	r24, 0x11	; 17
    9f6e:	88 30       	cpi	r24, 0x08	; 8
    9f70:	30 f4       	brcc	.+12     	; 0x9f7e <drawplayer2+0xee>
    9f72:	41 e0       	ldi	r20, 0x01	; 1
    9f74:	65 e0       	ldi	r22, 0x05	; 5
    9f76:	77 e4       	ldi	r23, 0x47	; 71
    9f78:	8a e0       	ldi	r24, 0x0A	; 10
    9f7a:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    9f7e:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0xa>
    9f82:	88 23       	and	r24, r24
    9f84:	31 f0       	breq	.+12     	; 0x9f92 <drawplayer2+0x102>
{
   MapSprite2(10 ,run0 ,0);
    9f86:	40 e0       	ldi	r20, 0x00	; 0
    9f88:	65 e0       	ldi	r22, 0x05	; 5
    9f8a:	77 e4       	ldi	r23, 0x47	; 71
    9f8c:	8a e0       	ldi	r24, 0x0A	; 10
    9f8e:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
}
MoveSprite(10 ,player2.x -7 ,player2.y - 21  ,2 ,2);
    9f92:	40 91 ba 09 	lds	r20, 0x09BA	; 0x8009ba <player2+0x2>
    9f96:	45 51       	subi	r20, 0x15	; 21
    9f98:	60 91 b8 09 	lds	r22, 0x09B8	; 0x8009b8 <player2>
    9f9c:	67 50       	subi	r22, 0x07	; 7
    9f9e:	02 e0       	ldi	r16, 0x02	; 2
    9fa0:	22 e0       	ldi	r18, 0x02	; 2
    9fa2:	8a e0       	ldi	r24, 0x0A	; 10
    9fa4:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>



aniframe++;
    9fa8:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <aniframe>
    9fac:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    9fae:	85 31       	cpi	r24, 0x15	; 21
    9fb0:	18 f4       	brcc	.+6      	; 0x9fb8 <drawplayer2+0x128>
}
MoveSprite(10 ,player2.x -7 ,player2.y - 21  ,2 ,2);



aniframe++;
    9fb2:	80 93 21 0a 	sts	0x0A21, r24	; 0x800a21 <aniframe>
    9fb6:	02 c0       	rjmp	.+4      	; 0x9fbc <drawplayer2+0x12c>
if ( aniframe > 20 ) aniframe = 0;     
    9fb8:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <aniframe>


}
    9fbc:	0f 91       	pop	r16
    9fbe:	08 95       	ret

00009fc0 <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    9fc0:	ef 92       	push	r14
    9fc2:	ff 92       	push	r15
    9fc4:	1f 93       	push	r17
    9fc6:	cf 93       	push	r28
    9fc8:	df 93       	push	r29
    9fca:	cd b7       	in	r28, 0x3d	; 61
    9fcc:	de b7       	in	r29, 0x3e	; 62
    9fce:	2a 97       	sbiw	r28, 0x0a	; 10
    9fd0:	0f b6       	in	r0, 0x3f	; 63
    9fd2:	f8 94       	cli
    9fd4:	de bf       	out	0x3e, r29	; 62
    9fd6:	0f be       	out	0x3f, r0	; 63
    9fd8:	cd bf       	out	0x3d, r28	; 61
    9fda:	18 2f       	mov	r17, r24
    9fdc:	fa 01       	movw	r30, r20
    9fde:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    9fe0:	90 e2       	ldi	r25, 0x20	; 32
    9fe2:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    9fe4:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    9fe6:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    9fe8:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    9fea:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    9fec:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    9fee:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    9ff0:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    9ff2:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    9ff4:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    9ff6:	4a e0       	ldi	r20, 0x0A	; 10
    9ff8:	be 01       	movw	r22, r28
    9ffa:	6f 5f       	subi	r22, 0xFF	; 255
    9ffc:	7f 4f       	sbci	r23, 0xFF	; 255
    9ffe:	cf 01       	movw	r24, r30
    a000:	0e 94 1c 67 	call	0xce38	; 0xce38 <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a004:	10 92 20 0a 	sts	0x0A20, r1	; 0x800a20 <lx+0x1>
    a008:	10 92 1f 0a 	sts	0x0A1F, r1	; 0x800a1f <lx>
    a00c:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a010:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a014:	86 30       	cpi	r24, 0x06	; 6
    a016:	91 05       	cpc	r25, r1
    a018:	0c f0       	brlt	.+2      	; 0xa01c <printtileint+0x5c>
    a01a:	f8 c0       	rjmp	.+496    	; 0xa20c <printtileint+0x24c>
    a01c:	8e 15       	cp	r24, r14
    a01e:	9f 05       	cpc	r25, r15
    a020:	0c f0       	brlt	.+2      	; 0xa024 <printtileint+0x64>
    a022:	f4 c0       	rjmp	.+488    	; 0xa20c <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, nb ); 
    a024:	41 ea       	ldi	r20, 0xA1	; 161
    a026:	56 e7       	ldi	r21, 0x76	; 118
    a028:	60 e2       	ldi	r22, 0x20	; 32
    a02a:	81 0f       	add	r24, r17
    a02c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,VRAM_TILES_V, n0 );  
    a030:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a034:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a038:	e1 e0       	ldi	r30, 0x01	; 1
    a03a:	f0 e0       	ldi	r31, 0x00	; 0
    a03c:	ec 0f       	add	r30, r28
    a03e:	fd 1f       	adc	r31, r29
    a040:	e8 0f       	add	r30, r24
    a042:	f9 1f       	adc	r31, r25
    a044:	20 81       	ld	r18, Z
    a046:	20 33       	cpi	r18, 0x30	; 48
    a048:	31 f4       	brne	.+12     	; 0xa056 <printtileint+0x96>
    a04a:	4e e9       	ldi	r20, 0x9E	; 158
    a04c:	56 e7       	ldi	r21, 0x76	; 118
    a04e:	60 e2       	ldi	r22, 0x20	; 32
    a050:	81 0f       	add	r24, r17
    a052:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,VRAM_TILES_V, n1 ); 
    a056:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a05a:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a05e:	e1 e0       	ldi	r30, 0x01	; 1
    a060:	f0 e0       	ldi	r31, 0x00	; 0
    a062:	ec 0f       	add	r30, r28
    a064:	fd 1f       	adc	r31, r29
    a066:	e8 0f       	add	r30, r24
    a068:	f9 1f       	adc	r31, r25
    a06a:	20 81       	ld	r18, Z
    a06c:	21 33       	cpi	r18, 0x31	; 49
    a06e:	31 f4       	brne	.+12     	; 0xa07c <printtileint+0xbc>
    a070:	4b e9       	ldi	r20, 0x9B	; 155
    a072:	56 e7       	ldi	r21, 0x76	; 118
    a074:	60 e2       	ldi	r22, 0x20	; 32
    a076:	81 0f       	add	r24, r17
    a078:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,VRAM_TILES_V, n2 ); 
    a07c:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a080:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a084:	e1 e0       	ldi	r30, 0x01	; 1
    a086:	f0 e0       	ldi	r31, 0x00	; 0
    a088:	ec 0f       	add	r30, r28
    a08a:	fd 1f       	adc	r31, r29
    a08c:	e8 0f       	add	r30, r24
    a08e:	f9 1f       	adc	r31, r25
    a090:	20 81       	ld	r18, Z
    a092:	22 33       	cpi	r18, 0x32	; 50
    a094:	31 f4       	brne	.+12     	; 0xa0a2 <printtileint+0xe2>
    a096:	48 e9       	ldi	r20, 0x98	; 152
    a098:	56 e7       	ldi	r21, 0x76	; 118
    a09a:	60 e2       	ldi	r22, 0x20	; 32
    a09c:	81 0f       	add	r24, r17
    a09e:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,VRAM_TILES_V, n3 ); 
    a0a2:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a0a6:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a0aa:	e1 e0       	ldi	r30, 0x01	; 1
    a0ac:	f0 e0       	ldi	r31, 0x00	; 0
    a0ae:	ec 0f       	add	r30, r28
    a0b0:	fd 1f       	adc	r31, r29
    a0b2:	e8 0f       	add	r30, r24
    a0b4:	f9 1f       	adc	r31, r25
    a0b6:	20 81       	ld	r18, Z
    a0b8:	23 33       	cpi	r18, 0x33	; 51
    a0ba:	31 f4       	brne	.+12     	; 0xa0c8 <printtileint+0x108>
    a0bc:	45 e9       	ldi	r20, 0x95	; 149
    a0be:	56 e7       	ldi	r21, 0x76	; 118
    a0c0:	60 e2       	ldi	r22, 0x20	; 32
    a0c2:	81 0f       	add	r24, r17
    a0c4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,VRAM_TILES_V, n4); 
    a0c8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a0cc:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a0d0:	e1 e0       	ldi	r30, 0x01	; 1
    a0d2:	f0 e0       	ldi	r31, 0x00	; 0
    a0d4:	ec 0f       	add	r30, r28
    a0d6:	fd 1f       	adc	r31, r29
    a0d8:	e8 0f       	add	r30, r24
    a0da:	f9 1f       	adc	r31, r25
    a0dc:	20 81       	ld	r18, Z
    a0de:	24 33       	cpi	r18, 0x34	; 52
    a0e0:	31 f4       	brne	.+12     	; 0xa0ee <printtileint+0x12e>
    a0e2:	42 e9       	ldi	r20, 0x92	; 146
    a0e4:	56 e7       	ldi	r21, 0x76	; 118
    a0e6:	60 e2       	ldi	r22, 0x20	; 32
    a0e8:	81 0f       	add	r24, r17
    a0ea:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,VRAM_TILES_V, n5 ); 
    a0ee:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a0f2:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a0f6:	e1 e0       	ldi	r30, 0x01	; 1
    a0f8:	f0 e0       	ldi	r31, 0x00	; 0
    a0fa:	ec 0f       	add	r30, r28
    a0fc:	fd 1f       	adc	r31, r29
    a0fe:	e8 0f       	add	r30, r24
    a100:	f9 1f       	adc	r31, r25
    a102:	20 81       	ld	r18, Z
    a104:	25 33       	cpi	r18, 0x35	; 53
    a106:	31 f4       	brne	.+12     	; 0xa114 <printtileint+0x154>
    a108:	4f e8       	ldi	r20, 0x8F	; 143
    a10a:	56 e7       	ldi	r21, 0x76	; 118
    a10c:	60 e2       	ldi	r22, 0x20	; 32
    a10e:	81 0f       	add	r24, r17
    a110:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,VRAM_TILES_V, n6 ); 
    a114:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a118:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a11c:	e1 e0       	ldi	r30, 0x01	; 1
    a11e:	f0 e0       	ldi	r31, 0x00	; 0
    a120:	ec 0f       	add	r30, r28
    a122:	fd 1f       	adc	r31, r29
    a124:	e8 0f       	add	r30, r24
    a126:	f9 1f       	adc	r31, r25
    a128:	20 81       	ld	r18, Z
    a12a:	26 33       	cpi	r18, 0x36	; 54
    a12c:	31 f4       	brne	.+12     	; 0xa13a <printtileint+0x17a>
    a12e:	4c e8       	ldi	r20, 0x8C	; 140
    a130:	56 e7       	ldi	r21, 0x76	; 118
    a132:	60 e2       	ldi	r22, 0x20	; 32
    a134:	81 0f       	add	r24, r17
    a136:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,VRAM_TILES_V, n7 ); 
    a13a:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a13e:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a142:	e1 e0       	ldi	r30, 0x01	; 1
    a144:	f0 e0       	ldi	r31, 0x00	; 0
    a146:	ec 0f       	add	r30, r28
    a148:	fd 1f       	adc	r31, r29
    a14a:	e8 0f       	add	r30, r24
    a14c:	f9 1f       	adc	r31, r25
    a14e:	20 81       	ld	r18, Z
    a150:	27 33       	cpi	r18, 0x37	; 55
    a152:	31 f4       	brne	.+12     	; 0xa160 <printtileint+0x1a0>
    a154:	49 e8       	ldi	r20, 0x89	; 137
    a156:	56 e7       	ldi	r21, 0x76	; 118
    a158:	60 e2       	ldi	r22, 0x20	; 32
    a15a:	81 0f       	add	r24, r17
    a15c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,VRAM_TILES_V, n8 ); 
    a160:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a164:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a168:	e1 e0       	ldi	r30, 0x01	; 1
    a16a:	f0 e0       	ldi	r31, 0x00	; 0
    a16c:	ec 0f       	add	r30, r28
    a16e:	fd 1f       	adc	r31, r29
    a170:	e8 0f       	add	r30, r24
    a172:	f9 1f       	adc	r31, r25
    a174:	20 81       	ld	r18, Z
    a176:	28 33       	cpi	r18, 0x38	; 56
    a178:	31 f4       	brne	.+12     	; 0xa186 <printtileint+0x1c6>
    a17a:	46 e8       	ldi	r20, 0x86	; 134
    a17c:	56 e7       	ldi	r21, 0x76	; 118
    a17e:	60 e2       	ldi	r22, 0x20	; 32
    a180:	81 0f       	add	r24, r17
    a182:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,VRAM_TILES_V, n9 );
    a186:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a18a:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a18e:	e1 e0       	ldi	r30, 0x01	; 1
    a190:	f0 e0       	ldi	r31, 0x00	; 0
    a192:	ec 0f       	add	r30, r28
    a194:	fd 1f       	adc	r31, r29
    a196:	e8 0f       	add	r30, r24
    a198:	f9 1f       	adc	r31, r25
    a19a:	20 81       	ld	r18, Z
    a19c:	29 33       	cpi	r18, 0x39	; 57
    a19e:	31 f4       	brne	.+12     	; 0xa1ac <printtileint+0x1ec>
    a1a0:	43 e8       	ldi	r20, 0x83	; 131
    a1a2:	56 e7       	ldi	r21, 0x76	; 118
    a1a4:	60 e2       	ldi	r22, 0x20	; 32
    a1a6:	81 0f       	add	r24, r17
    a1a8:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,VRAM_TILES_V, nm );    
    a1ac:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a1b0:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a1b4:	e1 e0       	ldi	r30, 0x01	; 1
    a1b6:	f0 e0       	ldi	r31, 0x00	; 0
    a1b8:	ec 0f       	add	r30, r28
    a1ba:	fd 1f       	adc	r31, r29
    a1bc:	e8 0f       	add	r30, r24
    a1be:	f9 1f       	adc	r31, r25
    a1c0:	20 81       	ld	r18, Z
    a1c2:	2d 32       	cpi	r18, 0x2D	; 45
    a1c4:	31 f4       	brne	.+12     	; 0xa1d2 <printtileint+0x212>
    a1c6:	40 e8       	ldi	r20, 0x80	; 128
    a1c8:	56 e7       	ldi	r21, 0x76	; 118
    a1ca:	60 e2       	ldi	r22, 0x20	; 32
    a1cc:	81 0f       	add	r24, r17
    a1ce:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    a1d2:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a1d6:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a1da:	e1 e0       	ldi	r30, 0x01	; 1
    a1dc:	f0 e0       	ldi	r31, 0x00	; 0
    a1de:	ec 0f       	add	r30, r28
    a1e0:	fd 1f       	adc	r31, r29
    a1e2:	e8 0f       	add	r30, r24
    a1e4:	f9 1f       	adc	r31, r25
    a1e6:	20 81       	ld	r18, Z
    a1e8:	20 32       	cpi	r18, 0x20	; 32
    a1ea:	31 f4       	brne	.+12     	; 0xa1f8 <printtileint+0x238>
    a1ec:	41 ea       	ldi	r20, 0xA1	; 161
    a1ee:	56 e7       	ldi	r21, 0x76	; 118
    a1f0:	60 e2       	ldi	r22, 0x20	; 32
    a1f2:	81 0f       	add	r24, r17
    a1f4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a1f8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a1fc:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a200:	01 96       	adiw	r24, 0x01	; 1
    a202:	90 93 20 0a 	sts	0x0A20, r25	; 0x800a20 <lx+0x1>
    a206:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <lx>
    a20a:	00 cf       	rjmp	.-512    	; 0xa00c <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    

};
    
}
    a20c:	2a 96       	adiw	r28, 0x0a	; 10
    a20e:	0f b6       	in	r0, 0x3f	; 63
    a210:	f8 94       	cli
    a212:	de bf       	out	0x3e, r29	; 62
    a214:	0f be       	out	0x3f, r0	; 63
    a216:	cd bf       	out	0x3d, r28	; 61
    a218:	df 91       	pop	r29
    a21a:	cf 91       	pop	r28
    a21c:	1f 91       	pop	r17
    a21e:	ff 90       	pop	r15
    a220:	ef 90       	pop	r14
    a222:	08 95       	ret

0000a224 <initlevel>:

void initlevel()
{
    a224:	e4 ee       	ldi	r30, 0xE4	; 228
    a226:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    a228:	80 e0       	ldi	r24, 0x00	; 0
    a22a:	90 e0       	ldi	r25, 0x00	; 0
    a22c:	11 92       	st	Z+, r1
    a22e:	11 92       	st	Z+, r1
    a230:	01 96       	adiw	r24, 0x01	; 1
    a232:	89 31       	cpi	r24, 0x19	; 25
    a234:	91 05       	cpc	r25, r1
    a236:	d1 f7       	brne	.-12     	; 0xa22c <initlevel+0x8>
    a238:	e7 e2       	ldi	r30, 0x27	; 39
    a23a:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    a23c:	80 e0       	ldi	r24, 0x00	; 0
    a23e:	90 e0       	ldi	r25, 0x00	; 0
    a240:	11 82       	std	Z+1, r1	; 0x01
    a242:	10 82       	st	Z, r1
    a244:	12 82       	std	Z+2, r1	; 0x02
    a246:	13 82       	std	Z+3, r1	; 0x03
    a248:	01 96       	adiw	r24, 0x01	; 1
    a24a:	34 96       	adiw	r30, 0x04	; 4
    a24c:	8c 30       	cpi	r24, 0x0C	; 12
    a24e:	91 05       	cpc	r25, r1
    a250:	b9 f7       	brne	.-18     	; 0xa240 <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    a252:	10 92 20 0a 	sts	0x0A20, r1	; 0x800a20 <lx+0x1>
    a256:	10 92 1f 0a 	sts	0x0A1F, r1	; 0x800a1f <lx>
    a25a:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a25e:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a262:	80 97       	sbiw	r24, 0x20	; 32
    a264:	2c f5       	brge	.+74     	; 0xa2b0 <initlevel+0x8c>
     		{
                for (  ly = 0; ly < 28; ly++ )
    a266:	10 92 80 09 	sts	0x0980, r1	; 0x800980 <ly+0x1>
    a26a:	10 92 7f 09 	sts	0x097F, r1	; 0x80097f <ly>
    a26e:	60 91 7f 09 	lds	r22, 0x097F	; 0x80097f <ly>
    a272:	70 91 80 09 	lds	r23, 0x0980	; 0x800980 <ly+0x1>
    a276:	6c 31       	cpi	r22, 0x1C	; 28
    a278:	71 05       	cpc	r23, r1
    a27a:	84 f4       	brge	.+32     	; 0xa29c <initlevel+0x78>
                {
          	         DrawMap2(lx ,ly ,blue);
    a27c:	4c e1       	ldi	r20, 0x1C	; 28
    a27e:	57 e7       	ldi	r21, 0x77	; 119
    a280:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a284:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    a288:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <ly>
    a28c:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <ly+0x1>
    a290:	01 96       	adiw	r24, 0x01	; 1
    a292:	90 93 80 09 	sts	0x0980, r25	; 0x800980 <ly+0x1>
    a296:	80 93 7f 09 	sts	0x097F, r24	; 0x80097f <ly>
    a29a:	e9 cf       	rjmp	.-46     	; 0xa26e <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    a29c:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    a2a0:	90 91 20 0a 	lds	r25, 0x0A20	; 0x800a20 <lx+0x1>
    a2a4:	01 96       	adiw	r24, 0x01	; 1
    a2a6:	90 93 20 0a 	sts	0x0A20, r25	; 0x800a20 <lx+0x1>
    a2aa:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <lx>
    a2ae:	d5 cf       	rjmp	.-86     	; 0xa25a <initlevel+0x36>
                for (  ly = 0; ly < 28; ly++ )
                {
          	         DrawMap2(lx ,ly ,blue);
                }
     		}
}
    a2b0:	08 95       	ret

0000a2b2 <makeBanana2>:
destX++;
if(destX>=32)destX=0; 
}

void makeBanana2(int x, int y,int z)
{
    a2b2:	0f 93       	push	r16
    a2b4:	1f 93       	push	r17
    a2b6:	cf 93       	push	r28
    a2b8:	df 93       	push	r29
	int lx;
	int ly;
	lx = x + Levelx;
    a2ba:	20 91 1d 0a 	lds	r18, 0x0A1D	; 0x800a1d <Levelx>
    a2be:	82 0f       	add	r24, r18
    a2c0:	91 1d       	adc	r25, r1
	ly = y;
	lx = lx >> 4;
	ly = ly >> 4;  
    a2c2:	8b 01       	movw	r16, r22
    a2c4:	44 e0       	ldi	r20, 0x04	; 4
    a2c6:	15 95       	asr	r17
    a2c8:	07 95       	ror	r16
    a2ca:	4a 95       	dec	r20
    a2cc:	e1 f7       	brne	.-8      	; 0xa2c6 <makeBanana2+0x14>
	lx = lx * 2 + destX;
    a2ce:	54 e0       	ldi	r21, 0x04	; 4
    a2d0:	95 95       	asr	r25
    a2d2:	87 95       	ror	r24
    a2d4:	5a 95       	dec	r21
    a2d6:	e1 f7       	brne	.-8      	; 0xa2d0 <makeBanana2+0x1e>
    a2d8:	88 0f       	add	r24, r24
    a2da:	99 1f       	adc	r25, r25
    a2dc:	20 91 df 09 	lds	r18, 0x09DF	; 0x8009df <destX>
    a2e0:	82 0f       	add	r24, r18
    a2e2:	91 1d       	adc	r25, r1
	if (lx >= 32 ) lx = lx - 32;
    a2e4:	80 32       	cpi	r24, 0x20	; 32
    a2e6:	91 05       	cpc	r25, r1
    a2e8:	0c f0       	brlt	.+2      	; 0xa2ec <makeBanana2+0x3a>
    a2ea:	80 97       	sbiw	r24, 0x20	; 32
    lx = lx - 2;
    a2ec:	ec 01       	movw	r28, r24
    a2ee:	22 97       	sbiw	r28, 0x02	; 2
    ly = (ly * 2) - 2;
    a2f0:	01 50       	subi	r16, 0x01	; 1
    a2f2:	11 09       	sbc	r17, r1
    a2f4:	00 0f       	add	r16, r16
    a2f6:	11 1f       	adc	r17, r17
	DrawMap2(  lx ,  ly  ,banana );
    a2f8:	43 e2       	ldi	r20, 0x23	; 35
    a2fa:	57 e7       	ldi	r21, 0x77	; 119
    a2fc:	60 2f       	mov	r22, r16
    a2fe:	8c 2f       	mov	r24, r28
    a300:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bananax = lx;
    a304:	d0 93 e1 09 	sts	0x09E1, r29	; 0x8009e1 <bananax+0x1>
    a308:	c0 93 e0 09 	sts	0x09E0, r28	; 0x8009e0 <bananax>
	bananay = ly;
    a30c:	10 93 83 09 	sts	0x0983, r17	; 0x800983 <bananay+0x1>
    a310:	00 93 82 09 	sts	0x0982, r16	; 0x800982 <bananay>
    UZEMHEX= bananaxs; 
    a314:	26 e8       	ldi	r18, 0x86	; 134
    a316:	39 e0       	ldi	r19, 0x09	; 9
    a318:	29 bb       	out	0x19, r18	; 25
    UZEMCHR = "X";
    a31a:	84 e0       	ldi	r24, 0x04	; 4
    a31c:	91 e0       	ldi	r25, 0x01	; 1
    a31e:	8a bb       	out	0x1a, r24	; 26
    //UZEMHEX='\n';
	bananaxs[banspwncnt] = bananax;
    a320:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <banspwncnt>
    a324:	90 91 9d 08 	lds	r25, 0x089D	; 0x80089d <banspwncnt+0x1>
    a328:	88 0f       	add	r24, r24
    a32a:	99 1f       	adc	r25, r25
    a32c:	fc 01       	movw	r30, r24
    a32e:	ea 57       	subi	r30, 0x7A	; 122
    a330:	f6 4f       	sbci	r31, 0xF6	; 246
    a332:	40 91 e0 09 	lds	r20, 0x09E0	; 0x8009e0 <bananax>
    a336:	50 91 e1 09 	lds	r21, 0x09E1	; 0x8009e1 <bananax+0x1>
    a33a:	51 83       	std	Z+1, r21	; 0x01
    a33c:	40 83       	st	Z, r20
	bananays[banspwncnt] = bananay;
    a33e:	fc 01       	movw	r30, r24
    a340:	e2 56       	subi	r30, 0x62	; 98
    a342:	f6 4f       	sbci	r31, 0xF6	; 246
    a344:	40 91 82 09 	lds	r20, 0x0982	; 0x800982 <bananay>
    a348:	50 91 83 09 	lds	r21, 0x0983	; 0x800983 <bananay+0x1>
    a34c:	51 83       	std	Z+1, r21	; 0x01
    a34e:	40 83       	st	Z, r20
    UZEMHEX= bananaxs; 
    a350:	29 bb       	out	0x19, r18	; 25
    //UZEMHEX='\n';
	banspwncnt = banspwncnt + 1;
    a352:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <banspwncnt>
    a356:	90 91 9d 08 	lds	r25, 0x089D	; 0x80089d <banspwncnt+0x1>
    a35a:	01 96       	adiw	r24, 0x01	; 1
    a35c:	90 93 9d 08 	sts	0x089D, r25	; 0x80089d <banspwncnt+0x1>
    a360:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <banspwncnt>
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
    a364:	df 91       	pop	r29
    a366:	cf 91       	pop	r28
    a368:	1f 91       	pop	r17
    a36a:	0f 91       	pop	r16
    a36c:	08 95       	ret

0000a36e <checkBanana>:
int checkBanana(int x,int y,int z)
{
    a36e:	ef 92       	push	r14
    a370:	ff 92       	push	r15
    a372:	0f 93       	push	r16
    a374:	1f 93       	push	r17
    a376:	cf 93       	push	r28
    a378:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    a37a:	20 91 1d 0a 	lds	r18, 0x0A1D	; 0x800a1d <Levelx>
    a37e:	82 0f       	add	r24, r18
    a380:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    a382:	8b 01       	movw	r16, r22
    a384:	44 e0       	ldi	r20, 0x04	; 4
    a386:	15 95       	asr	r17
    a388:	07 95       	ror	r16
    a38a:	4a 95       	dec	r20
    a38c:	e1 f7       	brne	.-8      	; 0xa386 <checkBanana+0x18>
lx = lx * 2 + destX;
    a38e:	ec 01       	movw	r28, r24
    a390:	54 e0       	ldi	r21, 0x04	; 4
    a392:	d5 95       	asr	r29
    a394:	c7 95       	ror	r28
    a396:	5a 95       	dec	r21
    a398:	e1 f7       	brne	.-8      	; 0xa392 <checkBanana+0x24>
    a39a:	cc 0f       	add	r28, r28
    a39c:	dd 1f       	adc	r29, r29
    a39e:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    a3a2:	c8 0f       	add	r28, r24
    a3a4:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    a3a6:	c0 32       	cpi	r28, 0x20	; 32
    a3a8:	d1 05       	cpc	r29, r1
    a3aa:	0c f0       	brlt	.+2      	; 0xa3ae <checkBanana+0x40>
    a3ac:	a0 97       	sbiw	r28, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
    a3ae:	01 50       	subi	r16, 0x01	; 1
    a3b0:	11 09       	sbc	r17, r1
    a3b2:	00 0f       	add	r16, r16
    a3b4:	11 1f       	adc	r17, r17
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a3b6:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <banspwncnt>
    a3ba:	90 91 9d 08 	lds	r25, 0x089D	; 0x80089d <banspwncnt+0x1>
    a3be:	ee e9       	ldi	r30, 0x9E	; 158
    a3c0:	f9 e0       	ldi	r31, 0x09	; 9
    a3c2:	a6 e8       	ldi	r26, 0x86	; 134
    a3c4:	b9 e0       	ldi	r27, 0x09	; 9
    a3c6:	e1 2c       	mov	r14, r1
    a3c8:	f1 2c       	mov	r15, r1
    a3ca:	e8 16       	cp	r14, r24
    a3cc:	f9 06       	cpc	r15, r25
    a3ce:	0c f0       	brlt	.+2      	; 0xa3d2 <checkBanana+0x64>
    a3d0:	45 c0       	rjmp	.+138    	; 0xa45c <checkBanana+0xee>
{
	if(bananaxs[i] == lx && bananays[i] == ly)
    a3d2:	2d 91       	ld	r18, X+
    a3d4:	3d 91       	ld	r19, X+
    a3d6:	c2 17       	cp	r28, r18
    a3d8:	d3 07       	cpc	r29, r19
    a3da:	d9 f5       	brne	.+118    	; 0xa452 <checkBanana+0xe4>
    a3dc:	20 81       	ld	r18, Z
    a3de:	31 81       	ldd	r19, Z+1	; 0x01
    a3e0:	02 17       	cp	r16, r18
    a3e2:	13 07       	cpc	r17, r19
    a3e4:	b1 f5       	brne	.+108    	; 0xa452 <checkBanana+0xe4>
	{ 
        DrawMap2(  lx    ,  ly,bigblue0 ); 
    a3e6:	4b e8       	ldi	r20, 0x8B	; 139
    a3e8:	57 e7       	ldi	r21, 0x77	; 119
    a3ea:	60 2f       	mov	r22, r16
    a3ec:	8c 2f       	mov	r24, r28
    a3ee:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
	    DrawMap2(  lx    ,  ly + 1,banana2 );
    a3f2:	61 e0       	ldi	r22, 0x01	; 1
    a3f4:	60 0f       	add	r22, r16
    a3f6:	4f e1       	ldi	r20, 0x1F	; 31
    a3f8:	57 e7       	ldi	r21, 0x77	; 119
    a3fa:	8c 2f       	mov	r24, r28
    a3fc:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    a400:	20 91 9c 08 	lds	r18, 0x089C	; 0x80089c <banspwncnt>
    a404:	30 91 9d 08 	lds	r19, 0x089D	; 0x80089d <banspwncnt+0x1>
    a408:	c9 01       	movw	r24, r18
    a40a:	01 97       	sbiw	r24, 0x01	; 1
    a40c:	22 30       	cpi	r18, 0x02	; 2
    a40e:	31 05       	cpc	r19, r1
    a410:	3c f4       	brge	.+14     	; 0xa420 <checkBanana+0xb2>
    }
   // else{
        //bananaxs[i] = 900;
        //bananays[i] = 900;
    //}
	banspwncnt = banspwncnt - 1;
    a412:	90 93 9d 08 	sts	0x089D, r25	; 0x80089d <banspwncnt+0x1>
    a416:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <banspwncnt>
	return 1;
    a41a:	81 e0       	ldi	r24, 0x01	; 1
    a41c:	90 e0       	ldi	r25, 0x00	; 0
    a41e:	20 c0       	rjmp	.+64     	; 0xa460 <checkBanana+0xf2>
    a420:	f7 01       	movw	r30, r14
    a422:	ee 0f       	add	r30, r30
    a424:	ff 1f       	adc	r31, r31
    a426:	df 01       	movw	r26, r30
    a428:	aa 57       	subi	r26, 0x7A	; 122
    a42a:	b6 4f       	sbci	r27, 0xF6	; 246
    a42c:	e2 56       	subi	r30, 0x62	; 98
    a42e:	f6 4f       	sbci	r31, 0xF6	; 246
	{ 
        DrawMap2(  lx    ,  ly,bigblue0 ); 
	    DrawMap2(  lx    ,  ly + 1,banana2 );
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    a430:	e8 16       	cp	r14, r24
    a432:	f9 06       	cpc	r15, r25
    a434:	74 f7       	brge	.-36     	; 0xa412 <checkBanana+0xa4>
            {
            bananaxs[j] = bananaxs[j + 1];
    a436:	2f ef       	ldi	r18, 0xFF	; 255
    a438:	e2 1a       	sub	r14, r18
    a43a:	f2 0a       	sbc	r15, r18
    a43c:	12 96       	adiw	r26, 0x02	; 2
    a43e:	2d 91       	ld	r18, X+
    a440:	3c 91       	ld	r19, X
    a442:	13 97       	sbiw	r26, 0x03	; 3
    a444:	2d 93       	st	X+, r18
    a446:	3d 93       	st	X+, r19
            bananays[j] = bananays[j + 1];
    a448:	22 81       	ldd	r18, Z+2	; 0x02
    a44a:	33 81       	ldd	r19, Z+3	; 0x03
    a44c:	21 93       	st	Z+, r18
    a44e:	31 93       	st	Z+, r19
    a450:	ef cf       	rjmp	.-34     	; 0xa430 <checkBanana+0xc2>
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a452:	2f ef       	ldi	r18, 0xFF	; 255
    a454:	e2 1a       	sub	r14, r18
    a456:	f2 0a       	sbc	r15, r18
    a458:	32 96       	adiw	r30, 0x02	; 2
    a45a:	b7 cf       	rjmp	.-146    	; 0xa3ca <checkBanana+0x5c>
	banspwncnt = banspwncnt - 1;
	return 1;
	}
}

return 0;
    a45c:	80 e0       	ldi	r24, 0x00	; 0
    a45e:	90 e0       	ldi	r25, 0x00	; 0
	
}
    a460:	df 91       	pop	r29
    a462:	cf 91       	pop	r28
    a464:	1f 91       	pop	r17
    a466:	0f 91       	pop	r16
    a468:	ff 90       	pop	r15
    a46a:	ef 90       	pop	r14
    a46c:	08 95       	ret

0000a46e <printheadline>:
if (bl > 0 && bl <= 20 ) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    a46e:	4a e7       	ldi	r20, 0x7A	; 122
    a470:	56 e7       	ldi	r21, 0x76	; 118
    a472:	60 e2       	ldi	r22, 0x20	; 32
    a474:	80 e0       	ldi	r24, 0x00	; 0
    a476:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
printtileint( 4 ,0,score,4);
    a47a:	40 91 84 09 	lds	r20, 0x0984	; 0x800984 <score>
    a47e:	50 91 85 09 	lds	r21, 0x0985	; 0x800985 <score+0x1>
    a482:	24 e0       	ldi	r18, 0x04	; 4
    a484:	30 e0       	ldi	r19, 0x00	; 0
    a486:	60 e0       	ldi	r22, 0x00	; 0
    a488:	70 e0       	ldi	r23, 0x00	; 0
    a48a:	84 e0       	ldi	r24, 0x04	; 4
    a48c:	90 e0       	ldi	r25, 0x00	; 0
    a48e:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    a492:	4d e5       	ldi	r20, 0x5D	; 93
    a494:	56 e7       	ldi	r21, 0x76	; 118
    a496:	60 e2       	ldi	r22, 0x20	; 32
    a498:	8b e0       	ldi	r24, 0x0B	; 11
    a49a:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
printtileint( 14 ,0,lives,1);  
    a49e:	40 91 d3 09 	lds	r20, 0x09D3	; 0x8009d3 <lives>
    a4a2:	50 e0       	ldi	r21, 0x00	; 0
    a4a4:	21 e0       	ldi	r18, 0x01	; 1
    a4a6:	30 e0       	ldi	r19, 0x00	; 0
    a4a8:	60 e0       	ldi	r22, 0x00	; 0
    a4aa:	70 e0       	ldi	r23, 0x00	; 0
    a4ac:	8e e0       	ldi	r24, 0x0E	; 14
    a4ae:	90 e0       	ldi	r25, 0x00	; 0
    a4b0:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
DrawMap2(16,VRAM_TILES_V, level0 ); 
    a4b4:	4e e6       	ldi	r20, 0x6E	; 110
    a4b6:	56 e7       	ldi	r21, 0x76	; 118
    a4b8:	60 e2       	ldi	r22, 0x20	; 32
    a4ba:	80 e1       	ldi	r24, 0x10	; 16
    a4bc:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
printtileint( 20 ,0, level,1);  
    a4c0:	40 91 9c 09 	lds	r20, 0x099C	; 0x80099c <level>
    a4c4:	50 e0       	ldi	r21, 0x00	; 0
    a4c6:	21 e0       	ldi	r18, 0x01	; 1
    a4c8:	30 e0       	ldi	r19, 0x00	; 0
    a4ca:	60 e0       	ldi	r22, 0x00	; 0
    a4cc:	70 e0       	ldi	r23, 0x00	; 0
    a4ce:	84 e1       	ldi	r24, 0x14	; 20
    a4d0:	90 e0       	ldi	r25, 0x00	; 0
    a4d2:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
DrawMap2(23,VRAM_TILES_V, time0 );
    a4d6:	48 e5       	ldi	r20, 0x58	; 88
    a4d8:	56 e7       	ldi	r21, 0x76	; 118
    a4da:	60 e2       	ldi	r22, 0x20	; 32
    a4dc:	87 e1       	ldi	r24, 0x17	; 23
    a4de:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    a4e2:	40 91 1a 0a 	lds	r20, 0x0A1A	; 0x800a1a <leveltime>
    a4e6:	50 e0       	ldi	r21, 0x00	; 0
    a4e8:	22 e0       	ldi	r18, 0x02	; 2
    a4ea:	30 e0       	ldi	r19, 0x00	; 0
    a4ec:	60 e0       	ldi	r22, 0x00	; 0
    a4ee:	70 e0       	ldi	r23, 0x00	; 0
    a4f0:	8a e1       	ldi	r24, 0x1A	; 26
    a4f2:	90 e0       	ldi	r25, 0x00	; 0
    a4f4:	0c 94 e0 4f 	jmp	0x9fc0	; 0x9fc0 <printtileint>

0000a4f8 <printheadlineintro>:
}
void printheadlineintro()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    a4f8:	4a e7       	ldi	r20, 0x7A	; 122
    a4fa:	56 e7       	ldi	r21, 0x76	; 118
    a4fc:	60 e2       	ldi	r22, 0x20	; 32
    a4fe:	80 e0       	ldi	r24, 0x00	; 0
    a500:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
printtileint( 4 ,0,score,4);
    a504:	40 91 84 09 	lds	r20, 0x0984	; 0x800984 <score>
    a508:	50 91 85 09 	lds	r21, 0x0985	; 0x800985 <score+0x1>
    a50c:	24 e0       	ldi	r18, 0x04	; 4
    a50e:	30 e0       	ldi	r19, 0x00	; 0
    a510:	60 e0       	ldi	r22, 0x00	; 0
    a512:	70 e0       	ldi	r23, 0x00	; 0
    a514:	84 e0       	ldi	r24, 0x04	; 4
    a516:	90 e0       	ldi	r25, 0x00	; 0
    a518:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    a51c:	4d e5       	ldi	r20, 0x5D	; 93
    a51e:	56 e7       	ldi	r21, 0x76	; 118
    a520:	60 e2       	ldi	r22, 0x20	; 32
    a522:	8b e0       	ldi	r24, 0x0B	; 11
    a524:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>

DrawMap2(16,VRAM_TILES_V, level0 ); 
    a528:	4e e6       	ldi	r20, 0x6E	; 110
    a52a:	56 e7       	ldi	r21, 0x76	; 118
    a52c:	60 e2       	ldi	r22, 0x20	; 32
    a52e:	80 e1       	ldi	r24, 0x10	; 16
    a530:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
  
DrawMap2(23,VRAM_TILES_V, time0 );
    a534:	48 e5       	ldi	r20, 0x58	; 88
    a536:	56 e7       	ldi	r21, 0x76	; 118
    a538:	60 e2       	ldi	r22, 0x20	; 32
    a53a:	87 e1       	ldi	r24, 0x17	; 23
    a53c:	0c 94 c2 4d 	jmp	0x9b84	; 0x9b84 <DrawMap>

0000a540 <updatepoints>:

}
void updatepoints()
{
if (introplaying) return;
    a540:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    a544:	81 11       	cpse	r24, r1
    a546:	0c c0       	rjmp	.+24     	; 0xa560 <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    a548:	40 91 84 09 	lds	r20, 0x0984	; 0x800984 <score>
    a54c:	50 91 85 09 	lds	r21, 0x0985	; 0x800985 <score+0x1>
    a550:	24 e0       	ldi	r18, 0x04	; 4
    a552:	30 e0       	ldi	r19, 0x00	; 0
    a554:	60 e0       	ldi	r22, 0x00	; 0
    a556:	70 e0       	ldi	r23, 0x00	; 0
    a558:	84 e0       	ldi	r24, 0x04	; 4
    a55a:	90 e0       	ldi	r25, 0x00	; 0
    a55c:	0c 94 e0 4f 	jmp	0x9fc0	; 0x9fc0 <printtileint>
    a560:	08 95       	ret

0000a562 <checkcollide>:

return 0;
	
}
int checkcollide(int x, int y,int z)
{
    a562:	af 92       	push	r10
    a564:	bf 92       	push	r11
    a566:	cf 92       	push	r12
    a568:	df 92       	push	r13
    a56a:	ef 92       	push	r14
    a56c:	ff 92       	push	r15
    a56e:	0f 93       	push	r16
    a570:	1f 93       	push	r17
    a572:	cf 93       	push	r28
    a574:	df 93       	push	r29
    a576:	6c 01       	movw	r12, r24
    a578:	5b 01       	movw	r10, r22
int lx;
int ly;
char bl;
lx = x + Levelx;
    a57a:	90 91 1d 0a 	lds	r25, 0x0A1D	; 0x800a1d <Levelx>
    a57e:	86 01       	movw	r16, r12
    a580:	09 0f       	add	r16, r25
    a582:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    a584:	84 e0       	ldi	r24, 0x04	; 4
    a586:	15 95       	asr	r17
    a588:	07 95       	ror	r16
    a58a:	8a 95       	dec	r24
    a58c:	e1 f7       	brne	.-8      	; 0xa586 <checkcollide+0x24>
ly = ly >> 4;  
    a58e:	7b 01       	movw	r14, r22
    a590:	24 e0       	ldi	r18, 0x04	; 4
    a592:	f5 94       	asr	r15
    a594:	e7 94       	ror	r14
    a596:	2a 95       	dec	r18
    a598:	e1 f7       	brne	.-8      	; 0xa592 <checkcollide+0x30>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a59a:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <level>
    a59e:	81 11       	cpse	r24, r1
    a5a0:	0f c0       	rjmp	.+30     	; 0xa5c0 <checkcollide+0x5e>
    a5a2:	8a e5       	ldi	r24, 0x5A	; 90
    a5a4:	8e 9d       	mul	r24, r14
    a5a6:	f0 01       	movw	r30, r0
    a5a8:	8f 9d       	mul	r24, r15
    a5aa:	f0 0d       	add	r31, r0
    a5ac:	11 24       	eor	r1, r1
    a5ae:	e0 0f       	add	r30, r16
    a5b0:	f1 1f       	adc	r31, r17
    a5b2:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a5b6:	e8 0f       	add	r30, r24
    a5b8:	f1 1d       	adc	r31, r1
    a5ba:	e1 58       	subi	r30, 0x81	; 129
    a5bc:	fa 4c       	sbci	r31, 0xCA	; 202
    a5be:	98 c0       	rjmp	.+304    	; 0xa6f0 <checkcollide+0x18e>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a5c0:	81 30       	cpi	r24, 0x01	; 1
    a5c2:	79 f4       	brne	.+30     	; 0xa5e2 <checkcollide+0x80>
    a5c4:	8a e5       	ldi	r24, 0x5A	; 90
    a5c6:	8e 9d       	mul	r24, r14
    a5c8:	f0 01       	movw	r30, r0
    a5ca:	8f 9d       	mul	r24, r15
    a5cc:	f0 0d       	add	r31, r0
    a5ce:	11 24       	eor	r1, r1
    a5d0:	e0 0f       	add	r30, r16
    a5d2:	f1 1f       	adc	r31, r17
    a5d4:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a5d8:	e8 0f       	add	r30, r24
    a5da:	f1 1d       	adc	r31, r1
    a5dc:	ed 56       	subi	r30, 0x6D	; 109
    a5de:	ff 4c       	sbci	r31, 0xCF	; 207
    a5e0:	87 c0       	rjmp	.+270    	; 0xa6f0 <checkcollide+0x18e>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a5e2:	82 30       	cpi	r24, 0x02	; 2
    a5e4:	79 f4       	brne	.+30     	; 0xa604 <checkcollide+0xa2>
    a5e6:	8a e5       	ldi	r24, 0x5A	; 90
    a5e8:	8e 9d       	mul	r24, r14
    a5ea:	f0 01       	movw	r30, r0
    a5ec:	8f 9d       	mul	r24, r15
    a5ee:	f0 0d       	add	r31, r0
    a5f0:	11 24       	eor	r1, r1
    a5f2:	e0 0f       	add	r30, r16
    a5f4:	f1 1f       	adc	r31, r17
    a5f6:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a5fa:	e8 0f       	add	r30, r24
    a5fc:	f1 1d       	adc	r31, r1
    a5fe:	e9 55       	subi	r30, 0x59	; 89
    a600:	f4 4d       	sbci	r31, 0xD4	; 212
    a602:	76 c0       	rjmp	.+236    	; 0xa6f0 <checkcollide+0x18e>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a604:	83 30       	cpi	r24, 0x03	; 3
    a606:	79 f4       	brne	.+30     	; 0xa626 <checkcollide+0xc4>
    a608:	8a e5       	ldi	r24, 0x5A	; 90
    a60a:	8e 9d       	mul	r24, r14
    a60c:	f0 01       	movw	r30, r0
    a60e:	8f 9d       	mul	r24, r15
    a610:	f0 0d       	add	r31, r0
    a612:	11 24       	eor	r1, r1
    a614:	e0 0f       	add	r30, r16
    a616:	f1 1f       	adc	r31, r17
    a618:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a61c:	e8 0f       	add	r30, r24
    a61e:	f1 1d       	adc	r31, r1
    a620:	e5 54       	subi	r30, 0x45	; 69
    a622:	f9 4d       	sbci	r31, 0xD9	; 217
    a624:	65 c0       	rjmp	.+202    	; 0xa6f0 <checkcollide+0x18e>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a626:	84 30       	cpi	r24, 0x04	; 4
    a628:	79 f4       	brne	.+30     	; 0xa648 <checkcollide+0xe6>
    a62a:	8a e5       	ldi	r24, 0x5A	; 90
    a62c:	8e 9d       	mul	r24, r14
    a62e:	f0 01       	movw	r30, r0
    a630:	8f 9d       	mul	r24, r15
    a632:	f0 0d       	add	r31, r0
    a634:	11 24       	eor	r1, r1
    a636:	e0 0f       	add	r30, r16
    a638:	f1 1f       	adc	r31, r17
    a63a:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a63e:	e8 0f       	add	r30, r24
    a640:	f1 1d       	adc	r31, r1
    a642:	e1 53       	subi	r30, 0x31	; 49
    a644:	fe 4d       	sbci	r31, 0xDE	; 222
    a646:	54 c0       	rjmp	.+168    	; 0xa6f0 <checkcollide+0x18e>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a648:	85 30       	cpi	r24, 0x05	; 5
    a64a:	79 f4       	brne	.+30     	; 0xa66a <checkcollide+0x108>
    a64c:	8a e5       	ldi	r24, 0x5A	; 90
    a64e:	8e 9d       	mul	r24, r14
    a650:	f0 01       	movw	r30, r0
    a652:	8f 9d       	mul	r24, r15
    a654:	f0 0d       	add	r31, r0
    a656:	11 24       	eor	r1, r1
    a658:	e0 0f       	add	r30, r16
    a65a:	f1 1f       	adc	r31, r17
    a65c:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a660:	e8 0f       	add	r30, r24
    a662:	f1 1d       	adc	r31, r1
    a664:	ed 51       	subi	r30, 0x1D	; 29
    a666:	f3 4e       	sbci	r31, 0xE3	; 227
    a668:	43 c0       	rjmp	.+134    	; 0xa6f0 <checkcollide+0x18e>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a66a:	86 30       	cpi	r24, 0x06	; 6
    a66c:	79 f4       	brne	.+30     	; 0xa68c <checkcollide+0x12a>
    a66e:	8a e5       	ldi	r24, 0x5A	; 90
    a670:	8e 9d       	mul	r24, r14
    a672:	f0 01       	movw	r30, r0
    a674:	8f 9d       	mul	r24, r15
    a676:	f0 0d       	add	r31, r0
    a678:	11 24       	eor	r1, r1
    a67a:	e0 0f       	add	r30, r16
    a67c:	f1 1f       	adc	r31, r17
    a67e:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a682:	e8 0f       	add	r30, r24
    a684:	f1 1d       	adc	r31, r1
    a686:	e9 50       	subi	r30, 0x09	; 9
    a688:	f8 4e       	sbci	r31, 0xE8	; 232
    a68a:	32 c0       	rjmp	.+100    	; 0xa6f0 <checkcollide+0x18e>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a68c:	87 30       	cpi	r24, 0x07	; 7
    a68e:	79 f4       	brne	.+30     	; 0xa6ae <checkcollide+0x14c>
    a690:	8a e5       	ldi	r24, 0x5A	; 90
    a692:	8e 9d       	mul	r24, r14
    a694:	f0 01       	movw	r30, r0
    a696:	8f 9d       	mul	r24, r15
    a698:	f0 0d       	add	r31, r0
    a69a:	11 24       	eor	r1, r1
    a69c:	e0 0f       	add	r30, r16
    a69e:	f1 1f       	adc	r31, r17
    a6a0:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a6a4:	e8 0f       	add	r30, r24
    a6a6:	f1 1d       	adc	r31, r1
    a6a8:	e5 5f       	subi	r30, 0xF5	; 245
    a6aa:	fc 4e       	sbci	r31, 0xEC	; 236
    a6ac:	21 c0       	rjmp	.+66     	; 0xa6f0 <checkcollide+0x18e>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a6ae:	88 30       	cpi	r24, 0x08	; 8
    a6b0:	79 f4       	brne	.+30     	; 0xa6d0 <checkcollide+0x16e>
    a6b2:	8a e5       	ldi	r24, 0x5A	; 90
    a6b4:	8e 9d       	mul	r24, r14
    a6b6:	f0 01       	movw	r30, r0
    a6b8:	8f 9d       	mul	r24, r15
    a6ba:	f0 0d       	add	r31, r0
    a6bc:	11 24       	eor	r1, r1
    a6be:	e0 0f       	add	r30, r16
    a6c0:	f1 1f       	adc	r31, r17
    a6c2:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a6c6:	e8 0f       	add	r30, r24
    a6c8:	f1 1d       	adc	r31, r1
    a6ca:	e1 5e       	subi	r30, 0xE1	; 225
    a6cc:	f1 4f       	sbci	r31, 0xF1	; 241
    a6ce:	10 c0       	rjmp	.+32     	; 0xa6f0 <checkcollide+0x18e>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a6d0:	89 30       	cpi	r24, 0x09	; 9
    a6d2:	79 f4       	brne	.+30     	; 0xa6f2 <checkcollide+0x190>
    a6d4:	8a e5       	ldi	r24, 0x5A	; 90
    a6d6:	8e 9d       	mul	r24, r14
    a6d8:	f0 01       	movw	r30, r0
    a6da:	8f 9d       	mul	r24, r15
    a6dc:	f0 0d       	add	r31, r0
    a6de:	11 24       	eor	r1, r1
    a6e0:	e0 0f       	add	r30, r16
    a6e2:	f1 1f       	adc	r31, r17
    a6e4:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    a6e8:	e8 0f       	add	r30, r24
    a6ea:	f1 1d       	adc	r31, r1
    a6ec:	ed 5c       	subi	r30, 0xCD	; 205
    a6ee:	f6 4f       	sbci	r31, 0xF6	; 246
    a6f0:	c4 91       	lpm	r28, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    a6f2:	ca 31       	cpi	r28, 0x1A	; 26
    a6f4:	11 f0       	breq	.+4      	; 0xa6fa <checkcollide+0x198>
    a6f6:	cc 31       	cpi	r28, 0x1C	; 28
    a6f8:	19 f4       	brne	.+6      	; 0xa700 <checkcollide+0x19e>
    a6fa:	81 e0       	ldi	r24, 0x01	; 1
    a6fc:	80 93 18 0a 	sts	0x0A18, r24	; 0x800a18 <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) { 
    a700:	83 ee       	ldi	r24, 0xE3	; 227
    a702:	8c 0f       	add	r24, r28
    a704:	82 30       	cpi	r24, 0x02	; 2
    a706:	18 f5       	brcc	.+70     	; 0xa74e <checkcollide+0x1ec>
    a708:	43 30       	cpi	r20, 0x03	; 3
    a70a:	51 05       	cpc	r21, r1
    a70c:	09 f0       	breq	.+2      	; 0xa710 <checkcollide+0x1ae>
    a70e:	ea c0       	rjmp	.+468    	; 0xa8e4 <checkcollide+0x382>
    a710:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <play>
    a714:	88 23       	and	r24, r24
    a716:	09 f4       	brne	.+2      	; 0xa71a <checkcollide+0x1b8>
    a718:	fd c0       	rjmp	.+506    	; 0xa914 <checkcollide+0x3b2>
    died = true;
    a71a:	81 e0       	ldi	r24, 0x01	; 1
    a71c:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <died>
    lives--;    
    a720:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    a724:	81 50       	subi	r24, 0x01	; 1
    a726:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
    isplaying = false; 
    a72a:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    a72e:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    bonus = 0;  
    a732:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    a736:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
    TriggerFx(9,0xff,true);
    a73a:	41 e0       	ldi	r20, 0x01	; 1
    a73c:	6f ef       	ldi	r22, 0xFF	; 255
    a73e:	89 e0       	ldi	r24, 0x09	; 9
    a740:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240);     
    a744:	80 ef       	ldi	r24, 0xF0	; 240
    a746:	90 e0       	ldi	r25, 0x00	; 0
    a748:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    a74c:	e3 c0       	rjmp	.+454    	; 0xa914 <checkcollide+0x3b2>
};
    
    
if (bl == 41 && z == 1 ) { 
    a74e:	c9 32       	cpi	r28, 0x29	; 41
    a750:	09 f0       	breq	.+2      	; 0xa754 <checkcollide+0x1f2>
    a752:	69 c0       	rjmp	.+210    	; 0xa826 <checkcollide+0x2c4>
    a754:	41 30       	cpi	r20, 0x01	; 1
    a756:	51 05       	cpc	r21, r1
    a758:	09 f0       	breq	.+2      	; 0xa75c <checkcollide+0x1fa>
    a75a:	d5 c1       	rjmp	.+938    	; 0xab06 <checkcollide+0x5a4>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    a75c:	2a e5       	ldi	r18, 0x5A	; 90
    a75e:	2e 9d       	mul	r18, r14
    a760:	c0 01       	movw	r24, r0
    a762:	2f 9d       	mul	r18, r15
    a764:	90 0d       	add	r25, r0
    a766:	11 24       	eor	r1, r1
    a768:	80 0f       	add	r24, r16
    a76a:	91 1f       	adc	r25, r17
    a76c:	20 91 24 0a 	lds	r18, 0x0A24	; 0x800a24 <scrolltiles>
    a770:	82 0f       	add	r24, r18
    a772:	91 1d       	adc	r25, r1
    a774:	90 93 e3 09 	sts	0x09E3, r25	; 0x8009e3 <dp+0x1>
    a778:	80 93 e2 09 	sts	0x09E2, r24	; 0x8009e2 <dp>
    a77c:	e4 ee       	ldi	r30, 0xE4	; 228
    a77e:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    a780:	c1 2c       	mov	r12, r1
    a782:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    a784:	21 91       	ld	r18, Z+
    a786:	31 91       	ld	r19, Z+
    a788:	82 17       	cp	r24, r18
    a78a:	93 07       	cpc	r25, r19
    a78c:	09 f4       	brne	.+2      	; 0xa790 <checkcollide+0x22e>
    a78e:	bb c1       	rjmp	.+886    	; 0xab06 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    a790:	23 2b       	or	r18, r19
    a792:	09 f0       	breq	.+2      	; 0xa796 <checkcollide+0x234>
    a794:	3f c0       	rjmp	.+126    	; 0xa814 <checkcollide+0x2b2>
    score = score + 5 ;
    a796:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <score>
    a79a:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <score+0x1>
    a79e:	05 96       	adiw	r24, 0x05	; 5
    a7a0:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <score+0x1>
    a7a4:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <score>
    bonus++;
    a7a8:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <bonus>
    a7ac:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <bonus+0x1>
    a7b0:	01 96       	adiw	r24, 0x01	; 1
    a7b2:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <bonus+0x1>
    a7b6:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <bonus>
    updatepoints();
    a7ba:	0e 94 a0 52 	call	0xa540	; 0xa540 <updatepoints>
    TriggerFx(7,0xff,true);
    a7be:	41 e0       	ldi	r20, 0x01	; 1
    a7c0:	6f ef       	ldi	r22, 0xFF	; 255
    a7c2:	87 e0       	ldi	r24, 0x07	; 7
    a7c4:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
        
    lx = lx * 2 + destX;
    a7c8:	00 0f       	add	r16, r16
    a7ca:	11 1f       	adc	r17, r17
    a7cc:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    a7d0:	08 0f       	add	r16, r24
    a7d2:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    a7d4:	00 32       	cpi	r16, 0x20	; 32
    a7d6:	11 05       	cpc	r17, r1
    a7d8:	14 f0       	brlt	.+4      	; 0xa7de <checkcollide+0x27c>
    a7da:	00 52       	subi	r16, 0x20	; 32
    a7dc:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    a7de:	ee 0c       	add	r14, r14
    a7e0:	41 ea       	ldi	r20, 0xA1	; 161
    a7e2:	56 e7       	ldi	r21, 0x76	; 118
    a7e4:	6e 2d       	mov	r22, r14
    a7e6:	80 2f       	mov	r24, r16
    a7e8:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    a7ec:	d1 e0       	ldi	r29, 0x01	; 1
    a7ee:	d0 0f       	add	r29, r16
    a7f0:	41 ea       	ldi	r20, 0xA1	; 161
    a7f2:	56 e7       	ldi	r21, 0x76	; 118
    a7f4:	6e 2d       	mov	r22, r14
    a7f6:	8d 2f       	mov	r24, r29
    a7f8:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    a7fc:	e3 94       	inc	r14
    a7fe:	41 ea       	ldi	r20, 0xA1	; 161
    a800:	56 e7       	ldi	r21, 0x76	; 118
    a802:	6e 2d       	mov	r22, r14
    a804:	80 2f       	mov	r24, r16
    a806:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    a80a:	41 ea       	ldi	r20, 0xA1	; 161
    a80c:	56 e7       	ldi	r21, 0x76	; 118
    a80e:	6e 2d       	mov	r22, r14
    a810:	8d 2f       	mov	r24, r29
    a812:	5a c0       	rjmp	.+180    	; 0xa8c8 <checkcollide+0x366>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    a814:	2f ef       	ldi	r18, 0xFF	; 255
    a816:	c2 1a       	sub	r12, r18
    a818:	d2 0a       	sbc	r13, r18
    a81a:	29 e1       	ldi	r18, 0x19	; 25
    a81c:	c2 16       	cp	r12, r18
    a81e:	d1 04       	cpc	r13, r1
    a820:	09 f0       	breq	.+2      	; 0xa824 <checkcollide+0x2c2>
    a822:	b0 cf       	rjmp	.-160    	; 0xa784 <checkcollide+0x222>
    a824:	70 c1       	rjmp	.+736    	; 0xab06 <checkcollide+0x5a4>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    a826:	c3 30       	cpi	r28, 0x03	; 3
    a828:	09 f0       	breq	.+2      	; 0xa82c <checkcollide+0x2ca>
    a82a:	5c c0       	rjmp	.+184    	; 0xa8e4 <checkcollide+0x382>
    a82c:	42 30       	cpi	r20, 0x02	; 2
    a82e:	51 05       	cpc	r21, r1
    a830:	09 f0       	breq	.+2      	; 0xa834 <checkcollide+0x2d2>
    a832:	69 c1       	rjmp	.+722    	; 0xab06 <checkcollide+0x5a4>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    a834:	2a e5       	ldi	r18, 0x5A	; 90
    a836:	2e 9d       	mul	r18, r14
    a838:	c0 01       	movw	r24, r0
    a83a:	2f 9d       	mul	r18, r15
    a83c:	90 0d       	add	r25, r0
    a83e:	11 24       	eor	r1, r1
    a840:	80 0f       	add	r24, r16
    a842:	91 1f       	adc	r25, r17
    a844:	20 91 24 0a 	lds	r18, 0x0A24	; 0x800a24 <scrolltiles>
    a848:	82 0f       	add	r24, r18
    a84a:	91 1d       	adc	r25, r1
    a84c:	90 93 e3 09 	sts	0x09E3, r25	; 0x8009e3 <dp+0x1>
    a850:	80 93 e2 09 	sts	0x09E2, r24	; 0x8009e2 <dp>
    a854:	e4 ee       	ldi	r30, 0xE4	; 228
    a856:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    a858:	c1 2c       	mov	r12, r1
    a85a:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    a85c:	21 91       	ld	r18, Z+
    a85e:	31 91       	ld	r19, Z+
    a860:	82 17       	cp	r24, r18
    a862:	93 07       	cpc	r25, r19
    a864:	09 f4       	brne	.+2      	; 0xa868 <checkcollide+0x306>
    a866:	4f c1       	rjmp	.+670    	; 0xab06 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    a868:	23 2b       	or	r18, r19
    a86a:	09 f0       	breq	.+2      	; 0xa86e <checkcollide+0x30c>
    a86c:	4a c0       	rjmp	.+148    	; 0xa902 <checkcollide+0x3a0>
    score = score + 5 ;
    a86e:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <score>
    a872:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <score+0x1>
    a876:	05 96       	adiw	r24, 0x05	; 5
    a878:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <score+0x1>
    a87c:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <score>
    bonus++;
    a880:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <bonus>
    a884:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <bonus+0x1>
    a888:	01 96       	adiw	r24, 0x01	; 1
    a88a:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <bonus+0x1>
    a88e:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <bonus>
    updatepoints();
    a892:	0e 94 a0 52 	call	0xa540	; 0xa540 <updatepoints>
    TriggerFx(7,0xff,true);
    a896:	41 e0       	ldi	r20, 0x01	; 1
    a898:	6f ef       	ldi	r22, 0xFF	; 255
    a89a:	87 e0       	ldi	r24, 0x07	; 7
    a89c:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    lx = lx * 2 + destX;
    a8a0:	c8 01       	movw	r24, r16
    a8a2:	88 0f       	add	r24, r24
    a8a4:	99 1f       	adc	r25, r25
    a8a6:	20 91 df 09 	lds	r18, 0x09DF	; 0x8009df <destX>
    a8aa:	82 0f       	add	r24, r18
    a8ac:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    a8ae:	80 32       	cpi	r24, 0x20	; 32
    a8b0:	91 05       	cpc	r25, r1
    a8b2:	0c f0       	brlt	.+2      	; 0xa8b6 <checkcollide+0x354>
    a8b4:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    bananaCount = bananaCount + 1;
    a8b6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bananaCount>
    a8ba:	9f 5f       	subi	r25, 0xFF	; 255
    a8bc:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bananaCount>
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    a8c0:	6e 2d       	mov	r22, r14
    a8c2:	66 0f       	add	r22, r22
    a8c4:	45 e3       	ldi	r20, 0x35	; 53
    a8c6:	57 e7       	ldi	r21, 0x77	; 119
    a8c8:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    diamonds[xi] = dp;
    a8cc:	f6 01       	movw	r30, r12
    a8ce:	ee 0f       	add	r30, r30
    a8d0:	ff 1f       	adc	r31, r31
    a8d2:	ec 51       	subi	r30, 0x1C	; 28
    a8d4:	f6 4f       	sbci	r31, 0xF6	; 246
    a8d6:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <dp>
    a8da:	90 91 e3 09 	lds	r25, 0x09E3	; 0x8009e3 <dp+0x1>
    a8de:	91 83       	std	Z+1, r25	; 0x01
    a8e0:	80 83       	st	Z, r24
    break;
    a8e2:	11 c1       	rjmp	.+546    	; 0xab06 <checkcollide+0x5a4>
    };
    };
}; 
if (bl == 9 )
    a8e4:	c9 30       	cpi	r28, 0x09	; 9
    a8e6:	b1 f4       	brne	.+44     	; 0xa914 <checkcollide+0x3b2>
{
lx = x + Levelx;
    a8e8:	c9 0e       	add	r12, r25
    a8ea:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    a8ec:	8f e0       	ldi	r24, 0x0F	; 15
    a8ee:	c8 22       	and	r12, r24
    a8f0:	dd 24       	eor	r13, r13
    a8f2:	81 e0       	ldi	r24, 0x01	; 1
    a8f4:	90 e0       	ldi	r25, 0x00	; 0
    a8f6:	29 e0       	ldi	r18, 0x09	; 9
    a8f8:	c2 16       	cp	r12, r18
    a8fa:	d1 04       	cpc	r13, r1
    a8fc:	0c f4       	brge	.+2      	; 0xa900 <checkcollide+0x39e>
    a8fe:	0a c1       	rjmp	.+532    	; 0xab14 <checkcollide+0x5b2>
    a900:	08 c1       	rjmp	.+528    	; 0xab12 <checkcollide+0x5b0>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    a902:	2f ef       	ldi	r18, 0xFF	; 255
    a904:	c2 1a       	sub	r12, r18
    a906:	d2 0a       	sbc	r13, r18
    a908:	29 e1       	ldi	r18, 0x19	; 25
    a90a:	c2 16       	cp	r12, r18
    a90c:	d1 04       	cpc	r13, r1
    a90e:	09 f0       	breq	.+2      	; 0xa912 <checkcollide+0x3b0>
    a910:	a5 cf       	rjmp	.-182    	; 0xa85c <checkcollide+0x2fa>
    a912:	f9 c0       	rjmp	.+498    	; 0xab06 <checkcollide+0x5a4>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    a914:	ca 30       	cpi	r28, 0x0A	; 10
    a916:	79 f4       	brne	.+30     	; 0xa936 <checkcollide+0x3d4>
{
lx = x + Levelx;
    a918:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    a91c:	c8 0e       	add	r12, r24
    a91e:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    a920:	8f e0       	ldi	r24, 0x0F	; 15
    a922:	c8 22       	and	r12, r24
    a924:	dd 24       	eor	r13, r13
    a926:	81 e0       	ldi	r24, 0x01	; 1
    a928:	90 e0       	ldi	r25, 0x00	; 0
    a92a:	29 e0       	ldi	r18, 0x09	; 9
    a92c:	c2 16       	cp	r12, r18
    a92e:	d1 04       	cpc	r13, r1
    a930:	0c f0       	brlt	.+2      	; 0xa934 <checkcollide+0x3d2>
    a932:	f0 c0       	rjmp	.+480    	; 0xab14 <checkcollide+0x5b2>
    a934:	ee c0       	rjmp	.+476    	; 0xab12 <checkcollide+0x5b0>
}
 

    
    
if (bl == 39 )
    a936:	c7 32       	cpi	r28, 0x27	; 39
    a938:	09 f0       	breq	.+2      	; 0xa93c <checkcollide+0x3da>
    a93a:	e5 c0       	rjmp	.+458    	; 0xab06 <checkcollide+0x5a4>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    a93c:	c7 01       	movw	r24, r14
    a93e:	f4 e0       	ldi	r31, 0x04	; 4
    a940:	88 0f       	add	r24, r24
    a942:	99 1f       	adc	r25, r25
    a944:	fa 95       	dec	r31
    a946:	e1 f7       	brne	.-8      	; 0xa940 <checkcollide+0x3de>
ly = ly - lx;
        
if (ly < 5  ) 
    a948:	a8 1a       	sub	r10, r24
    a94a:	b9 0a       	sbc	r11, r25
    a94c:	85 e0       	ldi	r24, 0x05	; 5
    a94e:	a8 16       	cp	r10, r24
    a950:	b1 04       	cpc	r11, r1
    a952:	0c f0       	brlt	.+2      	; 0xa956 <checkcollide+0x3f4>
    a954:	7d c0       	rjmp	.+250    	; 0xaa50 <checkcollide+0x4ee>
{
lx = x + Levelx;
    a956:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    a95a:	c8 0e       	add	r12, r24
    a95c:	d1 1c       	adc	r13, r1
ly = y;
lx = lx >> 4;
    a95e:	86 01       	movw	r16, r12
    a960:	e4 e0       	ldi	r30, 0x04	; 4
    a962:	15 95       	asr	r17
    a964:	07 95       	ror	r16
    a966:	ea 95       	dec	r30
    a968:	e1 f7       	brne	.-8      	; 0xa962 <checkcollide+0x400>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    a96a:	2a e5       	ldi	r18, 0x5A	; 90
    a96c:	2e 9d       	mul	r18, r14
    a96e:	c0 01       	movw	r24, r0
    a970:	2f 9d       	mul	r18, r15
    a972:	90 0d       	add	r25, r0
    a974:	11 24       	eor	r1, r1
    a976:	80 0f       	add	r24, r16
    a978:	91 1f       	adc	r25, r17
    a97a:	20 91 24 0a 	lds	r18, 0x0A24	; 0x800a24 <scrolltiles>
    a97e:	82 0f       	add	r24, r18
    a980:	91 1d       	adc	r25, r1
    a982:	90 93 e3 09 	sts	0x09E3, r25	; 0x8009e3 <dp+0x1>
    a986:	80 93 e2 09 	sts	0x09E2, r24	; 0x8009e2 <dp>
    a98a:	e7 e2       	ldi	r30, 0x27	; 39
    a98c:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    a98e:	20 e0       	ldi	r18, 0x00	; 0
    a990:	30 e0       	ldi	r19, 0x00	; 0
     {
     if (bridges[xi].id == dp)         
    a992:	40 81       	ld	r20, Z
    a994:	51 81       	ldd	r21, Z+1	; 0x01
    a996:	84 17       	cp	r24, r20
    a998:	95 07       	cpc	r25, r21
    a99a:	09 f0       	breq	.+2      	; 0xa99e <checkcollide+0x43c>
    a99c:	9e c0       	rjmp	.+316    	; 0xaada <checkcollide+0x578>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    a99e:	c8 01       	movw	r24, r16
    a9a0:	54 e0       	ldi	r21, 0x04	; 4
    a9a2:	88 0f       	add	r24, r24
    a9a4:	99 1f       	adc	r25, r25
    a9a6:	5a 95       	dec	r21
    a9a8:	e1 f7       	brne	.-8      	; 0xa9a2 <checkcollide+0x440>
    a9aa:	c8 1a       	sub	r12, r24
    a9ac:	d9 0a       	sbc	r13, r25
    a9ae:	90 91 df 09 	lds	r25, 0x09DF	; 0x8009df <destX>
    a9b2:	e9 01       	movw	r28, r18
    a9b4:	cc 0f       	add	r28, r28
    a9b6:	dd 1f       	adc	r29, r29
    a9b8:	cc 0f       	add	r28, r28
    a9ba:	dd 1f       	adc	r29, r29
    a9bc:	00 0f       	add	r16, r16
    a9be:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    a9c0:	fe 01       	movw	r30, r28
    a9c2:	e9 5d       	subi	r30, 0xD9	; 217
    a9c4:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    a9c6:	29 e0       	ldi	r18, 0x09	; 9
    a9c8:	c2 16       	cp	r12, r18
    a9ca:	d1 04       	cpc	r13, r1
    a9cc:	0c f0       	brlt	.+2      	; 0xa9d0 <checkcollide+0x46e>
    a9ce:	43 c0       	rjmp	.+134    	; 0xaa56 <checkcollide+0x4f4>
        {
        bridges[xi].r++;    
    a9d0:	83 81       	ldd	r24, Z+3	; 0x03
    a9d2:	21 e0       	ldi	r18, 0x01	; 1
    a9d4:	28 0f       	add	r18, r24
    a9d6:	23 83       	std	Z+3, r18	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    a9d8:	09 0f       	add	r16, r25
    a9da:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    a9dc:	00 32       	cpi	r16, 0x20	; 32
    a9de:	11 05       	cpc	r17, r1
    a9e0:	14 f0       	brlt	.+4      	; 0xa9e6 <checkcollide+0x484>
    a9e2:	00 52       	subi	r16, 0x20	; 32
    a9e4:	11 09       	sbc	r17, r1
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    a9e6:	88 30       	cpi	r24, 0x08	; 8
    a9e8:	38 f4       	brcc	.+14     	; 0xa9f8 <checkcollide+0x496>
    a9ea:	4a ea       	ldi	r20, 0xAA	; 170
    a9ec:	56 e7       	ldi	r21, 0x76	; 118
    a9ee:	6e 2d       	mov	r22, r14
    a9f0:	66 0f       	add	r22, r22
    a9f2:	80 2f       	mov	r24, r16
    a9f4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    a9f8:	fe 01       	movw	r30, r28
    a9fa:	e9 5d       	subi	r30, 0xD9	; 217
    a9fc:	f6 4f       	sbci	r31, 0xF6	; 246
    a9fe:	83 81       	ldd	r24, Z+3	; 0x03
    aa00:	89 50       	subi	r24, 0x09	; 9
    aa02:	88 30       	cpi	r24, 0x08	; 8
    aa04:	38 f4       	brcc	.+14     	; 0xaa14 <checkcollide+0x4b2>
    aa06:	47 ea       	ldi	r20, 0xA7	; 167
    aa08:	56 e7       	ldi	r21, 0x76	; 118
    aa0a:	6e 2d       	mov	r22, r14
    aa0c:	66 0f       	add	r22, r22
    aa0e:	80 2f       	mov	r24, r16
    aa10:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    aa14:	fe 01       	movw	r30, r28
    aa16:	e9 5d       	subi	r30, 0xD9	; 217
    aa18:	f6 4f       	sbci	r31, 0xF6	; 246
    aa1a:	83 81       	ldd	r24, Z+3	; 0x03
    aa1c:	81 51       	subi	r24, 0x11	; 17
    aa1e:	87 30       	cpi	r24, 0x07	; 7
    aa20:	38 f4       	brcc	.+14     	; 0xaa30 <checkcollide+0x4ce>
    aa22:	44 ea       	ldi	r20, 0xA4	; 164
    aa24:	56 e7       	ldi	r21, 0x76	; 118
    aa26:	6e 2d       	mov	r22, r14
    aa28:	66 0f       	add	r22, r22
    aa2a:	80 2f       	mov	r24, r16
    aa2c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};
    aa30:	fe 01       	movw	r30, r28
    aa32:	e9 5d       	subi	r30, 0xD9	; 217
    aa34:	f6 4f       	sbci	r31, 0xF6	; 246
    aa36:	83 81       	ldd	r24, Z+3	; 0x03
    aa38:	88 31       	cpi	r24, 0x18	; 24
    aa3a:	08 f4       	brcc	.+2      	; 0xaa3e <checkcollide+0x4dc>
    aa3c:	5b c0       	rjmp	.+182    	; 0xaaf4 <checkcollide+0x592>
    aa3e:	88 e1       	ldi	r24, 0x18	; 24
    aa40:	83 83       	std	Z+3, r24	; 0x03
    aa42:	6e 2d       	mov	r22, r14
    aa44:	66 0f       	add	r22, r22
    aa46:	41 ea       	ldi	r20, 0xA1	; 161
    aa48:	56 e7       	ldi	r21, 0x76	; 118
    aa4a:	80 2f       	mov	r24, r16
    aa4c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    aa50:	80 e0       	ldi	r24, 0x00	; 0
    aa52:	90 e0       	ldi	r25, 0x00	; 0
    aa54:	5f c0       	rjmp	.+190    	; 0xab14 <checkcollide+0x5b2>
        }
        else
        {
        bridges[xi].l++;
    aa56:	82 81       	ldd	r24, Z+2	; 0x02
    aa58:	21 e0       	ldi	r18, 0x01	; 1
    aa5a:	28 0f       	add	r18, r24
    aa5c:	22 83       	std	Z+2, r18	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    aa5e:	09 0f       	add	r16, r25
    aa60:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    aa62:	00 32       	cpi	r16, 0x20	; 32
    aa64:	11 05       	cpc	r17, r1
    aa66:	14 f0       	brlt	.+4      	; 0xaa6c <checkcollide+0x50a>
    aa68:	00 52       	subi	r16, 0x20	; 32
    aa6a:	11 09       	sbc	r17, r1
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    aa6c:	88 30       	cpi	r24, 0x08	; 8
    aa6e:	40 f4       	brcc	.+16     	; 0xaa80 <checkcollide+0x51e>
    aa70:	4a ea       	ldi	r20, 0xAA	; 170
    aa72:	56 e7       	ldi	r21, 0x76	; 118
    aa74:	6e 2d       	mov	r22, r14
    aa76:	66 0f       	add	r22, r22
    aa78:	81 e0       	ldi	r24, 0x01	; 1
    aa7a:	80 0f       	add	r24, r16
    aa7c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    aa80:	fe 01       	movw	r30, r28
    aa82:	e9 5d       	subi	r30, 0xD9	; 217
    aa84:	f6 4f       	sbci	r31, 0xF6	; 246
    aa86:	82 81       	ldd	r24, Z+2	; 0x02
    aa88:	89 50       	subi	r24, 0x09	; 9
    aa8a:	88 30       	cpi	r24, 0x08	; 8
    aa8c:	40 f4       	brcc	.+16     	; 0xaa9e <checkcollide+0x53c>
    aa8e:	47 ea       	ldi	r20, 0xA7	; 167
    aa90:	56 e7       	ldi	r21, 0x76	; 118
    aa92:	6e 2d       	mov	r22, r14
    aa94:	66 0f       	add	r22, r22
    aa96:	81 e0       	ldi	r24, 0x01	; 1
    aa98:	80 0f       	add	r24, r16
    aa9a:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    aa9e:	fe 01       	movw	r30, r28
    aaa0:	e9 5d       	subi	r30, 0xD9	; 217
    aaa2:	f6 4f       	sbci	r31, 0xF6	; 246
    aaa4:	82 81       	ldd	r24, Z+2	; 0x02
    aaa6:	81 51       	subi	r24, 0x11	; 17
    aaa8:	87 30       	cpi	r24, 0x07	; 7
    aaaa:	40 f4       	brcc	.+16     	; 0xaabc <checkcollide+0x55a>
    aaac:	44 ea       	ldi	r20, 0xA4	; 164
    aaae:	56 e7       	ldi	r21, 0x76	; 118
    aab0:	6e 2d       	mov	r22, r14
    aab2:	66 0f       	add	r22, r22
    aab4:	81 e0       	ldi	r24, 0x01	; 1
    aab6:	80 0f       	add	r24, r16
    aab8:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;}; 
    aabc:	fe 01       	movw	r30, r28
    aabe:	e9 5d       	subi	r30, 0xD9	; 217
    aac0:	f6 4f       	sbci	r31, 0xF6	; 246
    aac2:	82 81       	ldd	r24, Z+2	; 0x02
    aac4:	88 31       	cpi	r24, 0x18	; 24
    aac6:	b0 f0       	brcs	.+44     	; 0xaaf4 <checkcollide+0x592>
    aac8:	88 e1       	ldi	r24, 0x18	; 24
    aaca:	82 83       	std	Z+2, r24	; 0x02
    aacc:	6e 2d       	mov	r22, r14
    aace:	66 0f       	add	r22, r22
    aad0:	41 ea       	ldi	r20, 0xA1	; 161
    aad2:	56 e7       	ldi	r21, 0x76	; 118
    aad4:	81 e0       	ldi	r24, 0x01	; 1
    aad6:	80 0f       	add	r24, r16
    aad8:	b9 cf       	rjmp	.-142    	; 0xaa4c <checkcollide+0x4ea>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    aada:	45 2b       	or	r20, r21
    aadc:	69 f4       	brne	.+26     	; 0xaaf8 <checkcollide+0x596>
    aade:	22 0f       	add	r18, r18
    aae0:	33 1f       	adc	r19, r19
    aae2:	22 0f       	add	r18, r18
    aae4:	33 1f       	adc	r19, r19
    aae6:	f9 01       	movw	r30, r18
    aae8:	e9 5d       	subi	r30, 0xD9	; 217
    aaea:	f6 4f       	sbci	r31, 0xF6	; 246
    aaec:	91 83       	std	Z+1, r25	; 0x01
    aaee:	80 83       	st	Z, r24
    aaf0:	12 82       	std	Z+2, r1	; 0x02
    aaf2:	13 82       	std	Z+3, r1	; 0x03
    aaf4:	81 e0       	ldi	r24, 0x01	; 1
    aaf6:	ad cf       	rjmp	.-166    	; 0xaa52 <checkcollide+0x4f0>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    aaf8:	2f 5f       	subi	r18, 0xFF	; 255
    aafa:	3f 4f       	sbci	r19, 0xFF	; 255
    aafc:	34 96       	adiw	r30, 0x04	; 4
    aafe:	2c 30       	cpi	r18, 0x0C	; 12
    ab00:	31 05       	cpc	r19, r1
    ab02:	09 f0       	breq	.+2      	; 0xab06 <checkcollide+0x5a4>
    ab04:	46 cf       	rjmp	.-372    	; 0xa992 <checkcollide+0x430>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    ab06:	ef ef       	ldi	r30, 0xFF	; 255
    ab08:	ec 0f       	add	r30, r28
    ab0a:	81 e0       	ldi	r24, 0x01	; 1
    ab0c:	90 e0       	ldi	r25, 0x00	; 0
    ab0e:	e4 31       	cpi	r30, 0x14	; 20
    ab10:	08 f0       	brcs	.+2      	; 0xab14 <checkcollide+0x5b2>
    ab12:	80 e0       	ldi	r24, 0x00	; 0
}
    ab14:	df 91       	pop	r29
    ab16:	cf 91       	pop	r28
    ab18:	1f 91       	pop	r17
    ab1a:	0f 91       	pop	r16
    ab1c:	ff 90       	pop	r15
    ab1e:	ef 90       	pop	r14
    ab20:	df 90       	pop	r13
    ab22:	cf 90       	pop	r12
    ab24:	bf 90       	pop	r11
    ab26:	af 90       	pop	r10
    ab28:	08 95       	ret

0000ab2a <moveplayer2>:
  
}

void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
    ab2a:	81 e0       	ldi	r24, 0x01	; 1
    ab2c:	0e 94 4e 41 	call	0x829c	; 0x829c <ReadJoypad>
if(player2.stuck)
    ab30:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <player2+0xa>
    ab34:	22 23       	and	r18, r18
    ab36:	a1 f0       	breq	.+40     	; 0xab60 <moveplayer2+0x36>
{
player2.sCount = player2.sCount + 1;
    ab38:	20 91 c0 09 	lds	r18, 0x09C0	; 0x8009c0 <player2+0x8>
    ab3c:	30 91 c1 09 	lds	r19, 0x09C1	; 0x8009c1 <player2+0x9>
    ab40:	2f 5f       	subi	r18, 0xFF	; 255
    ab42:	3f 4f       	sbci	r19, 0xFF	; 255
if(player2.sCount >= 100)
    ab44:	24 36       	cpi	r18, 0x64	; 100
    ab46:	31 05       	cpc	r19, r1
    ab48:	2c f4       	brge	.+10     	; 0xab54 <moveplayer2+0x2a>
void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
if(player2.stuck)
{
player2.sCount = player2.sCount + 1;
    ab4a:	30 93 c1 09 	sts	0x09C1, r19	; 0x8009c1 <player2+0x9>
    ab4e:	20 93 c0 09 	sts	0x09C0, r18	; 0x8009c0 <player2+0x8>
    ab52:	06 c0       	rjmp	.+12     	; 0xab60 <moveplayer2+0x36>
if(player2.sCount >= 100)
{
player2.sCount = 0;
    ab54:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <player2+0x9>
    ab58:	10 92 c0 09 	sts	0x09C0, r1	; 0x8009c0 <player2+0x8>
player2.stuck = false;
    ab5c:	10 92 c2 09 	sts	0x09C2, r1	; 0x8009c2 <player2+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    ab60:	20 91 7e 09 	lds	r18, 0x097E	; 0x80097e <introplaying>
    ab64:	22 23       	and	r18, r18
    ab66:	29 f0       	breq	.+10     	; 0xab72 <moveplayer2+0x48>
    ab68:	83 ff       	sbrs	r24, 3
    ab6a:	85 c0       	rjmp	.+266    	; 0xac76 <moveplayer2+0x14c>
    ab6c:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <introplaying>
    ab70:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player2.stuck == false) { 
    ab72:	86 ff       	sbrs	r24, 6
    ab74:	13 c0       	rjmp	.+38     	; 0xab9c <moveplayer2+0x72>
    ab76:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <player2+0xa>
    ab7a:	21 11       	cpse	r18, r1
    ab7c:	0f c0       	rjmp	.+30     	; 0xab9c <moveplayer2+0x72>
player2.direction = 'l';
    ab7e:	2c e6       	ldi	r18, 0x6C	; 108
    ab80:	20 93 c6 09 	sts	0x09C6, r18	; 0x8009c6 <player2+0xe>
player2.action = 'w';
    ab84:	27 e7       	ldi	r18, 0x77	; 119
    ab86:	20 93 c5 09 	sts	0x09C5, r18	; 0x8009c5 <player2+0xd>
player2.facing = 1;
    ab8a:	21 e0       	ldi	r18, 0x01	; 1
    ab8c:	30 e0       	ldi	r19, 0x00	; 0
    ab8e:	30 93 c4 09 	sts	0x09C4, r19	; 0x8009c4 <player2+0xc>
    ab92:	20 93 c3 09 	sts	0x09C3, r18	; 0x8009c3 <player2+0xb>
player2.ximpulse = -1; 
    ab96:	2f ef       	ldi	r18, 0xFF	; 255
    ab98:	20 93 ca 09 	sts	0x09CA, r18	; 0x8009ca <player2+0x12>
};
if (joy&BTN_RIGHT && player2.stuck == false) {
    ab9c:	87 ff       	sbrs	r24, 7
    ab9e:	11 c0       	rjmp	.+34     	; 0xabc2 <moveplayer2+0x98>
    aba0:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <player2+0xa>
    aba4:	21 11       	cpse	r18, r1
    aba6:	0d c0       	rjmp	.+26     	; 0xabc2 <moveplayer2+0x98>
player2.direction = 'r';
    aba8:	22 e7       	ldi	r18, 0x72	; 114
    abaa:	20 93 c6 09 	sts	0x09C6, r18	; 0x8009c6 <player2+0xe>
player2.action = 'w';
    abae:	27 e7       	ldi	r18, 0x77	; 119
    abb0:	20 93 c5 09 	sts	0x09C5, r18	; 0x8009c5 <player2+0xd>
player2.facing = 0;
    abb4:	10 92 c4 09 	sts	0x09C4, r1	; 0x8009c4 <player2+0xc>
    abb8:	10 92 c3 09 	sts	0x09C3, r1	; 0x8009c3 <player2+0xb>
player2.ximpulse = 1; 
    abbc:	21 e0       	ldi	r18, 0x01	; 1
    abbe:	20 93 ca 09 	sts	0x09CA, r18	; 0x8009ca <player2+0x12>
};
if ( !(joy&BTN_A) ) {
    abc2:	ac 01       	movw	r20, r24
    abc4:	44 27       	eor	r20, r20
    abc6:	51 70       	andi	r21, 0x01	; 1
    abc8:	90 fd       	sbrc	r25, 0
    abca:	09 c0       	rjmp	.+18     	; 0xabde <moveplayer2+0xb4>
player2.yimpulse = 0;
    abcc:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <player2+0x13>
player2.jumpreleased = true;
    abd0:	21 e0       	ldi	r18, 0x01	; 1
    abd2:	20 93 cd 09 	sts	0x09CD, r18	; 0x8009cd <player2+0x15>
player2.jumping = false;
    abd6:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <player2+0x14>
player2.jumpcounter = 0;
    abda:	10 92 d1 09 	sts	0x09D1, r1	; 0x8009d1 <player2+0x19>
};

if ( !(joy&BTN_B) ) {
    abde:	80 fd       	sbrc	r24, 0
    abe0:	03 c0       	rjmp	.+6      	; 0xabe8 <moveplayer2+0xbe>
player2.bpressed = false;
    abe2:	10 92 ce 09 	sts	0x09CE, r1	; 0x8009ce <player2+0x16>
    abe6:	08 c0       	rjmp	.+16     	; 0xabf8 <moveplayer2+0xce>
};
if ( joy&BTN_B && player2.touchground) {
    abe8:	20 91 c9 09 	lds	r18, 0x09C9	; 0x8009c9 <player2+0x11>
    abec:	22 23       	and	r18, r18
    abee:	21 f0       	breq	.+8      	; 0xabf8 <moveplayer2+0xce>
	if(bananaCount > 0 && player2.bpressed == false)
    abf0:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <bananaCount>
    abf4:	21 11       	cpse	r18, r1
    abf6:	11 c2       	rjmp	.+1058   	; 0xb01a <moveplayer2+0x4f0>
	bananaCount = bananaCount - 1;
    player2.bananaBool = true;
	player2.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    abf8:	81 fd       	sbrc	r24, 1
    abfa:	03 c0       	rjmp	.+6      	; 0xac02 <moveplayer2+0xd8>
player2.ypressed = false;
    abfc:	10 92 cf 09 	sts	0x09CF, r1	; 0x8009cf <player2+0x17>
    ac00:	16 c0       	rjmp	.+44     	; 0xac2e <moveplayer2+0x104>
};
if ( joy&BTN_Y) {
	if(player2.mushroomCount > 0 && player2.ypressed == false)
    ac02:	80 91 be 09 	lds	r24, 0x09BE	; 0x8009be <player2+0x6>
    ac06:	90 91 bf 09 	lds	r25, 0x09BF	; 0x8009bf <player2+0x7>
    ac0a:	18 16       	cp	r1, r24
    ac0c:	19 06       	cpc	r1, r25
    ac0e:	7c f4       	brge	.+30     	; 0xac2e <moveplayer2+0x104>
    ac10:	20 91 cf 09 	lds	r18, 0x09CF	; 0x8009cf <player2+0x17>
    ac14:	21 11       	cpse	r18, r1
    ac16:	0b c0       	rjmp	.+22     	; 0xac2e <moveplayer2+0x104>
	{
	player2.mushroomCount = player2.mushroomCount - 1;
    ac18:	01 97       	sbiw	r24, 0x01	; 1
    ac1a:	90 93 bf 09 	sts	0x09BF, r25	; 0x8009bf <player2+0x7>
    ac1e:	80 93 be 09 	sts	0x09BE, r24	; 0x8009be <player2+0x6>
	player2.ximpulse = 10;
    ac22:	8a e0       	ldi	r24, 0x0A	; 10
    ac24:	80 93 ca 09 	sts	0x09CA, r24	; 0x8009ca <player2+0x12>
	player2.ypressed = true;
    ac28:	81 e0       	ldi	r24, 0x01	; 1
    ac2a:	80 93 cf 09 	sts	0x09CF, r24	; 0x8009cf <player2+0x17>
	};
}; 


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    ac2e:	45 2b       	or	r20, r21
    ac30:	11 f1       	breq	.+68     	; 0xac76 <moveplayer2+0x14c>
    ac32:	80 91 c9 09 	lds	r24, 0x09C9	; 0x8009c9 <player2+0x11>
    ac36:	88 23       	and	r24, r24
    ac38:	f1 f0       	breq	.+60     	; 0xac76 <moveplayer2+0x14c>
    ac3a:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <player2+0x15>
    ac3e:	88 23       	and	r24, r24
    ac40:	d1 f0       	breq	.+52     	; 0xac76 <moveplayer2+0x14c>
    ac42:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <player2+0xa>
    ac46:	81 11       	cpse	r24, r1
    ac48:	16 c0       	rjmp	.+44     	; 0xac76 <moveplayer2+0x14c>
player2.action = 'j';
    ac4a:	8a e6       	ldi	r24, 0x6A	; 106
    ac4c:	80 93 c5 09 	sts	0x09C5, r24	; 0x8009c5 <player2+0xd>
player2.yimpulse = 0;
    ac50:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <player2+0x13>
player2.jumping = true;
    ac54:	81 e0       	ldi	r24, 0x01	; 1
    ac56:	80 93 cc 09 	sts	0x09CC, r24	; 0x8009cc <player2+0x14>
player2.touchground = false;
    ac5a:	10 92 c9 09 	sts	0x09C9, r1	; 0x8009c9 <player2+0x11>
player2.jumpreleased = false;
    ac5e:	10 92 cd 09 	sts	0x09CD, r1	; 0x8009cd <player2+0x15>
player2.jumpcounter++ ; 
    ac62:	80 91 d1 09 	lds	r24, 0x09D1	; 0x8009d1 <player2+0x19>
    ac66:	8f 5f       	subi	r24, 0xFF	; 255
    ac68:	80 93 d1 09 	sts	0x09D1, r24	; 0x8009d1 <player2+0x19>
TriggerFx(4,0xff,true);
    ac6c:	41 e0       	ldi	r20, 0x01	; 1
    ac6e:	6f ef       	ldi	r22, 0xFF	; 255
    ac70:	84 e0       	ldi	r24, 0x04	; 4
    ac72:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
};
};

oldx = player2.x;
    ac76:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <player2>
    ac7a:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <player2+0x1>
    ac7e:	30 93 9b 09 	sts	0x099B, r19	; 0x80099b <oldx+0x1>
    ac82:	20 93 9a 09 	sts	0x099A, r18	; 0x80099a <oldx>
oldy = player2.y;
    ac86:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ac8a:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ac8e:	70 93 23 0a 	sts	0x0A23, r23	; 0x800a23 <oldy+0x1>
    ac92:	60 93 22 0a 	sts	0x0A22, r22	; 0x800a22 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    ac96:	80 91 d1 09 	lds	r24, 0x09D1	; 0x8009d1 <player2+0x19>
    ac9a:	9f ef       	ldi	r25, 0xFF	; 255
    ac9c:	98 0f       	add	r25, r24
    ac9e:	99 31       	cpi	r25, 0x19	; 25
    aca0:	18 f4       	brcc	.+6      	; 0xaca8 <moveplayer2+0x17e>
    aca2:	9c ef       	ldi	r25, 0xFC	; 252
    aca4:	90 93 cb 09 	sts	0x09CB, r25	; 0x8009cb <player2+0x13>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    aca8:	96 ee       	ldi	r25, 0xE6	; 230
    acaa:	98 0f       	add	r25, r24
    acac:	9b 30       	cpi	r25, 0x0B	; 11
    acae:	18 f4       	brcc	.+6      	; 0xacb6 <moveplayer2+0x18c>
    acb0:	9d ef       	ldi	r25, 0xFD	; 253
    acb2:	90 93 cb 09 	sts	0x09CB, r25	; 0x8009cb <player2+0x13>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    acb6:	9b ed       	ldi	r25, 0xDB	; 219
    acb8:	98 0f       	add	r25, r24
    acba:	94 30       	cpi	r25, 0x04	; 4
    acbc:	18 f4       	brcc	.+6      	; 0xacc4 <moveplayer2+0x19a>
    acbe:	9e ef       	ldi	r25, 0xFE	; 254
    acc0:	90 93 cb 09 	sts	0x09CB, r25	; 0x8009cb <player2+0x13>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    acc4:	97 ed       	ldi	r25, 0xD7	; 215
    acc6:	98 0f       	add	r25, r24
    acc8:	96 30       	cpi	r25, 0x06	; 6
    acca:	20 f4       	brcc	.+8      	; 0xacd4 <moveplayer2+0x1aa>
    accc:	9f ef       	ldi	r25, 0xFF	; 255
    acce:	90 93 cb 09 	sts	0x09CB, r25	; 0x8009cb <player2+0x13>
    acd2:	02 c0       	rjmp	.+4      	; 0xacd8 <moveplayer2+0x1ae>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    acd4:	88 23       	and	r24, r24
    acd6:	19 f0       	breq	.+6      	; 0xacde <moveplayer2+0x1b4>
    acd8:	8f 5f       	subi	r24, 0xFF	; 255
    acda:	80 93 d1 09 	sts	0x09D1, r24	; 0x8009d1 <player2+0x19>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    acde:	80 91 d1 09 	lds	r24, 0x09D1	; 0x8009d1 <player2+0x19>
    ace2:	8f 32       	cpi	r24, 0x2F	; 47
    ace4:	10 f0       	brcs	.+4      	; 0xacea <moveplayer2+0x1c0>
    ace6:	10 92 d1 09 	sts	0x09D1, r1	; 0x8009d1 <player2+0x19>
player2.x = player2.x + player2.ximpulse;
    acea:	80 91 ca 09 	lds	r24, 0x09CA	; 0x8009ca <player2+0x12>
    acee:	a9 01       	movw	r20, r18
    acf0:	48 0f       	add	r20, r24
    acf2:	51 1d       	adc	r21, r1
    acf4:	87 fd       	sbrc	r24, 7
    acf6:	5a 95       	dec	r21
    acf8:	ca 01       	movw	r24, r20
    acfa:	50 93 b9 09 	sts	0x09B9, r21	; 0x8009b9 <player2+0x1>
    acfe:	40 93 b8 09 	sts	0x09B8, r20	; 0x8009b8 <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    ad02:	40 91 cb 09 	lds	r20, 0x09CB	; 0x8009cb <player2+0x13>
    ad06:	64 0f       	add	r22, r20
    ad08:	71 1d       	adc	r23, r1
    ad0a:	47 fd       	sbrc	r20, 7
    ad0c:	7a 95       	dec	r23
    ad0e:	6e 5f       	subi	r22, 0xFE	; 254
    ad10:	7f 4f       	sbci	r23, 0xFF	; 255
    ad12:	70 93 bb 09 	sts	0x09BB, r23	; 0x8009bb <player2+0x3>
    ad16:	60 93 ba 09 	sts	0x09BA, r22	; 0x8009ba <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    ad1a:	28 17       	cp	r18, r24
    ad1c:	39 07       	cpc	r19, r25
    ad1e:	3c f4       	brge	.+14     	; 0xad2e <moveplayer2+0x204>
    ad20:	20 91 d2 09 	lds	r18, 0x09D2	; 0x8009d2 <player2+0x1a>
    ad24:	2f 5f       	subi	r18, 0xFF	; 255
    ad26:	20 93 d2 09 	sts	0x09D2, r18	; 0x8009d2 <player2+0x1a>
    ad2a:	22 e7       	ldi	r18, 0x72	; 114
    ad2c:	09 c0       	rjmp	.+18     	; 0xad40 <moveplayer2+0x216>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    ad2e:	82 17       	cp	r24, r18
    ad30:	93 07       	cpc	r25, r19
    ad32:	4c f4       	brge	.+18     	; 0xad46 <moveplayer2+0x21c>
    ad34:	20 91 d2 09 	lds	r18, 0x09D2	; 0x8009d2 <player2+0x1a>
    ad38:	2f 5f       	subi	r18, 0xFF	; 255
    ad3a:	20 93 d2 09 	sts	0x09D2, r18	; 0x8009d2 <player2+0x1a>
    ad3e:	2c e6       	ldi	r18, 0x6C	; 108
    ad40:	20 93 c6 09 	sts	0x09C6, r18	; 0x8009c6 <player2+0xe>
    ad44:	05 c0       	rjmp	.+10     	; 0xad50 <moveplayer2+0x226>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    ad46:	28 17       	cp	r18, r24
    ad48:	39 07       	cpc	r19, r25
    ad4a:	11 f4       	brne	.+4      	; 0xad50 <moveplayer2+0x226>
    ad4c:	10 92 d2 09 	sts	0x09D2, r1	; 0x8009d2 <player2+0x1a>
if (player2.aniframe > 0 ) player2.aniframe++;
    ad50:	20 91 d2 09 	lds	r18, 0x09D2	; 0x8009d2 <player2+0x1a>
    ad54:	22 23       	and	r18, r18
    ad56:	19 f0       	breq	.+6      	; 0xad5e <moveplayer2+0x234>
    ad58:	2f 5f       	subi	r18, 0xFF	; 255
    ad5a:	20 93 d2 09 	sts	0x09D2, r18	; 0x8009d2 <player2+0x1a>
if (player2.aniframe>24) player2.aniframe = 1;
    ad5e:	20 91 d2 09 	lds	r18, 0x09D2	; 0x8009d2 <player2+0x1a>
    ad62:	29 31       	cpi	r18, 0x19	; 25
    ad64:	18 f0       	brcs	.+6      	; 0xad6c <moveplayer2+0x242>
    ad66:	21 e0       	ldi	r18, 0x01	; 1
    ad68:	20 93 d2 09 	sts	0x09D2, r18	; 0x8009d2 <player2+0x1a>
if(checkBanana(player2.x + 4, player2.y ,1) == 1)
    ad6c:	41 e0       	ldi	r20, 0x01	; 1
    ad6e:	50 e0       	ldi	r21, 0x00	; 0
    ad70:	04 96       	adiw	r24, 0x04	; 4
    ad72:	0e 94 b7 51 	call	0xa36e	; 0xa36e <checkBanana>
    ad76:	01 97       	sbiw	r24, 0x01	; 1
    ad78:	19 f4       	brne	.+6      	; 0xad80 <moveplayer2+0x256>
{
    player2.stuck = true;
    ad7a:	81 e0       	ldi	r24, 0x01	; 1
    ad7c:	80 93 c2 09 	sts	0x09C2, r24	; 0x8009c2 <player2+0xa>
} 
if(player2.bananaBool == true)
    ad80:	80 91 d0 09 	lds	r24, 0x09D0	; 0x8009d0 <player2+0x18>
    ad84:	88 23       	and	r24, r24
    ad86:	69 f0       	breq	.+26     	; 0xada2 <moveplayer2+0x278>
{
makeBanana2(player2.x + 4, player2.y,1);
    ad88:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ad8c:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ad90:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    ad94:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    ad98:	41 e0       	ldi	r20, 0x01	; 1
    ad9a:	50 e0       	ldi	r21, 0x00	; 0
    ad9c:	04 96       	adiw	r24, 0x04	; 4
    ad9e:	0e 94 59 51 	call	0xa2b2	; 0xa2b2 <makeBanana2>
player2.bananaBool == false;
}
checkcollide( player2.x, player2.y - 4 ,1);
    ada2:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ada6:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    adaa:	64 50       	subi	r22, 0x04	; 4
    adac:	71 09       	sbc	r23, r1
    adae:	41 e0       	ldi	r20, 0x01	; 1
    adb0:	50 e0       	ldi	r21, 0x00	; 0
    adb2:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    adb6:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    adba:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3);
    adbe:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    adc2:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    adc6:	64 50       	subi	r22, 0x04	; 4
    adc8:	71 09       	sbc	r23, r1
    adca:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    adce:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    add2:	43 e0       	ldi	r20, 0x03	; 3
    add4:	50 e0       	ldi	r21, 0x00	; 0
    add6:	03 97       	sbiw	r24, 0x03	; 3
    add8:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3);
    addc:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ade0:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ade4:	64 50       	subi	r22, 0x04	; 4
    ade6:	71 09       	sbc	r23, r1
    ade8:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    adec:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    adf0:	43 e0       	ldi	r20, 0x03	; 3
    adf2:	50 e0       	ldi	r21, 0x00	; 0
    adf4:	04 96       	adiw	r24, 0x04	; 4
    adf6:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
    adfa:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    adfe:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ae02:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    ae06:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    ae0a:	68 17       	cp	r22, r24
    ae0c:	79 07       	cpc	r23, r25
    ae0e:	54 f4       	brge	.+20     	; 0xae24 <moveplayer2+0x2fa>
    ae10:	66 51       	subi	r22, 0x16	; 22
    ae12:	71 09       	sbc	r23, r1
    ae14:	42 e0       	ldi	r20, 0x02	; 2
    ae16:	50 e0       	ldi	r21, 0x00	; 0
    ae18:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    ae1c:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    ae20:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    ae24:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ae28:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ae2c:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    ae30:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    ae34:	86 17       	cp	r24, r22
    ae36:	97 07       	cpc	r25, r23
    ae38:	8c f5       	brge	.+98     	; 0xae9c <moveplayer2+0x372>
    ae3a:	10 92 c9 09 	sts	0x09C9, r1	; 0x8009c9 <player2+0x11>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    ae3e:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    ae42:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    ae46:	40 e0       	ldi	r20, 0x00	; 0
    ae48:	50 e0       	ldi	r21, 0x00	; 0
    ae4a:	03 97       	sbiw	r24, 0x03	; 3
    ae4c:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    ae50:	80 ff       	sbrs	r24, 0
    ae52:	15 c0       	rjmp	.+42     	; 0xae7e <moveplayer2+0x354>
    ae54:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <player2+0x2>
    ae58:	90 91 bb 09 	lds	r25, 0x09BB	; 0x8009bb <player2+0x3>
    ae5c:	97 fd       	sbrc	r25, 7
    ae5e:	0f 96       	adiw	r24, 0x0f	; 15
    ae60:	80 7f       	andi	r24, 0xF0	; 240
    ae62:	01 97       	sbiw	r24, 0x01	; 1
    ae64:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <player2+0x3>
    ae68:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <player2+0x2>
    ae6c:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <player2+0x14>
    ae70:	81 e0       	ldi	r24, 0x01	; 1
    ae72:	80 93 c9 09 	sts	0x09C9, r24	; 0x8009c9 <player2+0x11>
    ae76:	87 e7       	ldi	r24, 0x77	; 119
    ae78:	80 93 c5 09 	sts	0x09C5, r24	; 0x8009c5 <player2+0xd>
    ae7c:	0f c0       	rjmp	.+30     	; 0xae9c <moveplayer2+0x372>
    ae7e:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    ae82:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    ae86:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    ae8a:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    ae8e:	40 e0       	ldi	r20, 0x00	; 0
    ae90:	50 e0       	ldi	r21, 0x00	; 0
    ae92:	04 96       	adiw	r24, 0x04	; 4
    ae94:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    ae98:	80 fd       	sbrc	r24, 0
    ae9a:	dc cf       	rjmp	.-72     	; 0xae54 <moveplayer2+0x32a>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    ae9c:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    aea0:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    aea4:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    aea8:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    aeac:	68 17       	cp	r22, r24
    aeae:	79 07       	cpc	r23, r25
    aeb0:	74 f5       	brge	.+92     	; 0xaf0e <moveplayer2+0x3e4>
    aeb2:	65 51       	subi	r22, 0x15	; 21
    aeb4:	71 09       	sbc	r23, r1
    aeb6:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    aeba:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    aebe:	40 e0       	ldi	r20, 0x00	; 0
    aec0:	50 e0       	ldi	r21, 0x00	; 0
    aec2:	03 97       	sbiw	r24, 0x03	; 3
    aec4:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    aec8:	80 ff       	sbrs	r24, 0
    aeca:	10 c0       	rjmp	.+32     	; 0xaeec <moveplayer2+0x3c2>
    aecc:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    aed0:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    aed4:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <player2+0x3>
    aed8:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <player2+0x2>
    aedc:	10 92 d1 09 	sts	0x09D1, r1	; 0x8009d1 <player2+0x19>
                                                                                                                                  TriggerFx(5,0xff,true);
    aee0:	41 e0       	ldi	r20, 0x01	; 1
    aee2:	6f ef       	ldi	r22, 0xFF	; 255
    aee4:	85 e0       	ldi	r24, 0x05	; 5
    aee6:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    aeea:	11 c0       	rjmp	.+34     	; 0xaf0e <moveplayer2+0x3e4>
checkcollide( player2.x +4, player2.y - 4 ,3);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    aeec:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    aef0:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    aef4:	65 51       	subi	r22, 0x15	; 21
    aef6:	71 09       	sbc	r23, r1
    aef8:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    aefc:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    af00:	40 e0       	ldi	r20, 0x00	; 0
    af02:	50 e0       	ldi	r21, 0x00	; 0
    af04:	04 96       	adiw	r24, 0x04	; 4
    af06:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    af0a:	80 fd       	sbrc	r24, 0
    af0c:	df cf       	rjmp	.-66     	; 0xaecc <moveplayer2+0x3a2>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0 )&1)  player2.x = oldx;  
    af0e:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    af12:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    af16:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    af1a:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    af1e:	28 17       	cp	r18, r24
    af20:	39 07       	cpc	r19, r25
    af22:	3c f5       	brge	.+78     	; 0xaf72 <moveplayer2+0x448>
    af24:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    af28:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    af2c:	63 50       	subi	r22, 0x03	; 3
    af2e:	71 09       	sbc	r23, r1
    af30:	40 e0       	ldi	r20, 0x00	; 0
    af32:	50 e0       	ldi	r21, 0x00	; 0
    af34:	05 96       	adiw	r24, 0x05	; 5
    af36:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    af3a:	80 ff       	sbrs	r24, 0
    af3c:	09 c0       	rjmp	.+18     	; 0xaf50 <moveplayer2+0x426>
    af3e:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <oldx>
    af42:	90 91 9b 09 	lds	r25, 0x099B	; 0x80099b <oldx+0x1>
    af46:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    af4a:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
    af4e:	11 c0       	rjmp	.+34     	; 0xaf72 <moveplayer2+0x448>
    af50:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    af54:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    af58:	64 51       	subi	r22, 0x14	; 20
    af5a:	71 09       	sbc	r23, r1
    af5c:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    af60:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    af64:	40 e0       	ldi	r20, 0x00	; 0
    af66:	50 e0       	ldi	r21, 0x00	; 0
    af68:	05 96       	adiw	r24, 0x05	; 5
    af6a:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    af6e:	80 fd       	sbrc	r24, 0
    af70:	e6 cf       	rjmp	.-52     	; 0xaf3e <moveplayer2+0x414>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0 )&1)  player2.x = oldx; 
    af72:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    af76:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    af7a:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    af7e:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    af82:	82 17       	cp	r24, r18
    af84:	93 07       	cpc	r25, r19
    af86:	3c f5       	brge	.+78     	; 0xafd6 <moveplayer2+0x4ac>
    af88:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    af8c:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    af90:	63 50       	subi	r22, 0x03	; 3
    af92:	71 09       	sbc	r23, r1
    af94:	40 e0       	ldi	r20, 0x00	; 0
    af96:	50 e0       	ldi	r21, 0x00	; 0
    af98:	04 97       	sbiw	r24, 0x04	; 4
    af9a:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    af9e:	80 ff       	sbrs	r24, 0
    afa0:	09 c0       	rjmp	.+18     	; 0xafb4 <moveplayer2+0x48a>
    afa2:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <oldx>
    afa6:	90 91 9b 09 	lds	r25, 0x099B	; 0x80099b <oldx+0x1>
    afaa:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    afae:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
    afb2:	11 c0       	rjmp	.+34     	; 0xafd6 <moveplayer2+0x4ac>
    afb4:	60 91 ba 09 	lds	r22, 0x09BA	; 0x8009ba <player2+0x2>
    afb8:	70 91 bb 09 	lds	r23, 0x09BB	; 0x8009bb <player2+0x3>
    afbc:	64 51       	subi	r22, 0x14	; 20
    afbe:	71 09       	sbc	r23, r1
    afc0:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    afc4:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    afc8:	40 e0       	ldi	r20, 0x00	; 0
    afca:	50 e0       	ldi	r21, 0x00	; 0
    afcc:	04 97       	sbiw	r24, 0x04	; 4
    afce:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    afd2:	80 fd       	sbrc	r24, 0
    afd4:	e6 cf       	rjmp	.-52     	; 0xafa2 <moveplayer2+0x478>
//checkmonster(player2.x +4, player2.y -19,0 );
//checkmonster(player2.x -3, player2.y -3 ,0);
//checkmonster(player2.x -3, player2.y -19 ,0);  
//checkmonster(player2.x , player2.y -22 ,0);
//if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,0 );
player2.ximpulse = 0;    
    afd6:	10 92 ca 09 	sts	0x09CA, r1	; 0x8009ca <player2+0x12>
player2.yimpulse = 0;
    afda:	10 92 cb 09 	sts	0x09CB, r1	; 0x8009cb <player2+0x13>
if ( player2.x < 8 ) player2.x = player.x;   // Increase time penalty herer
    afde:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    afe2:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    afe6:	08 97       	sbiw	r24, 0x08	; 8
    afe8:	44 f4       	brge	.+16     	; 0xaffa <moveplayer2+0x4d0>
    afea:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    afee:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    aff2:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    aff6:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
if ( player2.x > 232 ) player2.x = player.x;    
    affa:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    affe:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    b002:	89 3e       	cpi	r24, 0xE9	; 233
    b004:	91 05       	cpc	r25, r1
    b006:	b4 f0       	brlt	.+44     	; 0xb034 <moveplayer2+0x50a>
    b008:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b00c:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b010:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    b014:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
    b018:	08 95       	ret

if ( !(joy&BTN_B) ) {
player2.bpressed = false;
};
if ( joy&BTN_B && player2.touchground) {
	if(bananaCount > 0 && player2.bpressed == false)
    b01a:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <player2+0x16>
    b01e:	31 11       	cpse	r19, r1
    b020:	eb cd       	rjmp	.-1066   	; 0xabf8 <moveplayer2+0xce>
	{
	bananaCount = bananaCount - 1;
    b022:	21 50       	subi	r18, 0x01	; 1
    b024:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <bananaCount>
    player2.bananaBool = true;
    b028:	21 e0       	ldi	r18, 0x01	; 1
    b02a:	20 93 d0 09 	sts	0x09D0, r18	; 0x8009d0 <player2+0x18>
	player2.bpressed = true;
    b02e:	20 93 ce 09 	sts	0x09CE, r18	; 0x8009ce <player2+0x16>
    b032:	e2 cd       	rjmp	.-1084   	; 0xabf8 <moveplayer2+0xce>
    b034:	08 95       	ret

0000b036 <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b036:	cf 93       	push	r28
    b038:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b03a:	41 ea       	ldi	r20, 0xA1	; 161
    b03c:	56 e7       	ldi	r21, 0x76	; 118
    b03e:	60 e2       	ldi	r22, 0x20	; 32
    b040:	8c 2f       	mov	r24, r28
    b042:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    b046:	cf 5f       	subi	r28, 0xFF	; 255
    b048:	c0 32       	cpi	r28, 0x20	; 32
    b04a:	b9 f7       	brne	.-18     	; 0xb03a <setheadline+0x4>
}
    b04c:	cf 91       	pop	r28
    b04e:	08 95       	ret

0000b050 <drawmonster>:

void drawmonster()
{
    b050:	0f 93       	push	r16
if (owl.onscreen)
    b052:	80 91 dd 09 	lds	r24, 0x09DD	; 0x8009dd <owl+0x9>
    b056:	88 23       	and	r24, r24
    b058:	89 f1       	breq	.+98     	; 0xb0bc <drawmonster+0x6c>
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
    b05a:	80 91 de 09 	lds	r24, 0x09DE	; 0x8009de <owl+0xa>
    b05e:	81 11       	cpse	r24, r1
    b060:	0e c0       	rjmp	.+28     	; 0xb07e <drawmonster+0x2e>
    b062:	40 e0       	ldi	r20, 0x00	; 0
    b064:	6b e0       	ldi	r22, 0x0B	; 11
    b066:	77 e4       	ldi	r23, 0x47	; 71
    b068:	86 e0       	ldi	r24, 0x06	; 6
    b06a:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
    b06e:	02 e0       	ldi	r16, 0x02	; 2
    b070:	22 e0       	ldi	r18, 0x02	; 2
    b072:	40 91 d6 09 	lds	r20, 0x09D6	; 0x8009d6 <owl+0x2>
    b076:	60 91 d4 09 	lds	r22, 0x09D4	; 0x8009d4 <owl>
    b07a:	86 e0       	ldi	r24, 0x06	; 6
    b07c:	34 c0       	rjmp	.+104    	; 0xb0e6 <drawmonster+0x96>
if (aniframe < 10 ) 
    b07e:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <aniframe>
    b082:	8a 30       	cpi	r24, 0x0A	; 10
    b084:	58 f4       	brcc	.+22     	; 0xb09c <drawmonster+0x4c>
{
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b086:	02 e0       	ldi	r16, 0x02	; 2
    b088:	22 e0       	ldi	r18, 0x02	; 2
    b08a:	40 91 d6 09 	lds	r20, 0x09D6	; 0x8009d6 <owl+0x2>
    b08e:	60 91 d4 09 	lds	r22, 0x09D4	; 0x8009d4 <owl>
    b092:	86 e0       	ldi	r24, 0x06	; 6
    b094:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    b098:	40 e0       	ldi	r20, 0x00	; 0
    b09a:	0b c0       	rjmp	.+22     	; 0xb0b2 <drawmonster+0x62>
}
else
{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b09c:	60 91 d4 09 	lds	r22, 0x09D4	; 0x8009d4 <owl>
    b0a0:	61 50       	subi	r22, 0x01	; 1
    b0a2:	02 e0       	ldi	r16, 0x02	; 2
    b0a4:	22 e0       	ldi	r18, 0x02	; 2
    b0a6:	40 91 d6 09 	lds	r20, 0x09D6	; 0x8009d6 <owl+0x2>
    b0aa:	86 e0       	ldi	r24, 0x06	; 6
    b0ac:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    b0b0:	41 e0       	ldi	r20, 0x01	; 1
    b0b2:	61 e1       	ldi	r22, 0x11	; 17
    b0b4:	77 e4       	ldi	r23, 0x47	; 71
    b0b6:	86 e0       	ldi	r24, 0x06	; 6
    b0b8:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
};
};
    
if (blob.onscreen)
    b0bc:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <blob+0x9>
    b0c0:	88 23       	and	r24, r24
    b0c2:	69 f1       	breq	.+90     	; 0xb11e <drawmonster+0xce>
{
if (!blob.alive) { MapSprite2(blobIndex , blob1 ,0);  MoveSprite(blobIndex ,blob.x, blob.y  ,2 ,2);return;}; 
    b0c4:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <blob+0xa>
    b0c8:	81 11       	cpse	r24, r1
    b0ca:	10 c0       	rjmp	.+32     	; 0xb0ec <drawmonster+0x9c>
    b0cc:	40 e0       	ldi	r20, 0x00	; 0
    b0ce:	63 ef       	ldi	r22, 0xF3	; 243
    b0d0:	76 e4       	ldi	r23, 0x46	; 70
    b0d2:	88 e0       	ldi	r24, 0x08	; 8
    b0d4:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
    b0d8:	02 e0       	ldi	r16, 0x02	; 2
    b0da:	22 e0       	ldi	r18, 0x02	; 2
    b0dc:	40 91 5a 09 	lds	r20, 0x095A	; 0x80095a <blob+0x2>
    b0e0:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob>
    b0e4:	88 e0       	ldi	r24, 0x08	; 8
    b0e6:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    b0ea:	19 c0       	rjmp	.+50     	; 0xb11e <drawmonster+0xce>
if (aniframe < 10 ) 
    b0ec:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <aniframe>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b0f0:	02 e0       	ldi	r16, 0x02	; 2
    b0f2:	22 e0       	ldi	r18, 0x02	; 2
    b0f4:	40 91 5a 09 	lds	r20, 0x095A	; 0x80095a <blob+0x2>
    b0f8:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob>
};
    
if (blob.onscreen)
{
if (!blob.alive) { MapSprite2(blobIndex , blob1 ,0);  MoveSprite(blobIndex ,blob.x, blob.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    b0fc:	8a 30       	cpi	r24, 0x0A	; 10
    b0fe:	28 f4       	brcc	.+10     	; 0xb10a <drawmonster+0xba>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b100:	86 e0       	ldi	r24, 0x06	; 6
    b102:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,0); 
    b106:	40 e0       	ldi	r20, 0x00	; 0
    b108:	04 c0       	rjmp	.+8      	; 0xb112 <drawmonster+0xc2>
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    b10a:	86 e0       	ldi	r24, 0x06	; 6
    b10c:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,1); 
    b110:	41 e0       	ldi	r20, 0x01	; 1
    b112:	69 ef       	ldi	r22, 0xF9	; 249
    b114:	76 e4       	ldi	r23, 0x46	; 70
    b116:	86 e0       	ldi	r24, 0x06	; 6
};
};    
   
}
    b118:	0f 91       	pop	r16
    MapSprite2(owlIndex ,blob0 ,0); 
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    MapSprite2(owlIndex ,blob0 ,1); 
    b11a:	0c 94 48 4d 	jmp	0x9a90	; 0x9a90 <MapSprite2>
};
};    
   
}
    b11e:	0f 91       	pop	r16
    b120:	08 95       	ret

0000b122 <movemonster>:

void movemonster()
{
    b122:	0f 93       	push	r16
if (owl.onscreen) 
    b124:	80 91 dd 09 	lds	r24, 0x09DD	; 0x8009dd <owl+0x9>
    b128:	88 23       	and	r24, r24
    b12a:	09 f4       	brne	.+2      	; 0xb12e <movemonster+0xc>
    b12c:	c1 c0       	rjmp	.+386    	; 0xb2b0 <movemonster+0x18e>
{
 
    owl.x = owl.x2 >> 2;
    b12e:	80 91 d8 09 	lds	r24, 0x09D8	; 0x8009d8 <owl+0x4>
    b132:	90 91 d9 09 	lds	r25, 0x09D9	; 0x8009d9 <owl+0x5>
    oldx = owl.x;
    b136:	9c 01       	movw	r18, r24
    b138:	35 95       	asr	r19
    b13a:	27 95       	ror	r18
    b13c:	35 95       	asr	r19
    b13e:	27 95       	ror	r18
    b140:	30 93 9b 09 	sts	0x099B, r19	; 0x80099b <oldx+0x1>
    b144:	20 93 9a 09 	sts	0x099A, r18	; 0x80099a <oldx>
    oldy = owl.y; 
    b148:	20 91 d6 09 	lds	r18, 0x09D6	; 0x8009d6 <owl+0x2>
    b14c:	30 91 d7 09 	lds	r19, 0x09D7	; 0x8009d7 <owl+0x3>
    b150:	30 93 23 0a 	sts	0x0A23, r19	; 0x800a23 <oldy+0x1>
    b154:	20 93 22 0a 	sts	0x0A22, r18	; 0x800a22 <oldy>
    oldx2 = owl.x2;
    b158:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <oldx2+0x1>
    b15c:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    b160:	b9 01       	movw	r22, r18
    b162:	6e 5f       	subi	r22, 0xFE	; 254
    b164:	7f 4f       	sbci	r23, 0xFF	; 255
    b166:	40 91 dc 09 	lds	r20, 0x09DC	; 0x8009dc <owl+0x8>
    b16a:	64 0f       	add	r22, r20
    b16c:	71 1d       	adc	r23, r1
    b16e:	47 fd       	sbrc	r20, 7
    b170:	7a 95       	dec	r23
    b172:	70 93 d7 09 	sts	0x09D7, r23	; 0x8009d7 <owl+0x3>
    b176:	60 93 d6 09 	sts	0x09D6, r22	; 0x8009d6 <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    b17a:	40 91 db 09 	lds	r20, 0x09DB	; 0x8009db <owl+0x7>
    b17e:	84 0f       	add	r24, r20
    b180:	91 1d       	adc	r25, r1
    b182:	47 fd       	sbrc	r20, 7
    b184:	9a 95       	dec	r25
    b186:	90 93 d9 09 	sts	0x09D9, r25	; 0x8009d9 <owl+0x5>
    b18a:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <owl+0x4>
    owl.x = owl.x2 >> 2;
    b18e:	95 95       	asr	r25
    b190:	87 95       	ror	r24
    b192:	95 95       	asr	r25
    b194:	87 95       	ror	r24
    b196:	90 93 d5 09 	sts	0x09D5, r25	; 0x8009d5 <owl+0x1>
    b19a:	80 93 d4 09 	sts	0x09D4, r24	; 0x8009d4 <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    b19e:	26 17       	cp	r18, r22
    b1a0:	37 07       	cpc	r19, r23
    b1a2:	34 f5       	brge	.+76     	; 0xb1f0 <movemonster+0xce>
    b1a4:	60 5f       	subi	r22, 0xF0	; 240
    b1a6:	7f 4f       	sbci	r23, 0xFF	; 255
    b1a8:	40 e0       	ldi	r20, 0x00	; 0
    b1aa:	50 e0       	ldi	r21, 0x00	; 0
    b1ac:	03 96       	adiw	r24, 0x03	; 3
    b1ae:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b1b2:	80 ff       	sbrs	r24, 0
    b1b4:	0c c0       	rjmp	.+24     	; 0xb1ce <movemonster+0xac>
    b1b6:	80 91 d6 09 	lds	r24, 0x09D6	; 0x8009d6 <owl+0x2>
    b1ba:	90 91 d7 09 	lds	r25, 0x09D7	; 0x8009d7 <owl+0x3>
    b1be:	97 fd       	sbrc	r25, 7
    b1c0:	0f 96       	adiw	r24, 0x0f	; 15
    b1c2:	80 7f       	andi	r24, 0xF0	; 240
    b1c4:	90 93 d7 09 	sts	0x09D7, r25	; 0x8009d7 <owl+0x3>
    b1c8:	80 93 d6 09 	sts	0x09D6, r24	; 0x8009d6 <owl+0x2>
    b1cc:	11 c0       	rjmp	.+34     	; 0xb1f0 <movemonster+0xce>
    b1ce:	60 91 d6 09 	lds	r22, 0x09D6	; 0x8009d6 <owl+0x2>
    b1d2:	70 91 d7 09 	lds	r23, 0x09D7	; 0x8009d7 <owl+0x3>
    b1d6:	60 5f       	subi	r22, 0xF0	; 240
    b1d8:	7f 4f       	sbci	r23, 0xFF	; 255
    b1da:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    b1de:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    b1e2:	40 e0       	ldi	r20, 0x00	; 0
    b1e4:	50 e0       	ldi	r21, 0x00	; 0
    b1e6:	0c 96       	adiw	r24, 0x0c	; 12
    b1e8:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b1ec:	80 fd       	sbrc	r24, 0
    b1ee:	e3 cf       	rjmp	.-58     	; 0xb1b6 <movemonster+0x94>
    if (owl.x > oldx ) if (checkcollide( owl.x + 12, owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    b1f0:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    b1f4:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    b1f8:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    b1fc:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    b200:	28 17       	cp	r18, r24
    b202:	39 07       	cpc	r19, r25
    b204:	c4 f4       	brge	.+48     	; 0xb236 <movemonster+0x114>
    b206:	60 91 d6 09 	lds	r22, 0x09D6	; 0x8009d6 <owl+0x2>
    b20a:	70 91 d7 09 	lds	r23, 0x09D7	; 0x8009d7 <owl+0x3>
    b20e:	68 5f       	subi	r22, 0xF8	; 248
    b210:	7f 4f       	sbci	r23, 0xFF	; 255
    b212:	40 e0       	ldi	r20, 0x00	; 0
    b214:	50 e0       	ldi	r21, 0x00	; 0
    b216:	0c 96       	adiw	r24, 0x0c	; 12
    b218:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b21c:	80 ff       	sbrs	r24, 0
    b21e:	0b c0       	rjmp	.+22     	; 0xb236 <movemonster+0x114>
    b220:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <oldx2>
    b224:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <oldx2+0x1>
    b228:	90 93 d9 09 	sts	0x09D9, r25	; 0x8009d9 <owl+0x5>
    b22c:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <owl+0x4>
    b230:	8f ef       	ldi	r24, 0xFF	; 255
    b232:	80 93 db 09 	sts	0x09DB, r24	; 0x8009db <owl+0x7>
    if (owl.x < oldx ) if (checkcollide( owl.x + 2 , owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    b236:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    b23a:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    b23e:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    b242:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    b246:	82 17       	cp	r24, r18
    b248:	93 07       	cpc	r25, r19
    b24a:	c4 f4       	brge	.+48     	; 0xb27c <movemonster+0x15a>
    b24c:	60 91 d6 09 	lds	r22, 0x09D6	; 0x8009d6 <owl+0x2>
    b250:	70 91 d7 09 	lds	r23, 0x09D7	; 0x8009d7 <owl+0x3>
    b254:	68 5f       	subi	r22, 0xF8	; 248
    b256:	7f 4f       	sbci	r23, 0xFF	; 255
    b258:	40 e0       	ldi	r20, 0x00	; 0
    b25a:	50 e0       	ldi	r21, 0x00	; 0
    b25c:	02 96       	adiw	r24, 0x02	; 2
    b25e:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b262:	80 ff       	sbrs	r24, 0
    b264:	0b c0       	rjmp	.+22     	; 0xb27c <movemonster+0x15a>
    b266:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <oldx2>
    b26a:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <oldx2+0x1>
    b26e:	90 93 d9 09 	sts	0x09D9, r25	; 0x8009d9 <owl+0x5>
    b272:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <owl+0x4>
    b276:	81 e0       	ldi	r24, 0x01	; 1
    b278:	80 93 db 09 	sts	0x09DB, r24	; 0x8009db <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); owl.onscreen = false;};
    b27c:	80 91 d6 09 	lds	r24, 0x09D6	; 0x8009d6 <owl+0x2>
    b280:	90 91 d7 09 	lds	r25, 0x09D7	; 0x8009d7 <owl+0x3>
    b284:	81 3f       	cpi	r24, 0xF1	; 241
    b286:	91 05       	cpc	r25, r1
    b288:	40 f4       	brcc	.+16     	; 0xb29a <movemonster+0x178>
    b28a:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    b28e:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    b292:	40 96       	adiw	r24, 0x10	; 16
    b294:	81 30       	cpi	r24, 0x01	; 1
    b296:	91 40       	sbci	r25, 0x01	; 1
    b298:	58 f0       	brcs	.+22     	; 0xb2b0 <movemonster+0x18e>
    b29a:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <MonsteronScreen>
    b29e:	02 e0       	ldi	r16, 0x02	; 2
    b2a0:	22 e0       	ldi	r18, 0x02	; 2
    b2a2:	4c ee       	ldi	r20, 0xEC	; 236
    b2a4:	6c ee       	ldi	r22, 0xEC	; 236
    b2a6:	86 e0       	ldi	r24, 0x06	; 6
    b2a8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    b2ac:	10 92 dd 09 	sts	0x09DD, r1	; 0x8009dd <owl+0x9>
}
if (blob.onscreen) 
    b2b0:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <blob+0x9>
    b2b4:	88 23       	and	r24, r24
    b2b6:	09 f4       	brne	.+2      	; 0xb2ba <movemonster+0x198>
    b2b8:	c2 c0       	rjmp	.+388    	; 0xb43e <movemonster+0x31c>
{
     
    blob.x = blob.x2 >> 2;
    b2ba:	80 91 5c 09 	lds	r24, 0x095C	; 0x80095c <blob+0x4>
    b2be:	90 91 5d 09 	lds	r25, 0x095D	; 0x80095d <blob+0x5>
    oldx = blob.x;
    b2c2:	9c 01       	movw	r18, r24
    b2c4:	35 95       	asr	r19
    b2c6:	27 95       	ror	r18
    b2c8:	35 95       	asr	r19
    b2ca:	27 95       	ror	r18
    b2cc:	30 93 9b 09 	sts	0x099B, r19	; 0x80099b <oldx+0x1>
    b2d0:	20 93 9a 09 	sts	0x099A, r18	; 0x80099a <oldx>
    oldy = blob.y; 
    b2d4:	20 91 5a 09 	lds	r18, 0x095A	; 0x80095a <blob+0x2>
    b2d8:	30 91 5b 09 	lds	r19, 0x095B	; 0x80095b <blob+0x3>
    b2dc:	30 93 23 0a 	sts	0x0A23, r19	; 0x800a23 <oldy+0x1>
    b2e0:	20 93 22 0a 	sts	0x0A22, r18	; 0x800a22 <oldy>
    oldx2 = blob.x2;
    b2e4:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <oldx2+0x1>
    b2e8:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <oldx2>
    blob.y = blob.y  + gravity + blob.yimpulse;
    b2ec:	b9 01       	movw	r22, r18
    b2ee:	6e 5f       	subi	r22, 0xFE	; 254
    b2f0:	7f 4f       	sbci	r23, 0xFF	; 255
    b2f2:	40 91 60 09 	lds	r20, 0x0960	; 0x800960 <blob+0x8>
    b2f6:	64 0f       	add	r22, r20
    b2f8:	71 1d       	adc	r23, r1
    b2fa:	47 fd       	sbrc	r20, 7
    b2fc:	7a 95       	dec	r23
    b2fe:	70 93 5b 09 	sts	0x095B, r23	; 0x80095b <blob+0x3>
    b302:	60 93 5a 09 	sts	0x095A, r22	; 0x80095a <blob+0x2>
    blob.x2 = blob.x2 + blob.ximpulse;
    b306:	40 91 5f 09 	lds	r20, 0x095F	; 0x80095f <blob+0x7>
    b30a:	84 0f       	add	r24, r20
    b30c:	91 1d       	adc	r25, r1
    b30e:	47 fd       	sbrc	r20, 7
    b310:	9a 95       	dec	r25
    b312:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <blob+0x5>
    b316:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0x4>
    blob.x = blob.x2 >> 2;
    b31a:	95 95       	asr	r25
    b31c:	87 95       	ror	r24
    b31e:	95 95       	asr	r25
    b320:	87 95       	ror	r24
    b322:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <blob+0x1>
    b326:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <blob>
    if (blob.y > oldy ) if (checkcollide( blob.x + 3 , blob.y + 16,     0 )&1 || checkcollide( blob.x + 12 , blob.y +16    ,0 )&1) { blob.y = ( blob.y / 16 ) * 16   ;};
    b32a:	26 17       	cp	r18, r22
    b32c:	37 07       	cpc	r19, r23
    b32e:	34 f5       	brge	.+76     	; 0xb37c <movemonster+0x25a>
    b330:	60 5f       	subi	r22, 0xF0	; 240
    b332:	7f 4f       	sbci	r23, 0xFF	; 255
    b334:	40 e0       	ldi	r20, 0x00	; 0
    b336:	50 e0       	ldi	r21, 0x00	; 0
    b338:	03 96       	adiw	r24, 0x03	; 3
    b33a:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b33e:	80 ff       	sbrs	r24, 0
    b340:	0c c0       	rjmp	.+24     	; 0xb35a <movemonster+0x238>
    b342:	80 91 5a 09 	lds	r24, 0x095A	; 0x80095a <blob+0x2>
    b346:	90 91 5b 09 	lds	r25, 0x095B	; 0x80095b <blob+0x3>
    b34a:	97 fd       	sbrc	r25, 7
    b34c:	0f 96       	adiw	r24, 0x0f	; 15
    b34e:	80 7f       	andi	r24, 0xF0	; 240
    b350:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x3>
    b354:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x2>
    b358:	11 c0       	rjmp	.+34     	; 0xb37c <movemonster+0x25a>
    b35a:	60 91 5a 09 	lds	r22, 0x095A	; 0x80095a <blob+0x2>
    b35e:	70 91 5b 09 	lds	r23, 0x095B	; 0x80095b <blob+0x3>
    b362:	60 5f       	subi	r22, 0xF0	; 240
    b364:	7f 4f       	sbci	r23, 0xFF	; 255
    b366:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    b36a:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    b36e:	40 e0       	ldi	r20, 0x00	; 0
    b370:	50 e0       	ldi	r21, 0x00	; 0
    b372:	0c 96       	adiw	r24, 0x0c	; 12
    b374:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b378:	80 fd       	sbrc	r24, 0
    b37a:	e3 cf       	rjmp	.-58     	; 0xb342 <movemonster+0x220>
    if (blob.x > oldx ) if (!(checkcollide( blob.x + 17, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   -2;};
    b37c:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    b380:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    b384:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    b388:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    b38c:	28 17       	cp	r18, r24
    b38e:	39 07       	cpc	r19, r25
    b390:	c4 f4       	brge	.+48     	; 0xb3c2 <movemonster+0x2a0>
    b392:	60 91 5a 09 	lds	r22, 0x095A	; 0x80095a <blob+0x2>
    b396:	70 91 5b 09 	lds	r23, 0x095B	; 0x80095b <blob+0x3>
    b39a:	6f 5e       	subi	r22, 0xEF	; 239
    b39c:	7f 4f       	sbci	r23, 0xFF	; 255
    b39e:	40 e0       	ldi	r20, 0x00	; 0
    b3a0:	50 e0       	ldi	r21, 0x00	; 0
    b3a2:	41 96       	adiw	r24, 0x11	; 17
    b3a4:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b3a8:	80 fd       	sbrc	r24, 0
    b3aa:	0b c0       	rjmp	.+22     	; 0xb3c2 <movemonster+0x2a0>
    b3ac:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <oldx2>
    b3b0:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <oldx2+0x1>
    b3b4:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <blob+0x5>
    b3b8:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0x4>
    b3bc:	8e ef       	ldi	r24, 0xFE	; 254
    b3be:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <blob+0x7>
    if (blob.x < oldx ) if (!(checkcollide( blob.x -  1, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   +2;};
    b3c2:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    b3c6:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    b3ca:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    b3ce:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    b3d2:	82 17       	cp	r24, r18
    b3d4:	93 07       	cpc	r25, r19
    b3d6:	c4 f4       	brge	.+48     	; 0xb408 <movemonster+0x2e6>
    b3d8:	60 91 5a 09 	lds	r22, 0x095A	; 0x80095a <blob+0x2>
    b3dc:	70 91 5b 09 	lds	r23, 0x095B	; 0x80095b <blob+0x3>
    b3e0:	6f 5e       	subi	r22, 0xEF	; 239
    b3e2:	7f 4f       	sbci	r23, 0xFF	; 255
    b3e4:	40 e0       	ldi	r20, 0x00	; 0
    b3e6:	50 e0       	ldi	r21, 0x00	; 0
    b3e8:	01 97       	sbiw	r24, 0x01	; 1
    b3ea:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b3ee:	80 fd       	sbrc	r24, 0
    b3f0:	0b c0       	rjmp	.+22     	; 0xb408 <movemonster+0x2e6>
    b3f2:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <oldx2>
    b3f6:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <oldx2+0x1>
    b3fa:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <blob+0x5>
    b3fe:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0x4>
    b402:	82 e0       	ldi	r24, 0x02	; 2
    b404:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <blob+0x7>
    if (blob.y > 240 || blob.y < 0 || blob.x <= -16 || blob.x > 240 )  {MonsteronScreen = false; MoveSprite(owlIndex,-20,-20,2,2);blob.onscreen = false;};
    b408:	80 91 5a 09 	lds	r24, 0x095A	; 0x80095a <blob+0x2>
    b40c:	90 91 5b 09 	lds	r25, 0x095B	; 0x80095b <blob+0x3>
    b410:	81 3f       	cpi	r24, 0xF1	; 241
    b412:	91 05       	cpc	r25, r1
    b414:	48 f4       	brcc	.+18     	; 0xb428 <movemonster+0x306>
    b416:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    b41a:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    b41e:	0f 96       	adiw	r24, 0x0f	; 15
    b420:	8f 3f       	cpi	r24, 0xFF	; 255
    b422:	91 05       	cpc	r25, r1
    b424:	61 f0       	breq	.+24     	; 0xb43e <movemonster+0x31c>
    b426:	58 f0       	brcs	.+22     	; 0xb43e <movemonster+0x31c>
    b428:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <MonsteronScreen>
    b42c:	02 e0       	ldi	r16, 0x02	; 2
    b42e:	22 e0       	ldi	r18, 0x02	; 2
    b430:	4c ee       	ldi	r20, 0xEC	; 236
    b432:	6c ee       	ldi	r22, 0xEC	; 236
    b434:	86 e0       	ldi	r24, 0x06	; 6
    b436:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
    b43a:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <blob+0x9>
}   

    
}
    b43e:	0f 91       	pop	r16
    b440:	08 95       	ret

0000b442 <checkmonster>:

void checkmonster(int x, int y,int z)
{
    b442:	ef 92       	push	r14
    b444:	ff 92       	push	r15
    b446:	0f 93       	push	r16
    b448:	1f 93       	push	r17
    b44a:	cf 93       	push	r28
    b44c:	df 93       	push	r29
if (!MonsteronScreen) return;
    b44e:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <MonsteronScreen>
    b452:	22 23       	and	r18, r18
    b454:	09 f4       	brne	.+2      	; 0xb458 <checkmonster+0x16>
    b456:	c3 c0       	rjmp	.+390    	; 0xb5de <checkmonster+0x19c>
    b458:	7a 01       	movw	r14, r20
    b45a:	eb 01       	movw	r28, r22
    b45c:	8c 01       	movw	r16, r24

if   (owl.onscreen && owl.alive)
    b45e:	80 91 dd 09 	lds	r24, 0x09DD	; 0x8009dd <owl+0x9>
    b462:	88 23       	and	r24, r24
    b464:	09 f4       	brne	.+2      	; 0xb468 <checkmonster+0x26>
    b466:	55 c0       	rjmp	.+170    	; 0xb512 <checkmonster+0xd0>
    b468:	80 91 de 09 	lds	r24, 0x09DE	; 0x8009de <owl+0xa>
    b46c:	88 23       	and	r24, r24
    b46e:	09 f4       	brne	.+2      	; 0xb472 <checkmonster+0x30>
    b470:	50 c0       	rjmp	.+160    	; 0xb512 <checkmonster+0xd0>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    b472:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    b476:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    b47a:	9c 01       	movw	r18, r24
    b47c:	2d 5f       	subi	r18, 0xFD	; 253
    b47e:	3f 4f       	sbci	r19, 0xFF	; 255
    b480:	20 17       	cp	r18, r16
    b482:	31 07       	cpc	r19, r17
    b484:	0c f0       	brlt	.+2      	; 0xb488 <checkmonster+0x46>
    b486:	45 c0       	rjmp	.+138    	; 0xb512 <checkmonster+0xd0>
    b488:	0b 96       	adiw	r24, 0x0b	; 11
    b48a:	80 17       	cp	r24, r16
    b48c:	91 07       	cpc	r25, r17
    b48e:	0c f4       	brge	.+2      	; 0xb492 <checkmonster+0x50>
    b490:	40 c0       	rjmp	.+128    	; 0xb512 <checkmonster+0xd0>
    b492:	80 91 d6 09 	lds	r24, 0x09D6	; 0x8009d6 <owl+0x2>
    b496:	90 91 d7 09 	lds	r25, 0x09D7	; 0x8009d7 <owl+0x3>
    b49a:	9c 01       	movw	r18, r24
    b49c:	2d 5f       	subi	r18, 0xFD	; 253
    b49e:	3f 4f       	sbci	r19, 0xFF	; 255
    b4a0:	26 17       	cp	r18, r22
    b4a2:	37 07       	cpc	r19, r23
    b4a4:	b4 f5       	brge	.+108    	; 0xb512 <checkmonster+0xd0>
    b4a6:	0e 96       	adiw	r24, 0x0e	; 14
    b4a8:	86 17       	cp	r24, r22
    b4aa:	97 07       	cpc	r25, r23
    b4ac:	94 f1       	brlt	.+100    	; 0xb512 <checkmonster+0xd0>
   {
    if ( z== 0)
    b4ae:	45 2b       	or	r20, r21
    b4b0:	d1 f4       	brne	.+52     	; 0xb4e6 <checkmonster+0xa4>
    {
    died = true;
    b4b2:	81 e0       	ldi	r24, 0x01	; 1
    b4b4:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <died>
    lives--;    
    b4b8:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    b4bc:	81 50       	subi	r24, 0x01	; 1
    b4be:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
    isplaying = false; 
    b4c2:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    b4c6:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    bonus = 0;  
    b4ca:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    b4ce:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
    TriggerFx(9,0xff,true);
    b4d2:	41 e0       	ldi	r20, 0x01	; 1
    b4d4:	6f ef       	ldi	r22, 0xFF	; 255
    b4d6:	89 e0       	ldi	r24, 0x09	; 9
    b4d8:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240); 
    b4dc:	80 ef       	ldi	r24, 0xF0	; 240
    b4de:	90 e0       	ldi	r25, 0x00	; 0
    b4e0:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    b4e4:	16 c0       	rjmp	.+44     	; 0xb512 <checkmonster+0xd0>
    }
       else
       {
        owl.alive = false; 
    b4e6:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <owl+0xa>
        owl.ximpulse = 0;
    b4ea:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <owl+0x7>
        owl.yimpulse = 0; 
    b4ee:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <owl+0x8>
        score = score + 50;
    b4f2:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <score>
    b4f6:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <score+0x1>
    b4fa:	c2 96       	adiw	r24, 0x32	; 50
    b4fc:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <score+0x1>
    b500:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <score>
        updatepoints();
    b504:	0e 94 a0 52 	call	0xa540	; 0xa540 <updatepoints>
        TriggerFx(8,0xff,true);
    b508:	41 e0       	ldi	r20, 0x01	; 1
    b50a:	6f ef       	ldi	r22, 0xFF	; 255
    b50c:	88 e0       	ldi	r24, 0x08	; 8
    b50e:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
       };
   };     
   };
    
 if   (blob.onscreen && blob.alive)
    b512:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <blob+0x9>
    b516:	88 23       	and	r24, r24
    b518:	09 f4       	brne	.+2      	; 0xb51c <checkmonster+0xda>
    b51a:	61 c0       	rjmp	.+194    	; 0xb5de <checkmonster+0x19c>
    b51c:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <blob+0xa>
    b520:	88 23       	and	r24, r24
    b522:	09 f4       	brne	.+2      	; 0xb526 <checkmonster+0xe4>
    b524:	5c c0       	rjmp	.+184    	; 0xb5de <checkmonster+0x19c>
                    {
   if ( x >= blob.x +3 && x<= blob.x + 12 && y > blob.y+1 &&  y  < blob.y + 13 )
    b526:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    b52a:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    b52e:	9c 01       	movw	r18, r24
    b530:	2e 5f       	subi	r18, 0xFE	; 254
    b532:	3f 4f       	sbci	r19, 0xFF	; 255
    b534:	20 17       	cp	r18, r16
    b536:	31 07       	cpc	r19, r17
    b538:	0c f0       	brlt	.+2      	; 0xb53c <checkmonster+0xfa>
    b53a:	51 c0       	rjmp	.+162    	; 0xb5de <checkmonster+0x19c>
    b53c:	0c 96       	adiw	r24, 0x0c	; 12
    b53e:	80 17       	cp	r24, r16
    b540:	91 07       	cpc	r25, r17
    b542:	0c f4       	brge	.+2      	; 0xb546 <checkmonster+0x104>
    b544:	4c c0       	rjmp	.+152    	; 0xb5de <checkmonster+0x19c>
    b546:	80 91 5a 09 	lds	r24, 0x095A	; 0x80095a <blob+0x2>
    b54a:	90 91 5b 09 	lds	r25, 0x095B	; 0x80095b <blob+0x3>
    b54e:	9c 01       	movw	r18, r24
    b550:	2f 5f       	subi	r18, 0xFF	; 255
    b552:	3f 4f       	sbci	r19, 0xFF	; 255
    b554:	2c 17       	cp	r18, r28
    b556:	3d 07       	cpc	r19, r29
    b558:	0c f0       	brlt	.+2      	; 0xb55c <checkmonster+0x11a>
    b55a:	41 c0       	rjmp	.+130    	; 0xb5de <checkmonster+0x19c>
    b55c:	0c 96       	adiw	r24, 0x0c	; 12
    b55e:	8c 17       	cp	r24, r28
    b560:	9d 07       	cpc	r25, r29
    b562:	ec f1       	brlt	.+122    	; 0xb5de <checkmonster+0x19c>
   {
      if ( z== 0)
    b564:	ef 28       	or	r14, r15
    b566:	f9 f4       	brne	.+62     	; 0xb5a6 <checkmonster+0x164>
    {
     died = true;
    b568:	81 e0       	ldi	r24, 0x01	; 1
    b56a:	80 93 1e 0a 	sts	0x0A1E, r24	; 0x800a1e <died>
    lives--;    
    b56e:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    b572:	81 50       	subi	r24, 0x01	; 1
    b574:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
    isplaying = false; 
    b578:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    b57c:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    bonus = 0; 
    b580:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    b584:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
    TriggerFx(9,0xff,true);
    b588:	41 e0       	ldi	r20, 0x01	; 1
    b58a:	6f ef       	ldi	r22, 0xFF	; 255
    b58c:	89 e0       	ldi	r24, 0x09	; 9
    b58e:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240); 
    b592:	80 ef       	ldi	r24, 0xF0	; 240
    b594:	90 e0       	ldi	r25, 0x00	; 0
       
    
    
    

}
    b596:	df 91       	pop	r29
    b598:	cf 91       	pop	r28
    b59a:	1f 91       	pop	r17
    b59c:	0f 91       	pop	r16
    b59e:	ff 90       	pop	r15
    b5a0:	ef 90       	pop	r14
    lives--;    
    isplaying = false; 
    play = false;
    bonus = 0; 
    TriggerFx(9,0xff,true);
    WaitVsync(240); 
    b5a2:	0c 94 01 4e 	jmp	0x9c02	; 0x9c02 <WaitVsync>
      }
    else
       {
        blob.alive = false;  
    b5a6:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <blob+0xa>
        blob.ximpulse = 0;
    b5aa:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x7>
        blob.yimpulse = 0;
    b5ae:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0x8>
        score = score + 50;
    b5b2:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <score>
    b5b6:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <score+0x1>
    b5ba:	c2 96       	adiw	r24, 0x32	; 50
    b5bc:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <score+0x1>
    b5c0:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <score>
        updatepoints();
    b5c4:	0e 94 a0 52 	call	0xa540	; 0xa540 <updatepoints>
        TriggerFx(8,0xff,true);
    b5c8:	41 e0       	ldi	r20, 0x01	; 1
    b5ca:	6f ef       	ldi	r22, 0xFF	; 255
    b5cc:	88 e0       	ldi	r24, 0x08	; 8
       
    
    
    

}
    b5ce:	df 91       	pop	r29
    b5d0:	cf 91       	pop	r28
    b5d2:	1f 91       	pop	r17
    b5d4:	0f 91       	pop	r16
    b5d6:	ff 90       	pop	r15
    b5d8:	ef 90       	pop	r14
        blob.alive = false;  
        blob.ximpulse = 0;
        blob.yimpulse = 0;
        score = score + 50;
        updatepoints();
        TriggerFx(8,0xff,true);
    b5da:	0c 94 a1 43 	jmp	0x8742	; 0x8742 <TriggerFx>
       
    
    
    

}
    b5de:	df 91       	pop	r29
    b5e0:	cf 91       	pop	r28
    b5e2:	1f 91       	pop	r17
    b5e4:	0f 91       	pop	r16
    b5e6:	ff 90       	pop	r15
    b5e8:	ef 90       	pop	r14
    b5ea:	08 95       	ret

0000b5ec <moveplayer>:
bool play;

void moveplayer()
{
 
player.mushroomCount = 10;
    b5ec:	8a e0       	ldi	r24, 0x0A	; 10
    b5ee:	90 e0       	ldi	r25, 0x00	; 0
    b5f0:	90 93 6a 09 	sts	0x096A, r25	; 0x80096a <player+0x7>
    b5f4:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <player+0x6>
unsigned int joy=ReadJoypad(0);
    b5f8:	80 e0       	ldi	r24, 0x00	; 0
    b5fa:	0e 94 4e 41 	call	0x829c	; 0x829c <ReadJoypad>
if(player.stuck)
    b5fe:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <player+0xa>
    b602:	22 23       	and	r18, r18
    b604:	a1 f0       	breq	.+40     	; 0xb62e <moveplayer+0x42>
{
player.sCount = player.sCount + 1;
    b606:	20 91 6b 09 	lds	r18, 0x096B	; 0x80096b <player+0x8>
    b60a:	30 91 6c 09 	lds	r19, 0x096C	; 0x80096c <player+0x9>
    b60e:	2f 5f       	subi	r18, 0xFF	; 255
    b610:	3f 4f       	sbci	r19, 0xFF	; 255
if(player.sCount >= 100)
    b612:	24 36       	cpi	r18, 0x64	; 100
    b614:	31 05       	cpc	r19, r1
    b616:	2c f4       	brge	.+10     	; 0xb622 <moveplayer+0x36>
 
player.mushroomCount = 10;
unsigned int joy=ReadJoypad(0);
if(player.stuck)
{
player.sCount = player.sCount + 1;
    b618:	30 93 6c 09 	sts	0x096C, r19	; 0x80096c <player+0x9>
    b61c:	20 93 6b 09 	sts	0x096B, r18	; 0x80096b <player+0x8>
    b620:	06 c0       	rjmp	.+12     	; 0xb62e <moveplayer+0x42>
if(player.sCount >= 100)
{
player.sCount = 0;
    b622:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0x9>
    b626:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x8>
player.stuck = false;
    b62a:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    b62e:	20 91 7e 09 	lds	r18, 0x097E	; 0x80097e <introplaying>
    b632:	22 23       	and	r18, r18
    b634:	29 f0       	breq	.+10     	; 0xb640 <moveplayer+0x54>
    b636:	83 ff       	sbrs	r24, 3
    b638:	8b c0       	rjmp	.+278    	; 0xb750 <moveplayer+0x164>
    b63a:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <introplaying>
    b63e:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player.stuck == false) { 
    b640:	86 ff       	sbrs	r24, 6
    b642:	15 c0       	rjmp	.+42     	; 0xb66e <moveplayer+0x82>
    b644:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <player+0xa>
    b648:	21 11       	cpse	r18, r1
    b64a:	11 c0       	rjmp	.+34     	; 0xb66e <moveplayer+0x82>
player.direction = 'l';
    b64c:	2c e6       	ldi	r18, 0x6C	; 108
    b64e:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0xe>
player.action = 'w';
    b652:	27 e7       	ldi	r18, 0x77	; 119
    b654:	20 93 70 09 	sts	0x0970, r18	; 0x800970 <player+0xd>
player.facing = 1;
    b658:	21 e0       	ldi	r18, 0x01	; 1
    b65a:	30 e0       	ldi	r19, 0x00	; 0
    b65c:	30 93 6f 09 	sts	0x096F, r19	; 0x80096f <player+0xc>
    b660:	20 93 6e 09 	sts	0x096E, r18	; 0x80096e <player+0xb>
player.ximpulse = -player.speed; 
    b664:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x4>
    b668:	21 95       	neg	r18
    b66a:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x12>
};
if (joy&BTN_RIGHT && player.stuck == false) {
    b66e:	87 ff       	sbrs	r24, 7
    b670:	12 c0       	rjmp	.+36     	; 0xb696 <moveplayer+0xaa>
    b672:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <player+0xa>
    b676:	21 11       	cpse	r18, r1
    b678:	0e c0       	rjmp	.+28     	; 0xb696 <moveplayer+0xaa>
player.direction = 'r';
    b67a:	22 e7       	ldi	r18, 0x72	; 114
    b67c:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0xe>
player.action = 'w';
    b680:	27 e7       	ldi	r18, 0x77	; 119
    b682:	20 93 70 09 	sts	0x0970, r18	; 0x800970 <player+0xd>
player.facing = 0;
    b686:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xc>
    b68a:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xb>
player.ximpulse = player.speed; 
    b68e:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x4>
    b692:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x12>
};
if ( !(joy&BTN_A) ) {
    b696:	ac 01       	movw	r20, r24
    b698:	44 27       	eor	r20, r20
    b69a:	51 70       	andi	r21, 0x01	; 1
    b69c:	90 fd       	sbrc	r25, 0
    b69e:	09 c0       	rjmp	.+18     	; 0xb6b2 <moveplayer+0xc6>
player.yimpulse = 0;
    b6a0:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x13>
player.jumpreleased = true;
    b6a4:	21 e0       	ldi	r18, 0x01	; 1
    b6a6:	20 93 78 09 	sts	0x0978, r18	; 0x800978 <player+0x15>
player.jumping = false;
    b6aa:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x14>
player.jumpcounter = 0;
    b6ae:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x19>
};
if ( !(joy&BTN_B) ) {
    b6b2:	80 fd       	sbrc	r24, 0
    b6b4:	03 c0       	rjmp	.+6      	; 0xb6bc <moveplayer+0xd0>
player.bpressed = false;
    b6b6:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <player+0x16>
    b6ba:	08 c0       	rjmp	.+16     	; 0xb6cc <moveplayer+0xe0>
};
if ( joy&BTN_B && player.touchground) {
    b6bc:	20 91 74 09 	lds	r18, 0x0974	; 0x800974 <player+0x11>
    b6c0:	22 23       	and	r18, r18
    b6c2:	21 f0       	breq	.+8      	; 0xb6cc <moveplayer+0xe0>
	if(bananaCount > 0 && player.bpressed == false)
    b6c4:	20 91 03 01 	lds	r18, 0x0103	; 0x800103 <bananaCount>
    b6c8:	21 11       	cpse	r18, r1
    b6ca:	af c2       	rjmp	.+1374   	; 0xbc2a <moveplayer+0x63e>
	bananaCount = bananaCount - 1;
    player.bananaBool = true;
	player.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    b6cc:	81 fd       	sbrc	r24, 1
    b6ce:	03 c0       	rjmp	.+6      	; 0xb6d6 <moveplayer+0xea>
player.ypressed = false;
    b6d0:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <player+0x17>
    b6d4:	19 c0       	rjmp	.+50     	; 0xb708 <moveplayer+0x11c>
};
if ( joy&BTN_Y) {
	if(player.mushroomCount > 0 && player.ypressed == false)
    b6d6:	80 91 69 09 	lds	r24, 0x0969	; 0x800969 <player+0x6>
    b6da:	90 91 6a 09 	lds	r25, 0x096A	; 0x80096a <player+0x7>
    b6de:	18 16       	cp	r1, r24
    b6e0:	19 06       	cpc	r1, r25
    b6e2:	94 f4       	brge	.+36     	; 0xb708 <moveplayer+0x11c>
    b6e4:	20 91 7a 09 	lds	r18, 0x097A	; 0x80097a <player+0x17>
    b6e8:	21 11       	cpse	r18, r1
    b6ea:	0e c0       	rjmp	.+28     	; 0xb708 <moveplayer+0x11c>
	{
	player.mushroomCount = player.mushroomCount - 1;
    b6ec:	01 97       	sbiw	r24, 0x01	; 1
    b6ee:	90 93 6a 09 	sts	0x096A, r25	; 0x80096a <player+0x7>
    b6f2:	80 93 69 09 	sts	0x0969, r24	; 0x800969 <player+0x6>
	player.speed = 10;
    b6f6:	8a e0       	ldi	r24, 0x0A	; 10
    b6f8:	90 e0       	ldi	r25, 0x00	; 0
    b6fa:	90 93 68 09 	sts	0x0968, r25	; 0x800968 <player+0x5>
    b6fe:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x4>
	player.ypressed = true;
    b702:	81 e0       	ldi	r24, 0x01	; 1
    b704:	80 93 7a 09 	sts	0x097A, r24	; 0x80097a <player+0x17>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    b708:	45 2b       	or	r20, r21
    b70a:	11 f1       	breq	.+68     	; 0xb750 <moveplayer+0x164>
    b70c:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x11>
    b710:	88 23       	and	r24, r24
    b712:	f1 f0       	breq	.+60     	; 0xb750 <moveplayer+0x164>
    b714:	80 91 78 09 	lds	r24, 0x0978	; 0x800978 <player+0x15>
    b718:	88 23       	and	r24, r24
    b71a:	d1 f0       	breq	.+52     	; 0xb750 <moveplayer+0x164>
    b71c:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0xa>
    b720:	81 11       	cpse	r24, r1
    b722:	16 c0       	rjmp	.+44     	; 0xb750 <moveplayer+0x164>
player.action = 'j';
    b724:	8a e6       	ldi	r24, 0x6A	; 106
    b726:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xd>
player.yimpulse = 0;
    b72a:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x13>
player.jumping = true;
    b72e:	81 e0       	ldi	r24, 0x01	; 1
    b730:	80 93 77 09 	sts	0x0977, r24	; 0x800977 <player+0x14>
player.touchground = false;
    b734:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x11>
player.jumpreleased = false;
    b738:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <player+0x15>
player.jumpcounter++ ; 
    b73c:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x19>
    b740:	8f 5f       	subi	r24, 0xFF	; 255
    b742:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x19>
TriggerFx(4,0xff,true);
    b746:	41 e0       	ldi	r20, 0x01	; 1
    b748:	6f ef       	ldi	r22, 0xFF	; 255
    b74a:	84 e0       	ldi	r24, 0x04	; 4
    b74c:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
};
};

oldx = player.x;
    b750:	20 91 63 09 	lds	r18, 0x0963	; 0x800963 <player>
    b754:	30 91 64 09 	lds	r19, 0x0964	; 0x800964 <player+0x1>
    b758:	30 93 9b 09 	sts	0x099B, r19	; 0x80099b <oldx+0x1>
    b75c:	20 93 9a 09 	sts	0x099A, r18	; 0x80099a <oldx>
oldy = player.y;
    b760:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b764:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b768:	70 93 23 0a 	sts	0x0A23, r23	; 0x800a23 <oldy+0x1>
    b76c:	60 93 22 0a 	sts	0x0A22, r22	; 0x800a22 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    b770:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x19>
    b774:	9f ef       	ldi	r25, 0xFF	; 255
    b776:	98 0f       	add	r25, r24
    b778:	99 31       	cpi	r25, 0x19	; 25
    b77a:	18 f4       	brcc	.+6      	; 0xb782 <moveplayer+0x196>
    b77c:	9c ef       	ldi	r25, 0xFC	; 252
    b77e:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <player+0x13>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    b782:	96 ee       	ldi	r25, 0xE6	; 230
    b784:	98 0f       	add	r25, r24
    b786:	9b 30       	cpi	r25, 0x0B	; 11
    b788:	18 f4       	brcc	.+6      	; 0xb790 <moveplayer+0x1a4>
    b78a:	9d ef       	ldi	r25, 0xFD	; 253
    b78c:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <player+0x13>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    b790:	9b ed       	ldi	r25, 0xDB	; 219
    b792:	98 0f       	add	r25, r24
    b794:	94 30       	cpi	r25, 0x04	; 4
    b796:	18 f4       	brcc	.+6      	; 0xb79e <moveplayer+0x1b2>
    b798:	9e ef       	ldi	r25, 0xFE	; 254
    b79a:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <player+0x13>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    b79e:	97 ed       	ldi	r25, 0xD7	; 215
    b7a0:	98 0f       	add	r25, r24
    b7a2:	96 30       	cpi	r25, 0x06	; 6
    b7a4:	20 f4       	brcc	.+8      	; 0xb7ae <moveplayer+0x1c2>
    b7a6:	9f ef       	ldi	r25, 0xFF	; 255
    b7a8:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <player+0x13>
    b7ac:	02 c0       	rjmp	.+4      	; 0xb7b2 <moveplayer+0x1c6>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    b7ae:	88 23       	and	r24, r24
    b7b0:	19 f0       	breq	.+6      	; 0xb7b8 <moveplayer+0x1cc>
    b7b2:	8f 5f       	subi	r24, 0xFF	; 255
    b7b4:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x19>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    b7b8:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x19>
    b7bc:	8f 32       	cpi	r24, 0x2F	; 47
    b7be:	10 f0       	brcs	.+4      	; 0xb7c4 <moveplayer+0x1d8>
    b7c0:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x19>
player.x = player.x + player.ximpulse;
    b7c4:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x12>
    b7c8:	a9 01       	movw	r20, r18
    b7ca:	48 0f       	add	r20, r24
    b7cc:	51 1d       	adc	r21, r1
    b7ce:	87 fd       	sbrc	r24, 7
    b7d0:	5a 95       	dec	r21
    b7d2:	ca 01       	movw	r24, r20
    b7d4:	50 93 64 09 	sts	0x0964, r21	; 0x800964 <player+0x1>
    b7d8:	40 93 63 09 	sts	0x0963, r20	; 0x800963 <player>
player.y = player.y + player.yimpulse + gravity ;
    b7dc:	40 91 76 09 	lds	r20, 0x0976	; 0x800976 <player+0x13>
    b7e0:	64 0f       	add	r22, r20
    b7e2:	71 1d       	adc	r23, r1
    b7e4:	47 fd       	sbrc	r20, 7
    b7e6:	7a 95       	dec	r23
    b7e8:	6e 5f       	subi	r22, 0xFE	; 254
    b7ea:	7f 4f       	sbci	r23, 0xFF	; 255
    b7ec:	70 93 66 09 	sts	0x0966, r23	; 0x800966 <player+0x3>
    b7f0:	60 93 65 09 	sts	0x0965, r22	; 0x800965 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    b7f4:	28 17       	cp	r18, r24
    b7f6:	39 07       	cpc	r19, r25
    b7f8:	3c f4       	brge	.+14     	; 0xb808 <moveplayer+0x21c>
    b7fa:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1a>
    b7fe:	2f 5f       	subi	r18, 0xFF	; 255
    b800:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1a>
    b804:	22 e7       	ldi	r18, 0x72	; 114
    b806:	09 c0       	rjmp	.+18     	; 0xb81a <moveplayer+0x22e>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    b808:	82 17       	cp	r24, r18
    b80a:	93 07       	cpc	r25, r19
    b80c:	4c f4       	brge	.+18     	; 0xb820 <moveplayer+0x234>
    b80e:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1a>
    b812:	2f 5f       	subi	r18, 0xFF	; 255
    b814:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1a>
    b818:	2c e6       	ldi	r18, 0x6C	; 108
    b81a:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0xe>
    b81e:	05 c0       	rjmp	.+10     	; 0xb82a <moveplayer+0x23e>
if (player.x == oldx  ) { player.aniframe = 0;};
    b820:	28 17       	cp	r18, r24
    b822:	39 07       	cpc	r19, r25
    b824:	11 f4       	brne	.+4      	; 0xb82a <moveplayer+0x23e>
    b826:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <player+0x1a>
if (player.aniframe > 0 ) player.aniframe++;
    b82a:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1a>
    b82e:	22 23       	and	r18, r18
    b830:	19 f0       	breq	.+6      	; 0xb838 <moveplayer+0x24c>
    b832:	2f 5f       	subi	r18, 0xFF	; 255
    b834:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1a>
if (player.aniframe>24) player.aniframe = 1;
    b838:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1a>
    b83c:	29 31       	cpi	r18, 0x19	; 25
    b83e:	18 f0       	brcs	.+6      	; 0xb846 <moveplayer+0x25a>
    b840:	21 e0       	ldi	r18, 0x01	; 1
    b842:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1a>
if(checkBanana(player.x + 4, player.y ,1) == 1)
    b846:	41 e0       	ldi	r20, 0x01	; 1
    b848:	50 e0       	ldi	r21, 0x00	; 0
    b84a:	04 96       	adiw	r24, 0x04	; 4
    b84c:	0e 94 b7 51 	call	0xa36e	; 0xa36e <checkBanana>
    b850:	01 97       	sbiw	r24, 0x01	; 1
    b852:	19 f4       	brne	.+6      	; 0xb85a <moveplayer+0x26e>
{
    player.stuck = true;
    b854:	81 e0       	ldi	r24, 0x01	; 1
    b856:	80 93 6d 09 	sts	0x096D, r24	; 0x80096d <player+0xa>
} 
if(player.bananaBool == true)
    b85a:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x18>
    b85e:	88 23       	and	r24, r24
    b860:	79 f0       	breq	.+30     	; 0xb880 <moveplayer+0x294>
{
makeBanana2(player.x + 4, player.y,1);
    b862:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b866:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b86a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b86e:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b872:	41 e0       	ldi	r20, 0x01	; 1
    b874:	50 e0       	ldi	r21, 0x00	; 0
    b876:	04 96       	adiw	r24, 0x04	; 4
    b878:	0e 94 59 51 	call	0xa2b2	; 0xa2b2 <makeBanana2>
player.bananaBool = false;
    b87c:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x18>
}
checkcollide( player.x, player.y - 4 ,1);
    b880:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b884:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b888:	64 50       	subi	r22, 0x04	; 4
    b88a:	71 09       	sbc	r23, r1
    b88c:	41 e0       	ldi	r20, 0x01	; 1
    b88e:	50 e0       	ldi	r21, 0x00	; 0
    b890:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b894:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b898:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3);
    b89c:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b8a0:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b8a4:	64 50       	subi	r22, 0x04	; 4
    b8a6:	71 09       	sbc	r23, r1
    b8a8:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b8ac:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b8b0:	43 e0       	ldi	r20, 0x03	; 3
    b8b2:	50 e0       	ldi	r21, 0x00	; 0
    b8b4:	03 97       	sbiw	r24, 0x03	; 3
    b8b6:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3);
    b8ba:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b8be:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b8c2:	64 50       	subi	r22, 0x04	; 4
    b8c4:	71 09       	sbc	r23, r1
    b8c6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b8ca:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b8ce:	43 e0       	ldi	r20, 0x03	; 3
    b8d0:	50 e0       	ldi	r21, 0x00	; 0
    b8d2:	04 96       	adiw	r24, 0x04	; 4
    b8d4:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
    b8d8:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b8dc:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b8e0:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    b8e4:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    b8e8:	68 17       	cp	r22, r24
    b8ea:	79 07       	cpc	r23, r25
    b8ec:	54 f4       	brge	.+20     	; 0xb902 <moveplayer+0x316>
    b8ee:	66 51       	subi	r22, 0x16	; 22
    b8f0:	71 09       	sbc	r23, r1
    b8f2:	42 e0       	ldi	r20, 0x02	; 2
    b8f4:	50 e0       	ldi	r21, 0x00	; 0
    b8f6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b8fa:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b8fe:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    b902:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b906:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b90a:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    b90e:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    b912:	86 17       	cp	r24, r22
    b914:	97 07       	cpc	r25, r23
    b916:	8c f5       	brge	.+98     	; 0xb97a <moveplayer+0x38e>
    b918:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x11>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    b91c:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b920:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b924:	40 e0       	ldi	r20, 0x00	; 0
    b926:	50 e0       	ldi	r21, 0x00	; 0
    b928:	03 97       	sbiw	r24, 0x03	; 3
    b92a:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b92e:	80 ff       	sbrs	r24, 0
    b930:	15 c0       	rjmp	.+42     	; 0xb95c <moveplayer+0x370>
    b932:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <player+0x2>
    b936:	90 91 66 09 	lds	r25, 0x0966	; 0x800966 <player+0x3>
    b93a:	97 fd       	sbrc	r25, 7
    b93c:	0f 96       	adiw	r24, 0x0f	; 15
    b93e:	80 7f       	andi	r24, 0xF0	; 240
    b940:	01 97       	sbiw	r24, 0x01	; 1
    b942:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <player+0x3>
    b946:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <player+0x2>
    b94a:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x14>
    b94e:	81 e0       	ldi	r24, 0x01	; 1
    b950:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <player+0x11>
    b954:	87 e7       	ldi	r24, 0x77	; 119
    b956:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xd>
    b95a:	0f c0       	rjmp	.+30     	; 0xb97a <moveplayer+0x38e>
    b95c:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b960:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b964:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b968:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b96c:	40 e0       	ldi	r20, 0x00	; 0
    b96e:	50 e0       	ldi	r21, 0x00	; 0
    b970:	04 96       	adiw	r24, 0x04	; 4
    b972:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b976:	80 fd       	sbrc	r24, 0
    b978:	dc cf       	rjmp	.-72     	; 0xb932 <moveplayer+0x346>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    b97a:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b97e:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b982:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    b986:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    b98a:	68 17       	cp	r22, r24
    b98c:	79 07       	cpc	r23, r25
    b98e:	74 f5       	brge	.+92     	; 0xb9ec <moveplayer+0x400>
    b990:	65 51       	subi	r22, 0x15	; 21
    b992:	71 09       	sbc	r23, r1
    b994:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b998:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b99c:	40 e0       	ldi	r20, 0x00	; 0
    b99e:	50 e0       	ldi	r21, 0x00	; 0
    b9a0:	03 97       	sbiw	r24, 0x03	; 3
    b9a2:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b9a6:	80 ff       	sbrs	r24, 0
    b9a8:	10 c0       	rjmp	.+32     	; 0xb9ca <moveplayer+0x3de>
    b9aa:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    b9ae:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    b9b2:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <player+0x3>
    b9b6:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <player+0x2>
    b9ba:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x19>
                                                                                                                                  TriggerFx(5,0xff,true);
    b9be:	41 e0       	ldi	r20, 0x01	; 1
    b9c0:	6f ef       	ldi	r22, 0xFF	; 255
    b9c2:	85 e0       	ldi	r24, 0x05	; 5
    b9c4:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    b9c8:	11 c0       	rjmp	.+34     	; 0xb9ec <moveplayer+0x400>
checkcollide( player.x +4, player.y - 4 ,3);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    b9ca:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    b9ce:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    b9d2:	65 51       	subi	r22, 0x15	; 21
    b9d4:	71 09       	sbc	r23, r1
    b9d6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b9da:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b9de:	40 e0       	ldi	r20, 0x00	; 0
    b9e0:	50 e0       	ldi	r21, 0x00	; 0
    b9e2:	04 96       	adiw	r24, 0x04	; 4
    b9e4:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    b9e8:	80 fd       	sbrc	r24, 0
    b9ea:	df cf       	rjmp	.-66     	; 0xb9aa <moveplayer+0x3be>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
    b9ec:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    b9f0:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    b9f4:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    b9f8:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    b9fc:	28 17       	cp	r18, r24
    b9fe:	39 07       	cpc	r19, r25
    ba00:	3c f5       	brge	.+78     	; 0xba50 <moveplayer+0x464>
    ba02:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    ba06:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    ba0a:	63 50       	subi	r22, 0x03	; 3
    ba0c:	71 09       	sbc	r23, r1
    ba0e:	40 e0       	ldi	r20, 0x00	; 0
    ba10:	50 e0       	ldi	r21, 0x00	; 0
    ba12:	05 96       	adiw	r24, 0x05	; 5
    ba14:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    ba18:	80 ff       	sbrs	r24, 0
    ba1a:	09 c0       	rjmp	.+18     	; 0xba2e <moveplayer+0x442>
    ba1c:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <oldx>
    ba20:	90 91 9b 09 	lds	r25, 0x099B	; 0x80099b <oldx+0x1>
    ba24:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    ba28:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
    ba2c:	11 c0       	rjmp	.+34     	; 0xba50 <moveplayer+0x464>
    ba2e:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    ba32:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    ba36:	64 51       	subi	r22, 0x14	; 20
    ba38:	71 09       	sbc	r23, r1
    ba3a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    ba3e:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    ba42:	40 e0       	ldi	r20, 0x00	; 0
    ba44:	50 e0       	ldi	r21, 0x00	; 0
    ba46:	05 96       	adiw	r24, 0x05	; 5
    ba48:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    ba4c:	80 fd       	sbrc	r24, 0
    ba4e:	e6 cf       	rjmp	.-52     	; 0xba1c <moveplayer+0x430>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
    ba50:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    ba54:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    ba58:	20 91 9a 09 	lds	r18, 0x099A	; 0x80099a <oldx>
    ba5c:	30 91 9b 09 	lds	r19, 0x099B	; 0x80099b <oldx+0x1>
    ba60:	82 17       	cp	r24, r18
    ba62:	93 07       	cpc	r25, r19
    ba64:	3c f5       	brge	.+78     	; 0xbab4 <moveplayer+0x4c8>
    ba66:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    ba6a:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    ba6e:	63 50       	subi	r22, 0x03	; 3
    ba70:	71 09       	sbc	r23, r1
    ba72:	40 e0       	ldi	r20, 0x00	; 0
    ba74:	50 e0       	ldi	r21, 0x00	; 0
    ba76:	04 97       	sbiw	r24, 0x04	; 4
    ba78:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    ba7c:	80 ff       	sbrs	r24, 0
    ba7e:	09 c0       	rjmp	.+18     	; 0xba92 <moveplayer+0x4a6>
    ba80:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <oldx>
    ba84:	90 91 9b 09 	lds	r25, 0x099B	; 0x80099b <oldx+0x1>
    ba88:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    ba8c:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
    ba90:	11 c0       	rjmp	.+34     	; 0xbab4 <moveplayer+0x4c8>
    ba92:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    ba96:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    ba9a:	64 51       	subi	r22, 0x14	; 20
    ba9c:	71 09       	sbc	r23, r1
    ba9e:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    baa2:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    baa6:	40 e0       	ldi	r20, 0x00	; 0
    baa8:	50 e0       	ldi	r21, 0x00	; 0
    baaa:	04 97       	sbiw	r24, 0x04	; 4
    baac:	0e 94 b1 52 	call	0xa562	; 0xa562 <checkcollide>
    bab0:	80 fd       	sbrc	r24, 0
    bab2:	e6 cf       	rjmp	.-52     	; 0xba80 <moveplayer+0x494>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
    bab4:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bab8:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    babc:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    bac0:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    bac4:	86 17       	cp	r24, r22
    bac6:	97 07       	cpc	r25, r23
    bac8:	4c f4       	brge	.+18     	; 0xbadc <moveplayer+0x4f0>
    baca:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bace:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bad2:	41 e0       	ldi	r20, 0x01	; 1
    bad4:	50 e0       	ldi	r21, 0x00	; 0
    bad6:	04 96       	adiw	r24, 0x04	; 4
    bad8:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
    badc:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bae0:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bae4:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    bae8:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    baec:	86 17       	cp	r24, r22
    baee:	97 07       	cpc	r25, r23
    baf0:	4c f4       	brge	.+18     	; 0xbb04 <moveplayer+0x518>
    baf2:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    baf6:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bafa:	41 e0       	ldi	r20, 0x01	; 1
    bafc:	50 e0       	ldi	r21, 0x00	; 0
    bafe:	04 97       	sbiw	r24, 0x04	; 4
    bb00:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
    bb04:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bb08:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bb0c:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    bb10:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    bb14:	86 17       	cp	r24, r22
    bb16:	97 07       	cpc	r25, r23
    bb18:	44 f4       	brge	.+16     	; 0xbb2a <moveplayer+0x53e>
    bb1a:	41 e0       	ldi	r20, 0x01	; 1
    bb1c:	50 e0       	ldi	r21, 0x00	; 0
    bb1e:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bb22:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bb26:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
checkmonster(player.x +4, player.y -3,0 );
    bb2a:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bb2e:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bb32:	63 50       	subi	r22, 0x03	; 3
    bb34:	71 09       	sbc	r23, r1
    bb36:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bb3a:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bb3e:	40 e0       	ldi	r20, 0x00	; 0
    bb40:	50 e0       	ldi	r21, 0x00	; 0
    bb42:	04 96       	adiw	r24, 0x04	; 4
    bb44:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
checkmonster(player.x +4, player.y -19,0 );
    bb48:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bb4c:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bb50:	63 51       	subi	r22, 0x13	; 19
    bb52:	71 09       	sbc	r23, r1
    bb54:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bb58:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bb5c:	40 e0       	ldi	r20, 0x00	; 0
    bb5e:	50 e0       	ldi	r21, 0x00	; 0
    bb60:	04 96       	adiw	r24, 0x04	; 4
    bb62:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
checkmonster(player.x -3, player.y -3 ,0);
    bb66:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bb6a:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bb6e:	63 50       	subi	r22, 0x03	; 3
    bb70:	71 09       	sbc	r23, r1
    bb72:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bb76:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bb7a:	40 e0       	ldi	r20, 0x00	; 0
    bb7c:	50 e0       	ldi	r21, 0x00	; 0
    bb7e:	03 97       	sbiw	r24, 0x03	; 3
    bb80:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
checkmonster(player.x -3, player.y -19 ,0);  
    bb84:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bb88:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bb8c:	63 51       	subi	r22, 0x13	; 19
    bb8e:	71 09       	sbc	r23, r1
    bb90:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bb94:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bb98:	40 e0       	ldi	r20, 0x00	; 0
    bb9a:	50 e0       	ldi	r21, 0x00	; 0
    bb9c:	03 97       	sbiw	r24, 0x03	; 3
    bb9e:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
checkmonster(player.x , player.y -22 ,0);
    bba2:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bba6:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bbaa:	66 51       	subi	r22, 0x16	; 22
    bbac:	71 09       	sbc	r23, r1
    bbae:	40 e0       	ldi	r20, 0x00	; 0
    bbb0:	50 e0       	ldi	r21, 0x00	; 0
    bbb2:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bbb6:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bbba:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
    bbbe:	60 91 65 09 	lds	r22, 0x0965	; 0x800965 <player+0x2>
    bbc2:	70 91 66 09 	lds	r23, 0x0966	; 0x800966 <player+0x3>
    bbc6:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <oldy>
    bbca:	90 91 23 0a 	lds	r25, 0x0A23	; 0x800a23 <oldy+0x1>
    bbce:	86 17       	cp	r24, r22
    bbd0:	97 07       	cpc	r25, r23
    bbd2:	4c f4       	brge	.+18     	; 0xbbe6 <moveplayer+0x5fa>
    bbd4:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bbd8:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bbdc:	40 e0       	ldi	r20, 0x00	; 0
    bbde:	50 e0       	ldi	r21, 0x00	; 0
    bbe0:	04 96       	adiw	r24, 0x04	; 4
    bbe2:	0e 94 21 5a 	call	0xb442	; 0xb442 <checkmonster>
player.ximpulse = 0;    
    bbe6:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x12>
player.yimpulse = 0;
    bbea:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x13>
if ( player.x < 8 ) player.x = player2.x;   // Increase time penalty herer
    bbee:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bbf2:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bbf6:	08 97       	sbiw	r24, 0x08	; 8
    bbf8:	44 f4       	brge	.+16     	; 0xbc0a <moveplayer+0x61e>
    bbfa:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    bbfe:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    bc02:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    bc06:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
if ( player.x > 232 ) player.x = player2.x;    
    bc0a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    bc0e:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    bc12:	89 3e       	cpi	r24, 0xE9	; 233
    bc14:	91 05       	cpc	r25, r1
    bc16:	b4 f0       	brlt	.+44     	; 0xbc44 <moveplayer+0x658>
    bc18:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    bc1c:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    bc20:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    bc24:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
    bc28:	08 95       	ret
};
if ( !(joy&BTN_B) ) {
player.bpressed = false;
};
if ( joy&BTN_B && player.touchground) {
	if(bananaCount > 0 && player.bpressed == false)
    bc2a:	30 91 79 09 	lds	r19, 0x0979	; 0x800979 <player+0x16>
    bc2e:	31 11       	cpse	r19, r1
    bc30:	4d cd       	rjmp	.-1382   	; 0xb6cc <moveplayer+0xe0>
	{
	bananaCount = bananaCount - 1;
    bc32:	21 50       	subi	r18, 0x01	; 1
    bc34:	20 93 03 01 	sts	0x0103, r18	; 0x800103 <bananaCount>
    player.bananaBool = true;
    bc38:	21 e0       	ldi	r18, 0x01	; 1
    bc3a:	20 93 7b 09 	sts	0x097B, r18	; 0x80097b <player+0x18>
	player.bpressed = true;
    bc3e:	20 93 79 09 	sts	0x0979, r18	; 0x800979 <player+0x16>
    bc42:	44 cd       	rjmp	.-1400   	; 0xb6cc <moveplayer+0xe0>
    bc44:	08 95       	ret

0000bc46 <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    bc46:	20 91 dd 09 	lds	r18, 0x09DD	; 0x8009dd <owl+0x9>
    bc4a:	22 23       	and	r18, r18
    bc4c:	79 f0       	breq	.+30     	; 0xbc6c <scrollmonster+0x26>
    bc4e:	40 91 d8 09 	lds	r20, 0x09D8	; 0x8009d8 <owl+0x4>
    bc52:	50 91 d9 09 	lds	r21, 0x09D9	; 0x8009d9 <owl+0x5>
    bc56:	9c 01       	movw	r18, r24
    bc58:	22 0f       	add	r18, r18
    bc5a:	33 1f       	adc	r19, r19
    bc5c:	22 0f       	add	r18, r18
    bc5e:	33 1f       	adc	r19, r19
    bc60:	24 0f       	add	r18, r20
    bc62:	35 1f       	adc	r19, r21
    bc64:	30 93 d9 09 	sts	0x09D9, r19	; 0x8009d9 <owl+0x5>
    bc68:	20 93 d8 09 	sts	0x09D8, r18	; 0x8009d8 <owl+0x4>
if (blob.onscreen) blob.x2 =  blob.x2 + ( x << 2 );
    bc6c:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <blob+0x9>
    bc70:	22 23       	and	r18, r18
    bc72:	71 f0       	breq	.+28     	; 0xbc90 <scrollmonster+0x4a>
    bc74:	88 0f       	add	r24, r24
    bc76:	99 1f       	adc	r25, r25
    bc78:	88 0f       	add	r24, r24
    bc7a:	99 1f       	adc	r25, r25
    bc7c:	20 91 5c 09 	lds	r18, 0x095C	; 0x80095c <blob+0x4>
    bc80:	30 91 5d 09 	lds	r19, 0x095D	; 0x80095d <blob+0x5>
    bc84:	82 0f       	add	r24, r18
    bc86:	93 1f       	adc	r25, r19
    bc88:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <blob+0x5>
    bc8c:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0x4>
    bc90:	08 95       	ret

0000bc92 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    bc92:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <MonsteronScreen>
    bc96:	21 11       	cpse	r18, r1
    bc98:	38 c0       	rjmp	.+112    	; 0xbd0a <setowl+0x78>
if ( owl.onscreen == true ) return;    
    bc9a:	20 91 dd 09 	lds	r18, 0x09DD	; 0x8009dd <owl+0x9>
    bc9e:	21 11       	cpse	r18, r1
    bca0:	34 c0       	rjmp	.+104    	; 0xbd0a <setowl+0x78>
owl.x = x * 8;
    bca2:	33 e0       	ldi	r19, 0x03	; 3
    bca4:	88 0f       	add	r24, r24
    bca6:	99 1f       	adc	r25, r25
    bca8:	3a 95       	dec	r19
    bcaa:	e1 f7       	brne	.-8      	; 0xbca4 <setowl+0x12>
    bcac:	90 93 d5 09 	sts	0x09D5, r25	; 0x8009d5 <owl+0x1>
    bcb0:	80 93 d4 09 	sts	0x09D4, r24	; 0x8009d4 <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    bcb4:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    bcb8:	88 23       	and	r24, r24
    bcba:	31 f0       	breq	.+12     	; 0xbcc8 <setowl+0x36>
    bcbc:	80 ef       	ldi	r24, 0xF0	; 240
    bcbe:	90 e0       	ldi	r25, 0x00	; 0
    bcc0:	90 93 d5 09 	sts	0x09D5, r25	; 0x8009d5 <owl+0x1>
    bcc4:	80 93 d4 09 	sts	0x09D4, r24	; 0x8009d4 <owl>
owl.y = y * 8;     
    bcc8:	83 e0       	ldi	r24, 0x03	; 3
    bcca:	66 0f       	add	r22, r22
    bccc:	77 1f       	adc	r23, r23
    bcce:	8a 95       	dec	r24
    bcd0:	e1 f7       	brne	.-8      	; 0xbcca <setowl+0x38>
    bcd2:	70 93 d7 09 	sts	0x09D7, r23	; 0x8009d7 <owl+0x3>
    bcd6:	60 93 d6 09 	sts	0x09D6, r22	; 0x8009d6 <owl+0x2>
owl.x2 = owl.x << 2;        
    bcda:	80 91 d4 09 	lds	r24, 0x09D4	; 0x8009d4 <owl>
    bcde:	90 91 d5 09 	lds	r25, 0x09D5	; 0x8009d5 <owl+0x1>
    bce2:	88 0f       	add	r24, r24
    bce4:	99 1f       	adc	r25, r25
    bce6:	88 0f       	add	r24, r24
    bce8:	99 1f       	adc	r25, r25
    bcea:	90 93 d9 09 	sts	0x09D9, r25	; 0x8009d9 <owl+0x5>
    bcee:	80 93 d8 09 	sts	0x09D8, r24	; 0x8009d8 <owl+0x4>
owl.ximpulse = -1;
    bcf2:	8f ef       	ldi	r24, 0xFF	; 255
    bcf4:	80 93 db 09 	sts	0x09DB, r24	; 0x8009db <owl+0x7>
owl.yimpulse = 0;    
    bcf8:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <owl+0x8>
owl.onscreen = true;
    bcfc:	81 e0       	ldi	r24, 0x01	; 1
    bcfe:	80 93 dd 09 	sts	0x09DD, r24	; 0x8009dd <owl+0x9>
owl.alive = true; 
    bd02:	80 93 de 09 	sts	0x09DE, r24	; 0x8009de <owl+0xa>
MonsteronScreen = true;     
    bd06:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <MonsteronScreen>
    bd0a:	08 95       	ret

0000bd0c <setblob>:
}

void setblob(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    bd0c:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <MonsteronScreen>
    bd10:	21 11       	cpse	r18, r1
    bd12:	38 c0       	rjmp	.+112    	; 0xbd84 <setblob+0x78>
if ( blob.onscreen == true ) return;    
    bd14:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <blob+0x9>
    bd18:	21 11       	cpse	r18, r1
    bd1a:	34 c0       	rjmp	.+104    	; 0xbd84 <setblob+0x78>
blob.x = x * 8;
    bd1c:	33 e0       	ldi	r19, 0x03	; 3
    bd1e:	88 0f       	add	r24, r24
    bd20:	99 1f       	adc	r25, r25
    bd22:	3a 95       	dec	r19
    bd24:	e1 f7       	brne	.-8      	; 0xbd1e <setblob+0x12>
    bd26:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <blob+0x1>
    bd2a:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <blob>
if (scrolltiles > 0 )  blob.x = 15 * 16;
    bd2e:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    bd32:	88 23       	and	r24, r24
    bd34:	31 f0       	breq	.+12     	; 0xbd42 <setblob+0x36>
    bd36:	80 ef       	ldi	r24, 0xF0	; 240
    bd38:	90 e0       	ldi	r25, 0x00	; 0
    bd3a:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <blob+0x1>
    bd3e:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <blob>
blob.y = y * 8;     
    bd42:	83 e0       	ldi	r24, 0x03	; 3
    bd44:	66 0f       	add	r22, r22
    bd46:	77 1f       	adc	r23, r23
    bd48:	8a 95       	dec	r24
    bd4a:	e1 f7       	brne	.-8      	; 0xbd44 <setblob+0x38>
    bd4c:	70 93 5b 09 	sts	0x095B, r23	; 0x80095b <blob+0x3>
    bd50:	60 93 5a 09 	sts	0x095A, r22	; 0x80095a <blob+0x2>
blob.x2 = blob.x << 2;        
    bd54:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob>
    bd58:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x1>
    bd5c:	88 0f       	add	r24, r24
    bd5e:	99 1f       	adc	r25, r25
    bd60:	88 0f       	add	r24, r24
    bd62:	99 1f       	adc	r25, r25
    bd64:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <blob+0x5>
    bd68:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0x4>
blob.ximpulse = -2;
    bd6c:	8e ef       	ldi	r24, 0xFE	; 254
    bd6e:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <blob+0x7>
blob.yimpulse = 0;    
    bd72:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0x8>
blob.onscreen = true;
    bd76:	81 e0       	ldi	r24, 0x01	; 1
    bd78:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <blob+0x9>
blob.alive = true;   
    bd7c:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <blob+0xa>
MonsteronScreen = true;    
    bd80:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <MonsteronScreen>
    bd84:	08 95       	ret

0000bd86 <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    bd86:	6f 92       	push	r6
    bd88:	7f 92       	push	r7
    bd8a:	8f 92       	push	r8
    bd8c:	bf 92       	push	r11
    bd8e:	cf 92       	push	r12
    bd90:	df 92       	push	r13
    bd92:	ef 92       	push	r14
    bd94:	ff 92       	push	r15
    bd96:	0f 93       	push	r16
    bd98:	1f 93       	push	r17
    bd9a:	cf 93       	push	r28
    bd9c:	df 93       	push	r29
player.stuck = false;
    bd9e:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xa>
player2.stuck = false;
    bda2:	10 92 c2 09 	sts	0x09C2, r1	; 0x8009c2 <player2+0xa>
player.sCount =0;
    bda6:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0x9>
    bdaa:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x8>
player2.sCount =0;
    bdae:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <player2+0x9>
    bdb2:	10 92 c0 09 	sts	0x09C0, r1	; 0x8009c0 <player2+0x8>
    bdb6:	01 e0       	ldi	r16, 0x01	; 1
    bdb8:	e1 2c       	mov	r14, r1
    bdba:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    bdbc:	c1 2c       	mov	r12, r1
    bdbe:	d1 2c       	mov	r13, r1
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    bdc0:	be 2c       	mov	r11, r14
    bdc2:	36 01       	movw	r6, r12
    bdc4:	c0 e0       	ldi	r28, 0x00	; 0
    bdc6:	d0 e0       	ldi	r29, 0x00	; 0

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    bdc8:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <level>
    bdcc:	81 11       	cpse	r24, r1
    bdce:	04 c0       	rjmp	.+8      	; 0xbdd8 <drawlevel+0x52>
    bdd0:	f3 01       	movw	r30, r6
    bdd2:	e1 58       	subi	r30, 0x81	; 129
    bdd4:	fa 4c       	sbci	r31, 0xCA	; 202
    bdd6:	35 c0       	rjmp	.+106    	; 0xbe42 <drawlevel+0xbc>
if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    bdd8:	81 30       	cpi	r24, 0x01	; 1
    bdda:	21 f4       	brne	.+8      	; 0xbde4 <drawlevel+0x5e>
    bddc:	f3 01       	movw	r30, r6
    bdde:	ed 56       	subi	r30, 0x6D	; 109
    bde0:	ff 4c       	sbci	r31, 0xCF	; 207
    bde2:	2f c0       	rjmp	.+94     	; 0xbe42 <drawlevel+0xbc>
if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    bde4:	82 30       	cpi	r24, 0x02	; 2
    bde6:	21 f4       	brne	.+8      	; 0xbdf0 <drawlevel+0x6a>
    bde8:	f3 01       	movw	r30, r6
    bdea:	e9 55       	subi	r30, 0x59	; 89
    bdec:	f4 4d       	sbci	r31, 0xD4	; 212
    bdee:	29 c0       	rjmp	.+82     	; 0xbe42 <drawlevel+0xbc>
if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    bdf0:	83 30       	cpi	r24, 0x03	; 3
    bdf2:	21 f4       	brne	.+8      	; 0xbdfc <drawlevel+0x76>
    bdf4:	f3 01       	movw	r30, r6
    bdf6:	e5 54       	subi	r30, 0x45	; 69
    bdf8:	f9 4d       	sbci	r31, 0xD9	; 217
    bdfa:	23 c0       	rjmp	.+70     	; 0xbe42 <drawlevel+0xbc>
if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    bdfc:	84 30       	cpi	r24, 0x04	; 4
    bdfe:	21 f4       	brne	.+8      	; 0xbe08 <drawlevel+0x82>
    be00:	f3 01       	movw	r30, r6
    be02:	e1 53       	subi	r30, 0x31	; 49
    be04:	fe 4d       	sbci	r31, 0xDE	; 222
    be06:	1d c0       	rjmp	.+58     	; 0xbe42 <drawlevel+0xbc>
if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    be08:	85 30       	cpi	r24, 0x05	; 5
    be0a:	21 f4       	brne	.+8      	; 0xbe14 <drawlevel+0x8e>
    be0c:	f3 01       	movw	r30, r6
    be0e:	ed 51       	subi	r30, 0x1D	; 29
    be10:	f3 4e       	sbci	r31, 0xE3	; 227
    be12:	17 c0       	rjmp	.+46     	; 0xbe42 <drawlevel+0xbc>
if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    be14:	86 30       	cpi	r24, 0x06	; 6
    be16:	21 f4       	brne	.+8      	; 0xbe20 <drawlevel+0x9a>
    be18:	f3 01       	movw	r30, r6
    be1a:	e9 50       	subi	r30, 0x09	; 9
    be1c:	f8 4e       	sbci	r31, 0xE8	; 232
    be1e:	11 c0       	rjmp	.+34     	; 0xbe42 <drawlevel+0xbc>
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    be20:	87 30       	cpi	r24, 0x07	; 7
    be22:	21 f4       	brne	.+8      	; 0xbe2c <drawlevel+0xa6>
    be24:	f3 01       	movw	r30, r6
    be26:	e5 5f       	subi	r30, 0xF5	; 245
    be28:	fc 4e       	sbci	r31, 0xEC	; 236
    be2a:	0b c0       	rjmp	.+22     	; 0xbe42 <drawlevel+0xbc>
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    be2c:	88 30       	cpi	r24, 0x08	; 8
    be2e:	21 f4       	brne	.+8      	; 0xbe38 <drawlevel+0xb2>
    be30:	f3 01       	movw	r30, r6
    be32:	e1 5e       	subi	r30, 0xE1	; 225
    be34:	f1 4f       	sbci	r31, 0xF1	; 241
    be36:	05 c0       	rjmp	.+10     	; 0xbe42 <drawlevel+0xbc>
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    be38:	89 30       	cpi	r24, 0x09	; 9
    be3a:	21 f4       	brne	.+8      	; 0xbe44 <drawlevel+0xbe>
    be3c:	f3 01       	movw	r30, r6
    be3e:	ed 5c       	subi	r30, 0xCD	; 205
    be40:	f6 4f       	sbci	r31, 0xF6	; 246
    be42:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    be44:	11 30       	cpi	r17, 0x01	; 1
    be46:	19 f4       	brne	.+6      	; 0xbe4e <drawlevel+0xc8>
    be48:	47 e7       	ldi	r20, 0x77	; 119
    be4a:	57 e7       	ldi	r21, 0x77	; 119
    be4c:	d1 c0       	rjmp	.+418    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    be4e:	12 30       	cpi	r17, 0x02	; 2
    be50:	19 f4       	brne	.+6      	; 0xbe58 <drawlevel+0xd2>
    be52:	45 e8       	ldi	r20, 0x85	; 133
    be54:	57 e7       	ldi	r21, 0x77	; 119
    be56:	cc c0       	rjmp	.+408    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    be58:	13 30       	cpi	r17, 0x03	; 3
    be5a:	19 f4       	brne	.+6      	; 0xbe62 <drawlevel+0xdc>
    be5c:	4f e7       	ldi	r20, 0x7F	; 127
    be5e:	57 e7       	ldi	r21, 0x77	; 119
    be60:	c7 c0       	rjmp	.+398    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 4 ) DrawMap2(destx  ,yi *2  ,block2);
    be62:	14 30       	cpi	r17, 0x04	; 4
    be64:	19 f4       	brne	.+6      	; 0xbe6c <drawlevel+0xe6>
    be66:	45 e3       	ldi	r20, 0x35	; 53
    be68:	57 e7       	ldi	r21, 0x77	; 119
    be6a:	c2 c0       	rjmp	.+388    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    be6c:	15 30       	cpi	r17, 0x05	; 5
    be6e:	19 f4       	brne	.+6      	; 0xbe76 <drawlevel+0xf0>
    be70:	4f e6       	ldi	r20, 0x6F	; 111
    be72:	57 e7       	ldi	r21, 0x77	; 119
    be74:	bd c0       	rjmp	.+378    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    be76:	16 30       	cpi	r17, 0x06	; 6
    be78:	19 f4       	brne	.+6      	; 0xbe80 <drawlevel+0xfa>
    be7a:	47 e6       	ldi	r20, 0x67	; 103
    be7c:	57 e7       	ldi	r21, 0x77	; 119
    be7e:	b8 c0       	rjmp	.+368    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    be80:	17 30       	cpi	r17, 0x07	; 7
    be82:	19 f4       	brne	.+6      	; 0xbe8a <drawlevel+0x104>
    be84:	4f e2       	ldi	r20, 0x2F	; 47
    be86:	57 e7       	ldi	r21, 0x77	; 119
    be88:	b3 c0       	rjmp	.+358    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    be8a:	18 30       	cpi	r17, 0x08	; 8
    be8c:	19 f4       	brne	.+6      	; 0xbe94 <drawlevel+0x10e>
    be8e:	4f e5       	ldi	r20, 0x5F	; 95
    be90:	57 e7       	ldi	r21, 0x77	; 119
    be92:	ae c0       	rjmp	.+348    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    be94:	19 30       	cpi	r17, 0x09	; 9
    be96:	19 f4       	brne	.+6      	; 0xbe9e <drawlevel+0x118>
    be98:	49 e5       	ldi	r20, 0x59	; 89
    be9a:	57 e7       	ldi	r21, 0x77	; 119
    be9c:	a9 c0       	rjmp	.+338    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    be9e:	1a 30       	cpi	r17, 0x0A	; 10
    bea0:	19 f4       	brne	.+6      	; 0xbea8 <drawlevel+0x122>
    bea2:	43 e5       	ldi	r20, 0x53	; 83
    bea4:	57 e7       	ldi	r21, 0x77	; 119
    bea6:	a4 c0       	rjmp	.+328    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 11 ) DrawMap2(destx ,yi *2  ,tube0);
    bea8:	1b 30       	cpi	r17, 0x0B	; 11
    beaa:	19 f4       	brne	.+6      	; 0xbeb2 <drawlevel+0x12c>
    beac:	46 ee       	ldi	r20, 0xE6	; 230
    beae:	56 e7       	ldi	r21, 0x76	; 118
    beb0:	9f c0       	rjmp	.+318    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,tube1);
    beb2:	1c 30       	cpi	r17, 0x0C	; 12
    beb4:	19 f4       	brne	.+6      	; 0xbebc <drawlevel+0x136>
    beb6:	40 ee       	ldi	r20, 0xE0	; 224
    beb8:	56 e7       	ldi	r21, 0x76	; 118
    beba:	9a c0       	rjmp	.+308    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,tube2);
    bebc:	1d 30       	cpi	r17, 0x0D	; 13
    bebe:	19 f4       	brne	.+6      	; 0xbec6 <drawlevel+0x140>
    bec0:	4a ed       	ldi	r20, 0xDA	; 218
    bec2:	56 e7       	ldi	r21, 0x76	; 118
    bec4:	95 c0       	rjmp	.+298    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 14 ) DrawMap2(destx ,yi *2  ,tube3);
    bec6:	1e 30       	cpi	r17, 0x0E	; 14
    bec8:	19 f4       	brne	.+6      	; 0xbed0 <drawlevel+0x14a>
    beca:	44 ed       	ldi	r20, 0xD4	; 212
    becc:	56 e7       	ldi	r21, 0x76	; 118
    bece:	90 c0       	rjmp	.+288    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    bed0:	1f 30       	cpi	r17, 0x0F	; 15
    bed2:	19 f4       	brne	.+6      	; 0xbeda <drawlevel+0x154>
    bed4:	4e ec       	ldi	r20, 0xCE	; 206
    bed6:	56 e7       	ldi	r21, 0x76	; 118
    bed8:	8b c0       	rjmp	.+278    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    beda:	10 31       	cpi	r17, 0x10	; 16
    bedc:	19 f4       	brne	.+6      	; 0xbee4 <drawlevel+0x15e>
    bede:	48 ec       	ldi	r20, 0xC8	; 200
    bee0:	56 e7       	ldi	r21, 0x76	; 118
    bee2:	86 c0       	rjmp	.+268    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,bush1);
    bee4:	1f 31       	cpi	r17, 0x1F	; 31
    bee6:	19 f4       	brne	.+6      	; 0xbeee <drawlevel+0x168>
    bee8:	46 e1       	ldi	r20, 0x16	; 22
    beea:	57 e7       	ldi	r21, 0x77	; 119
    beec:	81 c0       	rjmp	.+258    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,bush2);
    beee:	10 32       	cpi	r17, 0x20	; 32
    bef0:	19 f4       	brne	.+6      	; 0xbef8 <drawlevel+0x172>
    bef2:	40 e1       	ldi	r20, 0x10	; 16
    bef4:	57 e7       	ldi	r21, 0x77	; 119
    bef6:	7c c0       	rjmp	.+248    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,bush3);
    bef8:	11 32       	cpi	r17, 0x21	; 33
    befa:	19 f4       	brne	.+6      	; 0xbf02 <drawlevel+0x17c>
    befc:	4a e0       	ldi	r20, 0x0A	; 10
    befe:	57 e7       	ldi	r21, 0x77	; 119
    bf00:	77 c0       	rjmp	.+238    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,bush4);
    bf02:	12 32       	cpi	r17, 0x22	; 34
    bf04:	19 f4       	brne	.+6      	; 0xbf0c <drawlevel+0x186>
    bf06:	44 e0       	ldi	r20, 0x04	; 4
    bf08:	57 e7       	ldi	r21, 0x77	; 119
    bf0a:	72 c0       	rjmp	.+228    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    bf0c:	13 32       	cpi	r17, 0x23	; 35
    bf0e:	19 f4       	brne	.+6      	; 0xbf16 <drawlevel+0x190>
    bf10:	4e ef       	ldi	r20, 0xFE	; 254
    bf12:	56 e7       	ldi	r21, 0x76	; 118
    bf14:	6d c0       	rjmp	.+218    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    bf16:	14 32       	cpi	r17, 0x24	; 36
    bf18:	19 f4       	brne	.+6      	; 0xbf20 <drawlevel+0x19a>
    bf1a:	48 ef       	ldi	r20, 0xF8	; 248
    bf1c:	56 e7       	ldi	r21, 0x76	; 118
    bf1e:	68 c0       	rjmp	.+208    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    bf20:	15 32       	cpi	r17, 0x25	; 37
    bf22:	19 f4       	brne	.+6      	; 0xbf2a <drawlevel+0x1a4>
    bf24:	42 ef       	ldi	r20, 0xF2	; 242
    bf26:	56 e7       	ldi	r21, 0x76	; 118
    bf28:	63 c0       	rjmp	.+198    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    bf2a:	16 32       	cpi	r17, 0x26	; 38
    bf2c:	19 f4       	brne	.+6      	; 0xbf34 <drawlevel+0x1ae>
    bf2e:	4c ee       	ldi	r20, 0xEC	; 236
    bf30:	56 e7       	ldi	r21, 0x76	; 118
    bf32:	5e c0       	rjmp	.+188    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 39 ) {DrawMap2(destx ,yi *2 ,bridge0);DrawMap2(destx +1 ,yi *2  ,bridge0);DrawMap2(destx  ,yi *2 +1 ,nb);DrawMap2(destx +1 ,yi *2 +1 ,nb);};
    bf34:	17 32       	cpi	r17, 0x27	; 39
    bf36:	c1 f4       	brne	.+48     	; 0xbf68 <drawlevel+0x1e2>
    bf38:	4d ea       	ldi	r20, 0xAD	; 173
    bf3a:	56 e7       	ldi	r21, 0x76	; 118
    bf3c:	6c 2f       	mov	r22, r28
    bf3e:	8b 2d       	mov	r24, r11
    bf40:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bf44:	4d ea       	ldi	r20, 0xAD	; 173
    bf46:	56 e7       	ldi	r21, 0x76	; 118
    bf48:	6c 2f       	mov	r22, r28
    bf4a:	80 2f       	mov	r24, r16
    bf4c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bf50:	41 ea       	ldi	r20, 0xA1	; 161
    bf52:	56 e7       	ldi	r21, 0x76	; 118
    bf54:	8c 2e       	mov	r8, r28
    bf56:	83 94       	inc	r8
    bf58:	68 2d       	mov	r22, r8
    bf5a:	8b 2d       	mov	r24, r11
    bf5c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bf60:	41 ea       	ldi	r20, 0xA1	; 161
    bf62:	56 e7       	ldi	r21, 0x76	; 118
    bf64:	68 2d       	mov	r22, r8
    bf66:	3e c0       	rjmp	.+124    	; 0xbfe4 <drawlevel+0x25e>
    if ( c == 21 ) DrawMap2(destx ,yi *2  ,mush0);
    bf68:	15 31       	cpi	r17, 0x15	; 21
    bf6a:	19 f4       	brne	.+6      	; 0xbf72 <drawlevel+0x1ec>
    bf6c:	42 ec       	ldi	r20, 0xC2	; 194
    bf6e:	56 e7       	ldi	r21, 0x76	; 118
    bf70:	3f c0       	rjmp	.+126    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 22 ) DrawMap2(destx ,yi *2  ,mush1);
    bf72:	16 31       	cpi	r17, 0x16	; 22
    bf74:	19 f4       	brne	.+6      	; 0xbf7c <drawlevel+0x1f6>
    bf76:	4c eb       	ldi	r20, 0xBC	; 188
    bf78:	56 e7       	ldi	r21, 0x76	; 118
    bf7a:	3a c0       	rjmp	.+116    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,mush2);
    bf7c:	17 31       	cpi	r17, 0x17	; 23
    bf7e:	19 f4       	brne	.+6      	; 0xbf86 <drawlevel+0x200>
    bf80:	46 eb       	ldi	r20, 0xB6	; 182
    bf82:	56 e7       	ldi	r21, 0x76	; 118
    bf84:	35 c0       	rjmp	.+106    	; 0xbff0 <drawlevel+0x26a>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,mush3);	
    bf86:	18 31       	cpi	r17, 0x18	; 24
    bf88:	19 f4       	brne	.+6      	; 0xbf90 <drawlevel+0x20a>
    bf8a:	40 eb       	ldi	r20, 0xB0	; 176
    bf8c:	56 e7       	ldi	r21, 0x76	; 118
    bf8e:	30 c0       	rjmp	.+96     	; 0xbff0 <drawlevel+0x26a>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    bf90:	19 31       	cpi	r17, 0x19	; 25
    bf92:	19 f4       	brne	.+6      	; 0xbf9a <drawlevel+0x214>
    bf94:	4d e4       	ldi	r20, 0x4D	; 77
    bf96:	57 e7       	ldi	r21, 0x77	; 119
    bf98:	2b c0       	rjmp	.+86     	; 0xbff0 <drawlevel+0x26a>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    bf9a:	1a 31       	cpi	r17, 0x1A	; 26
    bf9c:	19 f4       	brne	.+6      	; 0xbfa4 <drawlevel+0x21e>
    bf9e:	47 e4       	ldi	r20, 0x47	; 71
    bfa0:	57 e7       	ldi	r21, 0x77	; 119
    bfa2:	26 c0       	rjmp	.+76     	; 0xbff0 <drawlevel+0x26a>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    bfa4:	1b 31       	cpi	r17, 0x1B	; 27
    bfa6:	19 f4       	brne	.+6      	; 0xbfae <drawlevel+0x228>
    bfa8:	41 e4       	ldi	r20, 0x41	; 65
    bfaa:	57 e7       	ldi	r21, 0x77	; 119
    bfac:	21 c0       	rjmp	.+66     	; 0xbff0 <drawlevel+0x26a>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    bfae:	1c 31       	cpi	r17, 0x1C	; 28
    bfb0:	19 f4       	brne	.+6      	; 0xbfb8 <drawlevel+0x232>
    bfb2:	4b e3       	ldi	r20, 0x3B	; 59
    bfb4:	57 e7       	ldi	r21, 0x77	; 119
    bfb6:	1c c0       	rjmp	.+56     	; 0xbff0 <drawlevel+0x26a>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    bfb8:	1d 31       	cpi	r17, 0x1D	; 29
    bfba:	49 f4       	brne	.+18     	; 0xbfce <drawlevel+0x248>
    bfbc:	4d e2       	ldi	r20, 0x2D	; 45
    bfbe:	56 e7       	ldi	r21, 0x76	; 118
    bfc0:	6c 2f       	mov	r22, r28
    bfc2:	8b 2d       	mov	r24, r11
    bfc4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bfc8:	4d e2       	ldi	r20, 0x2D	; 45
    bfca:	56 e7       	ldi	r21, 0x76	; 118
    bfcc:	0a c0       	rjmp	.+20     	; 0xbfe2 <drawlevel+0x25c>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    bfce:	1e 31       	cpi	r17, 0x1E	; 30
    bfd0:	59 f4       	brne	.+22     	; 0xbfe8 <drawlevel+0x262>
    bfd2:	49 e2       	ldi	r20, 0x29	; 41
    bfd4:	56 e7       	ldi	r21, 0x76	; 118
    bfd6:	6c 2f       	mov	r22, r28
    bfd8:	8b 2d       	mov	r24, r11
    bfda:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bfde:	49 e2       	ldi	r20, 0x29	; 41
    bfe0:	56 e7       	ldi	r21, 0x76	; 118
    bfe2:	6c 2f       	mov	r22, r28
    bfe4:	80 2f       	mov	r24, r16
    bfe6:	06 c0       	rjmp	.+12     	; 0xbff4 <drawlevel+0x26e>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    bfe8:	19 32       	cpi	r17, 0x29	; 41
    bfea:	39 f4       	brne	.+14     	; 0xbffa <drawlevel+0x274>
    bfec:	49 e2       	ldi	r20, 0x29	; 41
    bfee:	57 e7       	ldi	r21, 0x77	; 119
    bff0:	6c 2f       	mov	r22, r28
    bff2:	8b 2d       	mov	r24, r11
    bff4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    bff8:	0d c0       	rjmp	.+26     	; 0xc014 <drawlevel+0x28e>
    if ( c == 50 ) setowl(destx,  yi *2);    
    bffa:	12 33       	cpi	r17, 0x32	; 50
    bffc:	29 f4       	brne	.+10     	; 0xc008 <drawlevel+0x282>
    bffe:	be 01       	movw	r22, r28
    c000:	c7 01       	movw	r24, r14
    c002:	0e 94 49 5e 	call	0xbc92	; 0xbc92 <setowl>
    c006:	06 c0       	rjmp	.+12     	; 0xc014 <drawlevel+0x28e>
    if ( c == 51 ) setblob(destx, yi *2);    
    c008:	13 33       	cpi	r17, 0x33	; 51
    c00a:	21 f4       	brne	.+8      	; 0xc014 <drawlevel+0x28e>
    c00c:	be 01       	movw	r22, r28
    c00e:	c7 01       	movw	r24, r14
    c010:	0e 94 86 5e 	call	0xbd0c	; 0xbd0c <setblob>
    c014:	22 96       	adiw	r28, 0x02	; 2
    c016:	8a e5       	ldi	r24, 0x5A	; 90
    c018:	68 0e       	add	r6, r24
    c01a:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    c01c:	cc 31       	cpi	r28, 0x1C	; 28
    c01e:	d1 05       	cpc	r29, r1
    c020:	09 f0       	breq	.+2      	; 0xc024 <drawlevel+0x29e>
    c022:	d2 ce       	rjmp	.-604    	; 0xbdc8 <drawlevel+0x42>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c024:	8f ef       	ldi	r24, 0xFF	; 255
    c026:	c8 1a       	sub	r12, r24
    c028:	d8 0a       	sbc	r13, r24
    c02a:	82 e0       	ldi	r24, 0x02	; 2
    c02c:	e8 0e       	add	r14, r24
    c02e:	f1 1c       	adc	r15, r1
    c030:	0e 5f       	subi	r16, 0xFE	; 254
    c032:	80 e2       	ldi	r24, 0x20	; 32
    c034:	e8 16       	cp	r14, r24
    c036:	f1 04       	cpc	r15, r1
    c038:	09 f0       	breq	.+2      	; 0xc03c <drawlevel+0x2b6>
    c03a:	c2 ce       	rjmp	.-636    	; 0xbdc0 <drawlevel+0x3a>
    if ( c == 50 ) setowl(destx,  yi *2);    
    if ( c == 51 ) setblob(destx, yi *2);    
    }
    }

}
    c03c:	df 91       	pop	r29
    c03e:	cf 91       	pop	r28
    c040:	1f 91       	pop	r17
    c042:	0f 91       	pop	r16
    c044:	ff 90       	pop	r15
    c046:	ef 90       	pop	r14
    c048:	df 90       	pop	r13
    c04a:	cf 90       	pop	r12
    c04c:	bf 90       	pop	r11
    c04e:	8f 90       	pop	r8
    c050:	7f 90       	pop	r7
    c052:	6f 90       	pop	r6
    c054:	08 95       	ret

0000c056 <updatelevel>:

void updatelevel()
{
    c056:	cf 92       	push	r12
    c058:	df 92       	push	r13
    c05a:	ef 92       	push	r14
    c05c:	ff 92       	push	r15
    c05e:	1f 93       	push	r17
    c060:	cf 93       	push	r28
    c062:	df 93       	push	r29
    c064:	c0 e0       	ldi	r28, 0x00	; 0
    c066:	d0 e0       	ldi	r29, 0x00	; 0
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    c068:	e1 2c       	mov	r14, r1
    c06a:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    c06c:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <level>
    c070:	81 11       	cpse	r24, r1
    c072:	08 c0       	rjmp	.+16     	; 0xc084 <updatelevel+0x2e>
    c074:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c078:	fe 01       	movw	r30, r28
    c07a:	e8 0f       	add	r30, r24
    c07c:	f1 1d       	adc	r31, r1
    c07e:	e1 57       	subi	r30, 0x71	; 113
    c080:	fa 4c       	sbci	r31, 0xCA	; 202
    c082:	59 c0       	rjmp	.+178    	; 0xc136 <updatelevel+0xe0>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    c084:	81 30       	cpi	r24, 0x01	; 1
    c086:	41 f4       	brne	.+16     	; 0xc098 <updatelevel+0x42>
    c088:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c08c:	fe 01       	movw	r30, r28
    c08e:	e8 0f       	add	r30, r24
    c090:	f1 1d       	adc	r31, r1
    c092:	ed 55       	subi	r30, 0x5D	; 93
    c094:	ff 4c       	sbci	r31, 0xCF	; 207
    c096:	4f c0       	rjmp	.+158    	; 0xc136 <updatelevel+0xe0>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    c098:	82 30       	cpi	r24, 0x02	; 2
    c09a:	41 f4       	brne	.+16     	; 0xc0ac <updatelevel+0x56>
    c09c:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c0a0:	fe 01       	movw	r30, r28
    c0a2:	e8 0f       	add	r30, r24
    c0a4:	f1 1d       	adc	r31, r1
    c0a6:	e9 54       	subi	r30, 0x49	; 73
    c0a8:	f4 4d       	sbci	r31, 0xD4	; 212
    c0aa:	45 c0       	rjmp	.+138    	; 0xc136 <updatelevel+0xe0>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    c0ac:	83 30       	cpi	r24, 0x03	; 3
    c0ae:	41 f4       	brne	.+16     	; 0xc0c0 <updatelevel+0x6a>
    c0b0:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c0b4:	fe 01       	movw	r30, r28
    c0b6:	e8 0f       	add	r30, r24
    c0b8:	f1 1d       	adc	r31, r1
    c0ba:	e5 53       	subi	r30, 0x35	; 53
    c0bc:	f9 4d       	sbci	r31, 0xD9	; 217
    c0be:	3b c0       	rjmp	.+118    	; 0xc136 <updatelevel+0xe0>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    c0c0:	84 30       	cpi	r24, 0x04	; 4
    c0c2:	41 f4       	brne	.+16     	; 0xc0d4 <updatelevel+0x7e>
    c0c4:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c0c8:	fe 01       	movw	r30, r28
    c0ca:	e8 0f       	add	r30, r24
    c0cc:	f1 1d       	adc	r31, r1
    c0ce:	e1 52       	subi	r30, 0x21	; 33
    c0d0:	fe 4d       	sbci	r31, 0xDE	; 222
    c0d2:	31 c0       	rjmp	.+98     	; 0xc136 <updatelevel+0xe0>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    c0d4:	85 30       	cpi	r24, 0x05	; 5
    c0d6:	41 f4       	brne	.+16     	; 0xc0e8 <updatelevel+0x92>
    c0d8:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c0dc:	fe 01       	movw	r30, r28
    c0de:	e8 0f       	add	r30, r24
    c0e0:	f1 1d       	adc	r31, r1
    c0e2:	ed 50       	subi	r30, 0x0D	; 13
    c0e4:	f3 4e       	sbci	r31, 0xE3	; 227
    c0e6:	27 c0       	rjmp	.+78     	; 0xc136 <updatelevel+0xe0>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    c0e8:	86 30       	cpi	r24, 0x06	; 6
    c0ea:	41 f4       	brne	.+16     	; 0xc0fc <updatelevel+0xa6>
    c0ec:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c0f0:	fe 01       	movw	r30, r28
    c0f2:	e8 0f       	add	r30, r24
    c0f4:	f1 1d       	adc	r31, r1
    c0f6:	e9 5f       	subi	r30, 0xF9	; 249
    c0f8:	f7 4e       	sbci	r31, 0xE7	; 231
    c0fa:	1d c0       	rjmp	.+58     	; 0xc136 <updatelevel+0xe0>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    c0fc:	87 30       	cpi	r24, 0x07	; 7
    c0fe:	41 f4       	brne	.+16     	; 0xc110 <updatelevel+0xba>
    c100:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c104:	fe 01       	movw	r30, r28
    c106:	e8 0f       	add	r30, r24
    c108:	f1 1d       	adc	r31, r1
    c10a:	e5 5e       	subi	r30, 0xE5	; 229
    c10c:	fc 4e       	sbci	r31, 0xEC	; 236
    c10e:	13 c0       	rjmp	.+38     	; 0xc136 <updatelevel+0xe0>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    c110:	88 30       	cpi	r24, 0x08	; 8
    c112:	41 f4       	brne	.+16     	; 0xc124 <updatelevel+0xce>
    c114:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c118:	fe 01       	movw	r30, r28
    c11a:	e8 0f       	add	r30, r24
    c11c:	f1 1d       	adc	r31, r1
    c11e:	e1 5d       	subi	r30, 0xD1	; 209
    c120:	f1 4f       	sbci	r31, 0xF1	; 241
    c122:	09 c0       	rjmp	.+18     	; 0xc136 <updatelevel+0xe0>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    c124:	89 30       	cpi	r24, 0x09	; 9
    c126:	41 f4       	brne	.+16     	; 0xc138 <updatelevel+0xe2>
    c128:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c12c:	fe 01       	movw	r30, r28
    c12e:	e8 0f       	add	r30, r24
    c130:	f1 1d       	adc	r31, r1
    c132:	ed 5b       	subi	r30, 0xBD	; 189
    c134:	f6 4f       	sbci	r31, 0xF6	; 246
    c136:	14 91       	lpm	r17, Z
    xi = yi << 1;
    c138:	67 01       	movw	r12, r14
    c13a:	cc 0c       	add	r12, r12
    c13c:	dd 1c       	adc	r13, r13
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    c13e:	11 11       	cpse	r17, r1
    c140:	10 c0       	rjmp	.+32     	; 0xc162 <updatelevel+0x10c>
    c142:	4b e8       	ldi	r20, 0x8B	; 139
    c144:	57 e7       	ldi	r21, 0x77	; 119
    c146:	6c 2d       	mov	r22, r12
    c148:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c14c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    c150:	8c e0       	ldi	r24, 0x0C	; 12
    c152:	e8 16       	cp	r14, r24
    c154:	f1 04       	cpc	r15, r1
    c156:	49 f5       	brne	.+82     	; 0xc1aa <updatelevel+0x154>
    c158:	61 e0       	ldi	r22, 0x01	; 1
    c15a:	6c 0d       	add	r22, r12
    c15c:	4b e8       	ldi	r20, 0x8B	; 139
    c15e:	57 e7       	ldi	r21, 0x77	; 119
    c160:	0f c0       	rjmp	.+30     	; 0xc180 <updatelevel+0x12a>
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    c162:	11 30       	cpi	r17, 0x01	; 1
    c164:	19 f4       	brne	.+6      	; 0xc16c <updatelevel+0x116>
    c166:	47 e7       	ldi	r20, 0x77	; 119
    c168:	57 e7       	ldi	r21, 0x77	; 119
    c16a:	09 c0       	rjmp	.+18     	; 0xc17e <updatelevel+0x128>
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    c16c:	12 30       	cpi	r17, 0x02	; 2
    c16e:	19 f4       	brne	.+6      	; 0xc176 <updatelevel+0x120>
    c170:	45 e8       	ldi	r20, 0x85	; 133
    c172:	57 e7       	ldi	r21, 0x77	; 119
    c174:	04 c0       	rjmp	.+8      	; 0xc17e <updatelevel+0x128>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    c176:	13 30       	cpi	r17, 0x03	; 3
    c178:	69 f5       	brne	.+90     	; 0xc1d4 <updatelevel+0x17e>
    c17a:	4f e7       	ldi	r20, 0x7F	; 127
    c17c:	57 e7       	ldi	r21, 0x77	; 119
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    c17e:	6c 2d       	mov	r22, r12
    c180:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c184:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c188:	10 c0       	rjmp	.+32     	; 0xc1aa <updatelevel+0x154>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    c18a:	12 33       	cpi	r17, 0x32	; 50
    c18c:	09 f0       	breq	.+2      	; 0xc190 <updatelevel+0x13a>
    c18e:	f5 c0       	rjmp	.+490    	; 0xc37a <updatelevel+0x324>
    c190:	4b e8       	ldi	r20, 0x8B	; 139
    c192:	57 e7       	ldi	r21, 0x77	; 119
    c194:	6c 2d       	mov	r22, r12
    c196:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c19a:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c19e:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c1a2:	b6 01       	movw	r22, r12
    c1a4:	90 e0       	ldi	r25, 0x00	; 0
    c1a6:	0e 94 49 5e 	call	0xbc92	; 0xbc92 <setowl>
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    c1aa:	8f ef       	ldi	r24, 0xFF	; 255
    c1ac:	e8 1a       	sub	r14, r24
    c1ae:	f8 0a       	sbc	r15, r24
    c1b0:	c6 5a       	subi	r28, 0xA6	; 166
    c1b2:	df 4f       	sbci	r29, 0xFF	; 255
    c1b4:	8d e0       	ldi	r24, 0x0D	; 13
    c1b6:	e8 16       	cp	r14, r24
    c1b8:	f1 04       	cpc	r15, r1
    c1ba:	09 f0       	breq	.+2      	; 0xc1be <updatelevel+0x168>
    c1bc:	57 cf       	rjmp	.-338    	; 0xc06c <updatelevel+0x16>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    c1be:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c1c2:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32)destX=0; 
    c1c4:	80 32       	cpi	r24, 0x20	; 32
    c1c6:	18 f4       	brcc	.+6      	; 0xc1ce <updatelevel+0x178>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    c1c8:	80 93 df 09 	sts	0x09DF, r24	; 0x8009df <destX>
    c1cc:	e7 c0       	rjmp	.+462    	; 0xc39c <updatelevel+0x346>
if(destX>=32)destX=0; 
    c1ce:	10 92 df 09 	sts	0x09DF, r1	; 0x8009df <destX>
}
    c1d2:	e4 c0       	rjmp	.+456    	; 0xc39c <updatelevel+0x346>
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) DrawMap2(destX  ,xi  ,block2);
    c1d4:	14 30       	cpi	r17, 0x04	; 4
    c1d6:	19 f4       	brne	.+6      	; 0xc1de <updatelevel+0x188>
    c1d8:	45 e3       	ldi	r20, 0x35	; 53
    c1da:	57 e7       	ldi	r21, 0x77	; 119
    c1dc:	d0 cf       	rjmp	.-96     	; 0xc17e <updatelevel+0x128>
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    c1de:	15 30       	cpi	r17, 0x05	; 5
    c1e0:	19 f4       	brne	.+6      	; 0xc1e8 <updatelevel+0x192>
    c1e2:	4f e6       	ldi	r20, 0x6F	; 111
    c1e4:	57 e7       	ldi	r21, 0x77	; 119
    c1e6:	cb cf       	rjmp	.-106    	; 0xc17e <updatelevel+0x128>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    c1e8:	16 30       	cpi	r17, 0x06	; 6
    c1ea:	19 f4       	brne	.+6      	; 0xc1f2 <updatelevel+0x19c>
    c1ec:	47 e6       	ldi	r20, 0x67	; 103
    c1ee:	57 e7       	ldi	r21, 0x77	; 119
    c1f0:	c6 cf       	rjmp	.-116    	; 0xc17e <updatelevel+0x128>
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    c1f2:	17 30       	cpi	r17, 0x07	; 7
    c1f4:	19 f4       	brne	.+6      	; 0xc1fc <updatelevel+0x1a6>
    c1f6:	4f e2       	ldi	r20, 0x2F	; 47
    c1f8:	57 e7       	ldi	r21, 0x77	; 119
    c1fa:	c1 cf       	rjmp	.-126    	; 0xc17e <updatelevel+0x128>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    c1fc:	18 30       	cpi	r17, 0x08	; 8
    c1fe:	19 f4       	brne	.+6      	; 0xc206 <updatelevel+0x1b0>
    c200:	4f e5       	ldi	r20, 0x5F	; 95
    c202:	57 e7       	ldi	r21, 0x77	; 119
    c204:	bc cf       	rjmp	.-136    	; 0xc17e <updatelevel+0x128>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    c206:	19 30       	cpi	r17, 0x09	; 9
    c208:	19 f4       	brne	.+6      	; 0xc210 <updatelevel+0x1ba>
    c20a:	49 e5       	ldi	r20, 0x59	; 89
    c20c:	57 e7       	ldi	r21, 0x77	; 119
    c20e:	b7 cf       	rjmp	.-146    	; 0xc17e <updatelevel+0x128>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    c210:	1a 30       	cpi	r17, 0x0A	; 10
    c212:	19 f4       	brne	.+6      	; 0xc21a <updatelevel+0x1c4>
    c214:	43 e5       	ldi	r20, 0x53	; 83
    c216:	57 e7       	ldi	r21, 0x77	; 119
    c218:	b2 cf       	rjmp	.-156    	; 0xc17e <updatelevel+0x128>
    if ( c == 11 ) DrawMap2(destX ,xi  ,tube0);
    c21a:	1b 30       	cpi	r17, 0x0B	; 11
    c21c:	19 f4       	brne	.+6      	; 0xc224 <updatelevel+0x1ce>
    c21e:	46 ee       	ldi	r20, 0xE6	; 230
    c220:	56 e7       	ldi	r21, 0x76	; 118
    c222:	ad cf       	rjmp	.-166    	; 0xc17e <updatelevel+0x128>
    if ( c == 12 ) DrawMap2(destX ,xi  ,tube1);
    c224:	1c 30       	cpi	r17, 0x0C	; 12
    c226:	19 f4       	brne	.+6      	; 0xc22e <updatelevel+0x1d8>
    c228:	40 ee       	ldi	r20, 0xE0	; 224
    c22a:	56 e7       	ldi	r21, 0x76	; 118
    c22c:	a8 cf       	rjmp	.-176    	; 0xc17e <updatelevel+0x128>
    if ( c == 13 ) DrawMap2(destX ,xi  ,tube2);
    c22e:	1d 30       	cpi	r17, 0x0D	; 13
    c230:	19 f4       	brne	.+6      	; 0xc238 <updatelevel+0x1e2>
    c232:	4a ed       	ldi	r20, 0xDA	; 218
    c234:	56 e7       	ldi	r21, 0x76	; 118
    c236:	a3 cf       	rjmp	.-186    	; 0xc17e <updatelevel+0x128>
    if ( c == 14 ) DrawMap2(destX ,xi  ,tube3);
    c238:	1e 30       	cpi	r17, 0x0E	; 14
    c23a:	19 f4       	brne	.+6      	; 0xc242 <updatelevel+0x1ec>
    c23c:	44 ed       	ldi	r20, 0xD4	; 212
    c23e:	56 e7       	ldi	r21, 0x76	; 118
    c240:	9e cf       	rjmp	.-196    	; 0xc17e <updatelevel+0x128>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    c242:	1f 30       	cpi	r17, 0x0F	; 15
    c244:	19 f4       	brne	.+6      	; 0xc24c <updatelevel+0x1f6>
    c246:	4e ec       	ldi	r20, 0xCE	; 206
    c248:	56 e7       	ldi	r21, 0x76	; 118
    c24a:	99 cf       	rjmp	.-206    	; 0xc17e <updatelevel+0x128>
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    c24c:	10 31       	cpi	r17, 0x10	; 16
    c24e:	19 f4       	brne	.+6      	; 0xc256 <updatelevel+0x200>
    c250:	48 ec       	ldi	r20, 0xC8	; 200
    c252:	56 e7       	ldi	r21, 0x76	; 118
    c254:	94 cf       	rjmp	.-216    	; 0xc17e <updatelevel+0x128>
    if ( c == 31 ) DrawMap2(destX ,xi  ,bush1);
    c256:	1f 31       	cpi	r17, 0x1F	; 31
    c258:	19 f4       	brne	.+6      	; 0xc260 <updatelevel+0x20a>
    c25a:	46 e1       	ldi	r20, 0x16	; 22
    c25c:	57 e7       	ldi	r21, 0x77	; 119
    c25e:	8f cf       	rjmp	.-226    	; 0xc17e <updatelevel+0x128>
    if ( c == 32 ) DrawMap2(destX ,xi  ,bush2);
    c260:	10 32       	cpi	r17, 0x20	; 32
    c262:	19 f4       	brne	.+6      	; 0xc26a <updatelevel+0x214>
    c264:	40 e1       	ldi	r20, 0x10	; 16
    c266:	57 e7       	ldi	r21, 0x77	; 119
    c268:	8a cf       	rjmp	.-236    	; 0xc17e <updatelevel+0x128>
    if ( c == 33 ) DrawMap2(destX ,xi  ,bush3);
    c26a:	11 32       	cpi	r17, 0x21	; 33
    c26c:	19 f4       	brne	.+6      	; 0xc274 <updatelevel+0x21e>
    c26e:	4a e0       	ldi	r20, 0x0A	; 10
    c270:	57 e7       	ldi	r21, 0x77	; 119
    c272:	85 cf       	rjmp	.-246    	; 0xc17e <updatelevel+0x128>
    if ( c == 34 ) DrawMap2(destX ,xi  ,bush4);
    c274:	12 32       	cpi	r17, 0x22	; 34
    c276:	19 f4       	brne	.+6      	; 0xc27e <updatelevel+0x228>
    c278:	44 e0       	ldi	r20, 0x04	; 4
    c27a:	57 e7       	ldi	r21, 0x77	; 119
    c27c:	80 cf       	rjmp	.-256    	; 0xc17e <updatelevel+0x128>
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    c27e:	13 32       	cpi	r17, 0x23	; 35
    c280:	19 f4       	brne	.+6      	; 0xc288 <updatelevel+0x232>
    c282:	4e ef       	ldi	r20, 0xFE	; 254
    c284:	56 e7       	ldi	r21, 0x76	; 118
    c286:	7b cf       	rjmp	.-266    	; 0xc17e <updatelevel+0x128>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    c288:	14 32       	cpi	r17, 0x24	; 36
    c28a:	19 f4       	brne	.+6      	; 0xc292 <updatelevel+0x23c>
    c28c:	48 ef       	ldi	r20, 0xF8	; 248
    c28e:	56 e7       	ldi	r21, 0x76	; 118
    c290:	76 cf       	rjmp	.-276    	; 0xc17e <updatelevel+0x128>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    c292:	15 32       	cpi	r17, 0x25	; 37
    c294:	19 f4       	brne	.+6      	; 0xc29c <updatelevel+0x246>
    c296:	42 ef       	ldi	r20, 0xF2	; 242
    c298:	56 e7       	ldi	r21, 0x76	; 118
    c29a:	71 cf       	rjmp	.-286    	; 0xc17e <updatelevel+0x128>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    c29c:	16 32       	cpi	r17, 0x26	; 38
    c29e:	19 f4       	brne	.+6      	; 0xc2a6 <updatelevel+0x250>
    c2a0:	4c ee       	ldi	r20, 0xEC	; 236
    c2a2:	56 e7       	ldi	r21, 0x76	; 118
    c2a4:	6c cf       	rjmp	.-296    	; 0xc17e <updatelevel+0x128>
    if ( c == 39 ) {DrawMap2(destX,xi  ,bridge0);DrawMap2(destX +1 ,xi,bridge0);DrawMap2(destX  ,xi + 1 ,nb);DrawMap2(destX +1 ,xi + 1 ,nb);};
    c2a6:	17 32       	cpi	r17, 0x27	; 39
    c2a8:	e1 f4       	brne	.+56     	; 0xc2e2 <updatelevel+0x28c>
    c2aa:	4d ea       	ldi	r20, 0xAD	; 173
    c2ac:	56 e7       	ldi	r21, 0x76	; 118
    c2ae:	6c 2d       	mov	r22, r12
    c2b0:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c2b4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c2b8:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c2bc:	4d ea       	ldi	r20, 0xAD	; 173
    c2be:	56 e7       	ldi	r21, 0x76	; 118
    c2c0:	6c 2d       	mov	r22, r12
    c2c2:	8f 5f       	subi	r24, 0xFF	; 255
    c2c4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c2c8:	c3 94       	inc	r12
    c2ca:	41 ea       	ldi	r20, 0xA1	; 161
    c2cc:	56 e7       	ldi	r21, 0x76	; 118
    c2ce:	6c 2d       	mov	r22, r12
    c2d0:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c2d4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c2d8:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c2dc:	41 ea       	ldi	r20, 0xA1	; 161
    c2de:	56 e7       	ldi	r21, 0x76	; 118
    c2e0:	43 c0       	rjmp	.+134    	; 0xc368 <updatelevel+0x312>
    if ( c == 21 ) DrawMap2(destX ,xi  ,mush0);
    c2e2:	15 31       	cpi	r17, 0x15	; 21
    c2e4:	19 f4       	brne	.+6      	; 0xc2ec <updatelevel+0x296>
    c2e6:	42 ec       	ldi	r20, 0xC2	; 194
    c2e8:	56 e7       	ldi	r21, 0x76	; 118
    c2ea:	49 cf       	rjmp	.-366    	; 0xc17e <updatelevel+0x128>
    if ( c == 22 ) DrawMap2(destX ,xi  ,mush1);
    c2ec:	16 31       	cpi	r17, 0x16	; 22
    c2ee:	19 f4       	brne	.+6      	; 0xc2f6 <updatelevel+0x2a0>
    c2f0:	4c eb       	ldi	r20, 0xBC	; 188
    c2f2:	56 e7       	ldi	r21, 0x76	; 118
    c2f4:	44 cf       	rjmp	.-376    	; 0xc17e <updatelevel+0x128>
    if ( c == 23 ) DrawMap2(destX ,xi  ,mush2);
    c2f6:	17 31       	cpi	r17, 0x17	; 23
    c2f8:	19 f4       	brne	.+6      	; 0xc300 <updatelevel+0x2aa>
    c2fa:	46 eb       	ldi	r20, 0xB6	; 182
    c2fc:	56 e7       	ldi	r21, 0x76	; 118
    c2fe:	3f cf       	rjmp	.-386    	; 0xc17e <updatelevel+0x128>
    if ( c == 24 ) DrawMap2(destX ,xi  ,mush3);	
    c300:	18 31       	cpi	r17, 0x18	; 24
    c302:	19 f4       	brne	.+6      	; 0xc30a <updatelevel+0x2b4>
    c304:	40 eb       	ldi	r20, 0xB0	; 176
    c306:	56 e7       	ldi	r21, 0x76	; 118
    c308:	3a cf       	rjmp	.-396    	; 0xc17e <updatelevel+0x128>
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    c30a:	19 31       	cpi	r17, 0x19	; 25
    c30c:	19 f4       	brne	.+6      	; 0xc314 <updatelevel+0x2be>
    c30e:	4d e4       	ldi	r20, 0x4D	; 77
    c310:	57 e7       	ldi	r21, 0x77	; 119
    c312:	35 cf       	rjmp	.-406    	; 0xc17e <updatelevel+0x128>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    c314:	1a 31       	cpi	r17, 0x1A	; 26
    c316:	19 f4       	brne	.+6      	; 0xc31e <updatelevel+0x2c8>
    c318:	47 e4       	ldi	r20, 0x47	; 71
    c31a:	57 e7       	ldi	r21, 0x77	; 119
    c31c:	30 cf       	rjmp	.-416    	; 0xc17e <updatelevel+0x128>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    c31e:	1b 31       	cpi	r17, 0x1B	; 27
    c320:	19 f4       	brne	.+6      	; 0xc328 <updatelevel+0x2d2>
    c322:	41 e4       	ldi	r20, 0x41	; 65
    c324:	57 e7       	ldi	r21, 0x77	; 119
    c326:	2b cf       	rjmp	.-426    	; 0xc17e <updatelevel+0x128>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    c328:	1c 31       	cpi	r17, 0x1C	; 28
    c32a:	19 f4       	brne	.+6      	; 0xc332 <updatelevel+0x2dc>
    c32c:	4b e3       	ldi	r20, 0x3B	; 59
    c32e:	57 e7       	ldi	r21, 0x77	; 119
    c330:	26 cf       	rjmp	.-436    	; 0xc17e <updatelevel+0x128>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    c332:	1d 31       	cpi	r17, 0x1D	; 29
    c334:	61 f4       	brne	.+24     	; 0xc34e <updatelevel+0x2f8>
    c336:	4d e2       	ldi	r20, 0x2D	; 45
    c338:	56 e7       	ldi	r21, 0x76	; 118
    c33a:	6c 2d       	mov	r22, r12
    c33c:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c340:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c344:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c348:	4d e2       	ldi	r20, 0x2D	; 45
    c34a:	56 e7       	ldi	r21, 0x76	; 118
    c34c:	0d c0       	rjmp	.+26     	; 0xc368 <updatelevel+0x312>
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    c34e:	1e 31       	cpi	r17, 0x1E	; 30
    c350:	71 f4       	brne	.+28     	; 0xc36e <updatelevel+0x318>
    c352:	49 e2       	ldi	r20, 0x29	; 41
    c354:	56 e7       	ldi	r21, 0x76	; 118
    c356:	6c 2d       	mov	r22, r12
    c358:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c35c:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c360:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c364:	49 e2       	ldi	r20, 0x29	; 41
    c366:	56 e7       	ldi	r21, 0x76	; 118
    c368:	6c 2d       	mov	r22, r12
    c36a:	8f 5f       	subi	r24, 0xFF	; 255
    c36c:	0b cf       	rjmp	.-490    	; 0xc184 <updatelevel+0x12e>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    c36e:	19 32       	cpi	r17, 0x29	; 41
    c370:	09 f0       	breq	.+2      	; 0xc374 <updatelevel+0x31e>
    c372:	0b cf       	rjmp	.-490    	; 0xc18a <updatelevel+0x134>
    c374:	49 e2       	ldi	r20, 0x29	; 41
    c376:	57 e7       	ldi	r21, 0x77	; 119
    c378:	02 cf       	rjmp	.-508    	; 0xc17e <updatelevel+0x128>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    c37a:	13 33       	cpi	r17, 0x33	; 51
    c37c:	09 f0       	breq	.+2      	; 0xc380 <updatelevel+0x32a>
    c37e:	15 cf       	rjmp	.-470    	; 0xc1aa <updatelevel+0x154>
    c380:	4b e8       	ldi	r20, 0x8B	; 139
    c382:	57 e7       	ldi	r21, 0x77	; 119
    c384:	6c 2d       	mov	r22, r12
    c386:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c38a:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    c38e:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c392:	b6 01       	movw	r22, r12
    c394:	90 e0       	ldi	r25, 0x00	; 0
    c396:	0e 94 86 5e 	call	0xbd0c	; 0xbd0c <setblob>
    c39a:	07 cf       	rjmp	.-498    	; 0xc1aa <updatelevel+0x154>
//block2 -> block1
    
destX++;
destX++;
if(destX>=32)destX=0; 
}
    c39c:	df 91       	pop	r29
    c39e:	cf 91       	pop	r28
    c3a0:	1f 91       	pop	r17
    c3a2:	ff 90       	pop	r15
    c3a4:	ef 90       	pop	r14
    c3a6:	df 90       	pop	r13
    c3a8:	cf 90       	pop	r12
    c3aa:	08 95       	ret

0000c3ac <initmonster>:
MonsteronScreen = true;    
}

void initmonster()
{
owl.onscreen = false;   
    c3ac:	10 92 dd 09 	sts	0x09DD, r1	; 0x8009dd <owl+0x9>
blob.onscreen = false;   
    c3b0:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <blob+0x9>
MonsteronScreen = false;
    c3b4:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <MonsteronScreen>
    c3b8:	08 95       	ret

0000c3ba <movelevel>:
}

void movelevel()
{
if (player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    c3ba:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    c3be:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    c3c2:	86 39       	cpi	r24, 0x96	; 150
    c3c4:	91 05       	cpc	r25, r1
    c3c6:	94 f1       	brlt	.+100    	; 0xc42c <movelevel+0x72>
    c3c8:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c3cc:	90 e0       	ldi	r25, 0x00	; 0
    c3ce:	8c 34       	cpi	r24, 0x4C	; 76
    c3d0:	91 05       	cpc	r25, r1
    c3d2:	64 f5       	brge	.+88     	; 0xc42c <movelevel+0x72>
Scroll(1 ,0);   
    c3d4:	60 e0       	ldi	r22, 0x00	; 0
    c3d6:	81 e0       	ldi	r24, 0x01	; 1
    c3d8:	0e 94 2e 4d 	call	0x9a5c	; 0x9a5c <Scroll>
Levelx  = Levelx + 1;
    c3dc:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    c3e0:	8f 5f       	subi	r24, 0xFF	; 255
    c3e2:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <Levelx>
player.x = player.x - 1;
    c3e6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    c3ea:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    c3ee:	01 97       	sbiw	r24, 0x01	; 1
    c3f0:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    c3f4:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
player2.x = player2.x -1;
    c3f8:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <player2>
    c3fc:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <player2+0x1>
    c400:	01 97       	sbiw	r24, 0x01	; 1
    c402:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    c406:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
scrollmonster(-1);
    c40a:	8f ef       	ldi	r24, 0xFF	; 255
    c40c:	9f ef       	ldi	r25, 0xFF	; 255
    c40e:	0e 94 23 5e 	call	0xbc46	; 0xbc46 <scrollmonster>
if ( Levelx >= 16 )
    c412:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    c416:	80 31       	cpi	r24, 0x10	; 16
    c418:	48 f0       	brcs	.+18     	; 0xc42c <movelevel+0x72>
{
updatelevel();
    c41a:	0e 94 2b 60 	call	0xc056	; 0xc056 <updatelevel>
scrolltiles++; 
    c41e:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c422:	8f 5f       	subi	r24, 0xFF	; 255
    c424:	80 93 24 0a 	sts	0x0A24, r24	; 0x800a24 <scrolltiles>
Levelx = 0;    
    c428:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
    c42c:	08 95       	ret

0000c42e <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    c42e:	cf 92       	push	r12
    c430:	df 92       	push	r13
    c432:	ef 92       	push	r14
    c434:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    c436:	2c e3       	ldi	r18, 0x3C	; 60
    c438:	30 e0       	ldi	r19, 0x00	; 0
    c43a:	40 e0       	ldi	r20, 0x00	; 0
    c43c:	50 e0       	ldi	r21, 0x00	; 0
    c43e:	0e 94 fa 66 	call	0xcdf4	; 0xcdf4 <__udivmodsi4>
    tmp = 99 - tmp ;
    c442:	83 e6       	ldi	r24, 0x63	; 99
    c444:	c8 2e       	mov	r12, r24
    c446:	d1 2c       	mov	r13, r1
    c448:	e1 2c       	mov	r14, r1
    c44a:	f1 2c       	mov	r15, r1
    c44c:	c2 1a       	sub	r12, r18
    c44e:	d3 0a       	sbc	r13, r19
    c450:	e4 0a       	sbc	r14, r20
    c452:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    c454:	40 91 1a 0a 	lds	r20, 0x0A1A	; 0x800a1a <leveltime>
    c458:	84 2f       	mov	r24, r20
    c45a:	90 e0       	ldi	r25, 0x00	; 0
    c45c:	a0 e0       	ldi	r26, 0x00	; 0
    c45e:	b0 e0       	ldi	r27, 0x00	; 0
    c460:	c8 16       	cp	r12, r24
    c462:	d9 06       	cpc	r13, r25
    c464:	ea 06       	cpc	r14, r26
    c466:	fb 06       	cpc	r15, r27
    c468:	10 f0       	brcs	.+4      	; 0xc46e <updatetime+0x40>
    c46a:	41 11       	cpse	r20, r1
    c46c:	09 c0       	rjmp	.+18     	; 0xc480 <updatetime+0x52>
    c46e:	50 e0       	ldi	r21, 0x00	; 0
    c470:	22 e0       	ldi	r18, 0x02	; 2
    c472:	30 e0       	ldi	r19, 0x00	; 0
    c474:	60 e0       	ldi	r22, 0x00	; 0
    c476:	70 e0       	ldi	r23, 0x00	; 0
    c478:	8a e1       	ldi	r24, 0x1A	; 26
    c47a:	90 e0       	ldi	r25, 0x00	; 0
    c47c:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
    leveltime = tmp;
    c480:	c0 92 1a 0a 	sts	0x0A1A, r12	; 0x800a1a <leveltime>
    if (leveltime == 0 ) timeisup = true;
    c484:	c1 10       	cpse	r12, r1
    c486:	03 c0       	rjmp	.+6      	; 0xc48e <updatetime+0x60>
    c488:	81 e0       	ldi	r24, 0x01	; 1
    c48a:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <timeisup>
    
}
    c48e:	ff 90       	pop	r15
    c490:	ef 90       	pop	r14
    c492:	df 90       	pop	r13
    c494:	cf 90       	pop	r12
    c496:	08 95       	ret

0000c498 <playintro>:

void playintro()
{
    c498:	0f 93       	push	r16
    c49a:	cf 93       	push	r28
    c49c:	df 93       	push	r29

introplaying = true;
    c49e:	c1 e0       	ldi	r28, 0x01	; 1
    c4a0:	c0 93 7e 09 	sts	0x097E, r28	; 0x80097e <introplaying>
Levelx = 0;
    c4a4:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
scrolltiles = 0;
    c4a8:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
player2.speed = 1;
    c4ac:	21 e0       	ldi	r18, 0x01	; 1
    c4ae:	30 e0       	ldi	r19, 0x00	; 0
    c4b0:	30 93 bd 09 	sts	0x09BD, r19	; 0x8009bd <player2+0x5>
    c4b4:	20 93 bc 09 	sts	0x09BC, r18	; 0x8009bc <player2+0x4>
player2.x = 21;
    c4b8:	85 e1       	ldi	r24, 0x15	; 21
    c4ba:	90 e0       	ldi	r25, 0x00	; 0
    c4bc:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <player2+0x1>
    c4c0:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <player2>
player2.y = 191;
    c4c4:	8f eb       	ldi	r24, 0xBF	; 191
    c4c6:	90 e0       	ldi	r25, 0x00	; 0
    c4c8:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <player2+0x3>
    c4cc:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <player2+0x2>
player2.touchground = true;
    c4d0:	c0 93 c9 09 	sts	0x09C9, r28	; 0x8009c9 <player2+0x11>
player.speed = 1;
    c4d4:	30 93 68 09 	sts	0x0968, r19	; 0x800968 <player+0x5>
    c4d8:	20 93 67 09 	sts	0x0967, r18	; 0x800967 <player+0x4>
player.x = 8;
    c4dc:	28 e0       	ldi	r18, 0x08	; 8
    c4de:	30 e0       	ldi	r19, 0x00	; 0
    c4e0:	30 93 64 09 	sts	0x0964, r19	; 0x800964 <player+0x1>
    c4e4:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <player>
player.y = 191;
    c4e8:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <player+0x3>
    c4ec:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <player+0x2>
player.touchground = true;
    c4f0:	c0 93 74 09 	sts	0x0974, r28	; 0x800974 <player+0x11>
player.jumping = false;
    c4f4:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x14>
player.jumpreleased = true;
    c4f8:	c0 93 78 09 	sts	0x0978, r28	; 0x800978 <player+0x15>
initlevel();
    c4fc:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>
initmonster();
    c500:	0e 94 d6 61 	call	0xc3ac	; 0xc3ac <initmonster>
setheadline();    
    c504:	0e 94 1b 58 	call	0xb036	; 0xb036 <setheadline>
drawlevel(Levelx);
    c508:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    c50c:	90 e0       	ldi	r25, 0x00	; 0
    c50e:	0e 94 c3 5e 	call	0xbd86	; 0xbd86 <drawlevel>
setheadline();
    c512:	0e 94 1b 58 	call	0xb036	; 0xb036 <setheadline>
MapSprite2(0 ,pac0 ,0);
    c516:	40 e0       	ldi	r20, 0x00	; 0
    c518:	63 e2       	ldi	r22, 0x23	; 35
    c51a:	77 e4       	ldi	r23, 0x47	; 71
    c51c:	80 e0       	ldi	r24, 0x00	; 0
    c51e:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
MapSprite2(spriteInd ,run0,0);
    c522:	40 e0       	ldi	r20, 0x00	; 0
    c524:	65 e0       	ldi	r22, 0x05	; 5
    c526:	77 e4       	ldi	r23, 0x47	; 71
    c528:	8a e0       	ldi	r24, 0x0A	; 10
    c52a:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    c52e:	40 e0       	ldi	r20, 0x00	; 0
    c530:	61 e1       	ldi	r22, 0x11	; 17
    c532:	77 e4       	ldi	r23, 0x47	; 71
    c534:	86 e0       	ldi	r24, 0x06	; 6
    c536:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
score = 0;
    c53a:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <score+0x1>
    c53e:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <score>
leveltime = 99;
    c542:	83 e6       	ldi	r24, 0x63	; 99
    c544:	80 93 1a 0a 	sts	0x0A1A, r24	; 0x800a1a <leveltime>
time = 0;
    c548:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    c54c:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    c550:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    c554:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
lives = 3;    
    c558:	83 e0       	ldi	r24, 0x03	; 3
    c55a:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
level = 0;
    c55e:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <level>
bonus = 0;
    c562:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    c566:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
scrolltiles = 0;
    c56a:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
Screen.scrollX = 0;
    c56e:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
destX = 0;
    c572:	10 92 df 09 	sts	0x09DF, r1	; 0x8009df <destX>
Levelx = 0;
    c576:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
setheadline();
    c57a:	0e 94 1b 58 	call	0xb036	; 0xb036 <setheadline>
printheadlineintro();
    c57e:	0e 94 7c 52 	call	0xa4f8	; 0xa4f8 <printheadlineintro>
player.direction = 'r';
    c582:	82 e7       	ldi	r24, 0x72	; 114
    c584:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <player+0xe>
player.action = 'w';
    c588:	87 e7       	ldi	r24, 0x77	; 119
    c58a:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xd>
player.facing = 0;
    c58e:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xc>
    c592:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xb>
player.ximpulse = 1; 
    c596:	c0 93 75 09 	sts	0x0975, r28	; 0x800975 <player+0x12>
FadeIn(1, true);
    c59a:	61 e0       	ldi	r22, 0x01	; 1
    c59c:	81 e0       	ldi	r24, 0x01	; 1
    c59e:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 36 && Levelx == 10 ) )
{
player.action = 'j';
    c5a2:	da e6       	ldi	r29, 0x6A	; 106
player.direction = 'r';
player.action = 'w';
player.facing = 0;
player.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    c5a4:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    c5a8:	88 23       	and	r24, r24
    c5aa:	09 f4       	brne	.+2      	; 0xc5ae <playintro+0x116>
    c5ac:	f8 c0       	rjmp	.+496    	; 0xc79e <playintro+0x306>
{
moveplayer();  
    c5ae:	0e 94 f6 5a 	call	0xb5ec	; 0xb5ec <moveplayer>
moveplayer2();
    c5b2:	0e 94 95 55 	call	0xab2a	; 0xab2a <moveplayer2>
movemonster(); 
    c5b6:	0e 94 91 58 	call	0xb122	; 0xb122 <movemonster>
WaitVsync(1); 
    c5ba:	81 e0       	ldi	r24, 0x01	; 1
    c5bc:	90 e0       	ldi	r25, 0x00	; 0
    c5be:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
drawmonster();       
    c5c2:	0e 94 28 58 	call	0xb050	; 0xb050 <drawmonster>
movelevel();
    c5c6:	0e 94 dd 61 	call	0xc3ba	; 0xc3ba <movelevel>
drawplayer();
    c5ca:	0e 94 b2 4e 	call	0x9d64	; 0x9d64 <drawplayer>
drawplayer2();        
    c5ce:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <drawplayer2>
  



player.ximpulse = 1;
    c5d2:	c0 93 75 09 	sts	0x0975, r28	; 0x800975 <player+0x12>
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    c5d6:	40 91 b3 09 	lds	r20, 0x09B3	; 0x8009b3 <time>
    c5da:	50 91 b4 09 	lds	r21, 0x09B4	; 0x8009b4 <time+0x1>
    c5de:	60 91 b5 09 	lds	r22, 0x09B5	; 0x8009b5 <time+0x2>
    c5e2:	70 91 b6 09 	lds	r23, 0x09B6	; 0x8009b6 <time+0x3>
    c5e6:	43 3d       	cpi	r20, 0xD3	; 211
    c5e8:	51 05       	cpc	r21, r1
    c5ea:	61 05       	cpc	r22, r1
    c5ec:	71 05       	cpc	r23, r1
    c5ee:	28 f4       	brcc	.+10     	; 0xc5fa <playintro+0x162>
    c5f0:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    c5f4:	81 11       	cpse	r24, r1
    c5f6:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x12>
    lx = 12 + destX;
    c5fa:	80 91 df 09 	lds	r24, 0x09DF	; 0x8009df <destX>
    c5fe:	90 e0       	ldi	r25, 0x00	; 0
    c600:	9c 01       	movw	r18, r24
    c602:	24 5f       	subi	r18, 0xF4	; 244
    c604:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    c606:	20 32       	cpi	r18, 0x20	; 32
    c608:	31 05       	cpc	r19, r1
    c60a:	2c f4       	brge	.+10     	; 0xc616 <playintro+0x17e>



player.ximpulse = 1;
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    lx = 12 + destX;
    c60c:	30 93 20 0a 	sts	0x0A20, r19	; 0x800a20 <lx+0x1>
    c610:	20 93 1f 0a 	sts	0x0A1F, r18	; 0x800a1f <lx>
    c614:	05 c0       	rjmp	.+10     	; 0xc620 <playintro+0x188>
    if (lx >= 32 ) lx = lx - 32;
    c616:	44 97       	sbiw	r24, 0x14	; 20
    c618:	90 93 20 0a 	sts	0x0A20, r25	; 0x800a20 <lx+0x1>
    c61c:	80 93 1f 0a 	sts	0x0A1F, r24	; 0x800a1f <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    c620:	4c 33       	cpi	r20, 0x3C	; 60
    c622:	51 05       	cpc	r21, r1
    c624:	61 05       	cpc	r22, r1
    c626:	71 05       	cpc	r23, r1
    c628:	29 f0       	breq	.+10     	; 0xc634 <playintro+0x19c>
    c62a:	40 3f       	cpi	r20, 0xF0	; 240
    c62c:	51 05       	cpc	r21, r1
    c62e:	61 05       	cpc	r22, r1
    c630:	71 05       	cpc	r23, r1
    c632:	59 f4       	brne	.+22     	; 0xc64a <playintro+0x1b2>
    c634:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    c638:	88 23       	and	r24, r24
    c63a:	39 f0       	breq	.+14     	; 0xc64a <playintro+0x1b2>
    c63c:	4e e4       	ldi	r20, 0x4E	; 78
    c63e:	56 e7       	ldi	r21, 0x76	; 118
    c640:	62 e1       	ldi	r22, 0x12	; 18
    c642:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c646:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    c64a:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    c64e:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    c652:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    c656:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    c65a:	86 39       	cpi	r24, 0x96	; 150
    c65c:	91 05       	cpc	r25, r1
    c65e:	a1 05       	cpc	r26, r1
    c660:	b1 05       	cpc	r27, r1
    c662:	31 f0       	breq	.+12     	; 0xc670 <playintro+0x1d8>
    c664:	8a 34       	cpi	r24, 0x4A	; 74
    c666:	91 40       	sbci	r25, 0x01	; 1
    c668:	a1 05       	cpc	r26, r1
    c66a:	b1 05       	cpc	r27, r1
    c66c:	09 f0       	breq	.+2      	; 0xc670 <playintro+0x1d8>
    c66e:	44 c0       	rjmp	.+136    	; 0xc6f8 <playintro+0x260>
    c670:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    c674:	88 23       	and	r24, r24
    c676:	09 f4       	brne	.+2      	; 0xc67a <playintro+0x1e2>
    c678:	3f c0       	rjmp	.+126    	; 0xc6f8 <playintro+0x260>
    DrawMap2(  lx,  18 ,nb );   
    c67a:	41 ea       	ldi	r20, 0xA1	; 161
    c67c:	56 e7       	ldi	r21, 0x76	; 118
    c67e:	62 e1       	ldi	r22, 0x12	; 18
    c680:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c684:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    c688:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c68c:	41 ea       	ldi	r20, 0xA1	; 161
    c68e:	56 e7       	ldi	r21, 0x76	; 118
    c690:	62 e1       	ldi	r22, 0x12	; 18
    c692:	8f 5f       	subi	r24, 0xFF	; 255
    c694:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    c698:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c69c:	41 ea       	ldi	r20, 0xA1	; 161
    c69e:	56 e7       	ldi	r21, 0x76	; 118
    c6a0:	62 e1       	ldi	r22, 0x12	; 18
    c6a2:	8e 5f       	subi	r24, 0xFE	; 254
    c6a4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    c6a8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c6ac:	41 ea       	ldi	r20, 0xA1	; 161
    c6ae:	56 e7       	ldi	r21, 0x76	; 118
    c6b0:	62 e1       	ldi	r22, 0x12	; 18
    c6b2:	8d 5f       	subi	r24, 0xFD	; 253
    c6b4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    c6b8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c6bc:	41 ea       	ldi	r20, 0xA1	; 161
    c6be:	56 e7       	ldi	r21, 0x76	; 118
    c6c0:	62 e1       	ldi	r22, 0x12	; 18
    c6c2:	8c 5f       	subi	r24, 0xFC	; 252
    c6c4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    c6c8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c6cc:	41 ea       	ldi	r20, 0xA1	; 161
    c6ce:	56 e7       	ldi	r21, 0x76	; 118
    c6d0:	62 e1       	ldi	r22, 0x12	; 18
    c6d2:	8b 5f       	subi	r24, 0xFB	; 251
    c6d4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    c6d8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c6dc:	41 ea       	ldi	r20, 0xA1	; 161
    c6de:	56 e7       	ldi	r21, 0x76	; 118
    c6e0:	62 e1       	ldi	r22, 0x12	; 18
    c6e2:	8a 5f       	subi	r24, 0xFA	; 250
    c6e4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    c6e8:	80 91 1f 0a 	lds	r24, 0x0A1F	; 0x800a1f <lx>
    c6ec:	41 ea       	ldi	r20, 0xA1	; 161
    c6ee:	56 e7       	ldi	r21, 0x76	; 118
    c6f0:	62 e1       	ldi	r22, 0x12	; 18
    c6f2:	89 5f       	subi	r24, 0xF9	; 249
    c6f4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
    
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 36 && Levelx == 10 ) )
    c6f8:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player>
    c6fc:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x1>
    c700:	85 39       	cpi	r24, 0x95	; 149
    c702:	91 05       	cpc	r25, r1
    c704:	41 f5       	brne	.+80     	; 0xc756 <playintro+0x2be>
    c706:	80 91 24 0a 	lds	r24, 0x0A24	; 0x800a24 <scrolltiles>
    c70a:	8e 30       	cpi	r24, 0x0E	; 14
    c70c:	31 f4       	brne	.+12     	; 0xc71a <playintro+0x282>
    c70e:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    c712:	82 30       	cpi	r24, 0x02	; 2
    c714:	09 f0       	breq	.+2      	; 0xc718 <playintro+0x280>
    c716:	46 cf       	rjmp	.-372    	; 0xc5a4 <playintro+0x10c>
    c718:	0e c0       	rjmp	.+28     	; 0xc736 <playintro+0x29e>
    c71a:	87 31       	cpi	r24, 0x17	; 23
    c71c:	39 f0       	breq	.+14     	; 0xc72c <playintro+0x294>
    c71e:	80 32       	cpi	r24, 0x20	; 32
    c720:	29 f0       	breq	.+10     	; 0xc72c <playintro+0x294>
    c722:	8a 32       	cpi	r24, 0x2A	; 42
    c724:	19 f0       	breq	.+6      	; 0xc72c <playintro+0x294>
    c726:	84 32       	cpi	r24, 0x24	; 36
    c728:	09 f0       	breq	.+2      	; 0xc72c <playintro+0x294>
    c72a:	3c cf       	rjmp	.-392    	; 0xc5a4 <playintro+0x10c>
    c72c:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    c730:	8a 30       	cpi	r24, 0x0A	; 10
    c732:	09 f0       	breq	.+2      	; 0xc736 <playintro+0x29e>
    c734:	37 cf       	rjmp	.-402    	; 0xc5a4 <playintro+0x10c>
{
player.action = 'j';
    c736:	d0 93 70 09 	sts	0x0970, r29	; 0x800970 <player+0xd>
player.yimpulse = 0;
    c73a:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x13>
player.jumping = true;
    c73e:	c0 93 77 09 	sts	0x0977, r28	; 0x800977 <player+0x14>
player.touchground = false;
    c742:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x11>
player.jumpreleased = false;
    c746:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <player+0x15>
player.jumpcounter++ ; 
    c74a:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x19>
    c74e:	8f 5f       	subi	r24, 0xFF	; 255
    c750:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x19>
    c754:	27 cf       	rjmp	.-434    	; 0xc5a4 <playintro+0x10c>
};  
if ( player.x  == 160 ) time = 0;   
    c756:	80 3a       	cpi	r24, 0xA0	; 160
    c758:	91 05       	cpc	r25, r1
    c75a:	49 f4       	brne	.+18     	; 0xc76e <playintro+0x2d6>
    c75c:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    c760:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    c764:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    c768:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
    c76c:	1b cf       	rjmp	.-458    	; 0xc5a4 <playintro+0x10c>
if ( player.x >= 206 ) player.ximpulse = 0;
    c76e:	8e 3c       	cpi	r24, 0xCE	; 206
    c770:	91 05       	cpc	r25, r1
    c772:	1c f0       	brlt	.+6      	; 0xc77a <playintro+0x2e2>
    c774:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x12>
    c778:	04 c0       	rjmp	.+8      	; 0xc782 <playintro+0x2ea>
if ( player.x >= 180 && time > 420 ) { 
    c77a:	84 3b       	cpi	r24, 0xB4	; 180
    c77c:	91 05       	cpc	r25, r1
    c77e:	0c f4       	brge	.+2      	; 0xc782 <playintro+0x2ea>
    c780:	11 cf       	rjmp	.-478    	; 0xc5a4 <playintro+0x10c>
    c782:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    c786:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    c78a:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    c78e:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    c792:	85 3a       	cpi	r24, 0xA5	; 165
    c794:	91 40       	sbci	r25, 0x01	; 1
    c796:	a1 05       	cpc	r26, r1
    c798:	b1 05       	cpc	r27, r1
    c79a:	08 f4       	brcc	.+2      	; 0xc79e <playintro+0x306>
    c79c:	03 cf       	rjmp	.-506    	; 0xc5a4 <playintro+0x10c>
                                 
                                      break; };
};

FadeOut(5,true); 
    c79e:	61 e0       	ldi	r22, 0x01	; 1
    c7a0:	85 e0       	ldi	r24, 0x05	; 5
    c7a2:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
player.x = 8;
    c7a6:	88 e0       	ldi	r24, 0x08	; 8
    c7a8:	90 e0       	ldi	r25, 0x00	; 0
    c7aa:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x1>
    c7ae:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player>
player.y = 191;
    c7b2:	8f eb       	ldi	r24, 0xBF	; 191
    c7b4:	90 e0       	ldi	r25, 0x00	; 0
    c7b6:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <player+0x3>
    c7ba:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    c7be:	02 e0       	ldi	r16, 0x02	; 2
    c7c0:	22 e0       	ldi	r18, 0x02	; 2
    c7c2:	4a ea       	ldi	r20, 0xAA	; 170
    c7c4:	61 e0       	ldi	r22, 0x01	; 1
    c7c6:	80 e0       	ldi	r24, 0x00	; 0
    c7c8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>

}
    c7cc:	df 91       	pop	r29
    c7ce:	cf 91       	pop	r28
    c7d0:	0f 91       	pop	r16
    c7d2:	08 95       	ret

0000c7d4 <showgetready>:

void showgetready()
{
    c7d4:	0f 93       	push	r16
FadeOut(0, true);
    c7d6:	61 e0       	ldi	r22, 0x01	; 1
    c7d8:	80 e0       	ldi	r24, 0x00	; 0
    c7da:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
Screen.scrollX = 0;
    c7de:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
initlevel();
    c7e2:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>

printheadline();
    c7e6:	0e 94 37 52 	call	0xa46e	; 0xa46e <printheadline>
printtileint( 26 ,0,99,2); 
    c7ea:	22 e0       	ldi	r18, 0x02	; 2
    c7ec:	30 e0       	ldi	r19, 0x00	; 0
    c7ee:	43 e6       	ldi	r20, 0x63	; 99
    c7f0:	50 e0       	ldi	r21, 0x00	; 0
    c7f2:	60 e0       	ldi	r22, 0x00	; 0
    c7f4:	70 e0       	ldi	r23, 0x00	; 0
    c7f6:	8a e1       	ldi	r24, 0x1A	; 26
    c7f8:	90 e0       	ldi	r25, 0x00	; 0
    c7fa:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    c7fe:	02 e0       	ldi	r16, 0x02	; 2
    c800:	22 e0       	ldi	r18, 0x02	; 2
    c802:	4c ee       	ldi	r20, 0xEC	; 236
    c804:	6c ee       	ldi	r22, 0xEC	; 236
    c806:	80 e0       	ldi	r24, 0x00	; 0
    c808:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    c80c:	22 e0       	ldi	r18, 0x02	; 2
    c80e:	4c ee       	ldi	r20, 0xEC	; 236
    c810:	6c ee       	ldi	r22, 0xEC	; 236
    c812:	86 e0       	ldi	r24, 0x06	; 6
    c814:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    c818:	42 e6       	ldi	r20, 0x62	; 98
    c81a:	56 e7       	ldi	r21, 0x76	; 118
    c81c:	6a e0       	ldi	r22, 0x0A	; 10
    c81e:	8b e0       	ldi	r24, 0x0B	; 11
    c820:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
WaitVsync(1);  
    c824:	81 e0       	ldi	r24, 0x01	; 1
    c826:	90 e0       	ldi	r25, 0x00	; 0
    c828:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
FadeIn(0, true);
    c82c:	61 e0       	ldi	r22, 0x01	; 1
    c82e:	80 e0       	ldi	r24, 0x00	; 0
    c830:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>
time = 0;
    c834:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    c838:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    c83c:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    c840:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
while ( time < 240 )
    c844:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    c848:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    c84c:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    c850:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    c854:	80 3f       	cpi	r24, 0xF0	; 240
    c856:	91 05       	cpc	r25, r1
    c858:	a1 05       	cpc	r26, r1
    c85a:	b1 05       	cpc	r27, r1
    c85c:	80 f4       	brcc	.+32     	; 0xc87e <showgetready+0xaa>
{ time++;    
    c85e:	01 96       	adiw	r24, 0x01	; 1
    c860:	a1 1d       	adc	r26, r1
    c862:	b1 1d       	adc	r27, r1
    c864:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <time>
    c868:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <time+0x1>
    c86c:	a0 93 b5 09 	sts	0x09B5, r26	; 0x8009b5 <time+0x2>
    c870:	b0 93 b6 09 	sts	0x09B6, r27	; 0x8009b6 <time+0x3>
WaitVsync(1);    
    c874:	81 e0       	ldi	r24, 0x01	; 1
    c876:	90 e0       	ldi	r25, 0x00	; 0
    c878:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    c87c:	e3 cf       	rjmp	.-58     	; 0xc844 <showgetready+0x70>
};
 FadeOut(0, true);    
    c87e:	61 e0       	ldi	r22, 0x01	; 1
    c880:	80 e0       	ldi	r24, 0x00	; 0
};
    c882:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    c884:	0c 94 69 4e 	jmp	0x9cd2	; 0x9cd2 <FadeOut>

0000c888 <showgameover>:
};

void showgameover()
{
    c888:	0f 93       	push	r16
FadeOut(0, true);
    c88a:	61 e0       	ldi	r22, 0x01	; 1
    c88c:	80 e0       	ldi	r24, 0x00	; 0
    c88e:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
Screen.scrollX = 0;
    c892:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
initlevel();
    c896:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    c89a:	02 e0       	ldi	r16, 0x02	; 2
    c89c:	22 e0       	ldi	r18, 0x02	; 2
    c89e:	4c ee       	ldi	r20, 0xEC	; 236
    c8a0:	6c ee       	ldi	r22, 0xEC	; 236
    c8a2:	80 e0       	ldi	r24, 0x00	; 0
    c8a4:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    c8a8:	22 e0       	ldi	r18, 0x02	; 2
    c8aa:	4c ee       	ldi	r20, 0xEC	; 236
    c8ac:	6c ee       	ldi	r22, 0xEC	; 236
    c8ae:	86 e0       	ldi	r24, 0x06	; 6
    c8b0:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    c8b4:	45 e4       	ldi	r20, 0x45	; 69
    c8b6:	56 e7       	ldi	r21, 0x76	; 118
    c8b8:	6a e0       	ldi	r22, 0x0A	; 10
    c8ba:	8b e0       	ldi	r24, 0x0B	; 11
    c8bc:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
WaitVsync(1);  
    c8c0:	81 e0       	ldi	r24, 0x01	; 1
    c8c2:	90 e0       	ldi	r25, 0x00	; 0
    c8c4:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
FadeIn(0, true);
    c8c8:	61 e0       	ldi	r22, 0x01	; 1
    c8ca:	80 e0       	ldi	r24, 0x00	; 0
    c8cc:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>
time = 0;
    c8d0:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    c8d4:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    c8d8:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    c8dc:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
while ( time < 240 )
    c8e0:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    c8e4:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    c8e8:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    c8ec:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    c8f0:	80 3f       	cpi	r24, 0xF0	; 240
    c8f2:	91 05       	cpc	r25, r1
    c8f4:	a1 05       	cpc	r26, r1
    c8f6:	b1 05       	cpc	r27, r1
    c8f8:	80 f4       	brcc	.+32     	; 0xc91a <showgameover+0x92>
{ time++;    
    c8fa:	01 96       	adiw	r24, 0x01	; 1
    c8fc:	a1 1d       	adc	r26, r1
    c8fe:	b1 1d       	adc	r27, r1
    c900:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <time>
    c904:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <time+0x1>
    c908:	a0 93 b5 09 	sts	0x09B5, r26	; 0x8009b5 <time+0x2>
    c90c:	b0 93 b6 09 	sts	0x09B6, r27	; 0x8009b6 <time+0x3>
WaitVsync(1);    
    c910:	81 e0       	ldi	r24, 0x01	; 1
    c912:	90 e0       	ldi	r25, 0x00	; 0
    c914:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    c918:	e3 cf       	rjmp	.-58     	; 0xc8e0 <showgameover+0x58>
};
 FadeOut(0, true);    
    c91a:	61 e0       	ldi	r22, 0x01	; 1
    c91c:	80 e0       	ldi	r24, 0x00	; 0
};
    c91e:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    c920:	0c 94 69 4e 	jmp	0x9cd2	; 0x9cd2 <FadeOut>

0000c924 <showtimesup>:
};
void showtimesup()
{
    c924:	0f 93       	push	r16
FadeOut(0, true);
    c926:	61 e0       	ldi	r22, 0x01	; 1
    c928:	80 e0       	ldi	r24, 0x00	; 0
    c92a:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
Screen.scrollX = 0;
    c92e:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
initlevel();
    c932:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    c936:	02 e0       	ldi	r16, 0x02	; 2
    c938:	22 e0       	ldi	r18, 0x02	; 2
    c93a:	4c ee       	ldi	r20, 0xEC	; 236
    c93c:	6c ee       	ldi	r22, 0xEC	; 236
    c93e:	80 e0       	ldi	r24, 0x00	; 0
    c940:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    c944:	22 e0       	ldi	r18, 0x02	; 2
    c946:	4c ee       	ldi	r20, 0xEC	; 236
    c948:	6c ee       	ldi	r22, 0xEC	; 236
    c94a:	86 e0       	ldi	r24, 0x06	; 6
    c94c:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    c950:	4d e3       	ldi	r20, 0x3D	; 61
    c952:	56 e7       	ldi	r21, 0x76	; 118
    c954:	6a e0       	ldi	r22, 0x0A	; 10
    c956:	8b e0       	ldi	r24, 0x0B	; 11
    c958:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
WaitVsync(1);  
    c95c:	81 e0       	ldi	r24, 0x01	; 1
    c95e:	90 e0       	ldi	r25, 0x00	; 0
    c960:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
FadeIn(0, true);
    c964:	61 e0       	ldi	r22, 0x01	; 1
    c966:	80 e0       	ldi	r24, 0x00	; 0
    c968:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>
time = 0;
    c96c:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    c970:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    c974:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    c978:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
while ( time < 240 )
    c97c:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    c980:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    c984:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    c988:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    c98c:	80 3f       	cpi	r24, 0xF0	; 240
    c98e:	91 05       	cpc	r25, r1
    c990:	a1 05       	cpc	r26, r1
    c992:	b1 05       	cpc	r27, r1
    c994:	80 f4       	brcc	.+32     	; 0xc9b6 <showtimesup+0x92>
{ time++;    
    c996:	01 96       	adiw	r24, 0x01	; 1
    c998:	a1 1d       	adc	r26, r1
    c99a:	b1 1d       	adc	r27, r1
    c99c:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <time>
    c9a0:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <time+0x1>
    c9a4:	a0 93 b5 09 	sts	0x09B5, r26	; 0x8009b5 <time+0x2>
    c9a8:	b0 93 b6 09 	sts	0x09B6, r27	; 0x8009b6 <time+0x3>
WaitVsync(1);    
    c9ac:	81 e0       	ldi	r24, 0x01	; 1
    c9ae:	90 e0       	ldi	r25, 0x00	; 0
    c9b0:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    c9b4:	e3 cf       	rjmp	.-58     	; 0xc97c <showtimesup+0x58>
};
 FadeOut(0, true);    
    c9b6:	61 e0       	ldi	r22, 0x01	; 1
    c9b8:	80 e0       	ldi	r24, 0x00	; 0
};
    c9ba:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    c9bc:	0c 94 69 4e 	jmp	0x9cd2	; 0x9cd2 <FadeOut>

0000c9c0 <showcongratulation>:
};
void showcongratulation()
{
    c9c0:	0f 93       	push	r16
FadeOut(0, true);
    c9c2:	61 e0       	ldi	r22, 0x01	; 1
    c9c4:	80 e0       	ldi	r24, 0x00	; 0
    c9c6:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
Screen.scrollX = 0;
    c9ca:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
initlevel();
    c9ce:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    c9d2:	02 e0       	ldi	r16, 0x02	; 2
    c9d4:	22 e0       	ldi	r18, 0x02	; 2
    c9d6:	4c ee       	ldi	r20, 0xEC	; 236
    c9d8:	6c ee       	ldi	r22, 0xEC	; 236
    c9da:	80 e0       	ldi	r24, 0x00	; 0
    c9dc:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    c9e0:	22 e0       	ldi	r18, 0x02	; 2
    c9e2:	4c ee       	ldi	r20, 0xEC	; 236
    c9e4:	6c ee       	ldi	r22, 0xEC	; 236
    c9e6:	86 e0       	ldi	r24, 0x06	; 6
    c9e8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    c9ec:	41 e3       	ldi	r20, 0x31	; 49
    c9ee:	56 e7       	ldi	r21, 0x76	; 118
    c9f0:	6a e0       	ldi	r22, 0x0A	; 10
    c9f2:	89 e0       	ldi	r24, 0x09	; 9
    c9f4:	0e 94 c2 4d 	call	0x9b84	; 0x9b84 <DrawMap>
FadeIn(0, true);
    c9f8:	61 e0       	ldi	r22, 0x01	; 1
    c9fa:	80 e0       	ldi	r24, 0x00	; 0
    c9fc:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>
time = 0;
    ca00:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    ca04:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    ca08:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    ca0c:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
while ( time < 480 )
    ca10:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <time>
    ca14:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <time+0x1>
    ca18:	a0 91 b5 09 	lds	r26, 0x09B5	; 0x8009b5 <time+0x2>
    ca1c:	b0 91 b6 09 	lds	r27, 0x09B6	; 0x8009b6 <time+0x3>
    ca20:	80 3e       	cpi	r24, 0xE0	; 224
    ca22:	21 e0       	ldi	r18, 0x01	; 1
    ca24:	92 07       	cpc	r25, r18
    ca26:	a1 05       	cpc	r26, r1
    ca28:	b1 05       	cpc	r27, r1
    ca2a:	80 f4       	brcc	.+32     	; 0xca4c <showcongratulation+0x8c>
{ time++;    
    ca2c:	01 96       	adiw	r24, 0x01	; 1
    ca2e:	a1 1d       	adc	r26, r1
    ca30:	b1 1d       	adc	r27, r1
    ca32:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <time>
    ca36:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <time+0x1>
    ca3a:	a0 93 b5 09 	sts	0x09B5, r26	; 0x8009b5 <time+0x2>
    ca3e:	b0 93 b6 09 	sts	0x09B6, r27	; 0x8009b6 <time+0x3>
WaitVsync(1);    
    ca42:	81 e0       	ldi	r24, 0x01	; 1
    ca44:	90 e0       	ldi	r25, 0x00	; 0
    ca46:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    ca4a:	e2 cf       	rjmp	.-60     	; 0xca10 <showcongratulation+0x50>
};
 FadeOut(0, true);    
    ca4c:	61 e0       	ldi	r22, 0x01	; 1
    ca4e:	80 e0       	ldi	r24, 0x00	; 0
};
    ca50:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    ca52:	0c 94 69 4e 	jmp	0x9cd2	; 0x9cd2 <FadeOut>

0000ca56 <main>:
};
int main(){ 
ClearVram();    
    ca56:	0e 94 24 41 	call	0x8248	; 0x8248 <ClearVram>
FadeOut(0, true);
    ca5a:	61 e0       	ldi	r22, 0x01	; 1
    ca5c:	80 e0       	ldi	r24, 0x00	; 0
    ca5e:	0e 94 69 4e 	call	0x9cd2	; 0x9cd2 <FadeOut>
SetTileTable(uMTiles);
    ca62:	89 e2       	ldi	r24, 0x29	; 41
    ca64:	97 e4       	ldi	r25, 0x47	; 71
    ca66:	0e 94 3f 41 	call	0x827e	; 0x827e <SetTileTable>
SetSpritesTileTable(uMSprites);
    ca6a:	83 e3       	ldi	r24, 0x33	; 51
    ca6c:	90 e4       	ldi	r25, 0x40	; 64
    ca6e:	0e 94 1f 41 	call	0x823e	; 0x823e <SetSpritesTileTable>
InitMusicPlayer(patches);
    ca72:	84 ec       	ldi	r24, 0xC4	; 196
    ca74:	9e e3       	ldi	r25, 0x3E	; 62
    ca76:	0e 94 a9 42 	call	0x8552	; 0x8552 <InitMusicPlayer>
Screen.scrollY=0;  
    ca7a:	10 92 61 08 	sts	0x0861, r1	; 0x800861 <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    ca7e:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    ca82:	8e e9       	ldi	r24, 0x9E	; 158
    ca84:	9e e4       	ldi	r25, 0x4E	; 78
    ca86:	0e 94 79 41 	call	0x82f2	; 0x82f2 <SetUserPostVsyncCallback>
while(1)
{
introplaying = true; 
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    ca8a:	c8 e0       	ldi	r28, 0x08	; 8
    ca8c:	d0 e0       	ldi	r29, 0x00	; 0
player.y = 191;
    ca8e:	9f eb       	ldi	r25, 0xBF	; 191
    ca90:	e9 2e       	mov	r14, r25
    ca92:	f1 2c       	mov	r15, r1
died = false;
timeisup = false;    
Levelx = 0;
scrolltiles = 0;
player2.speed = 1;
player2.x = 21;
    ca94:	25 e1       	ldi	r18, 0x15	; 21
    ca96:	62 2e       	mov	r6, r18
    ca98:	71 2c       	mov	r7, r1
finished = false;
died = false;
timeisup = false;    
Levelx = 0;
scrolltiles = 0;
player2.speed = 1;
    ca9a:	cc 24       	eor	r12, r12
    ca9c:	c3 94       	inc	r12
    ca9e:	d1 2c       	mov	r13, r1
player2.x = 21;
player2.y = 191;
    caa0:	4f eb       	ldi	r20, 0xBF	; 191
    caa2:	a4 2e       	mov	r10, r20
    caa4:	b1 2c       	mov	r11, r1
player.speed = 1;
player.x = 8;
    caa6:	58 e0       	ldi	r21, 0x08	; 8
    caa8:	85 2e       	mov	r8, r21
    caaa:	91 2c       	mov	r9, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
introplaying = true; 
    caac:	81 e0       	ldi	r24, 0x01	; 1
    caae:	80 93 7e 09 	sts	0x097E, r24	; 0x80097e <introplaying>
Levelx = 0;
    cab2:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
scrolltiles = 0;
    cab6:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
player.x = 8;
    caba:	d0 93 64 09 	sts	0x0964, r29	; 0x800964 <player+0x1>
    cabe:	c0 93 63 09 	sts	0x0963, r28	; 0x800963 <player>
player.y = 191;
    cac2:	f0 92 66 09 	sts	0x0966, r15	; 0x800966 <player+0x3>
    cac6:	e0 92 65 09 	sts	0x0965, r14	; 0x800965 <player+0x2>
destX = 0;
    caca:	10 92 df 09 	sts	0x09DF, r1	; 0x8009df <destX>
level = 0;
    cace:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    cad2:	02 e0       	ldi	r16, 0x02	; 2
    cad4:	22 e0       	ldi	r18, 0x02	; 2
    cad6:	4c ee       	ldi	r20, 0xEC	; 236
    cad8:	6c ee       	ldi	r22, 0xEC	; 236
    cada:	86 e0       	ldi	r24, 0x06	; 6
    cadc:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2);  
    cae0:	22 e0       	ldi	r18, 0x02	; 2
    cae2:	4c ee       	ldi	r20, 0xEC	; 236
    cae4:	6c ee       	ldi	r22, 0xEC	; 236
    cae6:	80 e0       	ldi	r24, 0x00	; 0
    cae8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
while(introplaying) playintro();
    caec:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    caf0:	88 23       	and	r24, r24
    caf2:	19 f0       	breq	.+6      	; 0xcafa <main+0xa4>
    caf4:	0e 94 4c 62 	call	0xc498	; 0xc498 <playintro>
    caf8:	f9 cf       	rjmp	.-14     	; 0xcaec <main+0x96>
    
score = 0;
    cafa:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <score+0x1>
    cafe:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <score>
lives = 3; 
    cb02:	83 e0       	ldi	r24, 0x03	; 3
    cb04:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
level = startlevel;
    cb08:	81 e0       	ldi	r24, 0x01	; 1
    cb0a:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <level>
isplaying = true;
    cb0e:	80 93 19 0a 	sts	0x0A19, r24	; 0x800a19 <isplaying>
exitgame = false;
    cb12:	10 92 b2 09 	sts	0x09B2, r1	; 0x8009b2 <exitgame>
Levelx = 0;
    cb16:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
scrolltiles = 0;
    cb1a:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
player.x = 8;
    cb1e:	d0 93 64 09 	sts	0x0964, r29	; 0x800964 <player+0x1>
    cb22:	c0 93 63 09 	sts	0x0963, r28	; 0x800963 <player>
player.y = 191;
    cb26:	f0 92 66 09 	sts	0x0966, r15	; 0x800966 <player+0x3>
    cb2a:	e0 92 65 09 	sts	0x0965, r14	; 0x800965 <player+0x2>
destX = 0;
    cb2e:	10 92 df 09 	sts	0x09DF, r1	; 0x8009df <destX>
score = 0;
StartSong(midisong);
    cb32:	8b e6       	ldi	r24, 0x6B	; 107
    cb34:	9a e3       	ldi	r25, 0x3A	; 58
    cb36:	0e 94 c4 42 	call	0x8588	; 0x8588 <StartSong>
while (lives > 0 )
{
isplaying = true;
    cb3a:	55 24       	eor	r5, r5
    cb3c:	53 94       	inc	r5
player.x = 8;
player.y = 191;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    cb3e:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    cb42:	88 23       	and	r24, r24
    cb44:	09 f4       	brne	.+2      	; 0xcb48 <main+0xf2>
    cb46:	2b c1       	rjmp	.+598    	; 0xcd9e <main+0x348>
{
isplaying = true;
    cb48:	50 92 19 0a 	sts	0x0A19, r5	; 0x800a19 <isplaying>
while (isplaying)
{

showgetready();
isplaying = true;
    cb4c:	11 e0       	ldi	r17, 0x01	; 1
MapSprite2(0 ,pac0 ,0);
MapSprite2(spriteInd ,run0 ,0);
MapSprite2(owlIndex ,owl0 ,0);   
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
MoveSprite(0 , - 20 , -20 ,2 ,2);    
leveltime = 99;
    cb4e:	83 e6       	ldi	r24, 0x63	; 99
    cb50:	48 2e       	mov	r4, r24
score = 0;
StartSong(midisong);
while (lives > 0 )
{
isplaying = true;
while (isplaying)
    cb52:	80 91 19 0a 	lds	r24, 0x0A19	; 0x800a19 <isplaying>
    cb56:	88 23       	and	r24, r24
    cb58:	91 f3       	breq	.-28     	; 0xcb3e <main+0xe8>
{

showgetready();
    cb5a:	0e 94 ea 63 	call	0xc7d4	; 0xc7d4 <showgetready>
isplaying = true;
    cb5e:	10 93 19 0a 	sts	0x0A19, r17	; 0x800a19 <isplaying>
finished = false;
    cb62:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <finished>
died = false;
    cb66:	10 92 1e 0a 	sts	0x0A1E, r1	; 0x800a1e <died>
timeisup = false;    
    cb6a:	10 92 57 09 	sts	0x0957, r1	; 0x800957 <timeisup>
Levelx = 0;
    cb6e:	10 92 1d 0a 	sts	0x0A1D, r1	; 0x800a1d <Levelx>
scrolltiles = 0;
    cb72:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
player2.speed = 1;
    cb76:	d0 92 bd 09 	sts	0x09BD, r13	; 0x8009bd <player2+0x5>
    cb7a:	c0 92 bc 09 	sts	0x09BC, r12	; 0x8009bc <player2+0x4>
player2.x = 21;
    cb7e:	70 92 b9 09 	sts	0x09B9, r7	; 0x8009b9 <player2+0x1>
    cb82:	60 92 b8 09 	sts	0x09B8, r6	; 0x8009b8 <player2>
player2.y = 191;
    cb86:	b0 92 bb 09 	sts	0x09BB, r11	; 0x8009bb <player2+0x3>
    cb8a:	a0 92 ba 09 	sts	0x09BA, r10	; 0x8009ba <player2+0x2>
player.speed = 1;
    cb8e:	d0 92 68 09 	sts	0x0968, r13	; 0x800968 <player+0x5>
    cb92:	c0 92 67 09 	sts	0x0967, r12	; 0x800967 <player+0x4>
player.x = 8;
    cb96:	90 92 64 09 	sts	0x0964, r9	; 0x800964 <player+0x1>
    cb9a:	80 92 63 09 	sts	0x0963, r8	; 0x800963 <player>
player.y = 191;
    cb9e:	b0 92 66 09 	sts	0x0966, r11	; 0x800966 <player+0x3>
    cba2:	a0 92 65 09 	sts	0x0965, r10	; 0x800965 <player+0x2>
destX = 0;
    cba6:	10 92 df 09 	sts	0x09DF, r1	; 0x8009df <destX>
player2.touchground = true;
    cbaa:	10 93 c9 09 	sts	0x09C9, r17	; 0x8009c9 <player2+0x11>
player2.jumping = false;
    cbae:	10 92 cc 09 	sts	0x09CC, r1	; 0x8009cc <player2+0x14>
player2.jumpreleased = true;
    cbb2:	10 93 cd 09 	sts	0x09CD, r17	; 0x8009cd <player2+0x15>
player.touchground = true;
    cbb6:	10 93 74 09 	sts	0x0974, r17	; 0x800974 <player+0x11>
player.jumping = false;
    cbba:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x14>
player.jumpreleased = true;
    cbbe:	10 93 78 09 	sts	0x0978, r17	; 0x800978 <player+0x15>
initlevel();
    cbc2:	0e 94 12 51 	call	0xa224	; 0xa224 <initlevel>
initmonster();
    cbc6:	0e 94 d6 61 	call	0xc3ac	; 0xc3ac <initmonster>
MapSprite2(0 ,pac0 ,0);
    cbca:	40 e0       	ldi	r20, 0x00	; 0
    cbcc:	63 e2       	ldi	r22, 0x23	; 35
    cbce:	77 e4       	ldi	r23, 0x47	; 71
    cbd0:	80 e0       	ldi	r24, 0x00	; 0
    cbd2:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
MapSprite2(spriteInd ,run0 ,0);
    cbd6:	40 e0       	ldi	r20, 0x00	; 0
    cbd8:	65 e0       	ldi	r22, 0x05	; 5
    cbda:	77 e4       	ldi	r23, 0x47	; 71
    cbdc:	8a e0       	ldi	r24, 0x0A	; 10
    cbde:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    cbe2:	40 e0       	ldi	r20, 0x00	; 0
    cbe4:	61 e1       	ldi	r22, 0x11	; 17
    cbe6:	77 e4       	ldi	r23, 0x47	; 71
    cbe8:	86 e0       	ldi	r24, 0x06	; 6
    cbea:	0e 94 48 4d 	call	0x9a90	; 0x9a90 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    cbee:	02 e0       	ldi	r16, 0x02	; 2
    cbf0:	22 e0       	ldi	r18, 0x02	; 2
    cbf2:	4c ee       	ldi	r20, 0xEC	; 236
    cbf4:	6c ee       	ldi	r22, 0xEC	; 236
    cbf6:	86 e0       	ldi	r24, 0x06	; 6
    cbf8:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2);    
    cbfc:	22 e0       	ldi	r18, 0x02	; 2
    cbfe:	4c ee       	ldi	r20, 0xEC	; 236
    cc00:	6c ee       	ldi	r22, 0xEC	; 236
    cc02:	80 e0       	ldi	r24, 0x00	; 0
    cc04:	0e 94 95 4d 	call	0x9b2a	; 0x9b2a <MoveSprite>
leveltime = 99;
    cc08:	40 92 1a 0a 	sts	0x0A1A, r4	; 0x800a1a <leveltime>
time = 0;
    cc0c:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <time>
    cc10:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <time+0x1>
    cc14:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <time+0x2>
    cc18:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <time+0x3>
bonus = 0;
    cc1c:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    cc20:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
scrolltiles = 0;
    cc24:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <scrolltiles>
Screen.scrollX = 0;
    cc28:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <screen_scrollX>
setheadline();    
    cc2c:	0e 94 1b 58 	call	0xb036	; 0xb036 <setheadline>
drawlevel(Levelx);
    cc30:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <Levelx>
    cc34:	90 e0       	ldi	r25, 0x00	; 0
    cc36:	0e 94 c3 5e 	call	0xbd86	; 0xbd86 <drawlevel>
printheadline();   
    cc3a:	0e 94 37 52 	call	0xa46e	; 0xa46e <printheadline>
FadeIn(1, true);   
    cc3e:	61 e0       	ldi	r22, 0x01	; 1
    cc40:	81 e0       	ldi	r24, 0x01	; 1
    cc42:	0e 94 5d 4e 	call	0x9cba	; 0x9cba <FadeIn>

play = true;
    cc46:	10 93 9d 09 	sts	0x099D, r17	; 0x80099d <play>

while(play)
    cc4a:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <play>
    cc4e:	88 23       	and	r24, r24
    cc50:	09 f4       	brne	.+2      	; 0xcc54 <main+0x1fe>
    cc52:	8f c0       	rjmp	.+286    	; 0xcd72 <main+0x31c>
{
    
moveplayer(); 
    cc54:	0e 94 f6 5a 	call	0xb5ec	; 0xb5ec <moveplayer>
moveplayer2();
    cc58:	0e 94 95 55 	call	0xab2a	; 0xab2a <moveplayer2>
movemonster();
    cc5c:	0e 94 91 58 	call	0xb122	; 0xb122 <movemonster>
WaitVsync(1); 
    cc60:	81 e0       	ldi	r24, 0x01	; 1
    cc62:	90 e0       	ldi	r25, 0x00	; 0
    cc64:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
drawmonster();   
    cc68:	0e 94 28 58 	call	0xb050	; 0xb050 <drawmonster>
movelevel();
    cc6c:	0e 94 dd 61 	call	0xc3ba	; 0xc3ba <movelevel>
drawplayer(); 
    cc70:	0e 94 b2 4e 	call	0x9d64	; 0x9d64 <drawplayer>
drawplayer2(); 
    cc74:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <drawplayer2>
//drawplayer();   

//movemonster();
//drawmonster();    

updatetime(time);
    cc78:	60 91 b3 09 	lds	r22, 0x09B3	; 0x8009b3 <time>
    cc7c:	70 91 b4 09 	lds	r23, 0x09B4	; 0x8009b4 <time+0x1>
    cc80:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <time+0x2>
    cc84:	90 91 b6 09 	lds	r25, 0x09B6	; 0x8009b6 <time+0x3>
    cc88:	0e 94 17 62 	call	0xc42e	; 0xc42e <updatetime>
    if ( player.y > 240) 
    cc8c:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <player+0x2>
    cc90:	90 91 66 09 	lds	r25, 0x0966	; 0x800966 <player+0x3>
    cc94:	81 3f       	cpi	r24, 0xF1	; 241
    cc96:	91 05       	cpc	r25, r1
    cc98:	c4 f0       	brlt	.+48     	; 0xccca <main+0x274>
    {
    died = true;
    cc9a:	10 93 1e 0a 	sts	0x0A1E, r17	; 0x800a1e <died>
    lives--;    
    cc9e:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    cca2:	81 50       	subi	r24, 0x01	; 1
    cca4:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
    isplaying = false; 
    cca8:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    ccac:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    bonus = 0; 
    ccb0:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    ccb4:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
    TriggerFx(9,0xff,true);
    ccb8:	41 e0       	ldi	r20, 0x01	; 1
    ccba:	6f ef       	ldi	r22, 0xFF	; 255
    ccbc:	89 e0       	ldi	r24, 0x09	; 9
    ccbe:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240); 
    ccc2:	80 ef       	ldi	r24, 0xF0	; 240
    ccc4:	90 e0       	ldi	r25, 0x00	; 0
    ccc6:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>

    };
    if ( player2.y > 240) 
    ccca:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <player2+0x2>
    ccce:	90 91 bb 09 	lds	r25, 0x09BB	; 0x8009bb <player2+0x3>
    ccd2:	81 3f       	cpi	r24, 0xF1	; 241
    ccd4:	91 05       	cpc	r25, r1
    ccd6:	44 f0       	brlt	.+16     	; 0xcce8 <main+0x292>
    {
    player2.y = player.y;
    ccd8:	80 91 65 09 	lds	r24, 0x0965	; 0x800965 <player+0x2>
    ccdc:	90 91 66 09 	lds	r25, 0x0966	; 0x800966 <player+0x3>
    cce0:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <player2+0x3>
    cce4:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <player2+0x2>
   // bonus = 0; 
   // TriggerFx(9,0xff,true);
   //WaitVsync(240); 
    };

    if (timeisup)
    cce8:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <timeisup>
    ccec:	88 23       	and	r24, r24
    ccee:	19 f1       	breq	.+70     	; 0xcd36 <main+0x2e0>
    {
    printtileint( 26 ,0,leveltime,2);
    ccf0:	40 91 1a 0a 	lds	r20, 0x0A1A	; 0x800a1a <leveltime>
    ccf4:	50 e0       	ldi	r21, 0x00	; 0
    ccf6:	22 e0       	ldi	r18, 0x02	; 2
    ccf8:	30 e0       	ldi	r19, 0x00	; 0
    ccfa:	60 e0       	ldi	r22, 0x00	; 0
    ccfc:	70 e0       	ldi	r23, 0x00	; 0
    ccfe:	8a e1       	ldi	r24, 0x1A	; 26
    cd00:	90 e0       	ldi	r25, 0x00	; 0
    cd02:	0e 94 e0 4f 	call	0x9fc0	; 0x9fc0 <printtileint>
    TriggerFx(9,0xff,true);
    cd06:	41 e0       	ldi	r20, 0x01	; 1
    cd08:	6f ef       	ldi	r22, 0xFF	; 255
    cd0a:	89 e0       	ldi	r24, 0x09	; 9
    cd0c:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240);   
    cd10:	80 ef       	ldi	r24, 0xF0	; 240
    cd12:	90 e0       	ldi	r25, 0x00	; 0
    cd14:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    showtimesup();
    cd18:	0e 94 92 64 	call	0xc924	; 0xc924 <showtimesup>
    lives--;    
    cd1c:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    cd20:	81 50       	subi	r24, 0x01	; 1
    cd22:	80 93 d3 09 	sts	0x09D3, r24	; 0x8009d3 <lives>
    bonus = 0;  
    cd26:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <bonus+0x1>
    cd2a:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <bonus>
    isplaying = false; 
    cd2e:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    cd32:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    };
      if (finished)
    cd36:	80 91 18 0a 	lds	r24, 0x0A18	; 0x800a18 <finished>
    cd3a:	88 23       	and	r24, r24
    cd3c:	09 f4       	brne	.+2      	; 0xcd40 <main+0x2ea>
    cd3e:	85 cf       	rjmp	.-246    	; 0xcc4a <main+0x1f4>
    {
    TriggerFx(10,0xff,true);      
    cd40:	41 e0       	ldi	r20, 0x01	; 1
    cd42:	6f ef       	ldi	r22, 0xFF	; 255
    cd44:	8a e0       	ldi	r24, 0x0A	; 10
    cd46:	0e 94 a1 43 	call	0x8742	; 0x8742 <TriggerFx>
    WaitVsync(240);   
    cd4a:	80 ef       	ldi	r24, 0xF0	; 240
    cd4c:	90 e0       	ldi	r25, 0x00	; 0
    cd4e:	0e 94 01 4e 	call	0x9c02	; 0x9c02 <WaitVsync>
    level++;    
    cd52:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <level>
    cd56:	8f 5f       	subi	r24, 0xFF	; 255
    cd58:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <level>
    StartSong(midisong);
    cd5c:	8b e6       	ldi	r24, 0x6B	; 107
    cd5e:	9a e3       	ldi	r25, 0x3A	; 58
    cd60:	0e 94 c4 42 	call	0x8588	; 0x8588 <StartSong>
    isplaying = false; 
    cd64:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    cd68:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    finished = false;
    cd6c:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <finished>
    cd70:	6c cf       	rjmp	.-296    	; 0xcc4a <main+0x1f4>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    cd72:	80 91 d3 09 	lds	r24, 0x09D3	; 0x8009d3 <lives>
    cd76:	81 11       	cpse	r24, r1
    cd78:	02 c0       	rjmp	.+4      	; 0xcd7e <main+0x328>
    cd7a:	0e 94 44 64 	call	0xc888	; 0xc888 <showgameover>

if  (level > maxlevel  ) 
    cd7e:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <level>
    cd82:	8a 30       	cpi	r24, 0x0A	; 10
    cd84:	08 f4       	brcc	.+2      	; 0xcd88 <main+0x332>
    cd86:	e5 ce       	rjmp	.-566    	; 0xcb52 <main+0xfc>
{   showcongratulation();
    cd88:	0e 94 e0 64 	call	0xc9c0	; 0xc9c0 <showcongratulation>
    isplaying = false; 
    cd8c:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <isplaying>
    play = false;
    cd90:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <play>
    finished = false;
    cd94:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <finished>
    lives = 0;
    cd98:	10 92 d3 09 	sts	0x09D3, r1	; 0x8009d3 <lives>
    cd9c:	da ce       	rjmp	.-588    	; 0xcb52 <main+0xfc>
 
};
};
};
StopSong();
    cd9e:	0e 94 ed 42 	call	0x85da	; 0x85da <StopSong>

    
};
    cda2:	84 ce       	rjmp	.-760    	; 0xcaac <main+0x56>

0000cda4 <__udivmodhi4>:
    cda4:	aa 1b       	sub	r26, r26
    cda6:	bb 1b       	sub	r27, r27
    cda8:	51 e1       	ldi	r21, 0x11	; 17
    cdaa:	07 c0       	rjmp	.+14     	; 0xcdba <__udivmodhi4_ep>

0000cdac <__udivmodhi4_loop>:
    cdac:	aa 1f       	adc	r26, r26
    cdae:	bb 1f       	adc	r27, r27
    cdb0:	a6 17       	cp	r26, r22
    cdb2:	b7 07       	cpc	r27, r23
    cdb4:	10 f0       	brcs	.+4      	; 0xcdba <__udivmodhi4_ep>
    cdb6:	a6 1b       	sub	r26, r22
    cdb8:	b7 0b       	sbc	r27, r23

0000cdba <__udivmodhi4_ep>:
    cdba:	88 1f       	adc	r24, r24
    cdbc:	99 1f       	adc	r25, r25
    cdbe:	5a 95       	dec	r21
    cdc0:	a9 f7       	brne	.-22     	; 0xcdac <__udivmodhi4_loop>
    cdc2:	80 95       	com	r24
    cdc4:	90 95       	com	r25
    cdc6:	bc 01       	movw	r22, r24
    cdc8:	cd 01       	movw	r24, r26
    cdca:	08 95       	ret

0000cdcc <__divmodhi4>:
    cdcc:	97 fb       	bst	r25, 7
    cdce:	07 2e       	mov	r0, r23
    cdd0:	16 f4       	brtc	.+4      	; 0xcdd6 <__divmodhi4+0xa>
    cdd2:	00 94       	com	r0
    cdd4:	07 d0       	rcall	.+14     	; 0xcde4 <__divmodhi4_neg1>
    cdd6:	77 fd       	sbrc	r23, 7
    cdd8:	09 d0       	rcall	.+18     	; 0xcdec <__divmodhi4_neg2>
    cdda:	0e 94 d2 66 	call	0xcda4	; 0xcda4 <__udivmodhi4>
    cdde:	07 fc       	sbrc	r0, 7
    cde0:	05 d0       	rcall	.+10     	; 0xcdec <__divmodhi4_neg2>
    cde2:	3e f4       	brtc	.+14     	; 0xcdf2 <__divmodhi4_exit>

0000cde4 <__divmodhi4_neg1>:
    cde4:	90 95       	com	r25
    cde6:	81 95       	neg	r24
    cde8:	9f 4f       	sbci	r25, 0xFF	; 255
    cdea:	08 95       	ret

0000cdec <__divmodhi4_neg2>:
    cdec:	70 95       	com	r23
    cdee:	61 95       	neg	r22
    cdf0:	7f 4f       	sbci	r23, 0xFF	; 255

0000cdf2 <__divmodhi4_exit>:
    cdf2:	08 95       	ret

0000cdf4 <__udivmodsi4>:
    cdf4:	a1 e2       	ldi	r26, 0x21	; 33
    cdf6:	1a 2e       	mov	r1, r26
    cdf8:	aa 1b       	sub	r26, r26
    cdfa:	bb 1b       	sub	r27, r27
    cdfc:	fd 01       	movw	r30, r26
    cdfe:	0d c0       	rjmp	.+26     	; 0xce1a <__udivmodsi4_ep>

0000ce00 <__udivmodsi4_loop>:
    ce00:	aa 1f       	adc	r26, r26
    ce02:	bb 1f       	adc	r27, r27
    ce04:	ee 1f       	adc	r30, r30
    ce06:	ff 1f       	adc	r31, r31
    ce08:	a2 17       	cp	r26, r18
    ce0a:	b3 07       	cpc	r27, r19
    ce0c:	e4 07       	cpc	r30, r20
    ce0e:	f5 07       	cpc	r31, r21
    ce10:	20 f0       	brcs	.+8      	; 0xce1a <__udivmodsi4_ep>
    ce12:	a2 1b       	sub	r26, r18
    ce14:	b3 0b       	sbc	r27, r19
    ce16:	e4 0b       	sbc	r30, r20
    ce18:	f5 0b       	sbc	r31, r21

0000ce1a <__udivmodsi4_ep>:
    ce1a:	66 1f       	adc	r22, r22
    ce1c:	77 1f       	adc	r23, r23
    ce1e:	88 1f       	adc	r24, r24
    ce20:	99 1f       	adc	r25, r25
    ce22:	1a 94       	dec	r1
    ce24:	69 f7       	brne	.-38     	; 0xce00 <__udivmodsi4_loop>
    ce26:	60 95       	com	r22
    ce28:	70 95       	com	r23
    ce2a:	80 95       	com	r24
    ce2c:	90 95       	com	r25
    ce2e:	9b 01       	movw	r18, r22
    ce30:	ac 01       	movw	r20, r24
    ce32:	bd 01       	movw	r22, r26
    ce34:	cf 01       	movw	r24, r30
    ce36:	08 95       	ret

0000ce38 <__itoa_ncheck>:
    ce38:	bb 27       	eor	r27, r27
    ce3a:	4a 30       	cpi	r20, 0x0A	; 10
    ce3c:	31 f4       	brne	.+12     	; 0xce4a <__itoa_ncheck+0x12>
    ce3e:	99 23       	and	r25, r25
    ce40:	22 f4       	brpl	.+8      	; 0xce4a <__itoa_ncheck+0x12>
    ce42:	bd e2       	ldi	r27, 0x2D	; 45
    ce44:	90 95       	com	r25
    ce46:	81 95       	neg	r24
    ce48:	9f 4f       	sbci	r25, 0xFF	; 255
    ce4a:	0c 94 28 67 	jmp	0xce50	; 0xce50 <__utoa_common>

0000ce4e <__utoa_ncheck>:
    ce4e:	bb 27       	eor	r27, r27

0000ce50 <__utoa_common>:
    ce50:	fb 01       	movw	r30, r22
    ce52:	55 27       	eor	r21, r21
    ce54:	aa 27       	eor	r26, r26
    ce56:	88 0f       	add	r24, r24
    ce58:	99 1f       	adc	r25, r25
    ce5a:	aa 1f       	adc	r26, r26
    ce5c:	a4 17       	cp	r26, r20
    ce5e:	10 f0       	brcs	.+4      	; 0xce64 <__utoa_common+0x14>
    ce60:	a4 1b       	sub	r26, r20
    ce62:	83 95       	inc	r24
    ce64:	50 51       	subi	r21, 0x10	; 16
    ce66:	b9 f7       	brne	.-18     	; 0xce56 <__utoa_common+0x6>
    ce68:	a0 5d       	subi	r26, 0xD0	; 208
    ce6a:	aa 33       	cpi	r26, 0x3A	; 58
    ce6c:	08 f0       	brcs	.+2      	; 0xce70 <__utoa_common+0x20>
    ce6e:	a9 5d       	subi	r26, 0xD9	; 217
    ce70:	a1 93       	st	Z+, r26
    ce72:	00 97       	sbiw	r24, 0x00	; 0
    ce74:	79 f7       	brne	.-34     	; 0xce54 <__utoa_common+0x4>
    ce76:	b1 11       	cpse	r27, r1
    ce78:	b1 93       	st	Z+, r27
    ce7a:	11 92       	st	Z+, r1
    ce7c:	cb 01       	movw	r24, r22
    ce7e:	0c 94 41 67 	jmp	0xce82	; 0xce82 <strrev>

0000ce82 <strrev>:
    ce82:	dc 01       	movw	r26, r24
    ce84:	fc 01       	movw	r30, r24
    ce86:	67 2f       	mov	r22, r23
    ce88:	71 91       	ld	r23, Z+
    ce8a:	77 23       	and	r23, r23
    ce8c:	e1 f7       	brne	.-8      	; 0xce86 <strrev+0x4>
    ce8e:	32 97       	sbiw	r30, 0x02	; 2
    ce90:	04 c0       	rjmp	.+8      	; 0xce9a <strrev+0x18>
    ce92:	7c 91       	ld	r23, X
    ce94:	6d 93       	st	X+, r22
    ce96:	70 83       	st	Z, r23
    ce98:	62 91       	ld	r22, -Z
    ce9a:	ae 17       	cp	r26, r30
    ce9c:	bf 07       	cpc	r27, r31
    ce9e:	c8 f3       	brcs	.-14     	; 0xce92 <strrev+0x10>
    cea0:	08 95       	ret

0000cea2 <_exit>:
    cea2:	f8 94       	cli

0000cea4 <__stop_program>:
    cea4:	ff cf       	rjmp	.-2      	; 0xcea4 <__stop_program>
