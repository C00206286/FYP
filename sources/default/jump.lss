
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000dbd8  0000dcd8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000dbd8  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008e8  00800102  00800102  0000dcda  2**1
                  ALLOC
  3 .noinit       00000416  008009ea  008009ea  0000dd00  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000e116  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000e128  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004d0  00000000  00000000  0000e168  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007939  00000000  00000000  0000e638  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013a0  00000000  00000000  00015f71  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000581c  00000000  00000000  00017311  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000bcc  00000000  00000000  0001cb30  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00001478  00000000  00000000  0001d6fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00004e42  00000000  00000000  0001eb74  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000530  00000000  00000000  000239b8  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 43 42 	jmp	0x8486	; 0x8486 <__ctors_end>
       4:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
       8:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
       c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      10:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      14:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      18:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      1c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      20:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      24:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      28:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      2c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      30:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      34:	0c 94 f9 45 	jmp	0x8bf2	; 0x8bf2 <__vector_13>
      38:	0c 94 38 46 	jmp	0x8c70	; 0x8c70 <__vector_14>
      3c:	0c 94 64 43 	jmp	0x86c8	; 0x86c8 <__vector_15>
      40:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      44:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      48:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      4c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      50:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      54:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      58:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      5c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      60:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      64:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      68:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>
      6c:	0c 94 ae 42 	jmp	0x855c	; 0x855c <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	77 48 7a 48 d6 48 da 48 e1 48 82 48 87 48 8c 48     wHzH.H.H.H.H.H.H
      d2:	e9 48 8f 48 92 48 95 48 d0 48 d3 48 f9 48           .H.H.H.H.H.H.H

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     93b:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     983:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     993:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     9a3:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bb7:	00 00 00 34 00 00 00 00 00 00 00 00 29 00 00 00     ...4........)...
     bc7:	00 00 00 00 0a 00 00 00 00 00 00 00 32 00 00 00     ............2...
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 33 00 00 00 00 00 00     '........3......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e27:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     e6f:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     e7f:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     e8f:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1313:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
    135b:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
    136b:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
    137b:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    1553:	00 00 00 34 00 00 00 00 00 00 00 00 00 00 00 00     ...4............
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
    16df:	00 15 16 00 00 00 00 00 19 1a 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
    1737:	00 00 00 17 18 00 00 00 00 00 1b 1c 01 01 01 05     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    180b:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1847:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 34 00 00 00 00 00 00 00 00 03     ..%&..4.........
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19db:	34 00 00 00 00 00 00 00 00 02 00 00 00 00 00 00     4...............
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 15 16 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 15 16 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	15 16 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 17 18     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 17 18 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c13:	00 00 17 18 00 00 04 04 04 00 00 00 00 29 00 00     .............)..
    1c23:	00 00 00 04 04 04 04 04 04 04 0d 0e 01 01 01 01     ................
    1c33:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c43:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c53:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 06 05     ................
    1c63:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c73:	01 01 01 05 00 00 00 08 00 00 06 01 01 01 01 01     ................
    1c83:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1cf7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1d33:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1d4f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1d73:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    1d8f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    1d9f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1db7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    1dcf:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1df7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e1b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e47:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1e7b:	34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     4...............
	...
    1e9f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    1eaf:	00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 03     ................
    1ebf:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f1f:	00 00 34 00 00 00 00 29 29 00 00 00 00 00 00 00     ..4....)).......
	...
    1f43:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    1f67:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    1f7f:	00 02 02 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    1fbf:	00 00 00 02 02 02 00 00 00 00 00 00 00 02 02 02     ................
	...
    1fdb:	00 00 04 00 00 00 00 00 00 00 04 00 00 04 00 00     ................
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
    1ffb:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
    200b:	00 00 00 00 00 29 00 00 00 29 00 00 00 00 00 00     .....)...)......
	...
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 02 03 03 02 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    2063:	00 00 00 00 00 00 00 04 00 32 00 04 00 00 00 00     .........2......
    2073:	00 04 00 00 00 00 00 00 04 1f 21 00 00 15 16 00     ..........!.....
	...
    208b:	00 00 04 00 00 00 04 00 02 00 00 04 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 04 04 04 04 04 00 00     ................
    20cb:	00 00 00 04 00 00 00 00 00 00 04 20 22 00 00 17     ........... "...
    20db:	18 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00     ................
    20eb:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	29 00 00 00 00 00 1b 1c 01 05 00 00 00 00 00 00     )...............
    2123:	00 00 06 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2133:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    2143:	01 01 05 00 00 00 00 00 00 00 00 00 00 06 01 01     ................
    2153:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2163:	05 00 08 00 08 00 06 01 05 00 06 01 01 01 01 01     ................
    2173:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000021cf <level4>:
	...
    21e3:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    221f:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2367:	34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     4...............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    2407:	00 00 00 00 00 00 34 00 00 00 00 00 00 00 00 00     ......4.........
    2417:	00 00 00 00 00 02 02 02 02 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    2557:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    2567:	00 1f 21 00 33 15 16 00 00 00 00 00 00 0f 10 00     ..!.3...........
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 17 18     ................
    25b3:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    25c3:	22 00 02 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    26cf:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    270b:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
    279f:	34 00 00 00 00 00 00 00 00 25 26 00 00 00 00 00     4........%&.....
	...
    27b7:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28a7:	07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 34 00 00 00 00 00     ..........4.....
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2957:	0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0b 0c 00 00 00 0f 10 00 00 00 00     ................
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0f 10 00 00 00 0f 10 00 00     ................
    2a0f:	00 00 00 00 00 07 07 07 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0f 10 00 00 00 0f 10 00 00 00 00 00 00 00 00     ................
	...
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0d 0e 00 00 00 0d 0e 00 00 00 00 00 00     ................
	...
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 06 05 00 00 00 00 00 00 00 00     ................
    2b23:	00 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bbb:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2bf7:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
	...
    2c13:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2c53:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
    2c63:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2c7b:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    2c93:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
    2cdf:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2d0b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2d3f:	34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     4...............
	...
    2d63:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	00 00 00 00 00 00 32 00 00 00 00 29 29 00 00 00     ......2....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 00 00 00 00 04 04 04 04 04 00 00 00 02 02 00     ................
	...
    2e67:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     3...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 04 04     ...2............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 00 00 04     ................
    2eef:	04 04 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 00 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f3f:	00 1f 21 00 00 00 00 00 04 04 04 04 00 0b 0c 00     ..!.............
    2f4f:	02 02 02 02 02 02 00 00 00 00 00 00 00 00 00 29     ...............)
    2f5f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    2f6f:	00 04 04 04 04 04 04 00 00 00 00 00 15 16 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f97:	00 00 00 20 22 00 00 04 04 04 04 04 04 04 00 0d     ... "...........
    2fa7:	0e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 00 00 00 00 00 17 18     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 00 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
    3093:	01 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    30a3:	00 00 00 00 00 23 24 00 00 00 00 00 00 00 00 00     .....#$.........
	...
    30e3:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3123:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    322b:	34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     4...............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    3267:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    329b:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    32bb:	00 00 00 02 03 02 00 00 00 01 00 00 00 00 00 00     ................
    32cb:	00 00 00 00 00 00 34 00 00 00 00 29 29 00 00 00     ......4....))...
	...
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    331b:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    332b:	00 00 00 00 02 02 02 02 00 00 00 00 00 00 00 00     ................
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    336f:	32 00 00 00 00 00 00 32 00 01 00 00 00 00 00 00     2......2........
    337f:	00 00 00 00 00 0b 0c 00 00 00 00 00 00 00 00 00     ................
	...
    339b:	32 00 00 00 00 00 00 00 00 00 00 00 04 04 04 00     2...............
    33ab:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    33cb:	02 03 02 03 03 02 00 01 00 00 00 00 00 00 00 00     ................
    33db:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    33f3:	03 02 02 03 00 02 00 00 00 00 00 00 00 04 04 04     ................
    3403:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    341b:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    342b:	00 1f 21 00 00 15 16 00 00 00 00 00 00 0b 0c 00     ..!.............
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    3467:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 17 18     .!..............
    3477:	00 00 20 22 00 00 32 00 32 00 32 00 00 00 00 20     .. "..2.2.2.... 
    3487:	22 00 00 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 20 22     .............. "
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    35cf:	23 24 00 00 00 00 00 00 00 00 00 00 04 00 00 00     #$..............
    35df:	04 00 00 00 00 25 26 00 00 00 00 00 00 00 00 04     .....%&.........
	...
    35f7:	04 04 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    360f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    361f:	00 00 04 00 00 00 00 00 00 00 25 26 00 00 34 00     ..........%&..4.
    362f:	00 00 00 00 00 00 04 04 00 04 04 00 00 00 00 00     ................
    363f:	00 04 00 00 04 00 00 04 00 04 00 00 00 00 32 00     ..............2.
    364f:	00 00 04 00 00 00 04 00 00 00 00 00 00 00 04 00     ................
    365f:	00 00 00 00 33 00 00 00 00 00 00 04 00 00 00 00     ....3...........
	...
    367b:	04 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
    368b:	00 00 00 00 04 00 04 00 04 00 00 04 04 00 00 04     ................
    369b:	00 00 04 00 00 00 00 00 00 00 04 04 04 00 00 00     ................
    36ab:	04 00 00 00 04 00 00 04 04 00 00 04 04 04 00 04     ................
    36bb:	00 04 04 00 00 04 04 00 00 04 00 00 00 00 04 04     ................
    36cb:	00 00 04 04 04 00 00 00 04 04 04 00 25 26 00 00     ............%&..
	...
    36e3:	23 24 00 00 00 00 04 00 00 00 04 00 04 00 00 04     #$..............
    36f3:	00 04 00 00 04 00 00 04 00 00 00 04 00 00 00 00     ................
    3703:	00 00 04 04 04 04 00 00 04 00 00 04 00 00 04 00     ................
    3713:	00 04 04 00 00 00 04 00 00 04 00 04 00 00 00 00     ................
    3723:	00 00 04 00 04 00 00 04 00 04 00 00 04 00 00 00     ................
	...
    373b:	00 00 25 26 00 00 00 00 04 00 00 00 04 00 04 04     ..%&............
    374b:	04 04 00 04 00 00 04 00 00 04 00 00 00 00 04 04     ................
    375b:	00 00 00 00 04 00 04 00 00 00 04 04 04 04 00 00     ................
    376b:	04 00 00 04 00 00 00 00 04 00 00 04 00 04 00 00     ................
    377b:	00 00 04 04 04 00 04 00 00 04 00 04 00 00 04 00     ................
	...
    379b:	00 00 04 00 00 00 04 00 04 00 00 00 00 04 00 00     ................
    37ab:	04 00 00 04 00 00 00 00 00 00 04 00 00 00 04 00     ................
    37bb:	00 04 00 00 04 00 00 00 00 00 04 00 00 04 00 00     ................
    37cb:	00 00 04 00 00 04 00 04 00 00 00 04 00 00 04 00     ................
    37db:	04 00 00 04 00 04 00 00 04 00 00 00 00 00 00 00     ................
	...
    37f7:	04 00 00 00 04 00 00 04 04 00 00 04 04 00 04 04     ................
    3807:	00 04 00 00 00 04 03 04 00 00 00 00 04 00 00 00     ................
    3817:	03 00 00 04 04 00 00 00 00 03 00 04 00 00 00 00     ................
    3827:	00 04 04 00 00 04 04 04 00 00 04 04 04 00 04 00     ................
    3837:	00 04 00 00 04 04 04 00 00 00 00 00 00 00 00 00     ................
	...
    3907:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    3917:	00 1f 21 00 00 15 16 00 00 00 00 00 00 00 00 00     ..!.............
	...
    392f:	00 15 16 00 00 00 00 00 00 00 00 00 00 15 16 00     ................
    393f:	00 00 00 00 00 00 1f 21 00 00 00 00 00 00 00 00     .......!........
    394f:	00 00 00 00 1f 21 00 00 00 00 00 00 19 1a 00 00     .....!..........
    395f:	00 00 17 18 00 00 20 22 00 00 00 00 00 00 00 00     ...... "........
    396f:	00 00 00 20 22 00 00 17 18 00 00 00 00 00 00 00     ... "...........
	...
    3987:	00 00 00 17 18 00 00 00 00 00 00 00 00 00 00 17     ................
    3997:	18 00 00 00 00 00 00 00 20 22 00 00 00 00 00 00     ........ "......
    39a7:	29 29 29 29 00 00 20 22 00 00 00 00 00 00 1b 1c     )))).. "........
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    4043:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    4053:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 f8 d8 d8 d8     ....A......A....
    4063:	fe fe fe 41 f8 d8 d8 b7 fe fe fe 41 f8 d8 b7 ff     ...A.......A....
    4073:	41 41 41 fe fe fe fe fe 41 f8 f8 41 fe fe fe fe     AAA.....A..A....
    4083:	d8 41 f8 f8 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4093:	d8 d8 41 f8 f8 d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    40a3:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    40b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    40c3:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    40d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    40e3:	fe fe fe 41 f8 d8 d8 d8 fe fe fe 41 f8 d8 d8 b7     ...A.......A....
    40f3:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4103:	41 f8 f8 41 fe fe fe fe d8 41 f8 f8 41 fe fe fe     A..A.....A..A...
    4113:	d8 d8 41 41 41 41 fe fe d8 d8 41 f8 f8 d8 41 fe     ..AAAA....A...A.
    4123:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    4133:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    4143:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    4153:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 f8 d8 d8     .....A......A...
    4163:	fe fe fe fe 41 f8 d8 d8 fe fe fe 41 41 f8 d8 b7     ....A......AA...
    4173:	fe 41 41 41 fe fe fe fe 41 41 f8 f8 41 fe fe fe     .AAA....AA..A...
    4183:	d8 d8 41 f8 f8 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4193:	d8 d8 d8 41 f8 f8 d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    41a3:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    41b3:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 f8     .AA...AAA..AAAA.
    41c3:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    41d3:	41 d8 41 f8 d8 d8 d8 d8 41 d8 41 f8 d8 d8 d8 d8     A.A.....A.A.....
    41e3:	41 d8 41 f8 d8 b7 ff ff 41 f8 41 d8 b7 ff ff 41     A.A.....A.A....A
    41f3:	41 fe fe fe fe fe fe fe f8 41 fe fe fe 41 41 fe     A........A...AA.
    4203:	f8 f8 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4213:	41 f8 f8 d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    4223:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 f8 41 fe     ....A..AA.A.A.A.
    4233:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4243:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    4253:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    4263:	fe fe fe fe 41 f8 d8 d8 fe fe fe fe 41 f8 d8 d8     ....A.......A...
    4273:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4283:	41 41 f8 f8 41 fe fe fe d8 d8 41 f8 f8 41 fe fe     AA..A.....A..A..
    4293:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 f8 f8 d8 41     ...AAAA....A...A
    42a3:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    42b3:	fe fe fe 03 fe fe fe fe fe fe fe 03 03 fe fe fe     ................
    42c3:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    42d3:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff ff 03 03     ................
    42e3:	fe fe fe 03 ff 00 03 03 fe fe fe 03 ff ff 27 27     ..............''
    42f3:	fe fe fe 03 fe fe fe fe fe fe 03 03 fe fe fe fe     ................
    4303:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4313:	1c 1c 1c 1c fe fe fe fe 03 ff ff 03 fe fe fe fe     ................
    4323:	03 00 ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    4333:	fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00 fe     ................
    4343:	00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00 fe     ................
    4353:	00 ff 00 00 00 ff 00 fe 00 ff ff 00 ff ff 00 18     ................
    4363:	00 ff ff ff ff ff 00 39 fe 00 00 00 00 00 39 39     .......9......99
    4373:	fe fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00     ................
    4383:	fe 00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00     ................
    4393:	fe 00 ff 00 00 00 ff 00 18 00 ff ff 00 ff ff 00     ................
    43a3:	39 00 ff ff ff ff ff 00 39 39 00 00 00 00 00 fe     9.......99......
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43e3:	fe fe fe 00 00 00 00 fd fe fe 00 3f 3f 3f 3f fd     ...........????.
    43f3:	fe fe fe fd fd fd fe fe fe fe fd fd ff ff fd fe     ................
    4403:	fe fd fd ff ff ff ff fd fe fd ff ff ff ff ff fd     ................
    4413:	fd fd ff ff fd ff ff fd fd ff ff fd ff ff fd fe     ................
    4423:	ff ff ff fd ff ff fd fe ff ff fd ff ff fd fe fe     ................
    4433:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4443:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4453:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4463:	fe fe fe 00 00 00 00 00 fe fe 00 3f 3f 3f 3f 00     ...........????.
    4473:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4483:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4493:	fe fe fe fe fe fe fe fe fe fe fe fd fd fd fe fe     ................
    44a3:	fe fd fd ff ff ff fd fe fd fd ff ff ff fd ff fd     ................
    44b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44e3:	fe 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00 fe     ................
    44f3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4503:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4513:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4523:	fe 00 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00     ................
    4533:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    4543:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    4553:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff 00 03 03     ................
    4563:	fe fe fe 03 ff ff 03 03 fe fe fe 03 ff ff 27 27     ..............''
    4573:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    4583:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4593:	1c 1c 1c 1c fe fe fe fe 03 00 ff 03 fe fe fe fe     ................
    45a3:	03 ff ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    45b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    45c3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    45d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 1f d8 d8 d8     ....A......A....
    45e3:	fe fe fe 41 1f d8 d8 b7 fe fe fe 41 1f d8 b7 ff     ...A.......A....
    45f3:	41 41 41 fe fe fe fe fe 41 1f 1f 41 fe fe fe fe     AAA.....A..A....
    4603:	d8 41 1f 1f 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4613:	d8 d8 41 1f 1f d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    4623:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    4633:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4643:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    4653:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    4663:	fe fe fe 41 1f d8 d8 d8 fe fe fe 41 1f d8 d8 b7     ...A.......A....
    4673:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4683:	41 1f 1f 41 fe fe fe fe d8 41 1f 1f 41 fe fe fe     A..A.....A..A...
    4693:	d8 d8 41 41 41 41 fe fe d8 d8 41 1f 1f d8 41 fe     ..AAAA....A...A.
    46a3:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    46b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    46c3:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    46d3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 1f d8 d8     .....A......A...
    46e3:	fe fe fe fe 41 1f d8 d8 fe fe fe 41 41 1f d8 b7     ....A......AA...
    46f3:	fe 41 41 41 fe fe fe fe 41 41 1f 1f 41 fe fe fe     .AAA....AA..A...
    4703:	d8 d8 41 1f 1f 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4713:	d8 d8 d8 41 1f 1f d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    4723:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    4733:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 1f     .AA...AAA..AAAA.
    4743:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    4753:	41 d8 41 1f d8 d8 d8 d8 41 d8 41 1f d8 d8 d8 d8     A.A.....A.A.....
    4763:	41 d8 41 1f d8 b7 ff ff 41 1f 41 d8 b7 ff ff 41     A.A.....A.A....A
    4773:	41 fe fe fe fe fe fe fe 1f 41 fe fe fe 41 41 fe     A........A...AA.
    4783:	1f 1f 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4793:	41 1f 1f d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    47a3:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 1f 41 fe     ....A..AA.A.A.A.
    47b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    47c3:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    47d3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    47e3:	fe fe fe fe 41 1f d8 d8 fe fe fe fe 41 1f d8 d8     ....A.......A...
    47f3:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4803:	41 41 1f 1f 41 fe fe fe d8 d8 41 1f 1f 41 fe fe     AA..A.....A..A..
    4813:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 1f 1f d8 41     ...AAAA....A...A
    4823:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    4833:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    4843:	fe 41 41 f8 f8 41 d8 b7 41 d8 f8 f8 f8 f8 41 b7     .AA..A..A.....A.
    4853:	41 d8 d8 f8 f8 f8 f8 41 41 d8 d8 f8 41 f8 f8 f8     A......AA...A...
    4863:	41 d8 41 41 41 f8 f8 f8 41 d8 d8 41 41 f8 f8 f8     A.AAA...A..AA...
    4873:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4883:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 f8 f8 41     AAAA.AA.....A..A
    4893:	41 41 41 41 f8 f8 d8 41 f8 f8 f8 f8 41 f8 d8 41     AAAA...A....A..A
    48a3:	f8 f8 f8 f8 41 41 d8 41 f8 f8 f8 f8 41 d8 d8 41     ....AA.A....A..A
    48b3:	fe 41 41 41 f8 d8 b7 ff 41 41 41 f8 41 d8 b7 ff     .AAA....AAA.A...
    48c3:	41 d8 41 f8 41 d8 b7 b7 41 d8 d8 41 f8 41 d8 b7     A.A.A...A..A.A..
    48d3:	41 d8 41 41 f8 f8 41 b7 41 d8 41 fe 41 f8 f8 41     A.AA..A.A.A.A..A
    48e3:	41 d8 41 fe 41 d8 f8 f8 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    48f3:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4903:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4913:	b7 b7 b7 b7 41 f8 41 fe 41 41 41 41 f8 f8 d8 41     ....A.A.AAAA...A
    4923:	f8 f8 f8 41 f8 d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4933:	fe fe 41 f8 f8 41 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..A..A...A...A..
    4943:	41 f8 f8 f8 f8 f8 41 d8 41 f8 f8 f8 41 f8 f8 41     A.....A.A...A..A
    4953:	fe 41 d8 d8 d8 41 f8 f8 fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4963:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4973:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4983:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4993:	41 41 41 41 41 41 fe fe f8 f8 f8 f8 41 d8 41 fe     AAAAAA......A.A.
    49a3:	41 f8 f8 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    49b3:	41 f8 41 41 b7 ff ff 41 41 f8 f8 41 b7 b7 ff ff     A.AA...AA..A....
    49c3:	41 f8 f8 f8 d8 b7 b7 41 fe 41 f8 f8 41 b7 41 41     A......A.A..A.AA
    49d3:	fe 41 f8 f8 f8 41 b7 41 fe fe 41 f8 f8 f8 f8 f8     .A...A.A..A.....
    49e3:	fe fe 41 f8 f8 f8 f8 f8 fe fe 41 f8 f8 f8 f8 f8     ..A.......A.....
    49f3:	41 b7 41 ff 41 f8 41 fe ff b7 ff b7 41 f8 41 fe     A.A.A.A.....A.A.
    4a03:	41 41 b7 41 f8 41 fe fe 41 41 41 f8 41 fe fe fe     AA.A.A..AAA.A...
    4a13:	41 41 f8 f8 41 fe fe fe f8 f8 f8 41 fe fe fe fe     AA..A......A....
    4a23:	f8 f8 f8 41 fe fe fe fe f8 f8 f8 41 41 41 fe fe     ...A.......AAA..
    4a33:	fe fe 41 41 41 f8 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..AAA....A...A..
    4a43:	41 d8 d8 f8 f8 f8 41 b7 41 d8 d8 f8 f8 41 f8 f8     A.....A.A....A..
    4a53:	41 d8 41 41 41 f8 f8 f8 41 41 fe fe 41 f8 f8 f8     A.AAA...AA..A...
    4a63:	fe fe fe fe 41 f8 41 d8 fe fe 41 41 41 d8 f8 41     ....A.A...AAA..A
    4a73:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4a83:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4a93:	f8 d8 b7 b7 b7 41 41 41 f8 f8 41 41 41 d8 d8 41     .....AAA..AAA..A
    4aa3:	f8 f8 d8 d8 d8 d8 d8 41 d8 f8 d8 d8 d8 d8 d8 41     .......A.......A
    4ab3:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4ac3:	fe fe 1c 1c 1c 1c 03 03 fe fe 1c 1c 1c 1c 03 03     ................
    4ad3:	fe fe 1c 1c 1c 03 03 ff fe fe 1c 1c 03 03 ff ff     ................
    4ae3:	fe fe 1c fe ff ff ff ff fe fe fe fe fe 27 27 fe     .............''.
    4af3:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4b03:	03 1c 1c 1c 1c fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4b13:	03 03 1c 1c 1c fe fe fe ff 03 03 1c 1c fe fe fe     ................
    4b23:	27 27 ff fe 1c fe fe fe fe fe fe fe fe fe fe fe     ''..............
    4b33:	fe fe 18 39 39 39 39 39 fe fe 18 39 18 18 18 18     ...99999...9....
    4b43:	fe 18 39 18 18 00 00 00 fe 39 18 18 00 18 18 18     ..9......9......
    4b53:	fe 39 18 00 18 18 18 18 39 18 18 18 18 18 18 18     .9......9.......
    4b63:	18 10 10 fe 10 18 10 fe 18 10 fe fe fe 10 fe fe     ................
    4b73:	39 39 39 39 39 18 fe fe 18 18 18 18 39 18 fe fe     99999.......9...
    4b83:	00 00 00 18 18 39 18 fe 18 18 18 00 18 18 39 fe     .....9........9.
    4b93:	18 18 18 18 00 18 39 fe 18 18 18 18 18 18 18 39     ......9........9
    4ba3:	10 18 10 fe 10 18 18 39 fe 10 fe fe fe 10 10 18     .......9........
    4bb3:	fe 00 3f fd 00 3f 3f 00 00 3f 3f 00 00 3f 00 00     ..?..??..??..?..
    4bc3:	00 3f 3f 3f 3f 3f 00 00 00 3f 00 00 3f 3f 00 00     .?????...?..??..
    4bd3:	00 3f 3f 3f 00 3f 00 00 fe 00 3f 3f 3f 3f 3f 00     .???.?....?????.
    4be3:	fe fe 00 00 00 3f 3f 3f fe fe fe fe 00 00 00 00     .....???........
    4bf3:	fd ff fd ff fd fe fe fe 3f fd ff fd fe fe fe fe     ........?.......
    4c03:	3f 3f fd 00 00 fe fe fe 3f 3f 00 00 3f 00 00 fe     ??......??..?...
    4c13:	3f 3f 00 00 3f 00 3f 00 00 3f 3f 00 00 00 00 fe     ??..?.?..??.....
    4c23:	00 00 00 00 00 fe fe fe 00 00 00 fe fe fe fe fe     ................
    4c33:	fd ff ff ff fd ff ff fd 3f fd ff fd ff ff ff fd     ........?.......
    4c43:	3f 3f fd ff ff ff fd fd 3f 3f fd ff ff fd 00 fe     ??......??......
    4c53:	3f 3f 00 fd fd 00 3f 00 00 3f 3f 00 00 00 00 fe     ??....?..??.....
    4c63:	00 00 00 00 00 fe fe fe 00 00 00 fe fe fe fe fe     ................
    4c73:	00 ff 00 00 00 ff 00 18 00 ff ff ff ff ff 00 39     ...............9
    4c83:	fe 00 00 00 00 00 39 39 fe fe 18 39 39 39 39 39     ......99...99999
    4c93:	fe fe 18 39 18 18 18 18 fe 18 39 18 18 00 00 00     ...9......9.....
    4ca3:	18 39 00 00 00 18 18 10 10 10 18 10 10 10 18 18     .9..............
    4cb3:	18 00 ff 00 00 00 ff 00 39 00 ff ff ff ff ff 00     ........9.......
    4cc3:	39 39 00 00 00 00 00 fe 39 39 39 39 39 18 fe fe     99......99999...
    4cd3:	18 18 18 18 39 18 fe fe 00 00 00 18 18 39 18 fe     ....9........9..
    4ce3:	10 18 18 00 00 00 39 18 18 18 10 10 10 18 10 10     ......9.........
    4cf3:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4d03:	fe 1c 1c 1c 1c 03 03 03 1c 1c 1c 1c 03 03 03 03     ................
    4d13:	1c 1c fe 03 03 03 03 ff fe fe fe fe 03 03 ff ff     ................
    4d23:	fe fe fe fe ff ff ff ff fe fe fe fe 27 27 fe fe     ............''..
    4d33:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4d43:	03 03 1c 1c 1c 1c fe fe 03 03 03 1c 1c 1c 1c fe     ................
    4d53:	03 03 03 03 fe 1c 1c fe ff 03 03 fe fe fe fe fe     ................
    4d63:	ff ff ff fe fe fe fe fe fe 27 27 fe fe fe fe fe     .........''.....
    4d73:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    4d83:	fe 41 41 1f 1f 41 d8 b7 41 d8 1f 1f 1f 1f 41 b7     .AA..A..A.....A.
    4d93:	41 d8 d8 1f 1f 1f 1f 41 41 d8 d8 1f 41 1f 1f 1f     A......AA...A...
    4da3:	41 d8 41 41 41 1f 1f 1f 41 d8 d8 41 41 1f 1f 1f     A.AAA...A..AA...
    4db3:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4dc3:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 1f 1f 41     AAAA.AA.....A..A
    4dd3:	41 41 41 41 1f 1f d8 41 1f 1f 1f 1f 41 1f d8 41     AAAA...A....A..A
    4de3:	1f 1f 1f 1f 41 41 d8 41 1f 1f 1f 1f 41 d8 d8 41     ....AA.A....A..A
    4df3:	fe 41 41 41 1f d8 b7 ff 41 41 41 1f 41 d8 b7 ff     .AAA....AAA.A...
    4e03:	41 d8 41 1f 41 d8 b7 b7 41 d8 d8 41 1f 41 d8 b7     A.A.A...A..A.A..
    4e13:	41 d8 41 41 1f 1f 41 b7 41 d8 41 fe 41 1f 1f 41     A.AA..A.A.A.A..A
    4e23:	41 d8 41 fe 41 d8 1f 1f 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    4e33:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4e43:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4e53:	b7 b7 b7 b7 41 1f 41 fe 41 41 41 41 1f 1f d8 41     ....A.A.AAAA...A
    4e63:	1f 1f 1f 41 1f d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4e73:	fe fe 41 1f 1f 41 d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..A..A...A...A..
    4e83:	41 1f 1f 1f 1f 1f 41 d8 41 1f 1f 1f 41 1f 1f 41     A.....A.A...A..A
    4e93:	fe 41 d8 d8 d8 41 1f 1f fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4ea3:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4eb3:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4ec3:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4ed3:	41 41 41 41 41 41 fe fe 1f 1f 1f 1f 41 d8 41 fe     AAAAAA......A.A.
    4ee3:	41 1f 1f 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    4ef3:	41 1f 41 41 b7 ff ff 41 41 1f 1f 41 b7 b7 ff ff     A.AA...AA..A....
    4f03:	41 1f 1f 1f d8 b7 b7 41 fe 41 1f 1f 41 b7 41 41     A......A.A..A.AA
    4f13:	fe 41 1f 1f 1f 41 b7 41 fe fe 41 1f 1f 1f 1f 1f     .A...A.A..A.....
    4f23:	fe fe 41 1f 1f 1f 1f 1f fe fe 41 1f 1f 1f 1f 1f     ..A.......A.....
    4f33:	41 b7 41 ff 41 1f 41 fe ff b7 ff b7 41 1f 41 fe     A.A.A.A.....A.A.
    4f43:	41 41 b7 41 1f 41 fe fe 41 41 41 1f 41 fe fe fe     AA.A.A..AAA.A...
    4f53:	41 41 1f 1f 41 fe fe fe 1f 1f 1f 41 fe fe fe fe     AA..A......A....
    4f63:	1f 1f 1f 41 fe fe fe fe 1f 1f 1f 41 41 41 fe fe     ...A.......AAA..
    4f73:	fe fe 41 41 41 1f d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..AAA....A...A..
    4f83:	41 d8 d8 1f 1f 1f 41 b7 41 d8 d8 1f 1f 41 1f 1f     A.....A.A....A..
    4f93:	41 d8 41 41 41 1f 1f 1f 41 41 fe fe 41 1f 1f 1f     A.AAA...AA..A...
    4fa3:	fe fe fe fe 41 1f 41 d8 fe fe 41 41 41 d8 1f 41     ....A.A...AAA..A
    4fb3:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4fc3:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4fd3:	1f d8 b7 b7 b7 41 41 41 1f 1f 41 41 41 d8 d8 41     .....AAA..AAA..A
    4fe3:	1f 1f d8 d8 d8 d8 d8 41 d8 1f d8 d8 d8 d8 d8 41     .......A.......A
    4ff3:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    5003:	fe fe fe 41 f8 f8 d8 d8 fe fe 41 d8 d8 f8 f8 f8     ...A......A.....
    5013:	fe 41 41 d8 d8 d8 f8 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    5023:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    5033:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    5043:	d8 d8 f8 f8 f8 41 fe fe 41 f8 f8 f8 d8 41 fe fe     .....A..A....A..
    5053:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    5063:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    5073:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 f8 41 41 d8     ..AAAA...A.A.AA.
    5083:	41 d8 d8 f8 f8 f8 41 41 41 d8 41 d8 f8 f8 41 fe     A.....AAA.A...A.
    5093:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    50a3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    50b3:	d8 d8 d8 41 fe 41 41 fe f8 f8 f8 41 fe fe fe fe     ...A.AA....A....
    50c3:	41 f8 d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    50d3:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    50e3:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    50f3:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 f8     ....A..A.....AA.
    5103:	fe fe fe fe 41 41 f8 f8 fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    5113:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    5123:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    5133:	d8 41 f8 41 fe fe fe fe f8 41 f8 41 fe fe fe fe     .A.A.....A.A....
    5143:	f8 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    5153:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    5163:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    5173:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    5183:	fe fe 41 f8 f8 d8 d8 d8 fe fe 41 f8 f8 f8 f8 41     ..A.......A....A
    5193:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    51a3:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    51b3:	d8 d8 d8 f8 f8 f8 41 fe d8 d8 f8 f8 f8 d8 41 fe     ......A.......A.
    51c3:	d8 f8 f8 f8 d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    51d3:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    51e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    51f3:	fe 41 41 f8 d8 d8 d8 d8 fe 41 d8 f8 f8 d8 d8 d8     .AA......A......
    5203:	41 d8 d8 d8 f8 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    5213:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    5223:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    5233:	41 41 41 41 41 41 41 41 d8 f8 f8 f8 41 fe fe fe     AAAAAAAA....A...
    5243:	f8 f8 f8 d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5253:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    5263:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    5273:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5283:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5293:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    52a3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    52b3:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    52c3:	fe fe fe 41 1f 1f d8 d8 fe fe 41 d8 d8 1f 1f 1f     ...A......A.....
    52d3:	fe 41 41 d8 d8 d8 1f 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    52e3:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    52f3:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    5303:	d8 d8 1f 1f 1f 41 fe fe 41 1f 1f 1f d8 41 fe fe     .....A..A....A..
    5313:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    5323:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    5333:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 1f 41 41 d8     ..AAAA...A.A.AA.
    5343:	41 d8 d8 1f 1f 1f 41 41 41 d8 41 d8 1f 1f 41 fe     A.....AAA.A...A.
    5353:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    5363:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5373:	d8 d8 d8 41 fe 41 41 fe 1f 1f 1f 41 fe fe fe fe     ...A.AA....A....
    5383:	41 1f d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    5393:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    53a3:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    53b3:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 1f     ....A..A.....AA.
    53c3:	fe fe fe fe 41 41 1f 1f fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    53d3:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    53e3:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    53f3:	d8 41 1f 41 fe fe fe fe 1f 41 1f 41 fe fe fe fe     .A.A.....A.A....
    5403:	1f 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    5413:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    5423:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    5433:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    5443:	fe fe 41 1f 1f d8 d8 d8 fe fe 41 1f 1f 1f 1f 41     ..A.......A....A
    5453:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    5463:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    5473:	d8 d8 d8 1f 1f 1f 41 fe d8 d8 1f 1f 1f d8 41 fe     ......A.......A.
    5483:	d8 1f 1f 1f d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    5493:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    54a3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    54b3:	fe 41 41 1f d8 d8 d8 d8 fe 41 d8 1f 1f d8 d8 d8     .AA......A......
    54c3:	41 d8 d8 d8 1f 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    54d3:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    54e3:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    54f3:	41 41 41 41 41 41 41 41 d8 1f 1f 1f 41 fe fe fe     AAAAAAAA....A...
    5503:	1f 1f 1f d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5513:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    5523:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........

00005533 <man4>:
    5533:	02 03 1e 1f 3d 3e 52 53                             ....=>RS

0000553b <man3>:
    553b:	02 03 1c 1d 3b 3c 50 51                             ....;<PQ

00005543 <man2>:
    5543:	02 03 1a 1b 39 3a 4e 4f                             ....9:NO

0000554b <man1>:
    554b:	02 03 18 19 37 38 4c 4d                             ....78LM

00005553 <man0>:
    5553:	02 03 16 17 35 36 4a 4b                             ....56JK

0000555b <owl1>:
    555b:	02 02 14 15 33 34                                   ....34

00005561 <blob1>:
    5561:	02 02 12 13 31 32                                   ....12

00005567 <bee1>:
    5567:	02 02 10 11 2e 30                                   .....0

0000556d <bee0>:
    556d:	02 02 0e 0f 2e 2f                                   ...../

00005573 <blob0>:
    5573:	02 02 0c 0d 2c 2d                                   ....,-

00005579 <owl0>:
    5579:	02 02 0a 0b 2a 2b                                   ....*+

0000557f <melli4>:
    557f:	02 03 08 09 28 29 47 48                             ....()GH

00005587 <melli3>:
    5587:	02 03 06 07 26 27 45 46                             ....&'EF

0000558f <melli2>:
    558f:	02 03 04 05 24 25 43 44                             ....$%CD

00005597 <melli1>:
    5597:	02 03 02 03 22 23 41 42                             ...."#AB

0000559f <melli0>:
    559f:	02 03 00 01 20 21 3f 40                             .... !?@

000055a7 <uMTiles>:
    55a7:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    55b7:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    55c7:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    55d7:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    55e7:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    55f7:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5607:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    5617:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    5627:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    5637:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    5647:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    5657:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    5667:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    5677:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    5687:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    5697:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    56a7:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    56b7:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    56c7:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    56d7:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    56e7:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    56f7:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    5707:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    5717:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    5727:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    5737:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    5747:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    5757:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    5767:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    5777:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    5787:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    5797:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    57a7:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    57b7:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    57c7:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    57d7:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    57e7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    57f7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5807:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5817:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5827:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    5837:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    5847:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    5857:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    5867:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    5877:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5887:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    5897:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    58a7:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    58b7:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    58c7:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    58d7:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    58e7:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    58f7:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    5907:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    5917:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    5927:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    5937:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    5947:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    5957:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    59a7:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    59b7:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    59c7:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    59d7:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    59e7:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    59f7:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5a07:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    5a17:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    5a27:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    5a37:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5a47:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    5a57:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    5a67:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    5a77:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    5a87:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    5a97:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    5aa7:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    5ab7:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    5ac7:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    5ad7:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    5ae7:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    5af7:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    5b07:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    5b17:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    5b27:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    5b37:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    5b47:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    5b57:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    5b67:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    5b77:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    5b87:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    5b97:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    5ba7:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    5bb7:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    5bc7:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    5bd7:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    5be7:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5bf7:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5c07:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    5c17:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5c27:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    5c37:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    5c47:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    5c57:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    5c67:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    5cab:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5ce7:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    5cf7:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    5d07:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5d17:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    5d27:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    5d37:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    5d47:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    5d57:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    5d67:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    5d77:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5d87:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5d97:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
    5da7:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    5db7:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5dc7:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5dd7:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    5de7:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5df7:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5e07:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5e17:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5e27:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    5e37:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5e47:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    5e57:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    5e67:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    5e77:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5e87:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5e97:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5ea7:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5eb7:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    5ec7:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    5ed7:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    5ee7:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5ef7:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5f07:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5f17:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    5f27:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    5f37:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    5f47:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    5f57:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    5f67:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    5f77:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    5f87:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    5f97:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5fa7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5fb7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5fc7:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    5fd7:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    5fe7:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5ff7:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    6007:	e4 e4 1a 63 64 6d 6d 76 e4 e4 1a 63 63 6d 64 6d     ...cdmmv...ccmdm
    6017:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    6027:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    6037:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    6047:	6e 77 b7 b7 b7 77 b7 76 76 b7 b7 b7 b7 b7 6e 6e     nw...w.vv.....nn
    6057:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    6067:	1b 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6e 6d 76     ..mmvww...dcmnmv
    6077:	1a 63 64 1a 64 6d 6d 6e 11 1a 63 64 6d 6e 6e 77     .cd.dmmn..cdmnnw
    6087:	e4 11 11 1a 63 1a 63 1b e4 e4 11 11 19 63 1b 64     ....c.c......c.d
    6097:	e4 e4 11 63 63 6c 6d 6d e4 e4 19 64 63 64 6e 6d     ...cclmm...dcdnm
    60a7:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 6e 77 77     .......ww...vnww
    60b7:	77 b7 b7 76 6e 77 76 76 77 b7 bf b7 77 77 77 77     w..vnwvvw...wwww
    60c7:	64 64 64 63 64 64 64 64 65 63 6d 6d 6c 6d 6c 6c     dddcddddecmmlmll
    60d7:	76 76 b7 b7 b7 77 77 76 6e b7 b7 b7 77 77 76 76     vv...wwvn...wwvv
    60e7:	77 77 76 6e 6e 76 6e 6d 6e 6e 76 6e 6d 6d 64 64     wwvnnvnmnnvnmmdd
    60f7:	6e 6e 6e 6d 6d 6d 64 6d 77 76 6e 76 64 6d 63 63     nnnmmmdmwvnvdmcc
    6107:	64 64 64 23 1a 1a 1a 11 63 63 63 1a 1a 19 11 08     ddd#....ccc.....
    6117:	76 76 6d 6d 6d 6d 1b 1a 6e 6d 76 6d 64 64 63 63     vvmmmm..nmvmddcc
    6127:	1b 64 6c 1a 1a 63 11 11 63 64 63 11 11 1a 11 11     .dl..c..cdc.....
    6137:	63 63 1a 11 11 11 11 11 63 1a 1a 1a 19 11 11 11     cc......c.......
    6147:	11 11 11 11 11 11 11 e4 11 11 11 11 11 11 e4 e4     ................
    6157:	63 1a 08 11 11 11 e4 e4 19 19 11 11 11 11 e4 e4     c...............
    6167:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6177:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6187:	e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4 e4 e4 15 16     ................
    6197:	e4 e4 e4 e4 0c 15 16 1f e4 e4 e4 14 15 16 1f 67     ...............g
    61a7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    61b7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    61c7:	14 14 14 e4 e4 e4 e4 e4 16 1d 14 14 14 e4 e4 e4     ................
    61d7:	1f 1f 16 15 0c e4 e4 e4 5f 67 66 15 14 14 e4 e4     ........_gf.....
    61e7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 15 15 15     ................
    61f7:	e4 e4 14 14 16 16 1f 1f e4 14 15 1d 1f 1f 67 67     ..............gg
    6207:	e4 15 16 1e 1f 17 5f 67 14 15 16 17 1f 67 67 1f     ......_g.....gg.
    6217:	0c 1d 1e 17 17 6e 6f 1f 0c 5d 6e 17 17 6e 67 1f     .....no..]n..ng.
    6227:	e4 e4 e4 e4 e4 e4 e4 e4 14 14 e4 e4 e4 e4 e4 e4     ................
    6237:	16 0d 0c e4 e4 e4 e4 e4 17 16 15 14 e4 e4 e4 e4     ................
    6247:	1f 77 5e 15 14 e4 e4 e4 1f 77 66 16 15 14 e4 e4     .w^......wf.....
    6257:	1f 1f 1f 17 1d 1d 0c e4 1f 17 17 1f 5e 15 14 e4     ............^...
    6267:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6277:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 74 74     ..............tt
    6287:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4 74 74 74     .....ttt.....ttt
    6297:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 74 74 74 74 74     .....ttt...ttttt
    62a7:	e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 74 74 e4 e4     ........t...tt..
    62b7:	74 e4 74 74 74 74 e4 74 74 74 e4 e4 74 74 74 e4     t.tttt.ttt..ttt.
    62c7:	74 e4 74 74 74 74 74 74 74 74 74 74 74 74 74 74     t.tttttttttttttt
    62d7:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    62e7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 e4 e4 e4     .........t......
    62f7:	e4 74 e4 e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4     .t......ttt.....
    6307:	74 74 74 e4 e4 e4 74 e4 74 74 74 74 e4 74 e4 e4     ttt...t.tttt.t..
    6317:	74 74 74 e4 74 74 74 e4 e4 74 74 74 74 74 74 e4     ttt.ttt..tttttt.
    6327:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    6337:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    6347:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    6357:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    6367:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    6377:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    6387:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    6397:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    63a7:	e4 e4 e4 e4 e4 e4 e4 08 e4 e4 e4 e4 e4 e4 e4 a3     ................
    63b7:	e4 e4 e4 e4 e4 e4 51 fd e4 e4 e4 e4 e4 00 eb f5     ......Q.........
    63c7:	e4 e4 e4 e4 e4 a3 f4 f4 e4 e4 e4 e4 52 f4 f4 f5     ............R...
    63d7:	e4 e4 e4 00 ec f4 f4 fd e4 e4 e4 00 a3 e3 e3 ec     ................
    63e7:	00 e4 e4 e4 e4 e4 e4 e4 9a e4 e4 e4 e4 e4 e4 e4     ................
    63f7:	eb 49 e4 e4 e4 e4 e4 e4 e3 9a 00 e4 e4 e4 e4 e4     .I..............
    6407:	a3 db 9a e4 e4 e4 e4 e4 e3 e3 e3 51 e4 e4 e4 e4     ...........Q....
    6417:	ec eb e3 a3 00 e4 e4 e4 9a 92 9b 9a 00 e4 e4 e4     ................
    6427:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    6437:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    6447:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    6457:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    6467:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    6477:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6487:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    6497:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    64a7:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    64b7:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    64c7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    64d7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    64e7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    64f7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6507:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    6517:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    6527:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    6537:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    6547:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    6557:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    6567:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    6577:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    6587:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    6597:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    65a7:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    65b7:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    65c7:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    65d7:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    65e7:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    65f7:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    6607:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    6617:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    6627:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6637:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    6647:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6657:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    6667:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6677:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    6687:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6697:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    66a7:	e4 e4 e4 14 66 1f 1f 67 e4 e4 14 16 27 1f 1f 1f     ....f..g....'...
    66b7:	e4 e4 15 1e 17 1f 5f 67 e4 14 15 27 17 17 5f be     ......_g...'.._.
    66c7:	e4 14 16 1e 1f 1f 1f 6e e4 14 16 1e 1e 67 17 16     .......n.....g..
    66d7:	e4 14 15 1e 16 1e 16 16 e4 e4 14 15 16 16 16 1e     ................
    66e7:	1f 6e 6e 16 1c 0c e4 e4 1f 1f 1e 16 1d 14 e4 e4     .nn.............
    66f7:	1f 17 17 16 15 14 14 e4 1f 17 1e 15 14 14 e4 e4     ................
    6707:	1f 16 1d 15 14 14 e4 e4 17 16 15 14 0c e4 e4 e4     ................
    6717:	16 15 0d 14 e4 e4 e4 e4 15 0c 14 5c e4 e4 e4 e4     ...........\....
    6727:	0c 1d 66 17 1f 1f 1f 1f 14 15 16 1f 1f 1f 1f 1f     ..f.............
    6737:	e4 15 16 17 1f 1f 1f 1f e4 14 15 16 1e 1e 1f 1f     ................
    6747:	e4 e4 15 16 16 1f 1f 1f e4 e4 14 15 16 17 1f 1f     ................
    6757:	e4 5b 64 14 15 16 16 1e e4 5b 6d 64 14 14 14 15     .[d......[md....
    6767:	5f 1f 17 27 1e 0d 14 e4 6f 6f 17 17 1e 15 14 14     _..'....oo......
    6777:	6f 6e 17 17 6e 65 0c 14 1f 1f 1f 17 6e 65 0c 14     on..ne......ne..
    6787:	17 17 1f 17 16 15 14 14 1e 17 1e 1e 16 15 14 e4     ................
    6797:	1e 16 1e 16 15 14 14 e4 16 16 16 15 14 14 e4 e4     ................
    67a7:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    67b7:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 74 74 e4 74     .....ttt....tt.t
    67c7:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    67d7:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    67e7:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    67f7:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    6807:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    6817:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    6827:	74 74 74 74 74 74 e4 e4 74 74 74 74 74 e4 e4 e4     tttttt..ttttt...
    6837:	74 74 74 74 74 e4 74 e4 74 74 74 74 74 74 e4 e4     ttttt.t.tttttt..
    6847:	74 74 74 74 74 74 74 e4 74 74 74 74 74 74 e4 e4     ttttttt.tttttt..
    6857:	74 74 74 74 74 74 e4 74 74 74 74 74 74 74 74 e4     tttttt.tttttttt.
    6867:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    6877:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    6887:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    6897:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    68a7:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    68b7:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    68c7:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    68d7:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    68e7:	e4 e4 e4 e4 49 e3 9a e3 e4 e4 e4 e4 e4 92 db eb     ....I...........
    68f7:	e4 e4 e4 e4 e4 00 9a e3 e4 e4 e4 e4 e4 e4 49 eb     ..............I.
    6907:	e4 e4 e4 e4 e4 e4 e4 9a e4 e4 e4 e4 e4 e4 e4 00     ................
    6917:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6927:	92 89 9a 49 e4 e4 e4 e4 92 92 51 e4 e4 e4 e4 e4     ...I......Q.....
    6937:	9a 92 00 e4 e4 e4 e4 e4 db 49 e4 e4 e4 e4 e4 e4     .........I......
    6947:	92 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    6957:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6967:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    6977:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    6987:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    6997:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    69a7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    69b7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    69c7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    69d7:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    69e7:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    69f7:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    6a07:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    6a17:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6a27:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6a37:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6a47:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6a57:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    6a67:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6a77:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6a87:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    6a97:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6aa7:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6ab7:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6ac7:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    6ad7:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6ae7:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    6af7:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    6b07:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    6b17:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    6b27:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    6b37:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    6b47:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    6b57:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    6b67:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6b77:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    6b87:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    6b97:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    6ba7:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6bb7:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    6bc7:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    6bd7:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    6be7:	e4 e4 e4 14 15 15 15 14 e4 e4 e4 e4 14 14 14 14     ................
    6bf7:	e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4 5b     .......[.......[
    6c07:	e4 14 0c 14 e4 e4 e4 5b 14 16 1e 5e 1c e4 e4 5b     .......[...^...[
    6c17:	1e 1f 67 67 15 0c e4 5b 16 67 1f 1e 15 0c e4 5b     ..gg...[.g.....[
    6c27:	14 14 5c 64 64 e4 e4 e4 14 64 6d 6d 64 13 e4 e4     ..\dd....dmmd...
    6c37:	64 6d 76 76 1c 15 5e 14 6d 6e bf 65 0c 67 67 1e     dmvv..^.mn.e.gg.
    6c47:	6d 76 6e 0c 16 67 67 1f 6d 6d 65 15 1f 17 67 1f     mvn..gg.mme...g.
    6c57:	65 6d 5c 15 1e 17 1f 1f 64 6e 6d 14 16 1f 1f 1f     em\.....dnm.....
    6c67:	5b 64 6d 6d 64 64 5c 14 5b 64 6d 6e 76 6d 6d 63     [dmmdd\.[dmnvmmc
    6c77:	14 5c 6d 6e 77 76 76 64 15 14 6d 76 77 76 76 64     .\mnwvvd..mvwvvd
    6c87:	1f 1d 1d b7 77 6e 6e 6d 67 1e 0c 6e bf 76 6d 65     ....wnnmg..n.vme
    6c97:	67 1e 0c 65 bf bf 6d 64 16 1d 14 65 bf 77 6e 64     g..e..md...e.wnd
    6ca7:	14 15 14 14 0c e4 e4 e4 13 0c 14 e4 e4 e4 e4 e4     ................
    6cb7:	e4 e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     ........[.......
    6cc7:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6cd7:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6ce7:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 74 74 74 e4 74     ...ttttt...ttt.t
    6cf7:	e4 e4 e4 e4 74 e4 74 74 e4 e4 e4 74 74 e4 e4 74     ....t.tt...tt..t
    6d07:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    6d17:	e4 e4 e4 e4 e4 74 e4 74 e4 e4 e4 e4 e4 e4 e4 74     .....t.t.......t
    6d27:	74 74 74 1d 74 74 74 74 1d 74 74 1d 74 74 74 74     ttt.tttt.tt.tttt
    6d37:	1c 1d 1d 1d 74 74 74 1d 74 1c 1c 1c 74 74 74 1c     ....ttt.t...ttt.
    6d47:	74 1d 1d 1c 1d 1c 1c 1c 74 74 74 1c 1c 1c 1c 1c     t.......ttt.....
    6d57:	e4 74 74 1d 1c 1c 1c 74 74 e4 e4 74 1c 1c 1c e4     .tt....tt..t....
    6d67:	74 1d 1d 74 74 74 74 74 1d 1d 1d 74 74 74 74 e4     t..ttttt...tttt.
    6d77:	1c 74 74 74 74 e4 74 e4 74 74 74 74 e4 e4 74 e4     .tttt.t.tttt..t.
    6d87:	1c 1c 1c 74 74 e4 e4 e4 1d 74 74 74 74 e4 e4 e4     ...tt....tttt...
    6d97:	e4 74 74 e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4     .tt......tt.....
	...
    6daf:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    6dbf:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    6dcf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ddf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    6def:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6dff:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e0f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e1f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    6e2f:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    6e3f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e4f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    6e6f:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e7f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e8f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e9f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    6eaf:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    6ebf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ecf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6edf:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6eef:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    6eff:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f0f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f1f:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6f2f:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    6f3f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f4f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f5f:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    6f6f:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    6f7f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f8f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f9f:	e4 e4 e4 e4 e4 e4 e4 e4 6e 6e 6d 64 6c 6d 63 63     ........nnmdlmcc
    6faf:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6fbf:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    6fcf:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6fdf:	76 6d 6c 6d 6d 6d 64 63 63 11 1a 19 11 11 e4 e4     vmlmmmdcc.......
    6fef:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6fff:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    700f:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    701f:	23 1a 11 19 11 09 e4 e4 e4 e4 1a 63 63 6d 6d 6d     #..........ccmmm
    702f:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    703f:	e4 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6d 6d 76     ..mmvww...dcmmmv
    704f:	1a 63 1b 64 6d 64 76 76 11 1a 64 63 64 6d 76 76     .c.dmdvv..dcdmvv
    705f:	1a 1a 1b 64 6d 6e 6e 76 6e 77 b7 b7 77 77 77 6e     ...dmnnvnw..wwwn
    706f:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    707f:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 76 77 76     .......ww...vvwv
    708f:	77 b7 b7 b7 b7 6e 6e 76 6e b7 b7 77 76 6e 6e 76     w....nnvn..wvnnv
    709f:	77 b7 b7 77 76 77 77 76 6e 6e 6d 64 64 63 63 63     w..wvwwvnnmddccc
    70af:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    70bf:	77 77 76 6e 76 76 6e 6d 6e 6e 6e 6d 6d 64 64 63     wwvnvvnmnnnmmddc
    70cf:	6e 6e 6d 6d 64 6d 64 64 76 6e 6e 6e 6d 64 64 63     nnmmdmddvnnnmddc
    70df:	6e 6e 6d 76 6d 63 63 6c 11 1a 19 19 11 11 e4 e4     nnmvmccl........
    70ef:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    70ff:	1b 6c 6d 19 1a 63 11 e4 64 63 1a 11 11 11 11 11     .lm..c..dc......
    710f:	64 1a 1b 1a 19 11 11 11 1a 63 1a 11 11 11 11 11     d........c......
    711f:	63 1b 1a 11 19 11 11 11 15 1e 16 15 14 13 e4 e4     c...............
    712f:	14 14 14 0c 1c 5b e4 e4 e4 e4 5b 5c 64 64 e4 e4     .....[....[\dd..
    713f:	e4 e4 5b 6d 6e 64 5b e4 e4 e4 5b 64 6e 65 5b e4     ..[mnd[...[dne[.
    714f:	e4 e4 e4 5c 6d 65 5b e4 e4 e4 e4 5b 65 6d 5b e4     ...\me[....[em[.
    715f:	e4 e4 e4 e4 64 65 5b e4 5c 6d 76 65 0c 16 1e 16     ....de[.\mve....
    716f:	5b 64 76 76 5c 14 14 14 5b 64 6d 6e 64 5c 5c 5c     [dvv\...[dmnd\\\
    717f:	e4 5c 6d 65 5b 6d 76 6d e4 5b 64 64 5b 6d 76 6e     .\me[mvm.[dd[mvn
    718f:	e4 e4 5c 64 64 64 6e 6e e4 e4 5b 65 64 5b 6d 65     ..\dddnn..[ed[me
    719f:	e4 e4 e4 64 6d 5c 6d 64 0d 0c 1c 76 bf 76 6e 64     ...dm\md...v.vnd
    71af:	0c 14 6d 77 76 6e 6d 5b 5b 6d 76 76 6d 6d 64 5b     ..mwvnm[[mvvmmd[
    71bf:	64 6d bf 76 6d 64 5c e4 64 64 76 76 65 64 5b e4     dm.vmd\.ddvved[.
    71cf:	5b 64 76 76 6d 5b e4 e4 5b 6d 76 6e 65 5b e4 e4     [dvvm[..[mvne[..
    71df:	64 6e 76 6d 64 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     dnvmd...........
    71ef:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff e4 e4     ................
    71ff:	e4 ff e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4     ................
    720f:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    721f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    722f:	e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    723f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    724f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    725f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    726f:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    727f:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    728f:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    729f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    72af:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    72bf:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    72cf:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    72df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    72ef:	e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    72ff:	e4 ff e4 e4 ff e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    730f:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    731f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    732f:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    733f:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    734f:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    735f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4     ................
    736f:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    737f:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    738f:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    739f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    73af:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    73bf:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    73cf:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    73df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    73ef:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    73ff:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    740f:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    741f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    742f:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    743f:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    744f:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4     ................
    745f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    746f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    747f:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    748f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    749f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    74af:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    74bf:	e4 e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff     ................
    74cf:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    74df:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    74ef:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    74ff:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    750f:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    751f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    752f:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff     ................
    753f:	e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 ff e4 e4     ................
    754f:	e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff     ................
    755f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    756f:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    757f:	e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    758f:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    759f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4 ff     ................
    75af:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    75bf:	ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    75cf:	ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 e4 ff     ................
    75df:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4     ................
    75ef:	e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff e4     ................
    75ff:	e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff     ................
    760f:	e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 e4     ................
    761f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    762f:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    763f:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    764f:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    765f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    766f:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4     ................
    767f:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    768f:	ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    769f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    76af:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    76bf:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    76cf:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    76df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 ff     ................
    76ef:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    76ff:	e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    770f:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    771f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    772f:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    773f:	ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 ff e4 e4     ................
    774f:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff     ................
    775f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    776f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    777f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    778f:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    779f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    77af:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff e4 e4     ................
    77bf:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    77cf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    77df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff     ................
    77ef:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    77ff:	ff e4 e4 ff ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    780f:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff     ................
    781f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff ff ff ff ff     ................
    782f:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    783f:	ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    784f:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 ff e4 e4     ................
    785f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    786f:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    787f:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 ff     ................
    788f:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    789f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    78af:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4     ................
    78bf:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    78cf:	ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4     ................
    78df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff ff     ................
    78ef:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    78ff:	e4 ff e4 ff e4 e4 ff e4 ff ff ff ff ff e4 ff e4     ................
    790f:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    791f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    792f:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 ff     ................
    793f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    794f:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    795f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    796f:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    797f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    798f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    799f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff     ................
    79af:	ff e4 e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff     ................
    79bf:	ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    79cf:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    79df:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    79ef:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    79ff:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7a0f:	e4 e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7a1f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff     ................
    7a2f:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7a3f:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7a4f:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7a5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    7a6f:	e4 ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff     ................
    7a7f:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7a8f:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7a9f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    7aaf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7abf:	ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7acf:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    7adf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 ff     ................
    7aef:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7aff:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7b0f:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7b1f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff ff     ................
    7b2f:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7b3f:	ff ff ff e4 e4 ff ff ff e4 ff e4 e4 e4 ff e4 e4     ................
    7b4f:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    7b5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    7b6f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7b7f:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7b8f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    7b9f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4 ff     ................
    7baf:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    7bbf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff ff     ................
    7bcf:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    7bdf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4     ................
    7bef:	e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff     ................
    7bff:	ff e4 e4 ff ff ff ff e4 ff ff e4 ff e4 ff e4 e4     ................
    7c0f:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7c1f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7c2f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7c3f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7c4f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7c5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7c6f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4     ................
    7c7f:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7c8f:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 0f 0f 0f e4 e4 e4     ................
    7c9f:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7caf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7cbf:	e4 ff e4 e4 e4 e4 e4 e4 e4 f6 f6 e4 e4 e4 e4 e4     ................
    7ccf:	e4 ad ad f6 e4 e4 e4 e4 e4 ad a4 ad f6 e4 e4 e4     ................
    7cdf:	e4 ad a4 a4 ad f6 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7cef:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7cff:	ff e4 e4 ff ff e4 e4 ff ff e4 e4 e4 ff e4 ff ff     ................
    7d0f:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4     ................
    7d1f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7d2f:	ff e4 e4 e4 ff ff e4 ff e4 ff e4 e4 ff e4 ff e4     ................
    7d3f:	e4 ff e4 e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4     ................
    7d4f:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7d5f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7d6f:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7d7f:	ff e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7d8f:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7d9f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4     ................
    7daf:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7dbf:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7dcf:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4     ................
    7ddf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    7def:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7dff:	e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    7e0f:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7e1f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 ff ff ff ff     ................
    7e2f:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7e3f:	ff ff e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4     ................
    7e4f:	e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4     ................
    7e5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7e6f:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7e7f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7e8f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7e9f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff e4     ................
    7eaf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7ebf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7ecf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7edf:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff ff     ................
    7eef:	ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7eff:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7f0f:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7f1f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff e4 e4 ff ff     ................
    7f2f:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7f3f:	ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7f4f:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 e4 ff ff     ................
    7f5f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7f6f:	e4 ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7f7f:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7f8f:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7f9f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    7faf:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7fbf:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    7fcf:	e4 e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    7fdf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7fef:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7fff:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    800f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    801f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    802f:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    803f:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    804f:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    805f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff e4     ................
    806f:	e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff     ................
    807f:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4     ................
    808f:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4     ................
    809f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4     ................
    80af:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4     ................
    80bf:	e4 ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 ff     ................
    80cf:	ff ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4     ................
    80df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    80ef:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    80ff:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff     ................
    810f:	e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    811f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff     ................
    812f:	e4 ff e4 e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    813f:	ff e4 ff e4 e4 e4 ff e4 ff ff ff ff e4 e4 ff e4     ................
    814f:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    815f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    816f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    817f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    818f:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    819f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    81af:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4     ................
    81bf:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff ff ff     ................
    81cf:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    81df:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4     ................
    81ef:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    81ff:	ff e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    820f:	e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    821f:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    822f:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    823f:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    824f:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    825f:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff e4 ff e4     ................
    826f:	ff ff e4 e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    827f:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 ff ff e4 ff e4     ................
    828f:	ff e4 e4 ff ff e4 e4 e4 ff e4 e4 e4 ff e4 ff e4     ................
    829f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    82af:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f 0f e4 e4     ................
    82bf:	e4 e4 0f 0c 0c 0f e4 e4 e4 0f 0f 0c 0c 0f 0f e4     ................
    82cf:	e4 0f 0c 0c 0c 0c 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    82df:	0f 0f 0c 0c 0c 0c 0f 0f e4 ad a4 a4 a4 ad f6 e4     ................
    82ef:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    82ff:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    830f:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
	...

00008327 <spike1>:
    8327:	01 02 9c b5                                         ....

0000832b <spike0>:
    832b:	01 02 9b b4                                         ....

0000832f <congra0>:
    832f:	0a 01 aa ab ac ad ae af b0 b1 b2 b3                 ............

0000833b <timeup0>:
    833b:	06 01 a4 a5 a6 a7 a8 a9                             ........

00008343 <over0>:
    8343:	07 01 9d 9e 9f a0 a1 a2 a3                          .........

0000834c <press0>:
    834c:	08 01 95 96 91 83 97 98 99 9a                       ..........

00008356 <time0>:
    8356:	03 01 92 93 94                                      .....

0000835b <live0>:
    835b:	03 01 90 86 91                                      .....

00008360 <get0>:
    8360:	07 01 89 8a 8b 8c 8d 8e 8f                          .........

00008369 <x0>:
    8369:	01 01 88                                            ...

0000836c <level0>:
    836c:	04 01 84 85 86 87                                   ......

00008372 <bonus0>:
    8372:	04 01 80 81 82 83                                   ......

00008378 <score0>:
    8378:	04 01 7c 7d 7e 7f                                   ..|}~.

0000837e <nm>:
    837e:	01 01 7b                                            ..{

00008381 <n9>:
    8381:	01 01 7a                                            ..z

00008384 <n8>:
    8384:	01 01 79                                            ..y

00008387 <n7>:
    8387:	01 01 78                                            ..x

0000838a <n6>:
    838a:	01 01 77                                            ..w

0000838d <n5>:
    838d:	01 01 76                                            ..v

00008390 <n4>:
    8390:	01 01 75                                            ..u

00008393 <n3>:
    8393:	01 01 74                                            ..t

00008396 <n2>:
    8396:	01 01 73                                            ..s

00008399 <n1>:
    8399:	01 01 72                                            ..r

0000839c <n0>:
    839c:	01 01 71                                            ..q

0000839f <nb>:
    839f:	01 01 09                                            ...

000083a2 <bridge3>:
    83a2:	01 01 63                                            ..c

000083a5 <bridge2>:
    83a5:	01 01 62                                            ..b

000083a8 <bridge1>:
    83a8:	01 01 61                                            ..a

000083ab <bridge0>:
    83ab:	01 01 60                                            ..`

000083ae <mush3>:
    83ae:	02 02 5b 5c 70 09                                   ..[\p.

000083b4 <mush2>:
    83b4:	02 02 59 5a 6e 6f                                   ..YZno

000083ba <mush1>:
    83ba:	02 02 31 32 46 47                                   ..12FG

000083c0 <mush0>:
    83c0:	02 02 2f 30 44 45                                   ../0DE

000083c6 <tube5>:
    83c6:	02 02 53 54 68 69                                   ..SThi

000083cc <tube4>:
    83cc:	02 02 29 2a 3e 3f                                   ..)*>?

000083d2 <tube3>:
    83d2:	02 02 57 58 6c 6d                                   ..WXlm

000083d8 <tube2>:
    83d8:	02 02 55 56 6a 6b                                   ..UVjk

000083de <tube1>:
    83de:	02 02 2d 2e 42 43                                   ..-.BC

000083e4 <tube0>:
    83e4:	02 02 2b 2c 40 41                                   ..+,@A

000083ea <cloud3>:
    83ea:	02 02 51 52 66 67                                   ..QRfg

000083f0 <cloud2>:
    83f0:	02 02 4f 50 64 65                                   ..OPde

000083f6 <cloud1>:
    83f6:	02 02 28 09 3c 3d                                   ..(.<=

000083fc <cloud0>:
    83fc:	02 02 26 27 3a 3b                                   ..&':;

00008402 <bush4>:
    8402:	02 02 4a 09 5f 09                                   ..J._.

00008408 <bush3>:
    8408:	02 02 09 09 35 09                                   ....5.

0000840e <bush2>:
    840e:	02 02 48 49 5d 5e                                   ..HI]^

00008414 <bush1>:
    8414:	02 02 09 09 33 34                                   ....34

0000841a <blue>:
    841a:	01 01 09                                            ...

0000841d <diamond0>:
    841d:	02 02 38 39 4d 4e                                   ..89MN

00008423 <block3>:
    8423:	02 02 08 08 19 19                                   ......

00008429 <block2>:
    8429:	02 02 36 37 4b 4c                                   ..67KL

0000842f <door3>:
    842f:	02 02 0f 10 0f 1f                                   ......

00008435 <door2>:
    8435:	02 02 0e 0f 1e 0f                                   ......

0000843b <door1>:
    843b:	02 02 0c 0d 1c 1d                                   ......

00008441 <door0>:
    8441:	02 02 0a 0b 1a 1b                                   ......

00008447 <block5>:
    8447:	02 02 09 08 09 19                                   ......

0000844d <block4>:
    844d:	02 02 08 09 19 09                                   ......

00008453 <ground3>:
    8453:	02 03 07 06 18 17 24 23                             ......$#

0000845b <ground2>:
    845b:	02 03 07 05 18 16 24 25                             ......$%

00008463 <ground1>:
    8463:	02 03 04 06 15 17 22 23                             ......"#

0000846b <ground>:
    846b:	02 03 04 05 15 16 20 21                             ...... !

00008473 <block1>:
    8473:	02 02 02 03 13 14                                   ......

00008479 <block0>:
    8479:	02 02 00 01 11 12                                   ......

0000847f <bigblue0>:
    847f:	02 02 09 09 09 09 00                                .......

00008486 <__ctors_end>:
    8486:	11 24       	eor	r1, r1
    8488:	1f be       	out	0x3f, r1	; 63
    848a:	cf ef       	ldi	r28, 0xFF	; 255
    848c:	d0 e1       	ldi	r29, 0x10	; 16
    848e:	de bf       	out	0x3e, r29	; 62
    8490:	cd bf       	out	0x3d, r28	; 61

00008492 <__do_copy_data>:
    8492:	11 e0       	ldi	r17, 0x01	; 1
    8494:	a0 e0       	ldi	r26, 0x00	; 0
    8496:	b1 e0       	ldi	r27, 0x01	; 1
    8498:	e8 ed       	ldi	r30, 0xD8	; 216
    849a:	fb ed       	ldi	r31, 0xDB	; 219
    849c:	02 c0       	rjmp	.+4      	; 0x84a2 <__do_copy_data+0x10>
    849e:	05 90       	lpm	r0, Z+
    84a0:	0d 92       	st	X+, r0
    84a2:	a2 30       	cpi	r26, 0x02	; 2
    84a4:	b1 07       	cpc	r27, r17
    84a6:	d9 f7       	brne	.-10     	; 0x849e <__do_copy_data+0xc>

000084a8 <__do_clear_bss>:
    84a8:	29 e0       	ldi	r18, 0x09	; 9
    84aa:	a2 e0       	ldi	r26, 0x02	; 2
    84ac:	b1 e0       	ldi	r27, 0x01	; 1
    84ae:	01 c0       	rjmp	.+2      	; 0x84b2 <.do_clear_bss_start>

000084b0 <.do_clear_bss_loop>:
    84b0:	1d 92       	st	X+, r1

000084b2 <.do_clear_bss_start>:
    84b2:	aa 3e       	cpi	r26, 0xEA	; 234
    84b4:	b2 07       	cpc	r27, r18
    84b6:	e1 f7       	brne	.-8      	; 0x84b0 <.do_clear_bss_loop>

000084b8 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    84b8:	14 be       	out	0x34, r1	; 52
    84ba:	0f b6       	in	r0, 0x3f	; 63
    84bc:	f8 94       	cli
    84be:	a8 95       	wdr
    84c0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    84c4:	88 61       	ori	r24, 0x18	; 24
    84c6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    84ca:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    84ce:	0f be       	out	0x3f, r0	; 63

000084d0 <Initialize>:
    84d0:	f8 94       	cli
    84d2:	80 e7       	ldi	r24, 0x70	; 112
    84d4:	90 e0       	ldi	r25, 0x00	; 0
    84d6:	42 ea       	ldi	r20, 0xA2	; 162
    84d8:	50 e0       	ldi	r21, 0x00	; 0
    84da:	fc 01       	movw	r30, r24
    84dc:	25 91       	lpm	r18, Z+
    84de:	34 91       	lpm	r19, Z
    84e0:	f9 01       	movw	r30, r18
    84e2:	ff 27       	eor	r31, r31
    84e4:	30 83       	st	Z, r19
    84e6:	02 96       	adiw	r24, 0x02	; 2
    84e8:	48 17       	cp	r20, r24
    84ea:	59 07       	cpc	r21, r25
    84ec:	b1 f7       	brne	.-20     	; 0x84da <Initialize+0xa>
    84ee:	0e 94 60 48 	call	0x90c0	; 0x90c0 <isEepromFormatted>
    84f2:	81 11       	cpse	r24, r1
    84f4:	02 c0       	rjmp	.+4      	; 0x84fa <Initialize+0x2a>
    84f6:	0e 94 3e 48 	call	0x907c	; 0x907c <FormatEeprom>
    84fa:	81 e0       	ldi	r24, 0x01	; 1
    84fc:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
    8500:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_barrel_hi>
    8504:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    8508:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <mixer>
    850c:	10 92 7c 08 	sts	0x087C, r1	; 0x80087c <tr2_vol>
    8510:	10 92 82 08 	sts	0x0882, r1	; 0x800882 <tr3_vol>
    8514:	10 92 88 08 	sts	0x0888, r1	; 0x800888 <tr4_vol>
    8518:	10 92 8e 08 	sts	0x088E, r1	; 0x80088e <tr5_vol>
    851c:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <sync_phase>
    8520:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_flags>
    8524:	92 e1       	ldi	r25, 0x12	; 18
    8526:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <sync_pulse>
    852a:	90 ee       	ldi	r25, 0xE0	; 224
    852c:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <render_lines_count>
    8530:	98 e1       	ldi	r25, 0x18	; 24
    8532:	90 93 67 08 	sts	0x0867, r25	; 0x800867 <first_render_line>
    8536:	10 92 6c 08 	sts	0x086C, r1	; 0x80086c <joypad1_status_hi+0x1>
    853a:	10 92 6b 08 	sts	0x086B, r1	; 0x80086b <joypad1_status_hi>
    853e:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <joypad2_status_hi+0x1>
    8542:	10 92 6f 08 	sts	0x086F, r1	; 0x80086f <joypad2_status_hi>
    8546:	80 93 75 08 	sts	0x0875, r24	; 0x800875 <sound_enabled>
    854a:	0e 94 2e 54 	call	0xa85c	; 0xa85c <InitializeVideoMode>
    854e:	78 94       	sei
    8550:	0e 94 98 54 	call	0xa930	; 0xa930 <DisplayLogo>
    8554:	0e 94 e3 6b 	call	0xd7c6	; 0xd7c6 <main>
    8558:	0c 94 ea 6d 	jmp	0xdbd4	; 0xdbd4 <_exit>

0000855c <__bad_interrupt>:
    855c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00008560 <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    8560:	03 e8       	ldi	r16, 0x83	; 131
    8562:	0a 95       	dec	r16
    8564:	f1 f7       	brne	.-4      	; 0x8562 <sub_video_mode3+0x2>
    8566:	00 c0       	rjmp	.+0      	; 0x8568 <sub_video_mode3+0x8>
    8568:	00 91 4c 08 	lds	r16, 0x084C	; 0x80084c <user_ram_tiles_c>
    856c:	ea ef       	ldi	r30, 0xFA	; 250
    856e:	f7 e0       	ldi	r31, 0x07	; 7
    8570:	23 e0       	ldi	r18, 0x03	; 3
    8572:	02 9f       	mul	r16, r18
    8574:	e0 0d       	add	r30, r0
    8576:	f1 1d       	adc	r31, r1
    8578:	20 91 4b 08 	lds	r18, 0x084B	; 0x80084b <free_tile_index>
    857c:	3c e3       	ldi	r19, 0x3C	; 60
    857e:	32 1b       	sub	r19, r18
    8580:	30 0f       	add	r19, r16
    8582:	20 17       	cp	r18, r16
    8584:	51 f0       	breq	.+20     	; 0x859a <no_ramtiles>
    8586:	00 00       	nop
	...

0000858a <upd_loop>:
    858a:	a1 91       	ld	r26, Z+
    858c:	b1 91       	ld	r27, Z+
    858e:	1c 91       	ld	r17, X
    8590:	11 93       	st	Z+, r17
    8592:	0c 93       	st	X, r16
    8594:	03 95       	inc	r16
    8596:	02 17       	cp	r16, r18
    8598:	c0 f3       	brcs	.-16     	; 0x858a <upd_loop>

0000859a <no_ramtiles>:
    859a:	13 e0       	ldi	r17, 0x03	; 3
    859c:	1a 95       	dec	r17
    859e:	f1 f7       	brne	.-4      	; 0x859c <no_ramtiles+0x2>
    85a0:	00 c0       	rjmp	.+0      	; 0x85a2 <no_ramtiles+0x8>
    85a2:	3a 95       	dec	r19
    85a4:	d1 f7       	brne	.-12     	; 0x859a <no_ramtiles>
    85a6:	c0 e0       	ldi	r28, 0x00	; 0
    85a8:	da e0       	ldi	r29, 0x0A	; 10
    85aa:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    85ae:	92 2f       	mov	r25, r18
    85b0:	28 7f       	andi	r18, 0xF8	; 248
    85b2:	c2 0f       	add	r28, r18
    85b4:	6e 01       	movw	r12, r28
    85b6:	00 91 5d 08 	lds	r16, 0x085D	; 0x80085d <screen_scrollY>
    85ba:	60 2f       	mov	r22, r16
    85bc:	06 95       	lsr	r16
    85be:	06 95       	lsr	r16
    85c0:	06 95       	lsr	r16
    85c2:	10 91 5e 08 	lds	r17, 0x085E	; 0x80085e <screen_scrollHeight>
    85c6:	10 1b       	sub	r17, r16
    85c8:	f1 2e       	mov	r15, r17
    85ca:	10 2f       	mov	r17, r16
    85cc:	06 95       	lsr	r16
    85ce:	06 95       	lsr	r16
    85d0:	06 95       	lsr	r16
    85d2:	d0 0f       	add	r29, r16
    85d4:	17 70       	andi	r17, 0x07	; 7
    85d6:	c1 0f       	add	r28, r17
    85d8:	67 70       	andi	r22, 0x07	; 7
    85da:	40 91 5a 08 	lds	r20, 0x085A	; 0x80085a <overlay_tile_table>
    85de:	50 91 5b 08 	lds	r21, 0x085B	; 0x80085b <overlay_tile_table+0x1>
    85e2:	60 90 56 08 	lds	r6, 0x0856	; 0x800856 <tile_table_lo>
    85e6:	70 90 57 08 	lds	r7, 0x0857	; 0x800857 <tile_table_hi>
    85ea:	d3 01       	movw	r26, r6
    85ec:	5e 01       	movw	r10, r28
    85ee:	76 2f       	mov	r23, r22
    85f0:	8f 2d       	mov	r24, r15
    85f2:	99 2e       	mov	r9, r25
    85f4:	00 91 5e 08 	lds	r16, 0x085E	; 0x80085e <screen_scrollHeight>
    85f8:	20 2f       	mov	r18, r16
    85fa:	06 95       	lsr	r16
    85fc:	06 95       	lsr	r16
    85fe:	06 95       	lsr	r16
    8600:	03 95       	inc	r16
    8602:	27 70       	andi	r18, 0x07	; 7
    8604:	30 91 59 08 	lds	r19, 0x0859	; 0x800859 <Screen>
    8608:	30 30       	cpi	r19, 0x00	; 0
    860a:	0f b6       	in	r0, 0x3f	; 63
    860c:	01 fe       	sbrs	r0, 1
    860e:	66 27       	eor	r22, r22
    8610:	01 fe       	sbrs	r0, 1
    8612:	c2 2f       	mov	r28, r18
    8614:	01 fe       	sbrs	r0, 1
    8616:	d0 2f       	mov	r29, r16
    8618:	01 fe       	sbrs	r0, 1
    861a:	8f ef       	ldi	r24, 0xFF	; 255
    861c:	01 fe       	sbrs	r0, 1
    861e:	99 24       	eor	r9, r9
    8620:	01 fe       	sbrs	r0, 1
    8622:	da 01       	movw	r26, r20
    8624:	80 90 68 08 	lds	r8, 0x0868	; 0x800868 <render_lines_count>
    8628:	07 e0       	ldi	r16, 0x07	; 7
    862a:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    862e:	01 e0       	ldi	r16, 0x01	; 1
    8630:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    8634:	01 e0       	ldi	r16, 0x01	; 1
    8636:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

0000863a <next_tile_line>:
    863a:	08 e0       	ldi	r16, 0x08	; 8
    863c:	60 9f       	mul	r22, r16
    863e:	8d 01       	movw	r16, r26
    8640:	00 5c       	subi	r16, 0xC0	; 192
    8642:	16 40       	sbci	r17, 0x06	; 6
    8644:	00 0d       	add	r16, r0
    8646:	11 1d       	adc	r17, r1
    8648:	18 01       	movw	r2, r16
    864a:	0a e3       	ldi	r16, 0x3A	; 58
    864c:	11 e0       	ldi	r17, 0x01	; 1
    864e:	00 0d       	add	r16, r0
    8650:	11 1d       	adc	r17, r1
    8652:	28 01       	movw	r4, r16
    8654:	00 e4       	ldi	r16, 0x40	; 64
    8656:	e0 2e       	mov	r14, r16
    8658:	03 e9       	ldi	r16, 0x93	; 147
    865a:	1a ef       	ldi	r17, 0xFA	; 250
    865c:	cf 93       	push	r28
    865e:	df 93       	push	r29
    8660:	58 81       	ld	r21, Y
    8662:	c8 5f       	subi	r28, 0xF8	; 248
    8664:	48 81       	ld	r20, Y
    8666:	c8 5f       	subi	r28, 0xF8	; 248
    8668:	a5 d3       	rcall	.+1866   	; 0x8db4 <hsync_pulse>
    866a:	2c e0       	ldi	r18, 0x0C	; 12
    866c:	2a 95       	dec	r18
    866e:	f1 f7       	brne	.-4      	; 0x866c <next_tile_line+0x32>
    8670:	20 e1       	ldi	r18, 0x10	; 16
    8672:	2a 95       	dec	r18
    8674:	f1 f7       	brne	.-4      	; 0x8672 <next_tile_line+0x38>
    8676:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    867a:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    867e:	78 94       	sei
    8680:	00 27       	eor	r16, r16
    8682:	5e 9d       	mul	r21, r14
    8684:	5b 31       	cpi	r21, 0x1B	; 27
    8686:	f1 01       	movw	r30, r2
    8688:	08 f4       	brcc	.+2      	; 0x868c <next_tile_line+0x52>
    868a:	f2 01       	movw	r30, r4
    868c:	00 1f       	adc	r16, r16
    868e:	e0 0d       	add	r30, r0
    8690:	f1 1d       	adc	r31, r1
    8692:	29 2d       	mov	r18, r9
    8694:	27 70       	andi	r18, 0x07	; 7
    8696:	11 24       	eor	r1, r1
    8698:	e2 0f       	add	r30, r18
    869a:	f1 1d       	adc	r31, r1
    869c:	4e 9d       	mul	r20, r14
    869e:	4b 31       	cpi	r20, 0x1B	; 27
    86a0:	a1 01       	movw	r20, r2
    86a2:	08 f4       	brcc	.+2      	; 0x86a6 <next_tile_line+0x6c>
    86a4:	a2 01       	movw	r20, r4
    86a6:	00 1f       	adc	r16, r16
    86a8:	40 0d       	add	r20, r0
    86aa:	51 1d       	adc	r21, r1
    86ac:	1a e1       	ldi	r17, 0x1A	; 26
    86ae:	01 9f       	mul	r16, r17
    86b0:	00 2d       	mov	r16, r0
    86b2:	13 e0       	ldi	r17, 0x03	; 3
    86b4:	21 9f       	mul	r18, r17
    86b6:	11 27       	eor	r17, r17
    86b8:	03 55       	subi	r16, 0x53	; 83
    86ba:	1c 4b       	sbci	r17, 0xBC	; 188
    86bc:	00 0e       	add	r0, r16
    86be:	11 1e       	adc	r1, r17
    86c0:	11 27       	eor	r17, r17
    86c2:	0f 92       	push	r0
    86c4:	1f 92       	push	r1
    86c6:	08 95       	ret

000086c8 <__vector_15>:
    86c8:	18 b9       	out	0x08, r17	; 8
    86ca:	0f 90       	pop	r0
    86cc:	0f 90       	pop	r0
    86ce:	df 91       	pop	r29
    86d0:	cf 91       	pop	r28
    86d2:	03 e1       	ldi	r16, 0x13	; 19
    86d4:	0a 95       	dec	r16
    86d6:	f1 f7       	brne	.-4      	; 0x86d4 <__vector_15+0xc>
    86d8:	00 c0       	rjmp	.+0      	; 0x86da <__vector_15+0x12>
    86da:	63 95       	inc	r22
    86dc:	8a 94       	dec	r8
    86de:	f9 f0       	breq	.+62     	; 0x871e <text_frame_end>
    86e0:	68 30       	cpi	r22, 0x08	; 8
    86e2:	29 f0       	breq	.+10     	; 0x86ee <next_tile_row>
    86e4:	07 e0       	ldi	r16, 0x07	; 7
    86e6:	0a 95       	dec	r16
    86e8:	f1 f7       	brne	.-4      	; 0x86e6 <__vector_15+0x1e>
    86ea:	00 c0       	rjmp	.+0      	; 0x86ec <__vector_15+0x24>
    86ec:	a6 cf       	rjmp	.-180    	; 0x863a <next_tile_line>

000086ee <next_tile_row>:
    86ee:	66 27       	eor	r22, r22
    86f0:	0c 2f       	mov	r16, r28
    86f2:	07 70       	andi	r16, 0x07	; 7
    86f4:	07 30       	cpi	r16, 0x07	; 7
    86f6:	11 f0       	breq	.+4      	; 0x86fc <next_tile_row+0xe>
    86f8:	c3 95       	inc	r28
    86fa:	02 c0       	rjmp	.+4      	; 0x8700 <next_tile_row+0x12>
    86fc:	c8 7f       	andi	r28, 0xF8	; 248
    86fe:	d3 95       	inc	r29
    8700:	8a 95       	dec	r24
    8702:	09 f4       	brne	.+2      	; 0x8706 <next_tile_row+0x18>
    8704:	e6 01       	movw	r28, r12
    8706:	3a 95       	dec	r19
    8708:	09 f4       	brne	.+2      	; 0x870c <next_tile_row+0x1e>
    870a:	67 2f       	mov	r22, r23
    870c:	09 f4       	brne	.+2      	; 0x8710 <next_tile_row+0x22>
    870e:	e5 01       	movw	r28, r10
    8710:	09 f4       	brne	.+2      	; 0x8714 <next_tile_row+0x26>
    8712:	8f 2d       	mov	r24, r15
    8714:	09 f4       	brne	.+2      	; 0x8718 <next_tile_row+0x2a>
    8716:	99 2e       	mov	r9, r25
    8718:	09 f4       	brne	.+2      	; 0x871c <next_tile_row+0x2e>
    871a:	d3 01       	movw	r26, r6
    871c:	8e cf       	rjmp	.-228    	; 0x863a <next_tile_line>

0000871e <text_frame_end>:
    871e:	20 e1       	ldi	r18, 0x10	; 16
    8720:	2a 95       	dec	r18
    8722:	f1 f7       	brne	.-4      	; 0x8720 <text_frame_end+0x2>
    8724:	00 e0       	ldi	r16, 0x00	; 0
    8726:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    872a:	0c e2       	ldi	r16, 0x2C	; 44
    872c:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8730:	41 d3       	rcall	.+1666   	; 0x8db4 <hsync_pulse>
    8732:	11 24       	eor	r1, r1
    8734:	0e 94 7f 45 	call	0x8afe	; 0x8afe <RestoreBackground>
    8738:	e0 91 62 08 	lds	r30, 0x0862	; 0x800862 <sync_flags>
    873c:	42 e0       	ldi	r20, 0x02	; 2
    873e:	e1 60       	ori	r30, 0x01	; 1
    8740:	e4 27       	eor	r30, r20
    8742:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_flags>
    8746:	07 e0       	ldi	r16, 0x07	; 7
    8748:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    874c:	09 e0       	ldi	r16, 0x09	; 9
    874e:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    8752:	02 e0       	ldi	r16, 0x02	; 2
    8754:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8758:	08 95       	ret

0000875a <romrom_e>:
    875a:	00 c0       	rjmp	.+0      	; 0x875c <romrom_e+0x2>
    875c:	05 91       	lpm	r16, Z+
    875e:	08 b9       	out	0x08, r16	; 8
    8760:	00 c0       	rjmp	.+0      	; 0x8762 <romrom_e+0x8>
    8762:	05 91       	lpm	r16, Z+
    8764:	08 b9       	out	0x08, r16	; 8
    8766:	00 c0       	rjmp	.+0      	; 0x8768 <romrom_e+0xe>
    8768:	05 91       	lpm	r16, Z+
    876a:	08 b9       	out	0x08, r16	; 8
    876c:	00 c0       	rjmp	.+0      	; 0x876e <romrom_e+0x14>
    876e:	05 91       	lpm	r16, Z+
    8770:	08 b9       	out	0x08, r16	; 8
    8772:	00 c0       	rjmp	.+0      	; 0x8774 <romrom_e+0x1a>
    8774:	05 91       	lpm	r16, Z+
    8776:	08 b9       	out	0x08, r16	; 8
    8778:	00 c0       	rjmp	.+0      	; 0x877a <romrom_e+0x20>
    877a:	05 91       	lpm	r16, Z+
    877c:	08 b9       	out	0x08, r16	; 8
    877e:	00 c0       	rjmp	.+0      	; 0x8780 <romrom_e+0x26>
    8780:	05 91       	lpm	r16, Z+
    8782:	08 b9       	out	0x08, r16	; 8
    8784:	00 00       	nop
    8786:	05 91       	lpm	r16, Z+
    8788:	fa 01       	movw	r30, r20
    878a:	08 b9       	out	0x08, r16	; 8
    878c:	56 c0       	rjmp	.+172    	; 0x883a <romloop_px0>

0000878e <romram_e>:
    878e:	00 c0       	rjmp	.+0      	; 0x8790 <romram_e+0x2>
    8790:	05 91       	lpm	r16, Z+
    8792:	08 b9       	out	0x08, r16	; 8
    8794:	00 c0       	rjmp	.+0      	; 0x8796 <romram_e+0x8>
    8796:	05 91       	lpm	r16, Z+
    8798:	08 b9       	out	0x08, r16	; 8
    879a:	00 c0       	rjmp	.+0      	; 0x879c <romram_e+0xe>
    879c:	05 91       	lpm	r16, Z+
    879e:	08 b9       	out	0x08, r16	; 8
    87a0:	00 c0       	rjmp	.+0      	; 0x87a2 <romram_e+0x14>
    87a2:	05 91       	lpm	r16, Z+
    87a4:	08 b9       	out	0x08, r16	; 8
    87a6:	00 c0       	rjmp	.+0      	; 0x87a8 <romram_e+0x1a>
    87a8:	05 91       	lpm	r16, Z+
    87aa:	08 b9       	out	0x08, r16	; 8
    87ac:	00 c0       	rjmp	.+0      	; 0x87ae <romram_e+0x20>
    87ae:	05 91       	lpm	r16, Z+
    87b0:	08 b9       	out	0x08, r16	; 8
    87b2:	00 c0       	rjmp	.+0      	; 0x87b4 <romram_e+0x26>
    87b4:	05 91       	lpm	r16, Z+
    87b6:	08 b9       	out	0x08, r16	; 8
    87b8:	00 00       	nop
    87ba:	05 91       	lpm	r16, Z+
    87bc:	fa 01       	movw	r30, r20
    87be:	08 b9       	out	0x08, r16	; 8
    87c0:	59 c0       	rjmp	.+178    	; 0x8874 <ramloop_px0>

000087c2 <ramrom_e>:
    87c2:	04 91       	lpm	r16, Z
    87c4:	01 91       	ld	r16, Z+
    87c6:	08 b9       	out	0x08, r16	; 8
    87c8:	04 91       	lpm	r16, Z
    87ca:	01 91       	ld	r16, Z+
    87cc:	08 b9       	out	0x08, r16	; 8
    87ce:	04 91       	lpm	r16, Z
    87d0:	01 91       	ld	r16, Z+
    87d2:	08 b9       	out	0x08, r16	; 8
    87d4:	04 91       	lpm	r16, Z
    87d6:	01 91       	ld	r16, Z+
    87d8:	08 b9       	out	0x08, r16	; 8
    87da:	04 91       	lpm	r16, Z
    87dc:	01 91       	ld	r16, Z+
    87de:	08 b9       	out	0x08, r16	; 8
    87e0:	04 91       	lpm	r16, Z
    87e2:	01 91       	ld	r16, Z+
    87e4:	08 b9       	out	0x08, r16	; 8
    87e6:	04 91       	lpm	r16, Z
    87e8:	01 91       	ld	r16, Z+
    87ea:	08 b9       	out	0x08, r16	; 8
    87ec:	00 c0       	rjmp	.+0      	; 0x87ee <ramrom_e+0x2c>
    87ee:	01 91       	ld	r16, Z+
    87f0:	fa 01       	movw	r30, r20
    87f2:	08 b9       	out	0x08, r16	; 8
    87f4:	22 c0       	rjmp	.+68     	; 0x883a <romloop_px0>

000087f6 <ramram_e>:
    87f6:	04 91       	lpm	r16, Z
    87f8:	01 91       	ld	r16, Z+
    87fa:	08 b9       	out	0x08, r16	; 8
    87fc:	04 91       	lpm	r16, Z
    87fe:	01 91       	ld	r16, Z+
    8800:	08 b9       	out	0x08, r16	; 8
    8802:	04 91       	lpm	r16, Z
    8804:	01 91       	ld	r16, Z+
    8806:	08 b9       	out	0x08, r16	; 8
    8808:	04 91       	lpm	r16, Z
    880a:	01 91       	ld	r16, Z+
    880c:	08 b9       	out	0x08, r16	; 8
    880e:	04 91       	lpm	r16, Z
    8810:	01 91       	ld	r16, Z+
    8812:	08 b9       	out	0x08, r16	; 8
    8814:	04 91       	lpm	r16, Z
    8816:	01 91       	ld	r16, Z+
    8818:	08 b9       	out	0x08, r16	; 8
    881a:	04 91       	lpm	r16, Z
    881c:	01 91       	ld	r16, Z+
    881e:	08 b9       	out	0x08, r16	; 8
    8820:	00 c0       	rjmp	.+0      	; 0x8822 <ramram_e+0x2c>
    8822:	01 91       	ld	r16, Z+
    8824:	fa 01       	movw	r30, r20
    8826:	08 b9       	out	0x08, r16	; 8
    8828:	25 c0       	rjmp	.+74     	; 0x8874 <ramloop_px0>

0000882a <romloop>:
    882a:	05 91       	lpm	r16, Z+
    882c:	08 b9       	out	0x08, r16	; 8
    882e:	02 0c       	add	r0, r2
    8830:	00 00       	nop
    8832:	05 91       	lpm	r16, Z+
    8834:	08 b9       	out	0x08, r16	; 8
    8836:	13 1c       	adc	r1, r3
    8838:	f0 01       	movw	r30, r0

0000883a <romloop_px0>:
    883a:	05 91       	lpm	r16, Z+
    883c:	08 b9       	out	0x08, r16	; 8
    883e:	00 c0       	rjmp	.+0      	; 0x8840 <romloop_px0+0x6>
    8840:	05 91       	lpm	r16, Z+
    8842:	08 b9       	out	0x08, r16	; 8
    8844:	48 81       	ld	r20, Y
    8846:	05 91       	lpm	r16, Z+
    8848:	08 b9       	out	0x08, r16	; 8
    884a:	c8 5f       	subi	r28, 0xF8	; 248
    884c:	00 00       	nop
    884e:	05 91       	lpm	r16, Z+
    8850:	08 b9       	out	0x08, r16	; 8
    8852:	4e 9d       	mul	r20, r14
    8854:	05 91       	lpm	r16, Z+
    8856:	08 b9       	out	0x08, r16	; 8
    8858:	4b 31       	cpi	r20, 0x1B	; 27
    885a:	00 00       	nop
    885c:	05 91       	lpm	r16, Z+
    885e:	08 b9       	out	0x08, r16	; 8
    8860:	20 f7       	brcc	.-56     	; 0x882a <romloop>
    8862:	00 00       	nop
    8864:	05 91       	lpm	r16, Z+
    8866:	08 b9       	out	0x08, r16	; 8
    8868:	04 0c       	add	r0, r4
    886a:	00 00       	nop
    886c:	05 91       	lpm	r16, Z+
    886e:	08 b9       	out	0x08, r16	; 8
    8870:	15 1c       	adc	r1, r5
    8872:	f0 01       	movw	r30, r0

00008874 <ramloop_px0>:
    8874:	00 00       	nop
    8876:	01 91       	ld	r16, Z+
    8878:	08 b9       	out	0x08, r16	; 8
    887a:	48 81       	ld	r20, Y
    887c:	00 00       	nop
    887e:	01 91       	ld	r16, Z+
    8880:	08 b9       	out	0x08, r16	; 8
    8882:	c8 5f       	subi	r28, 0xF8	; 248
    8884:	4e 9d       	mul	r20, r14
    8886:	01 91       	ld	r16, Z+
    8888:	08 b9       	out	0x08, r16	; 8
    888a:	04 91       	lpm	r16, Z
    888c:	01 91       	ld	r16, Z+
    888e:	08 b9       	out	0x08, r16	; 8
    8890:	04 91       	lpm	r16, Z
    8892:	01 91       	ld	r16, Z+
    8894:	08 b9       	out	0x08, r16	; 8
    8896:	4b 31       	cpi	r20, 0x1B	; 27
    8898:	00 c0       	rjmp	.+0      	; 0x889a <ramloop_px0+0x26>
    889a:	01 91       	ld	r16, Z+
    889c:	08 b9       	out	0x08, r16	; 8
    889e:	50 f4       	brcc	.+20     	; 0x88b4 <ramloop_tr>
    88a0:	00 00       	nop
    88a2:	04 0c       	add	r0, r4
    88a4:	01 91       	ld	r16, Z+
    88a6:	08 b9       	out	0x08, r16	; 8
    88a8:	15 1c       	adc	r1, r5
    88aa:	00 00       	nop
    88ac:	01 91       	ld	r16, Z+
    88ae:	f0 01       	movw	r30, r0
    88b0:	08 b9       	out	0x08, r16	; 8
    88b2:	e0 cf       	rjmp	.-64     	; 0x8874 <ramloop_px0>

000088b4 <ramloop_tr>:
    88b4:	02 0c       	add	r0, r2
    88b6:	01 91       	ld	r16, Z+
    88b8:	08 b9       	out	0x08, r16	; 8
    88ba:	13 1c       	adc	r1, r3
    88bc:	00 00       	nop
    88be:	01 91       	ld	r16, Z+
    88c0:	f0 01       	movw	r30, r0
    88c2:	08 b9       	out	0x08, r16	; 8
    88c4:	ba cf       	rjmp	.-140    	; 0x883a <romloop_px0>

000088c6 <CopyFlashTile>:
    88c6:	20 e4       	ldi	r18, 0x40	; 64
    88c8:	e0 91 56 08 	lds	r30, 0x0856	; 0x800856 <tile_table_lo>
    88cc:	f0 91 57 08 	lds	r31, 0x0857	; 0x800857 <tile_table_hi>
    88d0:	82 9f       	mul	r24, r18
    88d2:	e0 0d       	add	r30, r0
    88d4:	f1 1d       	adc	r31, r1
    88d6:	aa e3       	ldi	r26, 0x3A	; 58
    88d8:	b1 e0       	ldi	r27, 0x01	; 1
    88da:	62 9f       	mul	r22, r18
    88dc:	a0 0d       	add	r26, r0
    88de:	b1 1d       	adc	r27, r1
    88e0:	15 90       	lpm	r1, Z+
    88e2:	1d 92       	st	X+, r1
    88e4:	15 90       	lpm	r1, Z+
    88e6:	1d 92       	st	X+, r1
    88e8:	15 90       	lpm	r1, Z+
    88ea:	1d 92       	st	X+, r1
    88ec:	15 90       	lpm	r1, Z+
    88ee:	1d 92       	st	X+, r1
    88f0:	15 90       	lpm	r1, Z+
    88f2:	1d 92       	st	X+, r1
    88f4:	15 90       	lpm	r1, Z+
    88f6:	1d 92       	st	X+, r1
    88f8:	15 90       	lpm	r1, Z+
    88fa:	1d 92       	st	X+, r1
    88fc:	15 90       	lpm	r1, Z+
    88fe:	1d 92       	st	X+, r1
    8900:	15 90       	lpm	r1, Z+
    8902:	1d 92       	st	X+, r1
    8904:	15 90       	lpm	r1, Z+
    8906:	1d 92       	st	X+, r1
    8908:	15 90       	lpm	r1, Z+
    890a:	1d 92       	st	X+, r1
    890c:	15 90       	lpm	r1, Z+
    890e:	1d 92       	st	X+, r1
    8910:	15 90       	lpm	r1, Z+
    8912:	1d 92       	st	X+, r1
    8914:	15 90       	lpm	r1, Z+
    8916:	1d 92       	st	X+, r1
    8918:	15 90       	lpm	r1, Z+
    891a:	1d 92       	st	X+, r1
    891c:	15 90       	lpm	r1, Z+
    891e:	1d 92       	st	X+, r1
    8920:	15 90       	lpm	r1, Z+
    8922:	1d 92       	st	X+, r1
    8924:	15 90       	lpm	r1, Z+
    8926:	1d 92       	st	X+, r1
    8928:	15 90       	lpm	r1, Z+
    892a:	1d 92       	st	X+, r1
    892c:	15 90       	lpm	r1, Z+
    892e:	1d 92       	st	X+, r1
    8930:	15 90       	lpm	r1, Z+
    8932:	1d 92       	st	X+, r1
    8934:	15 90       	lpm	r1, Z+
    8936:	1d 92       	st	X+, r1
    8938:	15 90       	lpm	r1, Z+
    893a:	1d 92       	st	X+, r1
    893c:	15 90       	lpm	r1, Z+
    893e:	1d 92       	st	X+, r1
    8940:	15 90       	lpm	r1, Z+
    8942:	1d 92       	st	X+, r1
    8944:	15 90       	lpm	r1, Z+
    8946:	1d 92       	st	X+, r1
    8948:	15 90       	lpm	r1, Z+
    894a:	1d 92       	st	X+, r1
    894c:	15 90       	lpm	r1, Z+
    894e:	1d 92       	st	X+, r1
    8950:	15 90       	lpm	r1, Z+
    8952:	1d 92       	st	X+, r1
    8954:	15 90       	lpm	r1, Z+
    8956:	1d 92       	st	X+, r1
    8958:	15 90       	lpm	r1, Z+
    895a:	1d 92       	st	X+, r1
    895c:	15 90       	lpm	r1, Z+
    895e:	1d 92       	st	X+, r1
    8960:	15 90       	lpm	r1, Z+
    8962:	1d 92       	st	X+, r1
    8964:	15 90       	lpm	r1, Z+
    8966:	1d 92       	st	X+, r1
    8968:	15 90       	lpm	r1, Z+
    896a:	1d 92       	st	X+, r1
    896c:	15 90       	lpm	r1, Z+
    896e:	1d 92       	st	X+, r1
    8970:	15 90       	lpm	r1, Z+
    8972:	1d 92       	st	X+, r1
    8974:	15 90       	lpm	r1, Z+
    8976:	1d 92       	st	X+, r1
    8978:	15 90       	lpm	r1, Z+
    897a:	1d 92       	st	X+, r1
    897c:	15 90       	lpm	r1, Z+
    897e:	1d 92       	st	X+, r1
    8980:	15 90       	lpm	r1, Z+
    8982:	1d 92       	st	X+, r1
    8984:	15 90       	lpm	r1, Z+
    8986:	1d 92       	st	X+, r1
    8988:	15 90       	lpm	r1, Z+
    898a:	1d 92       	st	X+, r1
    898c:	15 90       	lpm	r1, Z+
    898e:	1d 92       	st	X+, r1
    8990:	15 90       	lpm	r1, Z+
    8992:	1d 92       	st	X+, r1
    8994:	15 90       	lpm	r1, Z+
    8996:	1d 92       	st	X+, r1
    8998:	15 90       	lpm	r1, Z+
    899a:	1d 92       	st	X+, r1
    899c:	15 90       	lpm	r1, Z+
    899e:	1d 92       	st	X+, r1
    89a0:	15 90       	lpm	r1, Z+
    89a2:	1d 92       	st	X+, r1
    89a4:	15 90       	lpm	r1, Z+
    89a6:	1d 92       	st	X+, r1
    89a8:	15 90       	lpm	r1, Z+
    89aa:	1d 92       	st	X+, r1
    89ac:	15 90       	lpm	r1, Z+
    89ae:	1d 92       	st	X+, r1
    89b0:	15 90       	lpm	r1, Z+
    89b2:	1d 92       	st	X+, r1
    89b4:	15 90       	lpm	r1, Z+
    89b6:	1d 92       	st	X+, r1
    89b8:	15 90       	lpm	r1, Z+
    89ba:	1d 92       	st	X+, r1
    89bc:	15 90       	lpm	r1, Z+
    89be:	1d 92       	st	X+, r1
    89c0:	15 90       	lpm	r1, Z+
    89c2:	1d 92       	st	X+, r1
    89c4:	15 90       	lpm	r1, Z+
    89c6:	1d 92       	st	X+, r1
    89c8:	15 90       	lpm	r1, Z+
    89ca:	1d 92       	st	X+, r1
    89cc:	15 90       	lpm	r1, Z+
    89ce:	1d 92       	st	X+, r1
    89d0:	15 90       	lpm	r1, Z+
    89d2:	1d 92       	st	X+, r1
    89d4:	15 90       	lpm	r1, Z+
    89d6:	1d 92       	st	X+, r1
    89d8:	15 90       	lpm	r1, Z+
    89da:	1d 92       	st	X+, r1
    89dc:	15 90       	lpm	r1, Z+
    89de:	1d 92       	st	X+, r1
    89e0:	11 24       	eor	r1, r1
    89e2:	08 95       	ret

000089e4 <CopyRamTile>:
    89e4:	20 e4       	ldi	r18, 0x40	; 64
    89e6:	ea e3       	ldi	r30, 0x3A	; 58
    89e8:	f1 e0       	ldi	r31, 0x01	; 1
    89ea:	82 9f       	mul	r24, r18
    89ec:	e0 0d       	add	r30, r0
    89ee:	f1 1d       	adc	r31, r1
    89f0:	aa e3       	ldi	r26, 0x3A	; 58
    89f2:	b1 e0       	ldi	r27, 0x01	; 1
    89f4:	62 9f       	mul	r22, r18
    89f6:	a0 0d       	add	r26, r0
    89f8:	b1 1d       	adc	r27, r1
    89fa:	11 90       	ld	r1, Z+
    89fc:	1d 92       	st	X+, r1
    89fe:	11 90       	ld	r1, Z+
    8a00:	1d 92       	st	X+, r1
    8a02:	11 90       	ld	r1, Z+
    8a04:	1d 92       	st	X+, r1
    8a06:	11 90       	ld	r1, Z+
    8a08:	1d 92       	st	X+, r1
    8a0a:	11 90       	ld	r1, Z+
    8a0c:	1d 92       	st	X+, r1
    8a0e:	11 90       	ld	r1, Z+
    8a10:	1d 92       	st	X+, r1
    8a12:	11 90       	ld	r1, Z+
    8a14:	1d 92       	st	X+, r1
    8a16:	11 90       	ld	r1, Z+
    8a18:	1d 92       	st	X+, r1
    8a1a:	11 90       	ld	r1, Z+
    8a1c:	1d 92       	st	X+, r1
    8a1e:	11 90       	ld	r1, Z+
    8a20:	1d 92       	st	X+, r1
    8a22:	11 90       	ld	r1, Z+
    8a24:	1d 92       	st	X+, r1
    8a26:	11 90       	ld	r1, Z+
    8a28:	1d 92       	st	X+, r1
    8a2a:	11 90       	ld	r1, Z+
    8a2c:	1d 92       	st	X+, r1
    8a2e:	11 90       	ld	r1, Z+
    8a30:	1d 92       	st	X+, r1
    8a32:	11 90       	ld	r1, Z+
    8a34:	1d 92       	st	X+, r1
    8a36:	11 90       	ld	r1, Z+
    8a38:	1d 92       	st	X+, r1
    8a3a:	11 90       	ld	r1, Z+
    8a3c:	1d 92       	st	X+, r1
    8a3e:	11 90       	ld	r1, Z+
    8a40:	1d 92       	st	X+, r1
    8a42:	11 90       	ld	r1, Z+
    8a44:	1d 92       	st	X+, r1
    8a46:	11 90       	ld	r1, Z+
    8a48:	1d 92       	st	X+, r1
    8a4a:	11 90       	ld	r1, Z+
    8a4c:	1d 92       	st	X+, r1
    8a4e:	11 90       	ld	r1, Z+
    8a50:	1d 92       	st	X+, r1
    8a52:	11 90       	ld	r1, Z+
    8a54:	1d 92       	st	X+, r1
    8a56:	11 90       	ld	r1, Z+
    8a58:	1d 92       	st	X+, r1
    8a5a:	11 90       	ld	r1, Z+
    8a5c:	1d 92       	st	X+, r1
    8a5e:	11 90       	ld	r1, Z+
    8a60:	1d 92       	st	X+, r1
    8a62:	11 90       	ld	r1, Z+
    8a64:	1d 92       	st	X+, r1
    8a66:	11 90       	ld	r1, Z+
    8a68:	1d 92       	st	X+, r1
    8a6a:	11 90       	ld	r1, Z+
    8a6c:	1d 92       	st	X+, r1
    8a6e:	11 90       	ld	r1, Z+
    8a70:	1d 92       	st	X+, r1
    8a72:	11 90       	ld	r1, Z+
    8a74:	1d 92       	st	X+, r1
    8a76:	11 90       	ld	r1, Z+
    8a78:	1d 92       	st	X+, r1
    8a7a:	11 90       	ld	r1, Z+
    8a7c:	1d 92       	st	X+, r1
    8a7e:	11 90       	ld	r1, Z+
    8a80:	1d 92       	st	X+, r1
    8a82:	11 90       	ld	r1, Z+
    8a84:	1d 92       	st	X+, r1
    8a86:	11 90       	ld	r1, Z+
    8a88:	1d 92       	st	X+, r1
    8a8a:	11 90       	ld	r1, Z+
    8a8c:	1d 92       	st	X+, r1
    8a8e:	11 90       	ld	r1, Z+
    8a90:	1d 92       	st	X+, r1
    8a92:	11 90       	ld	r1, Z+
    8a94:	1d 92       	st	X+, r1
    8a96:	11 90       	ld	r1, Z+
    8a98:	1d 92       	st	X+, r1
    8a9a:	11 90       	ld	r1, Z+
    8a9c:	1d 92       	st	X+, r1
    8a9e:	11 90       	ld	r1, Z+
    8aa0:	1d 92       	st	X+, r1
    8aa2:	11 90       	ld	r1, Z+
    8aa4:	1d 92       	st	X+, r1
    8aa6:	11 90       	ld	r1, Z+
    8aa8:	1d 92       	st	X+, r1
    8aaa:	11 90       	ld	r1, Z+
    8aac:	1d 92       	st	X+, r1
    8aae:	11 90       	ld	r1, Z+
    8ab0:	1d 92       	st	X+, r1
    8ab2:	11 90       	ld	r1, Z+
    8ab4:	1d 92       	st	X+, r1
    8ab6:	11 90       	ld	r1, Z+
    8ab8:	1d 92       	st	X+, r1
    8aba:	11 90       	ld	r1, Z+
    8abc:	1d 92       	st	X+, r1
    8abe:	11 90       	ld	r1, Z+
    8ac0:	1d 92       	st	X+, r1
    8ac2:	11 90       	ld	r1, Z+
    8ac4:	1d 92       	st	X+, r1
    8ac6:	11 90       	ld	r1, Z+
    8ac8:	1d 92       	st	X+, r1
    8aca:	11 90       	ld	r1, Z+
    8acc:	1d 92       	st	X+, r1
    8ace:	11 90       	ld	r1, Z+
    8ad0:	1d 92       	st	X+, r1
    8ad2:	11 90       	ld	r1, Z+
    8ad4:	1d 92       	st	X+, r1
    8ad6:	11 90       	ld	r1, Z+
    8ad8:	1d 92       	st	X+, r1
    8ada:	11 90       	ld	r1, Z+
    8adc:	1d 92       	st	X+, r1
    8ade:	11 90       	ld	r1, Z+
    8ae0:	1d 92       	st	X+, r1
    8ae2:	11 90       	ld	r1, Z+
    8ae4:	1d 92       	st	X+, r1
    8ae6:	11 90       	ld	r1, Z+
    8ae8:	1d 92       	st	X+, r1
    8aea:	11 90       	ld	r1, Z+
    8aec:	1d 92       	st	X+, r1
    8aee:	11 90       	ld	r1, Z+
    8af0:	1d 92       	st	X+, r1
    8af2:	11 90       	ld	r1, Z+
    8af4:	1d 92       	st	X+, r1
    8af6:	11 90       	ld	r1, Z+
    8af8:	1d 92       	st	X+, r1
    8afa:	11 24       	eor	r1, r1
    8afc:	08 95       	ret

00008afe <RestoreBackground>:
    8afe:	e0 91 4c 08 	lds	r30, 0x084C	; 0x80084c <user_ram_tiles_c>
    8b02:	8e 2f       	mov	r24, r30
    8b04:	ee 0f       	add	r30, r30
    8b06:	e8 0f       	add	r30, r24
    8b08:	ff 27       	eor	r31, r31
    8b0a:	e6 50       	subi	r30, 0x06	; 6
    8b0c:	f8 4f       	sbci	r31, 0xF8	; 248
    8b0e:	00 90 4b 08 	lds	r0, 0x084B	; 0x80084b <free_tile_index>
    8b12:	80 19       	sub	r24, r0
    8b14:	30 f4       	brcc	.+12     	; 0x8b22 <rbg_exit>

00008b16 <rbg_loop>:
    8b16:	a1 91       	ld	r26, Z+
    8b18:	b1 91       	ld	r27, Z+
    8b1a:	01 90       	ld	r0, Z+
    8b1c:	0c 92       	st	X, r0
    8b1e:	83 95       	inc	r24
    8b20:	d1 f7       	brne	.-12     	; 0x8b16 <rbg_loop>

00008b22 <rbg_exit>:
    8b22:	08 95       	ret

00008b24 <BlitSpritePart>:
    8b24:	98 e0       	ldi	r25, 0x08	; 8
    8b26:	79 9f       	mul	r23, r25
    8b28:	a1 2d       	mov	r26, r1
    8b2a:	bb 27       	eor	r27, r27
    8b2c:	a2 5b       	subi	r26, 0xB2	; 178
    8b2e:	b7 4f       	sbci	r27, 0xF7	; 247
    8b30:	ed 91       	ld	r30, X+
    8b32:	fd 91       	ld	r31, X+

00008b34 <bsp_send>:
    8b34:	90 e4       	ldi	r25, 0x40	; 64
    8b36:	69 9f       	mul	r22, r25
    8b38:	e0 0d       	add	r30, r0
    8b3a:	f1 1d       	adc	r31, r1
    8b3c:	89 9f       	mul	r24, r25
    8b3e:	d0 01       	movw	r26, r0
    8b40:	a6 5c       	subi	r26, 0xC6	; 198
    8b42:	be 4f       	sbci	r27, 0xFE	; 254
    8b44:	90 e0       	ldi	r25, 0x00	; 0
    8b46:	40 fd       	sbrc	r20, 0
    8b48:	09 c0       	rjmp	.+18     	; 0x8b5c <x_2nd_tile>
    8b4a:	82 2f       	mov	r24, r18
    8b4c:	48 e0       	ldi	r20, 0x08	; 8
    8b4e:	42 1b       	sub	r20, r18
    8b50:	70 ff       	sbrs	r23, 0
    8b52:	0a c0       	rjmp	.+20     	; 0x8b68 <x_1st_tile_nxf>
    8b54:	17 96       	adiw	r26, 0x07	; 7

00008b56 <x_2nd_tile_nxf>:
    8b56:	e8 0f       	add	r30, r24
    8b58:	f9 1f       	adc	r31, r25
    8b5a:	08 c0       	rjmp	.+16     	; 0x8b6c <x_check_end>

00008b5c <x_2nd_tile>:
    8b5c:	88 e0       	ldi	r24, 0x08	; 8
    8b5e:	82 1b       	sub	r24, r18
    8b60:	42 2f       	mov	r20, r18
    8b62:	70 ff       	sbrs	r23, 0
    8b64:	f8 cf       	rjmp	.-16     	; 0x8b56 <x_2nd_tile_nxf>
    8b66:	11 97       	sbiw	r26, 0x01	; 1

00008b68 <x_1st_tile_nxf>:
    8b68:	a2 0f       	add	r26, r18
    8b6a:	b9 1f       	adc	r27, r25

00008b6c <x_check_end>:
    8b6c:	68 e0       	ldi	r22, 0x08	; 8
    8b6e:	28 e0       	ldi	r18, 0x08	; 8
    8b70:	23 1b       	sub	r18, r19
    8b72:	50 fd       	sbrc	r21, 0
    8b74:	09 c0       	rjmp	.+18     	; 0x8b88 <y_2nd_tile>
    8b76:	63 9f       	mul	r22, r19
    8b78:	a0 0d       	add	r26, r0
    8b7a:	b1 1d       	adc	r27, r1
    8b7c:	71 fd       	sbrc	r23, 1
    8b7e:	e8 5c       	subi	r30, 0xC8	; 200
    8b80:	71 fd       	sbrc	r23, 1
    8b82:	ff 4f       	sbci	r31, 0xFF	; 255
    8b84:	12 2e       	mov	r1, r18
    8b86:	08 c0       	rjmp	.+16     	; 0x8b98 <y_check_end>

00008b88 <y_2nd_tile>:
    8b88:	13 2e       	mov	r1, r19
    8b8a:	1a 94       	dec	r1
    8b8c:	71 ff       	sbrs	r23, 1
    8b8e:	12 2e       	mov	r1, r18
    8b90:	61 9d       	mul	r22, r1
    8b92:	e0 0d       	add	r30, r0
    8b94:	f1 1d       	adc	r31, r1
    8b96:	13 2e       	mov	r1, r19

00008b98 <y_check_end>:
    8b98:	71 fd       	sbrc	r23, 1
    8b9a:	40 97       	sbiw	r24, 0x10	; 16
    8b9c:	70 fd       	sbrc	r23, 0
    8b9e:	05 c0       	rjmp	.+10     	; 0x8baa <x_diff_xf>
    8ba0:	57 ef       	ldi	r21, 0xF7	; 247
    8ba2:	54 0f       	add	r21, r20
    8ba4:	70 e0       	ldi	r23, 0x00	; 0
    8ba6:	61 e0       	ldi	r22, 0x01	; 1
    8ba8:	04 c0       	rjmp	.+8      	; 0x8bb2 <x_diff_end>

00008baa <x_diff_xf>:
    8baa:	59 ef       	ldi	r21, 0xF9	; 249
    8bac:	54 1b       	sub	r21, r20
    8bae:	7f ef       	ldi	r23, 0xFF	; 255
    8bb0:	6f ef       	ldi	r22, 0xFF	; 255

00008bb2 <x_diff_end>:
    8bb2:	3e ef       	ldi	r19, 0xFE	; 254
    8bb4:	04 2e       	mov	r0, r20
    8bb6:	46 95       	lsr	r20
    8bb8:	30 f4       	brcc	.+12     	; 0x8bc6 <x_loop1>
    8bba:	61 f0       	breq	.+24     	; 0x8bd4 <x_loopx>

00008bbc <x_loop0>:
    8bbc:	25 91       	lpm	r18, Z+
    8bbe:	23 13       	cpse	r18, r19
    8bc0:	2c 93       	st	X, r18
    8bc2:	a6 0f       	add	r26, r22
    8bc4:	b7 1f       	adc	r27, r23

00008bc6 <x_loop1>:
    8bc6:	25 91       	lpm	r18, Z+
    8bc8:	23 13       	cpse	r18, r19
    8bca:	2c 93       	st	X, r18
    8bcc:	a6 0f       	add	r26, r22
    8bce:	b7 1f       	adc	r27, r23
    8bd0:	41 50       	subi	r20, 0x01	; 1
    8bd2:	a1 f7       	brne	.-24     	; 0x8bbc <x_loop0>

00008bd4 <x_loopx>:
    8bd4:	25 91       	lpm	r18, Z+
    8bd6:	23 13       	cpse	r18, r19
    8bd8:	2c 93       	st	X, r18
    8bda:	1a 94       	dec	r1
    8bdc:	49 f0       	breq	.+18     	; 0x8bf0 <loop_e>
    8bde:	e8 0f       	add	r30, r24
    8be0:	f9 1f       	adc	r31, r25
    8be2:	a5 1b       	sub	r26, r21
    8be4:	bf 4f       	sbci	r27, 0xFF	; 255
    8be6:	40 2d       	mov	r20, r0
    8be8:	46 95       	lsr	r20
    8bea:	68 f7       	brcc	.-38     	; 0x8bc6 <x_loop1>
    8bec:	39 f7       	brne	.-50     	; 0x8bbc <x_loop0>
    8bee:	f2 cf       	rjmp	.-28     	; 0x8bd4 <x_loopx>

00008bf0 <loop_e>:
    8bf0:	08 95       	ret

00008bf2 <__vector_13>:
    8bf2:	0f 92       	push	r0
    8bf4:	1f 92       	push	r1
    8bf6:	ef 93       	push	r30
    8bf8:	ff 93       	push	r31
    8bfa:	ff b7       	in	r31, 0x3f	; 63
    8bfc:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8c00:	ff 93       	push	r31
    8c02:	e2 fd       	sbrc	r30, 2
    8c04:	04 c0       	rjmp	.+8      	; 0x8c0e <__vector_13+0x1c>
    8c06:	e1 fd       	sbrc	r30, 1
    8c08:	02 c0       	rjmp	.+4      	; 0x8c0e <__vector_13+0x1c>
    8c0a:	00 00       	nop
    8c0c:	00 c0       	rjmp	.+0      	; 0x8c0e <__vector_13+0x1c>
    8c0e:	e0 ff       	sbrs	r30, 0
    8c10:	00 c0       	rjmp	.+0      	; 0x8c12 <__vector_13+0x20>
    8c12:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8c16:	ea 95       	dec	r30
    8c18:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8c1c:	f0 91 60 08 	lds	r31, 0x0860	; 0x800860 <sync_phase>
    8c20:	f0 fd       	sbrc	r31, 0
    8c22:	51 c0       	rjmp	.+162    	; 0x8cc6 <sync_hsync>
    8c24:	ec 30       	cpi	r30, 0x0C	; 12
    8c26:	98 f0       	brcs	.+38     	; 0x8c4e <sync_eq>
    8c28:	f3 e0       	ldi	r31, 0x03	; 3
    8c2a:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8c2e:	fd e8       	ldi	r31, 0x8D	; 141
    8c30:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8c34:	e0 fb       	bst	r30, 0
    8c36:	28 98       	cbi	0x05, 0	; 5
    8c38:	26 f4       	brtc	.+8      	; 0x8c42 <sync_pre_eq_no_sound_update>
    8c3a:	e1 e0       	ldi	r30, 0x01	; 1
    8c3c:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <update_sound>
    8c40:	b2 c0       	rjmp	.+356    	; 0x8da6 <sync_end>

00008c42 <sync_pre_eq_no_sound_update>:
    8c42:	e5 e1       	ldi	r30, 0x15	; 21
    8c44:	ea 95       	dec	r30
    8c46:	f1 f7       	brne	.-4      	; 0x8c44 <sync_pre_eq_no_sound_update+0x2>
    8c48:	00 00       	nop
    8c4a:	28 9a       	sbi	0x05, 0	; 5
    8c4c:	ac c0       	rjmp	.+344    	; 0x8da6 <sync_end>

00008c4e <sync_eq>:
    8c4e:	e6 30       	cpi	r30, 0x06	; 6
    8c50:	08 f1       	brcs	.+66     	; 0x8c94 <sync_post_eq>
    8c52:	00 c0       	rjmp	.+0      	; 0x8c54 <sync_eq+0x6>
    8c54:	00 c0       	rjmp	.+0      	; 0x8c56 <sync_eq+0x8>
    8c56:	28 98       	cbi	0x05, 0	; 5
    8c58:	e0 fb       	bst	r30, 0
    8c5a:	e4 e0       	ldi	r30, 0x04	; 4
    8c5c:	16 f4       	brtc	.+4      	; 0x8c62 <sync_eq_skip>
    8c5e:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <update_sound>

00008c62 <sync_eq_skip>:
    8c62:	e4 e0       	ldi	r30, 0x04	; 4
    8c64:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8c68:	e6 e0       	ldi	r30, 0x06	; 6
    8c6a:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8c6e:	9b c0       	rjmp	.+310    	; 0x8da6 <sync_end>

00008c70 <__vector_14>:
    8c70:	ef 93       	push	r30
    8c72:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8c76:	e2 fd       	sbrc	r30, 2
    8c78:	04 c0       	rjmp	.+8      	; 0x8c82 <__vector_14+0x12>
    8c7a:	e1 fd       	sbrc	r30, 1
    8c7c:	02 c0       	rjmp	.+4      	; 0x8c82 <__vector_14+0x12>
    8c7e:	00 00       	nop
    8c80:	00 c0       	rjmp	.+0      	; 0x8c82 <__vector_14+0x12>
    8c82:	e0 ff       	sbrs	r30, 0
    8c84:	00 c0       	rjmp	.+0      	; 0x8c86 <__vector_14+0x16>
    8c86:	e2 e0       	ldi	r30, 0x02	; 2
    8c88:	00 00       	nop
    8c8a:	28 9a       	sbi	0x05, 0	; 5
    8c8c:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8c90:	ef 91       	pop	r30
    8c92:	18 95       	reti

00008c94 <sync_post_eq>:
    8c94:	00 c0       	rjmp	.+0      	; 0x8c96 <sync_post_eq+0x2>
    8c96:	e0 fb       	bst	r30, 0
    8c98:	28 98       	cbi	0x05, 0	; 5
    8c9a:	26 f4       	brtc	.+8      	; 0x8ca4 <sync_post_eq_no_sound_update>
    8c9c:	e1 e0       	ldi	r30, 0x01	; 1
    8c9e:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <update_sound>
    8ca2:	05 c0       	rjmp	.+10     	; 0x8cae <sync_pre_eq_cont>

00008ca4 <sync_post_eq_no_sound_update>:
    8ca4:	e5 e1       	ldi	r30, 0x15	; 21
    8ca6:	ea 95       	dec	r30
    8ca8:	f1 f7       	brne	.-4      	; 0x8ca6 <sync_post_eq_no_sound_update+0x2>
    8caa:	00 00       	nop
    8cac:	28 9a       	sbi	0x05, 0	; 5

00008cae <sync_pre_eq_cont>:
    8cae:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8cb2:	e0 30       	cpi	r30, 0x00	; 0
    8cb4:	09 f0       	breq	.+2      	; 0x8cb8 <sync_pre_eq_cont+0xa>
    8cb6:	77 c0       	rjmp	.+238    	; 0x8da6 <sync_end>
    8cb8:	ed ef       	ldi	r30, 0xFD	; 253
    8cba:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8cbe:	e1 e0       	ldi	r30, 0x01	; 1
    8cc0:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    8cc4:	70 c0       	rjmp	.+224    	; 0x8da6 <sync_end>

00008cc6 <sync_hsync>:
    8cc6:	e7 e0       	ldi	r30, 0x07	; 7
    8cc8:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8ccc:	eb e1       	ldi	r30, 0x1B	; 27
    8cce:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8cd2:	00 c0       	rjmp	.+0      	; 0x8cd4 <sync_hsync+0xe>
    8cd4:	28 98       	cbi	0x05, 0	; 5
    8cd6:	e2 e0       	ldi	r30, 0x02	; 2
    8cd8:	00 c0       	rjmp	.+0      	; 0x8cda <sync_hsync+0x14>
    8cda:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <update_sound>
    8cde:	fd ef       	ldi	r31, 0xFD	; 253
    8ce0:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    8ce4:	f0 19       	sub	r31, r0
    8ce6:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8cea:	ef 17       	cp	r30, r31
    8cec:	d8 f4       	brcc	.+54     	; 0x8d24 <no_render>
    8cee:	fd ef       	ldi	r31, 0xFD	; 253
    8cf0:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    8cf4:	f0 19       	sub	r31, r0
    8cf6:	00 90 68 08 	lds	r0, 0x0868	; 0x800868 <render_lines_count>
    8cfa:	f0 19       	sub	r31, r0
    8cfc:	ef 17       	cp	r30, r31
    8cfe:	90 f0       	brcs	.+36     	; 0x8d24 <no_render>
    8d00:	ed e1       	ldi	r30, 0x1D	; 29
    8d02:	ff 27       	eor	r31, r31

00008d04 <push_loop>:
    8d04:	00 80       	ld	r0, Z
    8d06:	0f 92       	push	r0
    8d08:	ea 95       	dec	r30
    8d0a:	e1 f7       	brne	.-8      	; 0x8d04 <push_loop>
    8d0c:	0d e0       	ldi	r16, 0x0D	; 13
    8d0e:	0a 95       	dec	r16
    8d10:	f1 f7       	brne	.-4      	; 0x8d0e <push_loop+0xa>
    8d12:	00 c0       	rjmp	.+0      	; 0x8d14 <push_loop+0x10>
    8d14:	0e 94 b0 42 	call	0x8560	; 0x8560 <sub_video_mode3>
    8d18:	e1 e0       	ldi	r30, 0x01	; 1
    8d1a:	ff 27       	eor	r31, r31

00008d1c <pop_loop>:
    8d1c:	0f 90       	pop	r0
    8d1e:	01 92       	st	Z+, r0
    8d20:	ee 31       	cpi	r30, 0x1E	; 30
    8d22:	e0 f3       	brcs	.-8      	; 0x8d1c <pop_loop>

00008d24 <no_render>:
    8d24:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8d28:	e0 30       	cpi	r30, 0x00	; 0
    8d2a:	09 f0       	breq	.+2      	; 0x8d2e <no_render+0xa>
    8d2c:	3c c0       	rjmp	.+120    	; 0x8da6 <sync_end>
    8d2e:	2f 93       	push	r18
    8d30:	3f 93       	push	r19
    8d32:	4f 93       	push	r20
    8d34:	5f 93       	push	r21
    8d36:	6f 93       	push	r22
    8d38:	7f 93       	push	r23
    8d3a:	8f 93       	push	r24
    8d3c:	9f 93       	push	r25
    8d3e:	af 93       	push	r26
    8d40:	bf 93       	push	r27
    8d42:	78 94       	sei
    8d44:	11 24       	eor	r1, r1
    8d46:	ee 27       	eor	r30, r30
    8d48:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    8d4c:	e2 e1       	ldi	r30, 0x12	; 18
    8d4e:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8d52:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <vsync_counter>
    8d56:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <vsync_counter+0x1>
    8d5a:	01 96       	adiw	r24, 0x01	; 1
    8d5c:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <vsync_counter>
    8d60:	90 93 72 08 	sts	0x0872, r25	; 0x800872 <vsync_counter+0x1>
    8d64:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <pre_vsync_user_callback>
    8d68:	f0 91 64 08 	lds	r31, 0x0864	; 0x800864 <pre_vsync_user_callback+0x1>
    8d6c:	e1 15       	cp	r30, r1
    8d6e:	f1 05       	cpc	r31, r1
    8d70:	09 f0       	breq	.+2      	; 0x8d74 <no_render+0x50>
    8d72:	09 95       	icall
    8d74:	0e 94 2e 48 	call	0x905c	; 0x905c <ReadControllers>
    8d78:	0e 94 1a 55 	call	0xaa34	; 0xaa34 <VideoModeVsync>
    8d7c:	0e 94 e5 46 	call	0x8dca	; 0x8dca <process_music>
    8d80:	11 24       	eor	r1, r1
    8d82:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <post_vsync_user_callback>
    8d86:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <post_vsync_user_callback+0x1>
    8d8a:	e1 15       	cp	r30, r1
    8d8c:	f1 05       	cpc	r31, r1
    8d8e:	09 f0       	breq	.+2      	; 0x8d92 <no_render+0x6e>
    8d90:	09 95       	icall
    8d92:	bf 91       	pop	r27
    8d94:	af 91       	pop	r26
    8d96:	9f 91       	pop	r25
    8d98:	8f 91       	pop	r24
    8d9a:	7f 91       	pop	r23
    8d9c:	6f 91       	pop	r22
    8d9e:	5f 91       	pop	r21
    8da0:	4f 91       	pop	r20
    8da2:	3f 91       	pop	r19
    8da4:	2f 91       	pop	r18

00008da6 <sync_end>:
    8da6:	ef 91       	pop	r30
    8da8:	ef bf       	out	0x3f, r30	; 63
    8daa:	ff 91       	pop	r31
    8dac:	ef 91       	pop	r30
    8dae:	1f 90       	pop	r1
    8db0:	0f 90       	pop	r0
    8db2:	18 95       	reti

00008db4 <hsync_pulse>:
    8db4:	28 98       	cbi	0x05, 0	; 5
    8db6:	e2 e0       	ldi	r30, 0x02	; 2
    8db8:	00 c0       	rjmp	.+0      	; 0x8dba <hsync_pulse+0x6>
    8dba:	0e 94 eb 46 	call	0x8dd6	; 0x8dd6 <update_sound>
    8dbe:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8dc2:	ea 95       	dec	r30
    8dc4:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8dc8:	08 95       	ret

00008dca <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    8dca:	e0 91 75 08 	lds	r30, 0x0875	; 0x800875 <sound_enabled>
    8dce:	e0 fd       	sbrc	r30, 0
    8dd0:	0e 94 a3 4a 	call	0x9546	; 0x9546 <ProcessMusic>
    8dd4:	08 95       	ret

00008dd6 <update_sound>:
    8dd6:	2f 93       	push	r18
    8dd8:	1f 93       	push	r17
    8dda:	0f 93       	push	r16
    8ddc:	2e 2f       	mov	r18, r30
    8dde:	10 91 79 08 	lds	r17, 0x0879	; 0x800879 <tr1_pos_frac>
    8de2:	e0 91 7a 08 	lds	r30, 0x087A	; 0x80087a <tr1_pos_lo>
    8de6:	f0 91 7b 08 	lds	r31, 0x087B	; 0x80087b <tr1_pos_hi>
    8dea:	00 91 77 08 	lds	r16, 0x0877	; 0x800877 <tr1_step_lo>
    8dee:	10 0f       	add	r17, r16
    8df0:	00 91 78 08 	lds	r16, 0x0878	; 0x800878 <tr1_step_hi>
    8df4:	e0 1f       	adc	r30, r16
    8df6:	04 91       	lpm	r16, Z
    8df8:	e0 93 7a 08 	sts	0x087A, r30	; 0x80087a <tr1_pos_lo>
    8dfc:	10 93 79 08 	sts	0x0879, r17	; 0x800879 <tr1_pos_frac>
    8e00:	10 91 76 08 	lds	r17, 0x0876	; 0x800876 <mixer>
    8e04:	01 03       	mulsu	r16, r17
    8e06:	00 08       	sbc	r0, r0
    8e08:	10 91 7f 08 	lds	r17, 0x087F	; 0x80087f <tr2_pos_frac>
    8e0c:	e0 91 80 08 	lds	r30, 0x0880	; 0x800880 <tr2_pos_lo>
    8e10:	f0 91 81 08 	lds	r31, 0x0881	; 0x800881 <tr2_pos_hi>
    8e14:	00 91 7d 08 	lds	r16, 0x087D	; 0x80087d <tr2_step_lo>
    8e18:	10 0f       	add	r17, r16
    8e1a:	00 91 7e 08 	lds	r16, 0x087E	; 0x80087e <tr2_step_hi>
    8e1e:	e0 1f       	adc	r30, r16
    8e20:	04 91       	lpm	r16, Z
    8e22:	e0 93 80 08 	sts	0x0880, r30	; 0x800880 <tr2_pos_lo>
    8e26:	10 93 7f 08 	sts	0x087F, r17	; 0x80087f <tr2_pos_frac>
    8e2a:	f0 01       	movw	r30, r0
    8e2c:	10 91 7c 08 	lds	r17, 0x087C	; 0x80087c <tr2_vol>
    8e30:	01 03       	mulsu	r16, r17
    8e32:	00 08       	sbc	r0, r0
    8e34:	1f 0e       	add	r1, r31
    8e36:	10 91 85 08 	lds	r17, 0x0885	; 0x800885 <tr3_pos_frac>
    8e3a:	20 fd       	sbrc	r18, 0
    8e3c:	28 9a       	sbi	0x05, 0	; 5
    8e3e:	0e 1e       	adc	r0, r30
    8e40:	e0 91 86 08 	lds	r30, 0x0886	; 0x800886 <tr3_pos_lo>
    8e44:	f0 91 87 08 	lds	r31, 0x0887	; 0x800887 <tr3_pos_hi>
    8e48:	00 91 83 08 	lds	r16, 0x0883	; 0x800883 <tr3_step_lo>
    8e4c:	10 0f       	add	r17, r16
    8e4e:	00 91 84 08 	lds	r16, 0x0884	; 0x800884 <tr3_step_hi>
    8e52:	e0 1f       	adc	r30, r16
    8e54:	04 91       	lpm	r16, Z
    8e56:	e0 93 86 08 	sts	0x0886, r30	; 0x800886 <tr3_pos_lo>
    8e5a:	10 93 85 08 	sts	0x0885, r17	; 0x800885 <tr3_pos_frac>
    8e5e:	f0 01       	movw	r30, r0
    8e60:	10 91 82 08 	lds	r17, 0x0882	; 0x800882 <tr3_vol>
    8e64:	01 03       	mulsu	r16, r17
    8e66:	00 08       	sbc	r0, r0
    8e68:	1f 0e       	add	r1, r31
    8e6a:	0e 1e       	adc	r0, r30
    8e6c:	00 91 8a 08 	lds	r16, 0x088A	; 0x80088a <tr4_barrel_lo>
    8e70:	10 91 8b 08 	lds	r17, 0x088B	; 0x80088b <tr4_barrel_hi>
    8e74:	f0 91 88 08 	lds	r31, 0x0888	; 0x800888 <tr4_vol>
    8e78:	f6 95       	lsr	r31
    8e7a:	88 94       	clc
    8e7c:	00 fd       	sbrc	r16, 0
    8e7e:	f1 95       	neg	r31
    8e80:	ee 0b       	sbc	r30, r30
    8e82:	1f 0e       	add	r1, r31
    8e84:	0e 1e       	adc	r0, r30
    8e86:	e0 91 8c 08 	lds	r30, 0x088C	; 0x80088c <tr4_divider>
    8e8a:	e2 50       	subi	r30, 0x02	; 2
    8e8c:	20 f0       	brcs	.+8      	; 0x8e96 <ch4_shift>
    8e8e:	e4 91       	lpm	r30, Z
    8e90:	e4 91       	lpm	r30, Z
    8e92:	e4 91       	lpm	r30, Z
    8e94:	0a c0       	rjmp	.+20     	; 0x8eaa <ch4_end>

00008e96 <ch4_shift>:
    8e96:	e0 2f       	mov	r30, r16
    8e98:	16 95       	lsr	r17
    8e9a:	07 95       	ror	r16
    8e9c:	e0 27       	eor	r30, r16
    8e9e:	e0 fb       	bst	r30, 0
    8ea0:	16 f9       	bld	r17, 6
    8ea2:	e0 91 89 08 	lds	r30, 0x0889	; 0x800889 <tr4_params>
    8ea6:	e0 ff       	sbrs	r30, 0
    8ea8:	06 f9       	bld	r16, 6

00008eaa <ch4_end>:
    8eaa:	00 93 8a 08 	sts	0x088A, r16	; 0x80088a <tr4_barrel_lo>
    8eae:	10 93 8b 08 	sts	0x088B, r17	; 0x80088b <tr4_barrel_hi>
    8eb2:	e0 93 8c 08 	sts	0x088C, r30	; 0x80088c <tr4_divider>
    8eb6:	10 e0       	ldi	r17, 0x00	; 0
    8eb8:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <tr5_pos_frac>
    8ebc:	f0 91 8f 08 	lds	r31, 0x088F	; 0x80088f <tr5_step_lo>
    8ec0:	21 fd       	sbrc	r18, 1
    8ec2:	28 9a       	sbi	0x05, 0	; 5
    8ec4:	ef 0f       	add	r30, r31
    8ec6:	e0 93 91 08 	sts	0x0891, r30	; 0x800891 <tr5_pos_frac>
    8eca:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <tr5_pos_lo>
    8ece:	f0 91 93 08 	lds	r31, 0x0893	; 0x800893 <tr5_pos_hi>
    8ed2:	00 91 90 08 	lds	r16, 0x0890	; 0x800890 <tr5_step_hi>
    8ed6:	e0 1f       	adc	r30, r16
    8ed8:	f1 1f       	adc	r31, r17
    8eda:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_end_lo>
    8ede:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_end_hi>
    8ee2:	e0 17       	cp	r30, r16
    8ee4:	f1 07       	cpc	r31, r17
    8ee6:	18 f4       	brcc	.+6      	; 0x8eee <ch5_reset>
    8ee8:	04 91       	lpm	r16, Z
    8eea:	00 c0       	rjmp	.+0      	; 0x8eec <ch4_end+0x42>
    8eec:	06 c0       	rjmp	.+12     	; 0x8efa <ch5_nores>

00008eee <ch5_reset>:
    8eee:	00 91 94 08 	lds	r16, 0x0894	; 0x800894 <tr5_loop_len_lo>
    8ef2:	10 91 95 08 	lds	r17, 0x0895	; 0x800895 <tr5_loop_len_hi>
    8ef6:	e0 1b       	sub	r30, r16
    8ef8:	f1 0b       	sbc	r31, r17

00008efa <ch5_nores>:
    8efa:	e0 93 92 08 	sts	0x0892, r30	; 0x800892 <tr5_pos_lo>
    8efe:	f0 93 93 08 	sts	0x0893, r31	; 0x800893 <tr5_pos_hi>
    8f02:	04 91       	lpm	r16, Z
    8f04:	f0 01       	movw	r30, r0
    8f06:	10 91 8e 08 	lds	r17, 0x088E	; 0x80088e <tr5_vol>
    8f0a:	01 03       	mulsu	r16, r17
    8f0c:	00 08       	sbc	r0, r0
    8f0e:	1f 0e       	add	r1, r31
    8f10:	0e 1e       	adc	r0, r30
    8f12:	f0 01       	movw	r30, r0
    8f14:	0f 91       	pop	r16
    8f16:	1f 91       	pop	r17
    8f18:	f0 58       	subi	r31, 0x80	; 128
    8f1a:	ef 4f       	sbci	r30, 0xFF	; 255
    8f1c:	1a f4       	brpl	.+6      	; 0x8f24 <ch5_nores+0x2a>
    8f1e:	f0 e0       	ldi	r31, 0x00	; 0
    8f20:	00 00       	nop
    8f22:	03 c0       	rjmp	.+6      	; 0x8f2a <ch5_nores+0x30>
    8f24:	e0 30       	cpi	r30, 0x00	; 0
    8f26:	09 f0       	breq	.+2      	; 0x8f2a <ch5_nores+0x30>
    8f28:	ff ef       	ldi	r31, 0xFF	; 255
    8f2a:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    8f2e:	2f 91       	pop	r18
    8f30:	08 95       	ret

00008f32 <SetSpritesTileTable>:
    8f32:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <sprites_tile_banks>
    8f36:	90 93 4f 08 	sts	0x084F, r25	; 0x80084f <sprites_tile_banks+0x1>
    8f3a:	08 95       	ret

00008f3c <ClearVram>:
    8f3c:	e0 e2       	ldi	r30, 0x20	; 32
    8f3e:	f4 e0       	ldi	r31, 0x04	; 4
    8f40:	a0 e0       	ldi	r26, 0x00	; 0
    8f42:	ba e0       	ldi	r27, 0x0A	; 10
    8f44:	6b e1       	ldi	r22, 0x1B	; 27

00008f46 <fill_vram_loop>:
    8f46:	6d 93       	st	X+, r22
    8f48:	31 97       	sbiw	r30, 0x01	; 1
    8f4a:	e9 f7       	brne	.-6      	; 0x8f46 <fill_vram_loop>
    8f4c:	11 24       	eor	r1, r1
    8f4e:	08 95       	ret

00008f50 <SetTile>:
    8f50:	8f 71       	andi	r24, 0x1F	; 31
    8f52:	76 2f       	mov	r23, r22
    8f54:	66 95       	lsr	r22
    8f56:	66 95       	lsr	r22
    8f58:	66 95       	lsr	r22
    8f5a:	28 e0       	ldi	r18, 0x08	; 8
    8f5c:	82 9f       	mul	r24, r18
    8f5e:	d0 01       	movw	r26, r0
    8f60:	a0 50       	subi	r26, 0x00	; 0
    8f62:	b6 4f       	sbci	r27, 0xF6	; 246
    8f64:	b6 0f       	add	r27, r22
    8f66:	77 70       	andi	r23, 0x07	; 7
    8f68:	a7 0f       	add	r26, r23
    8f6a:	45 5e       	subi	r20, 0xE5	; 229
    8f6c:	4c 93       	st	X, r20
    8f6e:	11 24       	eor	r1, r1
    8f70:	08 95       	ret

00008f72 <SetTileTable>:
    8f72:	80 93 56 08 	sts	0x0856, r24	; 0x800856 <tile_table_lo>
    8f76:	90 93 57 08 	sts	0x0857, r25	; 0x800857 <tile_table_hi>
    8f7a:	08 95       	ret

00008f7c <GetVsyncFlag>:
    8f7c:	80 91 62 08 	lds	r24, 0x0862	; 0x800862 <sync_flags>
    8f80:	81 70       	andi	r24, 0x01	; 1
    8f82:	08 95       	ret

00008f84 <ClearVsyncFlag>:
    8f84:	20 91 62 08 	lds	r18, 0x0862	; 0x800862 <sync_flags>
    8f88:	2e 7f       	andi	r18, 0xFE	; 254
    8f8a:	20 93 62 08 	sts	0x0862, r18	; 0x800862 <sync_flags>
    8f8e:	08 95       	ret

00008f90 <ReadJoypad>:
    8f90:	88 23       	and	r24, r24
    8f92:	29 f4       	brne	.+10     	; 0x8f9e <rj_p2>
    8f94:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    8f98:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    8f9c:	08 95       	ret

00008f9e <rj_p2>:
    8f9e:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    8fa2:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    8fa6:	08 95       	ret

00008fa8 <SoftReset>:
    8fa8:	e0 e6       	ldi	r30, 0x60	; 96
    8faa:	f0 e0       	ldi	r31, 0x00	; 0
    8fac:	80 81       	ld	r24, Z
    8fae:	83 fd       	sbrc	r24, 3
    8fb0:	08 95       	ret
    8fb2:	88 e1       	ldi	r24, 0x18	; 24
    8fb4:	98 e0       	ldi	r25, 0x08	; 8
    8fb6:	f8 94       	cli
    8fb8:	80 83       	st	Z, r24
    8fba:	90 83       	st	Z, r25
    8fbc:	78 94       	sei
    8fbe:	ff cf       	rjmp	.-2      	; 0x8fbe <SoftReset+0x16>

00008fc0 <WriteEeprom>:
    8fc0:	f9 99       	sbic	0x1f, 1	; 31
    8fc2:	fe cf       	rjmp	.-4      	; 0x8fc0 <WriteEeprom>
    8fc4:	92 bd       	out	0x22, r25	; 34
    8fc6:	81 bd       	out	0x21, r24	; 33
    8fc8:	60 bd       	out	0x20, r22	; 32
    8fca:	f8 94       	cli
    8fcc:	fa 9a       	sbi	0x1f, 2	; 31
    8fce:	f9 9a       	sbi	0x1f, 1	; 31
    8fd0:	78 94       	sei
    8fd2:	08 95       	ret

00008fd4 <ReadEeprom>:
    8fd4:	f9 99       	sbic	0x1f, 1	; 31
    8fd6:	fe cf       	rjmp	.-4      	; 0x8fd4 <ReadEeprom>
    8fd8:	92 bd       	out	0x22, r25	; 34
    8fda:	81 bd       	out	0x21, r24	; 33
    8fdc:	f8 94       	cli
    8fde:	f8 9a       	sbi	0x1f, 0	; 31
    8fe0:	80 b5       	in	r24, 0x20	; 32
    8fe2:	78 94       	sei
    8fe4:	08 95       	ret

00008fe6 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    8fe6:	80 93 65 08 	sts	0x0865, r24	; 0x800865 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    8fea:	90 93 66 08 	sts	0x0866, r25	; 0x800866 <post_vsync_user_callback+0x1>
	ret
    8fee:	08 95       	ret

00008ff0 <ReadButtons>:
    8ff0:	12 9a       	sbi	0x02, 2	; 2
    8ff2:	c8 95       	lpm
    8ff4:	c8 95       	lpm
    8ff6:	c8 95       	lpm
    8ff8:	c8 95       	lpm
    8ffa:	12 98       	cbi	0x02, 2	; 2
    8ffc:	40 e1       	ldi	r20, 0x10	; 16
    8ffe:	80 e0       	ldi	r24, 0x00	; 0
    9000:	90 e0       	ldi	r25, 0x00	; 0
    9002:	20 e0       	ldi	r18, 0x00	; 0
    9004:	30 e0       	ldi	r19, 0x00	; 0
    9006:	36 95       	lsr	r19
    9008:	27 95       	ror	r18
    900a:	96 95       	lsr	r25
    900c:	87 95       	ror	r24
    900e:	c8 95       	lpm
    9010:	c8 95       	lpm
    9012:	c8 95       	lpm
    9014:	c8 95       	lpm
    9016:	13 98       	cbi	0x02, 3	; 2
    9018:	00 9b       	sbis	0x00, 0	; 0
    901a:	30 68       	ori	r19, 0x80	; 128
    901c:	01 9b       	sbis	0x00, 1	; 0
    901e:	90 68       	ori	r25, 0x80	; 128
    9020:	13 9a       	sbi	0x02, 3	; 2
    9022:	c8 95       	lpm
    9024:	c8 95       	lpm
    9026:	c8 95       	lpm
    9028:	c8 95       	lpm
    902a:	41 50       	subi	r20, 0x01	; 1
    902c:	61 f7       	brne	.-40     	; 0x9006 <ReadButtons+0x16>
    902e:	30 93 6a 08 	sts	0x086A, r19	; 0x80086a <joypad1_status_lo+0x1>
    9032:	20 93 69 08 	sts	0x0869, r18	; 0x800869 <joypad1_status_lo>
    9036:	90 93 6e 08 	sts	0x086E, r25	; 0x80086e <joypad2_status_lo+0x1>
    903a:	80 93 6d 08 	sts	0x086D, r24	; 0x80086d <joypad2_status_lo>
    903e:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    9042:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    9046:	0f 97       	sbiw	r24, 0x0f	; 15
    9048:	31 f0       	breq	.+12     	; 0x9056 <ReadButtons+0x66>
    904a:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    904e:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    9052:	0f 97       	sbiw	r24, 0x0f	; 15
    9054:	11 f4       	brne	.+4      	; 0x905a <ReadButtons+0x6a>
    9056:	0c 94 d4 47 	jmp	0x8fa8	; 0x8fa8 <SoftReset>
    905a:	08 95       	ret

0000905c <ReadControllers>:
    905c:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <joypadsConnectionStatus>
    9060:	00 99       	sbic	0x00, 0	; 0
    9062:	03 c0       	rjmp	.+6      	; 0x906a <ReadControllers+0xe>
    9064:	81 e0       	ldi	r24, 0x01	; 1
    9066:	80 93 98 08 	sts	0x0898, r24	; 0x800898 <joypadsConnectionStatus>
    906a:	01 99       	sbic	0x00, 1	; 0
    906c:	05 c0       	rjmp	.+10     	; 0x9078 <ReadControllers+0x1c>
    906e:	80 91 98 08 	lds	r24, 0x0898	; 0x800898 <joypadsConnectionStatus>
    9072:	82 60       	ori	r24, 0x02	; 2
    9074:	80 93 98 08 	sts	0x0898, r24	; 0x800898 <joypadsConnectionStatus>
    9078:	0c 94 f8 47 	jmp	0x8ff0	; 0x8ff0 <ReadButtons>

0000907c <FormatEeprom>:
    907c:	cf 93       	push	r28
    907e:	df 93       	push	r29
    9080:	c0 e0       	ldi	r28, 0x00	; 0
    9082:	d0 e0       	ldi	r29, 0x00	; 0
    9084:	fe 01       	movw	r30, r28
    9086:	ee 55       	subi	r30, 0x5E	; 94
    9088:	ff 4f       	sbci	r31, 0xFF	; 255
    908a:	64 91       	lpm	r22, Z
    908c:	ce 01       	movw	r24, r28
    908e:	0e 94 e0 47 	call	0x8fc0	; 0x8fc0 <WriteEeprom>
    9092:	21 96       	adiw	r28, 0x01	; 1
    9094:	c0 32       	cpi	r28, 0x20	; 32
    9096:	d1 05       	cpc	r29, r1
    9098:	a9 f7       	brne	.-22     	; 0x9084 <FormatEeprom+0x8>
    909a:	c0 e2       	ldi	r28, 0x20	; 32
    909c:	d0 e0       	ldi	r29, 0x00	; 0
    909e:	6f ef       	ldi	r22, 0xFF	; 255
    90a0:	ce 01       	movw	r24, r28
    90a2:	0e 94 e0 47 	call	0x8fc0	; 0x8fc0 <WriteEeprom>
    90a6:	6f ef       	ldi	r22, 0xFF	; 255
    90a8:	ce 01       	movw	r24, r28
    90aa:	01 96       	adiw	r24, 0x01	; 1
    90ac:	0e 94 e0 47 	call	0x8fc0	; 0x8fc0 <WriteEeprom>
    90b0:	a0 96       	adiw	r28, 0x20	; 32
    90b2:	c1 15       	cp	r28, r1
    90b4:	88 e0       	ldi	r24, 0x08	; 8
    90b6:	d8 07       	cpc	r29, r24
    90b8:	91 f7       	brne	.-28     	; 0x909e <FormatEeprom+0x22>
    90ba:	df 91       	pop	r29
    90bc:	cf 91       	pop	r28
    90be:	08 95       	ret

000090c0 <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    90c0:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    90c2:	80 e0       	ldi	r24, 0x00	; 0
    90c4:	90 e0       	ldi	r25, 0x00	; 0
    90c6:	0e 94 ea 47 	call	0x8fd4	; 0x8fd4 <ReadEeprom>
    90ca:	c8 2f       	mov	r28, r24
    90cc:	81 e0       	ldi	r24, 0x01	; 1
    90ce:	90 e0       	ldi	r25, 0x00	; 0
    90d0:	0e 94 ea 47 	call	0x8fd4	; 0x8fd4 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    90d4:	28 2f       	mov	r18, r24
    90d6:	30 e0       	ldi	r19, 0x00	; 0
    90d8:	32 2f       	mov	r19, r18
    90da:	22 27       	eor	r18, r18
    90dc:	2c 0f       	add	r18, r28
    90de:	31 1d       	adc	r19, r1
    90e0:	81 e0       	ldi	r24, 0x01	; 1
    90e2:	2a 35       	cpi	r18, 0x5A	; 90
    90e4:	35 45       	sbci	r19, 0x55	; 85
    90e6:	09 f0       	breq	.+2      	; 0x90ea <isEepromFormatted+0x2a>
    90e8:	80 e0       	ldi	r24, 0x00	; 0
}
    90ea:	cf 91       	pop	r28
    90ec:	08 95       	ret

000090ee <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    90ee:	fc 01       	movw	r30, r24
    90f0:	67 87       	std	Z+15, r22	; 0x0f
    90f2:	08 95       	ret

000090f4 <PatchCommand01>:
    90f4:	e6 e7       	ldi	r30, 0x76	; 118
    90f6:	f8 e0       	ldi	r31, 0x08	; 8
    90f8:	81 e0       	ldi	r24, 0x01	; 1
    90fa:	91 e0       	ldi	r25, 0x01	; 1
    90fc:	95 8b       	std	Z+21, r25	; 0x15
    90fe:	84 8b       	std	Z+20, r24	; 0x14
    9100:	63 8b       	std	Z+19, r22	; 0x13
    9102:	08 95       	ret

00009104 <PatchCommand05>:
    9104:	fc 01       	movw	r30, r24
    9106:	90 81       	ld	r25, Z
    9108:	9f 75       	andi	r25, 0x5F	; 95
    910a:	90 83       	st	Z, r25
    910c:	08 95       	ret

0000910e <PatchCommand06>:
    910e:	fc 01       	movw	r30, r24
    9110:	90 81       	ld	r25, Z
    9112:	90 64       	ori	r25, 0x40	; 64
    9114:	90 83       	st	Z, r25
    9116:	08 95       	ret

00009118 <PatchCommand07>:
    9118:	fc 01       	movw	r30, r24
    911a:	66 87       	std	Z+14, r22	; 0x0e
    911c:	08 95       	ret

0000911e <PatchCommand09>:
    911e:	fc 01       	movw	r30, r24
    9120:	62 87       	std	Z+10, r22	; 0x0a
    9122:	08 95       	ret

00009124 <PatchCommand10>:
    9124:	fc 01       	movw	r30, r24
    9126:	63 87       	std	Z+11, r22	; 0x0b
    9128:	08 95       	ret

0000912a <PatchCommand11>:
    912a:	cf 93       	push	r28
    912c:	df 93       	push	r29
    912e:	ec 01       	movw	r28, r24
    9130:	26 2f       	mov	r18, r22
    9132:	89 81       	ldd	r24, Y+1	; 0x01
    9134:	90 e0       	ldi	r25, 0x00	; 0
    9136:	fc 01       	movw	r30, r24
    9138:	ee 0f       	add	r30, r30
    913a:	ff 1f       	adc	r31, r31
    913c:	e0 5a       	subi	r30, 0xA0	; 160
    913e:	f6 46       	sbci	r31, 0x66	; 102
    9140:	45 91       	lpm	r20, Z+
    9142:	54 91       	lpm	r21, Z
    9144:	fc 01       	movw	r30, r24
    9146:	e6 0f       	add	r30, r22
    9148:	f1 1d       	adc	r31, r1
    914a:	67 fd       	sbrc	r22, 7
    914c:	fa 95       	dec	r31
    914e:	ee 0f       	add	r30, r30
    9150:	ff 1f       	adc	r31, r31
    9152:	e0 5a       	subi	r30, 0xA0	; 160
    9154:	f6 46       	sbci	r31, 0x66	; 102
    9156:	85 91       	lpm	r24, Z+
    9158:	94 91       	lpm	r25, Z
    915a:	84 1b       	sub	r24, r20
    915c:	95 0b       	sbc	r25, r21
    915e:	68 85       	ldd	r22, Y+8	; 0x08
    9160:	70 e0       	ldi	r23, 0x00	; 0
    9162:	0e 94 7f 6d 	call	0xdafe	; 0xdafe <__divmodhi4>
    9166:	61 15       	cp	r22, r1
    9168:	71 05       	cpc	r23, r1
    916a:	11 f4       	brne	.+4      	; 0x9170 <PatchCommand11+0x46>
    916c:	61 e0       	ldi	r22, 0x01	; 1
    916e:	70 e0       	ldi	r23, 0x00	; 0
    9170:	ea 81       	ldd	r30, Y+2	; 0x02
    9172:	86 e0       	ldi	r24, 0x06	; 6
    9174:	e8 9f       	mul	r30, r24
    9176:	f0 01       	movw	r30, r0
    9178:	11 24       	eor	r1, r1
    917a:	ea 58       	subi	r30, 0x8A	; 138
    917c:	f7 4f       	sbci	r31, 0xF7	; 247
    917e:	81 81       	ldd	r24, Z+1	; 0x01
    9180:	92 81       	ldd	r25, Z+2	; 0x02
    9182:	86 0f       	add	r24, r22
    9184:	97 1f       	adc	r25, r23
    9186:	92 83       	std	Z+2, r25	; 0x02
    9188:	81 83       	std	Z+1, r24	; 0x01
    918a:	7e 83       	std	Y+6, r23	; 0x06
    918c:	6d 83       	std	Y+5, r22	; 0x05
    918e:	88 81       	ld	r24, Y
    9190:	88 60       	ori	r24, 0x08	; 8
    9192:	88 83       	st	Y, r24
    9194:	89 81       	ldd	r24, Y+1	; 0x01
    9196:	28 0f       	add	r18, r24
    9198:	2f 83       	std	Y+7, r18	; 0x07
    919a:	df 91       	pop	r29
    919c:	cf 91       	pop	r28
    919e:	08 95       	ret

000091a0 <PatchCommand12>:
    91a0:	fc 01       	movw	r30, r24
    91a2:	60 87       	std	Z+8, r22	; 0x08
    91a4:	08 95       	ret

000091a6 <PatchCommand13>:
    91a6:	fc 01       	movw	r30, r24
    91a8:	64 83       	std	Z+4, r22	; 0x04
    91aa:	08 95       	ret

000091ac <PatchCommand02>:
    91ac:	fc 01       	movw	r30, r24
    91ae:	82 81       	ldd	r24, Z+2	; 0x02
    91b0:	0c 94 93 4c 	jmp	0x9926	; 0x9926 <SetMixerWave>

000091b4 <PatchCommand03>:
    91b4:	fc 01       	movw	r30, r24
    91b6:	91 81       	ldd	r25, Z+1	; 0x01
    91b8:	69 0f       	add	r22, r25
    91ba:	61 83       	std	Z+1, r22	; 0x01
    91bc:	82 81       	ldd	r24, Z+2	; 0x02
    91be:	0c 94 7c 4c 	jmp	0x98f8	; 0x98f8 <SetMixerNote>

000091c2 <PatchCommand04>:
    91c2:	fc 01       	movw	r30, r24
    91c4:	91 81       	ldd	r25, Z+1	; 0x01
    91c6:	96 1b       	sub	r25, r22
    91c8:	69 2f       	mov	r22, r25
    91ca:	91 83       	std	Z+1, r25	; 0x01
    91cc:	82 81       	ldd	r24, Z+2	; 0x02
    91ce:	0c 94 7c 4c 	jmp	0x98f8	; 0x98f8 <SetMixerNote>

000091d2 <PatchCommand08>:
    91d2:	1f 93       	push	r17
    91d4:	cf 93       	push	r28
    91d6:	df 93       	push	r29
    91d8:	ec 01       	movw	r28, r24
    91da:	16 2f       	mov	r17, r22
    91dc:	8a 81       	ldd	r24, Y+2	; 0x02
    91de:	0e 94 7c 4c 	call	0x98f8	; 0x98f8 <SetMixerNote>
    91e2:	19 83       	std	Y+1, r17	; 0x01
    91e4:	88 81       	ld	r24, Y
    91e6:	87 7f       	andi	r24, 0xF7	; 247
    91e8:	88 83       	st	Y, r24
    91ea:	df 91       	pop	r29
    91ec:	cf 91       	pop	r28
    91ee:	1f 91       	pop	r17
    91f0:	08 95       	ret

000091f2 <PatchCommand14>:
    91f2:	dc 01       	movw	r26, r24
    91f4:	14 96       	adiw	r26, 0x04	; 4
    91f6:	8c 91       	ld	r24, X
    91f8:	14 97       	sbiw	r26, 0x04	; 4
    91fa:	88 23       	and	r24, r24
    91fc:	19 f1       	breq	.+70     	; 0x9244 <PatchCommand14+0x52>
    91fe:	55 96       	adiw	r26, 0x15	; 21
    9200:	2d 91       	ld	r18, X+
    9202:	3c 91       	ld	r19, X
    9204:	56 97       	sbiw	r26, 0x16	; 22
    9206:	66 23       	and	r22, r22
    9208:	79 f0       	breq	.+30     	; 0x9228 <PatchCommand14+0x36>
    920a:	06 2e       	mov	r0, r22
    920c:	00 0c       	add	r0, r0
    920e:	77 0b       	sbc	r23, r23
    9210:	6f 5f       	subi	r22, 0xFF	; 255
    9212:	7f 4f       	sbci	r23, 0xFF	; 255
    9214:	ab 01       	movw	r20, r22
    9216:	44 0f       	add	r20, r20
    9218:	55 1f       	adc	r21, r21
    921a:	64 0f       	add	r22, r20
    921c:	75 1f       	adc	r23, r21
    921e:	26 1b       	sub	r18, r22
    9220:	37 0b       	sbc	r19, r23
    9222:	09 c0       	rjmp	.+18     	; 0x9236 <PatchCommand14+0x44>
    9224:	ef 3f       	cpi	r30, 0xFF	; 255
    9226:	39 f0       	breq	.+14     	; 0x9236 <PatchCommand14+0x44>
    9228:	23 50       	subi	r18, 0x03	; 3
    922a:	31 09       	sbc	r19, r1
    922c:	f9 01       	movw	r30, r18
    922e:	32 97       	sbiw	r30, 0x02	; 2
    9230:	e4 91       	lpm	r30, Z
    9232:	ed 30       	cpi	r30, 0x0D	; 13
    9234:	b9 f7       	brne	.-18     	; 0x9224 <PatchCommand14+0x32>
    9236:	56 96       	adiw	r26, 0x16	; 22
    9238:	3c 93       	st	X, r19
    923a:	2e 93       	st	-X, r18
    923c:	55 97       	sbiw	r26, 0x15	; 21
    923e:	81 50       	subi	r24, 0x01	; 1
    9240:	14 96       	adiw	r26, 0x04	; 4
    9242:	8c 93       	st	X, r24
    9244:	08 95       	ret

00009246 <InitMusicPlayer>:
    9246:	90 93 11 09 	sts	0x0911, r25	; 0x800911 <patchPointers+0x1>
    924a:	80 93 10 09 	sts	0x0910, r24	; 0x800910 <patchPointers>
    924e:	8f e6       	ldi	r24, 0x6F	; 111
    9250:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <masterVolume>
    9254:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    9258:	eb e9       	ldi	r30, 0x9B	; 155
    925a:	f8 e0       	ldi	r31, 0x08	; 8
    925c:	80 e0       	ldi	r24, 0x00	; 0
    925e:	90 e1       	ldi	r25, 0x10	; 16
    9260:	3f ef       	ldi	r19, 0xFF	; 255
    9262:	28 e1       	ldi	r18, 0x18	; 24
    9264:	82 83       	std	Z+2, r24	; 0x02
    9266:	90 83       	st	Z, r25
    9268:	15 86       	std	Z+13, r1	; 0x0d
    926a:	34 87       	std	Z+12, r19	; 0x0c
    926c:	10 8a       	std	Z+16, r1	; 0x10
    926e:	23 87       	std	Z+11, r18	; 0x0b
    9270:	90 87       	std	Z+8, r25	; 0x08
    9272:	8f 5f       	subi	r24, 0xFF	; 255
    9274:	77 96       	adiw	r30, 0x17	; 23
    9276:	85 30       	cpi	r24, 0x05	; 5
    9278:	a9 f7       	brne	.-22     	; 0x9264 <InitMusicPlayer+0x1e>
    927a:	08 95       	ret

0000927c <StartSong>:
    927c:	eb e9       	ldi	r30, 0x9B	; 155
    927e:	f8 e0       	ldi	r31, 0x08	; 8
    9280:	3f ef       	ldi	r19, 0xFF	; 255
    9282:	20 81       	ld	r18, Z
    9284:	2f 77       	andi	r18, 0x7F	; 127
    9286:	20 83       	st	Z, r18
    9288:	33 83       	std	Z+3, r19	; 0x03
    928a:	77 96       	adiw	r30, 0x17	; 23
    928c:	29 e0       	ldi	r18, 0x09	; 9
    928e:	ee 30       	cpi	r30, 0x0E	; 14
    9290:	f2 07       	cpc	r31, r18
    9292:	b9 f7       	brne	.-18     	; 0x9282 <StartSong+0x6>
    9294:	01 96       	adiw	r24, 0x01	; 1
    9296:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <songPos+0x1>
    929a:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <songPos>
    929e:	90 93 9a 08 	sts	0x089A, r25	; 0x80089a <songStart+0x1>
    92a2:	80 93 99 08 	sts	0x0899, r24	; 0x800899 <songStart>
    92a6:	90 93 1a 09 	sts	0x091A, r25	; 0x80091a <loopStart+0x1>
    92aa:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <loopStart>
    92ae:	10 92 15 09 	sts	0x0915, r1	; 0x800915 <nextDeltaTime+0x1>
    92b2:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <nextDeltaTime>
    92b6:	10 92 0f 09 	sts	0x090F, r1	; 0x80090f <currDeltaTime+0x1>
    92ba:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <currDeltaTime>
    92be:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <songSpeed>
    92c2:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <lastStatus>
    92c6:	81 e0       	ldi	r24, 0x01	; 1
    92c8:	80 93 74 08 	sts	0x0874, r24	; 0x800874 <playSong>
    92cc:	08 95       	ret

000092ce <StopSong>:
    92ce:	eb e9       	ldi	r30, 0x9B	; 155
    92d0:	f8 e0       	ldi	r31, 0x08	; 8
    92d2:	8a ef       	ldi	r24, 0xFA	; 250
    92d4:	87 87       	std	Z+15, r24	; 0x0f
    92d6:	86 a3       	std	Z+38, r24	; 0x26
    92d8:	85 af       	std	Z+61, r24	; 0x3d
    92da:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <tracks+0x54>
    92de:	80 93 06 09 	sts	0x0906, r24	; 0x800906 <tracks+0x6b>
    92e2:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    92e6:	08 95       	ret

000092e8 <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    92e8:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    92ea:	ed 91       	ld	r30, X+
    92ec:	fc 91       	ld	r31, X
    92ee:	11 97       	sbiw	r26, 0x01	; 1
    92f0:	9f 01       	movw	r18, r30
    92f2:	2f 5f       	subi	r18, 0xFF	; 255
    92f4:	3f 4f       	sbci	r19, 0xFF	; 255
    92f6:	11 96       	adiw	r26, 0x01	; 1
    92f8:	3c 93       	st	X, r19
    92fa:	2e 93       	st	-X, r18
    92fc:	e4 91       	lpm	r30, Z
    92fe:	e7 fd       	sbrc	r30, 7
    9300:	03 c0       	rjmp	.+6      	; 0x9308 <ReadVarLen+0x20>
    9302:	8e 2f       	mov	r24, r30
    9304:	90 e0       	ldi	r25, 0x00	; 0
    9306:	08 95       	ret
    {
       value &= 0x7F;
    9308:	ef 77       	andi	r30, 0x7F	; 127
    930a:	8e 2f       	mov	r24, r30
    930c:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    930e:	96 95       	lsr	r25
    9310:	98 2f       	mov	r25, r24
    9312:	88 27       	eor	r24, r24
    9314:	97 95       	ror	r25
    9316:	87 95       	ror	r24
    9318:	2f 5f       	subi	r18, 0xFF	; 255
    931a:	3f 4f       	sbci	r19, 0xFF	; 255
    931c:	f9 01       	movw	r30, r18
    931e:	31 97       	sbiw	r30, 0x01	; 1
    9320:	e4 91       	lpm	r30, Z
    9322:	4e 2f       	mov	r20, r30
    9324:	4f 77       	andi	r20, 0x7F	; 127
    9326:	84 0f       	add	r24, r20
    9328:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    932a:	e7 fd       	sbrc	r30, 7
    932c:	f0 cf       	rjmp	.-32     	; 0x930e <ReadVarLen+0x26>
    932e:	2d 93       	st	X+, r18
    9330:	3c 93       	st	X, r19
    }


    return value;
}
    9332:	08 95       	ret

00009334 <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    9334:	ff 92       	push	r15
    9336:	0f 93       	push	r16
    9338:	1f 93       	push	r17
    933a:	cf 93       	push	r28
    933c:	df 93       	push	r29
    933e:	ec 01       	movw	r28, r24
    9340:	16 2f       	mov	r17, r22
    9342:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    9344:	88 81       	ld	r24, Y
    9346:	28 2f       	mov	r18, r24
    9348:	20 78       	andi	r18, 0x80	; 128
    934a:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    934c:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    934e:	9f ef       	ldi	r25, 0xFF	; 255
    9350:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    9352:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    9354:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    9356:	87 7b       	andi	r24, 0xB7	; 183
    9358:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    935a:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    935c:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    935e:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    9360:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    9362:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    9364:	8a 81       	ldd	r24, Y+2	; 0x02
    9366:	83 30       	cpi	r24, 0x03	; 3
    9368:	69 f4       	brne	.+26     	; 0x9384 <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    936a:	21 11       	cpse	r18, r1
    936c:	01 c0       	rjmp	.+2      	; 0x9370 <TriggerCommon+0x3c>
    936e:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    9370:	81 e0       	ldi	r24, 0x01	; 1
    9372:	91 e0       	ldi	r25, 0x01	; 1
    9374:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <tr4_barrel_hi>
    9378:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    937c:	81 e0       	ldi	r24, 0x01	; 1
    937e:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    9382:	36 c0       	rjmp	.+108    	; 0x93f0 <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    9384:	84 30       	cpi	r24, 0x04	; 4
    9386:	69 f5       	brne	.+90     	; 0x93e2 <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    9388:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    938c:	80 91 10 09 	lds	r24, 0x0910	; 0x800910 <patchPointers>
    9390:	90 91 11 09 	lds	r25, 0x0911	; 0x800911 <patchPointers+0x1>
    9394:	e9 e0       	ldi	r30, 0x09	; 9
    9396:	6e 9f       	mul	r22, r30
    9398:	80 0d       	add	r24, r0
    939a:	91 1d       	adc	r25, r1
    939c:	11 24       	eor	r1, r1
    939e:	fc 01       	movw	r30, r24
    93a0:	31 96       	adiw	r30, 0x01	; 1
    93a2:	45 91       	lpm	r20, Z+
    93a4:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    93a6:	50 93 93 08 	sts	0x0893, r21	; 0x800893 <tr5_pos_hi>
    93aa:	40 93 92 08 	sts	0x0892, r20	; 0x800892 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    93ae:	9c 01       	movw	r18, r24
    93b0:	29 5f       	subi	r18, 0xF9	; 249
    93b2:	3f 4f       	sbci	r19, 0xFF	; 255
    93b4:	f9 01       	movw	r30, r18
    93b6:	65 91       	lpm	r22, Z+
    93b8:	74 91       	lpm	r23, Z
    93ba:	05 96       	adiw	r24, 0x05	; 5
    93bc:	fc 01       	movw	r30, r24
    93be:	85 91       	lpm	r24, Z+
    93c0:	94 91       	lpm	r25, Z
    93c2:	68 1b       	sub	r22, r24
    93c4:	79 0b       	sbc	r23, r25
    93c6:	70 93 95 08 	sts	0x0895, r23	; 0x800895 <tr5_loop_len_hi>
    93ca:	60 93 94 08 	sts	0x0894, r22	; 0x800894 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    93ce:	f9 01       	movw	r30, r18
    93d0:	85 91       	lpm	r24, Z+
    93d2:	94 91       	lpm	r25, Z
    93d4:	48 0f       	add	r20, r24
    93d6:	59 1f       	adc	r21, r25
    93d8:	50 93 97 08 	sts	0x0897, r21	; 0x800897 <tr5_loop_end_hi>
    93dc:	40 93 96 08 	sts	0x0896, r20	; 0x800896 <tr5_loop_end_lo>
    93e0:	03 c0       	rjmp	.+6      	; 0x93e8 <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    93e2:	60 e0       	ldi	r22, 0x00	; 0
    93e4:	0e 94 93 4c 	call	0x9926	; 0x9926 <SetMixerWave>
			SetMixerNote(track->channel,note);
    93e8:	60 2f       	mov	r22, r16
    93ea:	8a 81       	ldd	r24, Y+2	; 0x02
    93ec:	0e 94 7c 4c 	call	0x98f8	; 0x98f8 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    93f0:	ff 20       	and	r15, r15
    93f2:	11 f0       	breq	.+4      	; 0x93f8 <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    93f4:	19 8b       	std	Y+17, r17	; 0x11
    93f6:	01 c0       	rjmp	.+2      	; 0x93fa <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    93f8:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    93fa:	e0 91 10 09 	lds	r30, 0x0910	; 0x800910 <patchPointers>
    93fe:	f0 91 11 09 	lds	r31, 0x0911	; 0x800911 <patchPointers+0x1>
    9402:	29 e0       	ldi	r18, 0x09	; 9
    9404:	12 9f       	mul	r17, r18
    9406:	e0 0d       	add	r30, r0
    9408:	f1 1d       	adc	r31, r1
    940a:	11 24       	eor	r1, r1
    940c:	33 96       	adiw	r30, 0x03	; 3
    940e:	85 91       	lpm	r24, Z+
    9410:	94 91       	lpm	r25, Z
	if(pos==NULL){
    9412:	00 97       	sbiw	r24, 0x00	; 0
    9414:	19 f4       	brne	.+6      	; 0x941c <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    9416:	1e 8a       	std	Y+22, r1	; 0x16
    9418:	1d 8a       	std	Y+21, r1	; 0x15
    941a:	07 c0       	rjmp	.+14     	; 0x942a <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    941c:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    941e:	fc 01       	movw	r30, r24
    9420:	24 91       	lpm	r18, Z
    9422:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    9424:	01 96       	adiw	r24, 0x01	; 1
    9426:	9e 8b       	std	Y+22, r25	; 0x16
    9428:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    942a:	df 91       	pop	r29
    942c:	cf 91       	pop	r28
    942e:	1f 91       	pop	r17
    9430:	0f 91       	pop	r16
    9432:	ff 90       	pop	r15
    9434:	08 95       	ret

00009436 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    9436:	cf 93       	push	r28
    9438:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    943a:	e0 91 10 09 	lds	r30, 0x0910	; 0x800910 <patchPointers>
    943e:	f0 91 11 09 	lds	r31, 0x0911	; 0x800911 <patchPointers+0x1>
    9442:	99 e0       	ldi	r25, 0x09	; 9
    9444:	89 9f       	mul	r24, r25
    9446:	e0 0d       	add	r30, r0
    9448:	f1 1d       	adc	r31, r1
    944a:	11 24       	eor	r1, r1
    944c:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    944e:	e1 30       	cpi	r30, 0x01	; 1
    9450:	e9 f0       	breq	.+58     	; 0x948c <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    9452:	e2 30       	cpi	r30, 0x02	; 2
    9454:	e9 f0       	breq	.+58     	; 0x9490 <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    9456:	90 91 b2 08 	lds	r25, 0x08B2	; 0x8008b2 <tracks+0x17>
    945a:	97 ff       	sbrs	r25, 7
    945c:	1b c0       	rjmp	.+54     	; 0x9494 <TriggerFx+0x5e>
    945e:	90 91 c3 08 	lds	r25, 0x08C3	; 0x8008c3 <tracks+0x28>
    9462:	89 13       	cpse	r24, r25
    9464:	02 c0       	rjmp	.+4      	; 0x946a <TriggerFx+0x34>
    9466:	41 11       	cpse	r20, r1
    9468:	15 c0       	rjmp	.+42     	; 0x9494 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    946a:	90 91 c9 08 	lds	r25, 0x08C9	; 0x8008c9 <tracks+0x2e>
    946e:	97 ff       	sbrs	r25, 7
    9470:	13 c0       	rjmp	.+38     	; 0x9498 <TriggerFx+0x62>
    9472:	90 91 da 08 	lds	r25, 0x08DA	; 0x8008da <tracks+0x3f>
    9476:	89 13       	cpse	r24, r25
    9478:	02 c0       	rjmp	.+4      	; 0x947e <TriggerFx+0x48>
    947a:	41 11       	cpse	r20, r1
    947c:	0d c0       	rjmp	.+26     	; 0x9498 <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    947e:	20 91 c6 08 	lds	r18, 0x08C6	; 0x8008c6 <tracks+0x2b>
    9482:	90 91 dd 08 	lds	r25, 0x08DD	; 0x8008dd <tracks+0x42>
    9486:	92 17       	cp	r25, r18
    9488:	38 f4       	brcc	.+14     	; 0x9498 <TriggerFx+0x62>
    948a:	04 c0       	rjmp	.+8      	; 0x9494 <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    948c:	c3 e0       	ldi	r28, 0x03	; 3
    948e:	05 c0       	rjmp	.+10     	; 0x949a <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    9490:	c4 e0       	ldi	r28, 0x04	; 4
    9492:	03 c0       	rjmp	.+6      	; 0x949a <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    9494:	c1 e0       	ldi	r28, 0x01	; 1
    9496:	01 c0       	rjmp	.+2      	; 0x949a <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    9498:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    949a:	97 e1       	ldi	r25, 0x17	; 23
    949c:	c9 9f       	mul	r28, r25
    949e:	e0 01       	movw	r28, r0
    94a0:	11 24       	eor	r1, r1
    94a2:	c5 56       	subi	r28, 0x65	; 101
    94a4:	d7 4f       	sbci	r29, 0xF7	; 247
    94a6:	90 e8       	ldi	r25, 0x80	; 128
    94a8:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    94aa:	1e 8a       	std	Y+22, r1	; 0x16
    94ac:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    94ae:	20 e5       	ldi	r18, 0x50	; 80
    94b0:	46 2f       	mov	r20, r22
    94b2:	68 2f       	mov	r22, r24
    94b4:	ce 01       	movw	r24, r28
    94b6:	0e 94 9a 49 	call	0x9334	; 0x9334 <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    94ba:	88 81       	ld	r24, Y
    94bc:	80 62       	ori	r24, 0x20	; 32
    94be:	88 83       	st	Y, r24
}
    94c0:	df 91       	pop	r29
    94c2:	cf 91       	pop	r28
    94c4:	08 95       	ret

000094c6 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    94c6:	cf 93       	push	r28
    94c8:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    94ca:	a8 2f       	mov	r26, r24
    94cc:	b0 e0       	ldi	r27, 0x00	; 0
    94ce:	97 e1       	ldi	r25, 0x17	; 23
    94d0:	89 9f       	mul	r24, r25
    94d2:	f0 01       	movw	r30, r0
    94d4:	11 24       	eor	r1, r1
    94d6:	e5 56       	subi	r30, 0x65	; 101
    94d8:	f7 4f       	sbci	r31, 0xF7	; 247
    94da:	80 81       	ld	r24, Z
    94dc:	85 ff       	sbrs	r24, 5
    94de:	02 c0       	rjmp	.+4      	; 0x94e4 <TriggerNote+0x1e>
    94e0:	87 fd       	sbrc	r24, 7
    94e2:	2e c0       	rjmp	.+92     	; 0x9540 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    94e4:	21 11       	cpse	r18, r1
    94e6:	18 c0       	rjmp	.+48     	; 0x9518 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    94e8:	97 e1       	ldi	r25, 0x17	; 23
    94ea:	9a 9f       	mul	r25, r26
    94ec:	f0 01       	movw	r30, r0
    94ee:	9b 9f       	mul	r25, r27
    94f0:	f0 0d       	add	r31, r0
    94f2:	11 24       	eor	r1, r1
    94f4:	e5 56       	subi	r30, 0x65	; 101
    94f6:	f7 4f       	sbci	r31, 0xF7	; 247
    94f8:	97 85       	ldd	r25, Z+15	; 0x0f
    94fa:	91 11       	cpse	r25, r1
    94fc:	02 c0       	rjmp	.+4      	; 0x9502 <TriggerNote+0x3c>
    94fe:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    9500:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    9502:	97 e1       	ldi	r25, 0x17	; 23
    9504:	9a 9f       	mul	r25, r26
    9506:	f0 01       	movw	r30, r0
    9508:	9b 9f       	mul	r25, r27
    950a:	f0 0d       	add	r31, r0
    950c:	11 24       	eor	r1, r1
    950e:	e5 56       	subi	r30, 0x65	; 101
    9510:	f7 4f       	sbci	r31, 0xF7	; 247
    9512:	8f 7b       	andi	r24, 0xBF	; 191
    9514:	80 83       	st	Z, r24
    9516:	14 c0       	rjmp	.+40     	; 0x9540 <TriggerNote+0x7a>
    9518:	82 2f       	mov	r24, r18
    951a:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    951c:	97 e1       	ldi	r25, 0x17	; 23
    951e:	9a 9f       	mul	r25, r26
    9520:	e0 01       	movw	r28, r0
    9522:	9b 9f       	mul	r25, r27
    9524:	d0 0d       	add	r29, r0
    9526:	11 24       	eor	r1, r1
    9528:	c5 56       	subi	r28, 0x65	; 101
    952a:	d7 4f       	sbci	r29, 0xF7	; 247
    952c:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    952e:	1e 8a       	std	Y+22, r1	; 0x16
    9530:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    9532:	48 2f       	mov	r20, r24
    9534:	ce 01       	movw	r24, r28
    9536:	0e 94 9a 49 	call	0x9334	; 0x9334 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    953a:	88 81       	ld	r24, Y
    953c:	80 62       	ori	r24, 0x20	; 32
    953e:	88 83       	st	Y, r24
		}

	}
}
    9540:	df 91       	pop	r29
    9542:	cf 91       	pop	r28
    9544:	08 95       	ret

00009546 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    9546:	ef 92       	push	r14
    9548:	ff 92       	push	r15
    954a:	0f 93       	push	r16
    954c:	1f 93       	push	r17
    954e:	cf 93       	push	r28
    9550:	df 93       	push	r29
    9552:	cb e9       	ldi	r28, 0x9B	; 155
    9554:	d8 e0       	ldi	r29, 0x08	; 8
    9556:	06 e7       	ldi	r16, 0x76	; 118
    9558:	18 e0       	ldi	r17, 0x08	; 8
    955a:	98 01       	movw	r18, r16
    955c:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    955e:	1f 96       	adiw	r26, 0x0f	; 15
    9560:	8c 91       	ld	r24, X
    9562:	1f 97       	sbiw	r26, 0x0f	; 15
    9564:	88 23       	and	r24, r24
    9566:	a9 f0       	breq	.+42     	; 0x9592 <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    9568:	1e 96       	adiw	r26, 0x0e	; 14
    956a:	4c 91       	ld	r20, X
    956c:	1e 97       	sbiw	r26, 0x0e	; 14
    956e:	08 2e       	mov	r0, r24
    9570:	00 0c       	add	r0, r0
    9572:	99 0b       	sbc	r25, r25
    9574:	84 0f       	add	r24, r20
    9576:	91 1d       	adc	r25, r1
    9578:	8f 3f       	cpi	r24, 0xFF	; 255
    957a:	91 05       	cpc	r25, r1
    957c:	19 f0       	breq	.+6      	; 0x9584 <ProcessMusic+0x3e>
    957e:	14 f0       	brlt	.+4      	; 0x9584 <ProcessMusic+0x3e>
    9580:	8f ef       	ldi	r24, 0xFF	; 255
    9582:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    9584:	97 ff       	sbrs	r25, 7
    9586:	02 c0       	rjmp	.+4      	; 0x958c <ProcessMusic+0x46>
    9588:	80 e0       	ldi	r24, 0x00	; 0
    958a:	90 e0       	ldi	r25, 0x00	; 0
    958c:	1e 96       	adiw	r26, 0x0e	; 14
    958e:	8c 93       	st	X, r24
    9590:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    9592:	6c 91       	ld	r22, X
    9594:	63 ff       	sbrs	r22, 3
    9596:	26 c0       	rjmp	.+76     	; 0x95e4 <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    9598:	15 96       	adiw	r26, 0x05	; 5
    959a:	4d 91       	ld	r20, X+
    959c:	5c 91       	ld	r21, X
    959e:	16 97       	sbiw	r26, 0x06	; 6
    95a0:	f9 01       	movw	r30, r18
    95a2:	81 81       	ldd	r24, Z+1	; 0x01
    95a4:	92 81       	ldd	r25, Z+2	; 0x02
    95a6:	84 0f       	add	r24, r20
    95a8:	95 1f       	adc	r25, r21
    95aa:	92 83       	std	Z+2, r25	; 0x02
    95ac:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    95ae:	17 96       	adiw	r26, 0x07	; 7
    95b0:	ec 91       	ld	r30, X
    95b2:	17 97       	sbiw	r26, 0x07	; 7
    95b4:	f0 e0       	ldi	r31, 0x00	; 0
    95b6:	ee 0f       	add	r30, r30
    95b8:	ff 1f       	adc	r31, r31
    95ba:	e0 5a       	subi	r30, 0xA0	; 160
    95bc:	f6 46       	sbci	r31, 0x66	; 102
    95be:	e5 90       	lpm	r14, Z+
    95c0:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    95c2:	14 16       	cp	r1, r20
    95c4:	15 06       	cpc	r1, r21
    95c6:	24 f4       	brge	.+8      	; 0x95d0 <ProcessMusic+0x8a>
    95c8:	8e 15       	cp	r24, r14
    95ca:	9f 05       	cpc	r25, r15
    95cc:	30 f4       	brcc	.+12     	; 0x95da <ProcessMusic+0x94>
    95ce:	0a c0       	rjmp	.+20     	; 0x95e4 <ProcessMusic+0x9e>
    95d0:	45 2b       	or	r20, r21
    95d2:	41 f0       	breq	.+16     	; 0x95e4 <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    95d4:	e8 16       	cp	r14, r24
    95d6:	f9 06       	cpc	r15, r25
    95d8:	28 f0       	brcs	.+10     	; 0x95e4 <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    95da:	f9 01       	movw	r30, r18
    95dc:	f2 82       	std	Z+2, r15	; 0x02
    95de:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    95e0:	67 7f       	andi	r22, 0xF7	; 247
    95e2:	6c 93       	st	X, r22
    95e4:	57 96       	adiw	r26, 0x17	; 23
    95e6:	2a 5f       	subi	r18, 0xFA	; 250
    95e8:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    95ea:	f9 e0       	ldi	r31, 0x09	; 9
    95ec:	ae 30       	cpi	r26, 0x0E	; 14
    95ee:	bf 07       	cpc	r27, r31
    95f0:	09 f0       	breq	.+2      	; 0x95f4 <ProcessMusic+0xae>
    95f2:	b5 cf       	rjmp	.-150    	; 0x955e <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    95f4:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <playSong>
    95f8:	88 23       	and	r24, r24
    95fa:	09 f4       	brne	.+2      	; 0x95fe <ProcessMusic+0xb8>
    95fc:	cc c0       	rjmp	.+408    	; 0x9796 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    95fe:	87 e1       	ldi	r24, 0x17	; 23
    9600:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    9602:	80 91 0e 09 	lds	r24, 0x090E	; 0x80090e <currDeltaTime>
    9606:	90 91 0f 09 	lds	r25, 0x090F	; 0x80090f <currDeltaTime+0x1>
    960a:	20 91 14 09 	lds	r18, 0x0914	; 0x800914 <nextDeltaTime>
    960e:	30 91 15 09 	lds	r19, 0x0915	; 0x800915 <nextDeltaTime+0x1>
    9612:	82 17       	cp	r24, r18
    9614:	93 07       	cpc	r25, r19
    9616:	09 f0       	breq	.+2      	; 0x961a <ProcessMusic+0xd4>
    9618:	b9 c0       	rjmp	.+370    	; 0x978c <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    961a:	20 91 17 09 	lds	r18, 0x0917	; 0x800917 <songPos>
    961e:	30 91 18 09 	lds	r19, 0x0918	; 0x800918 <songPos+0x1>
    9622:	b9 01       	movw	r22, r18
    9624:	6f 5f       	subi	r22, 0xFF	; 255
    9626:	7f 4f       	sbci	r23, 0xFF	; 255
    9628:	70 93 18 09 	sts	0x0918, r23	; 0x800918 <songPos+0x1>
    962c:	60 93 17 09 	sts	0x0917, r22	; 0x800917 <songPos>
    9630:	f9 01       	movw	r30, r18
    9632:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    9634:	4f 3f       	cpi	r20, 0xFF	; 255
    9636:	79 f5       	brne	.+94     	; 0x9696 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    9638:	a9 01       	movw	r20, r18
    963a:	4e 5f       	subi	r20, 0xFE	; 254
    963c:	5f 4f       	sbci	r21, 0xFF	; 255
    963e:	50 93 18 09 	sts	0x0918, r21	; 0x800918 <songPos+0x1>
    9642:	40 93 17 09 	sts	0x0917, r20	; 0x800917 <songPos>
    9646:	fb 01       	movw	r30, r22
    9648:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    964a:	6f 32       	cpi	r22, 0x2F	; 47
    964c:	19 f4       	brne	.+6      	; 0x9654 <ProcessMusic+0x10e>
						playSong=false;
    964e:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
						break;	
    9652:	9c c0       	rjmp	.+312    	; 0x978c <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    9654:	66 30       	cpi	r22, 0x06	; 6
    9656:	09 f0       	breq	.+2      	; 0x965a <ProcessMusic+0x114>
    9658:	8c c0       	rjmp	.+280    	; 0x9772 <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    965a:	fa 01       	movw	r30, r20
    965c:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    965e:	c9 01       	movw	r24, r18
    9660:	04 96       	adiw	r24, 0x04	; 4
    9662:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <songPos+0x1>
    9666:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    966a:	f9 01       	movw	r30, r18
    966c:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    966e:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    9670:	e3 35       	cpi	r30, 0x53	; 83
    9672:	29 f4       	brne	.+10     	; 0x967e <ProcessMusic+0x138>
							loopStart=songPos;
    9674:	90 93 1a 09 	sts	0x091A, r25	; 0x80091a <loopStart+0x1>
    9678:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <loopStart>
    967c:	7a c0       	rjmp	.+244    	; 0x9772 <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    967e:	e5 34       	cpi	r30, 0x45	; 69
    9680:	09 f0       	breq	.+2      	; 0x9684 <ProcessMusic+0x13e>
    9682:	77 c0       	rjmp	.+238    	; 0x9772 <ProcessMusic+0x22c>
							songPos=loopStart;
    9684:	80 91 19 09 	lds	r24, 0x0919	; 0x800919 <loopStart>
    9688:	90 91 1a 09 	lds	r25, 0x091A	; 0x80091a <loopStart+0x1>
    968c:	90 93 18 09 	sts	0x0918, r25	; 0x800918 <songPos+0x1>
    9690:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <songPos>
    9694:	6e c0       	rjmp	.+220    	; 0x9772 <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    9696:	47 fd       	sbrc	r20, 7
    9698:	40 93 12 09 	sts	0x0912, r20	; 0x800912 <lastStatus>
					channel=lastStatus&0x0f;
    969c:	90 91 12 09 	lds	r25, 0x0912	; 0x800912 <lastStatus>
    96a0:	89 2f       	mov	r24, r25
    96a2:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    96a4:	47 ff       	sbrs	r20, 7
    96a6:	08 c0       	rjmp	.+16     	; 0x96b8 <ProcessMusic+0x172>
    96a8:	2e 5f       	subi	r18, 0xFE	; 254
    96aa:	3f 4f       	sbci	r19, 0xFF	; 255
    96ac:	30 93 18 09 	sts	0x0918, r19	; 0x800918 <songPos+0x1>
    96b0:	20 93 17 09 	sts	0x0917, r18	; 0x800917 <songPos>
    96b4:	fb 01       	movw	r30, r22
    96b6:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    96b8:	90 7f       	andi	r25, 0xF0	; 240
    96ba:	90 3b       	cpi	r25, 0xB0	; 176
    96bc:	e1 f0       	breq	.+56     	; 0x96f6 <ProcessMusic+0x1b0>
    96be:	90 3c       	cpi	r25, 0xC0	; 192
    96c0:	09 f4       	brne	.+2      	; 0x96c4 <ProcessMusic+0x17e>
    96c2:	51 c0       	rjmp	.+162    	; 0x9766 <ProcessMusic+0x220>
    96c4:	90 39       	cpi	r25, 0x90	; 144
    96c6:	09 f0       	breq	.+2      	; 0x96ca <ProcessMusic+0x184>
    96c8:	54 c0       	rjmp	.+168    	; 0x9772 <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    96ca:	e0 91 17 09 	lds	r30, 0x0917	; 0x800917 <songPos>
    96ce:	f0 91 18 09 	lds	r31, 0x0918	; 0x800918 <songPos+0x1>
    96d2:	9f 01       	movw	r18, r30
    96d4:	2f 5f       	subi	r18, 0xFF	; 255
    96d6:	3f 4f       	sbci	r19, 0xFF	; 255
    96d8:	30 93 18 09 	sts	0x0918, r19	; 0x800918 <songPos+0x1>
    96dc:	20 93 17 09 	sts	0x0917, r18	; 0x800917 <songPos>
    96e0:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    96e2:	22 0f       	add	r18, r18
    96e4:	f8 9e       	mul	r15, r24
    96e6:	f0 01       	movw	r30, r0
    96e8:	11 24       	eor	r1, r1
    96ea:	e5 56       	subi	r30, 0x65	; 101
    96ec:	f7 4f       	sbci	r31, 0xF7	; 247
    96ee:	60 89       	ldd	r22, Z+16	; 0x10
    96f0:	0e 94 63 4a 	call	0x94c6	; 0x94c6 <TriggerNote>
    96f4:	3e c0       	rjmp	.+124    	; 0x9772 <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    96f6:	e0 91 17 09 	lds	r30, 0x0917	; 0x800917 <songPos>
    96fa:	f0 91 18 09 	lds	r31, 0x0918	; 0x800918 <songPos+0x1>
    96fe:	9f 01       	movw	r18, r30
    9700:	2f 5f       	subi	r18, 0xFF	; 255
    9702:	3f 4f       	sbci	r19, 0xFF	; 255
    9704:	30 93 18 09 	sts	0x0918, r19	; 0x800918 <songPos+0x1>
    9708:	20 93 17 09 	sts	0x0917, r18	; 0x800917 <songPos>
    970c:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    970e:	47 30       	cpi	r20, 0x07	; 7
    9710:	49 f4       	brne	.+18     	; 0x9724 <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    9712:	f8 9e       	mul	r15, r24
    9714:	d0 01       	movw	r26, r0
    9716:	11 24       	eor	r1, r1
    9718:	a5 56       	subi	r26, 0x65	; 101
    971a:	b7 4f       	sbci	r27, 0xF7	; 247
    971c:	ee 0f       	add	r30, r30
    971e:	1c 96       	adiw	r26, 0x0c	; 12
    9720:	ec 93       	st	X, r30
    9722:	27 c0       	rjmp	.+78     	; 0x9772 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    9724:	4b 30       	cpi	r20, 0x0B	; 11
    9726:	49 f4       	brne	.+18     	; 0x973a <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    9728:	f8 9e       	mul	r15, r24
    972a:	d0 01       	movw	r26, r0
    972c:	11 24       	eor	r1, r1
    972e:	a5 56       	subi	r26, 0x65	; 101
    9730:	b7 4f       	sbci	r27, 0xF7	; 247
    9732:	ee 0f       	add	r30, r30
    9734:	13 96       	adiw	r26, 0x03	; 3
    9736:	ec 93       	st	X, r30
    9738:	1c c0       	rjmp	.+56     	; 0x9772 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    973a:	4c 35       	cpi	r20, 0x5C	; 92
    973c:	49 f4       	brne	.+18     	; 0x9750 <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    973e:	f8 9e       	mul	r15, r24
    9740:	d0 01       	movw	r26, r0
    9742:	11 24       	eor	r1, r1
    9744:	a5 56       	subi	r26, 0x65	; 101
    9746:	b7 4f       	sbci	r27, 0xF7	; 247
    9748:	ee 0f       	add	r30, r30
    974a:	1a 96       	adiw	r26, 0x0a	; 10
    974c:	ec 93       	st	X, r30
    974e:	11 c0       	rjmp	.+34     	; 0x9772 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    9750:	44 36       	cpi	r20, 0x64	; 100
    9752:	79 f4       	brne	.+30     	; 0x9772 <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    9754:	f8 9e       	mul	r15, r24
    9756:	d0 01       	movw	r26, r0
    9758:	11 24       	eor	r1, r1
    975a:	a5 56       	subi	r26, 0x65	; 101
    975c:	b7 4f       	sbci	r27, 0xF7	; 247
    975e:	ee 0f       	add	r30, r30
    9760:	1b 96       	adiw	r26, 0x0b	; 11
    9762:	ec 93       	st	X, r30
    9764:	06 c0       	rjmp	.+12     	; 0x9772 <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    9766:	f8 9e       	mul	r15, r24
    9768:	f0 01       	movw	r30, r0
    976a:	11 24       	eor	r1, r1
    976c:	e5 56       	subi	r30, 0x65	; 101
    976e:	f7 4f       	sbci	r31, 0xF7	; 247
    9770:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    9772:	87 e1       	ldi	r24, 0x17	; 23
    9774:	99 e0       	ldi	r25, 0x09	; 9
    9776:	0e 94 74 49 	call	0x92e8	; 0x92e8 <ReadVarLen>
    977a:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <nextDeltaTime+0x1>
    977e:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <nextDeltaTime>
				currDeltaTime=0;
    9782:	10 92 0f 09 	sts	0x090F, r1	; 0x80090f <currDeltaTime+0x1>
    9786:	10 92 0e 09 	sts	0x090E, r1	; 0x80090e <currDeltaTime>
    978a:	3b cf       	rjmp	.-394    	; 0x9602 <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    978c:	01 96       	adiw	r24, 0x01	; 1
    978e:	90 93 0f 09 	sts	0x090F, r25	; 0x80090f <currDeltaTime+0x1>
    9792:	80 93 0e 09 	sts	0x090E, r24	; 0x80090e <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    9796:	ee 24       	eor	r14, r14
    9798:	ea 94       	dec	r14
    979a:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    979c:	88 81       	ld	r24, Y
    979e:	85 ff       	sbrs	r24, 5
    97a0:	37 c0       	rjmp	.+110    	; 0x9810 <ProcessMusic+0x2ca>
    97a2:	2d 89       	ldd	r18, Y+21	; 0x15
    97a4:	3e 89       	ldd	r19, Y+22	; 0x16
    97a6:	23 2b       	or	r18, r19
    97a8:	09 f4       	brne	.+2      	; 0x97ac <ProcessMusic+0x266>
    97aa:	32 c0       	rjmp	.+100    	; 0x9810 <ProcessMusic+0x2ca>
    97ac:	86 fd       	sbrc	r24, 6
    97ae:	30 c0       	rjmp	.+96     	; 0x9810 <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    97b0:	9b 89       	ldd	r25, Y+19	; 0x13
    97b2:	8a 89       	ldd	r24, Y+18	; 0x12
    97b4:	98 13       	cpse	r25, r24
    97b6:	2a c0       	rjmp	.+84     	; 0x980c <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    97b8:	ed 89       	ldd	r30, Y+21	; 0x15
    97ba:	fe 89       	ldd	r31, Y+22	; 0x16
    97bc:	bf 01       	movw	r22, r30
    97be:	6f 5f       	subi	r22, 0xFF	; 255
    97c0:	7f 4f       	sbci	r23, 0xFF	; 255
    97c2:	7e 8b       	std	Y+22, r23	; 0x16
    97c4:	6d 8b       	std	Y+21, r22	; 0x15
    97c6:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    97c8:	8f 3f       	cpi	r24, 0xFF	; 255
    97ca:	31 f4       	brne	.+12     	; 0x97d8 <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    97cc:	88 81       	ld	r24, Y
    97ce:	8f 77       	andi	r24, 0x7F	; 127
    97d0:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    97d2:	1e 8a       	std	Y+22, r1	; 0x16
    97d4:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    97d6:	1a c0       	rjmp	.+52     	; 0x980c <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    97d8:	32 96       	adiw	r30, 0x02	; 2
    97da:	fe 8b       	std	Y+22, r31	; 0x16
    97dc:	ed 8b       	std	Y+21, r30	; 0x15
    97de:	fb 01       	movw	r30, r22
    97e0:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    97e2:	e8 2f       	mov	r30, r24
    97e4:	f0 e0       	ldi	r31, 0x00	; 0
    97e6:	ee 0f       	add	r30, r30
    97e8:	ff 1f       	adc	r31, r31
    97ea:	ee 53       	subi	r30, 0x3E	; 62
    97ec:	ff 4f       	sbci	r31, 0xFF	; 255
    97ee:	25 91       	lpm	r18, Z+
    97f0:	34 91       	lpm	r19, Z
    97f2:	ce 01       	movw	r24, r28
    97f4:	f9 01       	movw	r30, r18
    97f6:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    97f8:	ed 89       	ldd	r30, Y+21	; 0x15
    97fa:	fe 89       	ldd	r31, Y+22	; 0x16
    97fc:	cf 01       	movw	r24, r30
    97fe:	01 96       	adiw	r24, 0x01	; 1
    9800:	9e 8b       	std	Y+22, r25	; 0x16
    9802:	8d 8b       	std	Y+21, r24	; 0x15
    9804:	e4 91       	lpm	r30, Z
    9806:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    9808:	1b 8a       	std	Y+19, r1	; 0x13
    980a:	d2 cf       	rjmp	.-92     	; 0x97b0 <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    980c:	9f 5f       	subi	r25, 0xFF	; 255
    980e:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    9810:	98 81       	ld	r25, Y
    9812:	95 ff       	sbrs	r25, 5
    9814:	5e c0       	rjmp	.+188    	; 0x98d2 <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    9816:	8c 89       	ldd	r24, Y+20	; 0x14
    9818:	8f 3f       	cpi	r24, 0xFF	; 255
    981a:	11 f0       	breq	.+4      	; 0x9820 <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    981c:	8f 5f       	subi	r24, 0xFF	; 255
    981e:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    9820:	97 fd       	sbrc	r25, 7
    9822:	02 c0       	rjmp	.+4      	; 0x9828 <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    9824:	9c 85       	ldd	r25, Y+12	; 0x0c
    9826:	01 c0       	rjmp	.+2      	; 0x982a <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    9828:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    982a:	8d 85       	ldd	r24, Y+13	; 0x0d
    982c:	49 85       	ldd	r20, Y+9	; 0x09
    982e:	88 23       	and	r24, r24
    9830:	09 f4       	brne	.+2      	; 0x9834 <ProcessMusic+0x2ee>
    9832:	49 c0       	rjmp	.+146    	; 0x98c6 <ProcessMusic+0x380>
    9834:	6e 85       	ldd	r22, Y+14	; 0x0e
    9836:	66 23       	and	r22, r22
    9838:	09 f4       	brne	.+2      	; 0x983c <ProcessMusic+0x2f6>
    983a:	45 c0       	rjmp	.+138    	; 0x98c6 <ProcessMusic+0x380>
    983c:	99 23       	and	r25, r25
    983e:	09 f4       	brne	.+2      	; 0x9842 <ProcessMusic+0x2fc>
    9840:	42 c0       	rjmp	.+132    	; 0x98c6 <ProcessMusic+0x380>
    9842:	50 91 13 09 	lds	r21, 0x0913	; 0x800913 <masterVolume>
    9846:	55 23       	and	r21, r21
    9848:	09 f4       	brne	.+2      	; 0x984c <ProcessMusic+0x306>
    984a:	3d c0       	rjmp	.+122    	; 0x98c6 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    984c:	89 9f       	mul	r24, r25
    984e:	c0 01       	movw	r24, r0
    9850:	11 24       	eor	r1, r1
    9852:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    9854:	89 2f       	mov	r24, r25
    9856:	99 27       	eor	r25, r25
    9858:	68 9f       	mul	r22, r24
    985a:	90 01       	movw	r18, r0
    985c:	69 9f       	mul	r22, r25
    985e:	30 0d       	add	r19, r0
    9860:	11 24       	eor	r1, r1
    9862:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    9864:	23 2f       	mov	r18, r19
    9866:	33 27       	eor	r19, r19
    9868:	6b 81       	ldd	r22, Y+3	; 0x03
    986a:	62 9f       	mul	r22, r18
    986c:	c0 01       	movw	r24, r0
    986e:	63 9f       	mul	r22, r19
    9870:	90 0d       	add	r25, r0
    9872:	11 24       	eor	r1, r1
    9874:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    9876:	89 2f       	mov	r24, r25
    9878:	99 27       	eor	r25, r25
    987a:	58 9f       	mul	r21, r24
    987c:	90 01       	movw	r18, r0
    987e:	59 9f       	mul	r21, r25
    9880:	30 0d       	add	r19, r0
    9882:	11 24       	eor	r1, r1
    9884:	33 95       	inc	r19
				uVol>>=8;
    9886:	23 2f       	mov	r18, r19
    9888:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    988a:	8a 85       	ldd	r24, Y+10	; 0x0a
    988c:	88 23       	and	r24, r24
    988e:	e9 f0       	breq	.+58     	; 0x98ca <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    9890:	e4 2f       	mov	r30, r20
    9892:	f0 e0       	ldi	r31, 0x00	; 0
    9894:	e0 50       	subi	r30, 0x00	; 0
    9896:	f5 46       	sbci	r31, 0x65	; 101
    9898:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    989a:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    989c:	8e 9f       	mul	r24, r30
    989e:	f0 01       	movw	r30, r0
    98a0:	11 24       	eor	r1, r1
    98a2:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    98a4:	ef 2f       	mov	r30, r31
    98a6:	ff 27       	eor	r31, r31
    98a8:	b7 01       	movw	r22, r14
    98aa:	6e 1b       	sub	r22, r30
    98ac:	7f 0b       	sbc	r23, r31
    98ae:	62 9f       	mul	r22, r18
    98b0:	c0 01       	movw	r24, r0
    98b2:	63 9f       	mul	r22, r19
    98b4:	90 0d       	add	r25, r0
    98b6:	72 9f       	mul	r23, r18
    98b8:	90 0d       	add	r25, r0
    98ba:	11 24       	eor	r1, r1
    98bc:	9c 01       	movw	r18, r24
    98be:	33 95       	inc	r19
					uVol>>=8;
    98c0:	23 2f       	mov	r18, r19
    98c2:	33 27       	eor	r19, r19
    98c4:	02 c0       	rjmp	.+4      	; 0x98ca <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    98c6:	20 e0       	ldi	r18, 0x00	; 0
    98c8:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    98ca:	8b 85       	ldd	r24, Y+11	; 0x0b
    98cc:	48 0f       	add	r20, r24
    98ce:	49 87       	std	Y+9, r20	; 0x09
    98d0:	02 c0       	rjmp	.+4      	; 0x98d6 <ProcessMusic+0x390>

		}else{
			uVol=0;
    98d2:	20 e0       	ldi	r18, 0x00	; 0
    98d4:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    98d6:	f8 01       	movw	r30, r16
    98d8:	20 83       	st	Z, r18
    98da:	67 96       	adiw	r28, 0x17	; 23
    98dc:	0a 5f       	subi	r16, 0xFA	; 250
    98de:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    98e0:	f9 e0       	ldi	r31, 0x09	; 9
    98e2:	ce 30       	cpi	r28, 0x0E	; 14
    98e4:	df 07       	cpc	r29, r31
    98e6:	09 f0       	breq	.+2      	; 0x98ea <ProcessMusic+0x3a4>
    98e8:	59 cf       	rjmp	.-334    	; 0x979c <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    98ea:	df 91       	pop	r29
    98ec:	cf 91       	pop	r28
    98ee:	1f 91       	pop	r17
    98f0:	0f 91       	pop	r16
    98f2:	ff 90       	pop	r15
    98f4:	ef 90       	pop	r14
    98f6:	08 95       	ret

000098f8 <SetMixerNote>:
    98f8:	99 27       	eor	r25, r25
    98fa:	77 27       	eor	r23, r23
    98fc:	83 30       	cpi	r24, 0x03	; 3
    98fe:	09 f4       	brne	.+2      	; 0x9902 <set_note_waves>
    9900:	08 95       	ret

00009902 <set_note_waves>:
    9902:	e0 e6       	ldi	r30, 0x60	; 96
    9904:	f9 e9       	ldi	r31, 0x99	; 153
    9906:	66 0f       	add	r22, r22
    9908:	77 1f       	adc	r23, r23
    990a:	e6 0f       	add	r30, r22
    990c:	f7 1f       	adc	r31, r23
    990e:	a5 91       	lpm	r26, Z+
    9910:	b4 91       	lpm	r27, Z
    9912:	e6 e7       	ldi	r30, 0x76	; 118
    9914:	f8 e0       	ldi	r31, 0x08	; 8
    9916:	26 e0       	ldi	r18, 0x06	; 6
    9918:	28 9f       	mul	r18, r24
    991a:	e0 0d       	add	r30, r0
    991c:	f1 1d       	adc	r31, r1
    991e:	a1 83       	std	Z+1, r26	; 0x01
    9920:	b2 83       	std	Z+2, r27	; 0x02
    9922:	11 24       	eor	r1, r1
    9924:	08 95       	ret

00009926 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    9926:	99 27       	eor	r25, r25
	clr r23
    9928:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    992a:	e6 e7       	ldi	r30, 0x76	; 118
	ldi ZH,hi8(mixerStruct)
    992c:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    992e:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    9930:	28 9f       	mul	r18, r24
	add ZL,r0
    9932:	e0 0d       	add	r30, r0
	adc ZH,r1
    9934:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    9936:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    9938:	31 f4       	brne	.+12     	; 0x9946 <smw1>
	lds r22,tr4_params
    993a:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	andi r22,0xfe;
    993e:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    9940:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw	
    9944:	0b c0       	rjmp	.+22     	; 0x995c <esmw>

00009946 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    9946:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    9948:	31 f4       	brne	.+12     	; 0x9956 <smw2>
	lds r22,tr4_params
    994a:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	ori r22,0xfe;
    994e:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    9950:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw
    9954:	03 c0       	rjmp	.+6      	; 0x995c <esmw>

00009956 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    9956:	7b e9       	ldi	r23, 0x9B	; 155
	add r23,r22
    9958:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    995a:	75 83       	std	Z+5, r23	; 0x05

0000995c <esmw>:
#endif

esmw:
	clr r1	
    995c:	11 24       	eor	r1, r1
	ret
    995e:	08 95       	ret

00009960 <steptable>:
    9960:	22 00       	.word	0x0022	; ????
    9962:	24 00       	.word	0x0024	; ????
    9964:	26 00       	.word	0x0026	; ????
    9966:	28 00       	.word	0x0028	; ????
    9968:	2b 00       	.word	0x002b	; ????
    996a:	2d 00       	.word	0x002d	; ????
    996c:	30 00       	.word	0x0030	; ????
    996e:	33 00       	.word	0x0033	; ????
    9970:	36 00       	.word	0x0036	; ????
    9972:	39 00       	.word	0x0039	; ????
    9974:	3d 00       	.word	0x003d	; ????
    9976:	40 00       	.word	0x0040	; ????
    9978:	44 00       	.word	0x0044	; ????
    997a:	48 00       	.word	0x0048	; ????
    997c:	4c 00       	.word	0x004c	; ????
    997e:	51 00       	.word	0x0051	; ????
    9980:	56 00       	.word	0x0056	; ????
    9982:	5b 00       	.word	0x005b	; ????
    9984:	60 00       	.word	0x0060	; ????
    9986:	66 00       	.word	0x0066	; ????
    9988:	6c 00       	.word	0x006c	; ????
    998a:	73 00       	.word	0x0073	; ????
    998c:	79 00       	.word	0x0079	; ????
    998e:	81 00       	.word	0x0081	; ????
    9990:	88 00       	.word	0x0088	; ????
    9992:	90 00       	.word	0x0090	; ????
    9994:	99 00       	.word	0x0099	; ????
    9996:	a2 00       	.word	0x00a2	; ????
    9998:	ac 00       	.word	0x00ac	; ????
    999a:	b6 00       	.word	0x00b6	; ????
    999c:	c1 00       	.word	0x00c1	; ????
    999e:	cc 00       	.word	0x00cc	; ????
    99a0:	d8 00       	.word	0x00d8	; ????
    99a2:	e5 00       	.word	0x00e5	; ????
    99a4:	f3 00       	.word	0x00f3	; ????
    99a6:	01 01       	movw	r0, r2
    99a8:	10 01       	movw	r2, r0
    99aa:	21 01       	movw	r4, r2
    99ac:	32 01       	movw	r6, r4
    99ae:	44 01       	movw	r8, r8
    99b0:	57 01       	movw	r10, r14
    99b2:	6c 01       	movw	r12, r24
    99b4:	81 01       	movw	r16, r2
    99b6:	98 01       	movw	r18, r16
    99b8:	b0 01       	movw	r22, r0
    99ba:	ca 01       	movw	r24, r20
    99bc:	e5 01       	movw	r28, r10
    99be:	02 02       	muls	r16, r18
    99c0:	21 02       	muls	r18, r17
    99c2:	41 02       	muls	r20, r17
    99c4:	64 02       	muls	r22, r20
    99c6:	88 02       	muls	r24, r24
    99c8:	ae 02       	muls	r26, r30
    99ca:	d7 02       	muls	r29, r23
    99cc:	03 03       	mulsu	r16, r19
    99ce:	30 03       	mulsu	r19, r16
    99d0:	61 03       	mulsu	r22, r17
    99d2:	94 03       	fmuls	r17, r20
    99d4:	cb 03       	fmulsu	r20, r19
    99d6:	05 04       	cpc	r0, r5
    99d8:	42 04       	cpc	r4, r2
    99da:	83 04       	cpc	r8, r3
    99dc:	c7 04       	cpc	r12, r7
    99de:	10 05       	cpc	r17, r0
    99e0:	5d 05       	cpc	r21, r13
    99e2:	af 05       	cpc	r26, r15
    99e4:	05 06       	cpc	r0, r21
    99e6:	61 06       	cpc	r6, r17
    99e8:	c2 06       	cpc	r12, r18
    99ea:	29 07       	cpc	r18, r25
    99ec:	96 07       	cpc	r25, r22
    99ee:	09 08       	sbc	r0, r9
    99f0:	83 08       	sbc	r8, r3
    99f2:	05 09       	sbc	r16, r5
    99f4:	8e 09       	sbc	r24, r14
    99f6:	20 0a       	sbc	r2, r16
    99f8:	ba 0a       	sbc	r11, r26
    99fa:	5d 0b       	sbc	r21, r29
    99fc:	0a 0c       	add	r0, r10
    99fe:	c1 0c       	add	r12, r1
    9a00:	84 0d       	add	r24, r4
    9a02:	51 0e       	add	r5, r17
    9a04:	2b 0f       	add	r18, r27
    9a06:	12 10       	cpse	r1, r2
    9a08:	07 11       	cpse	r16, r7
    9a0a:	0a 12       	cpse	r0, r26
    9a0c:	1d 13       	cpse	r17, r29
    9a0e:	40 14       	cp	r4, r0
    9a10:	74 15       	cp	r23, r4
    9a12:	ba 16       	cp	r11, r26
    9a14:	14 18       	sub	r1, r4
    9a16:	83 19       	sub	r24, r3
    9a18:	07 1b       	sub	r16, r23
    9a1a:	a3 1c       	adc	r10, r3
    9a1c:	57 1e       	adc	r5, r23
    9a1e:	24 20       	and	r2, r4
    9a20:	0e 22       	and	r0, r30
    9a22:	14 24       	eor	r1, r4
    9a24:	39 26       	eor	r3, r25
    9a26:	7f 28       	or	r7, r15
    9a28:	e8 2a       	or	r14, r24
    9a2a:	75 2d       	mov	r23, r5
    9a2c:	29 30       	cpi	r18, 0x09	; 9
    9a2e:	06 33       	cpi	r16, 0x36	; 54
    9a30:	0f 36       	cpi	r16, 0x6F	; 111
    9a32:	45 39       	cpi	r20, 0x95	; 149
    9a34:	ad 3c       	cpi	r26, 0xCD	; 205
    9a36:	49 40       	sbci	r20, 0x09	; 9
    9a38:	1b 44       	sbci	r17, 0x4B	; 75
    9a3a:	28 48       	sbci	r18, 0x88	; 136
    9a3c:	73 4c       	sbci	r23, 0xC3	; 195
    9a3e:	fe 50       	subi	r31, 0x0E	; 14
    9a40:	cf 55       	subi	r28, 0x5F	; 95
    9a42:	ea 5a       	subi	r30, 0xAA	; 170
    9a44:	51 60       	ori	r21, 0x01	; 1
    9a46:	0c 66       	ori	r16, 0x6C	; 108
    9a48:	1d 6c       	ori	r17, 0xCD	; 205
    9a4a:	8b 72       	andi	r24, 0x2B	; 43
    9a4c:	5a 79       	andi	r21, 0x9A	; 154
    9a4e:	92 80       	ldd	r9, Z+2	; 0x02
    9a50:	37 88       	ldd	r3, Z+23	; 0x17
    9a52:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x8ae5>
    9a56:	fd a1       	ldd	r31, Y+37	; 0x25
    9a58:	9f ab       	std	Y+55, r25	; 0x37
    9a5a:	d3 b5       	in	r29, 0x23	; 35
    9a5c:	a3 c0       	rjmp	.+326    	; 0x9ba4 <waves+0xa4>
	...

00009b00 <waves>:
    9b00:	00 03       	mulsu	r16, r16
    9b02:	06 09       	sbc	r16, r6
    9b04:	0c 10       	cpse	r0, r12
    9b06:	13 16       	cp	r1, r19
    9b08:	19 1c       	adc	r1, r9
    9b0a:	1f 22       	and	r1, r31
    9b0c:	25 28       	or	r2, r5
    9b0e:	2b 2e       	mov	r2, r27
    9b10:	31 33       	cpi	r19, 0x31	; 49
    9b12:	36 39       	cpi	r19, 0x96	; 150
    9b14:	3c 3f       	cpi	r19, 0xFC	; 252
    9b16:	41 44       	sbci	r20, 0x41	; 65
    9b18:	47 49       	sbci	r20, 0x97	; 151
    9b1a:	4c 4e       	sbci	r20, 0xEC	; 236
    9b1c:	51 53       	subi	r21, 0x31	; 49
    9b1e:	55 58       	subi	r21, 0x85	; 133
    9b20:	5a 5c       	subi	r21, 0xCA	; 202
    9b22:	5e 60       	ori	r21, 0x0E	; 14
    9b24:	62 64       	ori	r22, 0x42	; 66
    9b26:	66 68       	ori	r22, 0x86	; 134
    9b28:	6a 6b       	ori	r22, 0xBA	; 186
    9b2a:	6d 6f       	ori	r22, 0xFD	; 253
    9b2c:	70 71       	andi	r23, 0x10	; 16
    9b2e:	73 74       	andi	r23, 0x43	; 67
    9b30:	75 76       	andi	r23, 0x65	; 101
    9b32:	78 79       	andi	r23, 0x98	; 152
    9b34:	7a 7a       	andi	r23, 0xAA	; 170
    9b36:	7b 7c       	andi	r23, 0xCB	; 203
    9b38:	7d 7d       	andi	r23, 0xDD	; 221
    9b3a:	7e 7e       	andi	r23, 0xEE	; 238
    9b3c:	7e 7f       	andi	r23, 0xFE	; 254
    9b3e:	7f 7f       	andi	r23, 0xFF	; 255
    9b40:	7f 7f       	andi	r23, 0xFF	; 255
    9b42:	7f 7f       	andi	r23, 0xFF	; 255
    9b44:	7e 7e       	andi	r23, 0xEE	; 238
    9b46:	7e 7d       	andi	r23, 0xDE	; 222
    9b48:	7d 7c       	andi	r23, 0xCD	; 205
    9b4a:	7b 7a       	andi	r23, 0xAB	; 171
    9b4c:	7a 79       	andi	r23, 0x9A	; 154
    9b4e:	78 76       	andi	r23, 0x68	; 104
    9b50:	75 74       	andi	r23, 0x45	; 69
    9b52:	73 71       	andi	r23, 0x13	; 19
    9b54:	70 6f       	ori	r23, 0xF0	; 240
    9b56:	6d 6b       	ori	r22, 0xBD	; 189
    9b58:	6a 68       	ori	r22, 0x8A	; 138
    9b5a:	66 64       	ori	r22, 0x46	; 70
    9b5c:	62 60       	ori	r22, 0x02	; 2
    9b5e:	5e 5c       	subi	r21, 0xCE	; 206
    9b60:	5a 58       	subi	r21, 0x8A	; 138
    9b62:	55 53       	subi	r21, 0x35	; 53
    9b64:	51 4e       	sbci	r21, 0xE1	; 225
    9b66:	4c 49       	sbci	r20, 0x9C	; 156
    9b68:	47 44       	sbci	r20, 0x47	; 71
    9b6a:	41 3f       	cpi	r20, 0xF1	; 241
    9b6c:	3c 39       	cpi	r19, 0x9C	; 156
    9b6e:	36 33       	cpi	r19, 0x36	; 54
    9b70:	31 2e       	mov	r3, r17
    9b72:	2b 28       	or	r2, r11
    9b74:	25 22       	and	r2, r21
    9b76:	1f 1c       	adc	r1, r15
    9b78:	19 16       	cp	r1, r25
    9b7a:	13 10       	cpse	r1, r3
    9b7c:	0c 09       	sbc	r16, r12
    9b7e:	06 03       	mulsu	r16, r22
    9b80:	00 fd       	sbrc	r16, 0
    9b82:	fa f7       	brpl	.-2      	; 0x9b82 <waves+0x82>
    9b84:	f4 f0       	brlt	.+60     	; 0x9bc2 <waves+0xc2>
    9b86:	ed ea       	ldi	r30, 0xAD	; 173
    9b88:	e7 e4       	ldi	r30, 0x47	; 71
    9b8a:	e1 de       	rcall	.-574    	; 0x994e <smw1+0x8>
    9b8c:	db d8       	rcall	.-3658   	; 0x8d44 <no_render+0x20>
    9b8e:	d5 d2       	rcall	.+1450   	; 0xa13a <waves+0x63a>
    9b90:	cf cd       	rjmp	.-1122   	; 0x9730 <ProcessMusic+0x1ea>
    9b92:	ca c7       	rjmp	.+3988   	; 0xab28 <drawplayer+0xc4>
    9b94:	c4 c1       	rjmp	.+904    	; 0x9f1e <waves+0x41e>
    9b96:	bf bc       	out	0x2f, r11	; 47
    9b98:	b9 b7       	in	r27, 0x39	; 57
    9b9a:	b4 b2       	in	r11, 0x14	; 20
    9b9c:	af ad       	ldd	r26, Y+63	; 0x3f
    9b9e:	ab a8       	ldd	r10, Y+51	; 0x33
    9ba0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    9ba2:	a2 a0       	ldd	r10, Z+34	; 0x22
    9ba4:	9e 9c       	mul	r9, r14
    9ba6:	9a 98       	cbi	0x13, 2	; 19
    9ba8:	96 95       	lsr	r25
    9baa:	93 91       	.word	0x9193	; ????
    9bac:	90 8f       	std	Z+24, r25	; 0x18
    9bae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9bb0:	8b 8a       	std	Y+19, r8	; 0x13
    9bb2:	88 87       	std	Y+8, r24	; 0x08
    9bb4:	86 86       	std	Z+14, r8	; 0x0e
    9bb6:	85 84       	ldd	r8, Z+13	; 0x0d
    9bb8:	83 83       	std	Z+3, r24	; 0x03
    9bba:	82 82       	std	Z+2, r8	; 0x02
    9bbc:	82 81       	ldd	r24, Z+2	; 0x02
    9bbe:	81 81       	ldd	r24, Z+1	; 0x01
    9bc0:	81 81       	ldd	r24, Z+1	; 0x01
    9bc2:	81 81       	ldd	r24, Z+1	; 0x01
    9bc4:	82 82       	std	Z+2, r8	; 0x02
    9bc6:	82 83       	std	Z+2, r24	; 0x02
    9bc8:	83 84       	ldd	r8, Z+11	; 0x0b
    9bca:	85 86       	std	Z+13, r8	; 0x0d
    9bcc:	86 87       	std	Z+14, r24	; 0x0e
    9bce:	88 8a       	std	Y+16, r8	; 0x10
    9bd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    9bd2:	8d 8f       	std	Y+29, r24	; 0x1d
    9bd4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8793>
    9bd8:	96 98       	cbi	0x12, 6	; 18
    9bda:	9a 9c       	mul	r9, r10
    9bdc:	9e a0       	ldd	r9, Y+38	; 0x26
    9bde:	a2 a4       	ldd	r10, Z+42	; 0x2a
    9be0:	a6 a8       	ldd	r10, Z+54	; 0x36
    9be2:	ab ad       	ldd	r26, Y+59	; 0x3b
    9be4:	af b2       	in	r10, 0x1f	; 31
    9be6:	b4 b7       	in	r27, 0x34	; 52
    9be8:	b9 bc       	out	0x29, r11	; 41
    9bea:	bf c1       	rjmp	.+894    	; 0x9f6a <waves+0x46a>
    9bec:	c4 c7       	rjmp	.+3976   	; 0xab76 <drawplayer+0x112>
    9bee:	ca cd       	rjmp	.-1132   	; 0x9784 <ProcessMusic+0x23e>
    9bf0:	cf d2       	rcall	.+1438   	; 0xa190 <waves+0x690>
    9bf2:	d5 d8       	rcall	.-3670   	; 0x8d9e <no_render+0x7a>
    9bf4:	db de       	rcall	.-586    	; 0x99ac <steptable+0x4c>
    9bf6:	e1 e4       	ldi	r30, 0x41	; 65
    9bf8:	e7 ea       	ldi	r30, 0xA7	; 167
    9bfa:	ed f0       	brhs	.+58     	; 0x9c36 <waves+0x136>
    9bfc:	f4 f7       	brge	.-4      	; 0x9bfa <waves+0xfa>
    9bfe:	fa fd       	.word	0xfdfa	; ????
    9c00:	80 81       	ld	r24, Z
    9c02:	82 83       	std	Z+2, r24	; 0x02
    9c04:	84 85       	ldd	r24, Z+12	; 0x0c
    9c06:	86 87       	std	Z+14, r24	; 0x0e
    9c08:	88 89       	ldd	r24, Y+16	; 0x10
    9c0a:	8a 8b       	std	Y+18, r24	; 0x12
    9c0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9c0e:	8e 8f       	std	Y+30, r24	; 0x1e
    9c10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8592>
    9c14:	94 95       	.word	0x9594	; ????
    9c16:	96 97       	sbiw	r26, 0x26	; 38
    9c18:	98 99       	sbic	0x13, 0	; 19
    9c1a:	9a 9b       	sbis	0x13, 2	; 19
    9c1c:	9c 9d       	mul	r25, r12
    9c1e:	9e 9f       	mul	r25, r30
    9c20:	a0 a1       	ldd	r26, Z+32	; 0x20
    9c22:	a2 a3       	std	Z+34, r26	; 0x22
    9c24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9c26:	a6 a7       	std	Z+46, r26	; 0x2e
    9c28:	a8 a9       	ldd	r26, Y+48	; 0x30
    9c2a:	aa ab       	std	Y+50, r26	; 0x32
    9c2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    9c2e:	ae af       	std	Y+62, r26	; 0x3e
    9c30:	b0 b1       	in	r27, 0x00	; 0
    9c32:	b2 b3       	in	r27, 0x12	; 18
    9c34:	b4 b5       	in	r27, 0x24	; 36
    9c36:	b6 b7       	in	r27, 0x36	; 54
    9c38:	b8 b9       	out	0x08, r27	; 8
    9c3a:	ba bb       	out	0x1a, r27	; 26
    9c3c:	bc bd       	out	0x2c, r27	; 44
    9c3e:	be bf       	out	0x3e, r27	; 62
    9c40:	c0 c1       	rjmp	.+896    	; 0x9fc2 <waves+0x4c2>
    9c42:	c2 c3       	rjmp	.+1924   	; 0xa3c8 <waves+0x8c8>
    9c44:	c4 c5       	rjmp	.+2952   	; 0xa7ce <MapSprite2+0x3e>
    9c46:	c6 c7       	rjmp	.+3980   	; 0xabd4 <drawplayer2+0x18>
    9c48:	c8 c9       	rjmp	.-3184   	; 0x8fda <ReadEeprom+0x6>
    9c4a:	ca cb       	rjmp	.-2156   	; 0x93e0 <TriggerCommon+0xac>
    9c4c:	cc cd       	rjmp	.-1128   	; 0x97e6 <ProcessMusic+0x2a0>
    9c4e:	ce cf       	rjmp	.-100    	; 0x9bec <waves+0xec>
    9c50:	d0 d1       	rcall	.+928    	; 0x9ff2 <waves+0x4f2>
    9c52:	d2 d3       	rcall	.+1956   	; 0xa3f8 <waves+0x8f8>
    9c54:	d4 d5       	rcall	.+2984   	; 0xa7fe <MapSprite2+0x6e>
    9c56:	d6 d7       	rcall	.+4012   	; 0xac04 <drawplayer2+0x48>
    9c58:	d8 d9       	rcall	.-3152   	; 0x900a <ReadButtons+0x1a>
    9c5a:	da db       	rcall	.-2124   	; 0x9410 <TriggerCommon+0xdc>
    9c5c:	dc dd       	rcall	.-1096   	; 0x9816 <ProcessMusic+0x2d0>
    9c5e:	de df       	rcall	.-68     	; 0x9c1c <waves+0x11c>
    9c60:	e0 e1       	ldi	r30, 0x10	; 16
    9c62:	e2 e3       	ldi	r30, 0x32	; 50
    9c64:	e4 e5       	ldi	r30, 0x54	; 84
    9c66:	e6 e7       	ldi	r30, 0x76	; 118
    9c68:	e8 e9       	ldi	r30, 0x98	; 152
    9c6a:	ea eb       	ldi	r30, 0xBA	; 186
    9c6c:	ec ed       	ldi	r30, 0xDC	; 220
    9c6e:	ee ef       	ldi	r30, 0xFE	; 254
    9c70:	f0 f1       	brcs	.+124    	; 0x9cee <waves+0x1ee>
    9c72:	f2 f3       	brmi	.-4      	; 0x9c70 <waves+0x170>
    9c74:	f4 f5       	brge	.+124    	; 0x9cf2 <waves+0x1f2>
    9c76:	f6 f7       	brtc	.-4      	; 0x9c74 <waves+0x174>
    9c78:	f8 f9       	.word	0xf9f8	; ????
    9c7a:	fa fb       	.word	0xfbfa	; ????
    9c7c:	fc fd       	.word	0xfdfc	; ????
    9c7e:	fe ff       	.word	0xfffe	; ????
    9c80:	00 01       	movw	r0, r0
    9c82:	02 03       	mulsu	r16, r18
    9c84:	04 05       	cpc	r16, r4
    9c86:	06 07       	cpc	r16, r22
    9c88:	08 09       	sbc	r16, r8
    9c8a:	0a 0b       	sbc	r16, r26
    9c8c:	0c 0d       	add	r16, r12
    9c8e:	0e 0f       	add	r16, r30
    9c90:	10 11       	cpse	r17, r0
    9c92:	12 13       	cpse	r17, r18
    9c94:	14 15       	cp	r17, r4
    9c96:	16 17       	cp	r17, r22
    9c98:	18 19       	sub	r17, r8
    9c9a:	1a 1b       	sub	r17, r26
    9c9c:	1c 1d       	adc	r17, r12
    9c9e:	1e 1f       	adc	r17, r30
    9ca0:	20 21       	and	r18, r0
    9ca2:	22 23       	and	r18, r18
    9ca4:	24 25       	eor	r18, r4
    9ca6:	26 27       	eor	r18, r22
    9ca8:	28 29       	or	r18, r8
    9caa:	2a 2b       	or	r18, r26
    9cac:	2c 2d       	mov	r18, r12
    9cae:	2e 2f       	mov	r18, r30
    9cb0:	30 31       	cpi	r19, 0x10	; 16
    9cb2:	32 33       	cpi	r19, 0x32	; 50
    9cb4:	34 35       	cpi	r19, 0x54	; 84
    9cb6:	36 37       	cpi	r19, 0x76	; 118
    9cb8:	38 39       	cpi	r19, 0x98	; 152
    9cba:	3a 3b       	cpi	r19, 0xBA	; 186
    9cbc:	3c 3d       	cpi	r19, 0xDC	; 220
    9cbe:	3e 3f       	cpi	r19, 0xFE	; 254
    9cc0:	40 41       	sbci	r20, 0x10	; 16
    9cc2:	42 43       	sbci	r20, 0x32	; 50
    9cc4:	44 45       	sbci	r20, 0x54	; 84
    9cc6:	46 47       	sbci	r20, 0x76	; 118
    9cc8:	48 49       	sbci	r20, 0x98	; 152
    9cca:	4a 4b       	sbci	r20, 0xBA	; 186
    9ccc:	4c 4d       	sbci	r20, 0xDC	; 220
    9cce:	4e 4f       	sbci	r20, 0xFE	; 254
    9cd0:	50 51       	subi	r21, 0x10	; 16
    9cd2:	52 53       	subi	r21, 0x32	; 50
    9cd4:	54 55       	subi	r21, 0x54	; 84
    9cd6:	56 57       	subi	r21, 0x76	; 118
    9cd8:	58 59       	subi	r21, 0x98	; 152
    9cda:	5a 5b       	subi	r21, 0xBA	; 186
    9cdc:	5c 5d       	subi	r21, 0xDC	; 220
    9cde:	5e 5f       	subi	r21, 0xFE	; 254
    9ce0:	60 61       	ori	r22, 0x10	; 16
    9ce2:	62 63       	ori	r22, 0x32	; 50
    9ce4:	64 65       	ori	r22, 0x54	; 84
    9ce6:	66 67       	ori	r22, 0x76	; 118
    9ce8:	68 69       	ori	r22, 0x98	; 152
    9cea:	6a 6b       	ori	r22, 0xBA	; 186
    9cec:	6c 6d       	ori	r22, 0xDC	; 220
    9cee:	6e 6f       	ori	r22, 0xFE	; 254
    9cf0:	70 71       	andi	r23, 0x10	; 16
    9cf2:	72 73       	andi	r23, 0x32	; 50
    9cf4:	74 75       	andi	r23, 0x54	; 84
    9cf6:	76 77       	andi	r23, 0x76	; 118
    9cf8:	78 79       	andi	r23, 0x98	; 152
    9cfa:	7a 7b       	andi	r23, 0xBA	; 186
    9cfc:	7c 7d       	andi	r23, 0xDC	; 220
    9cfe:	7e 7f       	andi	r23, 0xFE	; 254
    9d00:	00 02       	muls	r16, r16
    9d02:	04 06       	cpc	r0, r20
    9d04:	08 0a       	sbc	r0, r24
    9d06:	0c 0e       	add	r0, r28
    9d08:	10 12       	cpse	r1, r16
    9d0a:	14 16       	cp	r1, r20
    9d0c:	18 1a       	sub	r1, r24
    9d0e:	1c 1e       	adc	r1, r28
    9d10:	20 22       	and	r2, r16
    9d12:	24 26       	eor	r2, r20
    9d14:	28 2a       	or	r2, r24
    9d16:	2c 2e       	mov	r2, r28
    9d18:	30 32       	cpi	r19, 0x20	; 32
    9d1a:	34 36       	cpi	r19, 0x64	; 100
    9d1c:	38 3a       	cpi	r19, 0xA8	; 168
    9d1e:	3c 3e       	cpi	r19, 0xEC	; 236
    9d20:	40 42       	sbci	r20, 0x20	; 32
    9d22:	44 46       	sbci	r20, 0x64	; 100
    9d24:	48 4a       	sbci	r20, 0xA8	; 168
    9d26:	4c 4e       	sbci	r20, 0xEC	; 236
    9d28:	50 52       	subi	r21, 0x20	; 32
    9d2a:	54 56       	subi	r21, 0x64	; 100
    9d2c:	58 5a       	subi	r21, 0xA8	; 168
    9d2e:	5c 5e       	subi	r21, 0xEC	; 236
    9d30:	60 62       	ori	r22, 0x20	; 32
    9d32:	64 66       	ori	r22, 0x64	; 100
    9d34:	68 6a       	ori	r22, 0xA8	; 168
    9d36:	6c 6e       	ori	r22, 0xEC	; 236
    9d38:	70 72       	andi	r23, 0x20	; 32
    9d3a:	74 76       	andi	r23, 0x64	; 100
    9d3c:	78 7a       	andi	r23, 0xA8	; 168
    9d3e:	7c 7e       	andi	r23, 0xEC	; 236
    9d40:	7f 7d       	andi	r23, 0xDF	; 223
    9d42:	7b 79       	andi	r23, 0x9B	; 155
    9d44:	77 75       	andi	r23, 0x57	; 87
    9d46:	73 71       	andi	r23, 0x13	; 19
    9d48:	6f 6d       	ori	r22, 0xDF	; 223
    9d4a:	6b 69       	ori	r22, 0x9B	; 155
    9d4c:	67 65       	ori	r22, 0x57	; 87
    9d4e:	63 61       	ori	r22, 0x13	; 19
    9d50:	5f 5d       	subi	r21, 0xDF	; 223
    9d52:	5b 59       	subi	r21, 0x9B	; 155
    9d54:	57 55       	subi	r21, 0x57	; 87
    9d56:	53 51       	subi	r21, 0x13	; 19
    9d58:	4f 4d       	sbci	r20, 0xDF	; 223
    9d5a:	4b 49       	sbci	r20, 0x9B	; 155
    9d5c:	47 45       	sbci	r20, 0x57	; 87
    9d5e:	43 41       	sbci	r20, 0x13	; 19
    9d60:	3f 3d       	cpi	r19, 0xDF	; 223
    9d62:	3b 39       	cpi	r19, 0x9B	; 155
    9d64:	37 35       	cpi	r19, 0x57	; 87
    9d66:	33 31       	cpi	r19, 0x13	; 19
    9d68:	2f 2d       	mov	r18, r15
    9d6a:	2b 29       	or	r18, r11
    9d6c:	27 25       	eor	r18, r7
    9d6e:	23 21       	and	r18, r3
    9d70:	1f 1d       	adc	r17, r15
    9d72:	1b 19       	sub	r17, r11
    9d74:	17 15       	cp	r17, r7
    9d76:	13 11       	cpse	r17, r3
    9d78:	0f 0d       	add	r16, r15
    9d7a:	0b 09       	sbc	r16, r11
    9d7c:	07 05       	cpc	r16, r7
    9d7e:	03 01       	movw	r0, r6
    9d80:	ff fd       	.word	0xfdff	; ????
    9d82:	fb f9       	.word	0xf9fb	; ????
    9d84:	f7 f5       	brid	.+124    	; 0x9e02 <waves+0x302>
    9d86:	f3 f1       	brvs	.+124    	; 0x9e04 <waves+0x304>
    9d88:	ef ed       	ldi	r30, 0xDF	; 223
    9d8a:	eb e9       	ldi	r30, 0x9B	; 155
    9d8c:	e7 e5       	ldi	r30, 0x57	; 87
    9d8e:	e3 e1       	ldi	r30, 0x13	; 19
    9d90:	df dd       	rcall	.-1090   	; 0x9950 <smw1+0xa>
    9d92:	db d9       	rcall	.-3146   	; 0x914a <PatchCommand11+0x20>
    9d94:	d7 d5       	rcall	.+2990   	; 0xa944 <DisplayLogo+0x14>
    9d96:	d3 d1       	rcall	.+934    	; 0xa13e <waves+0x63e>
    9d98:	cf cd       	rjmp	.-1122   	; 0x9938 <SetMixerWave+0x12>
    9d9a:	cb c9       	rjmp	.-3178   	; 0x9132 <PatchCommand11+0x8>
    9d9c:	c7 c5       	rjmp	.+2958   	; 0xa92c <WaitVsync+0x2a>
    9d9e:	c3 c1       	rjmp	.+902    	; 0xa126 <waves+0x626>
    9da0:	bf bd       	out	0x2f, r27	; 47
    9da2:	bb b9       	out	0x0b, r27	; 11
    9da4:	b7 b5       	in	r27, 0x27	; 39
    9da6:	b3 b1       	in	r27, 0x03	; 3
    9da8:	af ad       	ldd	r26, Y+63	; 0x3f
    9daa:	ab a9       	ldd	r26, Y+51	; 0x33
    9dac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    9dae:	a3 a1       	ldd	r26, Z+35	; 0x23
    9db0:	9f 9d       	mul	r25, r15
    9db2:	9b 99       	sbic	0x13, 3	; 19
    9db4:	97 95       	ror	r25
    9db6:	93 91       	.word	0x9193	; ????
    9db8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9dba:	8b 89       	ldd	r24, Y+19	; 0x13
    9dbc:	87 85       	ldd	r24, Z+15	; 0x0f
    9dbe:	83 81       	ldd	r24, Z+3	; 0x03
    9dc0:	80 82       	st	Z, r8
    9dc2:	84 86       	std	Z+12, r8	; 0x0c
    9dc4:	88 8a       	std	Y+16, r8	; 0x10
    9dc6:	8c 8e       	std	Y+28, r8	; 0x1c
    9dc8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8894>
    9dcc:	98 9a       	sbi	0x13, 0	; 19
    9dce:	9c 9e       	mul	r9, r28
    9dd0:	a0 a2       	std	Z+32, r10	; 0x20
    9dd2:	a4 a6       	std	Z+44, r10	; 0x2c
    9dd4:	a8 aa       	std	Y+48, r10	; 0x30
    9dd6:	ac ae       	std	Y+60, r10	; 0x3c
    9dd8:	b0 b2       	in	r11, 0x10	; 16
    9dda:	b4 b6       	in	r11, 0x34	; 52
    9ddc:	b8 ba       	out	0x18, r11	; 24
    9dde:	bc be       	out	0x3c, r11	; 60
    9de0:	c0 c2       	rjmp	.+1408   	; 0xa362 <waves+0x862>
    9de2:	c4 c6       	rjmp	.+3464   	; 0xab6c <drawplayer+0x108>
    9de4:	c8 ca       	rjmp	.-2672   	; 0x9376 <TriggerCommon+0x42>
    9de6:	cc ce       	rjmp	.-616    	; 0x9b80 <waves+0x80>
    9de8:	d0 d2       	rcall	.+1440   	; 0xa38a <waves+0x88a>
    9dea:	d4 d6       	rcall	.+3496   	; 0xab94 <drawplayer+0x130>
    9dec:	d8 da       	rcall	.-2640   	; 0x939e <TriggerCommon+0x6a>
    9dee:	dc de       	rcall	.-584    	; 0x9ba8 <waves+0xa8>
    9df0:	e0 e2       	ldi	r30, 0x20	; 32
    9df2:	e4 e6       	ldi	r30, 0x64	; 100
    9df4:	e8 ea       	ldi	r30, 0xA8	; 168
    9df6:	ec ee       	ldi	r30, 0xEC	; 236
    9df8:	f0 f2       	brcs	.-68     	; 0x9db6 <waves+0x2b6>
    9dfa:	f4 f6       	brge	.-68     	; 0x9db8 <waves+0x2b8>
    9dfc:	f8 fa       	.word	0xfaf8	; ????
    9dfe:	fc fe       	.word	0xfefc	; ????
    9e00:	7f 7f       	andi	r23, 0xFF	; 255
    9e02:	7f 7f       	andi	r23, 0xFF	; 255
    9e04:	7f 7f       	andi	r23, 0xFF	; 255
    9e06:	7f 7f       	andi	r23, 0xFF	; 255
    9e08:	7f 7f       	andi	r23, 0xFF	; 255
    9e0a:	7f 7f       	andi	r23, 0xFF	; 255
    9e0c:	7f 7f       	andi	r23, 0xFF	; 255
    9e0e:	7f 7f       	andi	r23, 0xFF	; 255
    9e10:	7f 7f       	andi	r23, 0xFF	; 255
    9e12:	7f 7f       	andi	r23, 0xFF	; 255
    9e14:	7f 7f       	andi	r23, 0xFF	; 255
    9e16:	7f 7f       	andi	r23, 0xFF	; 255
    9e18:	7f 7f       	andi	r23, 0xFF	; 255
    9e1a:	7f 7f       	andi	r23, 0xFF	; 255
    9e1c:	7f 7f       	andi	r23, 0xFF	; 255
    9e1e:	7f 7f       	andi	r23, 0xFF	; 255
    9e20:	7f 7f       	andi	r23, 0xFF	; 255
    9e22:	7f 7f       	andi	r23, 0xFF	; 255
    9e24:	7f 7f       	andi	r23, 0xFF	; 255
    9e26:	7f 7f       	andi	r23, 0xFF	; 255
    9e28:	7f 7f       	andi	r23, 0xFF	; 255
    9e2a:	7f 7f       	andi	r23, 0xFF	; 255
    9e2c:	7f 7f       	andi	r23, 0xFF	; 255
    9e2e:	7f 7f       	andi	r23, 0xFF	; 255
    9e30:	7f 7f       	andi	r23, 0xFF	; 255
    9e32:	7f 7f       	andi	r23, 0xFF	; 255
    9e34:	7f 7f       	andi	r23, 0xFF	; 255
    9e36:	7f 7f       	andi	r23, 0xFF	; 255
    9e38:	7f 7f       	andi	r23, 0xFF	; 255
    9e3a:	7f 7f       	andi	r23, 0xFF	; 255
    9e3c:	7f 7f       	andi	r23, 0xFF	; 255
    9e3e:	7f 7f       	andi	r23, 0xFF	; 255
    9e40:	80 80       	ld	r8, Z
    9e42:	80 80       	ld	r8, Z
    9e44:	80 80       	ld	r8, Z
    9e46:	80 80       	ld	r8, Z
    9e48:	80 80       	ld	r8, Z
    9e4a:	80 80       	ld	r8, Z
    9e4c:	80 80       	ld	r8, Z
    9e4e:	80 80       	ld	r8, Z
    9e50:	80 80       	ld	r8, Z
    9e52:	80 80       	ld	r8, Z
    9e54:	80 80       	ld	r8, Z
    9e56:	80 80       	ld	r8, Z
    9e58:	80 80       	ld	r8, Z
    9e5a:	80 80       	ld	r8, Z
    9e5c:	80 80       	ld	r8, Z
    9e5e:	80 80       	ld	r8, Z
    9e60:	80 80       	ld	r8, Z
    9e62:	80 80       	ld	r8, Z
    9e64:	80 80       	ld	r8, Z
    9e66:	80 80       	ld	r8, Z
    9e68:	80 80       	ld	r8, Z
    9e6a:	80 80       	ld	r8, Z
    9e6c:	80 80       	ld	r8, Z
    9e6e:	80 80       	ld	r8, Z
    9e70:	80 80       	ld	r8, Z
    9e72:	80 80       	ld	r8, Z
    9e74:	80 80       	ld	r8, Z
    9e76:	80 80       	ld	r8, Z
    9e78:	80 80       	ld	r8, Z
    9e7a:	80 80       	ld	r8, Z
    9e7c:	80 80       	ld	r8, Z
    9e7e:	80 80       	ld	r8, Z
    9e80:	80 80       	ld	r8, Z
    9e82:	80 80       	ld	r8, Z
    9e84:	80 80       	ld	r8, Z
    9e86:	80 80       	ld	r8, Z
    9e88:	80 80       	ld	r8, Z
    9e8a:	80 80       	ld	r8, Z
    9e8c:	80 80       	ld	r8, Z
    9e8e:	80 80       	ld	r8, Z
    9e90:	80 80       	ld	r8, Z
    9e92:	80 80       	ld	r8, Z
    9e94:	80 80       	ld	r8, Z
    9e96:	80 80       	ld	r8, Z
    9e98:	80 80       	ld	r8, Z
    9e9a:	80 80       	ld	r8, Z
    9e9c:	80 80       	ld	r8, Z
    9e9e:	80 80       	ld	r8, Z
    9ea0:	80 80       	ld	r8, Z
    9ea2:	80 80       	ld	r8, Z
    9ea4:	80 80       	ld	r8, Z
    9ea6:	80 80       	ld	r8, Z
    9ea8:	80 80       	ld	r8, Z
    9eaa:	80 80       	ld	r8, Z
    9eac:	80 80       	ld	r8, Z
    9eae:	80 80       	ld	r8, Z
    9eb0:	80 80       	ld	r8, Z
    9eb2:	80 80       	ld	r8, Z
    9eb4:	80 80       	ld	r8, Z
    9eb6:	80 80       	ld	r8, Z
    9eb8:	80 80       	ld	r8, Z
    9eba:	80 80       	ld	r8, Z
    9ebc:	80 80       	ld	r8, Z
    9ebe:	80 80       	ld	r8, Z
    9ec0:	80 80       	ld	r8, Z
    9ec2:	80 80       	ld	r8, Z
    9ec4:	80 80       	ld	r8, Z
    9ec6:	80 80       	ld	r8, Z
    9ec8:	80 80       	ld	r8, Z
    9eca:	80 80       	ld	r8, Z
    9ecc:	80 80       	ld	r8, Z
    9ece:	80 80       	ld	r8, Z
    9ed0:	80 80       	ld	r8, Z
    9ed2:	80 80       	ld	r8, Z
    9ed4:	80 80       	ld	r8, Z
    9ed6:	80 80       	ld	r8, Z
    9ed8:	80 80       	ld	r8, Z
    9eda:	80 80       	ld	r8, Z
    9edc:	80 80       	ld	r8, Z
    9ede:	80 80       	ld	r8, Z
    9ee0:	80 80       	ld	r8, Z
    9ee2:	80 80       	ld	r8, Z
    9ee4:	80 80       	ld	r8, Z
    9ee6:	80 80       	ld	r8, Z
    9ee8:	80 80       	ld	r8, Z
    9eea:	80 80       	ld	r8, Z
    9eec:	80 80       	ld	r8, Z
    9eee:	80 80       	ld	r8, Z
    9ef0:	80 80       	ld	r8, Z
    9ef2:	80 80       	ld	r8, Z
    9ef4:	80 80       	ld	r8, Z
    9ef6:	80 80       	ld	r8, Z
    9ef8:	80 80       	ld	r8, Z
    9efa:	80 80       	ld	r8, Z
    9efc:	80 80       	ld	r8, Z
    9efe:	80 80       	ld	r8, Z
    9f00:	7f 7f       	andi	r23, 0xFF	; 255
    9f02:	7f 7f       	andi	r23, 0xFF	; 255
    9f04:	7f 7f       	andi	r23, 0xFF	; 255
    9f06:	7f 7f       	andi	r23, 0xFF	; 255
    9f08:	7f 7f       	andi	r23, 0xFF	; 255
    9f0a:	7f 7f       	andi	r23, 0xFF	; 255
    9f0c:	7f 7f       	andi	r23, 0xFF	; 255
    9f0e:	7f 7f       	andi	r23, 0xFF	; 255
    9f10:	7f 7f       	andi	r23, 0xFF	; 255
    9f12:	7f 7f       	andi	r23, 0xFF	; 255
    9f14:	7f 7f       	andi	r23, 0xFF	; 255
    9f16:	7f 7f       	andi	r23, 0xFF	; 255
    9f18:	7f 7f       	andi	r23, 0xFF	; 255
    9f1a:	7f 7f       	andi	r23, 0xFF	; 255
    9f1c:	7f 7f       	andi	r23, 0xFF	; 255
    9f1e:	7f 7f       	andi	r23, 0xFF	; 255
    9f20:	7f 7f       	andi	r23, 0xFF	; 255
    9f22:	7f 7f       	andi	r23, 0xFF	; 255
    9f24:	7f 7f       	andi	r23, 0xFF	; 255
    9f26:	7f 7f       	andi	r23, 0xFF	; 255
    9f28:	7f 7f       	andi	r23, 0xFF	; 255
    9f2a:	7f 7f       	andi	r23, 0xFF	; 255
    9f2c:	7f 7f       	andi	r23, 0xFF	; 255
    9f2e:	7f 7f       	andi	r23, 0xFF	; 255
    9f30:	7f 7f       	andi	r23, 0xFF	; 255
    9f32:	7f 7f       	andi	r23, 0xFF	; 255
    9f34:	7f 7f       	andi	r23, 0xFF	; 255
    9f36:	7f 7f       	andi	r23, 0xFF	; 255
    9f38:	7f 7f       	andi	r23, 0xFF	; 255
    9f3a:	7f 7f       	andi	r23, 0xFF	; 255
    9f3c:	7f 7f       	andi	r23, 0xFF	; 255
    9f3e:	7f 7f       	andi	r23, 0xFF	; 255
    9f40:	7f 7f       	andi	r23, 0xFF	; 255
    9f42:	7f 7f       	andi	r23, 0xFF	; 255
    9f44:	7f 7f       	andi	r23, 0xFF	; 255
    9f46:	7f 7f       	andi	r23, 0xFF	; 255
    9f48:	7f 7f       	andi	r23, 0xFF	; 255
    9f4a:	7f 7f       	andi	r23, 0xFF	; 255
    9f4c:	7f 7f       	andi	r23, 0xFF	; 255
    9f4e:	7f 7f       	andi	r23, 0xFF	; 255
    9f50:	7f 7f       	andi	r23, 0xFF	; 255
    9f52:	7f 7f       	andi	r23, 0xFF	; 255
    9f54:	7f 7f       	andi	r23, 0xFF	; 255
    9f56:	7f 7f       	andi	r23, 0xFF	; 255
    9f58:	7f 7f       	andi	r23, 0xFF	; 255
    9f5a:	7f 7f       	andi	r23, 0xFF	; 255
    9f5c:	7f 7f       	andi	r23, 0xFF	; 255
    9f5e:	7f 7f       	andi	r23, 0xFF	; 255
    9f60:	7f 7f       	andi	r23, 0xFF	; 255
    9f62:	7f 7f       	andi	r23, 0xFF	; 255
    9f64:	7f 7f       	andi	r23, 0xFF	; 255
    9f66:	7f 7f       	andi	r23, 0xFF	; 255
    9f68:	7f 7f       	andi	r23, 0xFF	; 255
    9f6a:	7f 7f       	andi	r23, 0xFF	; 255
    9f6c:	7f 7f       	andi	r23, 0xFF	; 255
    9f6e:	7f 7f       	andi	r23, 0xFF	; 255
    9f70:	7f 7f       	andi	r23, 0xFF	; 255
    9f72:	7f 7f       	andi	r23, 0xFF	; 255
    9f74:	7f 7f       	andi	r23, 0xFF	; 255
    9f76:	7f 7f       	andi	r23, 0xFF	; 255
    9f78:	7f 7f       	andi	r23, 0xFF	; 255
    9f7a:	7f 7f       	andi	r23, 0xFF	; 255
    9f7c:	7f 7f       	andi	r23, 0xFF	; 255
    9f7e:	7f 7f       	andi	r23, 0xFF	; 255
    9f80:	80 80       	ld	r8, Z
    9f82:	80 80       	ld	r8, Z
    9f84:	80 80       	ld	r8, Z
    9f86:	80 80       	ld	r8, Z
    9f88:	80 80       	ld	r8, Z
    9f8a:	80 80       	ld	r8, Z
    9f8c:	80 80       	ld	r8, Z
    9f8e:	80 80       	ld	r8, Z
    9f90:	80 80       	ld	r8, Z
    9f92:	80 80       	ld	r8, Z
    9f94:	80 80       	ld	r8, Z
    9f96:	80 80       	ld	r8, Z
    9f98:	80 80       	ld	r8, Z
    9f9a:	80 80       	ld	r8, Z
    9f9c:	80 80       	ld	r8, Z
    9f9e:	80 80       	ld	r8, Z
    9fa0:	80 80       	ld	r8, Z
    9fa2:	80 80       	ld	r8, Z
    9fa4:	80 80       	ld	r8, Z
    9fa6:	80 80       	ld	r8, Z
    9fa8:	80 80       	ld	r8, Z
    9faa:	80 80       	ld	r8, Z
    9fac:	80 80       	ld	r8, Z
    9fae:	80 80       	ld	r8, Z
    9fb0:	80 80       	ld	r8, Z
    9fb2:	80 80       	ld	r8, Z
    9fb4:	80 80       	ld	r8, Z
    9fb6:	80 80       	ld	r8, Z
    9fb8:	80 80       	ld	r8, Z
    9fba:	80 80       	ld	r8, Z
    9fbc:	80 80       	ld	r8, Z
    9fbe:	80 80       	ld	r8, Z
    9fc0:	80 80       	ld	r8, Z
    9fc2:	80 80       	ld	r8, Z
    9fc4:	80 80       	ld	r8, Z
    9fc6:	80 80       	ld	r8, Z
    9fc8:	80 80       	ld	r8, Z
    9fca:	80 80       	ld	r8, Z
    9fcc:	80 80       	ld	r8, Z
    9fce:	80 80       	ld	r8, Z
    9fd0:	80 80       	ld	r8, Z
    9fd2:	80 80       	ld	r8, Z
    9fd4:	80 80       	ld	r8, Z
    9fd6:	80 80       	ld	r8, Z
    9fd8:	80 80       	ld	r8, Z
    9fda:	80 80       	ld	r8, Z
    9fdc:	80 80       	ld	r8, Z
    9fde:	80 80       	ld	r8, Z
    9fe0:	80 80       	ld	r8, Z
    9fe2:	80 80       	ld	r8, Z
    9fe4:	80 80       	ld	r8, Z
    9fe6:	80 80       	ld	r8, Z
    9fe8:	80 80       	ld	r8, Z
    9fea:	80 80       	ld	r8, Z
    9fec:	80 80       	ld	r8, Z
    9fee:	80 80       	ld	r8, Z
    9ff0:	80 80       	ld	r8, Z
    9ff2:	80 80       	ld	r8, Z
    9ff4:	80 80       	ld	r8, Z
    9ff6:	80 80       	ld	r8, Z
    9ff8:	80 80       	ld	r8, Z
    9ffa:	80 80       	ld	r8, Z
    9ffc:	80 80       	ld	r8, Z
    9ffe:	80 80       	ld	r8, Z
    a000:	7f 7f       	andi	r23, 0xFF	; 255
    a002:	7f 7f       	andi	r23, 0xFF	; 255
    a004:	7f 7f       	andi	r23, 0xFF	; 255
    a006:	7f 7f       	andi	r23, 0xFF	; 255
    a008:	7f 7f       	andi	r23, 0xFF	; 255
    a00a:	7f 7f       	andi	r23, 0xFF	; 255
    a00c:	7f 7f       	andi	r23, 0xFF	; 255
    a00e:	7f 7f       	andi	r23, 0xFF	; 255
    a010:	7f 7f       	andi	r23, 0xFF	; 255
    a012:	7f 7f       	andi	r23, 0xFF	; 255
    a014:	7f 7f       	andi	r23, 0xFF	; 255
    a016:	7f 7f       	andi	r23, 0xFF	; 255
    a018:	7f 7f       	andi	r23, 0xFF	; 255
    a01a:	7f 7f       	andi	r23, 0xFF	; 255
    a01c:	7f 7f       	andi	r23, 0xFF	; 255
    a01e:	7f 7f       	andi	r23, 0xFF	; 255
    a020:	7f 7f       	andi	r23, 0xFF	; 255
    a022:	7f 7f       	andi	r23, 0xFF	; 255
    a024:	7f 7f       	andi	r23, 0xFF	; 255
    a026:	7f 7f       	andi	r23, 0xFF	; 255
    a028:	7f 7f       	andi	r23, 0xFF	; 255
    a02a:	7f 7f       	andi	r23, 0xFF	; 255
    a02c:	7f 7f       	andi	r23, 0xFF	; 255
    a02e:	7f 7f       	andi	r23, 0xFF	; 255
    a030:	7f 7f       	andi	r23, 0xFF	; 255
    a032:	7f 7f       	andi	r23, 0xFF	; 255
    a034:	7f 7f       	andi	r23, 0xFF	; 255
    a036:	7f 7f       	andi	r23, 0xFF	; 255
    a038:	7f 7f       	andi	r23, 0xFF	; 255
    a03a:	7f 7f       	andi	r23, 0xFF	; 255
    a03c:	7f 7f       	andi	r23, 0xFF	; 255
    a03e:	7f 7f       	andi	r23, 0xFF	; 255
    a040:	7f 7f       	andi	r23, 0xFF	; 255
    a042:	7f 7f       	andi	r23, 0xFF	; 255
    a044:	7f 7f       	andi	r23, 0xFF	; 255
    a046:	7f 7f       	andi	r23, 0xFF	; 255
    a048:	7f 7f       	andi	r23, 0xFF	; 255
    a04a:	7f 7f       	andi	r23, 0xFF	; 255
    a04c:	7f 7f       	andi	r23, 0xFF	; 255
    a04e:	7f 7f       	andi	r23, 0xFF	; 255
    a050:	7f 7f       	andi	r23, 0xFF	; 255
    a052:	7f 7f       	andi	r23, 0xFF	; 255
    a054:	7f 7f       	andi	r23, 0xFF	; 255
    a056:	7f 7f       	andi	r23, 0xFF	; 255
    a058:	7f 7f       	andi	r23, 0xFF	; 255
    a05a:	7f 7f       	andi	r23, 0xFF	; 255
    a05c:	7f 7f       	andi	r23, 0xFF	; 255
    a05e:	7f 7f       	andi	r23, 0xFF	; 255
    a060:	7f 7f       	andi	r23, 0xFF	; 255
    a062:	7f 7f       	andi	r23, 0xFF	; 255
    a064:	7f 7f       	andi	r23, 0xFF	; 255
    a066:	7f 7f       	andi	r23, 0xFF	; 255
    a068:	7f 7f       	andi	r23, 0xFF	; 255
    a06a:	7f 7f       	andi	r23, 0xFF	; 255
    a06c:	7f 7f       	andi	r23, 0xFF	; 255
    a06e:	7f 7f       	andi	r23, 0xFF	; 255
    a070:	7f 7f       	andi	r23, 0xFF	; 255
    a072:	7f 7f       	andi	r23, 0xFF	; 255
    a074:	7f 7f       	andi	r23, 0xFF	; 255
    a076:	7f 7f       	andi	r23, 0xFF	; 255
    a078:	7f 7f       	andi	r23, 0xFF	; 255
    a07a:	7f 7f       	andi	r23, 0xFF	; 255
    a07c:	7f 7f       	andi	r23, 0xFF	; 255
    a07e:	7f 7f       	andi	r23, 0xFF	; 255
    a080:	7f 7f       	andi	r23, 0xFF	; 255
    a082:	7f 7f       	andi	r23, 0xFF	; 255
    a084:	7f 7f       	andi	r23, 0xFF	; 255
    a086:	7f 7f       	andi	r23, 0xFF	; 255
    a088:	7f 7f       	andi	r23, 0xFF	; 255
    a08a:	7f 7f       	andi	r23, 0xFF	; 255
    a08c:	7f 7f       	andi	r23, 0xFF	; 255
    a08e:	7f 7f       	andi	r23, 0xFF	; 255
    a090:	7f 7f       	andi	r23, 0xFF	; 255
    a092:	7f 7f       	andi	r23, 0xFF	; 255
    a094:	7f 7f       	andi	r23, 0xFF	; 255
    a096:	7f 7f       	andi	r23, 0xFF	; 255
    a098:	7f 7f       	andi	r23, 0xFF	; 255
    a09a:	7f 7f       	andi	r23, 0xFF	; 255
    a09c:	7f 7f       	andi	r23, 0xFF	; 255
    a09e:	7f 7f       	andi	r23, 0xFF	; 255
    a0a0:	7f 7f       	andi	r23, 0xFF	; 255
    a0a2:	7f 7f       	andi	r23, 0xFF	; 255
    a0a4:	7f 7f       	andi	r23, 0xFF	; 255
    a0a6:	7f 7f       	andi	r23, 0xFF	; 255
    a0a8:	7f 7f       	andi	r23, 0xFF	; 255
    a0aa:	7f 7f       	andi	r23, 0xFF	; 255
    a0ac:	7f 7f       	andi	r23, 0xFF	; 255
    a0ae:	7f 7f       	andi	r23, 0xFF	; 255
    a0b0:	7f 7f       	andi	r23, 0xFF	; 255
    a0b2:	7f 7f       	andi	r23, 0xFF	; 255
    a0b4:	7f 7f       	andi	r23, 0xFF	; 255
    a0b6:	7f 7f       	andi	r23, 0xFF	; 255
    a0b8:	7f 7f       	andi	r23, 0xFF	; 255
    a0ba:	7f 7f       	andi	r23, 0xFF	; 255
    a0bc:	7f 7f       	andi	r23, 0xFF	; 255
    a0be:	7f 7f       	andi	r23, 0xFF	; 255
    a0c0:	80 80       	ld	r8, Z
    a0c2:	80 80       	ld	r8, Z
    a0c4:	80 80       	ld	r8, Z
    a0c6:	80 80       	ld	r8, Z
    a0c8:	80 80       	ld	r8, Z
    a0ca:	80 80       	ld	r8, Z
    a0cc:	80 80       	ld	r8, Z
    a0ce:	80 80       	ld	r8, Z
    a0d0:	80 80       	ld	r8, Z
    a0d2:	80 80       	ld	r8, Z
    a0d4:	80 80       	ld	r8, Z
    a0d6:	80 80       	ld	r8, Z
    a0d8:	80 80       	ld	r8, Z
    a0da:	80 80       	ld	r8, Z
    a0dc:	80 80       	ld	r8, Z
    a0de:	80 80       	ld	r8, Z
    a0e0:	80 80       	ld	r8, Z
    a0e2:	80 80       	ld	r8, Z
    a0e4:	80 80       	ld	r8, Z
    a0e6:	80 80       	ld	r8, Z
    a0e8:	80 80       	ld	r8, Z
    a0ea:	80 80       	ld	r8, Z
    a0ec:	80 80       	ld	r8, Z
    a0ee:	80 80       	ld	r8, Z
    a0f0:	80 80       	ld	r8, Z
    a0f2:	80 80       	ld	r8, Z
    a0f4:	80 80       	ld	r8, Z
    a0f6:	80 80       	ld	r8, Z
    a0f8:	80 80       	ld	r8, Z
    a0fa:	80 80       	ld	r8, Z
    a0fc:	80 80       	ld	r8, Z
    a0fe:	80 80       	ld	r8, Z
    a100:	03 09       	sbc	r16, r3
    a102:	13 1e       	adc	r1, r19
    a104:	28 31       	cpi	r18, 0x18	; 24
    a106:	3a 40       	sbci	r19, 0x0A	; 10
    a108:	46 4c       	sbci	r20, 0xC6	; 198
    a10a:	50 54       	subi	r21, 0x40	; 64
    a10c:	58 5b       	subi	r21, 0xB8	; 184
    a10e:	5e 61       	ori	r21, 0x1E	; 30
    a110:	63 65       	ori	r22, 0x53	; 83
    a112:	67 69       	ori	r22, 0x97	; 151
    a114:	6b 6c       	ori	r22, 0xCB	; 203
    a116:	6e 6f       	ori	r22, 0xFE	; 254
    a118:	70 71       	andi	r23, 0x10	; 16
    a11a:	72 73       	andi	r23, 0x32	; 50
    a11c:	74 75       	andi	r23, 0x54	; 84
    a11e:	76 77       	andi	r23, 0x76	; 118
    a120:	77 78       	andi	r23, 0x87	; 135
    a122:	79 79       	andi	r23, 0x99	; 153
    a124:	7a 7a       	andi	r23, 0xAA	; 170
    a126:	7b 7b       	andi	r23, 0xBB	; 187
    a128:	7c 7c       	andi	r23, 0xCC	; 204
    a12a:	7c 7d       	andi	r23, 0xDC	; 220
    a12c:	7d 7d       	andi	r23, 0xDD	; 221
    a12e:	7e 7e       	andi	r23, 0xEE	; 238
    a130:	7e 7e       	andi	r23, 0xEE	; 238
    a132:	7f 7f       	andi	r23, 0xFF	; 255
    a134:	7f 7f       	andi	r23, 0xFF	; 255
    a136:	7f 7f       	andi	r23, 0xFF	; 255
    a138:	7f 7f       	andi	r23, 0xFF	; 255
    a13a:	7f 7f       	andi	r23, 0xFF	; 255
    a13c:	7f 7f       	andi	r23, 0xFF	; 255
    a13e:	7f 7f       	andi	r23, 0xFF	; 255
    a140:	7f 7f       	andi	r23, 0xFF	; 255
    a142:	7f 7f       	andi	r23, 0xFF	; 255
    a144:	7f 7f       	andi	r23, 0xFF	; 255
    a146:	7f 7f       	andi	r23, 0xFF	; 255
    a148:	7f 7f       	andi	r23, 0xFF	; 255
    a14a:	7f 7f       	andi	r23, 0xFF	; 255
    a14c:	7f 7e       	andi	r23, 0xEF	; 239
    a14e:	7e 7e       	andi	r23, 0xEE	; 238
    a150:	7e 7d       	andi	r23, 0xDE	; 222
    a152:	7d 7d       	andi	r23, 0xDD	; 221
    a154:	7c 7c       	andi	r23, 0xCC	; 204
    a156:	7c 7b       	andi	r23, 0xBC	; 188
    a158:	7b 7a       	andi	r23, 0xAB	; 171
    a15a:	7a 79       	andi	r23, 0x9A	; 154
    a15c:	79 78       	andi	r23, 0x89	; 137
    a15e:	77 77       	andi	r23, 0x77	; 119
    a160:	76 75       	andi	r23, 0x56	; 86
    a162:	74 73       	andi	r23, 0x34	; 52
    a164:	72 71       	andi	r23, 0x12	; 18
    a166:	70 6f       	ori	r23, 0xF0	; 240
    a168:	6e 6c       	ori	r22, 0xCE	; 206
    a16a:	6b 69       	ori	r22, 0x9B	; 155
    a16c:	67 65       	ori	r22, 0x57	; 87
    a16e:	63 61       	ori	r22, 0x13	; 19
    a170:	5e 5b       	subi	r21, 0xBE	; 190
    a172:	58 54       	subi	r21, 0x48	; 72
    a174:	50 4c       	sbci	r21, 0xC0	; 192
    a176:	46 40       	sbci	r20, 0x06	; 6
    a178:	3a 31       	cpi	r19, 0x1A	; 26
    a17a:	28 1e       	adc	r2, r24
    a17c:	13 09       	sbc	r17, r3
    a17e:	03 00       	.word	0x0003	; ????
    a180:	c6 cc       	rjmp	.-1652   	; 0x9b0e <waves+0xe>
    a182:	d5 db       	rcall	.-2134   	; 0x992e <SetMixerWave+0x8>
    a184:	df e3       	ldi	r29, 0x3F	; 63
    a186:	e5 e7       	ldi	r30, 0x75	; 117
    a188:	e9 ea       	ldi	r30, 0xA9	; 169
    a18a:	eb ec       	ldi	r30, 0xCB	; 203
    a18c:	ed ee       	ldi	r30, 0xED	; 237
    a18e:	ef ef       	ldi	r30, 0xFF	; 255
    a190:	f0 f0       	brcs	.+60     	; 0xa1ce <waves+0x6ce>
    a192:	f0 f1       	brcs	.+124    	; 0xa210 <waves+0x710>
    a194:	f1 f1       	breq	.+124    	; 0xa212 <waves+0x712>
    a196:	f1 f2       	breq	.-68     	; 0xa154 <waves+0x654>
    a198:	f2 f2       	brmi	.-68     	; 0xa156 <waves+0x656>
    a19a:	f2 f2       	brmi	.-68     	; 0xa158 <waves+0x658>
    a19c:	f2 f2       	brmi	.-68     	; 0xa15a <waves+0x65a>
    a19e:	f2 f3       	brmi	.-4      	; 0xa19c <waves+0x69c>
    a1a0:	f3 f3       	brvs	.-4      	; 0xa19e <waves+0x69e>
    a1a2:	f3 f3       	brvs	.-4      	; 0xa1a0 <waves+0x6a0>
    a1a4:	f3 f3       	brvs	.-4      	; 0xa1a2 <waves+0x6a2>
    a1a6:	f3 f3       	brvs	.-4      	; 0xa1a4 <waves+0x6a4>
    a1a8:	f3 f3       	brvs	.-4      	; 0xa1a6 <waves+0x6a6>
    a1aa:	f3 f3       	brvs	.-4      	; 0xa1a8 <waves+0x6a8>
    a1ac:	f3 f3       	brvs	.-4      	; 0xa1aa <waves+0x6aa>
    a1ae:	f3 f3       	brvs	.-4      	; 0xa1ac <waves+0x6ac>
    a1b0:	f3 f3       	brvs	.-4      	; 0xa1ae <waves+0x6ae>
    a1b2:	f3 f3       	brvs	.-4      	; 0xa1b0 <waves+0x6b0>
    a1b4:	f3 f3       	brvs	.-4      	; 0xa1b2 <waves+0x6b2>
    a1b6:	f3 f3       	brvs	.-4      	; 0xa1b4 <waves+0x6b4>
    a1b8:	f3 f3       	brvs	.-4      	; 0xa1b6 <waves+0x6b6>
    a1ba:	f3 f3       	brvs	.-4      	; 0xa1b8 <waves+0x6b8>
    a1bc:	f3 f3       	brvs	.-4      	; 0xa1ba <waves+0x6ba>
    a1be:	f3 f3       	brvs	.-4      	; 0xa1bc <waves+0x6bc>
    a1c0:	f3 f3       	brvs	.-4      	; 0xa1be <waves+0x6be>
    a1c2:	f3 f3       	brvs	.-4      	; 0xa1c0 <waves+0x6c0>
    a1c4:	f3 f3       	brvs	.-4      	; 0xa1c2 <waves+0x6c2>
    a1c6:	f3 f3       	brvs	.-4      	; 0xa1c4 <waves+0x6c4>
    a1c8:	f3 f3       	brvs	.-4      	; 0xa1c6 <waves+0x6c6>
    a1ca:	f3 f3       	brvs	.-4      	; 0xa1c8 <waves+0x6c8>
    a1cc:	f3 f3       	brvs	.-4      	; 0xa1ca <waves+0x6ca>
    a1ce:	f3 f3       	brvs	.-4      	; 0xa1cc <waves+0x6cc>
    a1d0:	f3 f3       	brvs	.-4      	; 0xa1ce <waves+0x6ce>
    a1d2:	f3 f3       	brvs	.-4      	; 0xa1d0 <waves+0x6d0>
    a1d4:	f3 f3       	brvs	.-4      	; 0xa1d2 <waves+0x6d2>
    a1d6:	f3 f3       	brvs	.-4      	; 0xa1d4 <waves+0x6d4>
    a1d8:	f3 f3       	brvs	.-4      	; 0xa1d6 <waves+0x6d6>
    a1da:	f3 f3       	brvs	.-4      	; 0xa1d8 <waves+0x6d8>
    a1dc:	f3 f3       	brvs	.-4      	; 0xa1da <waves+0x6da>
    a1de:	f3 f3       	brvs	.-4      	; 0xa1dc <waves+0x6dc>
    a1e0:	f2 f2       	brmi	.-68     	; 0xa19e <waves+0x69e>
    a1e2:	f2 f2       	brmi	.-68     	; 0xa1a0 <waves+0x6a0>
    a1e4:	f2 f2       	brmi	.-68     	; 0xa1a2 <waves+0x6a2>
    a1e6:	f2 f2       	brmi	.-68     	; 0xa1a4 <waves+0x6a4>
    a1e8:	f1 f1       	breq	.+124    	; 0xa266 <waves+0x766>
    a1ea:	f1 f1       	breq	.+124    	; 0xa268 <waves+0x768>
    a1ec:	f0 f0       	brcs	.+60     	; 0xa22a <waves+0x72a>
    a1ee:	f0 ef       	ldi	r31, 0xF0	; 240
    a1f0:	ef ee       	ldi	r30, 0xEF	; 239
    a1f2:	ed ec       	ldi	r30, 0xCD	; 205
    a1f4:	eb ea       	ldi	r30, 0xAB	; 171
    a1f6:	e9 e7       	ldi	r30, 0x79	; 121
    a1f8:	e5 e3       	ldi	r30, 0x35	; 53
    a1fa:	df db       	rcall	.-2114   	; 0x99ba <steptable+0x5a>
    a1fc:	d5 cc       	rjmp	.-1622   	; 0x9ba8 <waves+0xa8>
    a1fe:	c6 00       	.word	0x00c6	; ????
    a200:	00 28       	or	r0, r0
    a202:	3d 42       	sbci	r19, 0x2D	; 45
    a204:	30 2d       	mov	r19, r0
    a206:	2c 2b       	or	r18, r28
    a208:	2c 2d       	mov	r18, r12
    a20a:	2e 2f       	mov	r18, r30
    a20c:	30 32       	cpi	r19, 0x20	; 32
    a20e:	33 35       	cpi	r19, 0x53	; 83
    a210:	37 39       	cpi	r19, 0x97	; 151
    a212:	3b 3d       	cpi	r19, 0xDB	; 219
    a214:	3f 41       	sbci	r19, 0x1F	; 31
    a216:	43 45       	sbci	r20, 0x53	; 83
    a218:	48 4a       	sbci	r20, 0xA8	; 168
    a21a:	4c 4e       	sbci	r20, 0xEC	; 236
    a21c:	50 53       	subi	r21, 0x30	; 48
    a21e:	55 57       	subi	r21, 0x75	; 117
    a220:	59 5b       	subi	r21, 0xB9	; 185
    a222:	5d 5f       	subi	r21, 0xFD	; 253
    a224:	61 63       	ori	r22, 0x31	; 49
    a226:	65 67       	ori	r22, 0x75	; 117
    a228:	69 6b       	ori	r22, 0xB9	; 185
    a22a:	6c 6e       	ori	r22, 0xEC	; 236
    a22c:	70 71       	andi	r23, 0x10	; 16
    a22e:	73 74       	andi	r23, 0x43	; 67
    a230:	75 77       	andi	r23, 0x75	; 117
    a232:	78 79       	andi	r23, 0x98	; 152
    a234:	7a 7b       	andi	r23, 0xBA	; 186
    a236:	7c 7d       	andi	r23, 0xDC	; 220
    a238:	7d 7e       	andi	r23, 0xED	; 237
    a23a:	7e 7f       	andi	r23, 0xFE	; 254
    a23c:	7f 7f       	andi	r23, 0xFF	; 255
    a23e:	7f 7f       	andi	r23, 0xFF	; 255
    a240:	7f 7f       	andi	r23, 0xFF	; 255
    a242:	7f 7f       	andi	r23, 0xFF	; 255
    a244:	7f 7f       	andi	r23, 0xFF	; 255
    a246:	7e 7e       	andi	r23, 0xEE	; 238
    a248:	7d 7d       	andi	r23, 0xDD	; 221
    a24a:	7c 7b       	andi	r23, 0xBC	; 188
    a24c:	7a 79       	andi	r23, 0x9A	; 154
    a24e:	78 77       	andi	r23, 0x78	; 120
    a250:	75 74       	andi	r23, 0x45	; 69
    a252:	73 71       	andi	r23, 0x13	; 19
    a254:	70 6e       	ori	r23, 0xE0	; 224
    a256:	6c 6b       	ori	r22, 0xBC	; 188
    a258:	69 67       	ori	r22, 0x79	; 121
    a25a:	65 63       	ori	r22, 0x35	; 53
    a25c:	61 5f       	subi	r22, 0xF1	; 241
    a25e:	5d 5b       	subi	r21, 0xBD	; 189
    a260:	59 57       	subi	r21, 0x79	; 121
    a262:	55 53       	subi	r21, 0x35	; 53
    a264:	50 4e       	sbci	r21, 0xE0	; 224
    a266:	4c 4a       	sbci	r20, 0xAC	; 172
    a268:	48 45       	sbci	r20, 0x58	; 88
    a26a:	43 41       	sbci	r20, 0x13	; 19
    a26c:	3f 3d       	cpi	r19, 0xDF	; 223
    a26e:	3b 39       	cpi	r19, 0x9B	; 155
    a270:	37 35       	cpi	r19, 0x57	; 87
    a272:	33 32       	cpi	r19, 0x23	; 35
    a274:	30 2f       	mov	r19, r16
    a276:	2e 2d       	mov	r18, r14
    a278:	2c 2b       	or	r18, r28
    a27a:	2c 2d       	mov	r18, r12
    a27c:	30 42       	sbci	r19, 0x20	; 32
    a27e:	3d 28       	or	r3, r13
    a280:	00 e9       	ldi	r16, 0x90	; 144
    a282:	e5 fe       	sbrs	r14, 5
    a284:	d4 d7       	rcall	.+4008   	; 0xb22e <checkcollide+0x132>
    a286:	d7 d7       	rcall	.+4014   	; 0xb236 <checkcollide+0x13a>
    a288:	d6 d4       	rcall	.+2476   	; 0xac36 <drawplayer2+0x7a>
    a28a:	d2 d0       	rcall	.+420    	; 0xa430 <waves+0x930>
    a28c:	ce cc       	rjmp	.-1636   	; 0x9c2a <waves+0x12a>
    a28e:	ca c8       	rjmp	.-3692   	; 0x9424 <TriggerCommon+0xf0>
    a290:	c6 c3       	rjmp	.+1932   	; 0xaa1e <ProcessFading+0x34>
    a292:	c1 bf       	out	0x31, r28	; 49
    a294:	bd ba       	out	0x1d, r11	; 29
    a296:	b8 b6       	in	r11, 0x38	; 56
    a298:	b4 b1       	in	r27, 0x04	; 4
    a29a:	af ad       	ldd	r26, Y+63	; 0x3f
    a29c:	ab a9       	ldd	r26, Y+51	; 0x33
    a29e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    a2a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    a2a2:	9f 9e       	mul	r9, r31
    a2a4:	9c 9a       	sbi	0x13, 4	; 19
    a2a6:	99 97       	sbiw	r26, 0x29	; 41
    a2a8:	95 94       	asr	r9
    a2aa:	93 91       	.word	0x9193	; ????
    a2ac:	90 8f       	std	Z+24, r25	; 0x18
    a2ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a2b0:	8b 8a       	std	Y+19, r8	; 0x13
    a2b2:	89 88       	ldd	r8, Y+17	; 0x11
    a2b4:	88 87       	std	Y+8, r24	; 0x08
    a2b6:	86 85       	ldd	r24, Z+14	; 0x0e
    a2b8:	85 84       	ldd	r8, Z+13	; 0x0d
    a2ba:	84 84       	ldd	r8, Z+12	; 0x0c
    a2bc:	83 83       	std	Z+3, r24	; 0x03
    a2be:	83 83       	std	Z+3, r24	; 0x03
    a2c0:	83 83       	std	Z+3, r24	; 0x03
    a2c2:	83 83       	std	Z+3, r24	; 0x03
    a2c4:	83 84       	ldd	r8, Z+11	; 0x0b
    a2c6:	84 84       	ldd	r8, Z+12	; 0x0c
    a2c8:	85 85       	ldd	r24, Z+13	; 0x0d
    a2ca:	86 87       	std	Z+14, r24	; 0x0e
    a2cc:	88 88       	ldd	r8, Y+16	; 0x10
    a2ce:	89 8a       	std	Y+17, r8	; 0x11
    a2d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    a2d2:	8d 8f       	std	Y+29, r24	; 0x1d
    a2d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8693>
    a2d8:	95 97       	sbiw	r26, 0x25	; 37
    a2da:	99 9a       	sbi	0x13, 1	; 19
    a2dc:	9c 9e       	mul	r9, r28
    a2de:	9f a1       	ldd	r25, Y+39	; 0x27
    a2e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    a2e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    a2e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    a2e6:	af b1       	in	r26, 0x0f	; 15
    a2e8:	b4 b6       	in	r11, 0x34	; 52
    a2ea:	b8 ba       	out	0x18, r11	; 24
    a2ec:	bd bf       	out	0x3d, r27	; 61
    a2ee:	c1 c3       	rjmp	.+1922   	; 0xaa72 <drawplayer+0xe>
    a2f0:	c6 c8       	rjmp	.-3700   	; 0x947e <TriggerFx+0x48>
    a2f2:	ca cc       	rjmp	.-1644   	; 0x9c88 <waves+0x188>
    a2f4:	ce d0       	rcall	.+412    	; 0xa492 <waves+0x992>
    a2f6:	d2 d4       	rcall	.+2468   	; 0xac9c <drawplayer2+0xe0>
    a2f8:	d6 d7       	rcall	.+4012   	; 0xb2a6 <checkcollide+0x1aa>
    a2fa:	d7 d7       	rcall	.+4014   	; 0xb2aa <checkcollide+0x1ae>
    a2fc:	d4 fe       	sbrs	r13, 4
    a2fe:	e5 e9       	ldi	r30, 0x95	; 149
    a300:	f9 f8       	.word	0xf8f9	; ????
    a302:	f9 f5       	brne	.+126    	; 0xa382 <waves+0x882>
    a304:	eb e1       	ldi	r30, 0x1B	; 27
    a306:	dd de       	rcall	.-582    	; 0xa0c2 <waves+0x5c2>
    a308:	e0 e2       	ldi	r30, 0x20	; 32
    a30a:	e4 e5       	ldi	r30, 0x54	; 84
    a30c:	e6 e5       	ldi	r30, 0x56	; 86
    a30e:	e4 e2       	ldi	r30, 0x24	; 36
    a310:	de d9       	rcall	.-3140   	; 0x96ce <ProcessMusic+0x188>
    a312:	d2 ca       	rjmp	.-2652   	; 0x98b8 <ProcessMusic+0x372>
    a314:	c1 b7       	in	r28, 0x31	; 49
    a316:	ac a2       	std	Y+36, r10	; 0x24
    a318:	99 91       	ld	r25, Y+
    a31a:	8a 86       	std	Y+10, r8	; 0x0a
    a31c:	83 81       	ldd	r24, Z+3	; 0x03
    a31e:	80 80       	ld	r8, Z
    a320:	81 82       	std	Z+1, r8	; 0x01
    a322:	83 85       	ldd	r24, Z+11	; 0x0b
    a324:	86 88       	ldd	r8, Z+22	; 0x16
    a326:	8a 8c       	ldd	r8, Y+26	; 0x1a
    a328:	8d 8f       	std	Y+29, r24	; 0x1d
    a32a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8793>
    a32e:	96 97       	sbiw	r26, 0x26	; 38
    a330:	98 99       	sbic	0x13, 0	; 19
    a332:	9a 9b       	sbis	0x13, 2	; 19
    a334:	9b 9c       	mul	r9, r11
    a336:	9d 9d       	mul	r25, r13
    a338:	9d 9e       	mul	r9, r29
    a33a:	9e 9e       	mul	r9, r30
    a33c:	9f 9f       	mul	r25, r31
    a33e:	9f 9f       	mul	r25, r31
    a340:	9f 9f       	mul	r25, r31
    a342:	9f 9e       	mul	r9, r31
    a344:	9e 9e       	mul	r9, r30
    a346:	9d 9d       	mul	r25, r13
    a348:	9d 9c       	mul	r9, r13
    a34a:	9b 9b       	sbis	0x13, 3	; 19
    a34c:	9a 99       	sbic	0x13, 2	; 19
    a34e:	98 97       	sbiw	r26, 0x28	; 40
    a350:	96 95       	lsr	r25
    a352:	93 92       	.word	0x9293	; ????
    a354:	90 8f       	std	Z+24, r25	; 0x18
    a356:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a358:	8a 88       	ldd	r8, Y+18	; 0x12
    a35a:	86 85       	ldd	r24, Z+14	; 0x0e
    a35c:	83 82       	std	Z+3, r8	; 0x03
    a35e:	81 80       	ldd	r8, Z+1	; 0x01
    a360:	80 81       	ld	r24, Z
    a362:	83 86       	std	Z+11, r8	; 0x0b
    a364:	8a 91       	ld	r24, -Y
    a366:	99 a2       	std	Y+33, r9	; 0x21
    a368:	ac b7       	in	r26, 0x3c	; 60
    a36a:	c1 ca       	rjmp	.-2686   	; 0x98ee <ProcessMusic+0x3a8>
    a36c:	d2 d9       	rcall	.-3164   	; 0x9712 <ProcessMusic+0x1cc>
    a36e:	de e2       	ldi	r29, 0x2E	; 46
    a370:	e4 e5       	ldi	r30, 0x54	; 84
    a372:	e6 e5       	ldi	r30, 0x56	; 86
    a374:	e4 e2       	ldi	r30, 0x24	; 36
    a376:	e0 de       	rcall	.-576    	; 0xa138 <waves+0x638>
    a378:	dd e1       	ldi	r29, 0x1D	; 29
    a37a:	eb f5       	brvc	.+122    	; 0xa3f6 <waves+0x8f6>
    a37c:	f9 f8       	.word	0xf8f9	; ????
    a37e:	f9 00       	.word	0x00f9	; ????
    a380:	07 08       	sbc	r0, r7
    a382:	07 0b       	sbc	r16, r23
    a384:	15 1f       	adc	r17, r21
    a386:	23 22       	and	r2, r19
    a388:	20 1e       	adc	r2, r16
    a38a:	1c 1b       	sub	r17, r28
    a38c:	1a 1b       	sub	r17, r26
    a38e:	1c 1e       	adc	r1, r28
    a390:	22 27       	eor	r18, r18
    a392:	2e 36       	cpi	r18, 0x6E	; 110
    a394:	3f 49       	sbci	r19, 0x9F	; 159
    a396:	54 5e       	subi	r21, 0xE4	; 228
    a398:	67 6f       	ori	r22, 0xF7	; 247
    a39a:	76 7a       	andi	r23, 0xA6	; 166
    a39c:	7e 7f       	andi	r23, 0xFE	; 254
    a39e:	7f 7f       	andi	r23, 0xFF	; 255
    a3a0:	7f 7e       	andi	r23, 0xEF	; 239
    a3a2:	7d 7b       	andi	r23, 0xBD	; 189
    a3a4:	7a 78       	andi	r23, 0x8A	; 138
    a3a6:	76 74       	andi	r23, 0x46	; 70
    a3a8:	73 71       	andi	r23, 0x13	; 19
    a3aa:	70 6e       	ori	r23, 0xE0	; 224
    a3ac:	6d 6b       	ori	r22, 0xBD	; 189
    a3ae:	6a 69       	ori	r22, 0x9A	; 154
    a3b0:	68 67       	ori	r22, 0x78	; 120
    a3b2:	66 65       	ori	r22, 0x56	; 86
    a3b4:	65 64       	ori	r22, 0x45	; 69
    a3b6:	64 63       	ori	r22, 0x34	; 52
    a3b8:	63 62       	ori	r22, 0x23	; 35
    a3ba:	62 62       	ori	r22, 0x22	; 34
    a3bc:	61 61       	ori	r22, 0x11	; 17
    a3be:	61 61       	ori	r22, 0x11	; 17
    a3c0:	61 61       	ori	r22, 0x11	; 17
    a3c2:	61 62       	ori	r22, 0x21	; 33
    a3c4:	62 62       	ori	r22, 0x22	; 34
    a3c6:	63 63       	ori	r22, 0x33	; 51
    a3c8:	63 64       	ori	r22, 0x43	; 67
    a3ca:	65 65       	ori	r22, 0x55	; 85
    a3cc:	66 67       	ori	r22, 0x76	; 118
    a3ce:	68 69       	ori	r22, 0x98	; 152
    a3d0:	6a 6b       	ori	r22, 0xBA	; 186
    a3d2:	6d 6e       	ori	r22, 0xED	; 237
    a3d4:	70 71       	andi	r23, 0x10	; 16
    a3d6:	73 74       	andi	r23, 0x43	; 67
    a3d8:	76 78       	andi	r23, 0x86	; 134
    a3da:	7a 7b       	andi	r23, 0xBA	; 186
    a3dc:	7d 7e       	andi	r23, 0xED	; 237
    a3de:	7f 7f       	andi	r23, 0xFF	; 255
    a3e0:	7f 7f       	andi	r23, 0xFF	; 255
    a3e2:	7e 7a       	andi	r23, 0xAE	; 174
    a3e4:	76 6f       	ori	r23, 0xF6	; 246
    a3e6:	67 5e       	subi	r22, 0xE7	; 231
    a3e8:	54 49       	sbci	r21, 0x94	; 148
    a3ea:	3f 36       	cpi	r19, 0x6F	; 111
    a3ec:	2e 27       	eor	r18, r30
    a3ee:	22 1e       	adc	r2, r18
    a3f0:	1c 1b       	sub	r17, r28
    a3f2:	1a 1b       	sub	r17, r26
    a3f4:	1c 1e       	adc	r1, r28
    a3f6:	20 22       	and	r2, r16
    a3f8:	23 1f       	adc	r18, r19
    a3fa:	15 0b       	sbc	r17, r21
    a3fc:	07 08       	sbc	r0, r7
    a3fe:	07 00       	.word	0x0007	; ????
    a400:	1f 31       	cpi	r17, 0x1F	; 31
    a402:	3d 44       	sbci	r19, 0x4D	; 77
    a404:	4e 53       	subi	r20, 0x3E	; 62
    a406:	54 56       	subi	r21, 0x64	; 100
    a408:	5a 5f       	subi	r21, 0xFA	; 250
    a40a:	64 69       	ori	r22, 0x94	; 148
    a40c:	6e 74       	andi	r22, 0x4E	; 78
    a40e:	76 79       	andi	r23, 0x96	; 150
    a410:	7c 7f       	andi	r23, 0xFC	; 252
    a412:	7f 7f       	andi	r23, 0xFF	; 255
    a414:	7f 7f       	andi	r23, 0xFF	; 255
    a416:	7f 7f       	andi	r23, 0xFF	; 255
    a418:	7f 7f       	andi	r23, 0xFF	; 255
    a41a:	7f 7f       	andi	r23, 0xFF	; 255
    a41c:	7f 7f       	andi	r23, 0xFF	; 255
    a41e:	7f 7f       	andi	r23, 0xFF	; 255
    a420:	7f 7f       	andi	r23, 0xFF	; 255
    a422:	7f 7f       	andi	r23, 0xFF	; 255
    a424:	7f 7f       	andi	r23, 0xFF	; 255
    a426:	7f 7f       	andi	r23, 0xFF	; 255
    a428:	7f 7f       	andi	r23, 0xFF	; 255
    a42a:	7f 7f       	andi	r23, 0xFF	; 255
    a42c:	7f 7f       	andi	r23, 0xFF	; 255
    a42e:	7f 7f       	andi	r23, 0xFF	; 255
    a430:	7f 7f       	andi	r23, 0xFF	; 255
    a432:	7f 7f       	andi	r23, 0xFF	; 255
    a434:	7f 7f       	andi	r23, 0xFF	; 255
    a436:	7f 7f       	andi	r23, 0xFF	; 255
    a438:	7f 7f       	andi	r23, 0xFF	; 255
    a43a:	7f 7f       	andi	r23, 0xFF	; 255
    a43c:	7f 7f       	andi	r23, 0xFF	; 255
    a43e:	7f 7f       	andi	r23, 0xFF	; 255
    a440:	7f 7f       	andi	r23, 0xFF	; 255
    a442:	7f 7f       	andi	r23, 0xFF	; 255
    a444:	7f 7f       	andi	r23, 0xFF	; 255
    a446:	7f 7f       	andi	r23, 0xFF	; 255
    a448:	7f 7f       	andi	r23, 0xFF	; 255
    a44a:	7f 7f       	andi	r23, 0xFF	; 255
    a44c:	7f 7f       	andi	r23, 0xFF	; 255
    a44e:	7f 7f       	andi	r23, 0xFF	; 255
    a450:	7f 7f       	andi	r23, 0xFF	; 255
    a452:	7f 7f       	andi	r23, 0xFF	; 255
    a454:	7f 7f       	andi	r23, 0xFF	; 255
    a456:	7f 7f       	andi	r23, 0xFF	; 255
    a458:	7f 7f       	andi	r23, 0xFF	; 255
    a45a:	7f 7f       	andi	r23, 0xFF	; 255
    a45c:	7f 7f       	andi	r23, 0xFF	; 255
    a45e:	7f 7f       	andi	r23, 0xFF	; 255
    a460:	7f 7f       	andi	r23, 0xFF	; 255
    a462:	7f 7f       	andi	r23, 0xFF	; 255
    a464:	7f 7f       	andi	r23, 0xFF	; 255
    a466:	7f 7f       	andi	r23, 0xFF	; 255
    a468:	7f 7f       	andi	r23, 0xFF	; 255
    a46a:	7f 7f       	andi	r23, 0xFF	; 255
    a46c:	7f 7f       	andi	r23, 0xFF	; 255
    a46e:	7f 7f       	andi	r23, 0xFF	; 255
    a470:	7f 7f       	andi	r23, 0xFF	; 255
    a472:	7f 7f       	andi	r23, 0xFF	; 255
    a474:	7f 7f       	andi	r23, 0xFF	; 255
    a476:	7f 7f       	andi	r23, 0xFF	; 255
    a478:	7f 7f       	andi	r23, 0xFF	; 255
    a47a:	7f 7c       	andi	r23, 0xCF	; 207
    a47c:	78 71       	andi	r23, 0x18	; 24
    a47e:	68 4c       	sbci	r22, 0xC8	; 200
    a480:	2c 1c       	adc	r2, r12
    a482:	12 0c       	add	r1, r2
    a484:	0a 0b       	sbc	r16, r26
    a486:	0a 05       	cpc	r16, r10
    a488:	fd f3       	brhs	.-2      	; 0xa488 <waves+0x988>
    a48a:	e9 df       	rcall	.-46     	; 0xa45e <waves+0x95e>
    a48c:	d4 ca       	rjmp	.-2648   	; 0x9a36 <steptable+0xd6>
    a48e:	c0 b7       	in	r28, 0x30	; 48
    a490:	ae a6       	std	Y+46, r10	; 0x2e
    a492:	9e 97       	sbiw	r26, 0x2e	; 46
    a494:	91 8b       	std	Z+17, r25	; 0x11
    a496:	86 85       	ldd	r24, Z+14	; 0x0e
    a498:	82 80       	ldd	r8, Z+2	; 0x02
    a49a:	80 80       	ld	r8, Z
    a49c:	80 80       	ld	r8, Z
    a49e:	80 80       	ld	r8, Z
    a4a0:	80 80       	ld	r8, Z
    a4a2:	80 80       	ld	r8, Z
    a4a4:	80 80       	ld	r8, Z
    a4a6:	80 80       	ld	r8, Z
    a4a8:	80 80       	ld	r8, Z
    a4aa:	80 80       	ld	r8, Z
    a4ac:	80 80       	ld	r8, Z
    a4ae:	80 80       	ld	r8, Z
    a4b0:	80 80       	ld	r8, Z
    a4b2:	80 80       	ld	r8, Z
    a4b4:	80 80       	ld	r8, Z
    a4b6:	80 80       	ld	r8, Z
    a4b8:	80 80       	ld	r8, Z
    a4ba:	80 80       	ld	r8, Z
    a4bc:	80 80       	ld	r8, Z
    a4be:	80 80       	ld	r8, Z
    a4c0:	80 80       	ld	r8, Z
    a4c2:	80 80       	ld	r8, Z
    a4c4:	80 80       	ld	r8, Z
    a4c6:	80 80       	ld	r8, Z
    a4c8:	80 80       	ld	r8, Z
    a4ca:	80 80       	ld	r8, Z
    a4cc:	80 80       	ld	r8, Z
    a4ce:	80 80       	ld	r8, Z
    a4d0:	80 80       	ld	r8, Z
    a4d2:	80 80       	ld	r8, Z
    a4d4:	80 80       	ld	r8, Z
    a4d6:	80 80       	ld	r8, Z
    a4d8:	80 80       	ld	r8, Z
    a4da:	80 80       	ld	r8, Z
    a4dc:	80 80       	ld	r8, Z
    a4de:	80 80       	ld	r8, Z
    a4e0:	80 80       	ld	r8, Z
    a4e2:	80 80       	ld	r8, Z
    a4e4:	80 80       	ld	r8, Z
    a4e6:	80 80       	ld	r8, Z
    a4e8:	80 80       	ld	r8, Z
    a4ea:	80 80       	ld	r8, Z
    a4ec:	80 80       	ld	r8, Z
    a4ee:	80 80       	ld	r8, Z
    a4f0:	80 80       	ld	r8, Z
    a4f2:	80 80       	ld	r8, Z
    a4f4:	80 87       	std	Z+8, r24	; 0x08
    a4f6:	91 9d       	mul	r25, r1
    a4f8:	ac c4       	rjmp	.+2392   	; 0xae52 <printtileint+0x13c>
    a4fa:	cb d4       	rcall	.+2454   	; 0xae92 <printtileint+0x17c>
    a4fc:	dd f2       	brhs	.-74     	; 0xa4b4 <waves+0x9b4>
    a4fe:	fa fa       	.word	0xfafa	; ????

0000a500 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    a500:	2f 92       	push	r2
    a502:	3f 92       	push	r3
    a504:	4f 92       	push	r4
    a506:	5f 92       	push	r5
    a508:	6f 92       	push	r6
    a50a:	7f 92       	push	r7
    a50c:	8f 92       	push	r8
    a50e:	9f 92       	push	r9
    a510:	af 92       	push	r10
    a512:	bf 92       	push	r11
    a514:	cf 92       	push	r12
    a516:	df 92       	push	r13
    a518:	ef 92       	push	r14
    a51a:	ff 92       	push	r15
    a51c:	0f 93       	push	r16
    a51e:	1f 93       	push	r17
    a520:	cf 93       	push	r28
    a522:	df 93       	push	r29
    a524:	00 d0       	rcall	.+0      	; 0xa526 <ProcessSprites+0x26>
    a526:	00 d0       	rcall	.+0      	; 0xa528 <ProcessSprites+0x28>
    a528:	00 d0       	rcall	.+0      	; 0xa52a <ProcessSprites+0x2a>
    a52a:	cd b7       	in	r28, 0x3d	; 61
    a52c:	de b7       	in	r29, 0x3e	; 62
    a52e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    a532:	88 23       	and	r24, r24
    a534:	09 f4       	brne	.+2      	; 0xa538 <ProcessSprites+0x38>
    a536:	f9 c0       	rjmp	.+498    	; 0xa72a <ProcessSprites+0x22a>
    a538:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <user_ram_tiles_c_tmp>
    a53c:	80 93 4c 08 	sts	0x084C, r24	; 0x80084c <user_ram_tiles_c>
    a540:	80 93 4b 08 	sts	0x084B, r24	; 0x80084b <free_tile_index>
    a544:	02 e0       	ldi	r16, 0x02	; 2
    a546:	11 e0       	ldi	r17, 0x01	; 1
    a548:	f8 01       	movw	r30, r16
    a54a:	f3 81       	ldd	r31, Z+3	; 0x03
    a54c:	fb 83       	std	Y+3, r31	; 0x03
    a54e:	f2 ff       	sbrs	r31, 2
    a550:	20 c0       	rjmp	.+64     	; 0xa592 <ProcessSprites+0x92>
    a552:	0c 5f       	subi	r16, 0xFC	; 252
    a554:	1f 4f       	sbci	r17, 0xFF	; 255
    a556:	21 e0       	ldi	r18, 0x01	; 1
    a558:	0a 33       	cpi	r16, 0x3A	; 58
    a55a:	12 07       	cpc	r17, r18
    a55c:	a9 f7       	brne	.-22     	; 0xa548 <ProcessSprites+0x48>
    a55e:	26 96       	adiw	r28, 0x06	; 6
    a560:	0f b6       	in	r0, 0x3f	; 63
    a562:	f8 94       	cli
    a564:	de bf       	out	0x3e, r29	; 62
    a566:	0f be       	out	0x3f, r0	; 63
    a568:	cd bf       	out	0x3d, r28	; 61
    a56a:	df 91       	pop	r29
    a56c:	cf 91       	pop	r28
    a56e:	1f 91       	pop	r17
    a570:	0f 91       	pop	r16
    a572:	ff 90       	pop	r15
    a574:	ef 90       	pop	r14
    a576:	df 90       	pop	r13
    a578:	cf 90       	pop	r12
    a57a:	bf 90       	pop	r11
    a57c:	af 90       	pop	r10
    a57e:	9f 90       	pop	r9
    a580:	8f 90       	pop	r8
    a582:	7f 90       	pop	r7
    a584:	6f 90       	pop	r6
    a586:	5f 90       	pop	r5
    a588:	4f 90       	pop	r4
    a58a:	3f 90       	pop	r3
    a58c:	2f 90       	pop	r2
    a58e:	0c 94 7f 45 	jmp	0x8afe	; 0x8afe <RestoreBackground>
    a592:	f8 01       	movw	r30, r16
    a594:	51 81       	ldd	r21, Z+1	; 0x01
    a596:	40 81       	ld	r20, Z
    a598:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    a59c:	24 0f       	add	r18, r20
    a59e:	30 91 5d 08 	lds	r19, 0x085D	; 0x80085d <screen_scrollY>
    a5a2:	85 2f       	mov	r24, r21
    a5a4:	90 e0       	ldi	r25, 0x00	; 0
    a5a6:	83 0f       	add	r24, r19
    a5a8:	91 1d       	adc	r25, r1
    a5aa:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollHeight>
    a5ae:	33 0f       	add	r19, r19
    a5b0:	33 0f       	add	r19, r19
    a5b2:	33 0f       	add	r19, r19
    a5b4:	31 50       	subi	r19, 0x01	; 1
    a5b6:	35 17       	cp	r19, r21
    a5b8:	08 f4       	brcc	.+2      	; 0xa5bc <ProcessSprites+0xbc>
    a5ba:	9a 95       	dec	r25
    a5bc:	32 2e       	mov	r3, r18
    a5be:	36 94       	lsr	r3
    a5c0:	36 94       	lsr	r3
    a5c2:	36 94       	lsr	r3
    a5c4:	27 70       	andi	r18, 0x07	; 7
    a5c6:	19 f0       	breq	.+6      	; 0xa5ce <ProcessSprites+0xce>
    a5c8:	f2 e0       	ldi	r31, 0x02	; 2
    a5ca:	f9 83       	std	Y+1, r31	; 0x01
    a5cc:	02 c0       	rjmp	.+4      	; 0xa5d2 <ProcessSprites+0xd2>
    a5ce:	31 e0       	ldi	r19, 0x01	; 1
    a5d0:	39 83       	std	Y+1, r19	; 0x01
    a5d2:	bc 01       	movw	r22, r24
    a5d4:	e3 e0       	ldi	r30, 0x03	; 3
    a5d6:	76 95       	lsr	r23
    a5d8:	67 95       	ror	r22
    a5da:	ea 95       	dec	r30
    a5dc:	e1 f7       	brne	.-8      	; 0xa5d6 <ProcessSprites+0xd6>
    a5de:	26 2e       	mov	r2, r22
    a5e0:	87 70       	andi	r24, 0x07	; 7
    a5e2:	19 f0       	breq	.+6      	; 0xa5ea <ProcessSprites+0xea>
    a5e4:	62 e0       	ldi	r22, 0x02	; 2
    a5e6:	6a 83       	std	Y+2, r22	; 0x02
    a5e8:	02 c0       	rjmp	.+4      	; 0xa5ee <ProcessSprites+0xee>
    a5ea:	71 e0       	ldi	r23, 0x01	; 1
    a5ec:	7a 83       	std	Y+2, r23	; 0x02
    a5ee:	68 2e       	mov	r6, r24
    a5f0:	71 2c       	mov	r7, r1
    a5f2:	76 2c       	mov	r7, r6
    a5f4:	66 24       	eor	r6, r6
    a5f6:	62 0e       	add	r6, r18
    a5f8:	71 1c       	adc	r7, r1
    a5fa:	fb 81       	ldd	r31, Y+3	; 0x03
    a5fc:	ef 2f       	mov	r30, r31
    a5fe:	f0 e0       	ldi	r31, 0x00	; 0
    a600:	7e 2f       	mov	r23, r30
    a602:	66 27       	eor	r22, r22
    a604:	f8 01       	movw	r30, r16
    a606:	92 81       	ldd	r25, Z+2	; 0x02
    a608:	69 0f       	add	r22, r25
    a60a:	71 1d       	adc	r23, r1
    a60c:	7e 83       	std	Y+6, r23	; 0x06
    a60e:	6d 83       	std	Y+5, r22	; 0x05
    a610:	c1 2c       	mov	r12, r1
    a612:	d1 2c       	mov	r13, r1
    a614:	97 e0       	ldi	r25, 0x07	; 7
    a616:	95 0f       	add	r25, r21
    a618:	98 1b       	sub	r25, r24
    a61a:	9b 83       	std	Y+3, r25	; 0x03
    a61c:	87 e0       	ldi	r24, 0x07	; 7
    a61e:	84 0f       	add	r24, r20
    a620:	82 1b       	sub	r24, r18
    a622:	8c 83       	std	Y+4, r24	; 0x04
    a624:	8c 2d       	mov	r24, r12
    a626:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    a62a:	91 11       	cpse	r25, r1
    a62c:	07 c0       	rjmp	.+14     	; 0xa63c <ProcessSprites+0x13c>
    a62e:	ff ef       	ldi	r31, 0xFF	; 255
    a630:	cf 1a       	sub	r12, r31
    a632:	df 0a       	sbc	r13, r31
    a634:	2a 81       	ldd	r18, Y+2	; 0x02
    a636:	c2 16       	cp	r12, r18
    a638:	a8 f3       	brcs	.-22     	; 0xa624 <ProcessSprites+0x124>
    a63a:	8b cf       	rjmp	.-234    	; 0xa552 <ProcessSprites+0x52>
    a63c:	29 2f       	mov	r18, r25
    a63e:	22 0f       	add	r18, r18
    a640:	22 0f       	add	r18, r18
    a642:	22 0f       	add	r18, r18
    a644:	21 50       	subi	r18, 0x01	; 1
    a646:	3b 81       	ldd	r19, Y+3	; 0x03
    a648:	48 e0       	ldi	r20, 0x08	; 8
    a64a:	c4 9e       	mul	r12, r20
    a64c:	30 0d       	add	r19, r0
    a64e:	11 24       	eor	r1, r1
    a650:	32 17       	cp	r19, r18
    a652:	68 f7       	brcc	.-38     	; 0xa62e <ProcessSprites+0x12e>
    a654:	82 0d       	add	r24, r2
    a656:	89 17       	cp	r24, r25
    a658:	10 f0       	brcs	.+4      	; 0xa65e <ProcessSprites+0x15e>
    a65a:	89 1b       	sub	r24, r25
    a65c:	fc cf       	rjmp	.-8      	; 0xa656 <ProcessSprites+0x156>
    a65e:	e8 2e       	mov	r14, r24
    a660:	e6 94       	lsr	r14
    a662:	e6 94       	lsr	r14
    a664:	e6 94       	lsr	r14
    a666:	f1 2c       	mov	r15, r1
    a668:	fe 2c       	mov	r15, r14
    a66a:	ee 24       	eor	r14, r14
    a66c:	87 70       	andi	r24, 0x07	; 7
    a66e:	e8 0e       	add	r14, r24
    a670:	f1 1c       	adc	r15, r1
    a672:	9c 2c       	mov	r9, r12
    a674:	88 24       	eor	r8, r8
    a676:	41 2c       	mov	r4, r1
    a678:	8c 81       	ldd	r24, Y+4	; 0x04
    a67a:	68 e0       	ldi	r22, 0x08	; 8
    a67c:	46 9e       	mul	r4, r22
    a67e:	80 0d       	add	r24, r0
    a680:	11 24       	eor	r1, r1
    a682:	87 3e       	cpi	r24, 0xE7	; 231
    a684:	08 f0       	brcs	.+2      	; 0xa688 <ProcessSprites+0x188>
    a686:	49 c0       	rjmp	.+146    	; 0xa71a <ProcessSprites+0x21a>
    a688:	83 2d       	mov	r24, r3
    a68a:	84 0d       	add	r24, r4
    a68c:	88 0f       	add	r24, r24
    a68e:	88 0f       	add	r24, r24
    a690:	88 0f       	add	r24, r24
    a692:	f7 01       	movw	r30, r14
    a694:	e8 0f       	add	r30, r24
    a696:	f1 1d       	adc	r31, r1
    a698:	9f 01       	movw	r18, r30
    a69a:	20 50       	subi	r18, 0x00	; 0
    a69c:	36 4f       	sbci	r19, 0xF6	; 246
    a69e:	59 01       	movw	r10, r18
    a6a0:	f9 01       	movw	r30, r18
    a6a2:	50 80       	ld	r5, Z
    a6a4:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    a6a8:	fa e1       	ldi	r31, 0x1A	; 26
    a6aa:	f5 15       	cp	r31, r5
    a6ac:	10 f0       	brcs	.+4      	; 0xa6b2 <ProcessSprites+0x1b2>
    a6ae:	58 16       	cp	r5, r24
    a6b0:	48 f5       	brcc	.+82     	; 0xa704 <ProcessSprites+0x204>
    a6b2:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <free_tile_index>
    a6b6:	6b 31       	cpi	r22, 0x1B	; 27
    a6b8:	10 f5       	brcc	.+68     	; 0xa6fe <ProcessSprites+0x1fe>
    a6ba:	2a e1       	ldi	r18, 0x1A	; 26
    a6bc:	25 15       	cp	r18, r5
    a6be:	28 f4       	brcc	.+10     	; 0xa6ca <ProcessSprites+0x1ca>
    a6c0:	85 ee       	ldi	r24, 0xE5	; 229
    a6c2:	85 0d       	add	r24, r5
    a6c4:	0e 94 63 44 	call	0x88c6	; 0x88c6 <CopyFlashTile>
    a6c8:	05 c0       	rjmp	.+10     	; 0xa6d4 <ProcessSprites+0x1d4>
    a6ca:	58 16       	cp	r5, r24
    a6cc:	18 f4       	brcc	.+6      	; 0xa6d4 <ProcessSprites+0x1d4>
    a6ce:	85 2d       	mov	r24, r5
    a6d0:	0e 94 f2 44 	call	0x89e4	; 0x89e4 <CopyRamTile>
    a6d4:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <free_tile_index>
    a6d8:	e8 2f       	mov	r30, r24
    a6da:	f0 e0       	ldi	r31, 0x00	; 0
    a6dc:	9f 01       	movw	r18, r30
    a6de:	22 0f       	add	r18, r18
    a6e0:	33 1f       	adc	r19, r19
    a6e2:	e2 0f       	add	r30, r18
    a6e4:	f3 1f       	adc	r31, r19
    a6e6:	e6 50       	subi	r30, 0x06	; 6
    a6e8:	f8 4f       	sbci	r31, 0xF8	; 248
    a6ea:	b1 82       	std	Z+1, r11	; 0x01
    a6ec:	a0 82       	st	Z, r10
    a6ee:	52 82       	std	Z+2, r5	; 0x02
    a6f0:	f5 01       	movw	r30, r10
    a6f2:	80 83       	st	Z, r24
    a6f4:	91 e0       	ldi	r25, 0x01	; 1
    a6f6:	98 0f       	add	r25, r24
    a6f8:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <free_tile_index>
    a6fc:	58 2e       	mov	r5, r24
    a6fe:	fa e1       	ldi	r31, 0x1A	; 26
    a700:	f5 15       	cp	r31, r5
    a702:	58 f0       	brcs	.+22     	; 0xa71a <ProcessSprites+0x21a>
    a704:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    a708:	58 16       	cp	r5, r24
    a70a:	38 f0       	brcs	.+14     	; 0xa71a <ProcessSprites+0x21a>
    a70c:	93 01       	movw	r18, r6
    a70e:	a4 01       	movw	r20, r8
    a710:	6d 81       	ldd	r22, Y+5	; 0x05
    a712:	7e 81       	ldd	r23, Y+6	; 0x06
    a714:	85 2d       	mov	r24, r5
    a716:	0e 94 92 45 	call	0x8b24	; 0x8b24 <BlitSpritePart>
    a71a:	43 94       	inc	r4
    a71c:	2f ef       	ldi	r18, 0xFF	; 255
    a71e:	82 1a       	sub	r8, r18
    a720:	92 0a       	sbc	r9, r18
    a722:	39 81       	ldd	r19, Y+1	; 0x01
    a724:	43 12       	cpse	r4, r19
    a726:	a8 cf       	rjmp	.-176    	; 0xa678 <ProcessSprites+0x178>
    a728:	82 cf       	rjmp	.-252    	; 0xa62e <ProcessSprites+0x12e>
    a72a:	26 96       	adiw	r28, 0x06	; 6
    a72c:	0f b6       	in	r0, 0x3f	; 63
    a72e:	f8 94       	cli
    a730:	de bf       	out	0x3e, r29	; 62
    a732:	0f be       	out	0x3f, r0	; 63
    a734:	cd bf       	out	0x3d, r28	; 61
    a736:	df 91       	pop	r29
    a738:	cf 91       	pop	r28
    a73a:	1f 91       	pop	r17
    a73c:	0f 91       	pop	r16
    a73e:	ff 90       	pop	r15
    a740:	ef 90       	pop	r14
    a742:	df 90       	pop	r13
    a744:	cf 90       	pop	r12
    a746:	bf 90       	pop	r11
    a748:	af 90       	pop	r10
    a74a:	9f 90       	pop	r9
    a74c:	8f 90       	pop	r8
    a74e:	7f 90       	pop	r7
    a750:	6f 90       	pop	r6
    a752:	5f 90       	pop	r5
    a754:	4f 90       	pop	r4
    a756:	3f 90       	pop	r3
    a758:	2f 90       	pop	r2
    a75a:	08 95       	ret

0000a75c <Scroll>:
    a75c:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    a760:	29 2f       	mov	r18, r25
    a762:	22 0f       	add	r18, r18
    a764:	22 0f       	add	r18, r18
    a766:	22 0f       	add	r18, r18
    a768:	90 91 5d 08 	lds	r25, 0x085D	; 0x80085d <screen_scrollY>
    a76c:	96 0f       	add	r25, r22
    a76e:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    a772:	30 91 5c 08 	lds	r19, 0x085C	; 0x80085c <screen_scrollX>
    a776:	83 0f       	add	r24, r19
    a778:	80 93 5c 08 	sts	0x085C, r24	; 0x80085c <screen_scrollX>
    a77c:	92 17       	cp	r25, r18
    a77e:	38 f0       	brcs	.+14     	; 0xa78e <Scroll+0x32>
    a780:	67 fd       	sbrc	r22, 7
    a782:	02 c0       	rjmp	.+4      	; 0xa788 <Scroll+0x2c>
    a784:	92 1b       	sub	r25, r18
    a786:	01 c0       	rjmp	.+2      	; 0xa78a <Scroll+0x2e>
    a788:	92 0f       	add	r25, r18
    a78a:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    a78e:	08 95       	ret

0000a790 <MapSprite2>:
    a790:	df 92       	push	r13
    a792:	ef 92       	push	r14
    a794:	ff 92       	push	r15
    a796:	0f 93       	push	r16
    a798:	1f 93       	push	r17
    a79a:	cf 93       	push	r28
    a79c:	df 93       	push	r29
    a79e:	fb 01       	movw	r30, r22
    a7a0:	14 91       	lpm	r17, Z
    a7a2:	31 96       	adiw	r30, 0x01	; 1
    a7a4:	54 91       	lpm	r21, Z
    a7a6:	2f ef       	ldi	r18, 0xFF	; 255
    a7a8:	21 0f       	add	r18, r17
    a7aa:	e4 2f       	mov	r30, r20
    a7ac:	e1 70       	andi	r30, 0x01	; 1
    a7ae:	40 ff       	sbrs	r20, 0
    a7b0:	03 c0       	rjmp	.+6      	; 0xa7b8 <MapSprite2+0x28>
    a7b2:	92 2f       	mov	r25, r18
    a7b4:	df ef       	ldi	r29, 0xFF	; 255
    a7b6:	02 c0       	rjmp	.+4      	; 0xa7bc <MapSprite2+0x2c>
    a7b8:	d1 e0       	ldi	r29, 0x01	; 1
    a7ba:	90 e0       	ldi	r25, 0x00	; 0
    a7bc:	41 ff       	sbrs	r20, 1
    a7be:	04 c0       	rjmp	.+8      	; 0xa7c8 <MapSprite2+0x38>
    a7c0:	3f ef       	ldi	r19, 0xFF	; 255
    a7c2:	35 0f       	add	r19, r21
    a7c4:	0f ef       	ldi	r16, 0xFF	; 255
    a7c6:	02 c0       	rjmp	.+4      	; 0xa7cc <MapSprite2+0x3c>
    a7c8:	01 e0       	ldi	r16, 0x01	; 1
    a7ca:	30 e0       	ldi	r19, 0x00	; 0
    a7cc:	ee 23       	and	r30, r30
    a7ce:	11 f0       	breq	.+4      	; 0xa7d4 <MapSprite2+0x44>
    a7d0:	e2 2e       	mov	r14, r18
    a7d2:	01 c0       	rjmp	.+2      	; 0xa7d6 <MapSprite2+0x46>
    a7d4:	e1 2c       	mov	r14, r1
    a7d6:	c0 e0       	ldi	r28, 0x00	; 0
    a7d8:	c5 17       	cp	r28, r21
    a7da:	f9 f0       	breq	.+62     	; 0xa81a <MapSprite2+0x8a>
    a7dc:	31 03       	mulsu	r19, r17
    a7de:	d0 01       	movw	r26, r0
    a7e0:	11 24       	eor	r1, r1
    a7e2:	d8 2e       	mov	r13, r24
    a7e4:	d1 0e       	add	r13, r17
    a7e6:	8d 15       	cp	r24, r13
    a7e8:	a1 f0       	breq	.+40     	; 0xa812 <MapSprite2+0x82>
    a7ea:	fd 01       	movw	r30, r26
    a7ec:	e9 0f       	add	r30, r25
    a7ee:	f1 1d       	adc	r31, r1
    a7f0:	97 fd       	sbrc	r25, 7
    a7f2:	fa 95       	dec	r31
    a7f4:	32 96       	adiw	r30, 0x02	; 2
    a7f6:	e6 0f       	add	r30, r22
    a7f8:	f7 1f       	adc	r31, r23
    a7fa:	f4 90       	lpm	r15, Z
    a7fc:	24 e0       	ldi	r18, 0x04	; 4
    a7fe:	82 9f       	mul	r24, r18
    a800:	f0 01       	movw	r30, r0
    a802:	11 24       	eor	r1, r1
    a804:	ee 5f       	subi	r30, 0xFE	; 254
    a806:	fe 4f       	sbci	r31, 0xFE	; 254
    a808:	f2 82       	std	Z+2, r15	; 0x02
    a80a:	8f 5f       	subi	r24, 0xFF	; 255
    a80c:	43 83       	std	Z+3, r20	; 0x03
    a80e:	9d 0f       	add	r25, r29
    a810:	ea cf       	rjmp	.-44     	; 0xa7e6 <MapSprite2+0x56>
    a812:	30 0f       	add	r19, r16
    a814:	cf 5f       	subi	r28, 0xFF	; 255
    a816:	9e 2d       	mov	r25, r14
    a818:	df cf       	rjmp	.-66     	; 0xa7d8 <MapSprite2+0x48>
    a81a:	df 91       	pop	r29
    a81c:	cf 91       	pop	r28
    a81e:	1f 91       	pop	r17
    a820:	0f 91       	pop	r16
    a822:	ff 90       	pop	r15
    a824:	ef 90       	pop	r14
    a826:	df 90       	pop	r13
    a828:	08 95       	ret

0000a82a <MoveSprite>:
    a82a:	0f 93       	push	r16
    a82c:	30 e0       	ldi	r19, 0x00	; 0
    a82e:	30 17       	cp	r19, r16
    a830:	99 f0       	breq	.+38     	; 0xa858 <MoveSprite+0x2e>
    a832:	58 2f       	mov	r21, r24
    a834:	52 0f       	add	r21, r18
    a836:	96 2f       	mov	r25, r22
    a838:	85 17       	cp	r24, r21
    a83a:	59 f0       	breq	.+22     	; 0xa852 <MoveSprite+0x28>
    a83c:	74 e0       	ldi	r23, 0x04	; 4
    a83e:	87 9f       	mul	r24, r23
    a840:	f0 01       	movw	r30, r0
    a842:	11 24       	eor	r1, r1
    a844:	ee 5f       	subi	r30, 0xFE	; 254
    a846:	fe 4f       	sbci	r31, 0xFE	; 254
    a848:	90 83       	st	Z, r25
    a84a:	41 83       	std	Z+1, r20	; 0x01
    a84c:	8f 5f       	subi	r24, 0xFF	; 255
    a84e:	98 5f       	subi	r25, 0xF8	; 248
    a850:	f3 cf       	rjmp	.-26     	; 0xa838 <MoveSprite+0xe>
    a852:	3f 5f       	subi	r19, 0xFF	; 255
    a854:	48 5f       	subi	r20, 0xF8	; 248
    a856:	eb cf       	rjmp	.-42     	; 0xa82e <MoveSprite+0x4>
    a858:	0f 91       	pop	r16
    a85a:	08 95       	ret

0000a85c <InitializeVideoMode>:
    a85c:	e2 e0       	ldi	r30, 0x02	; 2
    a85e:	f1 e0       	ldi	r31, 0x01	; 1
    a860:	80 ee       	ldi	r24, 0xE0	; 224
    a862:	80 83       	st	Z, r24
    a864:	81 83       	std	Z+1, r24	; 0x01
    a866:	34 96       	adiw	r30, 0x04	; 4
    a868:	91 e0       	ldi	r25, 0x01	; 1
    a86a:	ea 33       	cpi	r30, 0x3A	; 58
    a86c:	f9 07       	cpc	r31, r25
    a86e:	c9 f7       	brne	.-14     	; 0xa862 <InitializeVideoMode+0x6>
    a870:	80 e2       	ldi	r24, 0x20	; 32
    a872:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollHeight>
    a876:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    a87a:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <free_tile_index>
    a87e:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <user_ram_tiles_c_tmp>
    a882:	08 95       	ret

0000a884 <DrawMap>:
    a884:	7f 92       	push	r7
    a886:	8f 92       	push	r8
    a888:	9f 92       	push	r9
    a88a:	af 92       	push	r10
    a88c:	bf 92       	push	r11
    a88e:	cf 92       	push	r12
    a890:	df 92       	push	r13
    a892:	ef 92       	push	r14
    a894:	ff 92       	push	r15
    a896:	0f 93       	push	r16
    a898:	1f 93       	push	r17
    a89a:	cf 93       	push	r28
    a89c:	df 93       	push	r29
    a89e:	98 2e       	mov	r9, r24
    a8a0:	86 2e       	mov	r8, r22
    a8a2:	fa 01       	movw	r30, r20
    a8a4:	e4 90       	lpm	r14, Z
    a8a6:	31 96       	adiw	r30, 0x01	; 1
    a8a8:	f4 90       	lpm	r15, Z
    a8aa:	ae 2c       	mov	r10, r14
    a8ac:	b1 2c       	mov	r11, r1
    a8ae:	ea 01       	movw	r28, r20
    a8b0:	22 96       	adiw	r28, 0x02	; 2
    a8b2:	10 e0       	ldi	r17, 0x00	; 0
    a8b4:	1f 15       	cp	r17, r15
    a8b6:	b9 f0       	breq	.+46     	; 0xa8e6 <DrawMap+0x62>
    a8b8:	6e 01       	movw	r12, r28
    a8ba:	00 e0       	ldi	r16, 0x00	; 0
    a8bc:	71 2e       	mov	r7, r17
    a8be:	78 0c       	add	r7, r8
    a8c0:	0e 15       	cp	r16, r14
    a8c2:	69 f0       	breq	.+26     	; 0xa8de <DrawMap+0x5a>
    a8c4:	f6 01       	movw	r30, r12
    a8c6:	44 91       	lpm	r20, Z
    a8c8:	50 e0       	ldi	r21, 0x00	; 0
    a8ca:	67 2d       	mov	r22, r7
    a8cc:	80 2f       	mov	r24, r16
    a8ce:	89 0d       	add	r24, r9
    a8d0:	0e 94 a8 47 	call	0x8f50	; 0x8f50 <SetTile>
    a8d4:	0f 5f       	subi	r16, 0xFF	; 255
    a8d6:	ff ef       	ldi	r31, 0xFF	; 255
    a8d8:	cf 1a       	sub	r12, r31
    a8da:	df 0a       	sbc	r13, r31
    a8dc:	f1 cf       	rjmp	.-30     	; 0xa8c0 <DrawMap+0x3c>
    a8de:	1f 5f       	subi	r17, 0xFF	; 255
    a8e0:	ca 0d       	add	r28, r10
    a8e2:	db 1d       	adc	r29, r11
    a8e4:	e7 cf       	rjmp	.-50     	; 0xa8b4 <DrawMap+0x30>
    a8e6:	df 91       	pop	r29
    a8e8:	cf 91       	pop	r28
    a8ea:	1f 91       	pop	r17
    a8ec:	0f 91       	pop	r16
    a8ee:	ff 90       	pop	r15
    a8f0:	ef 90       	pop	r14
    a8f2:	df 90       	pop	r13
    a8f4:	cf 90       	pop	r12
    a8f6:	bf 90       	pop	r11
    a8f8:	af 90       	pop	r10
    a8fa:	9f 90       	pop	r9
    a8fc:	8f 90       	pop	r8
    a8fe:	7f 90       	pop	r7
    a900:	08 95       	ret

0000a902 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    a902:	0f 93       	push	r16
    a904:	1f 93       	push	r17
    a906:	cf 93       	push	r28
    a908:	df 93       	push	r29
    a90a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a90c:	c0 e0       	ldi	r28, 0x00	; 0
    a90e:	d0 e0       	ldi	r29, 0x00	; 0
    a910:	c0 17       	cp	r28, r16
    a912:	d1 07       	cpc	r29, r17
    a914:	44 f4       	brge	.+16     	; 0xa926 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    a916:	0e 94 be 47 	call	0x8f7c	; 0x8f7c <GetVsyncFlag>
    a91a:	88 23       	and	r24, r24
    a91c:	e1 f3       	breq	.-8      	; 0xa916 <WaitVsync+0x14>
		ClearVsyncFlag();		
    a91e:	0e 94 c2 47 	call	0x8f84	; 0x8f84 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a922:	21 96       	adiw	r28, 0x01	; 1
    a924:	f5 cf       	rjmp	.-22     	; 0xa910 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    a926:	df 91       	pop	r29
    a928:	cf 91       	pop	r28
    a92a:	1f 91       	pop	r17
    a92c:	0f 91       	pop	r16
    a92e:	08 95       	ret

0000a930 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    a930:	83 e1       	ldi	r24, 0x13	; 19
    a932:	99 e0       	ldi	r25, 0x09	; 9
    a934:	0e 94 23 49 	call	0x9246	; 0x9246 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    a938:	83 e1       	ldi	r24, 0x13	; 19
    a93a:	91 e0       	ldi	r25, 0x01	; 1
    a93c:	0e 94 b9 47 	call	0x8f72	; 0x8f72 <SetTileTable>

	/* Draw logo */
	ClearVram();
    a940:	0e 94 9e 47 	call	0x8f3c	; 0x8f3c <ClearVram>
	WaitVsync(15U);
    a944:	8f e0       	ldi	r24, 0x0F	; 15
    a946:	90 e0       	ldi	r25, 0x00	; 0
    a948:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    a94c:	41 e0       	ldi	r20, 0x01	; 1
    a94e:	6f ef       	ldi	r22, 0xFF	; 255
    a950:	80 e0       	ldi	r24, 0x00	; 0
    a952:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a956:	4d ef       	ldi	r20, 0xFD	; 253
    a958:	50 e0       	ldi	r21, 0x00	; 0
    a95a:	6c e0       	ldi	r22, 0x0C	; 12
    a95c:	8c e0       	ldi	r24, 0x0C	; 12
    a95e:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
	WaitVsync(3);
    a962:	83 e0       	ldi	r24, 0x03	; 3
    a964:	90 e0       	ldi	r25, 0x00	; 0
    a966:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    a96a:	4c ee       	ldi	r20, 0xEC	; 236
    a96c:	50 e0       	ldi	r21, 0x00	; 0
    a96e:	6c e0       	ldi	r22, 0x0C	; 12
    a970:	8c e0       	ldi	r24, 0x0C	; 12
    a972:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
	WaitVsync(2);
    a976:	82 e0       	ldi	r24, 0x02	; 2
    a978:	90 e0       	ldi	r25, 0x00	; 0
    a97a:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a97e:	4d ef       	ldi	r20, 0xFD	; 253
    a980:	50 e0       	ldi	r21, 0x00	; 0
    a982:	6c e0       	ldi	r22, 0x0C	; 12
    a984:	8c e0       	ldi	r24, 0x0C	; 12
    a986:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    a98a:	81 e4       	ldi	r24, 0x41	; 65
    a98c:	90 e0       	ldi	r25, 0x00	; 0
    a98e:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
	ClearVram();
    a992:	0e 94 9e 47 	call	0x8f3c	; 0x8f3c <ClearVram>
	WaitVsync(20U);
    a996:	84 e1       	ldi	r24, 0x14	; 20
    a998:	90 e0       	ldi	r25, 0x00	; 0
    a99a:	0c 94 81 54 	jmp	0xa902	; 0xa902 <WaitVsync>

0000a99e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    a99e:	80 93 1c 09 	sts	0x091C, r24	; 0x80091c <fadeSpeed>
	currFadeFrame=0;
    a9a2:	10 92 1f 09 	sts	0x091F, r1	; 0x80091f <currFadeFrame>
	fadeActive=true;
    a9a6:	81 e0       	ldi	r24, 0x01	; 1
    a9a8:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <fadeActive>
		
	if(blocking){
    a9ac:	66 23       	and	r22, r22
    a9ae:	21 f0       	breq	.+8      	; 0xa9b8 <doFade+0x1a>
		while(fadeActive==true);
    a9b0:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <fadeActive>
    a9b4:	81 11       	cpse	r24, r1
    a9b6:	fc cf       	rjmp	.-8      	; 0xa9b0 <doFade+0x12>
    a9b8:	08 95       	ret

0000a9ba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    a9ba:	81 11       	cpse	r24, r1
    a9bc:	03 c0       	rjmp	.+6      	; 0xa9c4 <FadeIn+0xa>
		DDRC=0xff;
    a9be:	8f ef       	ldi	r24, 0xFF	; 255
    a9c0:	87 b9       	out	0x07, r24	; 7
		return;
    a9c2:	08 95       	ret
	}
	fadeStep=1;
    a9c4:	91 e0       	ldi	r25, 0x01	; 1
    a9c6:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <fadeStep>
	fadeDir=1;
    a9ca:	90 93 1d 09 	sts	0x091D, r25	; 0x80091d <fadeDir>
	doFade(speed,blocking);
    a9ce:	0c 94 cf 54 	jmp	0xa99e	; 0xa99e <doFade>

0000a9d2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    a9d2:	81 11       	cpse	r24, r1
    a9d4:	02 c0       	rjmp	.+4      	; 0xa9da <FadeOut+0x8>
		DDRC=0;
    a9d6:	17 b8       	out	0x07, r1	; 7
		return;
    a9d8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    a9da:	9c e0       	ldi	r25, 0x0C	; 12
    a9dc:	90 93 20 09 	sts	0x0920, r25	; 0x800920 <fadeStep>
	fadeDir=-1;
    a9e0:	9f ef       	ldi	r25, 0xFF	; 255
    a9e2:	90 93 1d 09 	sts	0x091D, r25	; 0x80091d <fadeDir>
	doFade(speed,blocking);
    a9e6:	0c 94 cf 54 	jmp	0xa99e	; 0xa99e <doFade>

0000a9ea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    a9ea:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <fadeActive>
    a9ee:	88 23       	and	r24, r24
    a9f0:	01 f1       	breq	.+64     	; 0xaa32 <ProcessFading+0x48>
		if(currFadeFrame==0){
    a9f2:	80 91 1f 09 	lds	r24, 0x091F	; 0x80091f <currFadeFrame>
    a9f6:	81 11       	cpse	r24, r1
    a9f8:	19 c0       	rjmp	.+50     	; 0xaa2c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    a9fa:	80 91 1c 09 	lds	r24, 0x091C	; 0x80091c <fadeSpeed>
    a9fe:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    aa02:	e0 91 20 09 	lds	r30, 0x0920	; 0x800920 <fadeStep>
    aa06:	f0 e0       	ldi	r31, 0x00	; 0
    aa08:	e1 52       	subi	r30, 0x21	; 33
    aa0a:	ff 4f       	sbci	r31, 0xFF	; 255
    aa0c:	e4 91       	lpm	r30, Z
    aa0e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    aa10:	90 91 20 09 	lds	r25, 0x0920	; 0x800920 <fadeStep>
    aa14:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <fadeDir>
    aa18:	89 0f       	add	r24, r25
    aa1a:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    aa1e:	88 23       	and	r24, r24
    aa20:	11 f0       	breq	.+4      	; 0xaa26 <ProcessFading+0x3c>
    aa22:	8d 30       	cpi	r24, 0x0D	; 13
    aa24:	31 f4       	brne	.+12     	; 0xaa32 <ProcessFading+0x48>
				fadeActive=false;
    aa26:	10 92 1e 09 	sts	0x091E, r1	; 0x80091e <fadeActive>
    aa2a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    aa2c:	81 50       	subi	r24, 0x01	; 1
    aa2e:	80 93 1f 09 	sts	0x091F, r24	; 0x80091f <currFadeFrame>
    aa32:	08 95       	ret

0000aa34 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    aa34:	0e 94 f5 54 	call	0xa9ea	; 0xa9ea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    aa38:	0c 94 80 52 	jmp	0xa500	; 0xa500 <ProcessSprites>

0000aa3c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    aa3c:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    aa40:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    aa44:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    aa48:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    aa4c:	01 96       	adiw	r24, 0x01	; 1
    aa4e:	a1 1d       	adc	r26, r1
    aa50:	b1 1d       	adc	r27, r1
    aa52:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <time>
    aa56:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <time+0x1>
    aa5a:	a0 93 86 09 	sts	0x0986, r26	; 0x800986 <time+0x2>
    aa5e:	b0 93 87 09 	sts	0x0987, r27	; 0x800987 <time+0x3>
    aa62:	08 95       	ret

0000aa64 <drawplayer>:
return;
  
}

void drawplayer()
{
    aa64:	0f 93       	push	r16
 
if  ( player.jumping == false  )
    aa66:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <player+0xd>
    aa6a:	81 11       	cpse	r24, r1
    aa6c:	74 c0       	rjmp	.+232    	; 0xab56 <drawplayer+0xf2>
{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,0);
    aa6e:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    aa72:	82 37       	cpi	r24, 0x72	; 114
    aa74:	49 f4       	brne	.+18     	; 0xaa88 <drawplayer+0x24>
    aa76:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    aa7a:	81 11       	cpse	r24, r1
    aa7c:	05 c0       	rjmp	.+10     	; 0xaa88 <drawplayer+0x24>
    aa7e:	40 e0       	ldi	r20, 0x00	; 0
    aa80:	6f e9       	ldi	r22, 0x9F	; 159
    aa82:	75 e5       	ldi	r23, 0x55	; 85
    aa84:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,1);
    aa88:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    aa8c:	8c 36       	cpi	r24, 0x6C	; 108
    aa8e:	49 f4       	brne	.+18     	; 0xaaa2 <drawplayer+0x3e>
    aa90:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    aa94:	81 11       	cpse	r24, r1
    aa96:	05 c0       	rjmp	.+10     	; 0xaaa2 <drawplayer+0x3e>
    aa98:	41 e0       	ldi	r20, 0x01	; 1
    aa9a:	6f e9       	ldi	r22, 0x9F	; 159
    aa9c:	75 e5       	ldi	r23, 0x55	; 85
    aa9e:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,0);
    aaa2:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    aaa6:	82 37       	cpi	r24, 0x72	; 114
    aaa8:	59 f4       	brne	.+22     	; 0xaac0 <drawplayer+0x5c>
    aaaa:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    aaae:	81 50       	subi	r24, 0x01	; 1
    aab0:	88 30       	cpi	r24, 0x08	; 8
    aab2:	30 f4       	brcc	.+12     	; 0xaac0 <drawplayer+0x5c>
    aab4:	40 e0       	ldi	r20, 0x00	; 0
    aab6:	67 e9       	ldi	r22, 0x97	; 151
    aab8:	75 e5       	ldi	r23, 0x55	; 85
    aaba:	80 e0       	ldi	r24, 0x00	; 0
    aabc:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,0);    
    aac0:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    aac4:	82 37       	cpi	r24, 0x72	; 114
    aac6:	59 f4       	brne	.+22     	; 0xaade <drawplayer+0x7a>
    aac8:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    aacc:	89 50       	subi	r24, 0x09	; 9
    aace:	88 30       	cpi	r24, 0x08	; 8
    aad0:	30 f4       	brcc	.+12     	; 0xaade <drawplayer+0x7a>
    aad2:	40 e0       	ldi	r20, 0x00	; 0
    aad4:	6f e8       	ldi	r22, 0x8F	; 143
    aad6:	75 e5       	ldi	r23, 0x55	; 85
    aad8:	80 e0       	ldi	r24, 0x00	; 0
    aada:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,0);  
    aade:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    aae2:	82 37       	cpi	r24, 0x72	; 114
    aae4:	59 f4       	brne	.+22     	; 0xaafc <drawplayer+0x98>
    aae6:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    aaea:	81 51       	subi	r24, 0x11	; 17
    aaec:	88 30       	cpi	r24, 0x08	; 8
    aaee:	30 f4       	brcc	.+12     	; 0xaafc <drawplayer+0x98>
    aaf0:	40 e0       	ldi	r20, 0x00	; 0
    aaf2:	6f e7       	ldi	r22, 0x7F	; 127
    aaf4:	75 e5       	ldi	r23, 0x55	; 85
    aaf6:	80 e0       	ldi	r24, 0x00	; 0
    aaf8:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,1);
    aafc:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    ab00:	8c 36       	cpi	r24, 0x6C	; 108
    ab02:	59 f4       	brne	.+22     	; 0xab1a <drawplayer+0xb6>
    ab04:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    ab08:	81 50       	subi	r24, 0x01	; 1
    ab0a:	88 30       	cpi	r24, 0x08	; 8
    ab0c:	30 f4       	brcc	.+12     	; 0xab1a <drawplayer+0xb6>
    ab0e:	41 e0       	ldi	r20, 0x01	; 1
    ab10:	67 e9       	ldi	r22, 0x97	; 151
    ab12:	75 e5       	ldi	r23, 0x55	; 85
    ab14:	80 e0       	ldi	r24, 0x00	; 0
    ab16:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,1);    
    ab1a:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    ab1e:	8c 36       	cpi	r24, 0x6C	; 108
    ab20:	59 f4       	brne	.+22     	; 0xab38 <drawplayer+0xd4>
    ab22:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    ab26:	89 50       	subi	r24, 0x09	; 9
    ab28:	88 30       	cpi	r24, 0x08	; 8
    ab2a:	30 f4       	brcc	.+12     	; 0xab38 <drawplayer+0xd4>
    ab2c:	41 e0       	ldi	r20, 0x01	; 1
    ab2e:	6f e8       	ldi	r22, 0x8F	; 143
    ab30:	75 e5       	ldi	r23, 0x55	; 85
    ab32:	80 e0       	ldi	r24, 0x00	; 0
    ab34:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,1);  
    ab38:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    ab3c:	8c 36       	cpi	r24, 0x6C	; 108
    ab3e:	59 f4       	brne	.+22     	; 0xab56 <drawplayer+0xf2>
    ab40:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    ab44:	81 51       	subi	r24, 0x11	; 17
    ab46:	88 30       	cpi	r24, 0x08	; 8
    ab48:	a0 f4       	brcc	.+40     	; 0xab72 <drawplayer+0x10e>
    ab4a:	41 e0       	ldi	r20, 0x01	; 1
    ab4c:	6f e7       	ldi	r22, 0x7F	; 127
    ab4e:	75 e5       	ldi	r23, 0x55	; 85
    ab50:	80 e0       	ldi	r24, 0x00	; 0
    ab52:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
};

if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,melli3 ,0);   
    ab56:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    ab5a:	82 37       	cpi	r24, 0x72	; 114
    ab5c:	51 f4       	brne	.+20     	; 0xab72 <drawplayer+0x10e>
    ab5e:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <player+0xd>
    ab62:	88 23       	and	r24, r24
    ab64:	31 f0       	breq	.+12     	; 0xab72 <drawplayer+0x10e>
    ab66:	40 e0       	ldi	r20, 0x00	; 0
    ab68:	67 e8       	ldi	r22, 0x87	; 135
    ab6a:	75 e5       	ldi	r23, 0x55	; 85
    ab6c:	80 e0       	ldi	r24, 0x00	; 0
    ab6e:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,melli3 ,1); 
    ab72:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x7>
    ab76:	8c 36       	cpi	r24, 0x6C	; 108
    ab78:	51 f4       	brne	.+20     	; 0xab8e <drawplayer+0x12a>
    ab7a:	80 91 6a 09 	lds	r24, 0x096A	; 0x80096a <player+0xd>
    ab7e:	88 23       	and	r24, r24
    ab80:	31 f0       	breq	.+12     	; 0xab8e <drawplayer+0x12a>
    ab82:	41 e0       	ldi	r20, 0x01	; 1
    ab84:	67 e8       	ldi	r22, 0x87	; 135
    ab86:	75 e5       	ldi	r23, 0x55	; 85
    ab88:	80 e0       	ldi	r24, 0x00	; 0
    ab8a:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    ab8e:	40 91 5f 09 	lds	r20, 0x095F	; 0x80095f <player+0x2>
    ab92:	45 51       	subi	r20, 0x15	; 21
    ab94:	60 91 5d 09 	lds	r22, 0x095D	; 0x80095d <player>
    ab98:	67 50       	subi	r22, 0x07	; 7
    ab9a:	03 e0       	ldi	r16, 0x03	; 3
    ab9c:	22 e0       	ldi	r18, 0x02	; 2
    ab9e:	80 e0       	ldi	r24, 0x00	; 0
    aba0:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>



aniframe++;
    aba4:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <aniframe>
    aba8:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    abaa:	85 31       	cpi	r24, 0x15	; 21
    abac:	18 f4       	brcc	.+6      	; 0xabb4 <drawplayer+0x150>
if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,melli3 ,1); 
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);



aniframe++;
    abae:	80 93 e6 09 	sts	0x09E6, r24	; 0x8009e6 <aniframe>
    abb2:	02 c0       	rjmp	.+4      	; 0xabb8 <drawplayer+0x154>
if ( aniframe > 20 ) aniframe = 0;     
    abb4:	10 92 e6 09 	sts	0x09E6, r1	; 0x8009e6 <aniframe>


}
    abb8:	0f 91       	pop	r16
    abba:	08 95       	ret

0000abbc <drawplayer2>:
void drawplayer2()
{
    abbc:	0f 93       	push	r16
 
if  ( player2.jumping == false  )
    abbe:	80 91 96 09 	lds	r24, 0x0996	; 0x800996 <player2+0xd>
    abc2:	81 11       	cpse	r24, r1
    abc4:	76 c0       	rjmp	.+236    	; 0xacb2 <drawplayer2+0xf6>
{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(spriteInd ,man0 ,0);
    abc6:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    abca:	82 37       	cpi	r24, 0x72	; 114
    abcc:	51 f4       	brne	.+20     	; 0xabe2 <drawplayer2+0x26>
    abce:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    abd2:	81 11       	cpse	r24, r1
    abd4:	06 c0       	rjmp	.+12     	; 0xabe2 <drawplayer2+0x26>
    abd6:	40 e0       	ldi	r20, 0x00	; 0
    abd8:	63 e5       	ldi	r22, 0x53	; 83
    abda:	75 e5       	ldi	r23, 0x55	; 85
    abdc:	8a e0       	ldi	r24, 0x0A	; 10
    abde:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(spriteInd,man0 ,1);
    abe2:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    abe6:	8c 36       	cpi	r24, 0x6C	; 108
    abe8:	51 f4       	brne	.+20     	; 0xabfe <drawplayer2+0x42>
    abea:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    abee:	81 11       	cpse	r24, r1
    abf0:	06 c0       	rjmp	.+12     	; 0xabfe <drawplayer2+0x42>
    abf2:	41 e0       	ldi	r20, 0x01	; 1
    abf4:	63 e5       	ldi	r22, 0x53	; 83
    abf6:	75 e5       	ldi	r23, 0x55	; 85
    abf8:	8a e0       	ldi	r24, 0x0A	; 10
    abfa:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,0);
    abfe:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac02:	82 37       	cpi	r24, 0x72	; 114
    ac04:	59 f4       	brne	.+22     	; 0xac1c <drawplayer2+0x60>
    ac06:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ac0a:	81 50       	subi	r24, 0x01	; 1
    ac0c:	88 30       	cpi	r24, 0x08	; 8
    ac0e:	30 f4       	brcc	.+12     	; 0xac1c <drawplayer2+0x60>
    ac10:	40 e0       	ldi	r20, 0x00	; 0
    ac12:	6b e4       	ldi	r22, 0x4B	; 75
    ac14:	75 e5       	ldi	r23, 0x55	; 85
    ac16:	8a e0       	ldi	r24, 0x0A	; 10
    ac18:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,0);    
    ac1c:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac20:	82 37       	cpi	r24, 0x72	; 114
    ac22:	59 f4       	brne	.+22     	; 0xac3a <drawplayer2+0x7e>
    ac24:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ac28:	89 50       	subi	r24, 0x09	; 9
    ac2a:	88 30       	cpi	r24, 0x08	; 8
    ac2c:	30 f4       	brcc	.+12     	; 0xac3a <drawplayer2+0x7e>
    ac2e:	40 e0       	ldi	r20, 0x00	; 0
    ac30:	63 e4       	ldi	r22, 0x43	; 67
    ac32:	75 e5       	ldi	r23, 0x55	; 85
    ac34:	8a e0       	ldi	r24, 0x0A	; 10
    ac36:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,0);  
    ac3a:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac3e:	82 37       	cpi	r24, 0x72	; 114
    ac40:	59 f4       	brne	.+22     	; 0xac58 <drawplayer2+0x9c>
    ac42:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ac46:	81 51       	subi	r24, 0x11	; 17
    ac48:	88 30       	cpi	r24, 0x08	; 8
    ac4a:	30 f4       	brcc	.+12     	; 0xac58 <drawplayer2+0x9c>
    ac4c:	40 e0       	ldi	r20, 0x00	; 0
    ac4e:	63 e3       	ldi	r22, 0x33	; 51
    ac50:	75 e5       	ldi	r23, 0x55	; 85
    ac52:	8a e0       	ldi	r24, 0x0A	; 10
    ac54:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,1);
    ac58:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac5c:	8c 36       	cpi	r24, 0x6C	; 108
    ac5e:	59 f4       	brne	.+22     	; 0xac76 <drawplayer2+0xba>
    ac60:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ac64:	81 50       	subi	r24, 0x01	; 1
    ac66:	88 30       	cpi	r24, 0x08	; 8
    ac68:	30 f4       	brcc	.+12     	; 0xac76 <drawplayer2+0xba>
    ac6a:	41 e0       	ldi	r20, 0x01	; 1
    ac6c:	6b e4       	ldi	r22, 0x4B	; 75
    ac6e:	75 e5       	ldi	r23, 0x55	; 85
    ac70:	8a e0       	ldi	r24, 0x0A	; 10
    ac72:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,1);    
    ac76:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac7a:	8c 36       	cpi	r24, 0x6C	; 108
    ac7c:	59 f4       	brne	.+22     	; 0xac94 <drawplayer2+0xd8>
    ac7e:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ac82:	89 50       	subi	r24, 0x09	; 9
    ac84:	88 30       	cpi	r24, 0x08	; 8
    ac86:	30 f4       	brcc	.+12     	; 0xac94 <drawplayer2+0xd8>
    ac88:	41 e0       	ldi	r20, 0x01	; 1
    ac8a:	63 e4       	ldi	r22, 0x43	; 67
    ac8c:	75 e5       	ldi	r23, 0x55	; 85
    ac8e:	8a e0       	ldi	r24, 0x0A	; 10
    ac90:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,1);  
    ac94:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    ac98:	8c 36       	cpi	r24, 0x6C	; 108
    ac9a:	59 f4       	brne	.+22     	; 0xacb2 <drawplayer2+0xf6>
    ac9c:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    aca0:	81 51       	subi	r24, 0x11	; 17
    aca2:	88 30       	cpi	r24, 0x08	; 8
    aca4:	a0 f4       	brcc	.+40     	; 0xacce <drawplayer2+0x112>
    aca6:	41 e0       	ldi	r20, 0x01	; 1
    aca8:	63 e3       	ldi	r22, 0x33	; 51
    acaa:	75 e5       	ldi	r23, 0x55	; 85
    acac:	8a e0       	ldi	r24, 0x0A	; 10
    acae:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
};

if (player2.direction == 'r' && player2.jumping == true  ) MapSprite2(spriteInd ,man3 ,0);   
    acb2:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    acb6:	82 37       	cpi	r24, 0x72	; 114
    acb8:	51 f4       	brne	.+20     	; 0xacce <drawplayer2+0x112>
    acba:	80 91 96 09 	lds	r24, 0x0996	; 0x800996 <player2+0xd>
    acbe:	88 23       	and	r24, r24
    acc0:	31 f0       	breq	.+12     	; 0xacce <drawplayer2+0x112>
    acc2:	40 e0       	ldi	r20, 0x00	; 0
    acc4:	6b e3       	ldi	r22, 0x3B	; 59
    acc6:	75 e5       	ldi	r23, 0x55	; 85
    acc8:	8a e0       	ldi	r24, 0x0A	; 10
    acca:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
if (player2.direction == 'l' && player2.jumping == true ) MapSprite2(spriteInd ,man3 ,1); 
    acce:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <player2+0x7>
    acd2:	8c 36       	cpi	r24, 0x6C	; 108
    acd4:	51 f4       	brne	.+20     	; 0xacea <drawplayer2+0x12e>
    acd6:	80 91 96 09 	lds	r24, 0x0996	; 0x800996 <player2+0xd>
    acda:	88 23       	and	r24, r24
    acdc:	31 f0       	breq	.+12     	; 0xacea <drawplayer2+0x12e>
    acde:	41 e0       	ldi	r20, 0x01	; 1
    ace0:	6b e3       	ldi	r22, 0x3B	; 59
    ace2:	75 e5       	ldi	r23, 0x55	; 85
    ace4:	8a e0       	ldi	r24, 0x0A	; 10
    ace6:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MoveSprite(spriteInd ,player2.x -0 ,player2.y - 21  ,2 ,3);
    acea:	40 91 8b 09 	lds	r20, 0x098B	; 0x80098b <player2+0x2>
    acee:	45 51       	subi	r20, 0x15	; 21
    acf0:	03 e0       	ldi	r16, 0x03	; 3
    acf2:	22 e0       	ldi	r18, 0x02	; 2
    acf4:	60 91 89 09 	lds	r22, 0x0989	; 0x800989 <player2>
    acf8:	8a e0       	ldi	r24, 0x0A	; 10
    acfa:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
player2.aniframe++;
    acfe:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    ad02:	8f 5f       	subi	r24, 0xFF	; 255
if ( player2.aniframe > 20 ) player2.aniframe = 0;     
    ad04:	85 31       	cpi	r24, 0x15	; 21
    ad06:	18 f4       	brcc	.+6      	; 0xad0e <drawplayer2+0x152>
};

if (player2.direction == 'r' && player2.jumping == true  ) MapSprite2(spriteInd ,man3 ,0);   
if (player2.direction == 'l' && player2.jumping == true ) MapSprite2(spriteInd ,man3 ,1); 
MoveSprite(spriteInd ,player2.x -0 ,player2.y - 21  ,2 ,3);
player2.aniframe++;
    ad08:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <player2+0x10>
    ad0c:	02 c0       	rjmp	.+4      	; 0xad12 <drawplayer2+0x156>
if ( player2.aniframe > 20 ) player2.aniframe = 0;     
    ad0e:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <player2+0x10>


}
    ad12:	0f 91       	pop	r16
    ad14:	08 95       	ret

0000ad16 <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    ad16:	ef 92       	push	r14
    ad18:	ff 92       	push	r15
    ad1a:	1f 93       	push	r17
    ad1c:	cf 93       	push	r28
    ad1e:	df 93       	push	r29
    ad20:	cd b7       	in	r28, 0x3d	; 61
    ad22:	de b7       	in	r29, 0x3e	; 62
    ad24:	2a 97       	sbiw	r28, 0x0a	; 10
    ad26:	0f b6       	in	r0, 0x3f	; 63
    ad28:	f8 94       	cli
    ad2a:	de bf       	out	0x3e, r29	; 62
    ad2c:	0f be       	out	0x3f, r0	; 63
    ad2e:	cd bf       	out	0x3d, r28	; 61
    ad30:	18 2f       	mov	r17, r24
    ad32:	fa 01       	movw	r30, r20
    ad34:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    ad36:	90 e2       	ldi	r25, 0x20	; 32
    ad38:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    ad3a:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    ad3c:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    ad3e:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    ad40:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    ad42:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    ad44:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    ad46:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    ad48:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    ad4a:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    ad4c:	4a e0       	ldi	r20, 0x0A	; 10
    ad4e:	be 01       	movw	r22, r28
    ad50:	6f 5f       	subi	r22, 0xFF	; 255
    ad52:	7f 4f       	sbci	r23, 0xFF	; 255
    ad54:	cf 01       	movw	r24, r30
    ad56:	0e 94 b5 6d 	call	0xdb6a	; 0xdb6a <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    ad5a:	10 92 e5 09 	sts	0x09E5, r1	; 0x8009e5 <lx+0x1>
    ad5e:	10 92 e4 09 	sts	0x09E4, r1	; 0x8009e4 <lx>
    ad62:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ad66:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ad6a:	86 30       	cpi	r24, 0x06	; 6
    ad6c:	91 05       	cpc	r25, r1
    ad6e:	0c f0       	brlt	.+2      	; 0xad72 <printtileint+0x5c>
    ad70:	f8 c0       	rjmp	.+496    	; 0xaf62 <printtileint+0x24c>
    ad72:	8e 15       	cp	r24, r14
    ad74:	9f 05       	cpc	r25, r15
    ad76:	0c f0       	brlt	.+2      	; 0xad7a <printtileint+0x64>
    ad78:	f4 c0       	rjmp	.+488    	; 0xaf62 <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, nb ); 
    ad7a:	4f e9       	ldi	r20, 0x9F	; 159
    ad7c:	53 e8       	ldi	r21, 0x83	; 131
    ad7e:	60 e2       	ldi	r22, 0x20	; 32
    ad80:	81 0f       	add	r24, r17
    ad82:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,VRAM_TILES_V, n0 );  
    ad86:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ad8a:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ad8e:	e1 e0       	ldi	r30, 0x01	; 1
    ad90:	f0 e0       	ldi	r31, 0x00	; 0
    ad92:	ec 0f       	add	r30, r28
    ad94:	fd 1f       	adc	r31, r29
    ad96:	e8 0f       	add	r30, r24
    ad98:	f9 1f       	adc	r31, r25
    ad9a:	20 81       	ld	r18, Z
    ad9c:	20 33       	cpi	r18, 0x30	; 48
    ad9e:	31 f4       	brne	.+12     	; 0xadac <printtileint+0x96>
    ada0:	4c e9       	ldi	r20, 0x9C	; 156
    ada2:	53 e8       	ldi	r21, 0x83	; 131
    ada4:	60 e2       	ldi	r22, 0x20	; 32
    ada6:	81 0f       	add	r24, r17
    ada8:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,VRAM_TILES_V, n1 ); 
    adac:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    adb0:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    adb4:	e1 e0       	ldi	r30, 0x01	; 1
    adb6:	f0 e0       	ldi	r31, 0x00	; 0
    adb8:	ec 0f       	add	r30, r28
    adba:	fd 1f       	adc	r31, r29
    adbc:	e8 0f       	add	r30, r24
    adbe:	f9 1f       	adc	r31, r25
    adc0:	20 81       	ld	r18, Z
    adc2:	21 33       	cpi	r18, 0x31	; 49
    adc4:	31 f4       	brne	.+12     	; 0xadd2 <printtileint+0xbc>
    adc6:	49 e9       	ldi	r20, 0x99	; 153
    adc8:	53 e8       	ldi	r21, 0x83	; 131
    adca:	60 e2       	ldi	r22, 0x20	; 32
    adcc:	81 0f       	add	r24, r17
    adce:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,VRAM_TILES_V, n2 ); 
    add2:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    add6:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    adda:	e1 e0       	ldi	r30, 0x01	; 1
    addc:	f0 e0       	ldi	r31, 0x00	; 0
    adde:	ec 0f       	add	r30, r28
    ade0:	fd 1f       	adc	r31, r29
    ade2:	e8 0f       	add	r30, r24
    ade4:	f9 1f       	adc	r31, r25
    ade6:	20 81       	ld	r18, Z
    ade8:	22 33       	cpi	r18, 0x32	; 50
    adea:	31 f4       	brne	.+12     	; 0xadf8 <printtileint+0xe2>
    adec:	46 e9       	ldi	r20, 0x96	; 150
    adee:	53 e8       	ldi	r21, 0x83	; 131
    adf0:	60 e2       	ldi	r22, 0x20	; 32
    adf2:	81 0f       	add	r24, r17
    adf4:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,VRAM_TILES_V, n3 ); 
    adf8:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    adfc:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ae00:	e1 e0       	ldi	r30, 0x01	; 1
    ae02:	f0 e0       	ldi	r31, 0x00	; 0
    ae04:	ec 0f       	add	r30, r28
    ae06:	fd 1f       	adc	r31, r29
    ae08:	e8 0f       	add	r30, r24
    ae0a:	f9 1f       	adc	r31, r25
    ae0c:	20 81       	ld	r18, Z
    ae0e:	23 33       	cpi	r18, 0x33	; 51
    ae10:	31 f4       	brne	.+12     	; 0xae1e <printtileint+0x108>
    ae12:	43 e9       	ldi	r20, 0x93	; 147
    ae14:	53 e8       	ldi	r21, 0x83	; 131
    ae16:	60 e2       	ldi	r22, 0x20	; 32
    ae18:	81 0f       	add	r24, r17
    ae1a:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,VRAM_TILES_V, n4); 
    ae1e:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ae22:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ae26:	e1 e0       	ldi	r30, 0x01	; 1
    ae28:	f0 e0       	ldi	r31, 0x00	; 0
    ae2a:	ec 0f       	add	r30, r28
    ae2c:	fd 1f       	adc	r31, r29
    ae2e:	e8 0f       	add	r30, r24
    ae30:	f9 1f       	adc	r31, r25
    ae32:	20 81       	ld	r18, Z
    ae34:	24 33       	cpi	r18, 0x34	; 52
    ae36:	31 f4       	brne	.+12     	; 0xae44 <printtileint+0x12e>
    ae38:	40 e9       	ldi	r20, 0x90	; 144
    ae3a:	53 e8       	ldi	r21, 0x83	; 131
    ae3c:	60 e2       	ldi	r22, 0x20	; 32
    ae3e:	81 0f       	add	r24, r17
    ae40:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,VRAM_TILES_V, n5 ); 
    ae44:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ae48:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ae4c:	e1 e0       	ldi	r30, 0x01	; 1
    ae4e:	f0 e0       	ldi	r31, 0x00	; 0
    ae50:	ec 0f       	add	r30, r28
    ae52:	fd 1f       	adc	r31, r29
    ae54:	e8 0f       	add	r30, r24
    ae56:	f9 1f       	adc	r31, r25
    ae58:	20 81       	ld	r18, Z
    ae5a:	25 33       	cpi	r18, 0x35	; 53
    ae5c:	31 f4       	brne	.+12     	; 0xae6a <printtileint+0x154>
    ae5e:	4d e8       	ldi	r20, 0x8D	; 141
    ae60:	53 e8       	ldi	r21, 0x83	; 131
    ae62:	60 e2       	ldi	r22, 0x20	; 32
    ae64:	81 0f       	add	r24, r17
    ae66:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,VRAM_TILES_V, n6 ); 
    ae6a:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ae6e:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ae72:	e1 e0       	ldi	r30, 0x01	; 1
    ae74:	f0 e0       	ldi	r31, 0x00	; 0
    ae76:	ec 0f       	add	r30, r28
    ae78:	fd 1f       	adc	r31, r29
    ae7a:	e8 0f       	add	r30, r24
    ae7c:	f9 1f       	adc	r31, r25
    ae7e:	20 81       	ld	r18, Z
    ae80:	26 33       	cpi	r18, 0x36	; 54
    ae82:	31 f4       	brne	.+12     	; 0xae90 <printtileint+0x17a>
    ae84:	4a e8       	ldi	r20, 0x8A	; 138
    ae86:	53 e8       	ldi	r21, 0x83	; 131
    ae88:	60 e2       	ldi	r22, 0x20	; 32
    ae8a:	81 0f       	add	r24, r17
    ae8c:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,VRAM_TILES_V, n7 ); 
    ae90:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    ae94:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    ae98:	e1 e0       	ldi	r30, 0x01	; 1
    ae9a:	f0 e0       	ldi	r31, 0x00	; 0
    ae9c:	ec 0f       	add	r30, r28
    ae9e:	fd 1f       	adc	r31, r29
    aea0:	e8 0f       	add	r30, r24
    aea2:	f9 1f       	adc	r31, r25
    aea4:	20 81       	ld	r18, Z
    aea6:	27 33       	cpi	r18, 0x37	; 55
    aea8:	31 f4       	brne	.+12     	; 0xaeb6 <printtileint+0x1a0>
    aeaa:	47 e8       	ldi	r20, 0x87	; 135
    aeac:	53 e8       	ldi	r21, 0x83	; 131
    aeae:	60 e2       	ldi	r22, 0x20	; 32
    aeb0:	81 0f       	add	r24, r17
    aeb2:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,VRAM_TILES_V, n8 ); 
    aeb6:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    aeba:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    aebe:	e1 e0       	ldi	r30, 0x01	; 1
    aec0:	f0 e0       	ldi	r31, 0x00	; 0
    aec2:	ec 0f       	add	r30, r28
    aec4:	fd 1f       	adc	r31, r29
    aec6:	e8 0f       	add	r30, r24
    aec8:	f9 1f       	adc	r31, r25
    aeca:	20 81       	ld	r18, Z
    aecc:	28 33       	cpi	r18, 0x38	; 56
    aece:	31 f4       	brne	.+12     	; 0xaedc <printtileint+0x1c6>
    aed0:	44 e8       	ldi	r20, 0x84	; 132
    aed2:	53 e8       	ldi	r21, 0x83	; 131
    aed4:	60 e2       	ldi	r22, 0x20	; 32
    aed6:	81 0f       	add	r24, r17
    aed8:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,VRAM_TILES_V, n9 );
    aedc:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    aee0:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    aee4:	e1 e0       	ldi	r30, 0x01	; 1
    aee6:	f0 e0       	ldi	r31, 0x00	; 0
    aee8:	ec 0f       	add	r30, r28
    aeea:	fd 1f       	adc	r31, r29
    aeec:	e8 0f       	add	r30, r24
    aeee:	f9 1f       	adc	r31, r25
    aef0:	20 81       	ld	r18, Z
    aef2:	29 33       	cpi	r18, 0x39	; 57
    aef4:	31 f4       	brne	.+12     	; 0xaf02 <printtileint+0x1ec>
    aef6:	41 e8       	ldi	r20, 0x81	; 129
    aef8:	53 e8       	ldi	r21, 0x83	; 131
    aefa:	60 e2       	ldi	r22, 0x20	; 32
    aefc:	81 0f       	add	r24, r17
    aefe:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,VRAM_TILES_V, nm );    
    af02:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    af06:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    af0a:	e1 e0       	ldi	r30, 0x01	; 1
    af0c:	f0 e0       	ldi	r31, 0x00	; 0
    af0e:	ec 0f       	add	r30, r28
    af10:	fd 1f       	adc	r31, r29
    af12:	e8 0f       	add	r30, r24
    af14:	f9 1f       	adc	r31, r25
    af16:	20 81       	ld	r18, Z
    af18:	2d 32       	cpi	r18, 0x2D	; 45
    af1a:	31 f4       	brne	.+12     	; 0xaf28 <printtileint+0x212>
    af1c:	4e e7       	ldi	r20, 0x7E	; 126
    af1e:	53 e8       	ldi	r21, 0x83	; 131
    af20:	60 e2       	ldi	r22, 0x20	; 32
    af22:	81 0f       	add	r24, r17
    af24:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    af28:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    af2c:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    af30:	e1 e0       	ldi	r30, 0x01	; 1
    af32:	f0 e0       	ldi	r31, 0x00	; 0
    af34:	ec 0f       	add	r30, r28
    af36:	fd 1f       	adc	r31, r29
    af38:	e8 0f       	add	r30, r24
    af3a:	f9 1f       	adc	r31, r25
    af3c:	20 81       	ld	r18, Z
    af3e:	20 32       	cpi	r18, 0x20	; 32
    af40:	31 f4       	brne	.+12     	; 0xaf4e <printtileint+0x238>
    af42:	4f e9       	ldi	r20, 0x9F	; 159
    af44:	53 e8       	ldi	r21, 0x83	; 131
    af46:	60 e2       	ldi	r22, 0x20	; 32
    af48:	81 0f       	add	r24, r17
    af4a:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    af4e:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    af52:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    af56:	01 96       	adiw	r24, 0x01	; 1
    af58:	90 93 e5 09 	sts	0x09E5, r25	; 0x8009e5 <lx+0x1>
    af5c:	80 93 e4 09 	sts	0x09E4, r24	; 0x8009e4 <lx>
    af60:	00 cf       	rjmp	.-512    	; 0xad62 <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    

};
    
}
    af62:	2a 96       	adiw	r28, 0x0a	; 10
    af64:	0f b6       	in	r0, 0x3f	; 63
    af66:	f8 94       	cli
    af68:	de bf       	out	0x3e, r29	; 62
    af6a:	0f be       	out	0x3f, r0	; 63
    af6c:	cd bf       	out	0x3d, r28	; 61
    af6e:	df 91       	pop	r29
    af70:	cf 91       	pop	r28
    af72:	1f 91       	pop	r17
    af74:	ff 90       	pop	r15
    af76:	ef 90       	pop	r14
    af78:	08 95       	ret

0000af7a <initlevel>:

void initlevel()
{
    af7a:	e9 ea       	ldi	r30, 0xA9	; 169
    af7c:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    af7e:	80 e0       	ldi	r24, 0x00	; 0
    af80:	90 e0       	ldi	r25, 0x00	; 0
    af82:	11 92       	st	Z+, r1
    af84:	11 92       	st	Z+, r1
    af86:	01 96       	adiw	r24, 0x01	; 1
    af88:	89 31       	cpi	r24, 0x19	; 25
    af8a:	91 05       	cpc	r25, r1
    af8c:	d1 f7       	brne	.-12     	; 0xaf82 <initlevel+0x8>
    af8e:	e1 e2       	ldi	r30, 0x21	; 33
    af90:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    af92:	80 e0       	ldi	r24, 0x00	; 0
    af94:	90 e0       	ldi	r25, 0x00	; 0
    af96:	11 82       	std	Z+1, r1	; 0x01
    af98:	10 82       	st	Z, r1
    af9a:	12 82       	std	Z+2, r1	; 0x02
    af9c:	13 82       	std	Z+3, r1	; 0x03
    af9e:	01 96       	adiw	r24, 0x01	; 1
    afa0:	34 96       	adiw	r30, 0x04	; 4
    afa2:	8c 30       	cpi	r24, 0x0C	; 12
    afa4:	91 05       	cpc	r25, r1
    afa6:	b9 f7       	brne	.-18     	; 0xaf96 <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    afa8:	10 92 e5 09 	sts	0x09E5, r1	; 0x8009e5 <lx+0x1>
    afac:	10 92 e4 09 	sts	0x09E4, r1	; 0x8009e4 <lx>
    afb0:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    afb4:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    afb8:	80 97       	sbiw	r24, 0x20	; 32
    afba:	2c f5       	brge	.+74     	; 0xb006 <initlevel+0x8c>
     		{
                for (  ly = 0; ly < 28; ly++ )
    afbc:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <ly+0x1>
    afc0:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <ly>
    afc4:	60 91 6f 09 	lds	r22, 0x096F	; 0x80096f <ly>
    afc8:	70 91 70 09 	lds	r23, 0x0970	; 0x800970 <ly+0x1>
    afcc:	6c 31       	cpi	r22, 0x1C	; 28
    afce:	71 05       	cpc	r23, r1
    afd0:	84 f4       	brge	.+32     	; 0xaff2 <initlevel+0x78>
                {
          	         DrawMap2(lx ,ly ,blue);
    afd2:	4a e1       	ldi	r20, 0x1A	; 26
    afd4:	54 e8       	ldi	r21, 0x84	; 132
    afd6:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    afda:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    afde:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <ly>
    afe2:	90 91 70 09 	lds	r25, 0x0970	; 0x800970 <ly+0x1>
    afe6:	01 96       	adiw	r24, 0x01	; 1
    afe8:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <ly+0x1>
    afec:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <ly>
    aff0:	e9 cf       	rjmp	.-46     	; 0xafc4 <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    aff2:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    aff6:	90 91 e5 09 	lds	r25, 0x09E5	; 0x8009e5 <lx+0x1>
    affa:	01 96       	adiw	r24, 0x01	; 1
    affc:	90 93 e5 09 	sts	0x09E5, r25	; 0x8009e5 <lx+0x1>
    b000:	80 93 e4 09 	sts	0x09E4, r24	; 0x8009e4 <lx>
    b004:	d5 cf       	rjmp	.-86     	; 0xafb0 <initlevel+0x36>
                for (  ly = 0; ly < 28; ly++ )
                {
          	         DrawMap2(lx ,ly ,blue);
                }
     		}
}
    b006:	08 95       	ret

0000b008 <printheadline>:
if (bl > 0 && bl <= 20 ) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b008:	48 e7       	ldi	r20, 0x78	; 120
    b00a:	53 e8       	ldi	r21, 0x83	; 131
    b00c:	60 e2       	ldi	r22, 0x20	; 32
    b00e:	80 e0       	ldi	r24, 0x00	; 0
    b010:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
printtileint( 4 ,0,score,4);
    b014:	40 91 7d 09 	lds	r20, 0x097D	; 0x80097d <score>
    b018:	50 91 7e 09 	lds	r21, 0x097E	; 0x80097e <score+0x1>
    b01c:	24 e0       	ldi	r18, 0x04	; 4
    b01e:	30 e0       	ldi	r19, 0x00	; 0
    b020:	60 e0       	ldi	r22, 0x00	; 0
    b022:	70 e0       	ldi	r23, 0x00	; 0
    b024:	84 e0       	ldi	r24, 0x04	; 4
    b026:	90 e0       	ldi	r25, 0x00	; 0
    b028:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b02c:	4b e5       	ldi	r20, 0x5B	; 91
    b02e:	53 e8       	ldi	r21, 0x83	; 131
    b030:	60 e2       	ldi	r22, 0x20	; 32
    b032:	8b e0       	ldi	r24, 0x0B	; 11
    b034:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
printtileint( 14 ,0,lives,1);  
    b038:	40 91 9a 09 	lds	r20, 0x099A	; 0x80099a <lives>
    b03c:	50 e0       	ldi	r21, 0x00	; 0
    b03e:	21 e0       	ldi	r18, 0x01	; 1
    b040:	30 e0       	ldi	r19, 0x00	; 0
    b042:	60 e0       	ldi	r22, 0x00	; 0
    b044:	70 e0       	ldi	r23, 0x00	; 0
    b046:	8e e0       	ldi	r24, 0x0E	; 14
    b048:	90 e0       	ldi	r25, 0x00	; 0
    b04a:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
DrawMap2(16,VRAM_TILES_V, level0 ); 
    b04e:	4c e6       	ldi	r20, 0x6C	; 108
    b050:	53 e8       	ldi	r21, 0x83	; 131
    b052:	60 e2       	ldi	r22, 0x20	; 32
    b054:	80 e1       	ldi	r24, 0x10	; 16
    b056:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
printtileint( 20 ,0, level,1);  
    b05a:	40 91 81 09 	lds	r20, 0x0981	; 0x800981 <level>
    b05e:	50 e0       	ldi	r21, 0x00	; 0
    b060:	21 e0       	ldi	r18, 0x01	; 1
    b062:	30 e0       	ldi	r19, 0x00	; 0
    b064:	60 e0       	ldi	r22, 0x00	; 0
    b066:	70 e0       	ldi	r23, 0x00	; 0
    b068:	84 e1       	ldi	r24, 0x14	; 20
    b06a:	90 e0       	ldi	r25, 0x00	; 0
    b06c:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
DrawMap2(23,VRAM_TILES_V, time0 );
    b070:	46 e5       	ldi	r20, 0x56	; 86
    b072:	53 e8       	ldi	r21, 0x83	; 131
    b074:	60 e2       	ldi	r22, 0x20	; 32
    b076:	87 e1       	ldi	r24, 0x17	; 23
    b078:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    b07c:	40 91 df 09 	lds	r20, 0x09DF	; 0x8009df <leveltime>
    b080:	50 e0       	ldi	r21, 0x00	; 0
    b082:	22 e0       	ldi	r18, 0x02	; 2
    b084:	30 e0       	ldi	r19, 0x00	; 0
    b086:	60 e0       	ldi	r22, 0x00	; 0
    b088:	70 e0       	ldi	r23, 0x00	; 0
    b08a:	8a e1       	ldi	r24, 0x1A	; 26
    b08c:	90 e0       	ldi	r25, 0x00	; 0
    b08e:	0c 94 8b 56 	jmp	0xad16	; 0xad16 <printtileint>

0000b092 <printheadlineintro>:
}
void printheadlineintro()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b092:	48 e7       	ldi	r20, 0x78	; 120
    b094:	53 e8       	ldi	r21, 0x83	; 131
    b096:	60 e2       	ldi	r22, 0x20	; 32
    b098:	80 e0       	ldi	r24, 0x00	; 0
    b09a:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
printtileint( 4 ,0,score,4);
    b09e:	40 91 7d 09 	lds	r20, 0x097D	; 0x80097d <score>
    b0a2:	50 91 7e 09 	lds	r21, 0x097E	; 0x80097e <score+0x1>
    b0a6:	24 e0       	ldi	r18, 0x04	; 4
    b0a8:	30 e0       	ldi	r19, 0x00	; 0
    b0aa:	60 e0       	ldi	r22, 0x00	; 0
    b0ac:	70 e0       	ldi	r23, 0x00	; 0
    b0ae:	84 e0       	ldi	r24, 0x04	; 4
    b0b0:	90 e0       	ldi	r25, 0x00	; 0
    b0b2:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b0b6:	4b e5       	ldi	r20, 0x5B	; 91
    b0b8:	53 e8       	ldi	r21, 0x83	; 131
    b0ba:	60 e2       	ldi	r22, 0x20	; 32
    b0bc:	8b e0       	ldi	r24, 0x0B	; 11
    b0be:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>

DrawMap2(16,VRAM_TILES_V, level0 ); 
    b0c2:	4c e6       	ldi	r20, 0x6C	; 108
    b0c4:	53 e8       	ldi	r21, 0x83	; 131
    b0c6:	60 e2       	ldi	r22, 0x20	; 32
    b0c8:	80 e1       	ldi	r24, 0x10	; 16
    b0ca:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
  
DrawMap2(23,VRAM_TILES_V, time0 );
    b0ce:	46 e5       	ldi	r20, 0x56	; 86
    b0d0:	53 e8       	ldi	r21, 0x83	; 131
    b0d2:	60 e2       	ldi	r22, 0x20	; 32
    b0d4:	87 e1       	ldi	r24, 0x17	; 23
    b0d6:	0c 94 42 54 	jmp	0xa884	; 0xa884 <DrawMap>

0000b0da <updatepoints>:

}
void updatepoints()
{
if (introplaying) return;
    b0da:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    b0de:	81 11       	cpse	r24, r1
    b0e0:	0c c0       	rjmp	.+24     	; 0xb0fa <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    b0e2:	40 91 7d 09 	lds	r20, 0x097D	; 0x80097d <score>
    b0e6:	50 91 7e 09 	lds	r21, 0x097E	; 0x80097e <score+0x1>
    b0ea:	24 e0       	ldi	r18, 0x04	; 4
    b0ec:	30 e0       	ldi	r19, 0x00	; 0
    b0ee:	60 e0       	ldi	r22, 0x00	; 0
    b0f0:	70 e0       	ldi	r23, 0x00	; 0
    b0f2:	84 e0       	ldi	r24, 0x04	; 4
    b0f4:	90 e0       	ldi	r25, 0x00	; 0
    b0f6:	0c 94 8b 56 	jmp	0xad16	; 0xad16 <printtileint>
    b0fa:	08 95       	ret

0000b0fc <checkcollide>:
}



int checkcollide(int x, int y,int z)
{
    b0fc:	af 92       	push	r10
    b0fe:	bf 92       	push	r11
    b100:	cf 92       	push	r12
    b102:	df 92       	push	r13
    b104:	ef 92       	push	r14
    b106:	ff 92       	push	r15
    b108:	0f 93       	push	r16
    b10a:	1f 93       	push	r17
    b10c:	cf 93       	push	r28
    b10e:	df 93       	push	r29
    b110:	6c 01       	movw	r12, r24
    b112:	5b 01       	movw	r10, r22
int lx;
int ly;
char bl;
lx = x + Levelx;
    b114:	90 91 e2 09 	lds	r25, 0x09E2	; 0x8009e2 <Levelx>
    b118:	86 01       	movw	r16, r12
    b11a:	09 0f       	add	r16, r25
    b11c:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    b11e:	84 e0       	ldi	r24, 0x04	; 4
    b120:	15 95       	asr	r17
    b122:	07 95       	ror	r16
    b124:	8a 95       	dec	r24
    b126:	e1 f7       	brne	.-8      	; 0xb120 <checkcollide+0x24>
ly = ly >> 4;  
    b128:	7b 01       	movw	r14, r22
    b12a:	24 e0       	ldi	r18, 0x04	; 4
    b12c:	f5 94       	asr	r15
    b12e:	e7 94       	ror	r14
    b130:	2a 95       	dec	r18
    b132:	e1 f7       	brne	.-8      	; 0xb12c <checkcollide+0x30>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b134:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <level>
    b138:	81 11       	cpse	r24, r1
    b13a:	0f c0       	rjmp	.+30     	; 0xb15a <checkcollide+0x5e>
    b13c:	8a e5       	ldi	r24, 0x5A	; 90
    b13e:	8e 9d       	mul	r24, r14
    b140:	f0 01       	movw	r30, r0
    b142:	8f 9d       	mul	r24, r15
    b144:	f0 0d       	add	r31, r0
    b146:	11 24       	eor	r1, r1
    b148:	e0 0f       	add	r30, r16
    b14a:	f1 1f       	adc	r31, r17
    b14c:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b150:	e8 0f       	add	r30, r24
    b152:	f1 1d       	adc	r31, r1
    b154:	e1 58       	subi	r30, 0x81	; 129
    b156:	fa 4c       	sbci	r31, 0xCA	; 202
    b158:	98 c0       	rjmp	.+304    	; 0xb28a <checkcollide+0x18e>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b15a:	81 30       	cpi	r24, 0x01	; 1
    b15c:	79 f4       	brne	.+30     	; 0xb17c <checkcollide+0x80>
    b15e:	8a e5       	ldi	r24, 0x5A	; 90
    b160:	8e 9d       	mul	r24, r14
    b162:	f0 01       	movw	r30, r0
    b164:	8f 9d       	mul	r24, r15
    b166:	f0 0d       	add	r31, r0
    b168:	11 24       	eor	r1, r1
    b16a:	e0 0f       	add	r30, r16
    b16c:	f1 1f       	adc	r31, r17
    b16e:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b172:	e8 0f       	add	r30, r24
    b174:	f1 1d       	adc	r31, r1
    b176:	ed 56       	subi	r30, 0x6D	; 109
    b178:	ff 4c       	sbci	r31, 0xCF	; 207
    b17a:	87 c0       	rjmp	.+270    	; 0xb28a <checkcollide+0x18e>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b17c:	82 30       	cpi	r24, 0x02	; 2
    b17e:	79 f4       	brne	.+30     	; 0xb19e <checkcollide+0xa2>
    b180:	8a e5       	ldi	r24, 0x5A	; 90
    b182:	8e 9d       	mul	r24, r14
    b184:	f0 01       	movw	r30, r0
    b186:	8f 9d       	mul	r24, r15
    b188:	f0 0d       	add	r31, r0
    b18a:	11 24       	eor	r1, r1
    b18c:	e0 0f       	add	r30, r16
    b18e:	f1 1f       	adc	r31, r17
    b190:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b194:	e8 0f       	add	r30, r24
    b196:	f1 1d       	adc	r31, r1
    b198:	e9 55       	subi	r30, 0x59	; 89
    b19a:	f4 4d       	sbci	r31, 0xD4	; 212
    b19c:	76 c0       	rjmp	.+236    	; 0xb28a <checkcollide+0x18e>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b19e:	83 30       	cpi	r24, 0x03	; 3
    b1a0:	79 f4       	brne	.+30     	; 0xb1c0 <checkcollide+0xc4>
    b1a2:	8a e5       	ldi	r24, 0x5A	; 90
    b1a4:	8e 9d       	mul	r24, r14
    b1a6:	f0 01       	movw	r30, r0
    b1a8:	8f 9d       	mul	r24, r15
    b1aa:	f0 0d       	add	r31, r0
    b1ac:	11 24       	eor	r1, r1
    b1ae:	e0 0f       	add	r30, r16
    b1b0:	f1 1f       	adc	r31, r17
    b1b2:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b1b6:	e8 0f       	add	r30, r24
    b1b8:	f1 1d       	adc	r31, r1
    b1ba:	e5 54       	subi	r30, 0x45	; 69
    b1bc:	f9 4d       	sbci	r31, 0xD9	; 217
    b1be:	65 c0       	rjmp	.+202    	; 0xb28a <checkcollide+0x18e>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b1c0:	84 30       	cpi	r24, 0x04	; 4
    b1c2:	79 f4       	brne	.+30     	; 0xb1e2 <checkcollide+0xe6>
    b1c4:	8a e5       	ldi	r24, 0x5A	; 90
    b1c6:	8e 9d       	mul	r24, r14
    b1c8:	f0 01       	movw	r30, r0
    b1ca:	8f 9d       	mul	r24, r15
    b1cc:	f0 0d       	add	r31, r0
    b1ce:	11 24       	eor	r1, r1
    b1d0:	e0 0f       	add	r30, r16
    b1d2:	f1 1f       	adc	r31, r17
    b1d4:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b1d8:	e8 0f       	add	r30, r24
    b1da:	f1 1d       	adc	r31, r1
    b1dc:	e1 53       	subi	r30, 0x31	; 49
    b1de:	fe 4d       	sbci	r31, 0xDE	; 222
    b1e0:	54 c0       	rjmp	.+168    	; 0xb28a <checkcollide+0x18e>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b1e2:	85 30       	cpi	r24, 0x05	; 5
    b1e4:	79 f4       	brne	.+30     	; 0xb204 <checkcollide+0x108>
    b1e6:	8a e5       	ldi	r24, 0x5A	; 90
    b1e8:	8e 9d       	mul	r24, r14
    b1ea:	f0 01       	movw	r30, r0
    b1ec:	8f 9d       	mul	r24, r15
    b1ee:	f0 0d       	add	r31, r0
    b1f0:	11 24       	eor	r1, r1
    b1f2:	e0 0f       	add	r30, r16
    b1f4:	f1 1f       	adc	r31, r17
    b1f6:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b1fa:	e8 0f       	add	r30, r24
    b1fc:	f1 1d       	adc	r31, r1
    b1fe:	ed 51       	subi	r30, 0x1D	; 29
    b200:	f3 4e       	sbci	r31, 0xE3	; 227
    b202:	43 c0       	rjmp	.+134    	; 0xb28a <checkcollide+0x18e>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b204:	86 30       	cpi	r24, 0x06	; 6
    b206:	79 f4       	brne	.+30     	; 0xb226 <checkcollide+0x12a>
    b208:	8a e5       	ldi	r24, 0x5A	; 90
    b20a:	8e 9d       	mul	r24, r14
    b20c:	f0 01       	movw	r30, r0
    b20e:	8f 9d       	mul	r24, r15
    b210:	f0 0d       	add	r31, r0
    b212:	11 24       	eor	r1, r1
    b214:	e0 0f       	add	r30, r16
    b216:	f1 1f       	adc	r31, r17
    b218:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b21c:	e8 0f       	add	r30, r24
    b21e:	f1 1d       	adc	r31, r1
    b220:	e9 50       	subi	r30, 0x09	; 9
    b222:	f8 4e       	sbci	r31, 0xE8	; 232
    b224:	32 c0       	rjmp	.+100    	; 0xb28a <checkcollide+0x18e>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b226:	87 30       	cpi	r24, 0x07	; 7
    b228:	79 f4       	brne	.+30     	; 0xb248 <checkcollide+0x14c>
    b22a:	8a e5       	ldi	r24, 0x5A	; 90
    b22c:	8e 9d       	mul	r24, r14
    b22e:	f0 01       	movw	r30, r0
    b230:	8f 9d       	mul	r24, r15
    b232:	f0 0d       	add	r31, r0
    b234:	11 24       	eor	r1, r1
    b236:	e0 0f       	add	r30, r16
    b238:	f1 1f       	adc	r31, r17
    b23a:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b23e:	e8 0f       	add	r30, r24
    b240:	f1 1d       	adc	r31, r1
    b242:	e5 5f       	subi	r30, 0xF5	; 245
    b244:	fc 4e       	sbci	r31, 0xEC	; 236
    b246:	21 c0       	rjmp	.+66     	; 0xb28a <checkcollide+0x18e>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b248:	88 30       	cpi	r24, 0x08	; 8
    b24a:	79 f4       	brne	.+30     	; 0xb26a <checkcollide+0x16e>
    b24c:	8a e5       	ldi	r24, 0x5A	; 90
    b24e:	8e 9d       	mul	r24, r14
    b250:	f0 01       	movw	r30, r0
    b252:	8f 9d       	mul	r24, r15
    b254:	f0 0d       	add	r31, r0
    b256:	11 24       	eor	r1, r1
    b258:	e0 0f       	add	r30, r16
    b25a:	f1 1f       	adc	r31, r17
    b25c:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b260:	e8 0f       	add	r30, r24
    b262:	f1 1d       	adc	r31, r1
    b264:	e1 5e       	subi	r30, 0xE1	; 225
    b266:	f1 4f       	sbci	r31, 0xF1	; 241
    b268:	10 c0       	rjmp	.+32     	; 0xb28a <checkcollide+0x18e>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b26a:	89 30       	cpi	r24, 0x09	; 9
    b26c:	79 f4       	brne	.+30     	; 0xb28c <checkcollide+0x190>
    b26e:	8a e5       	ldi	r24, 0x5A	; 90
    b270:	8e 9d       	mul	r24, r14
    b272:	f0 01       	movw	r30, r0
    b274:	8f 9d       	mul	r24, r15
    b276:	f0 0d       	add	r31, r0
    b278:	11 24       	eor	r1, r1
    b27a:	e0 0f       	add	r30, r16
    b27c:	f1 1f       	adc	r31, r17
    b27e:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    b282:	e8 0f       	add	r30, r24
    b284:	f1 1d       	adc	r31, r1
    b286:	ed 5c       	subi	r30, 0xCD	; 205
    b288:	f6 4f       	sbci	r31, 0xF6	; 246
    b28a:	c4 91       	lpm	r28, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    b28c:	ca 31       	cpi	r28, 0x1A	; 26
    b28e:	11 f0       	breq	.+4      	; 0xb294 <checkcollide+0x198>
    b290:	cc 31       	cpi	r28, 0x1C	; 28
    b292:	19 f4       	brne	.+6      	; 0xb29a <checkcollide+0x19e>
    b294:	81 e0       	ldi	r24, 0x01	; 1
    b296:	80 93 dd 09 	sts	0x09DD, r24	; 0x8009dd <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) { 
    b29a:	83 ee       	ldi	r24, 0xE3	; 227
    b29c:	8c 0f       	add	r24, r28
    b29e:	82 30       	cpi	r24, 0x02	; 2
    b2a0:	18 f5       	brcc	.+70     	; 0xb2e8 <checkcollide+0x1ec>
    b2a2:	43 30       	cpi	r20, 0x03	; 3
    b2a4:	51 05       	cpc	r21, r1
    b2a6:	09 f0       	breq	.+2      	; 0xb2aa <checkcollide+0x1ae>
    b2a8:	e5 c0       	rjmp	.+458    	; 0xb474 <checkcollide+0x378>
    b2aa:	80 91 82 09 	lds	r24, 0x0982	; 0x800982 <play>
    b2ae:	88 23       	and	r24, r24
    b2b0:	09 f4       	brne	.+2      	; 0xb2b4 <checkcollide+0x1b8>
    b2b2:	f8 c0       	rjmp	.+496    	; 0xb4a4 <checkcollide+0x3a8>
    died = true;
    b2b4:	81 e0       	ldi	r24, 0x01	; 1
    b2b6:	80 93 e3 09 	sts	0x09E3, r24	; 0x8009e3 <died>
    lives--;    
    b2ba:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    b2be:	81 50       	subi	r24, 0x01	; 1
    b2c0:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    isplaying = false; 
    b2c4:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    b2c8:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    bonus = 0;  
    b2cc:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    b2d0:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    TriggerFx(9,0xff,true);
    b2d4:	41 e0       	ldi	r20, 0x01	; 1
    b2d6:	6f ef       	ldi	r22, 0xFF	; 255
    b2d8:	89 e0       	ldi	r24, 0x09	; 9
    b2da:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240);     
    b2de:	80 ef       	ldi	r24, 0xF0	; 240
    b2e0:	90 e0       	ldi	r25, 0x00	; 0
    b2e2:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    b2e6:	de c0       	rjmp	.+444    	; 0xb4a4 <checkcollide+0x3a8>
};
    
    
if (bl == 41 && z == 1 ) { 
    b2e8:	c9 32       	cpi	r28, 0x29	; 41
    b2ea:	09 f0       	breq	.+2      	; 0xb2ee <checkcollide+0x1f2>
    b2ec:	69 c0       	rjmp	.+210    	; 0xb3c0 <checkcollide+0x2c4>
    b2ee:	41 30       	cpi	r20, 0x01	; 1
    b2f0:	51 05       	cpc	r21, r1
    b2f2:	09 f0       	breq	.+2      	; 0xb2f6 <checkcollide+0x1fa>
    b2f4:	d0 c1       	rjmp	.+928    	; 0xb696 <checkcollide+0x59a>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b2f6:	2a e5       	ldi	r18, 0x5A	; 90
    b2f8:	2e 9d       	mul	r18, r14
    b2fa:	c0 01       	movw	r24, r0
    b2fc:	2f 9d       	mul	r18, r15
    b2fe:	90 0d       	add	r25, r0
    b300:	11 24       	eor	r1, r1
    b302:	80 0f       	add	r24, r16
    b304:	91 1f       	adc	r25, r17
    b306:	20 91 e9 09 	lds	r18, 0x09E9	; 0x8009e9 <scrolltiles>
    b30a:	82 0f       	add	r24, r18
    b30c:	91 1d       	adc	r25, r1
    b30e:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <dp+0x1>
    b312:	80 93 a7 09 	sts	0x09A7, r24	; 0x8009a7 <dp>
    b316:	e9 ea       	ldi	r30, 0xA9	; 169
    b318:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b31a:	c1 2c       	mov	r12, r1
    b31c:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b31e:	21 91       	ld	r18, Z+
    b320:	31 91       	ld	r19, Z+
    b322:	82 17       	cp	r24, r18
    b324:	93 07       	cpc	r25, r19
    b326:	09 f4       	brne	.+2      	; 0xb32a <checkcollide+0x22e>
    b328:	b6 c1       	rjmp	.+876    	; 0xb696 <checkcollide+0x59a>
    if (diamonds[xi] == 0 ) {
    b32a:	23 2b       	or	r18, r19
    b32c:	09 f0       	breq	.+2      	; 0xb330 <checkcollide+0x234>
    b32e:	3f c0       	rjmp	.+126    	; 0xb3ae <checkcollide+0x2b2>
    score = score + 5 ;
    b330:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <score>
    b334:	90 91 7e 09 	lds	r25, 0x097E	; 0x80097e <score+0x1>
    b338:	05 96       	adiw	r24, 0x05	; 5
    b33a:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <score+0x1>
    b33e:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <score>
    bonus++;
    b342:	80 91 db 09 	lds	r24, 0x09DB	; 0x8009db <bonus>
    b346:	90 91 dc 09 	lds	r25, 0x09DC	; 0x8009dc <bonus+0x1>
    b34a:	01 96       	adiw	r24, 0x01	; 1
    b34c:	90 93 dc 09 	sts	0x09DC, r25	; 0x8009dc <bonus+0x1>
    b350:	80 93 db 09 	sts	0x09DB, r24	; 0x8009db <bonus>
    updatepoints();
    b354:	0e 94 6d 58 	call	0xb0da	; 0xb0da <updatepoints>
    TriggerFx(7,0xff,true);
    b358:	41 e0       	ldi	r20, 0x01	; 1
    b35a:	6f ef       	ldi	r22, 0xFF	; 255
    b35c:	87 e0       	ldi	r24, 0x07	; 7
    b35e:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
        
    lx = lx * 2 + destX;
    b362:	00 0f       	add	r16, r16
    b364:	11 1f       	adc	r17, r17
    b366:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    b36a:	08 0f       	add	r16, r24
    b36c:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    b36e:	00 32       	cpi	r16, 0x20	; 32
    b370:	11 05       	cpc	r17, r1
    b372:	14 f0       	brlt	.+4      	; 0xb378 <checkcollide+0x27c>
    b374:	00 52       	subi	r16, 0x20	; 32
    b376:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    b378:	ee 0c       	add	r14, r14
    b37a:	4f e9       	ldi	r20, 0x9F	; 159
    b37c:	53 e8       	ldi	r21, 0x83	; 131
    b37e:	6e 2d       	mov	r22, r14
    b380:	80 2f       	mov	r24, r16
    b382:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    b386:	d1 e0       	ldi	r29, 0x01	; 1
    b388:	d0 0f       	add	r29, r16
    b38a:	4f e9       	ldi	r20, 0x9F	; 159
    b38c:	53 e8       	ldi	r21, 0x83	; 131
    b38e:	6e 2d       	mov	r22, r14
    b390:	8d 2f       	mov	r24, r29
    b392:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    b396:	e3 94       	inc	r14
    b398:	4f e9       	ldi	r20, 0x9F	; 159
    b39a:	53 e8       	ldi	r21, 0x83	; 131
    b39c:	6e 2d       	mov	r22, r14
    b39e:	80 2f       	mov	r24, r16
    b3a0:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    b3a4:	4f e9       	ldi	r20, 0x9F	; 159
    b3a6:	53 e8       	ldi	r21, 0x83	; 131
    b3a8:	6e 2d       	mov	r22, r14
    b3aa:	8d 2f       	mov	r24, r29
    b3ac:	55 c0       	rjmp	.+170    	; 0xb458 <checkcollide+0x35c>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b3ae:	2f ef       	ldi	r18, 0xFF	; 255
    b3b0:	c2 1a       	sub	r12, r18
    b3b2:	d2 0a       	sbc	r13, r18
    b3b4:	29 e1       	ldi	r18, 0x19	; 25
    b3b6:	c2 16       	cp	r12, r18
    b3b8:	d1 04       	cpc	r13, r1
    b3ba:	09 f0       	breq	.+2      	; 0xb3be <checkcollide+0x2c2>
    b3bc:	b0 cf       	rjmp	.-160    	; 0xb31e <checkcollide+0x222>
    b3be:	6b c1       	rjmp	.+726    	; 0xb696 <checkcollide+0x59a>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    b3c0:	c3 30       	cpi	r28, 0x03	; 3
    b3c2:	09 f0       	breq	.+2      	; 0xb3c6 <checkcollide+0x2ca>
    b3c4:	57 c0       	rjmp	.+174    	; 0xb474 <checkcollide+0x378>
    b3c6:	42 30       	cpi	r20, 0x02	; 2
    b3c8:	51 05       	cpc	r21, r1
    b3ca:	09 f0       	breq	.+2      	; 0xb3ce <checkcollide+0x2d2>
    b3cc:	64 c1       	rjmp	.+712    	; 0xb696 <checkcollide+0x59a>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b3ce:	2a e5       	ldi	r18, 0x5A	; 90
    b3d0:	2e 9d       	mul	r18, r14
    b3d2:	c0 01       	movw	r24, r0
    b3d4:	2f 9d       	mul	r18, r15
    b3d6:	90 0d       	add	r25, r0
    b3d8:	11 24       	eor	r1, r1
    b3da:	80 0f       	add	r24, r16
    b3dc:	91 1f       	adc	r25, r17
    b3de:	20 91 e9 09 	lds	r18, 0x09E9	; 0x8009e9 <scrolltiles>
    b3e2:	82 0f       	add	r24, r18
    b3e4:	91 1d       	adc	r25, r1
    b3e6:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <dp+0x1>
    b3ea:	80 93 a7 09 	sts	0x09A7, r24	; 0x8009a7 <dp>
    b3ee:	e9 ea       	ldi	r30, 0xA9	; 169
    b3f0:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b3f2:	c1 2c       	mov	r12, r1
    b3f4:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b3f6:	21 91       	ld	r18, Z+
    b3f8:	31 91       	ld	r19, Z+
    b3fa:	82 17       	cp	r24, r18
    b3fc:	93 07       	cpc	r25, r19
    b3fe:	09 f4       	brne	.+2      	; 0xb402 <checkcollide+0x306>
    b400:	4a c1       	rjmp	.+660    	; 0xb696 <checkcollide+0x59a>
    if (diamonds[xi] == 0 ) {
    b402:	23 2b       	or	r18, r19
    b404:	09 f0       	breq	.+2      	; 0xb408 <checkcollide+0x30c>
    b406:	45 c0       	rjmp	.+138    	; 0xb492 <checkcollide+0x396>
    score = score + 5 ;
    b408:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <score>
    b40c:	90 91 7e 09 	lds	r25, 0x097E	; 0x80097e <score+0x1>
    b410:	05 96       	adiw	r24, 0x05	; 5
    b412:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <score+0x1>
    b416:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <score>
    bonus++;
    b41a:	80 91 db 09 	lds	r24, 0x09DB	; 0x8009db <bonus>
    b41e:	90 91 dc 09 	lds	r25, 0x09DC	; 0x8009dc <bonus+0x1>
    b422:	01 96       	adiw	r24, 0x01	; 1
    b424:	90 93 dc 09 	sts	0x09DC, r25	; 0x8009dc <bonus+0x1>
    b428:	80 93 db 09 	sts	0x09DB, r24	; 0x8009db <bonus>
    updatepoints();
    b42c:	0e 94 6d 58 	call	0xb0da	; 0xb0da <updatepoints>
    TriggerFx(7,0xff,true);
    b430:	41 e0       	ldi	r20, 0x01	; 1
    b432:	6f ef       	ldi	r22, 0xFF	; 255
    b434:	87 e0       	ldi	r24, 0x07	; 7
    b436:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    lx = lx * 2 + destX;
    b43a:	c8 01       	movw	r24, r16
    b43c:	88 0f       	add	r24, r24
    b43e:	99 1f       	adc	r25, r25
    b440:	20 91 a6 09 	lds	r18, 0x09A6	; 0x8009a6 <destX>
    b444:	82 0f       	add	r24, r18
    b446:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    b448:	80 32       	cpi	r24, 0x20	; 32
    b44a:	91 05       	cpc	r25, r1
    b44c:	0c f0       	brlt	.+2      	; 0xb450 <checkcollide+0x354>
    b44e:	80 97       	sbiw	r24, 0x20	; 32
    DrawMap2(  lx    ,  ly *  2    ,block2 );       
    b450:	6e 2d       	mov	r22, r14
    b452:	66 0f       	add	r22, r22
    b454:	49 e2       	ldi	r20, 0x29	; 41
    b456:	54 e8       	ldi	r21, 0x84	; 132
    b458:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    diamonds[xi] = dp;
    b45c:	f6 01       	movw	r30, r12
    b45e:	ee 0f       	add	r30, r30
    b460:	ff 1f       	adc	r31, r31
    b462:	e7 55       	subi	r30, 0x57	; 87
    b464:	f6 4f       	sbci	r31, 0xF6	; 246
    b466:	80 91 a7 09 	lds	r24, 0x09A7	; 0x8009a7 <dp>
    b46a:	90 91 a8 09 	lds	r25, 0x09A8	; 0x8009a8 <dp+0x1>
    b46e:	91 83       	std	Z+1, r25	; 0x01
    b470:	80 83       	st	Z, r24
    break;
    b472:	11 c1       	rjmp	.+546    	; 0xb696 <checkcollide+0x59a>
    };
    };
}; 
if (bl == 9 )
    b474:	c9 30       	cpi	r28, 0x09	; 9
    b476:	b1 f4       	brne	.+44     	; 0xb4a4 <checkcollide+0x3a8>
{
lx = x + Levelx;
    b478:	c9 0e       	add	r12, r25
    b47a:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b47c:	8f e0       	ldi	r24, 0x0F	; 15
    b47e:	c8 22       	and	r12, r24
    b480:	dd 24       	eor	r13, r13
    b482:	81 e0       	ldi	r24, 0x01	; 1
    b484:	90 e0       	ldi	r25, 0x00	; 0
    b486:	29 e0       	ldi	r18, 0x09	; 9
    b488:	c2 16       	cp	r12, r18
    b48a:	d1 04       	cpc	r13, r1
    b48c:	0c f4       	brge	.+2      	; 0xb490 <checkcollide+0x394>
    b48e:	0a c1       	rjmp	.+532    	; 0xb6a4 <checkcollide+0x5a8>
    b490:	08 c1       	rjmp	.+528    	; 0xb6a2 <checkcollide+0x5a6>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b492:	2f ef       	ldi	r18, 0xFF	; 255
    b494:	c2 1a       	sub	r12, r18
    b496:	d2 0a       	sbc	r13, r18
    b498:	29 e1       	ldi	r18, 0x19	; 25
    b49a:	c2 16       	cp	r12, r18
    b49c:	d1 04       	cpc	r13, r1
    b49e:	09 f0       	breq	.+2      	; 0xb4a2 <checkcollide+0x3a6>
    b4a0:	aa cf       	rjmp	.-172    	; 0xb3f6 <checkcollide+0x2fa>
    b4a2:	f9 c0       	rjmp	.+498    	; 0xb696 <checkcollide+0x59a>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    b4a4:	ca 30       	cpi	r28, 0x0A	; 10
    b4a6:	79 f4       	brne	.+30     	; 0xb4c6 <checkcollide+0x3ca>
{
lx = x + Levelx;
    b4a8:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    b4ac:	c8 0e       	add	r12, r24
    b4ae:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b4b0:	8f e0       	ldi	r24, 0x0F	; 15
    b4b2:	c8 22       	and	r12, r24
    b4b4:	dd 24       	eor	r13, r13
    b4b6:	81 e0       	ldi	r24, 0x01	; 1
    b4b8:	90 e0       	ldi	r25, 0x00	; 0
    b4ba:	29 e0       	ldi	r18, 0x09	; 9
    b4bc:	c2 16       	cp	r12, r18
    b4be:	d1 04       	cpc	r13, r1
    b4c0:	0c f0       	brlt	.+2      	; 0xb4c4 <checkcollide+0x3c8>
    b4c2:	f0 c0       	rjmp	.+480    	; 0xb6a4 <checkcollide+0x5a8>
    b4c4:	ee c0       	rjmp	.+476    	; 0xb6a2 <checkcollide+0x5a6>
}
 

    
    
if (bl == 39 )
    b4c6:	c7 32       	cpi	r28, 0x27	; 39
    b4c8:	09 f0       	breq	.+2      	; 0xb4cc <checkcollide+0x3d0>
    b4ca:	e5 c0       	rjmp	.+458    	; 0xb696 <checkcollide+0x59a>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    b4cc:	c7 01       	movw	r24, r14
    b4ce:	f4 e0       	ldi	r31, 0x04	; 4
    b4d0:	88 0f       	add	r24, r24
    b4d2:	99 1f       	adc	r25, r25
    b4d4:	fa 95       	dec	r31
    b4d6:	e1 f7       	brne	.-8      	; 0xb4d0 <checkcollide+0x3d4>
ly = ly - lx;
        
if (ly < 5  ) 
    b4d8:	a8 1a       	sub	r10, r24
    b4da:	b9 0a       	sbc	r11, r25
    b4dc:	85 e0       	ldi	r24, 0x05	; 5
    b4de:	a8 16       	cp	r10, r24
    b4e0:	b1 04       	cpc	r11, r1
    b4e2:	0c f0       	brlt	.+2      	; 0xb4e6 <checkcollide+0x3ea>
    b4e4:	7d c0       	rjmp	.+250    	; 0xb5e0 <checkcollide+0x4e4>
{
lx = x + Levelx;
    b4e6:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    b4ea:	c8 0e       	add	r12, r24
    b4ec:	d1 1c       	adc	r13, r1
ly = y;
lx = lx >> 4;
    b4ee:	86 01       	movw	r16, r12
    b4f0:	e4 e0       	ldi	r30, 0x04	; 4
    b4f2:	15 95       	asr	r17
    b4f4:	07 95       	ror	r16
    b4f6:	ea 95       	dec	r30
    b4f8:	e1 f7       	brne	.-8      	; 0xb4f2 <checkcollide+0x3f6>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    b4fa:	2a e5       	ldi	r18, 0x5A	; 90
    b4fc:	2e 9d       	mul	r18, r14
    b4fe:	c0 01       	movw	r24, r0
    b500:	2f 9d       	mul	r18, r15
    b502:	90 0d       	add	r25, r0
    b504:	11 24       	eor	r1, r1
    b506:	80 0f       	add	r24, r16
    b508:	91 1f       	adc	r25, r17
    b50a:	20 91 e9 09 	lds	r18, 0x09E9	; 0x8009e9 <scrolltiles>
    b50e:	82 0f       	add	r24, r18
    b510:	91 1d       	adc	r25, r1
    b512:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <dp+0x1>
    b516:	80 93 a7 09 	sts	0x09A7, r24	; 0x8009a7 <dp>
    b51a:	e1 e2       	ldi	r30, 0x21	; 33
    b51c:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b51e:	20 e0       	ldi	r18, 0x00	; 0
    b520:	30 e0       	ldi	r19, 0x00	; 0
     {
     if (bridges[xi].id == dp)         
    b522:	40 81       	ld	r20, Z
    b524:	51 81       	ldd	r21, Z+1	; 0x01
    b526:	84 17       	cp	r24, r20
    b528:	95 07       	cpc	r25, r21
    b52a:	09 f0       	breq	.+2      	; 0xb52e <checkcollide+0x432>
    b52c:	9e c0       	rjmp	.+316    	; 0xb66a <checkcollide+0x56e>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b52e:	c8 01       	movw	r24, r16
    b530:	54 e0       	ldi	r21, 0x04	; 4
    b532:	88 0f       	add	r24, r24
    b534:	99 1f       	adc	r25, r25
    b536:	5a 95       	dec	r21
    b538:	e1 f7       	brne	.-8      	; 0xb532 <checkcollide+0x436>
    b53a:	c8 1a       	sub	r12, r24
    b53c:	d9 0a       	sbc	r13, r25
    b53e:	90 91 a6 09 	lds	r25, 0x09A6	; 0x8009a6 <destX>
    b542:	e9 01       	movw	r28, r18
    b544:	cc 0f       	add	r28, r28
    b546:	dd 1f       	adc	r29, r29
    b548:	cc 0f       	add	r28, r28
    b54a:	dd 1f       	adc	r29, r29
    b54c:	00 0f       	add	r16, r16
    b54e:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    b550:	fe 01       	movw	r30, r28
    b552:	ef 5d       	subi	r30, 0xDF	; 223
    b554:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b556:	29 e0       	ldi	r18, 0x09	; 9
    b558:	c2 16       	cp	r12, r18
    b55a:	d1 04       	cpc	r13, r1
    b55c:	0c f0       	brlt	.+2      	; 0xb560 <checkcollide+0x464>
    b55e:	43 c0       	rjmp	.+134    	; 0xb5e6 <checkcollide+0x4ea>
        {
        bridges[xi].r++;    
    b560:	83 81       	ldd	r24, Z+3	; 0x03
    b562:	21 e0       	ldi	r18, 0x01	; 1
    b564:	28 0f       	add	r18, r24
    b566:	23 83       	std	Z+3, r18	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b568:	09 0f       	add	r16, r25
    b56a:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b56c:	00 32       	cpi	r16, 0x20	; 32
    b56e:	11 05       	cpc	r17, r1
    b570:	14 f0       	brlt	.+4      	; 0xb576 <checkcollide+0x47a>
    b572:	00 52       	subi	r16, 0x20	; 32
    b574:	11 09       	sbc	r17, r1
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    b576:	88 30       	cpi	r24, 0x08	; 8
    b578:	38 f4       	brcc	.+14     	; 0xb588 <checkcollide+0x48c>
    b57a:	48 ea       	ldi	r20, 0xA8	; 168
    b57c:	53 e8       	ldi	r21, 0x83	; 131
    b57e:	6e 2d       	mov	r22, r14
    b580:	66 0f       	add	r22, r22
    b582:	80 2f       	mov	r24, r16
    b584:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    b588:	fe 01       	movw	r30, r28
    b58a:	ef 5d       	subi	r30, 0xDF	; 223
    b58c:	f6 4f       	sbci	r31, 0xF6	; 246
    b58e:	83 81       	ldd	r24, Z+3	; 0x03
    b590:	89 50       	subi	r24, 0x09	; 9
    b592:	88 30       	cpi	r24, 0x08	; 8
    b594:	38 f4       	brcc	.+14     	; 0xb5a4 <checkcollide+0x4a8>
    b596:	45 ea       	ldi	r20, 0xA5	; 165
    b598:	53 e8       	ldi	r21, 0x83	; 131
    b59a:	6e 2d       	mov	r22, r14
    b59c:	66 0f       	add	r22, r22
    b59e:	80 2f       	mov	r24, r16
    b5a0:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    b5a4:	fe 01       	movw	r30, r28
    b5a6:	ef 5d       	subi	r30, 0xDF	; 223
    b5a8:	f6 4f       	sbci	r31, 0xF6	; 246
    b5aa:	83 81       	ldd	r24, Z+3	; 0x03
    b5ac:	81 51       	subi	r24, 0x11	; 17
    b5ae:	87 30       	cpi	r24, 0x07	; 7
    b5b0:	38 f4       	brcc	.+14     	; 0xb5c0 <checkcollide+0x4c4>
    b5b2:	42 ea       	ldi	r20, 0xA2	; 162
    b5b4:	53 e8       	ldi	r21, 0x83	; 131
    b5b6:	6e 2d       	mov	r22, r14
    b5b8:	66 0f       	add	r22, r22
    b5ba:	80 2f       	mov	r24, r16
    b5bc:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};
    b5c0:	fe 01       	movw	r30, r28
    b5c2:	ef 5d       	subi	r30, 0xDF	; 223
    b5c4:	f6 4f       	sbci	r31, 0xF6	; 246
    b5c6:	83 81       	ldd	r24, Z+3	; 0x03
    b5c8:	88 31       	cpi	r24, 0x18	; 24
    b5ca:	08 f4       	brcc	.+2      	; 0xb5ce <checkcollide+0x4d2>
    b5cc:	5b c0       	rjmp	.+182    	; 0xb684 <checkcollide+0x588>
    b5ce:	88 e1       	ldi	r24, 0x18	; 24
    b5d0:	83 83       	std	Z+3, r24	; 0x03
    b5d2:	6e 2d       	mov	r22, r14
    b5d4:	66 0f       	add	r22, r22
    b5d6:	4f e9       	ldi	r20, 0x9F	; 159
    b5d8:	53 e8       	ldi	r21, 0x83	; 131
    b5da:	80 2f       	mov	r24, r16
    b5dc:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    b5e0:	80 e0       	ldi	r24, 0x00	; 0
    b5e2:	90 e0       	ldi	r25, 0x00	; 0
    b5e4:	5f c0       	rjmp	.+190    	; 0xb6a4 <checkcollide+0x5a8>
        }
        else
        {
        bridges[xi].l++;
    b5e6:	82 81       	ldd	r24, Z+2	; 0x02
    b5e8:	21 e0       	ldi	r18, 0x01	; 1
    b5ea:	28 0f       	add	r18, r24
    b5ec:	22 83       	std	Z+2, r18	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b5ee:	09 0f       	add	r16, r25
    b5f0:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b5f2:	00 32       	cpi	r16, 0x20	; 32
    b5f4:	11 05       	cpc	r17, r1
    b5f6:	14 f0       	brlt	.+4      	; 0xb5fc <checkcollide+0x500>
    b5f8:	00 52       	subi	r16, 0x20	; 32
    b5fa:	11 09       	sbc	r17, r1
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    b5fc:	88 30       	cpi	r24, 0x08	; 8
    b5fe:	40 f4       	brcc	.+16     	; 0xb610 <checkcollide+0x514>
    b600:	48 ea       	ldi	r20, 0xA8	; 168
    b602:	53 e8       	ldi	r21, 0x83	; 131
    b604:	6e 2d       	mov	r22, r14
    b606:	66 0f       	add	r22, r22
    b608:	81 e0       	ldi	r24, 0x01	; 1
    b60a:	80 0f       	add	r24, r16
    b60c:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    b610:	fe 01       	movw	r30, r28
    b612:	ef 5d       	subi	r30, 0xDF	; 223
    b614:	f6 4f       	sbci	r31, 0xF6	; 246
    b616:	82 81       	ldd	r24, Z+2	; 0x02
    b618:	89 50       	subi	r24, 0x09	; 9
    b61a:	88 30       	cpi	r24, 0x08	; 8
    b61c:	40 f4       	brcc	.+16     	; 0xb62e <checkcollide+0x532>
    b61e:	45 ea       	ldi	r20, 0xA5	; 165
    b620:	53 e8       	ldi	r21, 0x83	; 131
    b622:	6e 2d       	mov	r22, r14
    b624:	66 0f       	add	r22, r22
    b626:	81 e0       	ldi	r24, 0x01	; 1
    b628:	80 0f       	add	r24, r16
    b62a:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    b62e:	fe 01       	movw	r30, r28
    b630:	ef 5d       	subi	r30, 0xDF	; 223
    b632:	f6 4f       	sbci	r31, 0xF6	; 246
    b634:	82 81       	ldd	r24, Z+2	; 0x02
    b636:	81 51       	subi	r24, 0x11	; 17
    b638:	87 30       	cpi	r24, 0x07	; 7
    b63a:	40 f4       	brcc	.+16     	; 0xb64c <checkcollide+0x550>
    b63c:	42 ea       	ldi	r20, 0xA2	; 162
    b63e:	53 e8       	ldi	r21, 0x83	; 131
    b640:	6e 2d       	mov	r22, r14
    b642:	66 0f       	add	r22, r22
    b644:	81 e0       	ldi	r24, 0x01	; 1
    b646:	80 0f       	add	r24, r16
    b648:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;}; 
    b64c:	fe 01       	movw	r30, r28
    b64e:	ef 5d       	subi	r30, 0xDF	; 223
    b650:	f6 4f       	sbci	r31, 0xF6	; 246
    b652:	82 81       	ldd	r24, Z+2	; 0x02
    b654:	88 31       	cpi	r24, 0x18	; 24
    b656:	b0 f0       	brcs	.+44     	; 0xb684 <checkcollide+0x588>
    b658:	88 e1       	ldi	r24, 0x18	; 24
    b65a:	82 83       	std	Z+2, r24	; 0x02
    b65c:	6e 2d       	mov	r22, r14
    b65e:	66 0f       	add	r22, r22
    b660:	4f e9       	ldi	r20, 0x9F	; 159
    b662:	53 e8       	ldi	r21, 0x83	; 131
    b664:	81 e0       	ldi	r24, 0x01	; 1
    b666:	80 0f       	add	r24, r16
    b668:	b9 cf       	rjmp	.-142    	; 0xb5dc <checkcollide+0x4e0>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    b66a:	45 2b       	or	r20, r21
    b66c:	69 f4       	brne	.+26     	; 0xb688 <checkcollide+0x58c>
    b66e:	22 0f       	add	r18, r18
    b670:	33 1f       	adc	r19, r19
    b672:	22 0f       	add	r18, r18
    b674:	33 1f       	adc	r19, r19
    b676:	f9 01       	movw	r30, r18
    b678:	ef 5d       	subi	r30, 0xDF	; 223
    b67a:	f6 4f       	sbci	r31, 0xF6	; 246
    b67c:	91 83       	std	Z+1, r25	; 0x01
    b67e:	80 83       	st	Z, r24
    b680:	12 82       	std	Z+2, r1	; 0x02
    b682:	13 82       	std	Z+3, r1	; 0x03
    b684:	81 e0       	ldi	r24, 0x01	; 1
    b686:	ad cf       	rjmp	.-166    	; 0xb5e2 <checkcollide+0x4e6>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b688:	2f 5f       	subi	r18, 0xFF	; 255
    b68a:	3f 4f       	sbci	r19, 0xFF	; 255
    b68c:	34 96       	adiw	r30, 0x04	; 4
    b68e:	2c 30       	cpi	r18, 0x0C	; 12
    b690:	31 05       	cpc	r19, r1
    b692:	09 f0       	breq	.+2      	; 0xb696 <checkcollide+0x59a>
    b694:	46 cf       	rjmp	.-372    	; 0xb522 <checkcollide+0x426>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b696:	ef ef       	ldi	r30, 0xFF	; 255
    b698:	ec 0f       	add	r30, r28
    b69a:	81 e0       	ldi	r24, 0x01	; 1
    b69c:	90 e0       	ldi	r25, 0x00	; 0
    b69e:	e4 31       	cpi	r30, 0x14	; 20
    b6a0:	08 f0       	brcs	.+2      	; 0xb6a4 <checkcollide+0x5a8>
    b6a2:	80 e0       	ldi	r24, 0x00	; 0
}
    b6a4:	df 91       	pop	r29
    b6a6:	cf 91       	pop	r28
    b6a8:	1f 91       	pop	r17
    b6aa:	0f 91       	pop	r16
    b6ac:	ff 90       	pop	r15
    b6ae:	ef 90       	pop	r14
    b6b0:	df 90       	pop	r13
    b6b2:	cf 90       	pop	r12
    b6b4:	bf 90       	pop	r11
    b6b6:	af 90       	pop	r10
    b6b8:	08 95       	ret

0000b6ba <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b6ba:	cf 93       	push	r28
    b6bc:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b6be:	4f e9       	ldi	r20, 0x9F	; 159
    b6c0:	53 e8       	ldi	r21, 0x83	; 131
    b6c2:	60 e2       	ldi	r22, 0x20	; 32
    b6c4:	8c 2f       	mov	r24, r28
    b6c6:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    b6ca:	cf 5f       	subi	r28, 0xFF	; 255
    b6cc:	c0 32       	cpi	r28, 0x20	; 32
    b6ce:	b9 f7       	brne	.-18     	; 0xb6be <setheadline+0x4>
}
    b6d0:	cf 91       	pop	r28
    b6d2:	08 95       	ret

0000b6d4 <drawmonster>:

void drawmonster()
{
    b6d4:	0f 93       	push	r16
if (owl.onscreen)
    b6d6:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <owl+0x9>
    b6da:	88 23       	and	r24, r24
    b6dc:	81 f1       	breq	.+96     	; 0xb73e <drawmonster+0x6a>
{
if (!owl.alive) { MapSprite2(6 , owl1 ,0); MoveSprite(6 , owl.x, owl.y  ,2 ,2);return;}; 
    b6de:	80 91 a5 09 	lds	r24, 0x09A5	; 0x8009a5 <owl+0xa>
    b6e2:	81 11       	cpse	r24, r1
    b6e4:	0d c0       	rjmp	.+26     	; 0xb700 <drawmonster+0x2c>
    b6e6:	40 e0       	ldi	r20, 0x00	; 0
    b6e8:	6b e5       	ldi	r22, 0x5B	; 91
    b6ea:	75 e5       	ldi	r23, 0x55	; 85
    b6ec:	86 e0       	ldi	r24, 0x06	; 6
    b6ee:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
    b6f2:	02 e0       	ldi	r16, 0x02	; 2
    b6f4:	22 e0       	ldi	r18, 0x02	; 2
    b6f6:	40 91 9d 09 	lds	r20, 0x099D	; 0x80099d <owl+0x2>
    b6fa:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <owl>
    b6fe:	60 c0       	rjmp	.+192    	; 0xb7c0 <drawmonster+0xec>
if (aniframe < 10 ) 
    b700:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <aniframe>
    b704:	8a 30       	cpi	r24, 0x0A	; 10
    b706:	58 f4       	brcc	.+22     	; 0xb71e <drawmonster+0x4a>
{
    MoveSprite(6 , owl.x, owl.y  ,2 ,2);
    b708:	02 e0       	ldi	r16, 0x02	; 2
    b70a:	22 e0       	ldi	r18, 0x02	; 2
    b70c:	40 91 9d 09 	lds	r20, 0x099D	; 0x80099d <owl+0x2>
    b710:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <owl>
    b714:	86 e0       	ldi	r24, 0x06	; 6
    b716:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 , owl0 ,0); 
    b71a:	40 e0       	ldi	r20, 0x00	; 0
    b71c:	0b c0       	rjmp	.+22     	; 0xb734 <drawmonster+0x60>
}
else
{
    MoveSprite(6 , owl.x -1 , owl.y  ,2 ,2);
    b71e:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <owl>
    b722:	61 50       	subi	r22, 0x01	; 1
    b724:	02 e0       	ldi	r16, 0x02	; 2
    b726:	22 e0       	ldi	r18, 0x02	; 2
    b728:	40 91 9d 09 	lds	r20, 0x099D	; 0x80099d <owl+0x2>
    b72c:	86 e0       	ldi	r24, 0x06	; 6
    b72e:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 , owl0 ,1); 
    b732:	41 e0       	ldi	r20, 0x01	; 1
    b734:	69 e7       	ldi	r22, 0x79	; 121
    b736:	75 e5       	ldi	r23, 0x55	; 85
    b738:	86 e0       	ldi	r24, 0x06	; 6
    b73a:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
};
};
    
if (blob.onscreen)
    b73e:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <blob+0x9>
    b742:	88 23       	and	r24, r24
    b744:	49 f1       	breq	.+82     	; 0xb798 <drawmonster+0xc4>
{
if (!blob.alive) { MapSprite2(6 , blob1 ,0);  MoveSprite(6 ,blob.x, blob.y  ,2 ,2);return;}; 
    b746:	80 91 5c 09 	lds	r24, 0x095C	; 0x80095c <blob+0xa>
    b74a:	81 11       	cpse	r24, r1
    b74c:	0d c0       	rjmp	.+26     	; 0xb768 <drawmonster+0x94>
    b74e:	40 e0       	ldi	r20, 0x00	; 0
    b750:	61 e6       	ldi	r22, 0x61	; 97
    b752:	75 e5       	ldi	r23, 0x55	; 85
    b754:	86 e0       	ldi	r24, 0x06	; 6
    b756:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
    b75a:	02 e0       	ldi	r16, 0x02	; 2
    b75c:	22 e0       	ldi	r18, 0x02	; 2
    b75e:	40 91 54 09 	lds	r20, 0x0954	; 0x800954 <blob+0x2>
    b762:	60 91 52 09 	lds	r22, 0x0952	; 0x800952 <blob>
    b766:	2c c0       	rjmp	.+88     	; 0xb7c0 <drawmonster+0xec>
if (aniframe < 10 ) 
    b768:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <aniframe>
{
    MoveSprite(6 ,blob.x, blob.y  ,2 ,2);
    b76c:	02 e0       	ldi	r16, 0x02	; 2
    b76e:	22 e0       	ldi	r18, 0x02	; 2
    b770:	40 91 54 09 	lds	r20, 0x0954	; 0x800954 <blob+0x2>
    b774:	60 91 52 09 	lds	r22, 0x0952	; 0x800952 <blob>
};
    
if (blob.onscreen)
{
if (!blob.alive) { MapSprite2(6 , blob1 ,0);  MoveSprite(6 ,blob.x, blob.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    b778:	8a 30       	cpi	r24, 0x0A	; 10
    b77a:	28 f4       	brcc	.+10     	; 0xb786 <drawmonster+0xb2>
{
    MoveSprite(6 ,blob.x, blob.y  ,2 ,2);
    b77c:	86 e0       	ldi	r24, 0x06	; 6
    b77e:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 ,blob0 ,0); 
    b782:	40 e0       	ldi	r20, 0x00	; 0
    b784:	04 c0       	rjmp	.+8      	; 0xb78e <drawmonster+0xba>
}
else
{
    MoveSprite(6 ,blob.x , blob.y  ,2 ,2);
    b786:	86 e0       	ldi	r24, 0x06	; 6
    b788:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 ,blob0 ,1); 
    b78c:	41 e0       	ldi	r20, 0x01	; 1
    b78e:	63 e7       	ldi	r22, 0x73	; 115
    b790:	75 e5       	ldi	r23, 0x55	; 85
    b792:	86 e0       	ldi	r24, 0x06	; 6
    b794:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
};
};    

if (bee.onscreen)
    b798:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <bee+0x9>
    b79c:	88 23       	and	r24, r24
    b79e:	79 f1       	breq	.+94     	; 0xb7fe <drawmonster+0x12a>
{
    if (!bee.alive) { MapSprite2(6 , bee1 ,0);MoveSprite(6 ,bee.x, bee.y  ,2 ,2);return;}; 
    b7a0:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <bee+0xa>
    b7a4:	81 11       	cpse	r24, r1
    b7a6:	10 c0       	rjmp	.+32     	; 0xb7c8 <drawmonster+0xf4>
    b7a8:	40 e0       	ldi	r20, 0x00	; 0
    b7aa:	67 e6       	ldi	r22, 0x67	; 103
    b7ac:	75 e5       	ldi	r23, 0x55	; 85
    b7ae:	86 e0       	ldi	r24, 0x06	; 6
    b7b0:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
    b7b4:	02 e0       	ldi	r16, 0x02	; 2
    b7b6:	22 e0       	ldi	r18, 0x02	; 2
    b7b8:	40 91 73 09 	lds	r20, 0x0973	; 0x800973 <bee+0x2>
    b7bc:	60 91 71 09 	lds	r22, 0x0971	; 0x800971 <bee>
    b7c0:	86 e0       	ldi	r24, 0x06	; 6
    b7c2:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    b7c6:	1b c0       	rjmp	.+54     	; 0xb7fe <drawmonster+0x12a>
if (aniframe < 10 ) 
    b7c8:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <aniframe>
{
    MoveSprite(6 ,bee.x, bee.y  ,2 ,2);
    b7cc:	02 e0       	ldi	r16, 0x02	; 2
    b7ce:	22 e0       	ldi	r18, 0x02	; 2
    b7d0:	40 91 73 09 	lds	r20, 0x0973	; 0x800973 <bee+0x2>
    b7d4:	60 91 71 09 	lds	r22, 0x0971	; 0x800971 <bee>
};    

if (bee.onscreen)
{
    if (!bee.alive) { MapSprite2(6 , bee1 ,0);MoveSprite(6 ,bee.x, bee.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    b7d8:	8a 30       	cpi	r24, 0x0A	; 10
    b7da:	38 f4       	brcc	.+14     	; 0xb7ea <drawmonster+0x116>
{
    MoveSprite(6 ,bee.x, bee.y  ,2 ,2);
    b7dc:	86 e0       	ldi	r24, 0x06	; 6
    b7de:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 ,bee0 ,0); 
    b7e2:	40 e0       	ldi	r20, 0x00	; 0
    b7e4:	6d e6       	ldi	r22, 0x6D	; 109
    b7e6:	75 e5       	ldi	r23, 0x55	; 85
    b7e8:	06 c0       	rjmp	.+12     	; 0xb7f6 <drawmonster+0x122>
}
else
{
    MoveSprite(6 ,bee.x , bee.y  ,2 ,2);
    b7ea:	86 e0       	ldi	r24, 0x06	; 6
    b7ec:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    MapSprite2(6 ,bee1 ,0); 
    b7f0:	40 e0       	ldi	r20, 0x00	; 0
    b7f2:	67 e6       	ldi	r22, 0x67	; 103
    b7f4:	75 e5       	ldi	r23, 0x55	; 85
    b7f6:	86 e0       	ldi	r24, 0x06	; 6
};
};    
       
}
    b7f8:	0f 91       	pop	r16
    MapSprite2(6 ,bee0 ,0); 
}
else
{
    MoveSprite(6 ,bee.x , bee.y  ,2 ,2);
    MapSprite2(6 ,bee1 ,0); 
    b7fa:	0c 94 c8 53 	jmp	0xa790	; 0xa790 <MapSprite2>
};
};    
       
}
    b7fe:	0f 91       	pop	r16
    b800:	08 95       	ret

0000b802 <movemonster>:

void movemonster()
{
    b802:	0f 93       	push	r16
if (owl.onscreen) 
    b804:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <owl+0x9>
    b808:	88 23       	and	r24, r24
    b80a:	09 f4       	brne	.+2      	; 0xb80e <movemonster+0xc>
    b80c:	c1 c0       	rjmp	.+386    	; 0xb990 <movemonster+0x18e>
{
 
    owl.x = owl.x2 >> 2;
    b80e:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <owl+0x4>
    b812:	90 91 a0 09 	lds	r25, 0x09A0	; 0x8009a0 <owl+0x5>
    oldx = owl.x;
    b816:	9c 01       	movw	r18, r24
    b818:	35 95       	asr	r19
    b81a:	27 95       	ror	r18
    b81c:	35 95       	asr	r19
    b81e:	27 95       	ror	r18
    b820:	30 93 80 09 	sts	0x0980, r19	; 0x800980 <oldx+0x1>
    b824:	20 93 7f 09 	sts	0x097F, r18	; 0x80097f <oldx>
    oldy = owl.y; 
    b828:	20 91 9d 09 	lds	r18, 0x099D	; 0x80099d <owl+0x2>
    b82c:	30 91 9e 09 	lds	r19, 0x099E	; 0x80099e <owl+0x3>
    b830:	30 93 e8 09 	sts	0x09E8, r19	; 0x8009e8 <oldy+0x1>
    b834:	20 93 e7 09 	sts	0x09E7, r18	; 0x8009e7 <oldy>
    oldx2 = owl.x2;
    b838:	90 93 e1 09 	sts	0x09E1, r25	; 0x8009e1 <oldx2+0x1>
    b83c:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    b840:	b9 01       	movw	r22, r18
    b842:	6e 5f       	subi	r22, 0xFE	; 254
    b844:	7f 4f       	sbci	r23, 0xFF	; 255
    b846:	40 91 a3 09 	lds	r20, 0x09A3	; 0x8009a3 <owl+0x8>
    b84a:	64 0f       	add	r22, r20
    b84c:	71 1d       	adc	r23, r1
    b84e:	47 fd       	sbrc	r20, 7
    b850:	7a 95       	dec	r23
    b852:	70 93 9e 09 	sts	0x099E, r23	; 0x80099e <owl+0x3>
    b856:	60 93 9d 09 	sts	0x099D, r22	; 0x80099d <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    b85a:	40 91 a2 09 	lds	r20, 0x09A2	; 0x8009a2 <owl+0x7>
    b85e:	84 0f       	add	r24, r20
    b860:	91 1d       	adc	r25, r1
    b862:	47 fd       	sbrc	r20, 7
    b864:	9a 95       	dec	r25
    b866:	90 93 a0 09 	sts	0x09A0, r25	; 0x8009a0 <owl+0x5>
    b86a:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <owl+0x4>
    owl.x = owl.x2 >> 2;
    b86e:	95 95       	asr	r25
    b870:	87 95       	ror	r24
    b872:	95 95       	asr	r25
    b874:	87 95       	ror	r24
    b876:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <owl+0x1>
    b87a:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    b87e:	26 17       	cp	r18, r22
    b880:	37 07       	cpc	r19, r23
    b882:	34 f5       	brge	.+76     	; 0xb8d0 <movemonster+0xce>
    b884:	60 5f       	subi	r22, 0xF0	; 240
    b886:	7f 4f       	sbci	r23, 0xFF	; 255
    b888:	40 e0       	ldi	r20, 0x00	; 0
    b88a:	50 e0       	ldi	r21, 0x00	; 0
    b88c:	03 96       	adiw	r24, 0x03	; 3
    b88e:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    b892:	80 ff       	sbrs	r24, 0
    b894:	0c c0       	rjmp	.+24     	; 0xb8ae <movemonster+0xac>
    b896:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <owl+0x2>
    b89a:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <owl+0x3>
    b89e:	97 fd       	sbrc	r25, 7
    b8a0:	0f 96       	adiw	r24, 0x0f	; 15
    b8a2:	80 7f       	andi	r24, 0xF0	; 240
    b8a4:	90 93 9e 09 	sts	0x099E, r25	; 0x80099e <owl+0x3>
    b8a8:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <owl+0x2>
    b8ac:	11 c0       	rjmp	.+34     	; 0xb8d0 <movemonster+0xce>
    b8ae:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <owl+0x2>
    b8b2:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <owl+0x3>
    b8b6:	60 5f       	subi	r22, 0xF0	; 240
    b8b8:	7f 4f       	sbci	r23, 0xFF	; 255
    b8ba:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    b8be:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    b8c2:	40 e0       	ldi	r20, 0x00	; 0
    b8c4:	50 e0       	ldi	r21, 0x00	; 0
    b8c6:	0c 96       	adiw	r24, 0x0c	; 12
    b8c8:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    b8cc:	80 fd       	sbrc	r24, 0
    b8ce:	e3 cf       	rjmp	.-58     	; 0xb896 <movemonster+0x94>
    if (owl.x > oldx ) if (checkcollide( owl.x + 12, owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    b8d0:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    b8d4:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    b8d8:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    b8dc:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    b8e0:	28 17       	cp	r18, r24
    b8e2:	39 07       	cpc	r19, r25
    b8e4:	c4 f4       	brge	.+48     	; 0xb916 <movemonster+0x114>
    b8e6:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <owl+0x2>
    b8ea:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <owl+0x3>
    b8ee:	68 5f       	subi	r22, 0xF8	; 248
    b8f0:	7f 4f       	sbci	r23, 0xFF	; 255
    b8f2:	40 e0       	ldi	r20, 0x00	; 0
    b8f4:	50 e0       	ldi	r21, 0x00	; 0
    b8f6:	0c 96       	adiw	r24, 0x0c	; 12
    b8f8:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    b8fc:	80 ff       	sbrs	r24, 0
    b8fe:	0b c0       	rjmp	.+22     	; 0xb916 <movemonster+0x114>
    b900:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    b904:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    b908:	90 93 a0 09 	sts	0x09A0, r25	; 0x8009a0 <owl+0x5>
    b90c:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <owl+0x4>
    b910:	8f ef       	ldi	r24, 0xFF	; 255
    b912:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <owl+0x7>
    if (owl.x < oldx ) if (checkcollide( owl.x + 2 , owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    b916:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    b91a:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    b91e:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    b922:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    b926:	82 17       	cp	r24, r18
    b928:	93 07       	cpc	r25, r19
    b92a:	c4 f4       	brge	.+48     	; 0xb95c <movemonster+0x15a>
    b92c:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <owl+0x2>
    b930:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <owl+0x3>
    b934:	68 5f       	subi	r22, 0xF8	; 248
    b936:	7f 4f       	sbci	r23, 0xFF	; 255
    b938:	40 e0       	ldi	r20, 0x00	; 0
    b93a:	50 e0       	ldi	r21, 0x00	; 0
    b93c:	02 96       	adiw	r24, 0x02	; 2
    b93e:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    b942:	80 ff       	sbrs	r24, 0
    b944:	0b c0       	rjmp	.+22     	; 0xb95c <movemonster+0x15a>
    b946:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    b94a:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    b94e:	90 93 a0 09 	sts	0x09A0, r25	; 0x8009a0 <owl+0x5>
    b952:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <owl+0x4>
    b956:	81 e0       	ldi	r24, 0x01	; 1
    b958:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(6,-20,-20,2,2); owl.onscreen = false;};
    b95c:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <owl+0x2>
    b960:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <owl+0x3>
    b964:	81 3f       	cpi	r24, 0xF1	; 241
    b966:	91 05       	cpc	r25, r1
    b968:	40 f4       	brcc	.+16     	; 0xb97a <movemonster+0x178>
    b96a:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    b96e:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    b972:	40 96       	adiw	r24, 0x10	; 16
    b974:	81 30       	cpi	r24, 0x01	; 1
    b976:	91 40       	sbci	r25, 0x01	; 1
    b978:	58 f0       	brcs	.+22     	; 0xb990 <movemonster+0x18e>
    b97a:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <MonsteronScreen>
    b97e:	02 e0       	ldi	r16, 0x02	; 2
    b980:	22 e0       	ldi	r18, 0x02	; 2
    b982:	4c ee       	ldi	r20, 0xEC	; 236
    b984:	6c ee       	ldi	r22, 0xEC	; 236
    b986:	86 e0       	ldi	r24, 0x06	; 6
    b988:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    b98c:	10 92 a4 09 	sts	0x09A4, r1	; 0x8009a4 <owl+0x9>
}
if (blob.onscreen) 
    b990:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <blob+0x9>
    b994:	88 23       	and	r24, r24
    b996:	09 f4       	brne	.+2      	; 0xb99a <movemonster+0x198>
    b998:	c2 c0       	rjmp	.+388    	; 0xbb1e <movemonster+0x31c>
{
     
    blob.x = blob.x2 >> 2;
    b99a:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob+0x4>
    b99e:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x5>
    oldx = blob.x;
    b9a2:	9c 01       	movw	r18, r24
    b9a4:	35 95       	asr	r19
    b9a6:	27 95       	ror	r18
    b9a8:	35 95       	asr	r19
    b9aa:	27 95       	ror	r18
    b9ac:	30 93 80 09 	sts	0x0980, r19	; 0x800980 <oldx+0x1>
    b9b0:	20 93 7f 09 	sts	0x097F, r18	; 0x80097f <oldx>
    oldy = blob.y; 
    b9b4:	20 91 54 09 	lds	r18, 0x0954	; 0x800954 <blob+0x2>
    b9b8:	30 91 55 09 	lds	r19, 0x0955	; 0x800955 <blob+0x3>
    b9bc:	30 93 e8 09 	sts	0x09E8, r19	; 0x8009e8 <oldy+0x1>
    b9c0:	20 93 e7 09 	sts	0x09E7, r18	; 0x8009e7 <oldy>
    oldx2 = blob.x2;
    b9c4:	90 93 e1 09 	sts	0x09E1, r25	; 0x8009e1 <oldx2+0x1>
    b9c8:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <oldx2>
    blob.y = blob.y  + gravity + blob.yimpulse;
    b9cc:	b9 01       	movw	r22, r18
    b9ce:	6e 5f       	subi	r22, 0xFE	; 254
    b9d0:	7f 4f       	sbci	r23, 0xFF	; 255
    b9d2:	40 91 5a 09 	lds	r20, 0x095A	; 0x80095a <blob+0x8>
    b9d6:	64 0f       	add	r22, r20
    b9d8:	71 1d       	adc	r23, r1
    b9da:	47 fd       	sbrc	r20, 7
    b9dc:	7a 95       	dec	r23
    b9de:	70 93 55 09 	sts	0x0955, r23	; 0x800955 <blob+0x3>
    b9e2:	60 93 54 09 	sts	0x0954, r22	; 0x800954 <blob+0x2>
    blob.x2 = blob.x2 + blob.ximpulse;
    b9e6:	40 91 59 09 	lds	r20, 0x0959	; 0x800959 <blob+0x7>
    b9ea:	84 0f       	add	r24, r20
    b9ec:	91 1d       	adc	r25, r1
    b9ee:	47 fd       	sbrc	r20, 7
    b9f0:	9a 95       	dec	r25
    b9f2:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x5>
    b9f6:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob+0x4>
    blob.x = blob.x2 >> 2;
    b9fa:	95 95       	asr	r25
    b9fc:	87 95       	ror	r24
    b9fe:	95 95       	asr	r25
    ba00:	87 95       	ror	r24
    ba02:	90 93 53 09 	sts	0x0953, r25	; 0x800953 <blob+0x1>
    ba06:	80 93 52 09 	sts	0x0952, r24	; 0x800952 <blob>
    if (blob.y > oldy ) if (checkcollide( blob.x + 3 , blob.y + 16,     0 )&1 || checkcollide( blob.x + 12 , blob.y +16    ,0 )&1) { blob.y = ( blob.y / 16 ) * 16   ;};
    ba0a:	26 17       	cp	r18, r22
    ba0c:	37 07       	cpc	r19, r23
    ba0e:	34 f5       	brge	.+76     	; 0xba5c <movemonster+0x25a>
    ba10:	60 5f       	subi	r22, 0xF0	; 240
    ba12:	7f 4f       	sbci	r23, 0xFF	; 255
    ba14:	40 e0       	ldi	r20, 0x00	; 0
    ba16:	50 e0       	ldi	r21, 0x00	; 0
    ba18:	03 96       	adiw	r24, 0x03	; 3
    ba1a:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    ba1e:	80 ff       	sbrs	r24, 0
    ba20:	0c c0       	rjmp	.+24     	; 0xba3a <movemonster+0x238>
    ba22:	80 91 54 09 	lds	r24, 0x0954	; 0x800954 <blob+0x2>
    ba26:	90 91 55 09 	lds	r25, 0x0955	; 0x800955 <blob+0x3>
    ba2a:	97 fd       	sbrc	r25, 7
    ba2c:	0f 96       	adiw	r24, 0x0f	; 15
    ba2e:	80 7f       	andi	r24, 0xF0	; 240
    ba30:	90 93 55 09 	sts	0x0955, r25	; 0x800955 <blob+0x3>
    ba34:	80 93 54 09 	sts	0x0954, r24	; 0x800954 <blob+0x2>
    ba38:	11 c0       	rjmp	.+34     	; 0xba5c <movemonster+0x25a>
    ba3a:	60 91 54 09 	lds	r22, 0x0954	; 0x800954 <blob+0x2>
    ba3e:	70 91 55 09 	lds	r23, 0x0955	; 0x800955 <blob+0x3>
    ba42:	60 5f       	subi	r22, 0xF0	; 240
    ba44:	7f 4f       	sbci	r23, 0xFF	; 255
    ba46:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    ba4a:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    ba4e:	40 e0       	ldi	r20, 0x00	; 0
    ba50:	50 e0       	ldi	r21, 0x00	; 0
    ba52:	0c 96       	adiw	r24, 0x0c	; 12
    ba54:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    ba58:	80 fd       	sbrc	r24, 0
    ba5a:	e3 cf       	rjmp	.-58     	; 0xba22 <movemonster+0x220>
    if (blob.x > oldx ) if (!(checkcollide( blob.x + 17, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   -2;};
    ba5c:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    ba60:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    ba64:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    ba68:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    ba6c:	28 17       	cp	r18, r24
    ba6e:	39 07       	cpc	r19, r25
    ba70:	c4 f4       	brge	.+48     	; 0xbaa2 <movemonster+0x2a0>
    ba72:	60 91 54 09 	lds	r22, 0x0954	; 0x800954 <blob+0x2>
    ba76:	70 91 55 09 	lds	r23, 0x0955	; 0x800955 <blob+0x3>
    ba7a:	6f 5e       	subi	r22, 0xEF	; 239
    ba7c:	7f 4f       	sbci	r23, 0xFF	; 255
    ba7e:	40 e0       	ldi	r20, 0x00	; 0
    ba80:	50 e0       	ldi	r21, 0x00	; 0
    ba82:	41 96       	adiw	r24, 0x11	; 17
    ba84:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    ba88:	80 fd       	sbrc	r24, 0
    ba8a:	0b c0       	rjmp	.+22     	; 0xbaa2 <movemonster+0x2a0>
    ba8c:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    ba90:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    ba94:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x5>
    ba98:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob+0x4>
    ba9c:	8e ef       	ldi	r24, 0xFE	; 254
    ba9e:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <blob+0x7>
    if (blob.x < oldx ) if (!(checkcollide( blob.x -  1, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   +2;};
    baa2:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    baa6:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    baaa:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    baae:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    bab2:	82 17       	cp	r24, r18
    bab4:	93 07       	cpc	r25, r19
    bab6:	c4 f4       	brge	.+48     	; 0xbae8 <movemonster+0x2e6>
    bab8:	60 91 54 09 	lds	r22, 0x0954	; 0x800954 <blob+0x2>
    babc:	70 91 55 09 	lds	r23, 0x0955	; 0x800955 <blob+0x3>
    bac0:	6f 5e       	subi	r22, 0xEF	; 239
    bac2:	7f 4f       	sbci	r23, 0xFF	; 255
    bac4:	40 e0       	ldi	r20, 0x00	; 0
    bac6:	50 e0       	ldi	r21, 0x00	; 0
    bac8:	01 97       	sbiw	r24, 0x01	; 1
    baca:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    bace:	80 fd       	sbrc	r24, 0
    bad0:	0b c0       	rjmp	.+22     	; 0xbae8 <movemonster+0x2e6>
    bad2:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    bad6:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    bada:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x5>
    bade:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob+0x4>
    bae2:	82 e0       	ldi	r24, 0x02	; 2
    bae4:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <blob+0x7>
    if (blob.y > 240 || blob.y < 0 || blob.x <= -16 || blob.x > 240 )  {MonsteronScreen = false; MoveSprite(6,-20,-20,2,2);blob.onscreen = false;};
    bae8:	80 91 54 09 	lds	r24, 0x0954	; 0x800954 <blob+0x2>
    baec:	90 91 55 09 	lds	r25, 0x0955	; 0x800955 <blob+0x3>
    baf0:	81 3f       	cpi	r24, 0xF1	; 241
    baf2:	91 05       	cpc	r25, r1
    baf4:	48 f4       	brcc	.+18     	; 0xbb08 <movemonster+0x306>
    baf6:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    bafa:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    bafe:	0f 96       	adiw	r24, 0x0f	; 15
    bb00:	8f 3f       	cpi	r24, 0xFF	; 255
    bb02:	91 05       	cpc	r25, r1
    bb04:	61 f0       	breq	.+24     	; 0xbb1e <movemonster+0x31c>
    bb06:	58 f0       	brcs	.+22     	; 0xbb1e <movemonster+0x31c>
    bb08:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <MonsteronScreen>
    bb0c:	02 e0       	ldi	r16, 0x02	; 2
    bb0e:	22 e0       	ldi	r18, 0x02	; 2
    bb10:	4c ee       	ldi	r20, 0xEC	; 236
    bb12:	6c ee       	ldi	r22, 0xEC	; 236
    bb14:	86 e0       	ldi	r24, 0x06	; 6
    bb16:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    bb1a:	10 92 5b 09 	sts	0x095B, r1	; 0x80095b <blob+0x9>
}   

if (bee.onscreen) 
    bb1e:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <bee+0x9>
    bb22:	88 23       	and	r24, r24
    bb24:	09 f4       	brne	.+2      	; 0xbb28 <movemonster+0x326>
    bb26:	8c c0       	rjmp	.+280    	; 0xbc40 <movemonster+0x43e>
{
    bee.x = bee.x2 >> 2;
    bb28:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <bee+0x4>
    bb2c:	90 91 76 09 	lds	r25, 0x0976	; 0x800976 <bee+0x5>
    bb30:	ac 01       	movw	r20, r24
    bb32:	55 95       	asr	r21
    bb34:	47 95       	ror	r20
    bb36:	55 95       	asr	r21
    bb38:	47 95       	ror	r20
    oldx = bee.x;
    bb3a:	50 93 80 09 	sts	0x0980, r21	; 0x800980 <oldx+0x1>
    bb3e:	40 93 7f 09 	sts	0x097F, r20	; 0x80097f <oldx>
    oldy = bee.y; 
    bb42:	20 91 73 09 	lds	r18, 0x0973	; 0x800973 <bee+0x2>
    bb46:	30 91 74 09 	lds	r19, 0x0974	; 0x800974 <bee+0x3>
    bb4a:	30 93 e8 09 	sts	0x09E8, r19	; 0x8009e8 <oldy+0x1>
    bb4e:	20 93 e7 09 	sts	0x09E7, r18	; 0x8009e7 <oldy>
    oldx2 = bee.x2;
    bb52:	90 93 e1 09 	sts	0x09E1, r25	; 0x8009e1 <oldx2+0x1>
    bb56:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <oldx2>
    
    bee.y = bee.y;
     if (!bee.alive) bee.y = bee.y  + gravity;
    bb5a:	60 91 7b 09 	lds	r22, 0x097B	; 0x80097b <bee+0xa>
    bb5e:	61 11       	cpse	r22, r1
    bb60:	06 c0       	rjmp	.+12     	; 0xbb6e <movemonster+0x36c>
    bb62:	2e 5f       	subi	r18, 0xFE	; 254
    bb64:	3f 4f       	sbci	r19, 0xFF	; 255
    bb66:	30 93 74 09 	sts	0x0974, r19	; 0x800974 <bee+0x3>
    bb6a:	20 93 73 09 	sts	0x0973, r18	; 0x800973 <bee+0x2>
    bee.x2 = bee.x2 + bee.ximpulse;
    bb6e:	20 91 78 09 	lds	r18, 0x0978	; 0x800978 <bee+0x7>
    bb72:	82 0f       	add	r24, r18
    bb74:	91 1d       	adc	r25, r1
    bb76:	27 fd       	sbrc	r18, 7
    bb78:	9a 95       	dec	r25
    bb7a:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <bee+0x5>
    bb7e:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <bee+0x4>
    bee.x = bee.x2 >> 2;
    bb82:	95 95       	asr	r25
    bb84:	87 95       	ror	r24
    bb86:	95 95       	asr	r25
    bb88:	87 95       	ror	r24
    bb8a:	90 93 72 09 	sts	0x0972, r25	; 0x800972 <bee+0x1>
    bb8e:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <bee>
    if (bee.x > oldx ) if ((checkcollide( bee.x + 8, bee.y + 17 ,0 )&1) )  { bee.x2 = oldx2; bee.ximpulse =   0;};
    bb92:	48 17       	cp	r20, r24
    bb94:	59 07       	cpc	r21, r25
    bb96:	bc f4       	brge	.+46     	; 0xbbc6 <movemonster+0x3c4>
    bb98:	60 91 73 09 	lds	r22, 0x0973	; 0x800973 <bee+0x2>
    bb9c:	70 91 74 09 	lds	r23, 0x0974	; 0x800974 <bee+0x3>
    bba0:	6f 5e       	subi	r22, 0xEF	; 239
    bba2:	7f 4f       	sbci	r23, 0xFF	; 255
    bba4:	40 e0       	ldi	r20, 0x00	; 0
    bba6:	50 e0       	ldi	r21, 0x00	; 0
    bba8:	08 96       	adiw	r24, 0x08	; 8
    bbaa:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    bbae:	80 ff       	sbrs	r24, 0
    bbb0:	0a c0       	rjmp	.+20     	; 0xbbc6 <movemonster+0x3c4>
    bbb2:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    bbb6:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    bbba:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <bee+0x5>
    bbbe:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <bee+0x4>
    bbc2:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <bee+0x7>
    if (bee.x < oldx ) if ((checkcollide( bee.x - 1, bee.y + 17 ,0 )&1) )  { bee.x2 = oldx2; bee.ximpulse =   0;};
    bbc6:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <bee>
    bbca:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <bee+0x1>
    bbce:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    bbd2:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    bbd6:	82 17       	cp	r24, r18
    bbd8:	93 07       	cpc	r25, r19
    bbda:	bc f4       	brge	.+46     	; 0xbc0a <movemonster+0x408>
    bbdc:	60 91 73 09 	lds	r22, 0x0973	; 0x800973 <bee+0x2>
    bbe0:	70 91 74 09 	lds	r23, 0x0974	; 0x800974 <bee+0x3>
    bbe4:	6f 5e       	subi	r22, 0xEF	; 239
    bbe6:	7f 4f       	sbci	r23, 0xFF	; 255
    bbe8:	40 e0       	ldi	r20, 0x00	; 0
    bbea:	50 e0       	ldi	r21, 0x00	; 0
    bbec:	01 97       	sbiw	r24, 0x01	; 1
    bbee:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    bbf2:	80 ff       	sbrs	r24, 0
    bbf4:	0a c0       	rjmp	.+20     	; 0xbc0a <movemonster+0x408>
    bbf6:	80 91 e0 09 	lds	r24, 0x09E0	; 0x8009e0 <oldx2>
    bbfa:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <oldx2+0x1>
    bbfe:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <bee+0x5>
    bc02:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <bee+0x4>
    bc06:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <bee+0x7>
    if (bee.y > 240 || bee.y < 0 || bee.x <= - 16 || bee.x > 240 )  {MonsteronScreen = false; MoveSprite(6,-20,-20,2,2);bee.onscreen = false;};
    bc0a:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <bee+0x2>
    bc0e:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <bee+0x3>
    bc12:	81 3f       	cpi	r24, 0xF1	; 241
    bc14:	91 05       	cpc	r25, r1
    bc16:	48 f4       	brcc	.+18     	; 0xbc2a <movemonster+0x428>
    bc18:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <bee>
    bc1c:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <bee+0x1>
    bc20:	0f 96       	adiw	r24, 0x0f	; 15
    bc22:	8f 3f       	cpi	r24, 0xFF	; 255
    bc24:	91 05       	cpc	r25, r1
    bc26:	61 f0       	breq	.+24     	; 0xbc40 <movemonster+0x43e>
    bc28:	58 f0       	brcs	.+22     	; 0xbc40 <movemonster+0x43e>
    bc2a:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <MonsteronScreen>
    bc2e:	02 e0       	ldi	r16, 0x02	; 2
    bc30:	22 e0       	ldi	r18, 0x02	; 2
    bc32:	4c ee       	ldi	r20, 0xEC	; 236
    bc34:	6c ee       	ldi	r22, 0xEC	; 236
    bc36:	86 e0       	ldi	r24, 0x06	; 6
    bc38:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
    bc3c:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <bee+0x9>
}     
    
}
    bc40:	0f 91       	pop	r16
    bc42:	08 95       	ret

0000bc44 <checkmonster>:

void checkmonster(int x, int y,int z)
{
    bc44:	ef 92       	push	r14
    bc46:	ff 92       	push	r15
    bc48:	0f 93       	push	r16
    bc4a:	1f 93       	push	r17
    bc4c:	cf 93       	push	r28
    bc4e:	df 93       	push	r29
if (!MonsteronScreen) return;
    bc50:	20 91 88 09 	lds	r18, 0x0988	; 0x800988 <MonsteronScreen>
    bc54:	22 23       	and	r18, r18
    bc56:	09 f4       	brne	.+2      	; 0xbc5a <checkmonster+0x16>
    bc58:	1f c1       	rjmp	.+574    	; 0xbe98 <checkmonster+0x254>
    bc5a:	7a 01       	movw	r14, r20
    bc5c:	eb 01       	movw	r28, r22
    bc5e:	8c 01       	movw	r16, r24

if   (owl.onscreen && owl.alive)
    bc60:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <owl+0x9>
    bc64:	88 23       	and	r24, r24
    bc66:	09 f4       	brne	.+2      	; 0xbc6a <checkmonster+0x26>
    bc68:	55 c0       	rjmp	.+170    	; 0xbd14 <checkmonster+0xd0>
    bc6a:	80 91 a5 09 	lds	r24, 0x09A5	; 0x8009a5 <owl+0xa>
    bc6e:	88 23       	and	r24, r24
    bc70:	09 f4       	brne	.+2      	; 0xbc74 <checkmonster+0x30>
    bc72:	50 c0       	rjmp	.+160    	; 0xbd14 <checkmonster+0xd0>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    bc74:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    bc78:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    bc7c:	9c 01       	movw	r18, r24
    bc7e:	2d 5f       	subi	r18, 0xFD	; 253
    bc80:	3f 4f       	sbci	r19, 0xFF	; 255
    bc82:	20 17       	cp	r18, r16
    bc84:	31 07       	cpc	r19, r17
    bc86:	0c f0       	brlt	.+2      	; 0xbc8a <checkmonster+0x46>
    bc88:	45 c0       	rjmp	.+138    	; 0xbd14 <checkmonster+0xd0>
    bc8a:	0b 96       	adiw	r24, 0x0b	; 11
    bc8c:	80 17       	cp	r24, r16
    bc8e:	91 07       	cpc	r25, r17
    bc90:	0c f4       	brge	.+2      	; 0xbc94 <checkmonster+0x50>
    bc92:	40 c0       	rjmp	.+128    	; 0xbd14 <checkmonster+0xd0>
    bc94:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <owl+0x2>
    bc98:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <owl+0x3>
    bc9c:	9c 01       	movw	r18, r24
    bc9e:	2d 5f       	subi	r18, 0xFD	; 253
    bca0:	3f 4f       	sbci	r19, 0xFF	; 255
    bca2:	26 17       	cp	r18, r22
    bca4:	37 07       	cpc	r19, r23
    bca6:	b4 f5       	brge	.+108    	; 0xbd14 <checkmonster+0xd0>
    bca8:	0e 96       	adiw	r24, 0x0e	; 14
    bcaa:	86 17       	cp	r24, r22
    bcac:	97 07       	cpc	r25, r23
    bcae:	94 f1       	brlt	.+100    	; 0xbd14 <checkmonster+0xd0>
   {
    if ( z== 0)
    bcb0:	45 2b       	or	r20, r21
    bcb2:	d1 f4       	brne	.+52     	; 0xbce8 <checkmonster+0xa4>
    {
    died = true;
    bcb4:	81 e0       	ldi	r24, 0x01	; 1
    bcb6:	80 93 e3 09 	sts	0x09E3, r24	; 0x8009e3 <died>
    lives--;    
    bcba:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    bcbe:	81 50       	subi	r24, 0x01	; 1
    bcc0:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    isplaying = false; 
    bcc4:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    bcc8:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    bonus = 0;  
    bccc:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    bcd0:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    TriggerFx(9,0xff,true);
    bcd4:	41 e0       	ldi	r20, 0x01	; 1
    bcd6:	6f ef       	ldi	r22, 0xFF	; 255
    bcd8:	89 e0       	ldi	r24, 0x09	; 9
    bcda:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240); 
    bcde:	80 ef       	ldi	r24, 0xF0	; 240
    bce0:	90 e0       	ldi	r25, 0x00	; 0
    bce2:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    bce6:	16 c0       	rjmp	.+44     	; 0xbd14 <checkmonster+0xd0>
    }
       else
       {
        owl.alive = false; 
    bce8:	10 92 a5 09 	sts	0x09A5, r1	; 0x8009a5 <owl+0xa>
        owl.ximpulse = 0;
    bcec:	10 92 a2 09 	sts	0x09A2, r1	; 0x8009a2 <owl+0x7>
        owl.yimpulse = 0; 
    bcf0:	10 92 a3 09 	sts	0x09A3, r1	; 0x8009a3 <owl+0x8>
        score = score + 50;
    bcf4:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <score>
    bcf8:	90 91 7e 09 	lds	r25, 0x097E	; 0x80097e <score+0x1>
    bcfc:	c2 96       	adiw	r24, 0x32	; 50
    bcfe:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <score+0x1>
    bd02:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <score>
        updatepoints();
    bd06:	0e 94 6d 58 	call	0xb0da	; 0xb0da <updatepoints>
        TriggerFx(8,0xff,true);
    bd0a:	41 e0       	ldi	r20, 0x01	; 1
    bd0c:	6f ef       	ldi	r22, 0xFF	; 255
    bd0e:	88 e0       	ldi	r24, 0x08	; 8
    bd10:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
       };
   };     
   };
    
 if   (blob.onscreen && blob.alive)
    bd14:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <blob+0x9>
    bd18:	88 23       	and	r24, r24
    bd1a:	09 f4       	brne	.+2      	; 0xbd1e <checkmonster+0xda>
    bd1c:	56 c0       	rjmp	.+172    	; 0xbdca <checkmonster+0x186>
    bd1e:	80 91 5c 09 	lds	r24, 0x095C	; 0x80095c <blob+0xa>
    bd22:	88 23       	and	r24, r24
    bd24:	09 f4       	brne	.+2      	; 0xbd28 <checkmonster+0xe4>
    bd26:	51 c0       	rjmp	.+162    	; 0xbdca <checkmonster+0x186>
                    {
   if ( x >= blob.x +3 && x<= blob.x + 12 && y > blob.y+1 &&  y  < blob.y + 13 )
    bd28:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    bd2c:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    bd30:	9c 01       	movw	r18, r24
    bd32:	2e 5f       	subi	r18, 0xFE	; 254
    bd34:	3f 4f       	sbci	r19, 0xFF	; 255
    bd36:	20 17       	cp	r18, r16
    bd38:	31 07       	cpc	r19, r17
    bd3a:	0c f0       	brlt	.+2      	; 0xbd3e <checkmonster+0xfa>
    bd3c:	46 c0       	rjmp	.+140    	; 0xbdca <checkmonster+0x186>
    bd3e:	0c 96       	adiw	r24, 0x0c	; 12
    bd40:	80 17       	cp	r24, r16
    bd42:	91 07       	cpc	r25, r17
    bd44:	0c f4       	brge	.+2      	; 0xbd48 <checkmonster+0x104>
    bd46:	41 c0       	rjmp	.+130    	; 0xbdca <checkmonster+0x186>
    bd48:	80 91 54 09 	lds	r24, 0x0954	; 0x800954 <blob+0x2>
    bd4c:	90 91 55 09 	lds	r25, 0x0955	; 0x800955 <blob+0x3>
    bd50:	9c 01       	movw	r18, r24
    bd52:	2f 5f       	subi	r18, 0xFF	; 255
    bd54:	3f 4f       	sbci	r19, 0xFF	; 255
    bd56:	2c 17       	cp	r18, r28
    bd58:	3d 07       	cpc	r19, r29
    bd5a:	bc f5       	brge	.+110    	; 0xbdca <checkmonster+0x186>
    bd5c:	0c 96       	adiw	r24, 0x0c	; 12
    bd5e:	8c 17       	cp	r24, r28
    bd60:	9d 07       	cpc	r25, r29
    bd62:	9c f1       	brlt	.+102    	; 0xbdca <checkmonster+0x186>
   {
      if ( z== 0)
    bd64:	e1 14       	cp	r14, r1
    bd66:	f1 04       	cpc	r15, r1
    bd68:	d1 f4       	brne	.+52     	; 0xbd9e <checkmonster+0x15a>
    {
     died = true;
    bd6a:	81 e0       	ldi	r24, 0x01	; 1
    bd6c:	80 93 e3 09 	sts	0x09E3, r24	; 0x8009e3 <died>
    lives--;    
    bd70:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    bd74:	81 50       	subi	r24, 0x01	; 1
    bd76:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    isplaying = false; 
    bd7a:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    bd7e:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    bonus = 0; 
    bd82:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    bd86:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    TriggerFx(9,0xff,true);
    bd8a:	41 e0       	ldi	r20, 0x01	; 1
    bd8c:	6f ef       	ldi	r22, 0xFF	; 255
    bd8e:	89 e0       	ldi	r24, 0x09	; 9
    bd90:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240); 
    bd94:	80 ef       	ldi	r24, 0xF0	; 240
    bd96:	90 e0       	ldi	r25, 0x00	; 0
    bd98:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    bd9c:	16 c0       	rjmp	.+44     	; 0xbdca <checkmonster+0x186>
      }
    else
       {
        blob.alive = false;  
    bd9e:	10 92 5c 09 	sts	0x095C, r1	; 0x80095c <blob+0xa>
        blob.ximpulse = 0;
    bda2:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <blob+0x7>
        blob.yimpulse = 0;
    bda6:	10 92 5a 09 	sts	0x095A, r1	; 0x80095a <blob+0x8>
        score = score + 50;
    bdaa:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <score>
    bdae:	90 91 7e 09 	lds	r25, 0x097E	; 0x80097e <score+0x1>
    bdb2:	c2 96       	adiw	r24, 0x32	; 50
    bdb4:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <score+0x1>
    bdb8:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <score>
        updatepoints();
    bdbc:	0e 94 6d 58 	call	0xb0da	; 0xb0da <updatepoints>
        TriggerFx(8,0xff,true);
    bdc0:	41 e0       	ldi	r20, 0x01	; 1
    bdc2:	6f ef       	ldi	r22, 0xFF	; 255
    bdc4:	88 e0       	ldi	r24, 0x08	; 8
    bdc6:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
       };
   };     
   };
    
 if   (bee.onscreen && bee.alive)
    bdca:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <bee+0x9>
    bdce:	88 23       	and	r24, r24
    bdd0:	09 f4       	brne	.+2      	; 0xbdd4 <checkmonster+0x190>
    bdd2:	62 c0       	rjmp	.+196    	; 0xbe98 <checkmonster+0x254>
    bdd4:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <bee+0xa>
    bdd8:	88 23       	and	r24, r24
    bdda:	09 f4       	brne	.+2      	; 0xbdde <checkmonster+0x19a>
    bddc:	5d c0       	rjmp	.+186    	; 0xbe98 <checkmonster+0x254>
                    {
   if ( x >= bee.x +3 && x<= bee.x + 12 && y > bee.y+1 &&  y  < bee.y + 13 )
    bdde:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <bee>
    bde2:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <bee+0x1>
    bde6:	9c 01       	movw	r18, r24
    bde8:	2e 5f       	subi	r18, 0xFE	; 254
    bdea:	3f 4f       	sbci	r19, 0xFF	; 255
    bdec:	20 17       	cp	r18, r16
    bdee:	31 07       	cpc	r19, r17
    bdf0:	0c f0       	brlt	.+2      	; 0xbdf4 <checkmonster+0x1b0>
    bdf2:	52 c0       	rjmp	.+164    	; 0xbe98 <checkmonster+0x254>
    bdf4:	0c 96       	adiw	r24, 0x0c	; 12
    bdf6:	80 17       	cp	r24, r16
    bdf8:	91 07       	cpc	r25, r17
    bdfa:	0c f4       	brge	.+2      	; 0xbdfe <checkmonster+0x1ba>
    bdfc:	4d c0       	rjmp	.+154    	; 0xbe98 <checkmonster+0x254>
    bdfe:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <bee+0x2>
    be02:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <bee+0x3>
    be06:	9c 01       	movw	r18, r24
    be08:	2f 5f       	subi	r18, 0xFF	; 255
    be0a:	3f 4f       	sbci	r19, 0xFF	; 255
    be0c:	2c 17       	cp	r18, r28
    be0e:	3d 07       	cpc	r19, r29
    be10:	0c f0       	brlt	.+2      	; 0xbe14 <checkmonster+0x1d0>
    be12:	42 c0       	rjmp	.+132    	; 0xbe98 <checkmonster+0x254>
    be14:	0c 96       	adiw	r24, 0x0c	; 12
    be16:	8c 17       	cp	r24, r28
    be18:	9d 07       	cpc	r25, r29
    be1a:	f4 f1       	brlt	.+124    	; 0xbe98 <checkmonster+0x254>
   {
        if ( z== 0)
    be1c:	ef 28       	or	r14, r15
    be1e:	f9 f4       	brne	.+62     	; 0xbe5e <checkmonster+0x21a>
    {
     died = true;
    be20:	81 e0       	ldi	r24, 0x01	; 1
    be22:	80 93 e3 09 	sts	0x09E3, r24	; 0x8009e3 <died>
    lives--;    
    be26:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    be2a:	81 50       	subi	r24, 0x01	; 1
    be2c:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    isplaying = false; 
    be30:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    be34:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    bonus = 0; 
    be38:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    be3c:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    TriggerFx(9,0xff,true);
    be40:	41 e0       	ldi	r20, 0x01	; 1
    be42:	6f ef       	ldi	r22, 0xFF	; 255
    be44:	89 e0       	ldi	r24, 0x09	; 9
    be46:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240); 
    be4a:	80 ef       	ldi	r24, 0xF0	; 240
    be4c:	90 e0       	ldi	r25, 0x00	; 0
       
    
    
    

}
    be4e:	df 91       	pop	r29
    be50:	cf 91       	pop	r28
    be52:	1f 91       	pop	r17
    be54:	0f 91       	pop	r16
    be56:	ff 90       	pop	r15
    be58:	ef 90       	pop	r14
    lives--;    
    isplaying = false; 
    play = false;
    bonus = 0; 
    TriggerFx(9,0xff,true);
    WaitVsync(240); 
    be5a:	0c 94 81 54 	jmp	0xa902	; 0xa902 <WaitVsync>
        }
    else
       {
        bee.alive = false; 
    be5e:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <bee+0xa>
        bee.ximpulse = 0;
    be62:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <bee+0x7>
        bee.yimpulse = 0;
    be66:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <bee+0x8>
        score = score + 100;
    be6a:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <score>
    be6e:	90 91 7e 09 	lds	r25, 0x097E	; 0x80097e <score+0x1>
    be72:	8c 59       	subi	r24, 0x9C	; 156
    be74:	9f 4f       	sbci	r25, 0xFF	; 255
    be76:	90 93 7e 09 	sts	0x097E, r25	; 0x80097e <score+0x1>
    be7a:	80 93 7d 09 	sts	0x097D, r24	; 0x80097d <score>
        updatepoints();
    be7e:	0e 94 6d 58 	call	0xb0da	; 0xb0da <updatepoints>
        TriggerFx(8,0xff,true);
    be82:	41 e0       	ldi	r20, 0x01	; 1
    be84:	6f ef       	ldi	r22, 0xFF	; 255
    be86:	88 e0       	ldi	r24, 0x08	; 8
       
    
    
    

}
    be88:	df 91       	pop	r29
    be8a:	cf 91       	pop	r28
    be8c:	1f 91       	pop	r17
    be8e:	0f 91       	pop	r16
    be90:	ff 90       	pop	r15
    be92:	ef 90       	pop	r14
        bee.alive = false; 
        bee.ximpulse = 0;
        bee.yimpulse = 0;
        score = score + 100;
        updatepoints();
        TriggerFx(8,0xff,true);
    be94:	0c 94 1b 4a 	jmp	0x9436	; 0x9436 <TriggerFx>
       
    
    
    

}
    be98:	df 91       	pop	r29
    be9a:	cf 91       	pop	r28
    be9c:	1f 91       	pop	r17
    be9e:	0f 91       	pop	r16
    bea0:	ff 90       	pop	r15
    bea2:	ef 90       	pop	r14
    bea4:	08 95       	ret

0000bea6 <moveplayer>:
bool exitgame;
bool play;

void moveplayer()
{
unsigned int joy=ReadJoypad(0);
    bea6:	80 e0       	ldi	r24, 0x00	; 0
    bea8:	0e 94 c8 47 	call	0x8f90	; 0x8f90 <ReadJoypad>
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    beac:	20 91 6e 09 	lds	r18, 0x096E	; 0x80096e <introplaying>
    beb0:	22 23       	and	r18, r18
    beb2:	29 f0       	breq	.+10     	; 0xbebe <moveplayer+0x18>
    beb4:	83 ff       	sbrs	r24, 3
    beb6:	4d c0       	rjmp	.+154    	; 0xbf52 <moveplayer+0xac>
    beb8:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <introplaying>
    bebc:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT) { 
    bebe:	86 ff       	sbrs	r24, 6
    bec0:	0f c0       	rjmp	.+30     	; 0xbee0 <moveplayer+0x3a>
player.direction = 'l';
    bec2:	2c e6       	ldi	r18, 0x6C	; 108
    bec4:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <player+0x7>
player.action = 'w';
    bec8:	27 e7       	ldi	r18, 0x77	; 119
    beca:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <player+0x6>
player.facing = 1;
    bece:	21 e0       	ldi	r18, 0x01	; 1
    bed0:	30 e0       	ldi	r19, 0x00	; 0
    bed2:	30 93 62 09 	sts	0x0962, r19	; 0x800962 <player+0x5>
    bed6:	20 93 61 09 	sts	0x0961, r18	; 0x800961 <player+0x4>
player.ximpulse = -1; 
    beda:	2f ef       	ldi	r18, 0xFF	; 255
    bedc:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0xb>
};
if (joy&BTN_RIGHT) {
    bee0:	87 ff       	sbrs	r24, 7
    bee2:	0d c0       	rjmp	.+26     	; 0xbefe <moveplayer+0x58>
player.direction = 'r';
    bee4:	22 e7       	ldi	r18, 0x72	; 114
    bee6:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <player+0x7>
player.action = 'w';
    beea:	27 e7       	ldi	r18, 0x77	; 119
    beec:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <player+0x6>
player.facing = 0;
    bef0:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <player+0x5>
    bef4:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <player+0x4>
player.ximpulse = 1; 
    bef8:	21 e0       	ldi	r18, 0x01	; 1
    befa:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0xb>
};
if ( !(joy&BTN_A) ) {
    befe:	90 fd       	sbrc	r25, 0
    bf00:	0a c0       	rjmp	.+20     	; 0xbf16 <moveplayer+0x70>
player.yimpulse = 0;
    bf02:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0xc>
player.jumpreleased = true;
    bf06:	81 e0       	ldi	r24, 0x01	; 1
    bf08:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <player+0xe>
player.jumping = false;
    bf0c:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0xd>
player.jumpcounter = 0;
    bf10:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xf>
    bf14:	1e c0       	rjmp	.+60     	; 0xbf52 <moveplayer+0xac>
};   


if (joy&BTN_A && player.touchground && player.jumpreleased) {
    bf16:	80 91 67 09 	lds	r24, 0x0967	; 0x800967 <player+0xa>
    bf1a:	88 23       	and	r24, r24
    bf1c:	d1 f0       	breq	.+52     	; 0xbf52 <moveplayer+0xac>
    bf1e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xe>
    bf22:	88 23       	and	r24, r24
    bf24:	b1 f0       	breq	.+44     	; 0xbf52 <moveplayer+0xac>
player.action = 'j';
    bf26:	8a e6       	ldi	r24, 0x6A	; 106
    bf28:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x6>
player.yimpulse = 0;
    bf2c:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0xc>
player.jumping = true;
    bf30:	81 e0       	ldi	r24, 0x01	; 1
    bf32:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <player+0xd>
player.touchground = false;
    bf36:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0xa>
player.jumpreleased = false;
    bf3a:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xe>
player.jumpcounter++ ; 
    bf3e:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xf>
    bf42:	8f 5f       	subi	r24, 0xFF	; 255
    bf44:	80 93 6c 09 	sts	0x096C, r24	; 0x80096c <player+0xf>
TriggerFx(4,0xff,true);
    bf48:	41 e0       	ldi	r20, 0x01	; 1
    bf4a:	6f ef       	ldi	r22, 0xFF	; 255
    bf4c:	84 e0       	ldi	r24, 0x04	; 4
    bf4e:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
};
};

oldx = player.x;
    bf52:	20 91 5d 09 	lds	r18, 0x095D	; 0x80095d <player>
    bf56:	30 91 5e 09 	lds	r19, 0x095E	; 0x80095e <player+0x1>
    bf5a:	30 93 80 09 	sts	0x0980, r19	; 0x800980 <oldx+0x1>
    bf5e:	20 93 7f 09 	sts	0x097F, r18	; 0x80097f <oldx>
oldy = player.y;
    bf62:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    bf66:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    bf6a:	70 93 e8 09 	sts	0x09E8, r23	; 0x8009e8 <oldy+0x1>
    bf6e:	60 93 e7 09 	sts	0x09E7, r22	; 0x8009e7 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    bf72:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xf>
    bf76:	9f ef       	ldi	r25, 0xFF	; 255
    bf78:	98 0f       	add	r25, r24
    bf7a:	99 31       	cpi	r25, 0x19	; 25
    bf7c:	18 f4       	brcc	.+6      	; 0xbf84 <moveplayer+0xde>
    bf7e:	9c ef       	ldi	r25, 0xFC	; 252
    bf80:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0xc>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    bf84:	96 ee       	ldi	r25, 0xE6	; 230
    bf86:	98 0f       	add	r25, r24
    bf88:	9b 30       	cpi	r25, 0x0B	; 11
    bf8a:	18 f4       	brcc	.+6      	; 0xbf92 <moveplayer+0xec>
    bf8c:	9d ef       	ldi	r25, 0xFD	; 253
    bf8e:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0xc>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    bf92:	9b ed       	ldi	r25, 0xDB	; 219
    bf94:	98 0f       	add	r25, r24
    bf96:	94 30       	cpi	r25, 0x04	; 4
    bf98:	18 f4       	brcc	.+6      	; 0xbfa0 <moveplayer+0xfa>
    bf9a:	9e ef       	ldi	r25, 0xFE	; 254
    bf9c:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0xc>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    bfa0:	97 ed       	ldi	r25, 0xD7	; 215
    bfa2:	98 0f       	add	r25, r24
    bfa4:	96 30       	cpi	r25, 0x06	; 6
    bfa6:	20 f4       	brcc	.+8      	; 0xbfb0 <moveplayer+0x10a>
    bfa8:	9f ef       	ldi	r25, 0xFF	; 255
    bfaa:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0xc>
    bfae:	02 c0       	rjmp	.+4      	; 0xbfb4 <moveplayer+0x10e>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    bfb0:	88 23       	and	r24, r24
    bfb2:	19 f0       	breq	.+6      	; 0xbfba <moveplayer+0x114>
    bfb4:	8f 5f       	subi	r24, 0xFF	; 255
    bfb6:	80 93 6c 09 	sts	0x096C, r24	; 0x80096c <player+0xf>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    bfba:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xf>
    bfbe:	8f 32       	cpi	r24, 0x2F	; 47
    bfc0:	10 f0       	brcs	.+4      	; 0xbfc6 <moveplayer+0x120>
    bfc2:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xf>
player.x = player.x + player.ximpulse;
    bfc6:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0xb>
    bfca:	f9 01       	movw	r30, r18
    bfcc:	e8 0f       	add	r30, r24
    bfce:	f1 1d       	adc	r31, r1
    bfd0:	87 fd       	sbrc	r24, 7
    bfd2:	fa 95       	dec	r31
    bfd4:	f0 93 5e 09 	sts	0x095E, r31	; 0x80095e <player+0x1>
    bfd8:	e0 93 5d 09 	sts	0x095D, r30	; 0x80095d <player>
player.y = player.y + player.yimpulse + gravity ;
    bfdc:	80 91 69 09 	lds	r24, 0x0969	; 0x800969 <player+0xc>
    bfe0:	68 0f       	add	r22, r24
    bfe2:	71 1d       	adc	r23, r1
    bfe4:	87 fd       	sbrc	r24, 7
    bfe6:	7a 95       	dec	r23
    bfe8:	cb 01       	movw	r24, r22
    bfea:	02 96       	adiw	r24, 0x02	; 2
    bfec:	90 93 60 09 	sts	0x0960, r25	; 0x800960 <player+0x3>
    bff0:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    bff4:	2e 17       	cp	r18, r30
    bff6:	3f 07       	cpc	r19, r31
    bff8:	3c f4       	brge	.+14     	; 0xc008 <moveplayer+0x162>
    bffa:	90 91 6d 09 	lds	r25, 0x096D	; 0x80096d <player+0x10>
    bffe:	9f 5f       	subi	r25, 0xFF	; 255
    c000:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0x10>
    c004:	82 e7       	ldi	r24, 0x72	; 114
    c006:	09 c0       	rjmp	.+18     	; 0xc01a <moveplayer+0x174>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    c008:	e2 17       	cp	r30, r18
    c00a:	f3 07       	cpc	r31, r19
    c00c:	4c f4       	brge	.+18     	; 0xc020 <moveplayer+0x17a>
    c00e:	90 91 6d 09 	lds	r25, 0x096D	; 0x80096d <player+0x10>
    c012:	9f 5f       	subi	r25, 0xFF	; 255
    c014:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0x10>
    c018:	8c e6       	ldi	r24, 0x6C	; 108
    c01a:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <player+0x7>
    c01e:	05 c0       	rjmp	.+10     	; 0xc02a <moveplayer+0x184>
if (player.x == oldx  ) { player.aniframe = 0;};
    c020:	2e 17       	cp	r18, r30
    c022:	3f 07       	cpc	r19, r31
    c024:	11 f4       	brne	.+4      	; 0xc02a <moveplayer+0x184>
    c026:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0x10>
if (player.aniframe > 0 ) player.aniframe++;
    c02a:	90 91 6d 09 	lds	r25, 0x096D	; 0x80096d <player+0x10>
    c02e:	99 23       	and	r25, r25
    c030:	19 f0       	breq	.+6      	; 0xc038 <moveplayer+0x192>
    c032:	9f 5f       	subi	r25, 0xFF	; 255
    c034:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0x10>
if (player.aniframe>24) player.aniframe = 1; 
    c038:	80 91 6d 09 	lds	r24, 0x096D	; 0x80096d <player+0x10>
    c03c:	89 31       	cpi	r24, 0x19	; 25
    c03e:	18 f0       	brcs	.+6      	; 0xc046 <moveplayer+0x1a0>
    c040:	81 e0       	ldi	r24, 0x01	; 1
    c042:	80 93 6d 09 	sts	0x096D, r24	; 0x80096d <player+0x10>
checkcollide( player.x, player.y - 4 ,1);
    c046:	62 50       	subi	r22, 0x02	; 2
    c048:	71 09       	sbc	r23, r1
    c04a:	41 e0       	ldi	r20, 0x01	; 1
    c04c:	50 e0       	ldi	r21, 0x00	; 0
    c04e:	cf 01       	movw	r24, r30
    c050:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3);
    c054:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c058:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c05c:	64 50       	subi	r22, 0x04	; 4
    c05e:	71 09       	sbc	r23, r1
    c060:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c064:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c068:	43 e0       	ldi	r20, 0x03	; 3
    c06a:	50 e0       	ldi	r21, 0x00	; 0
    c06c:	03 97       	sbiw	r24, 0x03	; 3
    c06e:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3);
    c072:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c076:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c07a:	64 50       	subi	r22, 0x04	; 4
    c07c:	71 09       	sbc	r23, r1
    c07e:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c082:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c086:	43 e0       	ldi	r20, 0x03	; 3
    c088:	50 e0       	ldi	r21, 0x00	; 0
    c08a:	04 96       	adiw	r24, 0x04	; 4
    c08c:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
    c090:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c094:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c098:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c09c:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c0a0:	68 17       	cp	r22, r24
    c0a2:	79 07       	cpc	r23, r25
    c0a4:	54 f4       	brge	.+20     	; 0xc0ba <moveplayer+0x214>
    c0a6:	66 51       	subi	r22, 0x16	; 22
    c0a8:	71 09       	sbc	r23, r1
    c0aa:	42 e0       	ldi	r20, 0x02	; 2
    c0ac:	50 e0       	ldi	r21, 0x00	; 0
    c0ae:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c0b2:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c0b6:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    c0ba:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c0be:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c0c2:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c0c6:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c0ca:	86 17       	cp	r24, r22
    c0cc:	97 07       	cpc	r25, r23
    c0ce:	8c f5       	brge	.+98     	; 0xc132 <moveplayer+0x28c>
    c0d0:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0xa>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    c0d4:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c0d8:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c0dc:	40 e0       	ldi	r20, 0x00	; 0
    c0de:	50 e0       	ldi	r21, 0x00	; 0
    c0e0:	03 97       	sbiw	r24, 0x03	; 3
    c0e2:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c0e6:	80 ff       	sbrs	r24, 0
    c0e8:	15 c0       	rjmp	.+42     	; 0xc114 <moveplayer+0x26e>
    c0ea:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <player+0x2>
    c0ee:	90 91 60 09 	lds	r25, 0x0960	; 0x800960 <player+0x3>
    c0f2:	97 fd       	sbrc	r25, 7
    c0f4:	0f 96       	adiw	r24, 0x0f	; 15
    c0f6:	80 7f       	andi	r24, 0xF0	; 240
    c0f8:	01 97       	sbiw	r24, 0x01	; 1
    c0fa:	90 93 60 09 	sts	0x0960, r25	; 0x800960 <player+0x3>
    c0fe:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <player+0x2>
    c102:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0xd>
    c106:	81 e0       	ldi	r24, 0x01	; 1
    c108:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0xa>
    c10c:	87 e7       	ldi	r24, 0x77	; 119
    c10e:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x6>
    c112:	0f c0       	rjmp	.+30     	; 0xc132 <moveplayer+0x28c>
    c114:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c118:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c11c:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c120:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c124:	40 e0       	ldi	r20, 0x00	; 0
    c126:	50 e0       	ldi	r21, 0x00	; 0
    c128:	04 96       	adiw	r24, 0x04	; 4
    c12a:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c12e:	80 fd       	sbrc	r24, 0
    c130:	dc cf       	rjmp	.-72     	; 0xc0ea <moveplayer+0x244>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c132:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c136:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c13a:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c13e:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c142:	68 17       	cp	r22, r24
    c144:	79 07       	cpc	r23, r25
    c146:	74 f5       	brge	.+92     	; 0xc1a4 <moveplayer+0x2fe>
    c148:	65 51       	subi	r22, 0x15	; 21
    c14a:	71 09       	sbc	r23, r1
    c14c:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c150:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c154:	40 e0       	ldi	r20, 0x00	; 0
    c156:	50 e0       	ldi	r21, 0x00	; 0
    c158:	03 97       	sbiw	r24, 0x03	; 3
    c15a:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c15e:	80 ff       	sbrs	r24, 0
    c160:	10 c0       	rjmp	.+32     	; 0xc182 <moveplayer+0x2dc>
    c162:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c166:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c16a:	90 93 60 09 	sts	0x0960, r25	; 0x800960 <player+0x3>
    c16e:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <player+0x2>
    c172:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xf>
                                                                                                                                  TriggerFx(5,0xff,true);
    c176:	41 e0       	ldi	r20, 0x01	; 1
    c178:	6f ef       	ldi	r22, 0xFF	; 255
    c17a:	85 e0       	ldi	r24, 0x05	; 5
    c17c:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    c180:	11 c0       	rjmp	.+34     	; 0xc1a4 <moveplayer+0x2fe>
checkcollide( player.x +4, player.y - 4 ,3);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c182:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c186:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c18a:	65 51       	subi	r22, 0x15	; 21
    c18c:	71 09       	sbc	r23, r1
    c18e:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c192:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c196:	40 e0       	ldi	r20, 0x00	; 0
    c198:	50 e0       	ldi	r21, 0x00	; 0
    c19a:	04 96       	adiw	r24, 0x04	; 4
    c19c:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c1a0:	80 fd       	sbrc	r24, 0
    c1a2:	df cf       	rjmp	.-66     	; 0xc162 <moveplayer+0x2bc>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
    c1a4:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c1a8:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c1ac:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    c1b0:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    c1b4:	28 17       	cp	r18, r24
    c1b6:	39 07       	cpc	r19, r25
    c1b8:	3c f5       	brge	.+78     	; 0xc208 <moveplayer+0x362>
    c1ba:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c1be:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c1c2:	63 50       	subi	r22, 0x03	; 3
    c1c4:	71 09       	sbc	r23, r1
    c1c6:	40 e0       	ldi	r20, 0x00	; 0
    c1c8:	50 e0       	ldi	r21, 0x00	; 0
    c1ca:	05 96       	adiw	r24, 0x05	; 5
    c1cc:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c1d0:	80 ff       	sbrs	r24, 0
    c1d2:	09 c0       	rjmp	.+18     	; 0xc1e6 <moveplayer+0x340>
    c1d4:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <oldx>
    c1d8:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <oldx+0x1>
    c1dc:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    c1e0:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
    c1e4:	11 c0       	rjmp	.+34     	; 0xc208 <moveplayer+0x362>
    c1e6:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c1ea:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c1ee:	64 51       	subi	r22, 0x14	; 20
    c1f0:	71 09       	sbc	r23, r1
    c1f2:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c1f6:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c1fa:	40 e0       	ldi	r20, 0x00	; 0
    c1fc:	50 e0       	ldi	r21, 0x00	; 0
    c1fe:	05 96       	adiw	r24, 0x05	; 5
    c200:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c204:	80 fd       	sbrc	r24, 0
    c206:	e6 cf       	rjmp	.-52     	; 0xc1d4 <moveplayer+0x32e>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
    c208:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c20c:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c210:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    c214:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    c218:	82 17       	cp	r24, r18
    c21a:	93 07       	cpc	r25, r19
    c21c:	3c f5       	brge	.+78     	; 0xc26c <moveplayer+0x3c6>
    c21e:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c222:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c226:	63 50       	subi	r22, 0x03	; 3
    c228:	71 09       	sbc	r23, r1
    c22a:	40 e0       	ldi	r20, 0x00	; 0
    c22c:	50 e0       	ldi	r21, 0x00	; 0
    c22e:	04 97       	sbiw	r24, 0x04	; 4
    c230:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c234:	80 ff       	sbrs	r24, 0
    c236:	09 c0       	rjmp	.+18     	; 0xc24a <moveplayer+0x3a4>
    c238:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <oldx>
    c23c:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <oldx+0x1>
    c240:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    c244:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
    c248:	11 c0       	rjmp	.+34     	; 0xc26c <moveplayer+0x3c6>
    c24a:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c24e:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c252:	64 51       	subi	r22, 0x14	; 20
    c254:	71 09       	sbc	r23, r1
    c256:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c25a:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c25e:	40 e0       	ldi	r20, 0x00	; 0
    c260:	50 e0       	ldi	r21, 0x00	; 0
    c262:	04 97       	sbiw	r24, 0x04	; 4
    c264:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c268:	80 fd       	sbrc	r24, 0
    c26a:	e6 cf       	rjmp	.-52     	; 0xc238 <moveplayer+0x392>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
    c26c:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c270:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c274:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c278:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c27c:	86 17       	cp	r24, r22
    c27e:	97 07       	cpc	r25, r23
    c280:	4c f4       	brge	.+18     	; 0xc294 <moveplayer+0x3ee>
    c282:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c286:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c28a:	41 e0       	ldi	r20, 0x01	; 1
    c28c:	50 e0       	ldi	r21, 0x00	; 0
    c28e:	04 96       	adiw	r24, 0x04	; 4
    c290:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
    c294:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c298:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c29c:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c2a0:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c2a4:	86 17       	cp	r24, r22
    c2a6:	97 07       	cpc	r25, r23
    c2a8:	4c f4       	brge	.+18     	; 0xc2bc <moveplayer+0x416>
    c2aa:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c2ae:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c2b2:	41 e0       	ldi	r20, 0x01	; 1
    c2b4:	50 e0       	ldi	r21, 0x00	; 0
    c2b6:	04 97       	sbiw	r24, 0x04	; 4
    c2b8:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
    c2bc:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c2c0:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c2c4:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c2c8:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c2cc:	86 17       	cp	r24, r22
    c2ce:	97 07       	cpc	r25, r23
    c2d0:	44 f4       	brge	.+16     	; 0xc2e2 <moveplayer+0x43c>
    c2d2:	41 e0       	ldi	r20, 0x01	; 1
    c2d4:	50 e0       	ldi	r21, 0x00	; 0
    c2d6:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c2da:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c2de:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player.x +4, player.y -3,0 );
    c2e2:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c2e6:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c2ea:	63 50       	subi	r22, 0x03	; 3
    c2ec:	71 09       	sbc	r23, r1
    c2ee:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c2f2:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c2f6:	40 e0       	ldi	r20, 0x00	; 0
    c2f8:	50 e0       	ldi	r21, 0x00	; 0
    c2fa:	04 96       	adiw	r24, 0x04	; 4
    c2fc:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player.x +4, player.y -19,0 );
    c300:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c304:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c308:	63 51       	subi	r22, 0x13	; 19
    c30a:	71 09       	sbc	r23, r1
    c30c:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c310:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c314:	40 e0       	ldi	r20, 0x00	; 0
    c316:	50 e0       	ldi	r21, 0x00	; 0
    c318:	04 96       	adiw	r24, 0x04	; 4
    c31a:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player.x -3, player.y -3 ,0);
    c31e:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c322:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c326:	63 50       	subi	r22, 0x03	; 3
    c328:	71 09       	sbc	r23, r1
    c32a:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c32e:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c332:	40 e0       	ldi	r20, 0x00	; 0
    c334:	50 e0       	ldi	r21, 0x00	; 0
    c336:	03 97       	sbiw	r24, 0x03	; 3
    c338:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player.x -3, player.y -19 ,0);  
    c33c:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c340:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c344:	63 51       	subi	r22, 0x13	; 19
    c346:	71 09       	sbc	r23, r1
    c348:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c34c:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c350:	40 e0       	ldi	r20, 0x00	; 0
    c352:	50 e0       	ldi	r21, 0x00	; 0
    c354:	03 97       	sbiw	r24, 0x03	; 3
    c356:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player.x , player.y -22 ,0);
    c35a:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c35e:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c362:	66 51       	subi	r22, 0x16	; 22
    c364:	71 09       	sbc	r23, r1
    c366:	40 e0       	ldi	r20, 0x00	; 0
    c368:	50 e0       	ldi	r21, 0x00	; 0
    c36a:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c36e:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c372:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
    c376:	60 91 5f 09 	lds	r22, 0x095F	; 0x80095f <player+0x2>
    c37a:	70 91 60 09 	lds	r23, 0x0960	; 0x800960 <player+0x3>
    c37e:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c382:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c386:	86 17       	cp	r24, r22
    c388:	97 07       	cpc	r25, r23
    c38a:	4c f4       	brge	.+18     	; 0xc39e <moveplayer+0x4f8>
    c38c:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c390:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c394:	40 e0       	ldi	r20, 0x00	; 0
    c396:	50 e0       	ldi	r21, 0x00	; 0
    c398:	04 96       	adiw	r24, 0x04	; 4
    c39a:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
player.ximpulse = 0;    
    c39e:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0xb>
player.yimpulse = 0;
    c3a2:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0xc>
if ( player.x < 8 ) player.x = 8;
    c3a6:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c3aa:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c3ae:	08 97       	sbiw	r24, 0x08	; 8
    c3b0:	34 f4       	brge	.+12     	; 0xc3be <moveplayer+0x518>
    c3b2:	88 e0       	ldi	r24, 0x08	; 8
    c3b4:	90 e0       	ldi	r25, 0x00	; 0
    c3b6:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    c3ba:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
if ( player.x > 232 ) player.x = 232;    
    c3be:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    c3c2:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    c3c6:	89 3e       	cpi	r24, 0xE9	; 233
    c3c8:	91 05       	cpc	r25, r1
    c3ca:	3c f0       	brlt	.+14     	; 0xc3da <moveplayer+0x534>
    c3cc:	88 ee       	ldi	r24, 0xE8	; 232
    c3ce:	90 e0       	ldi	r25, 0x00	; 0
    c3d0:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    c3d4:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
    c3d8:	08 95       	ret
    c3da:	08 95       	ret

0000c3dc <moveplayer2>:
  
}

void moveplayer2()
{
unsigned int joy=ReadJoypad(0);
    c3dc:	80 e0       	ldi	r24, 0x00	; 0
    c3de:	0e 94 c8 47 	call	0x8f90	; 0x8f90 <ReadJoypad>
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    c3e2:	20 91 6e 09 	lds	r18, 0x096E	; 0x80096e <introplaying>
    c3e6:	22 23       	and	r18, r18
    c3e8:	29 f0       	breq	.+10     	; 0xc3f4 <moveplayer2+0x18>
    c3ea:	83 ff       	sbrs	r24, 3
    c3ec:	4d c0       	rjmp	.+154    	; 0xc488 <moveplayer2+0xac>
    c3ee:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <introplaying>
    c3f2:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT) { 
    c3f4:	86 ff       	sbrs	r24, 6
    c3f6:	0f c0       	rjmp	.+30     	; 0xc416 <moveplayer2+0x3a>
player2.direction = 'l';
    c3f8:	2c e6       	ldi	r18, 0x6C	; 108
    c3fa:	20 93 90 09 	sts	0x0990, r18	; 0x800990 <player2+0x7>
player2.action = 'w';
    c3fe:	27 e7       	ldi	r18, 0x77	; 119
    c400:	20 93 8f 09 	sts	0x098F, r18	; 0x80098f <player2+0x6>
player2.facing = 1;
    c404:	21 e0       	ldi	r18, 0x01	; 1
    c406:	30 e0       	ldi	r19, 0x00	; 0
    c408:	30 93 8e 09 	sts	0x098E, r19	; 0x80098e <player2+0x5>
    c40c:	20 93 8d 09 	sts	0x098D, r18	; 0x80098d <player2+0x4>
player2.ximpulse = -1; 
    c410:	2f ef       	ldi	r18, 0xFF	; 255
    c412:	20 93 94 09 	sts	0x0994, r18	; 0x800994 <player2+0xb>
};
if (joy&BTN_RIGHT) {
    c416:	87 ff       	sbrs	r24, 7
    c418:	0d c0       	rjmp	.+26     	; 0xc434 <moveplayer2+0x58>
player2.direction = 'r';
    c41a:	22 e7       	ldi	r18, 0x72	; 114
    c41c:	20 93 90 09 	sts	0x0990, r18	; 0x800990 <player2+0x7>
player2.action = 'w';
    c420:	27 e7       	ldi	r18, 0x77	; 119
    c422:	20 93 8f 09 	sts	0x098F, r18	; 0x80098f <player2+0x6>
player2.facing = 0;
    c426:	10 92 8e 09 	sts	0x098E, r1	; 0x80098e <player2+0x5>
    c42a:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <player2+0x4>
player2.ximpulse = 1; 
    c42e:	21 e0       	ldi	r18, 0x01	; 1
    c430:	20 93 94 09 	sts	0x0994, r18	; 0x800994 <player2+0xb>
};
if ( !(joy&BTN_A) ) {
    c434:	90 fd       	sbrc	r25, 0
    c436:	0a c0       	rjmp	.+20     	; 0xc44c <moveplayer2+0x70>
player2.yimpulse = 0;
    c438:	10 92 95 09 	sts	0x0995, r1	; 0x800995 <player2+0xc>
player2.jumpreleased = true;
    c43c:	81 e0       	ldi	r24, 0x01	; 1
    c43e:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <player2+0xe>
player2.jumping = false;
    c442:	10 92 96 09 	sts	0x0996, r1	; 0x800996 <player2+0xd>
player2.jumpcounter = 0;
    c446:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <player2+0xf>
    c44a:	1e c0       	rjmp	.+60     	; 0xc488 <moveplayer2+0xac>
};   


if (joy&BTN_A && player2.touchground && player2.jumpreleased) {
    c44c:	80 91 93 09 	lds	r24, 0x0993	; 0x800993 <player2+0xa>
    c450:	88 23       	and	r24, r24
    c452:	d1 f0       	breq	.+52     	; 0xc488 <moveplayer2+0xac>
    c454:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <player2+0xe>
    c458:	88 23       	and	r24, r24
    c45a:	b1 f0       	breq	.+44     	; 0xc488 <moveplayer2+0xac>
player2.action = 'j';
    c45c:	8a e6       	ldi	r24, 0x6A	; 106
    c45e:	80 93 8f 09 	sts	0x098F, r24	; 0x80098f <player2+0x6>
player2.yimpulse = 0;
    c462:	10 92 95 09 	sts	0x0995, r1	; 0x800995 <player2+0xc>
player2.jumping = true;
    c466:	81 e0       	ldi	r24, 0x01	; 1
    c468:	80 93 96 09 	sts	0x0996, r24	; 0x800996 <player2+0xd>
player2.touchground = false;
    c46c:	10 92 93 09 	sts	0x0993, r1	; 0x800993 <player2+0xa>
player2.jumpreleased = false;
    c470:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <player2+0xe>
player2.jumpcounter++ ; 
    c474:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <player2+0xf>
    c478:	8f 5f       	subi	r24, 0xFF	; 255
    c47a:	80 93 98 09 	sts	0x0998, r24	; 0x800998 <player2+0xf>
TriggerFx(4,0xff,true);
    c47e:	41 e0       	ldi	r20, 0x01	; 1
    c480:	6f ef       	ldi	r22, 0xFF	; 255
    c482:	84 e0       	ldi	r24, 0x04	; 4
    c484:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
};
};

oldx = player2.x;
    c488:	20 91 89 09 	lds	r18, 0x0989	; 0x800989 <player2>
    c48c:	30 91 8a 09 	lds	r19, 0x098A	; 0x80098a <player2+0x1>
    c490:	30 93 80 09 	sts	0x0980, r19	; 0x800980 <oldx+0x1>
    c494:	20 93 7f 09 	sts	0x097F, r18	; 0x80097f <oldx>
oldy = player2.y;
    c498:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c49c:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c4a0:	70 93 e8 09 	sts	0x09E8, r23	; 0x8009e8 <oldy+0x1>
    c4a4:	60 93 e7 09 	sts	0x09E7, r22	; 0x8009e7 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    c4a8:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <player2+0xf>
    c4ac:	9f ef       	ldi	r25, 0xFF	; 255
    c4ae:	98 0f       	add	r25, r24
    c4b0:	99 31       	cpi	r25, 0x19	; 25
    c4b2:	18 f4       	brcc	.+6      	; 0xc4ba <moveplayer2+0xde>
    c4b4:	9c ef       	ldi	r25, 0xFC	; 252
    c4b6:	90 93 95 09 	sts	0x0995, r25	; 0x800995 <player2+0xc>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    c4ba:	96 ee       	ldi	r25, 0xE6	; 230
    c4bc:	98 0f       	add	r25, r24
    c4be:	9b 30       	cpi	r25, 0x0B	; 11
    c4c0:	18 f4       	brcc	.+6      	; 0xc4c8 <moveplayer2+0xec>
    c4c2:	9d ef       	ldi	r25, 0xFD	; 253
    c4c4:	90 93 95 09 	sts	0x0995, r25	; 0x800995 <player2+0xc>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    c4c8:	9b ed       	ldi	r25, 0xDB	; 219
    c4ca:	98 0f       	add	r25, r24
    c4cc:	94 30       	cpi	r25, 0x04	; 4
    c4ce:	18 f4       	brcc	.+6      	; 0xc4d6 <moveplayer2+0xfa>
    c4d0:	9e ef       	ldi	r25, 0xFE	; 254
    c4d2:	90 93 95 09 	sts	0x0995, r25	; 0x800995 <player2+0xc>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    c4d6:	97 ed       	ldi	r25, 0xD7	; 215
    c4d8:	98 0f       	add	r25, r24
    c4da:	96 30       	cpi	r25, 0x06	; 6
    c4dc:	20 f4       	brcc	.+8      	; 0xc4e6 <moveplayer2+0x10a>
    c4de:	9f ef       	ldi	r25, 0xFF	; 255
    c4e0:	90 93 95 09 	sts	0x0995, r25	; 0x800995 <player2+0xc>
    c4e4:	02 c0       	rjmp	.+4      	; 0xc4ea <moveplayer2+0x10e>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    c4e6:	88 23       	and	r24, r24
    c4e8:	19 f0       	breq	.+6      	; 0xc4f0 <moveplayer2+0x114>
    c4ea:	8f 5f       	subi	r24, 0xFF	; 255
    c4ec:	80 93 98 09 	sts	0x0998, r24	; 0x800998 <player2+0xf>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    c4f0:	80 91 98 09 	lds	r24, 0x0998	; 0x800998 <player2+0xf>
    c4f4:	8f 32       	cpi	r24, 0x2F	; 47
    c4f6:	10 f0       	brcs	.+4      	; 0xc4fc <moveplayer2+0x120>
    c4f8:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <player2+0xf>
player2.x = player2.x + player2.ximpulse;
    c4fc:	80 91 94 09 	lds	r24, 0x0994	; 0x800994 <player2+0xb>
    c500:	f9 01       	movw	r30, r18
    c502:	e8 0f       	add	r30, r24
    c504:	f1 1d       	adc	r31, r1
    c506:	87 fd       	sbrc	r24, 7
    c508:	fa 95       	dec	r31
    c50a:	f0 93 8a 09 	sts	0x098A, r31	; 0x80098a <player2+0x1>
    c50e:	e0 93 89 09 	sts	0x0989, r30	; 0x800989 <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    c512:	80 91 95 09 	lds	r24, 0x0995	; 0x800995 <player2+0xc>
    c516:	68 0f       	add	r22, r24
    c518:	71 1d       	adc	r23, r1
    c51a:	87 fd       	sbrc	r24, 7
    c51c:	7a 95       	dec	r23
    c51e:	cb 01       	movw	r24, r22
    c520:	02 96       	adiw	r24, 0x02	; 2
    c522:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <player2+0x3>
    c526:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    c52a:	2e 17       	cp	r18, r30
    c52c:	3f 07       	cpc	r19, r31
    c52e:	3c f4       	brge	.+14     	; 0xc53e <moveplayer2+0x162>
    c530:	90 91 99 09 	lds	r25, 0x0999	; 0x800999 <player2+0x10>
    c534:	9f 5f       	subi	r25, 0xFF	; 255
    c536:	90 93 99 09 	sts	0x0999, r25	; 0x800999 <player2+0x10>
    c53a:	82 e7       	ldi	r24, 0x72	; 114
    c53c:	09 c0       	rjmp	.+18     	; 0xc550 <moveplayer2+0x174>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    c53e:	e2 17       	cp	r30, r18
    c540:	f3 07       	cpc	r31, r19
    c542:	4c f4       	brge	.+18     	; 0xc556 <moveplayer2+0x17a>
    c544:	90 91 99 09 	lds	r25, 0x0999	; 0x800999 <player2+0x10>
    c548:	9f 5f       	subi	r25, 0xFF	; 255
    c54a:	90 93 99 09 	sts	0x0999, r25	; 0x800999 <player2+0x10>
    c54e:	8c e6       	ldi	r24, 0x6C	; 108
    c550:	80 93 90 09 	sts	0x0990, r24	; 0x800990 <player2+0x7>
    c554:	05 c0       	rjmp	.+10     	; 0xc560 <moveplayer2+0x184>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    c556:	2e 17       	cp	r18, r30
    c558:	3f 07       	cpc	r19, r31
    c55a:	11 f4       	brne	.+4      	; 0xc560 <moveplayer2+0x184>
    c55c:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <player2+0x10>
if (player2.aniframe > 0 ) player2.aniframe++;
    c560:	90 91 99 09 	lds	r25, 0x0999	; 0x800999 <player2+0x10>
    c564:	99 23       	and	r25, r25
    c566:	19 f0       	breq	.+6      	; 0xc56e <moveplayer2+0x192>
    c568:	9f 5f       	subi	r25, 0xFF	; 255
    c56a:	90 93 99 09 	sts	0x0999, r25	; 0x800999 <player2+0x10>
if (player2.aniframe>24) player2.aniframe = 1; 
    c56e:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <player2+0x10>
    c572:	89 31       	cpi	r24, 0x19	; 25
    c574:	18 f0       	brcs	.+6      	; 0xc57c <moveplayer2+0x1a0>
    c576:	81 e0       	ldi	r24, 0x01	; 1
    c578:	80 93 99 09 	sts	0x0999, r24	; 0x800999 <player2+0x10>
checkcollide( player2.x, player2.y - 4 ,1);
    c57c:	62 50       	subi	r22, 0x02	; 2
    c57e:	71 09       	sbc	r23, r1
    c580:	41 e0       	ldi	r20, 0x01	; 1
    c582:	50 e0       	ldi	r21, 0x00	; 0
    c584:	cf 01       	movw	r24, r30
    c586:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3);
    c58a:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c58e:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c592:	64 50       	subi	r22, 0x04	; 4
    c594:	71 09       	sbc	r23, r1
    c596:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c59a:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c59e:	43 e0       	ldi	r20, 0x03	; 3
    c5a0:	50 e0       	ldi	r21, 0x00	; 0
    c5a2:	03 97       	sbiw	r24, 0x03	; 3
    c5a4:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3);
    c5a8:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c5ac:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c5b0:	64 50       	subi	r22, 0x04	; 4
    c5b2:	71 09       	sbc	r23, r1
    c5b4:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c5b8:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c5bc:	43 e0       	ldi	r20, 0x03	; 3
    c5be:	50 e0       	ldi	r21, 0x00	; 0
    c5c0:	04 96       	adiw	r24, 0x04	; 4
    c5c2:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
    c5c6:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c5ca:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c5ce:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c5d2:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c5d6:	68 17       	cp	r22, r24
    c5d8:	79 07       	cpc	r23, r25
    c5da:	54 f4       	brge	.+20     	; 0xc5f0 <moveplayer2+0x214>
    c5dc:	66 51       	subi	r22, 0x16	; 22
    c5de:	71 09       	sbc	r23, r1
    c5e0:	42 e0       	ldi	r20, 0x02	; 2
    c5e2:	50 e0       	ldi	r21, 0x00	; 0
    c5e4:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c5e8:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c5ec:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    c5f0:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c5f4:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c5f8:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c5fc:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c600:	86 17       	cp	r24, r22
    c602:	97 07       	cpc	r25, r23
    c604:	8c f5       	brge	.+98     	; 0xc668 <moveplayer2+0x28c>
    c606:	10 92 93 09 	sts	0x0993, r1	; 0x800993 <player2+0xa>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    c60a:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c60e:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c612:	40 e0       	ldi	r20, 0x00	; 0
    c614:	50 e0       	ldi	r21, 0x00	; 0
    c616:	03 97       	sbiw	r24, 0x03	; 3
    c618:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c61c:	80 ff       	sbrs	r24, 0
    c61e:	15 c0       	rjmp	.+42     	; 0xc64a <moveplayer2+0x26e>
    c620:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <player2+0x2>
    c624:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <player2+0x3>
    c628:	97 fd       	sbrc	r25, 7
    c62a:	0f 96       	adiw	r24, 0x0f	; 15
    c62c:	80 7f       	andi	r24, 0xF0	; 240
    c62e:	01 97       	sbiw	r24, 0x01	; 1
    c630:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <player2+0x3>
    c634:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <player2+0x2>
    c638:	10 92 96 09 	sts	0x0996, r1	; 0x800996 <player2+0xd>
    c63c:	81 e0       	ldi	r24, 0x01	; 1
    c63e:	80 93 93 09 	sts	0x0993, r24	; 0x800993 <player2+0xa>
    c642:	87 e7       	ldi	r24, 0x77	; 119
    c644:	80 93 8f 09 	sts	0x098F, r24	; 0x80098f <player2+0x6>
    c648:	0f c0       	rjmp	.+30     	; 0xc668 <moveplayer2+0x28c>
    c64a:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c64e:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c652:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c656:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c65a:	40 e0       	ldi	r20, 0x00	; 0
    c65c:	50 e0       	ldi	r21, 0x00	; 0
    c65e:	04 96       	adiw	r24, 0x04	; 4
    c660:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c664:	80 fd       	sbrc	r24, 0
    c666:	dc cf       	rjmp	.-72     	; 0xc620 <moveplayer2+0x244>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    c668:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c66c:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c670:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c674:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c678:	68 17       	cp	r22, r24
    c67a:	79 07       	cpc	r23, r25
    c67c:	74 f5       	brge	.+92     	; 0xc6da <moveplayer2+0x2fe>
    c67e:	65 51       	subi	r22, 0x15	; 21
    c680:	71 09       	sbc	r23, r1
    c682:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c686:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c68a:	40 e0       	ldi	r20, 0x00	; 0
    c68c:	50 e0       	ldi	r21, 0x00	; 0
    c68e:	03 97       	sbiw	r24, 0x03	; 3
    c690:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c694:	80 ff       	sbrs	r24, 0
    c696:	10 c0       	rjmp	.+32     	; 0xc6b8 <moveplayer2+0x2dc>
    c698:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c69c:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c6a0:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <player2+0x3>
    c6a4:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <player2+0x2>
    c6a8:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <player2+0xf>
                                                                                                                                  TriggerFx(5,0xff,true);
    c6ac:	41 e0       	ldi	r20, 0x01	; 1
    c6ae:	6f ef       	ldi	r22, 0xFF	; 255
    c6b0:	85 e0       	ldi	r24, 0x05	; 5
    c6b2:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    c6b6:	11 c0       	rjmp	.+34     	; 0xc6da <moveplayer2+0x2fe>
checkcollide( player2.x +4, player2.y - 4 ,3);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    c6b8:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c6bc:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c6c0:	65 51       	subi	r22, 0x15	; 21
    c6c2:	71 09       	sbc	r23, r1
    c6c4:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c6c8:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c6cc:	40 e0       	ldi	r20, 0x00	; 0
    c6ce:	50 e0       	ldi	r21, 0x00	; 0
    c6d0:	04 96       	adiw	r24, 0x04	; 4
    c6d2:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c6d6:	80 fd       	sbrc	r24, 0
    c6d8:	df cf       	rjmp	.-66     	; 0xc698 <moveplayer2+0x2bc>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0 )&1)  player2.x = oldx;  
    c6da:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c6de:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c6e2:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    c6e6:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    c6ea:	28 17       	cp	r18, r24
    c6ec:	39 07       	cpc	r19, r25
    c6ee:	3c f5       	brge	.+78     	; 0xc73e <moveplayer2+0x362>
    c6f0:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c6f4:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c6f8:	63 50       	subi	r22, 0x03	; 3
    c6fa:	71 09       	sbc	r23, r1
    c6fc:	40 e0       	ldi	r20, 0x00	; 0
    c6fe:	50 e0       	ldi	r21, 0x00	; 0
    c700:	05 96       	adiw	r24, 0x05	; 5
    c702:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c706:	80 ff       	sbrs	r24, 0
    c708:	09 c0       	rjmp	.+18     	; 0xc71c <moveplayer2+0x340>
    c70a:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <oldx>
    c70e:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <oldx+0x1>
    c712:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <player2+0x1>
    c716:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <player2>
    c71a:	11 c0       	rjmp	.+34     	; 0xc73e <moveplayer2+0x362>
    c71c:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c720:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c724:	64 51       	subi	r22, 0x14	; 20
    c726:	71 09       	sbc	r23, r1
    c728:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c72c:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c730:	40 e0       	ldi	r20, 0x00	; 0
    c732:	50 e0       	ldi	r21, 0x00	; 0
    c734:	05 96       	adiw	r24, 0x05	; 5
    c736:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c73a:	80 fd       	sbrc	r24, 0
    c73c:	e6 cf       	rjmp	.-52     	; 0xc70a <moveplayer2+0x32e>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0 )&1)  player2.x = oldx; 
    c73e:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c742:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c746:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <oldx>
    c74a:	30 91 80 09 	lds	r19, 0x0980	; 0x800980 <oldx+0x1>
    c74e:	82 17       	cp	r24, r18
    c750:	93 07       	cpc	r25, r19
    c752:	3c f5       	brge	.+78     	; 0xc7a2 <moveplayer2+0x3c6>
    c754:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c758:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c75c:	63 50       	subi	r22, 0x03	; 3
    c75e:	71 09       	sbc	r23, r1
    c760:	40 e0       	ldi	r20, 0x00	; 0
    c762:	50 e0       	ldi	r21, 0x00	; 0
    c764:	04 97       	sbiw	r24, 0x04	; 4
    c766:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c76a:	80 ff       	sbrs	r24, 0
    c76c:	09 c0       	rjmp	.+18     	; 0xc780 <moveplayer2+0x3a4>
    c76e:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <oldx>
    c772:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <oldx+0x1>
    c776:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <player2+0x1>
    c77a:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <player2>
    c77e:	11 c0       	rjmp	.+34     	; 0xc7a2 <moveplayer2+0x3c6>
    c780:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c784:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c788:	64 51       	subi	r22, 0x14	; 20
    c78a:	71 09       	sbc	r23, r1
    c78c:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c790:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c794:	40 e0       	ldi	r20, 0x00	; 0
    c796:	50 e0       	ldi	r21, 0x00	; 0
    c798:	04 97       	sbiw	r24, 0x04	; 4
    c79a:	0e 94 7e 58 	call	0xb0fc	; 0xb0fc <checkcollide>
    c79e:	80 fd       	sbrc	r24, 0
    c7a0:	e6 cf       	rjmp	.-52     	; 0xc76e <moveplayer2+0x392>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,1 );
    c7a2:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c7a6:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c7aa:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c7ae:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c7b2:	86 17       	cp	r24, r22
    c7b4:	97 07       	cpc	r25, r23
    c7b6:	4c f4       	brge	.+18     	; 0xc7ca <moveplayer2+0x3ee>
    c7b8:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c7bc:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c7c0:	41 e0       	ldi	r20, 0x01	; 1
    c7c2:	50 e0       	ldi	r21, 0x00	; 0
    c7c4:	04 96       	adiw	r24, 0x04	; 4
    c7c6:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x - 4, player2.y ,1 );
    c7ca:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c7ce:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c7d2:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c7d6:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c7da:	86 17       	cp	r24, r22
    c7dc:	97 07       	cpc	r25, r23
    c7de:	4c f4       	brge	.+18     	; 0xc7f2 <moveplayer2+0x416>
    c7e0:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c7e4:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c7e8:	41 e0       	ldi	r20, 0x01	; 1
    c7ea:	50 e0       	ldi	r21, 0x00	; 0
    c7ec:	04 97       	sbiw	r24, 0x04	; 4
    c7ee:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x , player2.y ,1 );
    c7f2:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c7f6:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c7fa:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c7fe:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c802:	86 17       	cp	r24, r22
    c804:	97 07       	cpc	r25, r23
    c806:	44 f4       	brge	.+16     	; 0xc818 <moveplayer2+0x43c>
    c808:	41 e0       	ldi	r20, 0x01	; 1
    c80a:	50 e0       	ldi	r21, 0x00	; 0
    c80c:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c810:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c814:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player2.x +4, player2.y -3,0 );
    c818:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c81c:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c820:	63 50       	subi	r22, 0x03	; 3
    c822:	71 09       	sbc	r23, r1
    c824:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c828:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c82c:	40 e0       	ldi	r20, 0x00	; 0
    c82e:	50 e0       	ldi	r21, 0x00	; 0
    c830:	04 96       	adiw	r24, 0x04	; 4
    c832:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player2.x +4, player2.y -19,0 );
    c836:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c83a:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c83e:	63 51       	subi	r22, 0x13	; 19
    c840:	71 09       	sbc	r23, r1
    c842:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c846:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c84a:	40 e0       	ldi	r20, 0x00	; 0
    c84c:	50 e0       	ldi	r21, 0x00	; 0
    c84e:	04 96       	adiw	r24, 0x04	; 4
    c850:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player2.x -3, player2.y -3 ,0);
    c854:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c858:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c85c:	63 50       	subi	r22, 0x03	; 3
    c85e:	71 09       	sbc	r23, r1
    c860:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c864:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c868:	40 e0       	ldi	r20, 0x00	; 0
    c86a:	50 e0       	ldi	r21, 0x00	; 0
    c86c:	03 97       	sbiw	r24, 0x03	; 3
    c86e:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player2.x -3, player2.y -19 ,0);  
    c872:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c876:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c87a:	63 51       	subi	r22, 0x13	; 19
    c87c:	71 09       	sbc	r23, r1
    c87e:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c882:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c886:	40 e0       	ldi	r20, 0x00	; 0
    c888:	50 e0       	ldi	r21, 0x00	; 0
    c88a:	03 97       	sbiw	r24, 0x03	; 3
    c88c:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
checkmonster(player2.x , player2.y -22 ,0);
    c890:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c894:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c898:	66 51       	subi	r22, 0x16	; 22
    c89a:	71 09       	sbc	r23, r1
    c89c:	40 e0       	ldi	r20, 0x00	; 0
    c89e:	50 e0       	ldi	r21, 0x00	; 0
    c8a0:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c8a4:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c8a8:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,0 );
    c8ac:	60 91 8b 09 	lds	r22, 0x098B	; 0x80098b <player2+0x2>
    c8b0:	70 91 8c 09 	lds	r23, 0x098C	; 0x80098c <player2+0x3>
    c8b4:	80 91 e7 09 	lds	r24, 0x09E7	; 0x8009e7 <oldy>
    c8b8:	90 91 e8 09 	lds	r25, 0x09E8	; 0x8009e8 <oldy+0x1>
    c8bc:	86 17       	cp	r24, r22
    c8be:	97 07       	cpc	r25, r23
    c8c0:	4c f4       	brge	.+18     	; 0xc8d4 <moveplayer2+0x4f8>
    c8c2:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c8c6:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c8ca:	40 e0       	ldi	r20, 0x00	; 0
    c8cc:	50 e0       	ldi	r21, 0x00	; 0
    c8ce:	04 96       	adiw	r24, 0x04	; 4
    c8d0:	0e 94 22 5e 	call	0xbc44	; 0xbc44 <checkmonster>
player2.ximpulse = 0;    
    c8d4:	10 92 94 09 	sts	0x0994, r1	; 0x800994 <player2+0xb>
player2.yimpulse = 0;
    c8d8:	10 92 95 09 	sts	0x0995, r1	; 0x800995 <player2+0xc>
if ( player2.x < 8 ) player2.x = 8;
    c8dc:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c8e0:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c8e4:	08 97       	sbiw	r24, 0x08	; 8
    c8e6:	34 f4       	brge	.+12     	; 0xc8f4 <moveplayer2+0x518>
    c8e8:	88 e0       	ldi	r24, 0x08	; 8
    c8ea:	90 e0       	ldi	r25, 0x00	; 0
    c8ec:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <player2+0x1>
    c8f0:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <player2>
if ( player2.x > 232 ) player2.x = 232;    
    c8f4:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <player2>
    c8f8:	90 91 8a 09 	lds	r25, 0x098A	; 0x80098a <player2+0x1>
    c8fc:	89 3e       	cpi	r24, 0xE9	; 233
    c8fe:	91 05       	cpc	r25, r1
    c900:	3c f0       	brlt	.+14     	; 0xc910 <moveplayer2+0x534>
    c902:	88 ee       	ldi	r24, 0xE8	; 232
    c904:	90 e0       	ldi	r25, 0x00	; 0
    c906:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <player2+0x1>
    c90a:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <player2>
    c90e:	08 95       	ret
    c910:	08 95       	ret

0000c912 <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    c912:	20 91 a4 09 	lds	r18, 0x09A4	; 0x8009a4 <owl+0x9>
    c916:	22 23       	and	r18, r18
    c918:	79 f0       	breq	.+30     	; 0xc938 <scrollmonster+0x26>
    c91a:	40 91 9f 09 	lds	r20, 0x099F	; 0x80099f <owl+0x4>
    c91e:	50 91 a0 09 	lds	r21, 0x09A0	; 0x8009a0 <owl+0x5>
    c922:	9c 01       	movw	r18, r24
    c924:	22 0f       	add	r18, r18
    c926:	33 1f       	adc	r19, r19
    c928:	22 0f       	add	r18, r18
    c92a:	33 1f       	adc	r19, r19
    c92c:	24 0f       	add	r18, r20
    c92e:	35 1f       	adc	r19, r21
    c930:	30 93 a0 09 	sts	0x09A0, r19	; 0x8009a0 <owl+0x5>
    c934:	20 93 9f 09 	sts	0x099F, r18	; 0x80099f <owl+0x4>
if (blob.onscreen) blob.x2 =  blob.x2 + ( x << 2 );
    c938:	20 91 5b 09 	lds	r18, 0x095B	; 0x80095b <blob+0x9>
    c93c:	22 23       	and	r18, r18
    c93e:	79 f0       	breq	.+30     	; 0xc95e <scrollmonster+0x4c>
    c940:	40 91 56 09 	lds	r20, 0x0956	; 0x800956 <blob+0x4>
    c944:	50 91 57 09 	lds	r21, 0x0957	; 0x800957 <blob+0x5>
    c948:	9c 01       	movw	r18, r24
    c94a:	22 0f       	add	r18, r18
    c94c:	33 1f       	adc	r19, r19
    c94e:	22 0f       	add	r18, r18
    c950:	33 1f       	adc	r19, r19
    c952:	24 0f       	add	r18, r20
    c954:	35 1f       	adc	r19, r21
    c956:	30 93 57 09 	sts	0x0957, r19	; 0x800957 <blob+0x5>
    c95a:	20 93 56 09 	sts	0x0956, r18	; 0x800956 <blob+0x4>
if (bee.onscreen) bee.x2 =  bee.x2 + ( x << 2 );
    c95e:	20 91 7a 09 	lds	r18, 0x097A	; 0x80097a <bee+0x9>
    c962:	22 23       	and	r18, r18
    c964:	71 f0       	breq	.+28     	; 0xc982 <scrollmonster+0x70>
    c966:	88 0f       	add	r24, r24
    c968:	99 1f       	adc	r25, r25
    c96a:	88 0f       	add	r24, r24
    c96c:	99 1f       	adc	r25, r25
    c96e:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <bee+0x4>
    c972:	30 91 76 09 	lds	r19, 0x0976	; 0x800976 <bee+0x5>
    c976:	82 0f       	add	r24, r18
    c978:	93 1f       	adc	r25, r19
    c97a:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <bee+0x5>
    c97e:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <bee+0x4>
    c982:	08 95       	ret

0000c984 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    c984:	20 91 88 09 	lds	r18, 0x0988	; 0x800988 <MonsteronScreen>
    c988:	21 11       	cpse	r18, r1
    c98a:	38 c0       	rjmp	.+112    	; 0xc9fc <setowl+0x78>
if ( owl.onscreen == true ) return;    
    c98c:	20 91 a4 09 	lds	r18, 0x09A4	; 0x8009a4 <owl+0x9>
    c990:	21 11       	cpse	r18, r1
    c992:	34 c0       	rjmp	.+104    	; 0xc9fc <setowl+0x78>
owl.x = x * 8;
    c994:	33 e0       	ldi	r19, 0x03	; 3
    c996:	88 0f       	add	r24, r24
    c998:	99 1f       	adc	r25, r25
    c99a:	3a 95       	dec	r19
    c99c:	e1 f7       	brne	.-8      	; 0xc996 <setowl+0x12>
    c99e:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <owl+0x1>
    c9a2:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    c9a6:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    c9aa:	88 23       	and	r24, r24
    c9ac:	31 f0       	breq	.+12     	; 0xc9ba <setowl+0x36>
    c9ae:	80 ef       	ldi	r24, 0xF0	; 240
    c9b0:	90 e0       	ldi	r25, 0x00	; 0
    c9b2:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <owl+0x1>
    c9b6:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <owl>
owl.y = y * 8;     
    c9ba:	83 e0       	ldi	r24, 0x03	; 3
    c9bc:	66 0f       	add	r22, r22
    c9be:	77 1f       	adc	r23, r23
    c9c0:	8a 95       	dec	r24
    c9c2:	e1 f7       	brne	.-8      	; 0xc9bc <setowl+0x38>
    c9c4:	70 93 9e 09 	sts	0x099E, r23	; 0x80099e <owl+0x3>
    c9c8:	60 93 9d 09 	sts	0x099D, r22	; 0x80099d <owl+0x2>
owl.x2 = owl.x << 2;        
    c9cc:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <owl>
    c9d0:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <owl+0x1>
    c9d4:	88 0f       	add	r24, r24
    c9d6:	99 1f       	adc	r25, r25
    c9d8:	88 0f       	add	r24, r24
    c9da:	99 1f       	adc	r25, r25
    c9dc:	90 93 a0 09 	sts	0x09A0, r25	; 0x8009a0 <owl+0x5>
    c9e0:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <owl+0x4>
owl.ximpulse = -1;
    c9e4:	8f ef       	ldi	r24, 0xFF	; 255
    c9e6:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <owl+0x7>
owl.yimpulse = 0;    
    c9ea:	10 92 a3 09 	sts	0x09A3, r1	; 0x8009a3 <owl+0x8>
owl.onscreen = true;
    c9ee:	81 e0       	ldi	r24, 0x01	; 1
    c9f0:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <owl+0x9>
owl.alive = true; 
    c9f4:	80 93 a5 09 	sts	0x09A5, r24	; 0x8009a5 <owl+0xa>
MonsteronScreen = true;     
    c9f8:	80 93 88 09 	sts	0x0988, r24	; 0x800988 <MonsteronScreen>
    c9fc:	08 95       	ret

0000c9fe <setblob>:
}

void setblob(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    c9fe:	20 91 88 09 	lds	r18, 0x0988	; 0x800988 <MonsteronScreen>
    ca02:	21 11       	cpse	r18, r1
    ca04:	38 c0       	rjmp	.+112    	; 0xca76 <setblob+0x78>
if ( blob.onscreen == true ) return;    
    ca06:	20 91 5b 09 	lds	r18, 0x095B	; 0x80095b <blob+0x9>
    ca0a:	21 11       	cpse	r18, r1
    ca0c:	34 c0       	rjmp	.+104    	; 0xca76 <setblob+0x78>
blob.x = x * 8;
    ca0e:	33 e0       	ldi	r19, 0x03	; 3
    ca10:	88 0f       	add	r24, r24
    ca12:	99 1f       	adc	r25, r25
    ca14:	3a 95       	dec	r19
    ca16:	e1 f7       	brne	.-8      	; 0xca10 <setblob+0x12>
    ca18:	90 93 53 09 	sts	0x0953, r25	; 0x800953 <blob+0x1>
    ca1c:	80 93 52 09 	sts	0x0952, r24	; 0x800952 <blob>
if (scrolltiles > 0 )  blob.x = 15 * 16;
    ca20:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ca24:	88 23       	and	r24, r24
    ca26:	31 f0       	breq	.+12     	; 0xca34 <setblob+0x36>
    ca28:	80 ef       	ldi	r24, 0xF0	; 240
    ca2a:	90 e0       	ldi	r25, 0x00	; 0
    ca2c:	90 93 53 09 	sts	0x0953, r25	; 0x800953 <blob+0x1>
    ca30:	80 93 52 09 	sts	0x0952, r24	; 0x800952 <blob>
blob.y = y * 8;     
    ca34:	83 e0       	ldi	r24, 0x03	; 3
    ca36:	66 0f       	add	r22, r22
    ca38:	77 1f       	adc	r23, r23
    ca3a:	8a 95       	dec	r24
    ca3c:	e1 f7       	brne	.-8      	; 0xca36 <setblob+0x38>
    ca3e:	70 93 55 09 	sts	0x0955, r23	; 0x800955 <blob+0x3>
    ca42:	60 93 54 09 	sts	0x0954, r22	; 0x800954 <blob+0x2>
blob.x2 = blob.x << 2;        
    ca46:	80 91 52 09 	lds	r24, 0x0952	; 0x800952 <blob>
    ca4a:	90 91 53 09 	lds	r25, 0x0953	; 0x800953 <blob+0x1>
    ca4e:	88 0f       	add	r24, r24
    ca50:	99 1f       	adc	r25, r25
    ca52:	88 0f       	add	r24, r24
    ca54:	99 1f       	adc	r25, r25
    ca56:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x5>
    ca5a:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob+0x4>
blob.ximpulse = -2;
    ca5e:	8e ef       	ldi	r24, 0xFE	; 254
    ca60:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <blob+0x7>
blob.yimpulse = 0;    
    ca64:	10 92 5a 09 	sts	0x095A, r1	; 0x80095a <blob+0x8>
blob.onscreen = true;
    ca68:	81 e0       	ldi	r24, 0x01	; 1
    ca6a:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x9>
blob.alive = true;   
    ca6e:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <blob+0xa>
MonsteronScreen = true;    
    ca72:	80 93 88 09 	sts	0x0988, r24	; 0x800988 <MonsteronScreen>
    ca76:	08 95       	ret

0000ca78 <setbee>:
}

void setbee(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    ca78:	20 91 88 09 	lds	r18, 0x0988	; 0x800988 <MonsteronScreen>
    ca7c:	21 11       	cpse	r18, r1
    ca7e:	38 c0       	rjmp	.+112    	; 0xcaf0 <setbee+0x78>
if ( bee.onscreen == true ) return;    
    ca80:	20 91 7a 09 	lds	r18, 0x097A	; 0x80097a <bee+0x9>
    ca84:	21 11       	cpse	r18, r1
    ca86:	34 c0       	rjmp	.+104    	; 0xcaf0 <setbee+0x78>
bee.x = x * 8;
    ca88:	33 e0       	ldi	r19, 0x03	; 3
    ca8a:	88 0f       	add	r24, r24
    ca8c:	99 1f       	adc	r25, r25
    ca8e:	3a 95       	dec	r19
    ca90:	e1 f7       	brne	.-8      	; 0xca8a <setbee+0x12>
    ca92:	90 93 72 09 	sts	0x0972, r25	; 0x800972 <bee+0x1>
    ca96:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <bee>
if (scrolltiles > 0 )  bee.x = 15 * 16;
    ca9a:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ca9e:	88 23       	and	r24, r24
    caa0:	31 f0       	breq	.+12     	; 0xcaae <setbee+0x36>
    caa2:	80 ef       	ldi	r24, 0xF0	; 240
    caa4:	90 e0       	ldi	r25, 0x00	; 0
    caa6:	90 93 72 09 	sts	0x0972, r25	; 0x800972 <bee+0x1>
    caaa:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <bee>
bee.y = y * 8;     
    caae:	83 e0       	ldi	r24, 0x03	; 3
    cab0:	66 0f       	add	r22, r22
    cab2:	77 1f       	adc	r23, r23
    cab4:	8a 95       	dec	r24
    cab6:	e1 f7       	brne	.-8      	; 0xcab0 <setbee+0x38>
    cab8:	70 93 74 09 	sts	0x0974, r23	; 0x800974 <bee+0x3>
    cabc:	60 93 73 09 	sts	0x0973, r22	; 0x800973 <bee+0x2>
bee.x2 = bee.x << 2;        
    cac0:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <bee>
    cac4:	90 91 72 09 	lds	r25, 0x0972	; 0x800972 <bee+0x1>
    cac8:	88 0f       	add	r24, r24
    caca:	99 1f       	adc	r25, r25
    cacc:	88 0f       	add	r24, r24
    cace:	99 1f       	adc	r25, r25
    cad0:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <bee+0x5>
    cad4:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <bee+0x4>
bee.ximpulse = -6;
    cad8:	8a ef       	ldi	r24, 0xFA	; 250
    cada:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <bee+0x7>
bee.yimpulse = 0;    
    cade:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <bee+0x8>
bee.onscreen = true;
    cae2:	81 e0       	ldi	r24, 0x01	; 1
    cae4:	80 93 7a 09 	sts	0x097A, r24	; 0x80097a <bee+0x9>
bee.alive = true;   
    cae8:	80 93 7b 09 	sts	0x097B, r24	; 0x80097b <bee+0xa>
MonsteronScreen = true;    
    caec:	80 93 88 09 	sts	0x0988, r24	; 0x800988 <MonsteronScreen>
    caf0:	08 95       	ret

0000caf2 <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    caf2:	6f 92       	push	r6
    caf4:	7f 92       	push	r7
    caf6:	8f 92       	push	r8
    caf8:	bf 92       	push	r11
    cafa:	cf 92       	push	r12
    cafc:	df 92       	push	r13
    cafe:	ef 92       	push	r14
    cb00:	ff 92       	push	r15
    cb02:	0f 93       	push	r16
    cb04:	1f 93       	push	r17
    cb06:	cf 93       	push	r28
    cb08:	df 93       	push	r29
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    cb0a:	01 e0       	ldi	r16, 0x01	; 1
    cb0c:	e1 2c       	mov	r14, r1
    cb0e:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    cb10:	c1 2c       	mov	r12, r1
    cb12:	d1 2c       	mov	r13, r1
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    cb14:	be 2c       	mov	r11, r14
    cb16:	36 01       	movw	r6, r12
    cb18:	c0 e0       	ldi	r28, 0x00	; 0
    cb1a:	d0 e0       	ldi	r29, 0x00	; 0

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    cb1c:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <level>
    cb20:	81 11       	cpse	r24, r1
    cb22:	04 c0       	rjmp	.+8      	; 0xcb2c <drawlevel+0x3a>
    cb24:	f3 01       	movw	r30, r6
    cb26:	e1 58       	subi	r30, 0x81	; 129
    cb28:	fa 4c       	sbci	r31, 0xCA	; 202
    cb2a:	35 c0       	rjmp	.+106    	; 0xcb96 <drawlevel+0xa4>
if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    cb2c:	81 30       	cpi	r24, 0x01	; 1
    cb2e:	21 f4       	brne	.+8      	; 0xcb38 <drawlevel+0x46>
    cb30:	f3 01       	movw	r30, r6
    cb32:	ed 56       	subi	r30, 0x6D	; 109
    cb34:	ff 4c       	sbci	r31, 0xCF	; 207
    cb36:	2f c0       	rjmp	.+94     	; 0xcb96 <drawlevel+0xa4>
if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    cb38:	82 30       	cpi	r24, 0x02	; 2
    cb3a:	21 f4       	brne	.+8      	; 0xcb44 <drawlevel+0x52>
    cb3c:	f3 01       	movw	r30, r6
    cb3e:	e9 55       	subi	r30, 0x59	; 89
    cb40:	f4 4d       	sbci	r31, 0xD4	; 212
    cb42:	29 c0       	rjmp	.+82     	; 0xcb96 <drawlevel+0xa4>
if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    cb44:	83 30       	cpi	r24, 0x03	; 3
    cb46:	21 f4       	brne	.+8      	; 0xcb50 <drawlevel+0x5e>
    cb48:	f3 01       	movw	r30, r6
    cb4a:	e5 54       	subi	r30, 0x45	; 69
    cb4c:	f9 4d       	sbci	r31, 0xD9	; 217
    cb4e:	23 c0       	rjmp	.+70     	; 0xcb96 <drawlevel+0xa4>
if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    cb50:	84 30       	cpi	r24, 0x04	; 4
    cb52:	21 f4       	brne	.+8      	; 0xcb5c <drawlevel+0x6a>
    cb54:	f3 01       	movw	r30, r6
    cb56:	e1 53       	subi	r30, 0x31	; 49
    cb58:	fe 4d       	sbci	r31, 0xDE	; 222
    cb5a:	1d c0       	rjmp	.+58     	; 0xcb96 <drawlevel+0xa4>
if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    cb5c:	85 30       	cpi	r24, 0x05	; 5
    cb5e:	21 f4       	brne	.+8      	; 0xcb68 <drawlevel+0x76>
    cb60:	f3 01       	movw	r30, r6
    cb62:	ed 51       	subi	r30, 0x1D	; 29
    cb64:	f3 4e       	sbci	r31, 0xE3	; 227
    cb66:	17 c0       	rjmp	.+46     	; 0xcb96 <drawlevel+0xa4>
if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    cb68:	86 30       	cpi	r24, 0x06	; 6
    cb6a:	21 f4       	brne	.+8      	; 0xcb74 <drawlevel+0x82>
    cb6c:	f3 01       	movw	r30, r6
    cb6e:	e9 50       	subi	r30, 0x09	; 9
    cb70:	f8 4e       	sbci	r31, 0xE8	; 232
    cb72:	11 c0       	rjmp	.+34     	; 0xcb96 <drawlevel+0xa4>
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    cb74:	87 30       	cpi	r24, 0x07	; 7
    cb76:	21 f4       	brne	.+8      	; 0xcb80 <drawlevel+0x8e>
    cb78:	f3 01       	movw	r30, r6
    cb7a:	e5 5f       	subi	r30, 0xF5	; 245
    cb7c:	fc 4e       	sbci	r31, 0xEC	; 236
    cb7e:	0b c0       	rjmp	.+22     	; 0xcb96 <drawlevel+0xa4>
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    cb80:	88 30       	cpi	r24, 0x08	; 8
    cb82:	21 f4       	brne	.+8      	; 0xcb8c <drawlevel+0x9a>
    cb84:	f3 01       	movw	r30, r6
    cb86:	e1 5e       	subi	r30, 0xE1	; 225
    cb88:	f1 4f       	sbci	r31, 0xF1	; 241
    cb8a:	05 c0       	rjmp	.+10     	; 0xcb96 <drawlevel+0xa4>
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    cb8c:	89 30       	cpi	r24, 0x09	; 9
    cb8e:	21 f4       	brne	.+8      	; 0xcb98 <drawlevel+0xa6>
    cb90:	f3 01       	movw	r30, r6
    cb92:	ed 5c       	subi	r30, 0xCD	; 205
    cb94:	f6 4f       	sbci	r31, 0xF6	; 246
    cb96:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    cb98:	11 30       	cpi	r17, 0x01	; 1
    cb9a:	19 f4       	brne	.+6      	; 0xcba2 <drawlevel+0xb0>
    cb9c:	4b e6       	ldi	r20, 0x6B	; 107
    cb9e:	54 e8       	ldi	r21, 0x84	; 132
    cba0:	d1 c0       	rjmp	.+418    	; 0xcd44 <drawlevel+0x252>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    cba2:	12 30       	cpi	r17, 0x02	; 2
    cba4:	19 f4       	brne	.+6      	; 0xcbac <drawlevel+0xba>
    cba6:	49 e7       	ldi	r20, 0x79	; 121
    cba8:	54 e8       	ldi	r21, 0x84	; 132
    cbaa:	cc c0       	rjmp	.+408    	; 0xcd44 <drawlevel+0x252>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    cbac:	13 30       	cpi	r17, 0x03	; 3
    cbae:	19 f4       	brne	.+6      	; 0xcbb6 <drawlevel+0xc4>
    cbb0:	43 e7       	ldi	r20, 0x73	; 115
    cbb2:	54 e8       	ldi	r21, 0x84	; 132
    cbb4:	c7 c0       	rjmp	.+398    	; 0xcd44 <drawlevel+0x252>
    if ( c == 4 ) DrawMap2(destx  ,yi *2  ,block2);
    cbb6:	14 30       	cpi	r17, 0x04	; 4
    cbb8:	19 f4       	brne	.+6      	; 0xcbc0 <drawlevel+0xce>
    cbba:	49 e2       	ldi	r20, 0x29	; 41
    cbbc:	54 e8       	ldi	r21, 0x84	; 132
    cbbe:	c2 c0       	rjmp	.+388    	; 0xcd44 <drawlevel+0x252>
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    cbc0:	15 30       	cpi	r17, 0x05	; 5
    cbc2:	19 f4       	brne	.+6      	; 0xcbca <drawlevel+0xd8>
    cbc4:	43 e6       	ldi	r20, 0x63	; 99
    cbc6:	54 e8       	ldi	r21, 0x84	; 132
    cbc8:	bd c0       	rjmp	.+378    	; 0xcd44 <drawlevel+0x252>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    cbca:	16 30       	cpi	r17, 0x06	; 6
    cbcc:	19 f4       	brne	.+6      	; 0xcbd4 <drawlevel+0xe2>
    cbce:	4b e5       	ldi	r20, 0x5B	; 91
    cbd0:	54 e8       	ldi	r21, 0x84	; 132
    cbd2:	b8 c0       	rjmp	.+368    	; 0xcd44 <drawlevel+0x252>
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    cbd4:	17 30       	cpi	r17, 0x07	; 7
    cbd6:	19 f4       	brne	.+6      	; 0xcbde <drawlevel+0xec>
    cbd8:	43 e2       	ldi	r20, 0x23	; 35
    cbda:	54 e8       	ldi	r21, 0x84	; 132
    cbdc:	b3 c0       	rjmp	.+358    	; 0xcd44 <drawlevel+0x252>
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    cbde:	18 30       	cpi	r17, 0x08	; 8
    cbe0:	19 f4       	brne	.+6      	; 0xcbe8 <drawlevel+0xf6>
    cbe2:	43 e5       	ldi	r20, 0x53	; 83
    cbe4:	54 e8       	ldi	r21, 0x84	; 132
    cbe6:	ae c0       	rjmp	.+348    	; 0xcd44 <drawlevel+0x252>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    cbe8:	19 30       	cpi	r17, 0x09	; 9
    cbea:	19 f4       	brne	.+6      	; 0xcbf2 <drawlevel+0x100>
    cbec:	4d e4       	ldi	r20, 0x4D	; 77
    cbee:	54 e8       	ldi	r21, 0x84	; 132
    cbf0:	a9 c0       	rjmp	.+338    	; 0xcd44 <drawlevel+0x252>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    cbf2:	1a 30       	cpi	r17, 0x0A	; 10
    cbf4:	19 f4       	brne	.+6      	; 0xcbfc <drawlevel+0x10a>
    cbf6:	47 e4       	ldi	r20, 0x47	; 71
    cbf8:	54 e8       	ldi	r21, 0x84	; 132
    cbfa:	a4 c0       	rjmp	.+328    	; 0xcd44 <drawlevel+0x252>
    if ( c == 11 ) DrawMap2(destx ,yi *2  ,tube0);
    cbfc:	1b 30       	cpi	r17, 0x0B	; 11
    cbfe:	19 f4       	brne	.+6      	; 0xcc06 <drawlevel+0x114>
    cc00:	44 ee       	ldi	r20, 0xE4	; 228
    cc02:	53 e8       	ldi	r21, 0x83	; 131
    cc04:	9f c0       	rjmp	.+318    	; 0xcd44 <drawlevel+0x252>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,tube1);
    cc06:	1c 30       	cpi	r17, 0x0C	; 12
    cc08:	19 f4       	brne	.+6      	; 0xcc10 <drawlevel+0x11e>
    cc0a:	4e ed       	ldi	r20, 0xDE	; 222
    cc0c:	53 e8       	ldi	r21, 0x83	; 131
    cc0e:	9a c0       	rjmp	.+308    	; 0xcd44 <drawlevel+0x252>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,tube2);
    cc10:	1d 30       	cpi	r17, 0x0D	; 13
    cc12:	19 f4       	brne	.+6      	; 0xcc1a <drawlevel+0x128>
    cc14:	48 ed       	ldi	r20, 0xD8	; 216
    cc16:	53 e8       	ldi	r21, 0x83	; 131
    cc18:	95 c0       	rjmp	.+298    	; 0xcd44 <drawlevel+0x252>
    if ( c == 14 ) DrawMap2(destx ,yi *2  ,tube3);
    cc1a:	1e 30       	cpi	r17, 0x0E	; 14
    cc1c:	19 f4       	brne	.+6      	; 0xcc24 <drawlevel+0x132>
    cc1e:	42 ed       	ldi	r20, 0xD2	; 210
    cc20:	53 e8       	ldi	r21, 0x83	; 131
    cc22:	90 c0       	rjmp	.+288    	; 0xcd44 <drawlevel+0x252>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    cc24:	1f 30       	cpi	r17, 0x0F	; 15
    cc26:	19 f4       	brne	.+6      	; 0xcc2e <drawlevel+0x13c>
    cc28:	4c ec       	ldi	r20, 0xCC	; 204
    cc2a:	53 e8       	ldi	r21, 0x83	; 131
    cc2c:	8b c0       	rjmp	.+278    	; 0xcd44 <drawlevel+0x252>
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    cc2e:	10 31       	cpi	r17, 0x10	; 16
    cc30:	19 f4       	brne	.+6      	; 0xcc38 <drawlevel+0x146>
    cc32:	46 ec       	ldi	r20, 0xC6	; 198
    cc34:	53 e8       	ldi	r21, 0x83	; 131
    cc36:	86 c0       	rjmp	.+268    	; 0xcd44 <drawlevel+0x252>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,bush1);
    cc38:	1f 31       	cpi	r17, 0x1F	; 31
    cc3a:	19 f4       	brne	.+6      	; 0xcc42 <drawlevel+0x150>
    cc3c:	44 e1       	ldi	r20, 0x14	; 20
    cc3e:	54 e8       	ldi	r21, 0x84	; 132
    cc40:	81 c0       	rjmp	.+258    	; 0xcd44 <drawlevel+0x252>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,bush2);
    cc42:	10 32       	cpi	r17, 0x20	; 32
    cc44:	19 f4       	brne	.+6      	; 0xcc4c <drawlevel+0x15a>
    cc46:	4e e0       	ldi	r20, 0x0E	; 14
    cc48:	54 e8       	ldi	r21, 0x84	; 132
    cc4a:	7c c0       	rjmp	.+248    	; 0xcd44 <drawlevel+0x252>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,bush3);
    cc4c:	11 32       	cpi	r17, 0x21	; 33
    cc4e:	19 f4       	brne	.+6      	; 0xcc56 <drawlevel+0x164>
    cc50:	48 e0       	ldi	r20, 0x08	; 8
    cc52:	54 e8       	ldi	r21, 0x84	; 132
    cc54:	77 c0       	rjmp	.+238    	; 0xcd44 <drawlevel+0x252>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,bush4);
    cc56:	12 32       	cpi	r17, 0x22	; 34
    cc58:	19 f4       	brne	.+6      	; 0xcc60 <drawlevel+0x16e>
    cc5a:	42 e0       	ldi	r20, 0x02	; 2
    cc5c:	54 e8       	ldi	r21, 0x84	; 132
    cc5e:	72 c0       	rjmp	.+228    	; 0xcd44 <drawlevel+0x252>
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    cc60:	13 32       	cpi	r17, 0x23	; 35
    cc62:	19 f4       	brne	.+6      	; 0xcc6a <drawlevel+0x178>
    cc64:	4c ef       	ldi	r20, 0xFC	; 252
    cc66:	53 e8       	ldi	r21, 0x83	; 131
    cc68:	6d c0       	rjmp	.+218    	; 0xcd44 <drawlevel+0x252>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    cc6a:	14 32       	cpi	r17, 0x24	; 36
    cc6c:	19 f4       	brne	.+6      	; 0xcc74 <drawlevel+0x182>
    cc6e:	46 ef       	ldi	r20, 0xF6	; 246
    cc70:	53 e8       	ldi	r21, 0x83	; 131
    cc72:	68 c0       	rjmp	.+208    	; 0xcd44 <drawlevel+0x252>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    cc74:	15 32       	cpi	r17, 0x25	; 37
    cc76:	19 f4       	brne	.+6      	; 0xcc7e <drawlevel+0x18c>
    cc78:	40 ef       	ldi	r20, 0xF0	; 240
    cc7a:	53 e8       	ldi	r21, 0x83	; 131
    cc7c:	63 c0       	rjmp	.+198    	; 0xcd44 <drawlevel+0x252>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    cc7e:	16 32       	cpi	r17, 0x26	; 38
    cc80:	19 f4       	brne	.+6      	; 0xcc88 <drawlevel+0x196>
    cc82:	4a ee       	ldi	r20, 0xEA	; 234
    cc84:	53 e8       	ldi	r21, 0x83	; 131
    cc86:	5e c0       	rjmp	.+188    	; 0xcd44 <drawlevel+0x252>
    if ( c == 39 ) {DrawMap2(destx ,yi *2 ,bridge0);DrawMap2(destx +1 ,yi *2  ,bridge0);DrawMap2(destx  ,yi *2 +1 ,nb);DrawMap2(destx +1 ,yi *2 +1 ,nb);};
    cc88:	17 32       	cpi	r17, 0x27	; 39
    cc8a:	c1 f4       	brne	.+48     	; 0xccbc <drawlevel+0x1ca>
    cc8c:	4b ea       	ldi	r20, 0xAB	; 171
    cc8e:	53 e8       	ldi	r21, 0x83	; 131
    cc90:	6c 2f       	mov	r22, r28
    cc92:	8b 2d       	mov	r24, r11
    cc94:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cc98:	4b ea       	ldi	r20, 0xAB	; 171
    cc9a:	53 e8       	ldi	r21, 0x83	; 131
    cc9c:	6c 2f       	mov	r22, r28
    cc9e:	80 2f       	mov	r24, r16
    cca0:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cca4:	4f e9       	ldi	r20, 0x9F	; 159
    cca6:	53 e8       	ldi	r21, 0x83	; 131
    cca8:	8c 2e       	mov	r8, r28
    ccaa:	83 94       	inc	r8
    ccac:	68 2d       	mov	r22, r8
    ccae:	8b 2d       	mov	r24, r11
    ccb0:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    ccb4:	4f e9       	ldi	r20, 0x9F	; 159
    ccb6:	53 e8       	ldi	r21, 0x83	; 131
    ccb8:	68 2d       	mov	r22, r8
    ccba:	3e c0       	rjmp	.+124    	; 0xcd38 <drawlevel+0x246>
    if ( c == 21 ) DrawMap2(destx ,yi *2  ,mush0);
    ccbc:	15 31       	cpi	r17, 0x15	; 21
    ccbe:	19 f4       	brne	.+6      	; 0xccc6 <drawlevel+0x1d4>
    ccc0:	40 ec       	ldi	r20, 0xC0	; 192
    ccc2:	53 e8       	ldi	r21, 0x83	; 131
    ccc4:	3f c0       	rjmp	.+126    	; 0xcd44 <drawlevel+0x252>
    if ( c == 22 ) DrawMap2(destx ,yi *2  ,mush1);
    ccc6:	16 31       	cpi	r17, 0x16	; 22
    ccc8:	19 f4       	brne	.+6      	; 0xccd0 <drawlevel+0x1de>
    ccca:	4a eb       	ldi	r20, 0xBA	; 186
    cccc:	53 e8       	ldi	r21, 0x83	; 131
    ccce:	3a c0       	rjmp	.+116    	; 0xcd44 <drawlevel+0x252>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,mush2);
    ccd0:	17 31       	cpi	r17, 0x17	; 23
    ccd2:	19 f4       	brne	.+6      	; 0xccda <drawlevel+0x1e8>
    ccd4:	44 eb       	ldi	r20, 0xB4	; 180
    ccd6:	53 e8       	ldi	r21, 0x83	; 131
    ccd8:	35 c0       	rjmp	.+106    	; 0xcd44 <drawlevel+0x252>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,mush3);	
    ccda:	18 31       	cpi	r17, 0x18	; 24
    ccdc:	19 f4       	brne	.+6      	; 0xcce4 <drawlevel+0x1f2>
    ccde:	4e ea       	ldi	r20, 0xAE	; 174
    cce0:	53 e8       	ldi	r21, 0x83	; 131
    cce2:	30 c0       	rjmp	.+96     	; 0xcd44 <drawlevel+0x252>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    cce4:	19 31       	cpi	r17, 0x19	; 25
    cce6:	19 f4       	brne	.+6      	; 0xccee <drawlevel+0x1fc>
    cce8:	41 e4       	ldi	r20, 0x41	; 65
    ccea:	54 e8       	ldi	r21, 0x84	; 132
    ccec:	2b c0       	rjmp	.+86     	; 0xcd44 <drawlevel+0x252>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    ccee:	1a 31       	cpi	r17, 0x1A	; 26
    ccf0:	19 f4       	brne	.+6      	; 0xccf8 <drawlevel+0x206>
    ccf2:	4b e3       	ldi	r20, 0x3B	; 59
    ccf4:	54 e8       	ldi	r21, 0x84	; 132
    ccf6:	26 c0       	rjmp	.+76     	; 0xcd44 <drawlevel+0x252>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    ccf8:	1b 31       	cpi	r17, 0x1B	; 27
    ccfa:	19 f4       	brne	.+6      	; 0xcd02 <drawlevel+0x210>
    ccfc:	45 e3       	ldi	r20, 0x35	; 53
    ccfe:	54 e8       	ldi	r21, 0x84	; 132
    cd00:	21 c0       	rjmp	.+66     	; 0xcd44 <drawlevel+0x252>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    cd02:	1c 31       	cpi	r17, 0x1C	; 28
    cd04:	19 f4       	brne	.+6      	; 0xcd0c <drawlevel+0x21a>
    cd06:	4f e2       	ldi	r20, 0x2F	; 47
    cd08:	54 e8       	ldi	r21, 0x84	; 132
    cd0a:	1c c0       	rjmp	.+56     	; 0xcd44 <drawlevel+0x252>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    cd0c:	1d 31       	cpi	r17, 0x1D	; 29
    cd0e:	49 f4       	brne	.+18     	; 0xcd22 <drawlevel+0x230>
    cd10:	4b e2       	ldi	r20, 0x2B	; 43
    cd12:	53 e8       	ldi	r21, 0x83	; 131
    cd14:	6c 2f       	mov	r22, r28
    cd16:	8b 2d       	mov	r24, r11
    cd18:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cd1c:	4b e2       	ldi	r20, 0x2B	; 43
    cd1e:	53 e8       	ldi	r21, 0x83	; 131
    cd20:	0a c0       	rjmp	.+20     	; 0xcd36 <drawlevel+0x244>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    cd22:	1e 31       	cpi	r17, 0x1E	; 30
    cd24:	59 f4       	brne	.+22     	; 0xcd3c <drawlevel+0x24a>
    cd26:	47 e2       	ldi	r20, 0x27	; 39
    cd28:	53 e8       	ldi	r21, 0x83	; 131
    cd2a:	6c 2f       	mov	r22, r28
    cd2c:	8b 2d       	mov	r24, r11
    cd2e:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cd32:	47 e2       	ldi	r20, 0x27	; 39
    cd34:	53 e8       	ldi	r21, 0x83	; 131
    cd36:	6c 2f       	mov	r22, r28
    cd38:	80 2f       	mov	r24, r16
    cd3a:	06 c0       	rjmp	.+12     	; 0xcd48 <drawlevel+0x256>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    cd3c:	19 32       	cpi	r17, 0x29	; 41
    cd3e:	39 f4       	brne	.+14     	; 0xcd4e <drawlevel+0x25c>
    cd40:	4d e1       	ldi	r20, 0x1D	; 29
    cd42:	54 e8       	ldi	r21, 0x84	; 132
    cd44:	6c 2f       	mov	r22, r28
    cd46:	8b 2d       	mov	r24, r11
    cd48:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cd4c:	14 c0       	rjmp	.+40     	; 0xcd76 <drawlevel+0x284>
    if ( c == 50 ) setowl(destx,  yi *2);    
    cd4e:	12 33       	cpi	r17, 0x32	; 50
    cd50:	29 f4       	brne	.+10     	; 0xcd5c <drawlevel+0x26a>
    cd52:	be 01       	movw	r22, r28
    cd54:	c7 01       	movw	r24, r14
    cd56:	0e 94 c2 64 	call	0xc984	; 0xc984 <setowl>
    cd5a:	0d c0       	rjmp	.+26     	; 0xcd76 <drawlevel+0x284>
    if ( c == 51 ) setblob(destx, yi *2);
    cd5c:	13 33       	cpi	r17, 0x33	; 51
    cd5e:	29 f4       	brne	.+10     	; 0xcd6a <drawlevel+0x278>
    cd60:	be 01       	movw	r22, r28
    cd62:	c7 01       	movw	r24, r14
    cd64:	0e 94 ff 64 	call	0xc9fe	; 0xc9fe <setblob>
    cd68:	06 c0       	rjmp	.+12     	; 0xcd76 <drawlevel+0x284>
    if ( c == 52 ) setbee(destx, yi *2);     
    cd6a:	14 33       	cpi	r17, 0x34	; 52
    cd6c:	21 f4       	brne	.+8      	; 0xcd76 <drawlevel+0x284>
    cd6e:	be 01       	movw	r22, r28
    cd70:	c7 01       	movw	r24, r14
    cd72:	0e 94 3c 65 	call	0xca78	; 0xca78 <setbee>
    cd76:	22 96       	adiw	r28, 0x02	; 2
    cd78:	8a e5       	ldi	r24, 0x5A	; 90
    cd7a:	68 0e       	add	r6, r24
    cd7c:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    cd7e:	cc 31       	cpi	r28, 0x1C	; 28
    cd80:	d1 05       	cpc	r29, r1
    cd82:	09 f0       	breq	.+2      	; 0xcd86 <drawlevel+0x294>
    cd84:	cb ce       	rjmp	.-618    	; 0xcb1c <drawlevel+0x2a>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    cd86:	8f ef       	ldi	r24, 0xFF	; 255
    cd88:	c8 1a       	sub	r12, r24
    cd8a:	d8 0a       	sbc	r13, r24
    cd8c:	82 e0       	ldi	r24, 0x02	; 2
    cd8e:	e8 0e       	add	r14, r24
    cd90:	f1 1c       	adc	r15, r1
    cd92:	0e 5f       	subi	r16, 0xFE	; 254
    cd94:	80 e2       	ldi	r24, 0x20	; 32
    cd96:	e8 16       	cp	r14, r24
    cd98:	f1 04       	cpc	r15, r1
    cd9a:	09 f0       	breq	.+2      	; 0xcd9e <drawlevel+0x2ac>
    cd9c:	bb ce       	rjmp	.-650    	; 0xcb14 <drawlevel+0x22>
    if ( c == 51 ) setblob(destx, yi *2);
    if ( c == 52 ) setbee(destx, yi *2);     
    }
    }

}
    cd9e:	df 91       	pop	r29
    cda0:	cf 91       	pop	r28
    cda2:	1f 91       	pop	r17
    cda4:	0f 91       	pop	r16
    cda6:	ff 90       	pop	r15
    cda8:	ef 90       	pop	r14
    cdaa:	df 90       	pop	r13
    cdac:	cf 90       	pop	r12
    cdae:	bf 90       	pop	r11
    cdb0:	8f 90       	pop	r8
    cdb2:	7f 90       	pop	r7
    cdb4:	6f 90       	pop	r6
    cdb6:	08 95       	ret

0000cdb8 <updatelevel>:

void updatelevel()
{
    cdb8:	cf 92       	push	r12
    cdba:	df 92       	push	r13
    cdbc:	ef 92       	push	r14
    cdbe:	ff 92       	push	r15
    cdc0:	1f 93       	push	r17
    cdc2:	cf 93       	push	r28
    cdc4:	df 93       	push	r29
    cdc6:	c0 e0       	ldi	r28, 0x00	; 0
    cdc8:	d0 e0       	ldi	r29, 0x00	; 0
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    cdca:	e1 2c       	mov	r14, r1
    cdcc:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    cdce:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <level>
    cdd2:	81 11       	cpse	r24, r1
    cdd4:	08 c0       	rjmp	.+16     	; 0xcde6 <updatelevel+0x2e>
    cdd6:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    cdda:	fe 01       	movw	r30, r28
    cddc:	e8 0f       	add	r30, r24
    cdde:	f1 1d       	adc	r31, r1
    cde0:	e1 57       	subi	r30, 0x71	; 113
    cde2:	fa 4c       	sbci	r31, 0xCA	; 202
    cde4:	59 c0       	rjmp	.+178    	; 0xce98 <updatelevel+0xe0>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    cde6:	81 30       	cpi	r24, 0x01	; 1
    cde8:	41 f4       	brne	.+16     	; 0xcdfa <updatelevel+0x42>
    cdea:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    cdee:	fe 01       	movw	r30, r28
    cdf0:	e8 0f       	add	r30, r24
    cdf2:	f1 1d       	adc	r31, r1
    cdf4:	ed 55       	subi	r30, 0x5D	; 93
    cdf6:	ff 4c       	sbci	r31, 0xCF	; 207
    cdf8:	4f c0       	rjmp	.+158    	; 0xce98 <updatelevel+0xe0>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    cdfa:	82 30       	cpi	r24, 0x02	; 2
    cdfc:	41 f4       	brne	.+16     	; 0xce0e <updatelevel+0x56>
    cdfe:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce02:	fe 01       	movw	r30, r28
    ce04:	e8 0f       	add	r30, r24
    ce06:	f1 1d       	adc	r31, r1
    ce08:	e9 54       	subi	r30, 0x49	; 73
    ce0a:	f4 4d       	sbci	r31, 0xD4	; 212
    ce0c:	45 c0       	rjmp	.+138    	; 0xce98 <updatelevel+0xe0>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    ce0e:	83 30       	cpi	r24, 0x03	; 3
    ce10:	41 f4       	brne	.+16     	; 0xce22 <updatelevel+0x6a>
    ce12:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce16:	fe 01       	movw	r30, r28
    ce18:	e8 0f       	add	r30, r24
    ce1a:	f1 1d       	adc	r31, r1
    ce1c:	e5 53       	subi	r30, 0x35	; 53
    ce1e:	f9 4d       	sbci	r31, 0xD9	; 217
    ce20:	3b c0       	rjmp	.+118    	; 0xce98 <updatelevel+0xe0>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    ce22:	84 30       	cpi	r24, 0x04	; 4
    ce24:	41 f4       	brne	.+16     	; 0xce36 <updatelevel+0x7e>
    ce26:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce2a:	fe 01       	movw	r30, r28
    ce2c:	e8 0f       	add	r30, r24
    ce2e:	f1 1d       	adc	r31, r1
    ce30:	e1 52       	subi	r30, 0x21	; 33
    ce32:	fe 4d       	sbci	r31, 0xDE	; 222
    ce34:	31 c0       	rjmp	.+98     	; 0xce98 <updatelevel+0xe0>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    ce36:	85 30       	cpi	r24, 0x05	; 5
    ce38:	41 f4       	brne	.+16     	; 0xce4a <updatelevel+0x92>
    ce3a:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce3e:	fe 01       	movw	r30, r28
    ce40:	e8 0f       	add	r30, r24
    ce42:	f1 1d       	adc	r31, r1
    ce44:	ed 50       	subi	r30, 0x0D	; 13
    ce46:	f3 4e       	sbci	r31, 0xE3	; 227
    ce48:	27 c0       	rjmp	.+78     	; 0xce98 <updatelevel+0xe0>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    ce4a:	86 30       	cpi	r24, 0x06	; 6
    ce4c:	41 f4       	brne	.+16     	; 0xce5e <updatelevel+0xa6>
    ce4e:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce52:	fe 01       	movw	r30, r28
    ce54:	e8 0f       	add	r30, r24
    ce56:	f1 1d       	adc	r31, r1
    ce58:	e9 5f       	subi	r30, 0xF9	; 249
    ce5a:	f7 4e       	sbci	r31, 0xE7	; 231
    ce5c:	1d c0       	rjmp	.+58     	; 0xce98 <updatelevel+0xe0>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    ce5e:	87 30       	cpi	r24, 0x07	; 7
    ce60:	41 f4       	brne	.+16     	; 0xce72 <updatelevel+0xba>
    ce62:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce66:	fe 01       	movw	r30, r28
    ce68:	e8 0f       	add	r30, r24
    ce6a:	f1 1d       	adc	r31, r1
    ce6c:	e5 5e       	subi	r30, 0xE5	; 229
    ce6e:	fc 4e       	sbci	r31, 0xEC	; 236
    ce70:	13 c0       	rjmp	.+38     	; 0xce98 <updatelevel+0xe0>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    ce72:	88 30       	cpi	r24, 0x08	; 8
    ce74:	41 f4       	brne	.+16     	; 0xce86 <updatelevel+0xce>
    ce76:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce7a:	fe 01       	movw	r30, r28
    ce7c:	e8 0f       	add	r30, r24
    ce7e:	f1 1d       	adc	r31, r1
    ce80:	e1 5d       	subi	r30, 0xD1	; 209
    ce82:	f1 4f       	sbci	r31, 0xF1	; 241
    ce84:	09 c0       	rjmp	.+18     	; 0xce98 <updatelevel+0xe0>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    ce86:	89 30       	cpi	r24, 0x09	; 9
    ce88:	41 f4       	brne	.+16     	; 0xce9a <updatelevel+0xe2>
    ce8a:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    ce8e:	fe 01       	movw	r30, r28
    ce90:	e8 0f       	add	r30, r24
    ce92:	f1 1d       	adc	r31, r1
    ce94:	ed 5b       	subi	r30, 0xBD	; 189
    ce96:	f6 4f       	sbci	r31, 0xF6	; 246
    ce98:	14 91       	lpm	r17, Z
    xi = yi << 1;
    ce9a:	67 01       	movw	r12, r14
    ce9c:	cc 0c       	add	r12, r12
    ce9e:	dd 1c       	adc	r13, r13
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    cea0:	11 11       	cpse	r17, r1
    cea2:	10 c0       	rjmp	.+32     	; 0xcec4 <updatelevel+0x10c>
    cea4:	4f e7       	ldi	r20, 0x7F	; 127
    cea6:	54 e8       	ldi	r21, 0x84	; 132
    cea8:	6c 2d       	mov	r22, r12
    ceaa:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    ceae:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    ceb2:	8c e0       	ldi	r24, 0x0C	; 12
    ceb4:	e8 16       	cp	r14, r24
    ceb6:	f1 04       	cpc	r15, r1
    ceb8:	49 f5       	brne	.+82     	; 0xcf0c <updatelevel+0x154>
    ceba:	61 e0       	ldi	r22, 0x01	; 1
    cebc:	6c 0d       	add	r22, r12
    cebe:	4f e7       	ldi	r20, 0x7F	; 127
    cec0:	54 e8       	ldi	r21, 0x84	; 132
    cec2:	0f c0       	rjmp	.+30     	; 0xcee2 <updatelevel+0x12a>
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    cec4:	11 30       	cpi	r17, 0x01	; 1
    cec6:	19 f4       	brne	.+6      	; 0xcece <updatelevel+0x116>
    cec8:	4b e6       	ldi	r20, 0x6B	; 107
    ceca:	54 e8       	ldi	r21, 0x84	; 132
    cecc:	09 c0       	rjmp	.+18     	; 0xcee0 <updatelevel+0x128>
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    cece:	12 30       	cpi	r17, 0x02	; 2
    ced0:	19 f4       	brne	.+6      	; 0xced8 <updatelevel+0x120>
    ced2:	49 e7       	ldi	r20, 0x79	; 121
    ced4:	54 e8       	ldi	r21, 0x84	; 132
    ced6:	04 c0       	rjmp	.+8      	; 0xcee0 <updatelevel+0x128>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    ced8:	13 30       	cpi	r17, 0x03	; 3
    ceda:	69 f5       	brne	.+90     	; 0xcf36 <updatelevel+0x17e>
    cedc:	43 e7       	ldi	r20, 0x73	; 115
    cede:	54 e8       	ldi	r21, 0x84	; 132
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    cee0:	6c 2d       	mov	r22, r12
    cee2:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    cee6:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    ceea:	10 c0       	rjmp	.+32     	; 0xcf0c <updatelevel+0x154>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    ceec:	12 33       	cpi	r17, 0x32	; 50
    ceee:	09 f0       	breq	.+2      	; 0xcef2 <updatelevel+0x13a>
    cef0:	f5 c0       	rjmp	.+490    	; 0xd0dc <updatelevel+0x324>
    cef2:	4f e7       	ldi	r20, 0x7F	; 127
    cef4:	54 e8       	ldi	r21, 0x84	; 132
    cef6:	6c 2d       	mov	r22, r12
    cef8:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    cefc:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    cf00:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    cf04:	b6 01       	movw	r22, r12
    cf06:	90 e0       	ldi	r25, 0x00	; 0
    cf08:	0e 94 c2 64 	call	0xc984	; 0xc984 <setowl>
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    cf0c:	8f ef       	ldi	r24, 0xFF	; 255
    cf0e:	e8 1a       	sub	r14, r24
    cf10:	f8 0a       	sbc	r15, r24
    cf12:	c6 5a       	subi	r28, 0xA6	; 166
    cf14:	df 4f       	sbci	r29, 0xFF	; 255
    cf16:	8d e0       	ldi	r24, 0x0D	; 13
    cf18:	e8 16       	cp	r14, r24
    cf1a:	f1 04       	cpc	r15, r1
    cf1c:	09 f0       	breq	.+2      	; 0xcf20 <updatelevel+0x168>
    cf1e:	57 cf       	rjmp	.-338    	; 0xcdce <updatelevel+0x16>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    if ( c == 52 ) {DrawMap2(destX,xi  ,bigblue0);setbee(  destX ,xi );};
    }
    
destX++;
destX++;
    cf20:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    cf24:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32)destX=0; 
    cf26:	80 32       	cpi	r24, 0x20	; 32
    cf28:	18 f4       	brcc	.+6      	; 0xcf30 <updatelevel+0x178>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    if ( c == 52 ) {DrawMap2(destX,xi  ,bigblue0);setbee(  destX ,xi );};
    }
    
destX++;
destX++;
    cf2a:	80 93 a6 09 	sts	0x09A6, r24	; 0x8009a6 <destX>
    cf2e:	f7 c0       	rjmp	.+494    	; 0xd11e <updatelevel+0x366>
if(destX>=32)destX=0; 
    cf30:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <destX>
}
    cf34:	f4 c0       	rjmp	.+488    	; 0xd11e <updatelevel+0x366>
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) DrawMap2(destX  ,xi  ,block2);
    cf36:	14 30       	cpi	r17, 0x04	; 4
    cf38:	19 f4       	brne	.+6      	; 0xcf40 <updatelevel+0x188>
    cf3a:	49 e2       	ldi	r20, 0x29	; 41
    cf3c:	54 e8       	ldi	r21, 0x84	; 132
    cf3e:	d0 cf       	rjmp	.-96     	; 0xcee0 <updatelevel+0x128>
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    cf40:	15 30       	cpi	r17, 0x05	; 5
    cf42:	19 f4       	brne	.+6      	; 0xcf4a <updatelevel+0x192>
    cf44:	43 e6       	ldi	r20, 0x63	; 99
    cf46:	54 e8       	ldi	r21, 0x84	; 132
    cf48:	cb cf       	rjmp	.-106    	; 0xcee0 <updatelevel+0x128>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    cf4a:	16 30       	cpi	r17, 0x06	; 6
    cf4c:	19 f4       	brne	.+6      	; 0xcf54 <updatelevel+0x19c>
    cf4e:	4b e5       	ldi	r20, 0x5B	; 91
    cf50:	54 e8       	ldi	r21, 0x84	; 132
    cf52:	c6 cf       	rjmp	.-116    	; 0xcee0 <updatelevel+0x128>
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    cf54:	17 30       	cpi	r17, 0x07	; 7
    cf56:	19 f4       	brne	.+6      	; 0xcf5e <updatelevel+0x1a6>
    cf58:	43 e2       	ldi	r20, 0x23	; 35
    cf5a:	54 e8       	ldi	r21, 0x84	; 132
    cf5c:	c1 cf       	rjmp	.-126    	; 0xcee0 <updatelevel+0x128>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    cf5e:	18 30       	cpi	r17, 0x08	; 8
    cf60:	19 f4       	brne	.+6      	; 0xcf68 <updatelevel+0x1b0>
    cf62:	43 e5       	ldi	r20, 0x53	; 83
    cf64:	54 e8       	ldi	r21, 0x84	; 132
    cf66:	bc cf       	rjmp	.-136    	; 0xcee0 <updatelevel+0x128>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    cf68:	19 30       	cpi	r17, 0x09	; 9
    cf6a:	19 f4       	brne	.+6      	; 0xcf72 <updatelevel+0x1ba>
    cf6c:	4d e4       	ldi	r20, 0x4D	; 77
    cf6e:	54 e8       	ldi	r21, 0x84	; 132
    cf70:	b7 cf       	rjmp	.-146    	; 0xcee0 <updatelevel+0x128>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    cf72:	1a 30       	cpi	r17, 0x0A	; 10
    cf74:	19 f4       	brne	.+6      	; 0xcf7c <updatelevel+0x1c4>
    cf76:	47 e4       	ldi	r20, 0x47	; 71
    cf78:	54 e8       	ldi	r21, 0x84	; 132
    cf7a:	b2 cf       	rjmp	.-156    	; 0xcee0 <updatelevel+0x128>
    if ( c == 11 ) DrawMap2(destX ,xi  ,tube0);
    cf7c:	1b 30       	cpi	r17, 0x0B	; 11
    cf7e:	19 f4       	brne	.+6      	; 0xcf86 <updatelevel+0x1ce>
    cf80:	44 ee       	ldi	r20, 0xE4	; 228
    cf82:	53 e8       	ldi	r21, 0x83	; 131
    cf84:	ad cf       	rjmp	.-166    	; 0xcee0 <updatelevel+0x128>
    if ( c == 12 ) DrawMap2(destX ,xi  ,tube1);
    cf86:	1c 30       	cpi	r17, 0x0C	; 12
    cf88:	19 f4       	brne	.+6      	; 0xcf90 <updatelevel+0x1d8>
    cf8a:	4e ed       	ldi	r20, 0xDE	; 222
    cf8c:	53 e8       	ldi	r21, 0x83	; 131
    cf8e:	a8 cf       	rjmp	.-176    	; 0xcee0 <updatelevel+0x128>
    if ( c == 13 ) DrawMap2(destX ,xi  ,tube2);
    cf90:	1d 30       	cpi	r17, 0x0D	; 13
    cf92:	19 f4       	brne	.+6      	; 0xcf9a <updatelevel+0x1e2>
    cf94:	48 ed       	ldi	r20, 0xD8	; 216
    cf96:	53 e8       	ldi	r21, 0x83	; 131
    cf98:	a3 cf       	rjmp	.-186    	; 0xcee0 <updatelevel+0x128>
    if ( c == 14 ) DrawMap2(destX ,xi  ,tube3);
    cf9a:	1e 30       	cpi	r17, 0x0E	; 14
    cf9c:	19 f4       	brne	.+6      	; 0xcfa4 <updatelevel+0x1ec>
    cf9e:	42 ed       	ldi	r20, 0xD2	; 210
    cfa0:	53 e8       	ldi	r21, 0x83	; 131
    cfa2:	9e cf       	rjmp	.-196    	; 0xcee0 <updatelevel+0x128>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    cfa4:	1f 30       	cpi	r17, 0x0F	; 15
    cfa6:	19 f4       	brne	.+6      	; 0xcfae <updatelevel+0x1f6>
    cfa8:	4c ec       	ldi	r20, 0xCC	; 204
    cfaa:	53 e8       	ldi	r21, 0x83	; 131
    cfac:	99 cf       	rjmp	.-206    	; 0xcee0 <updatelevel+0x128>
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    cfae:	10 31       	cpi	r17, 0x10	; 16
    cfb0:	19 f4       	brne	.+6      	; 0xcfb8 <updatelevel+0x200>
    cfb2:	46 ec       	ldi	r20, 0xC6	; 198
    cfb4:	53 e8       	ldi	r21, 0x83	; 131
    cfb6:	94 cf       	rjmp	.-216    	; 0xcee0 <updatelevel+0x128>
    if ( c == 31 ) DrawMap2(destX ,xi  ,bush1);
    cfb8:	1f 31       	cpi	r17, 0x1F	; 31
    cfba:	19 f4       	brne	.+6      	; 0xcfc2 <updatelevel+0x20a>
    cfbc:	44 e1       	ldi	r20, 0x14	; 20
    cfbe:	54 e8       	ldi	r21, 0x84	; 132
    cfc0:	8f cf       	rjmp	.-226    	; 0xcee0 <updatelevel+0x128>
    if ( c == 32 ) DrawMap2(destX ,xi  ,bush2);
    cfc2:	10 32       	cpi	r17, 0x20	; 32
    cfc4:	19 f4       	brne	.+6      	; 0xcfcc <updatelevel+0x214>
    cfc6:	4e e0       	ldi	r20, 0x0E	; 14
    cfc8:	54 e8       	ldi	r21, 0x84	; 132
    cfca:	8a cf       	rjmp	.-236    	; 0xcee0 <updatelevel+0x128>
    if ( c == 33 ) DrawMap2(destX ,xi  ,bush3);
    cfcc:	11 32       	cpi	r17, 0x21	; 33
    cfce:	19 f4       	brne	.+6      	; 0xcfd6 <updatelevel+0x21e>
    cfd0:	48 e0       	ldi	r20, 0x08	; 8
    cfd2:	54 e8       	ldi	r21, 0x84	; 132
    cfd4:	85 cf       	rjmp	.-246    	; 0xcee0 <updatelevel+0x128>
    if ( c == 34 ) DrawMap2(destX ,xi  ,bush4);
    cfd6:	12 32       	cpi	r17, 0x22	; 34
    cfd8:	19 f4       	brne	.+6      	; 0xcfe0 <updatelevel+0x228>
    cfda:	42 e0       	ldi	r20, 0x02	; 2
    cfdc:	54 e8       	ldi	r21, 0x84	; 132
    cfde:	80 cf       	rjmp	.-256    	; 0xcee0 <updatelevel+0x128>
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    cfe0:	13 32       	cpi	r17, 0x23	; 35
    cfe2:	19 f4       	brne	.+6      	; 0xcfea <updatelevel+0x232>
    cfe4:	4c ef       	ldi	r20, 0xFC	; 252
    cfe6:	53 e8       	ldi	r21, 0x83	; 131
    cfe8:	7b cf       	rjmp	.-266    	; 0xcee0 <updatelevel+0x128>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    cfea:	14 32       	cpi	r17, 0x24	; 36
    cfec:	19 f4       	brne	.+6      	; 0xcff4 <updatelevel+0x23c>
    cfee:	46 ef       	ldi	r20, 0xF6	; 246
    cff0:	53 e8       	ldi	r21, 0x83	; 131
    cff2:	76 cf       	rjmp	.-276    	; 0xcee0 <updatelevel+0x128>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    cff4:	15 32       	cpi	r17, 0x25	; 37
    cff6:	19 f4       	brne	.+6      	; 0xcffe <updatelevel+0x246>
    cff8:	40 ef       	ldi	r20, 0xF0	; 240
    cffa:	53 e8       	ldi	r21, 0x83	; 131
    cffc:	71 cf       	rjmp	.-286    	; 0xcee0 <updatelevel+0x128>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    cffe:	16 32       	cpi	r17, 0x26	; 38
    d000:	19 f4       	brne	.+6      	; 0xd008 <updatelevel+0x250>
    d002:	4a ee       	ldi	r20, 0xEA	; 234
    d004:	53 e8       	ldi	r21, 0x83	; 131
    d006:	6c cf       	rjmp	.-296    	; 0xcee0 <updatelevel+0x128>
    if ( c == 39 ) {DrawMap2(destX,xi  ,bridge0);DrawMap2(destX +1 ,xi,bridge0);DrawMap2(destX  ,xi + 1 ,nb);DrawMap2(destX +1 ,xi + 1 ,nb);};
    d008:	17 32       	cpi	r17, 0x27	; 39
    d00a:	e1 f4       	brne	.+56     	; 0xd044 <updatelevel+0x28c>
    d00c:	4b ea       	ldi	r20, 0xAB	; 171
    d00e:	53 e8       	ldi	r21, 0x83	; 131
    d010:	6c 2d       	mov	r22, r12
    d012:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d016:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d01a:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d01e:	4b ea       	ldi	r20, 0xAB	; 171
    d020:	53 e8       	ldi	r21, 0x83	; 131
    d022:	6c 2d       	mov	r22, r12
    d024:	8f 5f       	subi	r24, 0xFF	; 255
    d026:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d02a:	c3 94       	inc	r12
    d02c:	4f e9       	ldi	r20, 0x9F	; 159
    d02e:	53 e8       	ldi	r21, 0x83	; 131
    d030:	6c 2d       	mov	r22, r12
    d032:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d036:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d03a:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d03e:	4f e9       	ldi	r20, 0x9F	; 159
    d040:	53 e8       	ldi	r21, 0x83	; 131
    d042:	43 c0       	rjmp	.+134    	; 0xd0ca <updatelevel+0x312>
    if ( c == 21 ) DrawMap2(destX ,xi  ,mush0);
    d044:	15 31       	cpi	r17, 0x15	; 21
    d046:	19 f4       	brne	.+6      	; 0xd04e <updatelevel+0x296>
    d048:	40 ec       	ldi	r20, 0xC0	; 192
    d04a:	53 e8       	ldi	r21, 0x83	; 131
    d04c:	49 cf       	rjmp	.-366    	; 0xcee0 <updatelevel+0x128>
    if ( c == 22 ) DrawMap2(destX ,xi  ,mush1);
    d04e:	16 31       	cpi	r17, 0x16	; 22
    d050:	19 f4       	brne	.+6      	; 0xd058 <updatelevel+0x2a0>
    d052:	4a eb       	ldi	r20, 0xBA	; 186
    d054:	53 e8       	ldi	r21, 0x83	; 131
    d056:	44 cf       	rjmp	.-376    	; 0xcee0 <updatelevel+0x128>
    if ( c == 23 ) DrawMap2(destX ,xi  ,mush2);
    d058:	17 31       	cpi	r17, 0x17	; 23
    d05a:	19 f4       	brne	.+6      	; 0xd062 <updatelevel+0x2aa>
    d05c:	44 eb       	ldi	r20, 0xB4	; 180
    d05e:	53 e8       	ldi	r21, 0x83	; 131
    d060:	3f cf       	rjmp	.-386    	; 0xcee0 <updatelevel+0x128>
    if ( c == 24 ) DrawMap2(destX ,xi  ,mush3);	
    d062:	18 31       	cpi	r17, 0x18	; 24
    d064:	19 f4       	brne	.+6      	; 0xd06c <updatelevel+0x2b4>
    d066:	4e ea       	ldi	r20, 0xAE	; 174
    d068:	53 e8       	ldi	r21, 0x83	; 131
    d06a:	3a cf       	rjmp	.-396    	; 0xcee0 <updatelevel+0x128>
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    d06c:	19 31       	cpi	r17, 0x19	; 25
    d06e:	19 f4       	brne	.+6      	; 0xd076 <updatelevel+0x2be>
    d070:	41 e4       	ldi	r20, 0x41	; 65
    d072:	54 e8       	ldi	r21, 0x84	; 132
    d074:	35 cf       	rjmp	.-406    	; 0xcee0 <updatelevel+0x128>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    d076:	1a 31       	cpi	r17, 0x1A	; 26
    d078:	19 f4       	brne	.+6      	; 0xd080 <updatelevel+0x2c8>
    d07a:	4b e3       	ldi	r20, 0x3B	; 59
    d07c:	54 e8       	ldi	r21, 0x84	; 132
    d07e:	30 cf       	rjmp	.-416    	; 0xcee0 <updatelevel+0x128>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    d080:	1b 31       	cpi	r17, 0x1B	; 27
    d082:	19 f4       	brne	.+6      	; 0xd08a <updatelevel+0x2d2>
    d084:	45 e3       	ldi	r20, 0x35	; 53
    d086:	54 e8       	ldi	r21, 0x84	; 132
    d088:	2b cf       	rjmp	.-426    	; 0xcee0 <updatelevel+0x128>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    d08a:	1c 31       	cpi	r17, 0x1C	; 28
    d08c:	19 f4       	brne	.+6      	; 0xd094 <updatelevel+0x2dc>
    d08e:	4f e2       	ldi	r20, 0x2F	; 47
    d090:	54 e8       	ldi	r21, 0x84	; 132
    d092:	26 cf       	rjmp	.-436    	; 0xcee0 <updatelevel+0x128>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    d094:	1d 31       	cpi	r17, 0x1D	; 29
    d096:	61 f4       	brne	.+24     	; 0xd0b0 <updatelevel+0x2f8>
    d098:	4b e2       	ldi	r20, 0x2B	; 43
    d09a:	53 e8       	ldi	r21, 0x83	; 131
    d09c:	6c 2d       	mov	r22, r12
    d09e:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0a2:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d0a6:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0aa:	4b e2       	ldi	r20, 0x2B	; 43
    d0ac:	53 e8       	ldi	r21, 0x83	; 131
    d0ae:	0d c0       	rjmp	.+26     	; 0xd0ca <updatelevel+0x312>
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    d0b0:	1e 31       	cpi	r17, 0x1E	; 30
    d0b2:	71 f4       	brne	.+28     	; 0xd0d0 <updatelevel+0x318>
    d0b4:	47 e2       	ldi	r20, 0x27	; 39
    d0b6:	53 e8       	ldi	r21, 0x83	; 131
    d0b8:	6c 2d       	mov	r22, r12
    d0ba:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0be:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d0c2:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0c6:	47 e2       	ldi	r20, 0x27	; 39
    d0c8:	53 e8       	ldi	r21, 0x83	; 131
    d0ca:	6c 2d       	mov	r22, r12
    d0cc:	8f 5f       	subi	r24, 0xFF	; 255
    d0ce:	0b cf       	rjmp	.-490    	; 0xcee6 <updatelevel+0x12e>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    d0d0:	19 32       	cpi	r17, 0x29	; 41
    d0d2:	09 f0       	breq	.+2      	; 0xd0d6 <updatelevel+0x31e>
    d0d4:	0b cf       	rjmp	.-490    	; 0xceec <updatelevel+0x134>
    d0d6:	4d e1       	ldi	r20, 0x1D	; 29
    d0d8:	54 e8       	ldi	r21, 0x84	; 132
    d0da:	02 cf       	rjmp	.-508    	; 0xcee0 <updatelevel+0x128>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    d0dc:	13 33       	cpi	r17, 0x33	; 51
    d0de:	71 f4       	brne	.+28     	; 0xd0fc <updatelevel+0x344>
    d0e0:	4f e7       	ldi	r20, 0x7F	; 127
    d0e2:	54 e8       	ldi	r21, 0x84	; 132
    d0e4:	6c 2d       	mov	r22, r12
    d0e6:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0ea:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d0ee:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d0f2:	b6 01       	movw	r22, r12
    d0f4:	90 e0       	ldi	r25, 0x00	; 0
    d0f6:	0e 94 ff 64 	call	0xc9fe	; 0xc9fe <setblob>
    d0fa:	08 cf       	rjmp	.-496    	; 0xcf0c <updatelevel+0x154>
    if ( c == 52 ) {DrawMap2(destX,xi  ,bigblue0);setbee(  destX ,xi );};
    d0fc:	14 33       	cpi	r17, 0x34	; 52
    d0fe:	09 f0       	breq	.+2      	; 0xd102 <updatelevel+0x34a>
    d100:	05 cf       	rjmp	.-502    	; 0xcf0c <updatelevel+0x154>
    d102:	4f e7       	ldi	r20, 0x7F	; 127
    d104:	54 e8       	ldi	r21, 0x84	; 132
    d106:	6c 2d       	mov	r22, r12
    d108:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d10c:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    d110:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d114:	b6 01       	movw	r22, r12
    d116:	90 e0       	ldi	r25, 0x00	; 0
    d118:	0e 94 3c 65 	call	0xca78	; 0xca78 <setbee>
    d11c:	f7 ce       	rjmp	.-530    	; 0xcf0c <updatelevel+0x154>
    }
    
destX++;
destX++;
if(destX>=32)destX=0; 
}
    d11e:	df 91       	pop	r29
    d120:	cf 91       	pop	r28
    d122:	1f 91       	pop	r17
    d124:	ff 90       	pop	r15
    d126:	ef 90       	pop	r14
    d128:	df 90       	pop	r13
    d12a:	cf 90       	pop	r12
    d12c:	08 95       	ret

0000d12e <initmonster>:
MonsteronScreen = true;    
}

void initmonster()
{
owl.onscreen = false;   
    d12e:	10 92 a4 09 	sts	0x09A4, r1	; 0x8009a4 <owl+0x9>
blob.onscreen = false;   
    d132:	10 92 5b 09 	sts	0x095B, r1	; 0x80095b <blob+0x9>
bee.onscreen = false;
    d136:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <bee+0x9>
MonsteronScreen = false;
    d13a:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <MonsteronScreen>
    d13e:	08 95       	ret

0000d140 <movelevel>:
}

void movelevel()
{
if (player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    d140:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    d144:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    d148:	86 39       	cpi	r24, 0x96	; 150
    d14a:	91 05       	cpc	r25, r1
    d14c:	4c f1       	brlt	.+82     	; 0xd1a0 <movelevel+0x60>
    d14e:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    d152:	90 e0       	ldi	r25, 0x00	; 0
    d154:	8c 34       	cpi	r24, 0x4C	; 76
    d156:	91 05       	cpc	r25, r1
    d158:	1c f5       	brge	.+70     	; 0xd1a0 <movelevel+0x60>
Scroll(1 ,0);   
    d15a:	60 e0       	ldi	r22, 0x00	; 0
    d15c:	81 e0       	ldi	r24, 0x01	; 1
    d15e:	0e 94 ae 53 	call	0xa75c	; 0xa75c <Scroll>
Levelx  = Levelx + 1;
    d162:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d166:	8f 5f       	subi	r24, 0xFF	; 255
    d168:	80 93 e2 09 	sts	0x09E2, r24	; 0x8009e2 <Levelx>
player.x = player.x - 1;
    d16c:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    d170:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    d174:	01 97       	sbiw	r24, 0x01	; 1
    d176:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    d17a:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
scrollmonster(-1);
    d17e:	8f ef       	ldi	r24, 0xFF	; 255
    d180:	9f ef       	ldi	r25, 0xFF	; 255
    d182:	0e 94 89 64 	call	0xc912	; 0xc912 <scrollmonster>
if ( Levelx >= 16 )
    d186:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d18a:	80 31       	cpi	r24, 0x10	; 16
    d18c:	48 f0       	brcs	.+18     	; 0xd1a0 <movelevel+0x60>
{
updatelevel();
    d18e:	0e 94 dc 66 	call	0xcdb8	; 0xcdb8 <updatelevel>
scrolltiles++; 
    d192:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    d196:	8f 5f       	subi	r24, 0xFF	; 255
    d198:	80 93 e9 09 	sts	0x09E9, r24	; 0x8009e9 <scrolltiles>
Levelx = 0;    
    d19c:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
    d1a0:	08 95       	ret

0000d1a2 <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    d1a2:	cf 92       	push	r12
    d1a4:	df 92       	push	r13
    d1a6:	ef 92       	push	r14
    d1a8:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    d1aa:	2c e3       	ldi	r18, 0x3C	; 60
    d1ac:	30 e0       	ldi	r19, 0x00	; 0
    d1ae:	40 e0       	ldi	r20, 0x00	; 0
    d1b0:	50 e0       	ldi	r21, 0x00	; 0
    d1b2:	0e 94 93 6d 	call	0xdb26	; 0xdb26 <__udivmodsi4>
    tmp = 99 - tmp ;
    d1b6:	83 e6       	ldi	r24, 0x63	; 99
    d1b8:	c8 2e       	mov	r12, r24
    d1ba:	d1 2c       	mov	r13, r1
    d1bc:	e1 2c       	mov	r14, r1
    d1be:	f1 2c       	mov	r15, r1
    d1c0:	c2 1a       	sub	r12, r18
    d1c2:	d3 0a       	sbc	r13, r19
    d1c4:	e4 0a       	sbc	r14, r20
    d1c6:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    d1c8:	40 91 df 09 	lds	r20, 0x09DF	; 0x8009df <leveltime>
    d1cc:	84 2f       	mov	r24, r20
    d1ce:	90 e0       	ldi	r25, 0x00	; 0
    d1d0:	a0 e0       	ldi	r26, 0x00	; 0
    d1d2:	b0 e0       	ldi	r27, 0x00	; 0
    d1d4:	c8 16       	cp	r12, r24
    d1d6:	d9 06       	cpc	r13, r25
    d1d8:	ea 06       	cpc	r14, r26
    d1da:	fb 06       	cpc	r15, r27
    d1dc:	10 f0       	brcs	.+4      	; 0xd1e2 <updatetime+0x40>
    d1de:	41 11       	cpse	r20, r1
    d1e0:	09 c0       	rjmp	.+18     	; 0xd1f4 <updatetime+0x52>
    d1e2:	50 e0       	ldi	r21, 0x00	; 0
    d1e4:	22 e0       	ldi	r18, 0x02	; 2
    d1e6:	30 e0       	ldi	r19, 0x00	; 0
    d1e8:	60 e0       	ldi	r22, 0x00	; 0
    d1ea:	70 e0       	ldi	r23, 0x00	; 0
    d1ec:	8a e1       	ldi	r24, 0x1A	; 26
    d1ee:	90 e0       	ldi	r25, 0x00	; 0
    d1f0:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
    leveltime = tmp;
    d1f4:	c0 92 df 09 	sts	0x09DF, r12	; 0x8009df <leveltime>
    if (leveltime == 0 ) timeisup = true;
    d1f8:	c1 10       	cpse	r12, r1
    d1fa:	03 c0       	rjmp	.+6      	; 0xd202 <updatetime+0x60>
    d1fc:	81 e0       	ldi	r24, 0x01	; 1
    d1fe:	80 93 51 09 	sts	0x0951, r24	; 0x800951 <timeisup>
    
}
    d202:	ff 90       	pop	r15
    d204:	ef 90       	pop	r14
    d206:	df 90       	pop	r13
    d208:	cf 90       	pop	r12
    d20a:	08 95       	ret

0000d20c <playintro>:

void playintro()
{
    d20c:	0f 93       	push	r16
    d20e:	cf 93       	push	r28
    d210:	df 93       	push	r29

introplaying = true;
    d212:	c1 e0       	ldi	r28, 0x01	; 1
    d214:	c0 93 6e 09 	sts	0x096E, r28	; 0x80096e <introplaying>
Levelx = 0;
    d218:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
scrolltiles = 0;
    d21c:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
player2.x = 21;
    d220:	85 e1       	ldi	r24, 0x15	; 21
    d222:	90 e0       	ldi	r25, 0x00	; 0
    d224:	90 93 8a 09 	sts	0x098A, r25	; 0x80098a <player2+0x1>
    d228:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <player2>
player2.y = 191;
    d22c:	8f eb       	ldi	r24, 0xBF	; 191
    d22e:	90 e0       	ldi	r25, 0x00	; 0
    d230:	90 93 8c 09 	sts	0x098C, r25	; 0x80098c <player2+0x3>
    d234:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <player2+0x2>
player2.touchground = true;
    d238:	c0 93 93 09 	sts	0x0993, r28	; 0x800993 <player2+0xa>
player.x = 8;
    d23c:	28 e0       	ldi	r18, 0x08	; 8
    d23e:	30 e0       	ldi	r19, 0x00	; 0
    d240:	30 93 5e 09 	sts	0x095E, r19	; 0x80095e <player+0x1>
    d244:	20 93 5d 09 	sts	0x095D, r18	; 0x80095d <player>
player.y = 191;
    d248:	90 93 60 09 	sts	0x0960, r25	; 0x800960 <player+0x3>
    d24c:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <player+0x2>
player.touchground = true;
    d250:	c0 93 67 09 	sts	0x0967, r28	; 0x800967 <player+0xa>
player.jumping = false;
    d254:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0xd>
player.jumpreleased = true;
    d258:	c0 93 6b 09 	sts	0x096B, r28	; 0x80096b <player+0xe>
initlevel();
    d25c:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>
initmonster();
    d260:	0e 94 97 68 	call	0xd12e	; 0xd12e <initmonster>
setheadline();    
    d264:	0e 94 5d 5b 	call	0xb6ba	; 0xb6ba <setheadline>
drawlevel(Levelx);
    d268:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d26c:	90 e0       	ldi	r25, 0x00	; 0
    d26e:	0e 94 79 65 	call	0xcaf2	; 0xcaf2 <drawlevel>
setheadline();
    d272:	0e 94 5d 5b 	call	0xb6ba	; 0xb6ba <setheadline>
MapSprite2(0 ,melli0 ,0);
    d276:	40 e0       	ldi	r20, 0x00	; 0
    d278:	6f e9       	ldi	r22, 0x9F	; 159
    d27a:	75 e5       	ldi	r23, 0x55	; 85
    d27c:	80 e0       	ldi	r24, 0x00	; 0
    d27e:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MapSprite2(spriteInd ,man0,0);
    d282:	40 e0       	ldi	r20, 0x00	; 0
    d284:	63 e5       	ldi	r22, 0x53	; 83
    d286:	75 e5       	ldi	r23, 0x55	; 85
    d288:	8a e0       	ldi	r24, 0x0A	; 10
    d28a:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MapSprite2(6 ,owl0 ,0); 
    d28e:	40 e0       	ldi	r20, 0x00	; 0
    d290:	69 e7       	ldi	r22, 0x79	; 121
    d292:	75 e5       	ldi	r23, 0x55	; 85
    d294:	86 e0       	ldi	r24, 0x06	; 6
    d296:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MapSprite2(10,blob0 ,0);     
    d29a:	40 e0       	ldi	r20, 0x00	; 0
    d29c:	63 e7       	ldi	r22, 0x73	; 115
    d29e:	75 e5       	ldi	r23, 0x55	; 85
    d2a0:	8a e0       	ldi	r24, 0x0A	; 10
    d2a2:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
score = 0;
    d2a6:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <score+0x1>
    d2aa:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <score>
leveltime = 99;
    d2ae:	83 e6       	ldi	r24, 0x63	; 99
    d2b0:	80 93 df 09 	sts	0x09DF, r24	; 0x8009df <leveltime>
time = 0;
    d2b4:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d2b8:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d2bc:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d2c0:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
lives = 3;    
    d2c4:	83 e0       	ldi	r24, 0x03	; 3
    d2c6:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
level = 0;
    d2ca:	10 92 81 09 	sts	0x0981, r1	; 0x800981 <level>
bonus = 0;
    d2ce:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    d2d2:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
scrolltiles = 0;
    d2d6:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
Screen.scrollX = 0;
    d2da:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
destX = 0;
    d2de:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <destX>
Levelx = 0;
    d2e2:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
setheadline();
    d2e6:	0e 94 5d 5b 	call	0xb6ba	; 0xb6ba <setheadline>
printheadlineintro();
    d2ea:	0e 94 49 58 	call	0xb092	; 0xb092 <printheadlineintro>
player.direction = 'r';
    d2ee:	82 e7       	ldi	r24, 0x72	; 114
    d2f0:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <player+0x7>
player.action = 'w';
    d2f4:	87 e7       	ldi	r24, 0x77	; 119
    d2f6:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x6>
player.facing = 0;
    d2fa:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <player+0x5>
    d2fe:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <player+0x4>
player.ximpulse = 1; 
    d302:	c0 93 68 09 	sts	0x0968, r28	; 0x800968 <player+0xb>
FadeIn(1, true);
    d306:	61 e0       	ldi	r22, 0x01	; 1
    d308:	81 e0       	ldi	r24, 0x01	; 1
    d30a:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
{
player.action = 'j';
    d30e:	da e6       	ldi	r29, 0x6A	; 106
player.direction = 'r';
player.action = 'w';
player.facing = 0;
player.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    d310:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    d314:	88 23       	and	r24, r24
    d316:	09 f4       	brne	.+2      	; 0xd31a <playintro+0x10e>
    d318:	f6 c0       	rjmp	.+492    	; 0xd506 <playintro+0x2fa>
{
moveplayer();  
    d31a:	0e 94 53 5f 	call	0xbea6	; 0xbea6 <moveplayer>
moveplayer2();
    d31e:	0e 94 ee 61 	call	0xc3dc	; 0xc3dc <moveplayer2>
movemonster(); 
    d322:	0e 94 01 5c 	call	0xb802	; 0xb802 <movemonster>
WaitVsync(1); 
    d326:	81 e0       	ldi	r24, 0x01	; 1
    d328:	90 e0       	ldi	r25, 0x00	; 0
    d32a:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
drawmonster();       
    d32e:	0e 94 6a 5b 	call	0xb6d4	; 0xb6d4 <drawmonster>
movelevel();
    d332:	0e 94 a0 68 	call	0xd140	; 0xd140 <movelevel>
drawplayer();
    d336:	0e 94 32 55 	call	0xaa64	; 0xaa64 <drawplayer>
drawplayer2();        
    d33a:	0e 94 de 55 	call	0xabbc	; 0xabbc <drawplayer2>
  



player.ximpulse = 1;
    d33e:	c0 93 68 09 	sts	0x0968, r28	; 0x800968 <player+0xb>
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    d342:	40 91 84 09 	lds	r20, 0x0984	; 0x800984 <time>
    d346:	50 91 85 09 	lds	r21, 0x0985	; 0x800985 <time+0x1>
    d34a:	60 91 86 09 	lds	r22, 0x0986	; 0x800986 <time+0x2>
    d34e:	70 91 87 09 	lds	r23, 0x0987	; 0x800987 <time+0x3>
    d352:	43 3d       	cpi	r20, 0xD3	; 211
    d354:	51 05       	cpc	r21, r1
    d356:	61 05       	cpc	r22, r1
    d358:	71 05       	cpc	r23, r1
    d35a:	28 f4       	brcc	.+10     	; 0xd366 <playintro+0x15a>
    d35c:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    d360:	81 11       	cpse	r24, r1
    d362:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0xb>
    lx = 12 + destX;
    d366:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <destX>
    d36a:	90 e0       	ldi	r25, 0x00	; 0
    d36c:	9c 01       	movw	r18, r24
    d36e:	24 5f       	subi	r18, 0xF4	; 244
    d370:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    d372:	20 32       	cpi	r18, 0x20	; 32
    d374:	31 05       	cpc	r19, r1
    d376:	2c f4       	brge	.+10     	; 0xd382 <playintro+0x176>



player.ximpulse = 1;
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    lx = 12 + destX;
    d378:	30 93 e5 09 	sts	0x09E5, r19	; 0x8009e5 <lx+0x1>
    d37c:	20 93 e4 09 	sts	0x09E4, r18	; 0x8009e4 <lx>
    d380:	05 c0       	rjmp	.+10     	; 0xd38c <playintro+0x180>
    if (lx >= 32 ) lx = lx - 32;
    d382:	44 97       	sbiw	r24, 0x14	; 20
    d384:	90 93 e5 09 	sts	0x09E5, r25	; 0x8009e5 <lx+0x1>
    d388:	80 93 e4 09 	sts	0x09E4, r24	; 0x8009e4 <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    d38c:	4c 33       	cpi	r20, 0x3C	; 60
    d38e:	51 05       	cpc	r21, r1
    d390:	61 05       	cpc	r22, r1
    d392:	71 05       	cpc	r23, r1
    d394:	29 f0       	breq	.+10     	; 0xd3a0 <playintro+0x194>
    d396:	40 3f       	cpi	r20, 0xF0	; 240
    d398:	51 05       	cpc	r21, r1
    d39a:	61 05       	cpc	r22, r1
    d39c:	71 05       	cpc	r23, r1
    d39e:	59 f4       	brne	.+22     	; 0xd3b6 <playintro+0x1aa>
    d3a0:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    d3a4:	88 23       	and	r24, r24
    d3a6:	39 f0       	breq	.+14     	; 0xd3b6 <playintro+0x1aa>
    d3a8:	4c e4       	ldi	r20, 0x4C	; 76
    d3aa:	53 e8       	ldi	r21, 0x83	; 131
    d3ac:	62 e1       	ldi	r22, 0x12	; 18
    d3ae:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d3b2:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    d3b6:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d3ba:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d3be:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d3c2:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d3c6:	86 39       	cpi	r24, 0x96	; 150
    d3c8:	91 05       	cpc	r25, r1
    d3ca:	a1 05       	cpc	r26, r1
    d3cc:	b1 05       	cpc	r27, r1
    d3ce:	31 f0       	breq	.+12     	; 0xd3dc <playintro+0x1d0>
    d3d0:	8a 34       	cpi	r24, 0x4A	; 74
    d3d2:	91 40       	sbci	r25, 0x01	; 1
    d3d4:	a1 05       	cpc	r26, r1
    d3d6:	b1 05       	cpc	r27, r1
    d3d8:	09 f0       	breq	.+2      	; 0xd3dc <playintro+0x1d0>
    d3da:	44 c0       	rjmp	.+136    	; 0xd464 <playintro+0x258>
    d3dc:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    d3e0:	88 23       	and	r24, r24
    d3e2:	09 f4       	brne	.+2      	; 0xd3e6 <playintro+0x1da>
    d3e4:	3f c0       	rjmp	.+126    	; 0xd464 <playintro+0x258>
    DrawMap2(  lx,  18 ,nb );   
    d3e6:	4f e9       	ldi	r20, 0x9F	; 159
    d3e8:	53 e8       	ldi	r21, 0x83	; 131
    d3ea:	62 e1       	ldi	r22, 0x12	; 18
    d3ec:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d3f0:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    d3f4:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d3f8:	4f e9       	ldi	r20, 0x9F	; 159
    d3fa:	53 e8       	ldi	r21, 0x83	; 131
    d3fc:	62 e1       	ldi	r22, 0x12	; 18
    d3fe:	8f 5f       	subi	r24, 0xFF	; 255
    d400:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    d404:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d408:	4f e9       	ldi	r20, 0x9F	; 159
    d40a:	53 e8       	ldi	r21, 0x83	; 131
    d40c:	62 e1       	ldi	r22, 0x12	; 18
    d40e:	8e 5f       	subi	r24, 0xFE	; 254
    d410:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    d414:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d418:	4f e9       	ldi	r20, 0x9F	; 159
    d41a:	53 e8       	ldi	r21, 0x83	; 131
    d41c:	62 e1       	ldi	r22, 0x12	; 18
    d41e:	8d 5f       	subi	r24, 0xFD	; 253
    d420:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    d424:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d428:	4f e9       	ldi	r20, 0x9F	; 159
    d42a:	53 e8       	ldi	r21, 0x83	; 131
    d42c:	62 e1       	ldi	r22, 0x12	; 18
    d42e:	8c 5f       	subi	r24, 0xFC	; 252
    d430:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    d434:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d438:	4f e9       	ldi	r20, 0x9F	; 159
    d43a:	53 e8       	ldi	r21, 0x83	; 131
    d43c:	62 e1       	ldi	r22, 0x12	; 18
    d43e:	8b 5f       	subi	r24, 0xFB	; 251
    d440:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    d444:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d448:	4f e9       	ldi	r20, 0x9F	; 159
    d44a:	53 e8       	ldi	r21, 0x83	; 131
    d44c:	62 e1       	ldi	r22, 0x12	; 18
    d44e:	8a 5f       	subi	r24, 0xFA	; 250
    d450:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    d454:	80 91 e4 09 	lds	r24, 0x09E4	; 0x8009e4 <lx>
    d458:	4f e9       	ldi	r20, 0x9F	; 159
    d45a:	53 e8       	ldi	r21, 0x83	; 131
    d45c:	62 e1       	ldi	r22, 0x12	; 18
    d45e:	89 5f       	subi	r24, 0xF9	; 249
    d460:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
    
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
    d464:	80 91 5d 09 	lds	r24, 0x095D	; 0x80095d <player>
    d468:	90 91 5e 09 	lds	r25, 0x095E	; 0x80095e <player+0x1>
    d46c:	85 39       	cpi	r24, 0x95	; 149
    d46e:	91 05       	cpc	r25, r1
    d470:	31 f5       	brne	.+76     	; 0xd4be <playintro+0x2b2>
    d472:	80 91 e9 09 	lds	r24, 0x09E9	; 0x8009e9 <scrolltiles>
    d476:	8e 30       	cpi	r24, 0x0E	; 14
    d478:	31 f4       	brne	.+12     	; 0xd486 <playintro+0x27a>
    d47a:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d47e:	82 30       	cpi	r24, 0x02	; 2
    d480:	09 f0       	breq	.+2      	; 0xd484 <playintro+0x278>
    d482:	46 cf       	rjmp	.-372    	; 0xd310 <playintro+0x104>
    d484:	0c c0       	rjmp	.+24     	; 0xd49e <playintro+0x292>
    d486:	87 31       	cpi	r24, 0x17	; 23
    d488:	29 f0       	breq	.+10     	; 0xd494 <playintro+0x288>
    d48a:	80 32       	cpi	r24, 0x20	; 32
    d48c:	19 f0       	breq	.+6      	; 0xd494 <playintro+0x288>
    d48e:	8a 32       	cpi	r24, 0x2A	; 42
    d490:	09 f0       	breq	.+2      	; 0xd494 <playintro+0x288>
    d492:	3e cf       	rjmp	.-388    	; 0xd310 <playintro+0x104>
    d494:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d498:	8a 30       	cpi	r24, 0x0A	; 10
    d49a:	09 f0       	breq	.+2      	; 0xd49e <playintro+0x292>
    d49c:	39 cf       	rjmp	.-398    	; 0xd310 <playintro+0x104>
{
player.action = 'j';
    d49e:	d0 93 63 09 	sts	0x0963, r29	; 0x800963 <player+0x6>
player.yimpulse = 0;
    d4a2:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0xc>
player.jumping = true;
    d4a6:	c0 93 6a 09 	sts	0x096A, r28	; 0x80096a <player+0xd>
player.touchground = false;
    d4aa:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0xa>
player.jumpreleased = false;
    d4ae:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xe>
player.jumpcounter++ ; 
    d4b2:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xf>
    d4b6:	8f 5f       	subi	r24, 0xFF	; 255
    d4b8:	80 93 6c 09 	sts	0x096C, r24	; 0x80096c <player+0xf>
    d4bc:	29 cf       	rjmp	.-430    	; 0xd310 <playintro+0x104>
};  
if ( player.x  == 160 ) time = 0;   
    d4be:	80 3a       	cpi	r24, 0xA0	; 160
    d4c0:	91 05       	cpc	r25, r1
    d4c2:	49 f4       	brne	.+18     	; 0xd4d6 <playintro+0x2ca>
    d4c4:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d4c8:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d4cc:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d4d0:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
    d4d4:	1d cf       	rjmp	.-454    	; 0xd310 <playintro+0x104>
if ( player.x >= 206 ) player.ximpulse = 0;
    d4d6:	8e 3c       	cpi	r24, 0xCE	; 206
    d4d8:	91 05       	cpc	r25, r1
    d4da:	1c f0       	brlt	.+6      	; 0xd4e2 <playintro+0x2d6>
    d4dc:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0xb>
    d4e0:	04 c0       	rjmp	.+8      	; 0xd4ea <playintro+0x2de>
if ( player.x >= 180 && time > 420 ) { 
    d4e2:	84 3b       	cpi	r24, 0xB4	; 180
    d4e4:	91 05       	cpc	r25, r1
    d4e6:	0c f4       	brge	.+2      	; 0xd4ea <playintro+0x2de>
    d4e8:	13 cf       	rjmp	.-474    	; 0xd310 <playintro+0x104>
    d4ea:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d4ee:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d4f2:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d4f6:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d4fa:	85 3a       	cpi	r24, 0xA5	; 165
    d4fc:	91 40       	sbci	r25, 0x01	; 1
    d4fe:	a1 05       	cpc	r26, r1
    d500:	b1 05       	cpc	r27, r1
    d502:	08 f4       	brcc	.+2      	; 0xd506 <playintro+0x2fa>
    d504:	05 cf       	rjmp	.-502    	; 0xd310 <playintro+0x104>
                                 
                                      break; };
};

FadeOut(5,true); 
    d506:	61 e0       	ldi	r22, 0x01	; 1
    d508:	85 e0       	ldi	r24, 0x05	; 5
    d50a:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
player.x = 8;
    d50e:	88 e0       	ldi	r24, 0x08	; 8
    d510:	90 e0       	ldi	r25, 0x00	; 0
    d512:	90 93 5e 09 	sts	0x095E, r25	; 0x80095e <player+0x1>
    d516:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <player>
player.y = 191;
    d51a:	8f eb       	ldi	r24, 0xBF	; 191
    d51c:	90 e0       	ldi	r25, 0x00	; 0
    d51e:	90 93 60 09 	sts	0x0960, r25	; 0x800960 <player+0x3>
    d522:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    d526:	03 e0       	ldi	r16, 0x03	; 3
    d528:	22 e0       	ldi	r18, 0x02	; 2
    d52a:	4a ea       	ldi	r20, 0xAA	; 170
    d52c:	61 e0       	ldi	r22, 0x01	; 1
    d52e:	80 e0       	ldi	r24, 0x00	; 0
    d530:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>

}
    d534:	df 91       	pop	r29
    d536:	cf 91       	pop	r28
    d538:	0f 91       	pop	r16
    d53a:	08 95       	ret

0000d53c <showgetready>:

void showgetready()
{
    d53c:	0f 93       	push	r16
FadeOut(0, true);
    d53e:	61 e0       	ldi	r22, 0x01	; 1
    d540:	80 e0       	ldi	r24, 0x00	; 0
    d542:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
Screen.scrollX = 0;
    d546:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d54a:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>

printheadline();
    d54e:	0e 94 04 58 	call	0xb008	; 0xb008 <printheadline>
printtileint( 26 ,0,99,2); 
    d552:	22 e0       	ldi	r18, 0x02	; 2
    d554:	30 e0       	ldi	r19, 0x00	; 0
    d556:	43 e6       	ldi	r20, 0x63	; 99
    d558:	50 e0       	ldi	r21, 0x00	; 0
    d55a:	60 e0       	ldi	r22, 0x00	; 0
    d55c:	70 e0       	ldi	r23, 0x00	; 0
    d55e:	8a e1       	ldi	r24, 0x1A	; 26
    d560:	90 e0       	ldi	r25, 0x00	; 0
    d562:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d566:	03 e0       	ldi	r16, 0x03	; 3
    d568:	22 e0       	ldi	r18, 0x02	; 2
    d56a:	4c ee       	ldi	r20, 0xEC	; 236
    d56c:	6c ee       	ldi	r22, 0xEC	; 236
    d56e:	80 e0       	ldi	r24, 0x00	; 0
    d570:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(6 ,-20 ,-20  ,2 ,2);
    d574:	02 e0       	ldi	r16, 0x02	; 2
    d576:	22 e0       	ldi	r18, 0x02	; 2
    d578:	4c ee       	ldi	r20, 0xEC	; 236
    d57a:	6c ee       	ldi	r22, 0xEC	; 236
    d57c:	86 e0       	ldi	r24, 0x06	; 6
    d57e:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    d582:	40 e6       	ldi	r20, 0x60	; 96
    d584:	53 e8       	ldi	r21, 0x83	; 131
    d586:	6a e0       	ldi	r22, 0x0A	; 10
    d588:	8b e0       	ldi	r24, 0x0B	; 11
    d58a:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
WaitVsync(1);  
    d58e:	81 e0       	ldi	r24, 0x01	; 1
    d590:	90 e0       	ldi	r25, 0x00	; 0
    d592:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
FadeIn(0, true);
    d596:	61 e0       	ldi	r22, 0x01	; 1
    d598:	80 e0       	ldi	r24, 0x00	; 0
    d59a:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>
time = 0;
    d59e:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d5a2:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d5a6:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d5aa:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
while ( time < 240 )
    d5ae:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d5b2:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d5b6:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d5ba:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d5be:	80 3f       	cpi	r24, 0xF0	; 240
    d5c0:	91 05       	cpc	r25, r1
    d5c2:	a1 05       	cpc	r26, r1
    d5c4:	b1 05       	cpc	r27, r1
    d5c6:	80 f4       	brcc	.+32     	; 0xd5e8 <showgetready+0xac>
{ time++;    
    d5c8:	01 96       	adiw	r24, 0x01	; 1
    d5ca:	a1 1d       	adc	r26, r1
    d5cc:	b1 1d       	adc	r27, r1
    d5ce:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <time>
    d5d2:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <time+0x1>
    d5d6:	a0 93 86 09 	sts	0x0986, r26	; 0x800986 <time+0x2>
    d5da:	b0 93 87 09 	sts	0x0987, r27	; 0x800987 <time+0x3>
WaitVsync(1);    
    d5de:	81 e0       	ldi	r24, 0x01	; 1
    d5e0:	90 e0       	ldi	r25, 0x00	; 0
    d5e2:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    d5e6:	e3 cf       	rjmp	.-58     	; 0xd5ae <showgetready+0x72>
};
 FadeOut(0, true);    
    d5e8:	61 e0       	ldi	r22, 0x01	; 1
    d5ea:	80 e0       	ldi	r24, 0x00	; 0
};
    d5ec:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d5ee:	0c 94 e9 54 	jmp	0xa9d2	; 0xa9d2 <FadeOut>

0000d5f2 <showgameover>:
};

void showgameover()
{
    d5f2:	0f 93       	push	r16
FadeOut(0, true);
    d5f4:	61 e0       	ldi	r22, 0x01	; 1
    d5f6:	80 e0       	ldi	r24, 0x00	; 0
    d5f8:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
Screen.scrollX = 0;
    d5fc:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d600:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d604:	03 e0       	ldi	r16, 0x03	; 3
    d606:	22 e0       	ldi	r18, 0x02	; 2
    d608:	4c ee       	ldi	r20, 0xEC	; 236
    d60a:	6c ee       	ldi	r22, 0xEC	; 236
    d60c:	80 e0       	ldi	r24, 0x00	; 0
    d60e:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(6 ,-20 ,-20  ,2 ,2);
    d612:	02 e0       	ldi	r16, 0x02	; 2
    d614:	22 e0       	ldi	r18, 0x02	; 2
    d616:	4c ee       	ldi	r20, 0xEC	; 236
    d618:	6c ee       	ldi	r22, 0xEC	; 236
    d61a:	86 e0       	ldi	r24, 0x06	; 6
    d61c:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    d620:	43 e4       	ldi	r20, 0x43	; 67
    d622:	53 e8       	ldi	r21, 0x83	; 131
    d624:	6a e0       	ldi	r22, 0x0A	; 10
    d626:	8b e0       	ldi	r24, 0x0B	; 11
    d628:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
WaitVsync(1);  
    d62c:	81 e0       	ldi	r24, 0x01	; 1
    d62e:	90 e0       	ldi	r25, 0x00	; 0
    d630:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
FadeIn(0, true);
    d634:	61 e0       	ldi	r22, 0x01	; 1
    d636:	80 e0       	ldi	r24, 0x00	; 0
    d638:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>
time = 0;
    d63c:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d640:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d644:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d648:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
while ( time < 240 )
    d64c:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d650:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d654:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d658:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d65c:	80 3f       	cpi	r24, 0xF0	; 240
    d65e:	91 05       	cpc	r25, r1
    d660:	a1 05       	cpc	r26, r1
    d662:	b1 05       	cpc	r27, r1
    d664:	80 f4       	brcc	.+32     	; 0xd686 <showgameover+0x94>
{ time++;    
    d666:	01 96       	adiw	r24, 0x01	; 1
    d668:	a1 1d       	adc	r26, r1
    d66a:	b1 1d       	adc	r27, r1
    d66c:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <time>
    d670:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <time+0x1>
    d674:	a0 93 86 09 	sts	0x0986, r26	; 0x800986 <time+0x2>
    d678:	b0 93 87 09 	sts	0x0987, r27	; 0x800987 <time+0x3>
WaitVsync(1);    
    d67c:	81 e0       	ldi	r24, 0x01	; 1
    d67e:	90 e0       	ldi	r25, 0x00	; 0
    d680:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    d684:	e3 cf       	rjmp	.-58     	; 0xd64c <showgameover+0x5a>
};
 FadeOut(0, true);    
    d686:	61 e0       	ldi	r22, 0x01	; 1
    d688:	80 e0       	ldi	r24, 0x00	; 0
};
    d68a:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d68c:	0c 94 e9 54 	jmp	0xa9d2	; 0xa9d2 <FadeOut>

0000d690 <showtimesup>:
};
void showtimesup()
{
    d690:	0f 93       	push	r16
FadeOut(0, true);
    d692:	61 e0       	ldi	r22, 0x01	; 1
    d694:	80 e0       	ldi	r24, 0x00	; 0
    d696:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
Screen.scrollX = 0;
    d69a:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d69e:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d6a2:	03 e0       	ldi	r16, 0x03	; 3
    d6a4:	22 e0       	ldi	r18, 0x02	; 2
    d6a6:	4c ee       	ldi	r20, 0xEC	; 236
    d6a8:	6c ee       	ldi	r22, 0xEC	; 236
    d6aa:	80 e0       	ldi	r24, 0x00	; 0
    d6ac:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(6 ,-20 ,-20  ,2 ,2);
    d6b0:	02 e0       	ldi	r16, 0x02	; 2
    d6b2:	22 e0       	ldi	r18, 0x02	; 2
    d6b4:	4c ee       	ldi	r20, 0xEC	; 236
    d6b6:	6c ee       	ldi	r22, 0xEC	; 236
    d6b8:	86 e0       	ldi	r24, 0x06	; 6
    d6ba:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    d6be:	4b e3       	ldi	r20, 0x3B	; 59
    d6c0:	53 e8       	ldi	r21, 0x83	; 131
    d6c2:	6a e0       	ldi	r22, 0x0A	; 10
    d6c4:	8b e0       	ldi	r24, 0x0B	; 11
    d6c6:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
WaitVsync(1);  
    d6ca:	81 e0       	ldi	r24, 0x01	; 1
    d6cc:	90 e0       	ldi	r25, 0x00	; 0
    d6ce:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
FadeIn(0, true);
    d6d2:	61 e0       	ldi	r22, 0x01	; 1
    d6d4:	80 e0       	ldi	r24, 0x00	; 0
    d6d6:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>
time = 0;
    d6da:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d6de:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d6e2:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d6e6:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
while ( time < 240 )
    d6ea:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d6ee:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d6f2:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d6f6:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d6fa:	80 3f       	cpi	r24, 0xF0	; 240
    d6fc:	91 05       	cpc	r25, r1
    d6fe:	a1 05       	cpc	r26, r1
    d700:	b1 05       	cpc	r27, r1
    d702:	80 f4       	brcc	.+32     	; 0xd724 <showtimesup+0x94>
{ time++;    
    d704:	01 96       	adiw	r24, 0x01	; 1
    d706:	a1 1d       	adc	r26, r1
    d708:	b1 1d       	adc	r27, r1
    d70a:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <time>
    d70e:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <time+0x1>
    d712:	a0 93 86 09 	sts	0x0986, r26	; 0x800986 <time+0x2>
    d716:	b0 93 87 09 	sts	0x0987, r27	; 0x800987 <time+0x3>
WaitVsync(1);    
    d71a:	81 e0       	ldi	r24, 0x01	; 1
    d71c:	90 e0       	ldi	r25, 0x00	; 0
    d71e:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    d722:	e3 cf       	rjmp	.-58     	; 0xd6ea <showtimesup+0x5a>
};
 FadeOut(0, true);    
    d724:	61 e0       	ldi	r22, 0x01	; 1
    d726:	80 e0       	ldi	r24, 0x00	; 0
};
    d728:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d72a:	0c 94 e9 54 	jmp	0xa9d2	; 0xa9d2 <FadeOut>

0000d72e <showcongratulation>:
};
void showcongratulation()
{
    d72e:	0f 93       	push	r16
FadeOut(0, true);
    d730:	61 e0       	ldi	r22, 0x01	; 1
    d732:	80 e0       	ldi	r24, 0x00	; 0
    d734:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
Screen.scrollX = 0;
    d738:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d73c:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d740:	03 e0       	ldi	r16, 0x03	; 3
    d742:	22 e0       	ldi	r18, 0x02	; 2
    d744:	4c ee       	ldi	r20, 0xEC	; 236
    d746:	6c ee       	ldi	r22, 0xEC	; 236
    d748:	80 e0       	ldi	r24, 0x00	; 0
    d74a:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(6 ,-20 ,-20  ,2 ,2);
    d74e:	02 e0       	ldi	r16, 0x02	; 2
    d750:	22 e0       	ldi	r18, 0x02	; 2
    d752:	4c ee       	ldi	r20, 0xEC	; 236
    d754:	6c ee       	ldi	r22, 0xEC	; 236
    d756:	86 e0       	ldi	r24, 0x06	; 6
    d758:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    d75c:	4f e2       	ldi	r20, 0x2F	; 47
    d75e:	53 e8       	ldi	r21, 0x83	; 131
    d760:	6a e0       	ldi	r22, 0x0A	; 10
    d762:	89 e0       	ldi	r24, 0x09	; 9
    d764:	0e 94 42 54 	call	0xa884	; 0xa884 <DrawMap>
FadeIn(0, true);
    d768:	61 e0       	ldi	r22, 0x01	; 1
    d76a:	80 e0       	ldi	r24, 0x00	; 0
    d76c:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>
time = 0;
    d770:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d774:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d778:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d77c:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
while ( time < 480 )
    d780:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <time>
    d784:	90 91 85 09 	lds	r25, 0x0985	; 0x800985 <time+0x1>
    d788:	a0 91 86 09 	lds	r26, 0x0986	; 0x800986 <time+0x2>
    d78c:	b0 91 87 09 	lds	r27, 0x0987	; 0x800987 <time+0x3>
    d790:	80 3e       	cpi	r24, 0xE0	; 224
    d792:	21 e0       	ldi	r18, 0x01	; 1
    d794:	92 07       	cpc	r25, r18
    d796:	a1 05       	cpc	r26, r1
    d798:	b1 05       	cpc	r27, r1
    d79a:	80 f4       	brcc	.+32     	; 0xd7bc <showcongratulation+0x8e>
{ time++;    
    d79c:	01 96       	adiw	r24, 0x01	; 1
    d79e:	a1 1d       	adc	r26, r1
    d7a0:	b1 1d       	adc	r27, r1
    d7a2:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <time>
    d7a6:	90 93 85 09 	sts	0x0985, r25	; 0x800985 <time+0x1>
    d7aa:	a0 93 86 09 	sts	0x0986, r26	; 0x800986 <time+0x2>
    d7ae:	b0 93 87 09 	sts	0x0987, r27	; 0x800987 <time+0x3>
WaitVsync(1);    
    d7b2:	81 e0       	ldi	r24, 0x01	; 1
    d7b4:	90 e0       	ldi	r25, 0x00	; 0
    d7b6:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    d7ba:	e2 cf       	rjmp	.-60     	; 0xd780 <showcongratulation+0x52>
};
 FadeOut(0, true);    
    d7bc:	61 e0       	ldi	r22, 0x01	; 1
    d7be:	80 e0       	ldi	r24, 0x00	; 0
};
    d7c0:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d7c2:	0c 94 e9 54 	jmp	0xa9d2	; 0xa9d2 <FadeOut>

0000d7c6 <main>:
};
int main(){ 
ClearVram();    
    d7c6:	0e 94 9e 47 	call	0x8f3c	; 0x8f3c <ClearVram>
FadeOut(0, true);
    d7ca:	61 e0       	ldi	r22, 0x01	; 1
    d7cc:	80 e0       	ldi	r24, 0x00	; 0
    d7ce:	0e 94 e9 54 	call	0xa9d2	; 0xa9d2 <FadeOut>
SetTileTable(uMTiles);
    d7d2:	87 ea       	ldi	r24, 0xA7	; 167
    d7d4:	95 e5       	ldi	r25, 0x55	; 85
    d7d6:	0e 94 b9 47 	call	0x8f72	; 0x8f72 <SetTileTable>
SetSpritesTileTable(uMSprites);
    d7da:	83 e3       	ldi	r24, 0x33	; 51
    d7dc:	90 e4       	ldi	r25, 0x40	; 64
    d7de:	0e 94 99 47 	call	0x8f32	; 0x8f32 <SetSpritesTileTable>
InitMusicPlayer(patches);
    d7e2:	84 ec       	ldi	r24, 0xC4	; 196
    d7e4:	9e e3       	ldi	r25, 0x3E	; 62
    d7e6:	0e 94 23 49 	call	0x9246	; 0x9246 <InitMusicPlayer>
Screen.scrollY=0;  
    d7ea:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    d7ee:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    d7f2:	8e e1       	ldi	r24, 0x1E	; 30
    d7f4:	95 e5       	ldi	r25, 0x55	; 85
    d7f6:	0e 94 f3 47 	call	0x8fe6	; 0x8fe6 <SetUserPostVsyncCallback>
while(1)
{
introplaying = true; 
    d7fa:	d1 e0       	ldi	r29, 0x01	; 1
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    d7fc:	88 e0       	ldi	r24, 0x08	; 8
    d7fe:	e8 2e       	mov	r14, r24
    d800:	f1 2c       	mov	r15, r1
player.y = 191;
    d802:	9f eb       	ldi	r25, 0xBF	; 191
    d804:	c9 2e       	mov	r12, r25
    d806:	d1 2c       	mov	r13, r1
isplaying = true;
while (isplaying)
{

showgetready();
isplaying = true;
    d808:	c1 e0       	ldi	r28, 0x01	; 1
finished = false;
died = false;
timeisup = false;    
Levelx = 0;
scrolltiles = 0;
player2.x = 21;
    d80a:	25 e1       	ldi	r18, 0x15	; 21
    d80c:	82 2e       	mov	r8, r18
    d80e:	91 2c       	mov	r9, r1
player2.y = 191;
    d810:	3f eb       	ldi	r19, 0xBF	; 191
    d812:	a3 2e       	mov	r10, r19
    d814:	b1 2c       	mov	r11, r1
player.x = 8;
    d816:	48 e0       	ldi	r20, 0x08	; 8
    d818:	64 2e       	mov	r6, r20
    d81a:	71 2c       	mov	r7, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
introplaying = true; 
    d81c:	d0 93 6e 09 	sts	0x096E, r29	; 0x80096e <introplaying>
Levelx = 0;
    d820:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
scrolltiles = 0;
    d824:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
player.x = 8;
    d828:	f0 92 5e 09 	sts	0x095E, r15	; 0x80095e <player+0x1>
    d82c:	e0 92 5d 09 	sts	0x095D, r14	; 0x80095d <player>
player.y = 191;
    d830:	d0 92 60 09 	sts	0x0960, r13	; 0x800960 <player+0x3>
    d834:	c0 92 5f 09 	sts	0x095F, r12	; 0x80095f <player+0x2>
destX = 0;
    d838:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <destX>
level = 0;
    d83c:	10 92 81 09 	sts	0x0981, r1	; 0x800981 <level>
MoveSprite(6 , - 20 , -20 ,2 ,2);
    d840:	02 e0       	ldi	r16, 0x02	; 2
    d842:	22 e0       	ldi	r18, 0x02	; 2
    d844:	4c ee       	ldi	r20, 0xEC	; 236
    d846:	6c ee       	ldi	r22, 0xEC	; 236
    d848:	86 e0       	ldi	r24, 0x06	; 6
    d84a:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);  
    d84e:	03 e0       	ldi	r16, 0x03	; 3
    d850:	22 e0       	ldi	r18, 0x02	; 2
    d852:	4c ee       	ldi	r20, 0xEC	; 236
    d854:	6c ee       	ldi	r22, 0xEC	; 236
    d856:	80 e0       	ldi	r24, 0x00	; 0
    d858:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
while(introplaying) playintro();
    d85c:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <introplaying>
    d860:	88 23       	and	r24, r24
    d862:	19 f0       	breq	.+6      	; 0xd86a <main+0xa4>
    d864:	0e 94 06 69 	call	0xd20c	; 0xd20c <playintro>
    d868:	f9 cf       	rjmp	.-14     	; 0xd85c <main+0x96>
    
score = 0;
    d86a:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <score+0x1>
    d86e:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <score>
lives = 3; 
    d872:	83 e0       	ldi	r24, 0x03	; 3
    d874:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
level = startlevel;
    d878:	d0 93 81 09 	sts	0x0981, r29	; 0x800981 <level>
isplaying = true;
    d87c:	d0 93 de 09 	sts	0x09DE, r29	; 0x8009de <isplaying>
exitgame = false;
    d880:	10 92 83 09 	sts	0x0983, r1	; 0x800983 <exitgame>
Levelx = 0;
    d884:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
scrolltiles = 0;
    d888:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
player.x = 8;
    d88c:	f0 92 5e 09 	sts	0x095E, r15	; 0x80095e <player+0x1>
    d890:	e0 92 5d 09 	sts	0x095D, r14	; 0x80095d <player>
player.y = 191;
    d894:	d0 92 60 09 	sts	0x0960, r13	; 0x800960 <player+0x3>
    d898:	c0 92 5f 09 	sts	0x095F, r12	; 0x80095f <player+0x2>
destX = 0;
    d89c:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <destX>
score = 0;
StartSong(midisong);
    d8a0:	8b e6       	ldi	r24, 0x6B	; 107
    d8a2:	9a e3       	ldi	r25, 0x3A	; 58
    d8a4:	0e 94 3e 49 	call	0x927c	; 0x927c <StartSong>
MapSprite2(0 ,melli0 ,0);
MapSprite2(spriteInd ,man0 ,0);
MapSprite2(6 ,owl0 ,0);   
MoveSprite(6 , - 20 , -20 ,2 ,2);
MoveSprite(0 , - 20 , -20 ,2 ,3);    
leveltime = 99;
    d8a8:	13 e6       	ldi	r17, 0x63	; 99
player.x = 8;
player.y = 191;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    d8aa:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    d8ae:	88 23       	and	r24, r24
    d8b0:	09 f4       	brne	.+2      	; 0xd8b4 <main+0xee>
    d8b2:	0e c1       	rjmp	.+540    	; 0xdad0 <main+0x30a>
{
isplaying = true;
    d8b4:	d0 93 de 09 	sts	0x09DE, r29	; 0x8009de <isplaying>
while (isplaying)
    d8b8:	80 91 de 09 	lds	r24, 0x09DE	; 0x8009de <isplaying>
    d8bc:	88 23       	and	r24, r24
    d8be:	a9 f3       	breq	.-22     	; 0xd8aa <main+0xe4>
{

showgetready();
    d8c0:	0e 94 9e 6a 	call	0xd53c	; 0xd53c <showgetready>
isplaying = true;
    d8c4:	c0 93 de 09 	sts	0x09DE, r28	; 0x8009de <isplaying>
finished = false;
    d8c8:	10 92 dd 09 	sts	0x09DD, r1	; 0x8009dd <finished>
died = false;
    d8cc:	10 92 e3 09 	sts	0x09E3, r1	; 0x8009e3 <died>
timeisup = false;    
    d8d0:	10 92 51 09 	sts	0x0951, r1	; 0x800951 <timeisup>
Levelx = 0;
    d8d4:	10 92 e2 09 	sts	0x09E2, r1	; 0x8009e2 <Levelx>
scrolltiles = 0;
    d8d8:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
player2.x = 21;
    d8dc:	90 92 8a 09 	sts	0x098A, r9	; 0x80098a <player2+0x1>
    d8e0:	80 92 89 09 	sts	0x0989, r8	; 0x800989 <player2>
player2.y = 191;
    d8e4:	b0 92 8c 09 	sts	0x098C, r11	; 0x80098c <player2+0x3>
    d8e8:	a0 92 8b 09 	sts	0x098B, r10	; 0x80098b <player2+0x2>
player.x = 8;
    d8ec:	70 92 5e 09 	sts	0x095E, r7	; 0x80095e <player+0x1>
    d8f0:	60 92 5d 09 	sts	0x095D, r6	; 0x80095d <player>
player.y = 191;
    d8f4:	b0 92 60 09 	sts	0x0960, r11	; 0x800960 <player+0x3>
    d8f8:	a0 92 5f 09 	sts	0x095F, r10	; 0x80095f <player+0x2>
destX = 0;
    d8fc:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <destX>
player2.touchground = true;
    d900:	c0 93 93 09 	sts	0x0993, r28	; 0x800993 <player2+0xa>
player.touchground = true;
    d904:	c0 93 67 09 	sts	0x0967, r28	; 0x800967 <player+0xa>
player.jumping = false;
    d908:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0xd>
player.jumpreleased = true;
    d90c:	c0 93 6b 09 	sts	0x096B, r28	; 0x80096b <player+0xe>
initlevel();
    d910:	0e 94 bd 57 	call	0xaf7a	; 0xaf7a <initlevel>
initmonster();
    d914:	0e 94 97 68 	call	0xd12e	; 0xd12e <initmonster>
MapSprite2(0 ,melli0 ,0);
    d918:	40 e0       	ldi	r20, 0x00	; 0
    d91a:	6f e9       	ldi	r22, 0x9F	; 159
    d91c:	75 e5       	ldi	r23, 0x55	; 85
    d91e:	80 e0       	ldi	r24, 0x00	; 0
    d920:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MapSprite2(spriteInd ,man0 ,0);
    d924:	40 e0       	ldi	r20, 0x00	; 0
    d926:	63 e5       	ldi	r22, 0x53	; 83
    d928:	75 e5       	ldi	r23, 0x55	; 85
    d92a:	8a e0       	ldi	r24, 0x0A	; 10
    d92c:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MapSprite2(6 ,owl0 ,0);   
    d930:	40 e0       	ldi	r20, 0x00	; 0
    d932:	69 e7       	ldi	r22, 0x79	; 121
    d934:	75 e5       	ldi	r23, 0x55	; 85
    d936:	86 e0       	ldi	r24, 0x06	; 6
    d938:	0e 94 c8 53 	call	0xa790	; 0xa790 <MapSprite2>
MoveSprite(6 , - 20 , -20 ,2 ,2);
    d93c:	02 e0       	ldi	r16, 0x02	; 2
    d93e:	22 e0       	ldi	r18, 0x02	; 2
    d940:	4c ee       	ldi	r20, 0xEC	; 236
    d942:	6c ee       	ldi	r22, 0xEC	; 236
    d944:	86 e0       	ldi	r24, 0x06	; 6
    d946:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);    
    d94a:	03 e0       	ldi	r16, 0x03	; 3
    d94c:	22 e0       	ldi	r18, 0x02	; 2
    d94e:	4c ee       	ldi	r20, 0xEC	; 236
    d950:	6c ee       	ldi	r22, 0xEC	; 236
    d952:	80 e0       	ldi	r24, 0x00	; 0
    d954:	0e 94 15 54 	call	0xa82a	; 0xa82a <MoveSprite>
leveltime = 99;
    d958:	10 93 df 09 	sts	0x09DF, r17	; 0x8009df <leveltime>
time = 0;
    d95c:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <time>
    d960:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <time+0x1>
    d964:	10 92 86 09 	sts	0x0986, r1	; 0x800986 <time+0x2>
    d968:	10 92 87 09 	sts	0x0987, r1	; 0x800987 <time+0x3>
bonus = 0;
    d96c:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    d970:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
scrolltiles = 0;
    d974:	10 92 e9 09 	sts	0x09E9, r1	; 0x8009e9 <scrolltiles>
Screen.scrollX = 0;
    d978:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
setheadline();    
    d97c:	0e 94 5d 5b 	call	0xb6ba	; 0xb6ba <setheadline>
drawlevel(Levelx);
    d980:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <Levelx>
    d984:	90 e0       	ldi	r25, 0x00	; 0
    d986:	0e 94 79 65 	call	0xcaf2	; 0xcaf2 <drawlevel>
printheadline();   
    d98a:	0e 94 04 58 	call	0xb008	; 0xb008 <printheadline>
FadeIn(1, true);   
    d98e:	61 e0       	ldi	r22, 0x01	; 1
    d990:	81 e0       	ldi	r24, 0x01	; 1
    d992:	0e 94 dd 54 	call	0xa9ba	; 0xa9ba <FadeIn>

play = true;
    d996:	c0 93 82 09 	sts	0x0982, r28	; 0x800982 <play>

while(play)
    d99a:	80 91 82 09 	lds	r24, 0x0982	; 0x800982 <play>
    d99e:	88 23       	and	r24, r24
    d9a0:	09 f4       	brne	.+2      	; 0xd9a4 <main+0x1de>
    d9a2:	80 c0       	rjmp	.+256    	; 0xdaa4 <main+0x2de>
{
    
moveplayer(); 
    d9a4:	0e 94 53 5f 	call	0xbea6	; 0xbea6 <moveplayer>
moveplayer2();
    d9a8:	0e 94 ee 61 	call	0xc3dc	; 0xc3dc <moveplayer2>
movemonster();
    d9ac:	0e 94 01 5c 	call	0xb802	; 0xb802 <movemonster>
WaitVsync(1); 
    d9b0:	81 e0       	ldi	r24, 0x01	; 1
    d9b2:	90 e0       	ldi	r25, 0x00	; 0
    d9b4:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
drawmonster();   
    d9b8:	0e 94 6a 5b 	call	0xb6d4	; 0xb6d4 <drawmonster>
movelevel();
    d9bc:	0e 94 a0 68 	call	0xd140	; 0xd140 <movelevel>
drawplayer(); 
    d9c0:	0e 94 32 55 	call	0xaa64	; 0xaa64 <drawplayer>
drawplayer2(); 
    d9c4:	0e 94 de 55 	call	0xabbc	; 0xabbc <drawplayer2>
//drawplayer();   

//movemonster();
//drawmonster();    

updatetime(time);
    d9c8:	60 91 84 09 	lds	r22, 0x0984	; 0x800984 <time>
    d9cc:	70 91 85 09 	lds	r23, 0x0985	; 0x800985 <time+0x1>
    d9d0:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <time+0x2>
    d9d4:	90 91 87 09 	lds	r25, 0x0987	; 0x800987 <time+0x3>
    d9d8:	0e 94 d1 68 	call	0xd1a2	; 0xd1a2 <updatetime>
    if ( player.y > 240) 
    d9dc:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <player+0x2>
    d9e0:	90 91 60 09 	lds	r25, 0x0960	; 0x800960 <player+0x3>
    d9e4:	81 3f       	cpi	r24, 0xF1	; 241
    d9e6:	91 05       	cpc	r25, r1
    d9e8:	c4 f0       	brlt	.+48     	; 0xda1a <main+0x254>
    {
    died = true;
    d9ea:	c0 93 e3 09 	sts	0x09E3, r28	; 0x8009e3 <died>
    lives--;    
    d9ee:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    d9f2:	81 50       	subi	r24, 0x01	; 1
    d9f4:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    isplaying = false; 
    d9f8:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    d9fc:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    bonus = 0; 
    da00:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    da04:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    TriggerFx(9,0xff,true);
    da08:	41 e0       	ldi	r20, 0x01	; 1
    da0a:	6f ef       	ldi	r22, 0xFF	; 255
    da0c:	89 e0       	ldi	r24, 0x09	; 9
    da0e:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240); 
    da12:	80 ef       	ldi	r24, 0xF0	; 240
    da14:	90 e0       	ldi	r25, 0x00	; 0
    da16:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>

    };

    if (timeisup)
    da1a:	80 91 51 09 	lds	r24, 0x0951	; 0x800951 <timeisup>
    da1e:	88 23       	and	r24, r24
    da20:	19 f1       	breq	.+70     	; 0xda68 <main+0x2a2>
    {
    printtileint( 26 ,0,leveltime,2);
    da22:	40 91 df 09 	lds	r20, 0x09DF	; 0x8009df <leveltime>
    da26:	50 e0       	ldi	r21, 0x00	; 0
    da28:	22 e0       	ldi	r18, 0x02	; 2
    da2a:	30 e0       	ldi	r19, 0x00	; 0
    da2c:	60 e0       	ldi	r22, 0x00	; 0
    da2e:	70 e0       	ldi	r23, 0x00	; 0
    da30:	8a e1       	ldi	r24, 0x1A	; 26
    da32:	90 e0       	ldi	r25, 0x00	; 0
    da34:	0e 94 8b 56 	call	0xad16	; 0xad16 <printtileint>
    TriggerFx(9,0xff,true);
    da38:	41 e0       	ldi	r20, 0x01	; 1
    da3a:	6f ef       	ldi	r22, 0xFF	; 255
    da3c:	89 e0       	ldi	r24, 0x09	; 9
    da3e:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240);   
    da42:	80 ef       	ldi	r24, 0xF0	; 240
    da44:	90 e0       	ldi	r25, 0x00	; 0
    da46:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    showtimesup();
    da4a:	0e 94 48 6b 	call	0xd690	; 0xd690 <showtimesup>
    lives--;    
    da4e:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    da52:	81 50       	subi	r24, 0x01	; 1
    da54:	80 93 9a 09 	sts	0x099A, r24	; 0x80099a <lives>
    bonus = 0;  
    da58:	10 92 dc 09 	sts	0x09DC, r1	; 0x8009dc <bonus+0x1>
    da5c:	10 92 db 09 	sts	0x09DB, r1	; 0x8009db <bonus>
    isplaying = false; 
    da60:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    da64:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    };
      if (finished)
    da68:	80 91 dd 09 	lds	r24, 0x09DD	; 0x8009dd <finished>
    da6c:	88 23       	and	r24, r24
    da6e:	09 f4       	brne	.+2      	; 0xda72 <main+0x2ac>
    da70:	94 cf       	rjmp	.-216    	; 0xd99a <main+0x1d4>
    {
    TriggerFx(10,0xff,true);      
    da72:	41 e0       	ldi	r20, 0x01	; 1
    da74:	6f ef       	ldi	r22, 0xFF	; 255
    da76:	8a e0       	ldi	r24, 0x0A	; 10
    da78:	0e 94 1b 4a 	call	0x9436	; 0x9436 <TriggerFx>
    WaitVsync(240);   
    da7c:	80 ef       	ldi	r24, 0xF0	; 240
    da7e:	90 e0       	ldi	r25, 0x00	; 0
    da80:	0e 94 81 54 	call	0xa902	; 0xa902 <WaitVsync>
    level++;    
    da84:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <level>
    da88:	8f 5f       	subi	r24, 0xFF	; 255
    da8a:	80 93 81 09 	sts	0x0981, r24	; 0x800981 <level>
    StartSong(midisong);
    da8e:	8b e6       	ldi	r24, 0x6B	; 107
    da90:	9a e3       	ldi	r25, 0x3A	; 58
    da92:	0e 94 3e 49 	call	0x927c	; 0x927c <StartSong>
    isplaying = false; 
    da96:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    da9a:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    finished = false;
    da9e:	10 92 dd 09 	sts	0x09DD, r1	; 0x8009dd <finished>
    daa2:	7b cf       	rjmp	.-266    	; 0xd99a <main+0x1d4>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    daa4:	80 91 9a 09 	lds	r24, 0x099A	; 0x80099a <lives>
    daa8:	81 11       	cpse	r24, r1
    daaa:	02 c0       	rjmp	.+4      	; 0xdab0 <main+0x2ea>
    daac:	0e 94 f9 6a 	call	0xd5f2	; 0xd5f2 <showgameover>

if  (level > maxlevel  ) 
    dab0:	80 91 81 09 	lds	r24, 0x0981	; 0x800981 <level>
    dab4:	8a 30       	cpi	r24, 0x0A	; 10
    dab6:	08 f4       	brcc	.+2      	; 0xdaba <main+0x2f4>
    dab8:	ff ce       	rjmp	.-514    	; 0xd8b8 <main+0xf2>
{   showcongratulation();
    daba:	0e 94 97 6b 	call	0xd72e	; 0xd72e <showcongratulation>
    isplaying = false; 
    dabe:	10 92 de 09 	sts	0x09DE, r1	; 0x8009de <isplaying>
    play = false;
    dac2:	10 92 82 09 	sts	0x0982, r1	; 0x800982 <play>
    finished = false;
    dac6:	10 92 dd 09 	sts	0x09DD, r1	; 0x8009dd <finished>
    lives = 0;
    daca:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <lives>
    dace:	f4 ce       	rjmp	.-536    	; 0xd8b8 <main+0xf2>
 
};
};
};
StopSong();
    dad0:	0e 94 67 49 	call	0x92ce	; 0x92ce <StopSong>

    
};
    dad4:	a3 ce       	rjmp	.-698    	; 0xd81c <main+0x56>

0000dad6 <__udivmodhi4>:
    dad6:	aa 1b       	sub	r26, r26
    dad8:	bb 1b       	sub	r27, r27
    dada:	51 e1       	ldi	r21, 0x11	; 17
    dadc:	07 c0       	rjmp	.+14     	; 0xdaec <__udivmodhi4_ep>

0000dade <__udivmodhi4_loop>:
    dade:	aa 1f       	adc	r26, r26
    dae0:	bb 1f       	adc	r27, r27
    dae2:	a6 17       	cp	r26, r22
    dae4:	b7 07       	cpc	r27, r23
    dae6:	10 f0       	brcs	.+4      	; 0xdaec <__udivmodhi4_ep>
    dae8:	a6 1b       	sub	r26, r22
    daea:	b7 0b       	sbc	r27, r23

0000daec <__udivmodhi4_ep>:
    daec:	88 1f       	adc	r24, r24
    daee:	99 1f       	adc	r25, r25
    daf0:	5a 95       	dec	r21
    daf2:	a9 f7       	brne	.-22     	; 0xdade <__udivmodhi4_loop>
    daf4:	80 95       	com	r24
    daf6:	90 95       	com	r25
    daf8:	bc 01       	movw	r22, r24
    dafa:	cd 01       	movw	r24, r26
    dafc:	08 95       	ret

0000dafe <__divmodhi4>:
    dafe:	97 fb       	bst	r25, 7
    db00:	07 2e       	mov	r0, r23
    db02:	16 f4       	brtc	.+4      	; 0xdb08 <__divmodhi4+0xa>
    db04:	00 94       	com	r0
    db06:	07 d0       	rcall	.+14     	; 0xdb16 <__divmodhi4_neg1>
    db08:	77 fd       	sbrc	r23, 7
    db0a:	09 d0       	rcall	.+18     	; 0xdb1e <__divmodhi4_neg2>
    db0c:	0e 94 6b 6d 	call	0xdad6	; 0xdad6 <__udivmodhi4>
    db10:	07 fc       	sbrc	r0, 7
    db12:	05 d0       	rcall	.+10     	; 0xdb1e <__divmodhi4_neg2>
    db14:	3e f4       	brtc	.+14     	; 0xdb24 <__divmodhi4_exit>

0000db16 <__divmodhi4_neg1>:
    db16:	90 95       	com	r25
    db18:	81 95       	neg	r24
    db1a:	9f 4f       	sbci	r25, 0xFF	; 255
    db1c:	08 95       	ret

0000db1e <__divmodhi4_neg2>:
    db1e:	70 95       	com	r23
    db20:	61 95       	neg	r22
    db22:	7f 4f       	sbci	r23, 0xFF	; 255

0000db24 <__divmodhi4_exit>:
    db24:	08 95       	ret

0000db26 <__udivmodsi4>:
    db26:	a1 e2       	ldi	r26, 0x21	; 33
    db28:	1a 2e       	mov	r1, r26
    db2a:	aa 1b       	sub	r26, r26
    db2c:	bb 1b       	sub	r27, r27
    db2e:	fd 01       	movw	r30, r26
    db30:	0d c0       	rjmp	.+26     	; 0xdb4c <__udivmodsi4_ep>

0000db32 <__udivmodsi4_loop>:
    db32:	aa 1f       	adc	r26, r26
    db34:	bb 1f       	adc	r27, r27
    db36:	ee 1f       	adc	r30, r30
    db38:	ff 1f       	adc	r31, r31
    db3a:	a2 17       	cp	r26, r18
    db3c:	b3 07       	cpc	r27, r19
    db3e:	e4 07       	cpc	r30, r20
    db40:	f5 07       	cpc	r31, r21
    db42:	20 f0       	brcs	.+8      	; 0xdb4c <__udivmodsi4_ep>
    db44:	a2 1b       	sub	r26, r18
    db46:	b3 0b       	sbc	r27, r19
    db48:	e4 0b       	sbc	r30, r20
    db4a:	f5 0b       	sbc	r31, r21

0000db4c <__udivmodsi4_ep>:
    db4c:	66 1f       	adc	r22, r22
    db4e:	77 1f       	adc	r23, r23
    db50:	88 1f       	adc	r24, r24
    db52:	99 1f       	adc	r25, r25
    db54:	1a 94       	dec	r1
    db56:	69 f7       	brne	.-38     	; 0xdb32 <__udivmodsi4_loop>
    db58:	60 95       	com	r22
    db5a:	70 95       	com	r23
    db5c:	80 95       	com	r24
    db5e:	90 95       	com	r25
    db60:	9b 01       	movw	r18, r22
    db62:	ac 01       	movw	r20, r24
    db64:	bd 01       	movw	r22, r26
    db66:	cf 01       	movw	r24, r30
    db68:	08 95       	ret

0000db6a <__itoa_ncheck>:
    db6a:	bb 27       	eor	r27, r27
    db6c:	4a 30       	cpi	r20, 0x0A	; 10
    db6e:	31 f4       	brne	.+12     	; 0xdb7c <__itoa_ncheck+0x12>
    db70:	99 23       	and	r25, r25
    db72:	22 f4       	brpl	.+8      	; 0xdb7c <__itoa_ncheck+0x12>
    db74:	bd e2       	ldi	r27, 0x2D	; 45
    db76:	90 95       	com	r25
    db78:	81 95       	neg	r24
    db7a:	9f 4f       	sbci	r25, 0xFF	; 255
    db7c:	0c 94 c1 6d 	jmp	0xdb82	; 0xdb82 <__utoa_common>

0000db80 <__utoa_ncheck>:
    db80:	bb 27       	eor	r27, r27

0000db82 <__utoa_common>:
    db82:	fb 01       	movw	r30, r22
    db84:	55 27       	eor	r21, r21
    db86:	aa 27       	eor	r26, r26
    db88:	88 0f       	add	r24, r24
    db8a:	99 1f       	adc	r25, r25
    db8c:	aa 1f       	adc	r26, r26
    db8e:	a4 17       	cp	r26, r20
    db90:	10 f0       	brcs	.+4      	; 0xdb96 <__utoa_common+0x14>
    db92:	a4 1b       	sub	r26, r20
    db94:	83 95       	inc	r24
    db96:	50 51       	subi	r21, 0x10	; 16
    db98:	b9 f7       	brne	.-18     	; 0xdb88 <__utoa_common+0x6>
    db9a:	a0 5d       	subi	r26, 0xD0	; 208
    db9c:	aa 33       	cpi	r26, 0x3A	; 58
    db9e:	08 f0       	brcs	.+2      	; 0xdba2 <__utoa_common+0x20>
    dba0:	a9 5d       	subi	r26, 0xD9	; 217
    dba2:	a1 93       	st	Z+, r26
    dba4:	00 97       	sbiw	r24, 0x00	; 0
    dba6:	79 f7       	brne	.-34     	; 0xdb86 <__utoa_common+0x4>
    dba8:	b1 11       	cpse	r27, r1
    dbaa:	b1 93       	st	Z+, r27
    dbac:	11 92       	st	Z+, r1
    dbae:	cb 01       	movw	r24, r22
    dbb0:	0c 94 da 6d 	jmp	0xdbb4	; 0xdbb4 <strrev>

0000dbb4 <strrev>:
    dbb4:	dc 01       	movw	r26, r24
    dbb6:	fc 01       	movw	r30, r24
    dbb8:	67 2f       	mov	r22, r23
    dbba:	71 91       	ld	r23, Z+
    dbbc:	77 23       	and	r23, r23
    dbbe:	e1 f7       	brne	.-8      	; 0xdbb8 <strrev+0x4>
    dbc0:	32 97       	sbiw	r30, 0x02	; 2
    dbc2:	04 c0       	rjmp	.+8      	; 0xdbcc <strrev+0x18>
    dbc4:	7c 91       	ld	r23, X
    dbc6:	6d 93       	st	X+, r22
    dbc8:	70 83       	st	Z, r23
    dbca:	62 91       	ld	r22, -Z
    dbcc:	ae 17       	cp	r26, r30
    dbce:	bf 07       	cpc	r27, r31
    dbd0:	c8 f3       	brcs	.-14     	; 0xdbc4 <strrev+0x10>
    dbd2:	08 95       	ret

0000dbd4 <_exit>:
    dbd4:	f8 94       	cli

0000dbd6 <__stop_program>:
    dbd6:	ff cf       	rjmp	.-2      	; 0xdbd6 <__stop_program>
