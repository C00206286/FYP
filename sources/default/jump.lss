
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000d49e  0000d59e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000d49e  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000009c2  00800102  00800102  0000d5a0  2**1
                  ALLOC
  3 .noinit       0000043c  00800ac4  00800ac4  0000d600  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000da3c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000da50  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004e0  00000000  00000000  0000da90  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007cdb  00000000  00000000  0000df70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013ef  00000000  00000000  00015c4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00005b3d  00000000  00000000  0001703a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c98  00000000  00000000  0001cb78  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000158c  00000000  00000000  0001d810  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000051dc  00000000  00000000  0001ed9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000538  00000000  00000000  00023f78  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b0 3c 	jmp	0x7960	; 0x7960 <__ctors_end>
       4:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
       8:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
       c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      10:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      14:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      18:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      1c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      20:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      24:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      28:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      2c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      30:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      34:	0c 94 66 40 	jmp	0x80cc	; 0x80cc <__vector_13>
      38:	0c 94 a5 40 	jmp	0x814a	; 0x814a <__vector_14>
      3c:	0c 94 d1 3d 	jmp	0x7ba2	; 0x7ba2 <__vector_15>
      40:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      44:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      48:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      4c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      50:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      54:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      58:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      5c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      60:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      64:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      68:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>
      6c:	0c 94 1b 3d 	jmp	0x7a36	; 0x7a36 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	e4 42 e7 42 43 43 47 43 4e 43 ef 42 f4 42 f9 42     .B.BCCGCNC.B.B.B
      d2:	56 43 fc 42 ff 42 02 43 3d 43 40 43 66 43           VC.B.B.C=C@CfC

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     98b:	00 00 00 23 24 00 00 00 00 00 00 00 25 26 00 00     ...#$.......%&..
     99b:	00 00 00 00 00 00 00 25 26 00 00 00 00 00 00 00     .......%&.......
     9ab:	00 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bc3:	29 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00     )...............
     bd3:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 32 00 00 00 00 00 00     '........2......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e77:	00 00 00 23 24 00 00 00 00 00 00 00 25 26 00 00     ...#$.......%&..
     e87:	00 00 00 00 00 00 00 25 26 00 00 00 00 00 00 00     .......%&.......
     e97:	00 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1363:	00 00 00 23 24 00 00 00 00 00 00 00 25 26 00 00     ...#$.......%&..
    1373:	00 00 00 00 00 00 00 25 26 00 00 00 00 00 00 00     .......%&.......
    1383:	00 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
	...
    16e7:	19 1a 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
	...
    173f:	00 00 1b 1c 01 01 01 05 00 00 00 00 00 00 00 00     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    1853:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 03     ..%&............
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19e3:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 00 00 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 00 00 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	00 00 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 00 00     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 00 00 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c17:	00 00 04 04 04 00 00 00 00 29 00 00 00 00 00 04     .........)......
    1c27:	04 04 04 04 04 04 0d 0e 01 01 01 01 01 01 01 01     ................
    1c37:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c47:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c57:	05 00 00 00 00 00 00 00 00 00 06 05 00 06 01 01     ................
    1c67:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 05     ................
    1c77:	00 00 00 08 00 00 06 01 01 01 01 01 01 01 01 01     ................
    1c87:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1eb3:	00 00 03 00 00 00 00 00 00 00 00 03 03 03 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f43:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1f73:	15 00 00 00 00 00 00 00 00 00 00 00 00 04 04 00     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1fbf:	00 00 00 04 04 04 00 00 00 00 00 00 00 04 04 04     ................
	...
    1fdb:	00 00 04 27 27 27 27 27 27 27 27 27 27 04 00 00     ...''''''''''...
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
	...
    2013:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2023:	15 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 04 03 03 04 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    206b:	00 00 00 04 00 00 00 00 00 04 00 00 00 00 00 00     ................
    207b:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    208b:	00 00 04 00 00 00 04 00 00 00 00 00 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 00 00 00 00 04 15 00     ................
    20cb:	00 00 15 04 00 15 15 15 00 00 04 04 04 00 00 00     ................
    20db:	00 15 00 00 00 15 00 00 00 00 00 00 04 00 00 00     ................
    20eb:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	00 00 00 00 00 00 1b 1c 04 04 04 04 04 04 00 04     ................
    2123:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    2133:	04 04 04 04 04 04 04 04 04 04 04 00 04 04 04 04     ................
    2143:	04 04 04 15 15 15 15 15 15 15 15 15 15 04 04 04     ................
    2153:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    2163:	04 00 08 00 08 00 04 04 04 00 04 04 04 04 04 04     ................
    2173:	04 04 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     ..>>>>>>>>>>>>>>
    2183:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    2193:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21a3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21b3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21c3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e                 >>>>>>>>>>>>

000021cf <level4>:
	...
    222b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    241b:	00 02 02 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    256b:	32 00 00 00 00 00 00 00 00 0f 10 00 00 00 00 00     2...............
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 00 00     ................
	...
    25c3:	00 00 02 00 00 00 00 00 00 00 00 0d 0e 00 00 00     ................
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    2717:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0c 0d 27 27 27 27 27 27 27 27 27     .......'''''''''
    29b7:	27 27 27 0c 0d 00 00 00 00 00 00 00 00 00 00 00     '''.............
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0c 0d 00 00 00 00 00 00 00     ................
    2a0f:	00 00 00 00 00 0c 0d 00 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0c 0d 00 00 00 00 00 00 00 00 00 00 00 00 0c     ................
    2a6f:	0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0c 0d 00 00 00 00 00 00 00 00 00 00 00     ................
    2ac7:	00 0c 0d 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 00 00 00 00 00 00 00 00 00 06     ................
    2b23:	05 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bff:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
    2c0f:	00 00 00 00 00 00 00 25 26 00 00 00 00 00 00 00     .......%&.......
    2c1f:	28 28 28 15 28 00 00 00 00 00 00 00 00 00 00 00     (((.(...........
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
    2c47:	00 00 00 00 00 15 00 00 00 00 00 00 25 26 00 00     ............%&..
    2c57:	00 00 00 00 00 25 26 00 00 00 00 00 00 23 24 00     .....%&......#$.
	...
    2c77:	00 00 28 28 28 15 28 00 00 00 00 00 00 00 00 00     ..(((.(.........
    2c87:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    2ca3:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
    2ccb:	00 00 00 00 00 00 00 28 28 28 28 15 28 00 00 00     .......((((.(...
    2cdb:	00 00 00 00 00 00 25 26 00 00 00 00 00 00 00 00     ......%&........
	...
    2cff:	00 15 00 00 00 00 00 00 00 00 00 00 23 24 00 00     ............#$..
	...
    2d2b:	00 28 28 28 28 15 28 00 00 00 00 00 00 00 00 00     .((((.(.........
	...
    2d57:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 25 26     ..............%&
	...
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
    2d83:	00 00 28 28 28 28 28 15 28 00 00 00 00 00 00 00     ..(((((.(.......
	...
    2db3:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	28 28 28 28 28 15 28 00 00 00 00 29 29 00 00 00     (((((.(....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
    2e0b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 28 28 28 28 04 28 15 28 00 00 00 00 02 02 00     .((((.(.(.......
	...
    2e67:	32 15 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     2...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 28 28 28 04 04     ...2.......(((..
    2e97:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 28 28 04     .............((.
    2eef:	04 04 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 15 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f43:	00 00 00 28 04 04 04 04 28 15 28 00 02 02 02 02     ...(....(.(.....
    2f53:	02 02 00 00 00 00 00 00 00 00 00 29 29 00 00 00     ...........))...
	...
    2f6f:	00 04 04 04 04 04 04 15 00 00 00 00 00 00 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f9b:	00 00 00 04 04 04 04 04 04 04 28 15 28 00 00 00     ..........(.(...
	...
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 15 00 00 00 00 00 00     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 15 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
	...
    30ef:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3117:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 23     ..(.(..........#
    3127:	24 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     $...............
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 28 15 28 00     %&..........(.(.
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3227:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    327f:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    32bb:	00 32 00 02 03 02 00 00 00 00 00 00 00 00 00 00     .2..............
	...
    32d3:	00 00 00 29 00 00 00 28 28 15 28 28 00 00 00 00     ...)...((.((....
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    332f:	02 02 02 00 00 28 28 15 28 28 00 00 00 00 00 00     .....((.((......
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    338b:	00 00 00 28 28 15 28 28 00 00 00 00 00 00 00 00     ...((.((........
	...
    33a7:	04 04 04 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    33cb:	02 03 02 03 03 02 00 00 00 00 00 00 00 00 00 00     ................
	...
    33e7:	28 28 28 15 28 28 28 00 00 00 00 00 03 02 02 03     (((.(((.........
    33f7:	00 02 00 00 00 00 00 00 00 04 04 04 04 00 00 00     ................
    3407:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
	...
    343f:	00 00 28 28 28 15 28 28 28 00 00 00 00 00 00 00     ..(((.(((.......
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
	...
    346f:	19 1a 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    349b:	28 28 28 15 28 28 28 00 00 00 00 00 00 00 00 00     (((.(((.........
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 15 00 00 00 00 00 00 00 00     ...#$...........
	...
    35a3:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    35bb:	00 00 28 28 28 15 15 28 28 28 00 00 00 00 00 00     ..(((..(((......
    35cb:	00 00 00 00 23 24 00 00 00 00 00 00 00 00 00 00     ....#$..........
    35db:	00 00 00 00 04 04 04 00 00 25 26 00 00 15 00 00     .........%&.....
	...
    35fb:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
    360b:	00 23 00 00 00 00 00 00 00 00 00 00 28 28 28 15     .#..........(((.
    361b:	15 28 28 28 00 00 00 00 00 00 00 00 00 00 25 26     .(((..........%&
	...
    3637:	00 00 04 00 00 04 00 04 00 00 04 15 04 00 00 00     ................
    3647:	00 04 00 00 00 00 32 00 00 00 00 00 00 00 00 00     ......2.........
    3657:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    366f:	00 28 28 28 28 15 15 28 28 28 28 00 00 00 23 24     .((((..((((...#$
	...
    3693:	04 00 00 04 00 04 00 00 04 15 04 04 00 00 00 04     ................
	...
    36af:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    36c7:	00 00 00 28 28 28 28 15 15 28 28 28 28 00 00 00     ...((((..((((...
    36d7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
    36e7:	00 00 00 00 00 00 04 00 04 00 00 04 00 00 04 15     ................
    36f7:	04 00 04 00 00 04 00 00 00 00 00 00 00 00 00 00     ................
    3707:	00 00 00 00 28 15 28 00 00 00 00 00 00 00 00 00     ....(.(.........
	...
    3723:	28 28 28 28 28 15 15 28 28 28 28 28 00 00 00 00     (((((..(((((....
	...
    373b:	00 00 25 26 00 00 00 00 00 00 00 00 04 04 00 00     ..%&............
    374b:	00 04 00 00 04 15 04 00 00 04 00 04 00 00 00 00     ................
	...
    3763:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    377b:	00 00 28 28 28 28 28 15 15 28 28 28 28 28 00 00     ..(((((..(((((..
	...
    379f:	00 00 04 00 04 00 00 04 00 00 04 15 04 00 00 00     ................
    37af:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    37bf:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    37cf:	00 00 00 00 00 00 00 28 28 28 28 28 28 15 15 28     .......((((((..(
    37df:	28 28 28 28 28 00 00 00 00 00 00 00 00 00 00 00     (((((...........
	...
    37fb:	04 00 00 04 00 04 04 04 04 15 04 00 00 00 00 04     ................
    380b:	00 00 03 00 00 00 00 00 00 00 00 00 03 00 28 15     ..............(.
    381b:	28 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     (...............
    382b:	00 00 00 00 00 28 28 28 28 28 28 15 15 28 28 28     .....((((((..(((
    383b:	28 28 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (((.............
	...
    385b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3873:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    3883:	00 00 00 00 00 00 28 28 28 28 28 28 28 15 15 28     ......(((((((..(
    3893:	28 28 28 28 28 28 00 00 00 00 00 00 00 00 00 00     ((((((..........
	...
    38b7:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    38c7:	00 00 00 00 00 00 28 15 28 00 00 00 00 00 00 00     ......(.(.......
	...
    38e3:	28 28 28 28 28 28 28 15 15 28 28 28 28 28 28 28     (((((((..(((((((
	...
    390f:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3927:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    3937:	00 00 00 00 00 00 28 28 28 28 28 28 28 15 15 28     ......(((((((..(
    3947:	28 28 28 28 28 28 00 00 00 00 00 00 00 00 00 00     ((((((..........
    3957:	00 00 00 00 19 1a 00 00 00 00 00 00 00 00 00 00     ................
    3967:	00 00 00 00 00 15 00 00 00 00 00 00 00 00 00 00     ................
	...
    397f:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    3997:	28 28 28 28 28 28 28 15 15 28 28 28 28 28 28 28     (((((((..(((((((
    39a7:	29 29 29 29 00 00 00 00 00 00 00 00 00 00 1b 1c     ))))............
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4043:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4053:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 00 00 00     ..??????..???...
    4063:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    4073:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4083:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4093:	3f 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 3f 00 fe     ??????...?????..
    40a3:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f 00     ???????.???????.
    40b3:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    40c3:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    40d3:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    40e3:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    40f3:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4103:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4113:	00 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 00 00 00 fe     .?????..????....
    4123:	3f 3f 00 00 fe fe fe fe 00 00 fe fe fe fe fe fe     ??..............
    4133:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4143:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4153:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    4163:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00     .???????.??????.
    4173:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4183:	3f 3f 3f 3f 00 fe fe fe 00 3f 3f 00 fe fe fe fe     ????.....??.....
    4193:	00 3f 00 fe fe fe fe fe 3f 00 fe fe fe fe fe fe     .?......?.......
    41a3:	00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41b3:	fe fe fe fe fe fe fe 07 fe fe fe fe fe 07 07 07     ................
    41c3:	fe fe fe fe 07 07 07 07 fe fe fe 07 07 07 07 07     ................
    41d3:	fe fe 07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0     ................
    41e3:	fe fe 07 07 ff ff e0 e0 fe 07 07 07 ff ff ff ff     ................
    41f3:	07 fe fe fe fe fe fe fe 07 07 07 fe fe fe fe fe     ................
    4203:	07 07 07 07 fe fe fe fe 07 07 07 07 07 fe fe fe     ................
    4213:	07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0 fe fe     ................
    4223:	07 07 ff ff e0 e0 fe fe 07 07 ff ff ff ff 07 fe     ................
    4233:	fe fe fe fe fe fe fe c9 fe fe fe fe fe c9 c9 c9     ................
    4243:	fe fe fe fe c9 c9 c9 c9 fe fe fe c9 c9 c9 c9 c9     ................
    4253:	fe fe c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9     ................
    4263:	fe fe c9 c9 c9 ff ff c9 fe c9 c9 c9 c9 ff ff c9     ................
    4273:	c9 fe fe fe fe fe fe fe c9 c9 c9 fe fe fe fe fe     ................
    4283:	c9 c9 c9 c9 fe fe fe fe c9 c9 c9 c9 c9 fe fe fe     ................
    4293:	c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9 fe fe     ................
    42a3:	c9 ff ff c9 c9 c9 fe fe c9 ff ff c9 c9 c9 c9 fe     ................
    42b3:	fe fe fe fe fe fe 2a 2a fe fe fe fe fe fe fe 2a     ......**.......*
    42c3:	fe fe fe 2a 2a 2a 2a 2a fe fe 05 2a 2a 2a 2a 2a     ...*****...*****
    42d3:	fe fe 05 07 07 07 2a 2a fe 05 07 07 07 07 07 07     ......**........
    42e3:	05 05 07 07 07 ff ff 07 05 05 07 07 ff ff e0 e0     ................
    42f3:	2a fe fe fe fe fe fe fe 2a fe fe fe fe fe fe fe     *.......*.......
    4303:	2a 2a 2a 2a 2a fe fe fe 2a 2a 2a 2a 2a 07 fe fe     *****...*****...
    4313:	2a 2a 07 07 07 07 fe fe 07 07 07 07 07 07 07 fe     **..............
    4323:	07 07 07 ff ff 07 07 07 07 07 ff ff e0 e0 07 07     ................
    4333:	fe fe fe fe fe fe fe cf fe fe fe fe fe cf cf cf     ................
    4343:	fe fe fe fe cf cf cf cf fe fe fe cf cf cf cf cf     ................
    4353:	fe fe cf cf cf ff ff cf fe fe cf cf ff ff e0 e0     ................
    4363:	fe fe cf cf ff ff e0 e0 fe cf cf cf ff ff ff ff     ................
    4373:	cf fe fe fe fe fe fe fe cf cf cf fe fe fe fe fe     ................
    4383:	cf cf cf cf fe fe fe fe cf cf cf cf cf fe fe fe     ................
    4393:	cf cf cf ff ff cf fe fe cf cf ff ff e0 e0 fe fe     ................
    43a3:	cf cf ff ff e0 e0 fe fe cf cf ff ff ff ff cf fe     ................
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43f3:	00 3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 3f 3f     .??????..???????
    4403:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 3f 3f 3f     ..??????..??????
    4413:	fe fe 00 3f 3f 3f 3f 3f fe fe fe 00 3f 3f 3f 3f     ...?????....????
    4423:	fe fe fe fe 00 00 3f 3f fe fe fe fe fe fe 00 00     ......??........
	...
    443b:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00 fe     ???????.??????..
    444b:	3f 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 00 fe fe     ??????..?????...
    445b:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    446b:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    447b:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    448b:	3f 3f 3f 3f 00 00 00 fe 3f 3f 3f 3f 3f 3f 00 fe     ????....??????..
    449b:	3f 3f 3f 3f 3f 00 fe fe 3f 3f 3f 00 00 fe fe fe     ?????...???.....
    44ab:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44bb:	00 fe fe fe fe fe fe fe 3f 00 fe fe fe fe fe fe     ........?.......
    44cb:	3f 3f 00 fe fe fe fe fe 3f 3f 3f 00 fe fe fe fe     ??......???.....
    44db:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    44eb:	00 00 fe fe fe fe fe fe fe 07 07 07 07 ff ff 07     ................
    44fb:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    450b:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    451b:	fe 07 07 07 07 07 07 07 fe 07 07 fe 07 07 07 fe     ................
    452b:	fe 07 fe fe fe 07 07 fe 07 07 07 ff ff 07 07 fe     ................
    453b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    454b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    455b:	07 07 07 07 07 07 07 fe fe 07 07 07 fe 07 07 fe     ................
    456b:	fe 07 07 fe fe fe 07 fe fe c9 c9 c9 c9 c9 c9 c9     ................
    457b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9     ................
    458b:	fe c9 c9 ff ff c9 c9 ff fe c9 ff c9 c9 ff ff c9     ................
    459b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 fe c9 c9 c9 fe     ................
    45ab:	fe c9 fe fe fe c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45bb:	c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45cb:	ff c9 c9 ff ff c9 c9 fe c9 ff ff c9 c9 ff c9 fe     ................
    45db:	c9 c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 fe c9 c9 fe     ................
    45eb:	fe c9 c9 fe fe fe c9 fe 05 05 07 07 ff ff e0 e0     ................
    45fb:	fe 05 05 07 ff ff ff ff fe fe 05 07 07 ff ff 07     ................
    460b:	fe fe 05 05 07 07 07 07 fe fe fe 05 05 07 07 ff     ................
    461b:	fe fe fe 05 05 05 07 07 fe fe fe fe fe fe 05 05     ................
    462b:	fe fe fe fe fe fe 05 05 07 07 ff ff e0 e0 07 07     ................
    463b:	07 07 ff ff ff ff 07 fe 07 07 07 ff ff 07 fe fe     ................
    464b:	07 07 07 07 07 07 fe fe ff ff 07 07 07 fe fe fe     ................
    465b:	07 07 07 07 07 fe fe fe 07 07 fe fe fe fe fe fe     ................
    466b:	05 07 fe fe fe fe fe fe fe cf cf cf cf ff ff cf     ................
    467b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    468b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    469b:	fe cf cf cf cf cf cf cf fe cf cf fe cf cf cf fe     ................
    46ab:	fe cf fe fe fe cf cf fe cf cf cf ff ff cf cf fe     ................
    46bb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46cb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46db:	cf cf cf cf cf cf cf fe fe cf cf cf fe cf cf fe     ................
    46eb:	fe cf cf fe fe fe cf fe                             ........

000046f3 <blob1>:
    46f3:	02 02 08 09 15 16                                   ......

000046f9 <blob0>:
    46f9:	02 02 0c 0d 19 1a                                   ......

000046ff <run1>:
    46ff:	02 02 0a 0b 17 18                                   ......

00004705 <run0>:
    4705:	02 02 0a 0b 17 18                                   ......

0000470b <owl1>:
    470b:	02 02 08 09 15 16                                   ......

00004711 <owl0>:
    4711:	02 02 06 07 13 14                                   ......

00004717 <pac2>:
    4717:	02 02 04 05 0f 12                                   ......

0000471d <pac1>:
    471d:	02 02 02 03 0f 11                                   ......

00004723 <pac0>:
    4723:	02 02 00 01 0f 10                                   ......

00004729 <uMTiles>:
    4729:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4739:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4749:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    4759:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    4769:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4779:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4789:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    4799:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    47a9:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    47b9:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    47c9:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    47d9:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    47e9:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    47f9:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    4809:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    4819:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    4829:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    4839:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4849:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4859:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    4869:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    4879:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4889:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    4899:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    48a9:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    48b9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    48c9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    48d9:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    48e9:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    48f9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    4909:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    4919:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    4929:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    4939:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    4949:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4959:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4969:	04 04 04 04 07 04 04 07 04 04 07 04 04 04 07 07     ................
    4979:	04 07 07 07 04 07 07 07 07 07 07 07 07 27 07 07     .............'..
    4989:	07 07 07 07 07 07 07 27 07 27 07 07 27 07 27 27     .......'.'..'.''
    4999:	07 07 07 27 27 27 27 27 27 07 27 27 27 37 27 27     ...''''''.'''7''
    49a9:	07 04 04 07 04 04 04 04 07 07 04 04 04 07 04 04     ................
    49b9:	07 07 07 04 07 07 07 04 07 07 27 07 07 07 07 07     ..........'.....
    49c9:	27 07 07 07 07 07 07 07 27 27 07 27 07 07 27 07     '.......''.'..'.
    49d9:	27 27 27 27 27 07 07 07 27 27 37 27 27 27 07 27     '''''...''7'''.'
    49e9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    49f9:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    4a09:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    4a19:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    4a29:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    4a39:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a49:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    4a59:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    4a69:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    4a79:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a89:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    4a99:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    4aa9:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    4ab9:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    4ac9:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    4ad9:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    4ae9:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    4af9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4b09:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    4b19:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    4b69:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    4b79:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    4b89:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    4b99:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    4ba9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bb9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bc9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bd9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4be9:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4bf9:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c09:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    4c19:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c29:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4c39:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c49:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    4c59:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c69:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    4c79:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    4c89:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    4c99:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    4ca9:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    4cb9:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    4cc9:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    4cd9:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    4ce9:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    4cf9:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    4d09:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d19:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    4d29:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    4d39:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d49:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d59:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    4d69:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    4d79:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    4d89:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4d99:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4da9:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    4db9:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    4dc9:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    4dd9:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    4de9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    4df9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    4e09:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    4e19:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    4e29:	07 27 37 27 27 27 27 37 27 27 27 37 27 27 37 37     .'7''''7'''7''77
    4e39:	27 27 37 37 37 37 37 37 27 37 37 37 37 ff 37 37     ''777777'7777.77
    4e49:	37 37 ff 37 37 37 37 ff ff 37 37 37 ff 37 37 ff     77.7777..777.77.
    4e59:	37 ff 37 ff ff 37 ff ff ff ff 37 ff ff ff ff ff     7.7..7....7.....
    4e69:	37 27 27 27 27 37 27 07 37 37 27 27 37 27 27 27     7''''7'.77''7'''
    4e79:	37 37 37 37 37 37 27 27 37 37 ff 37 37 37 37 27     777777''77.7777'
    4e89:	ff 37 37 37 37 ff 37 37 ff 37 37 ff 37 37 37 ff     .7777.77.77.777.
    4e99:	ff ff 37 ff ff 37 ff 37 ff ff ff ff ff 37 ff ff     ..7..7.7.....7..
    4ea9:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    4eb9:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    4ec9:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    4ed9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    4ee9:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    4f2d:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4f69:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    4f79:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    4f89:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    4f99:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    4fa9:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    4fb9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4fc9:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    4fd9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    4fe9:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    4ff9:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5009:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5019:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
	...
    5035:	00 00 07 00 00 00 00 00 00 07 00 00 00 00 00 00     ................
	...
    504d:	00 00 00 2f 00 00 00 00 00 00 00 00 00 00 00 00     .../............
    505d:	07 2f 00 00 00 00 00 00 00 07 00 00 00 00 00 00     ./..............
    506d:	00 00 00 00 00 00 ff 00 00 2f 00 00 00 00 00 00     ........./......
    507d:	ff 00 00 00 00 07 00 00 00 00 00 00 00 00 00 00     ................
    508d:	00 00 2f 00 2f 00 00 2f 00 00 00 00 00 00 07 00     .././../........
    509d:	00 00 00 2f 00 2f 07 00 00 00 07 00 00 00 07 00     ..././..........
    50ad:	00 00 00 00 00 07 00 00 00 00 00 00 00 00 07 00     ................
    50bd:	00 00 00 00 2f 00 00 2f 00 00 07 00 00 00 00 00     ..../../........
    50cd:	00 07 00 00 00 00 07 00 00 2f 07 00 00 07 07 00     ........./......
    50dd:	00 2f 2f 07 00 07 2f 07 00 07 2f 2f 00 00 07 00     .//.../...//....
    50ed:	00 00 07 00 00 07 00 00 00 00 2f 00 00 00 00 00     ........../.....
	...
    5109:	00 00 00 07 00 00 00 07 00 00 07 00 00 00 00 00     ................
    5119:	00 00 07 2f 00 00 00 00 07 00 2f 07 00 00 00 2f     .../....../..../
    5129:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    5139:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5149:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5159:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    5169:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5179:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5189:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5199:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    51a9:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    51b9:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    51c9:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    51d9:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    51e9:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    51f9:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5209:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5219:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5229:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5239:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    5249:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    5259:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    5269:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5279:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5289:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5299:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    52a9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    52b9:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    52c9:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    52d9:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    52e9:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    52f9:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    5309:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    5319:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5329:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5339:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5349:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    5359:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    5369:	e4 00 00 00 00 00 00 e4 00 00 ff 19 ff ad 00 00     ................
    5379:	00 ff ff 19 ff ad ad 00 00 ff 1a 1a ad ad ad 19     ................
    5389:	00 19 1a ad ad ad ad 19 00 ff ff ad ad 1a 1a 19     ................
    5399:	00 ff ad ad 19 19 ad ad 00 ad ad ad 19 ad ad 00     ................
    53a9:	e4 e4 00 00 00 00 00 e4 e4 00 00 ff ff 19 00 00     ................
    53b9:	00 00 ff ff ad 19 ad 00 00 00 ff ad 1a 1a ad 00     ................
    53c9:	00 00 19 19 1a ad ad 00 00 00 ad ad ad ad 00 00     ................
    53d9:	00 00 00 00 00 00 00 e4 00 19 ff 00 00 ff 00 00     ................
    53e9:	e4 00 1d 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00     ................
    53f9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    5409:	00 1d 1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00     ................
    5419:	e4 00 00 00 00 00 00 1d 00 00 1d 1d 1d 1c 00 1d     ................
    5429:	1d 1d 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    5439:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 00 00     ................
    5449:	1d 1c 1c 1c 00 00 00 00 00 00 00 00 00 1d 1d 00     ................
    5459:	1d 1d 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 00 00 1d     ................
    5469:	00 1d 1d 1c 1c 1c 00 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    5479:	1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    5489:	1d 1c 1c 1c 1c 1c 1c 00 1c 1c 1c 1c 1c 1c 00 00     ................
    5499:	00 00 00 00 1c 00 00 1d 1d 1c 1c 00 00 00 1d 1c     ................
    54a9:	1d 1d 1d 1d 1c 1c 00 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    54b9:	1d 1c 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 00 00     ................
    54c9:	00 00 00 00 00 00 00 e4 00 1d 1d 1d 1d 1c 00 00     ................
    54d9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    54e9:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    54f9:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5509:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5519:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5529:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5539:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5549:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5559:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5569:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5579:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    5589:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5599:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    55a9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    55b9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    55c9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    55d9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    55e9:	00 00 00 00 07 00 00 00 00 00 00 07 2f 00 00 07     ............/...
    55f9:	00 00 07 07 00 00 00 00 00 2f 07 07 00 00 00 07     ........./......
    5609:	00 07 07 07 07 00 00 07 00 00 2f ff 07 00 07 2f     ........../..../
    5619:	00 00 2f 2f ff 2f 07 ff 00 00 00 2f ff 07 07 ff     ..//./...../....
    5629:	07 07 00 00 00 07 07 00 2f 07 00 00 00 07 00 00     ......../.......
    5639:	2f 2f 07 00 07 07 00 00 2f 2f 07 2f 07 07 00 00     //......//./....
    5649:	2f ff 07 07 07 00 00 00 ff 07 07 07 2f 07 00 00     /.........../...
    5659:	2f 07 2f ff 2f 07 00 00 2f 07 ff ff 2f 00 00 00     /././.../.../...
    5669:	00 00 07 2f 07 07 ff 2f 07 00 00 07 2f 2f 2f ff     .../.../....///.
    5679:	00 2f 00 07 2f 2f 2f ff 00 00 07 07 2f 2f ff ff     ./..///.....//..
    5689:	00 00 07 ff 2f ff ff ff 07 00 07 2f ff ff ff 2f     ..../....../.../
    5699:	00 2f 00 07 ff ff 2f 2f 00 07 07 ff ff ff 2f 2f     ./....//......//
    56a9:	07 07 2f 07 07 00 00 00 2f 2f 2f 2f 07 00 00 00     ../.....////....
    56b9:	ff ff 2f 2f 07 00 00 00 ff ff 2f 2f 07 00 00 00     ..//......//....
    56c9:	ff ff ff 2f 07 00 07 00 ff ff ff 2f 07 07 07 00     .../......./....
    56d9:	2f 2f ff ff ff 2f 00 00 2f 2f 2f ff 2f 2f 07 00     //.../..///.//..
    56e9:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    56f9:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    5709:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    5719:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5729:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    5739:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    5749:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    5759:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    5769:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 00 ff     ................
    5779:	e4 e4 e4 e4 e4 00 ff ff e4 e4 e4 e4 00 ff ff ff     ................
    5789:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 ff ff 3a 3a     .....:.:......::
    5799:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    57a9:	00 e4 e4 e4 e4 e4 e4 e4 3a 00 e4 e4 e4 e4 e4 e4     ........:.......
    57b9:	3a 3a 00 e4 e4 e4 e4 e4 3a 3a 3a 00 e4 e4 e4 e4     ::......:::.....
    57c9:	00 3a 00 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     .:.:....:.::....
    57d9:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    57e9:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    57f9:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    5809:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    5819:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    5829:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5839:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    5849:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    5859:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    5869:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    5879:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    5889:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5899:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    58a9:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    58b9:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    58c9:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    58d9:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    58e9:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    58f9:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    5909:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5919:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    5929:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5939:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5949:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    5959:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    5969:	00 00 ad ad 19 ad 00 00 e4 00 00 00 00 00 00 00     ................
    5979:	e4 00 ff ff 19 ad ad ad 00 00 ff ad 19 1a ad ad     ................
    5989:	00 19 1a ad ad 1a ad ad 00 ff 1a ad ad 1a 19 00     ................
    5999:	00 00 1a 19 ad ad ad 00 e4 00 00 00 00 00 00 00     ................
    59a9:	ff 1a 1a ad 00 ad 19 00 ad ad 1a ad 00 1a ad 00     ................
    59b9:	00 ad 19 00 00 19 00 00 00 00 00 00 00 00 00 e4     ................
    59c9:	00 00 ff 19 ff ad 00 00 00 ff 1a 1a ad ad ad 00     ................
    59d9:	00 00 19 ad ad ad 00 00 e4 00 00 00 00 00 00 e4     ................
    59e9:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    59f9:	00 1d 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 1c 00     ................
    5a09:	00 00 1c 1c 1c 1c 1c 00 e4 00 00 00 00 00 1c 00     ................
    5a19:	00 00 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00 1d     ................
    5a29:	1c 1c 1c 1c 1c 00 1d 1d 00 00 00 00 00 00 1d 1c     ................
    5a39:	1d 1d 1c 1c 00 1d 1d 1c 1d 1c 1c 1c 00 1d 1c 1c     ................
    5a49:	1c 00 00 00 00 00 00 1c 00 00 1d 1c 1c 1c 00 00     ................
    5a59:	00 1d 1d 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00     ................
    5a69:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1c 1c 1c     ................
    5a79:	1c 1c 1c 1c 00 00 00 00 1c 1c 1c 1c 00 00 1d 1c     ................
    5a89:	1c 1c 1c 1c 00 1d 1d 1c 00 00 00 00 00 00 1c 1c     ................
    5a99:	00 1d 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00 1d     ................
    5aa9:	00 1d 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 1c 00     ................
    5ab9:	00 00 1c 1c 1c 1c 1c 00 1c 00 00 00 00 00 00 00     ................
    5ac9:	1d 00 00 1d 1c 1c 00 e4 00 00 1d 1d 1c 1c 00 00     ................
    5ad9:	00 1d 1d 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00     ................
    5ae9:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5af9:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5b09:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5b19:	f5 f5 e8 f5 f5 f5 e8 e8 f5 f5 f5 f5 f5 f5 f5 f5     ................
    5b29:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5b39:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5b49:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5b59:	e8 e8 f5 f5 f5 e8 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5     ................
    5b69:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5b79:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    5b89:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5b99:	e8 e8 e8 e8 e8 e8 9a 9a f5 f5 e8 f5 f5 f5 e8 e8     ................
    5ba9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5bb9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    5bc9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5bd9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 f5 f5     ................
    5be9:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5bf9:	00 00 00 01 01 00 00 03 03 00 00 00 03 00 00 00     ................
    5c09:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5c19:	01 00 00 01 00 00 00 01 01 00 00 00 01 00 00 00     ................
    5c29:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5c39:	00 00 00 01 01 00 00 01 01 00 00 00 ad 00 00 00     ................
    5c49:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5c59:	01 00 00 01 00 00 00 00 01 00 00 00 01 00 00 00     ................
    5c69:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5c79:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    5c89:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    5c99:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5ca9:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    5cb9:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    5cc9:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    5cd9:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5ce9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5cf9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5d09:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 1d 6e 0a     nn.]wwn.nn]nn.n.
    5d19:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5d29:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    5d39:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 3a 3a 3a ff     .....:.:....:::.
    5d49:	e4 e4 e4 e4 00 3a 3a 3a e4 e4 e4 e4 e4 00 3a 3a     .....:::......::
    5d59:	e4 e4 e4 e4 e4 e4 00 3a e4 e4 e4 e4 e4 e4 e4 00     .......:........
    5d69:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    5d79:	3a 00 3a 3a 00 e4 e4 e4 00 ff 00 3a 00 e4 e4 e4     :.::.......:....
    5d89:	3a 3a 3a 00 e4 e4 e4 e4 3a 3a 00 e4 e4 e4 e4 e4     :::.....::......
    5d99:	3a 00 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     :...............
    5da9:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    5db9:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    5dc9:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    5dd9:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    5de9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    5df9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    5e09:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    5e19:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    5e29:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    5e39:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5e49:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    5e59:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    5e69:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e79:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e89:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e99:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5ea9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5eb9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    5ec9:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    5ed9:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5ee9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5ef9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5f09:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5f19:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    5f29:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    5f39:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    5f49:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    5f59:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5f69:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    5f79:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    5f89:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    5f99:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    5fa9:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5fb9:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    5fc9:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    5fd9:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    5fe9:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5ff9:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    6009:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    6019:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    6029:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6039:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    6049:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6059:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    6069:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    6079:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    6089:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    6099:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    60a9:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    60b9:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    60c9:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    60d9:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    60e9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    60f9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6109:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6119:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6129:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    6139:	00 00 00 01 01 00 00 01 00 00 00 00 01 00 00 00     ................
    6149:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    6159:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
    6169:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    6179:	00 00 00 01 01 00 00 01 01 00 00 00 01 00 00 00     ................
    6189:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    6199:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
	...
    61b1:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    61c1:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    61d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    61e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    61f1:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6201:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6211:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6221:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    6231:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    6241:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6251:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6261:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    6271:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6281:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6291:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62b1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 00     ................
    62c1:	e4 e4 e4 e4 e4 00 00 3f e4 e4 e4 e4 00 3f 3f 3f     .......?.....???
    62d1:	e4 00 00 00 3f 3f 00 3f 00 3f 3f 3f 3f 3f 3f 3f     ....??.?.???????
    62e1:	e4 00 00 00 00 00 00 00 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62f1:	e4 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    6301:	3f 00 00 e4 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ?.......???.....
    6311:	3f 00 3f 3f 00 00 00 e4 3f 3f 3f 3f 3f 3f 3f 00     ?.??....???????.
    6321:	00 00 00 00 00 00 00 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    6331:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    6341:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6351:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6361:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6371:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    6381:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6391:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63a1:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    63b1:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    63c1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63e1:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    63f1:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    6401:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6411:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6421:	e4 e4 e4 e4 e4 e4 e4 e4 02 02 02 02 02 02 02 02     ................
    6431:	02 ff ff ad ad ad ad 02 00 02 ff ff ad ad 02 00     ................
    6441:	00 00 02 ff ad 02 00 00 00 00 00 02 02 00 00 00     ................
	...
    6469:	00 02 02 02 02 02 02 00 00 02 ff ad ad ad 02 00     ................
    6479:	00 00 02 ff ff 02 00 00 00 00 00 02 02 00 00 00     ................
	...
    64a9:	00 02 02 02 00 02 02 02 00 02 ff 02 00 02 ad 02     ................
    64b9:	00 00 02 00 00 00 02 00 00 00 00 00 00 00 00 00     ................
	...
    64e9:	00 02 02 00 00 02 02 00 00 ad 00 00 00 ad 00 00     ................
	...
    6529:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6539:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    6549:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6559:	e8 e8 f5 9a 9a 9a 9a 9a f5 f5 e8 e8 e8 e8 f5 f5     ................
    6569:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    6579:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    6589:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    6599:	9a 9a 9a 9a 9a f5 e8 e8 f5 f5 e8 e8 e8 e8 f5 f5     ................
    65a9:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    65b9:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    65c9:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    65d9:	f5 f5 9a 9a 9a 9a f5 f5 e8 e8 f5 f5 f5 f5 f5 f5     ................
    65e9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    65f9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6609:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6619:	f5 f5 9a 9a 9a 9a f5 f5 f5 f5 f5 f5 f5 f5 e8 e8     ................
    6629:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    6639:	00 ff 00 00 ff ff 00 00 00 ff 00 ff 00 ff 00 00     ................
    6649:	00 ff ff 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6659:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6669:	00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    6679:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    6689:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    6699:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    66a9:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    66b9:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
    66c9:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    66d9:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    66e9:	00 ff ff ff ff ff 00 00 00 00 00 00 ff 00 00 00     ................
    66f9:	00 00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00     ................
    6709:	00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6719:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6729:	00 00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    6739:	00 00 ff 00 ff 00 00 00 00 ff 00 00 ff 00 00 00     ................
    6749:	00 ff ff ff ff ff 00 00 00 00 00 00 ff 00 00 00     ................
    6759:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6769:	00 ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 00     ................
    6779:	00 ff ff ff ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    6789:	00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6799:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    67a9:	00 00 00 ff ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    67b9:	00 ff 00 00 00 00 00 00 00 ff ff ff ff 00 00 00     ................
    67c9:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    67d9:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    67e9:	00 ff ff ff ff ff 00 00 00 00 00 00 00 ff 00 00     ................
    67f9:	00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00     ................
    6809:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    6819:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6829:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    6839:	00 ff 00 00 00 ff 00 00 00 00 ff ff ff 00 00 00     ................
    6849:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6859:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6869:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    6879:	00 ff 00 00 00 ff 00 00 00 00 ff ff ff ff 00 00     ................
    6889:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
    6899:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    68c1:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    68e9:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 ff     ................
    68f9:	00 ff 00 00 00 00 00 ff 00 00 ff ff ff 00 00 ff     ................
    6909:	00 00 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    6919:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6929:	ff ff ff 00 00 00 ff ff 00 00 00 ff 00 ff 00 00     ................
    6939:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6949:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00 00     ................
    6959:	ff ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
    6969:	ff 00 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff     ................
    6979:	00 ff 00 ff 00 00 00 ff 00 ff 00 ff ff ff ff 00     ................
    6989:	00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00 00 ff 00     ................
    6999:	ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    69a9:	00 ff ff ff ff 00 00 00 00 ff 00 00 00 00 00 00     ................
    69b9:	00 ff 00 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
    69c9:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    69d9:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    69e9:	ff ff ff ff 00 00 00 ff ff 00 00 00 ff 00 ff 00     ................
    69f9:	ff 00 00 00 ff 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    6a09:	ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    6a19:	ff ff ff ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    6a29:	ff ff 00 00 ff ff 00 00 00 00 ff 00 ff ff 00 00     ................
    6a39:	00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    6a49:	00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00 00 ff     ................
    6a59:	ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6a69:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6a79:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6a89:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6a99:	ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6aa9:	00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00 00     ................
    6ab9:	ff 00 00 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
    6ac9:	00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00     ................
    6ad9:	00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6ae9:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6af9:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6b09:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6b19:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
    6b29:	00 00 ff ff ff ff 00 ff 00 00 ff 00 00 00 00 ff     ................
    6b39:	00 00 ff 00 00 00 00 ff 00 00 ff ff ff 00 00 00     ................
    6b49:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6b59:	ff 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6b69:	00 00 00 ff 00 ff ff ff 00 00 00 ff 00 ff 00 00     ................
    6b79:	00 00 00 ff 00 ff 00 00 ff 00 ff 00 00 ff ff ff     ................
    6b89:	ff 00 ff 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6b99:	00 ff 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
    6ba9:	ff 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6bb9:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6bc9:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6bd9:	ff 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6be9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6bf9:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6c09:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6c19:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6c29:	e4 ff ff ff e4 e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    6c39:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 ff ff e4 ff ff     ................
    6c49:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6c59:	e4 ff ff ff e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6c69:	ff ff e4 ff ff ff ff ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6c79:	e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    6c89:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6c99:	ff ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ca9:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6cb9:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    6cc9:	e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6cd9:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ce9:	ff e4 e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4     ................
    6cf9:	e4 ff e4 ff e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    6d09:	e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4     ................
    6d19:	e4 ff e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d29:	e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff e4     ................
    6d39:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    6d49:	ff ff ff ff ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6d59:	ff e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d69:	ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    6d79:	e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    6d89:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    6d99:	ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6da9:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6db9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6dc9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6dd9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6de9:	ff 00 00 00 00 ff 00 ff ff 00 00 00 00 ff 00 ff     ................
    6df9:	ff 00 00 00 00 ff 00 ff ff 00 00 00 00 ff 00 00     ................
    6e09:	ff 00 00 00 00 ff 00 00 ff 00 00 00 00 ff 00 00     ................
    6e19:	ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    6e29:	ff 00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00     ................
    6e39:	00 00 ff 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
    6e49:	00 00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00     ................
    6e59:	ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6e69:	00 ff ff ff ff ff 00 ff 00 00 00 ff 00 00 00 ff     ................
    6e79:	00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff     ................
    6e89:	00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff     ................
    6e99:	00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    6ea9:	00 ff 00 00 00 ff 00 ff 00 ff ff 00 ff ff 00 ff     ................
    6eb9:	00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    6ec9:	00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    6ed9:	00 ff 00 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
    6ee9:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    6f01:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    6f19:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6f29:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6f39:	e4 ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 ff     ................
    6f49:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    6f59:	e4 ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f69:	ff ff ff e4 e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4     ................
    6f79:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff ff     ................
    6f89:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    6f99:	e4 e4 e4 ff e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fa9:	ff e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6fb9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    6fc9:	e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6fd9:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fe9:	e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    6ff9:	ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7009:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7019:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7029:	e4 e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7039:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    7049:	e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7059:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7069:	ff ff ff ff ff e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    7079:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7089:	e4 e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 ff e4 e4     ................
    7099:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70a9:	e4 e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff     ................
    70b9:	ff e4 e4 ff e4 e4 e4 ff ff e4 e4 ff ff ff ff e4     ................
    70c9:	ff ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff e4     ................
    70d9:	e4 ff e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    70e9:	e4 ff ff ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    70f9:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7109:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7119:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7129:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7139:	e4 e4 e4 14 e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7149:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7159:	e4 e4 0f 0f 0f e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    7169:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7179:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    7189:	e4 f6 f6 e4 e4 e4 e4 e4 e4 ad ad f6 e4 e4 e4 e4     ................
    7199:	e4 ad a4 ad f6 e4 e4 e4 e4 ad a4 a4 ad f6 e4 e4     ................
    71a9:	e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    71b9:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4 ff     ................
    71c9:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    71d9:	e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71e9:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff e4 ff     ................
    71f9:	e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 e4 e4     ................
    7209:	ff ff ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7219:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7229:	ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7239:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff e4 e4 e4     ................
    7249:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7259:	ff e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7269:	e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff     ................
    7279:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7289:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7299:	e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    72a9:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    72b9:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    72c9:	e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    72d9:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    72e9:	ff ff ff e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4     ................
    72f9:	e4 e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff ff ff ff     ................
    7309:	e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff     ................
    7319:	ff ff ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7329:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7339:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7349:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7359:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7369:	ff ff ff ff ff e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7379:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7389:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7399:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73a9:	ff e4 e4 e4 ff e4 ff ff ff ff e4 ff ff e4 ff e4     ................
    73b9:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    73c9:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    73d9:	ff e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    73e9:	ff ff e4 ff e4 e4 ff ff e4 e4 e4 ff e4 ff e4 e4     ................
    73f9:	e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff ff     ................
    7409:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7419:	ff ff e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7429:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7439:	e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7449:	e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7459:	ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7469:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    7479:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    7489:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7499:	ff ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    74a9:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    74b9:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    74c9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    74d9:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    74e9:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    74f9:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7509:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7519:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7529:	ff ff ff e4 e4 ff ff e4 e4 e4 e4 ff e4 ff ff e4     ................
    7539:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff     ................
    7549:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7559:	ff ff ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7569:	e4 ff e4 e4 ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7579:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 ff ff     ................
    7589:	ff ff e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4 ff     ................
    7599:	e4 ff e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    75a9:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    75b9:	e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    75c9:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff e4 e4 ff     ................
    75d9:	e4 ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    75e9:	e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 e4 ff e4     ................
    75f9:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7609:	ff ff ff ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    7619:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7629:	ff e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7639:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7649:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7659:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7669:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 ff     ................
    7679:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7689:	ff e4 e4 e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4     ................
    7699:	ff ff ff ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    76a9:	e4 e4 ff ff ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    76b9:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    76c9:	ff ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    76d9:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    76e9:	ff e4 e4 ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    76f9:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7709:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7719:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7729:	ff ff e4 e4 ff e4 ff e4 ff ff e4 e4 ff e4 ff e4     ................
    7739:	ff e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7749:	ff e4 e4 ff ff e4 ff e4 ff e4 e4 ff ff e4 e4 e4     ................
    7759:	ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7769:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    7779:	e4 e4 0f 0c 0f 0f e4 e4 e4 e4 0f 0c 0c 0f e4 e4     ................
    7789:	e4 0f 0f 0c 0c 0f 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    7799:	e4 0f 0c 0c 0c 0c 0f e4 0f 0f 0c 0c 0c 0c 0f 0f     ................
    77a9:	e4 ad a4 a4 a4 ad f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    77b9:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    77c9:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    77d9:	e4 ad a4 a4 a4 a4 f6 e4 00 00 00 00 00 00 00 00     ................

000077e9 <spike1>:
    77e9:	01 02 a9 c2                                         ....

000077ed <spike0>:
    77ed:	01 02 a8 c1                                         ....

000077f1 <congra0>:
    77f1:	0a 01 b7 b8 b9 ba bb bc bd be bf c0                 ............

000077fd <timeup0>:
    77fd:	06 01 b1 b2 b3 b4 b5 b6                             ........

00007805 <over0>:
    7805:	07 01 aa ab ac ad ae af b0                          .........

0000780e <press0>:
    780e:	08 01 a0 a1 a2 a3 a4 a5 a6 a7                       ..........

00007818 <time0>:
    7818:	03 01 9d 9e 9f                                      .....

0000781d <live0>:
    781d:	03 01 9b 91 9c                                      .....

00007822 <get0>:
    7822:	07 01 94 95 96 97 98 99 9a                          .........

0000782b <x0>:
    782b:	01 01 93                                            ...

0000782e <level0>:
    782e:	04 01 8f 90 91 92                                   ......

00007834 <bonus0>:
    7834:	04 01 8b 8c 8d 8e                                   ......

0000783a <score0>:
    783a:	04 01 87 88 89 8a                                   ......

00007840 <nm>:
    7840:	01 01 86                                            ...

00007843 <n9>:
    7843:	01 01 85                                            ...

00007846 <n8>:
    7846:	01 01 84                                            ...

00007849 <n7>:
    7849:	01 01 83                                            ...

0000784c <n6>:
    784c:	01 01 82                                            ...

0000784f <n5>:
    784f:	01 01 81                                            ...

00007852 <n4>:
    7852:	01 01 80                                            ...

00007855 <n3>:
    7855:	01 01 7f                                            ...

00007858 <n2>:
    7858:	01 01 7e                                            ..~

0000785b <n1>:
    785b:	01 01 7d                                            ..}

0000785e <n0>:
    785e:	01 01 7c                                            ..|

00007861 <nb>:
    7861:	01 01 12                                            ...

00007864 <drkbridge3>:
    7864:	01 01 77                                            ..w

00007867 <drkbridge2>:
    7867:	01 01 76                                            ..v

0000786a <drkbridge1>:
    786a:	01 01 75                                            ..u

0000786d <drkbridge0>:
    786d:	01 01 74                                            ..t

00007870 <bridge3>:
    7870:	01 01 6d                                            ..m

00007873 <bridge2>:
    7873:	01 01 6c                                            ..l

00007876 <bridge1>:
    7876:	01 01 6b                                            ..k

00007879 <bridge0>:
    7879:	01 01 6a                                            ..j

0000787c <water3>:
    787c:	02 02 66 67 7a 7b                                   ..fgz{

00007882 <water2>:
    7882:	02 02 64 65 78 79                                   ..dexy

00007888 <water1>:
    7888:	02 02 39 3a 51 52                                   ..9:QR

0000788e <water0>:
    788e:	02 02 37 38 4f 50                                   ..78OP

00007894 <tube5>:
    7894:	02 02 31 32 49 4a                                   ..12IJ

0000789a <tube4>:
    789a:	02 02 31 32 49 4a                                   ..12IJ

000078a0 <groundblock1>:
    78a0:	02 02 35 36 4d 4e                                   ..56MN

000078a6 <groundblock0>:
    78a6:	02 02 33 34 4b 4c                                   ..34KL

000078ac <moss>:
    78ac:	02 02 31 32 49 4a                                   ..12IJ

000078b2 <cloud3>:
    78b2:	02 02 5e 5f 72 73                                   ..^_rs

000078b8 <cloud2>:
    78b8:	02 02 5c 5d 70 71                                   ..\]pq

000078be <cloud1>:
    78be:	02 02 30 12 47 48                                   ..0.GH

000078c4 <cloud0>:
    78c4:	02 02 2e 2f 45 46                                   .../EF

000078ca <fireground>:
    78ca:	02 02 09 0a 1c 1d                                   ......

000078d0 <blackblock>:
    78d0:	02 02 53 54 68 69                                   ..SThi

000078d6 <lilblack>:
    78d6:	01 01 10                                            ...

000078d9 <black>:
    78d9:	02 02 10 10 10 10                                   ......

000078df <fire2>:
    78df:	02 02 26 27 3d 3e                                   ..&'=>

000078e5 <fire1>:
    78e5:	02 02 24 25 3b 3c                                   ..$%;<

000078eb <blue>:
    78eb:	01 01 12                                            ...

000078ee <banana2>:
    78ee:	02 01 6e 6f                                         ..no

000078f2 <banana>:
    78f2:	02 02 43 44 5a 5b                                   ..CDZ[

000078f8 <diamond0>:
    78f8:	02 02 41 42 58 59                                   ..ABXY

000078fe <block3>:
    78fe:	02 02 08 08 57 1b                                   ....W.

00007904 <block2>:
    7904:	02 02 3f 40 55 56                                   ..?@UV

0000790a <door3>:
    790a:	02 02 10 11 10 23                                   .....#

00007910 <door2>:
    7910:	02 02 0f 10 22 10                                   ....".

00007916 <door1>:
    7916:	02 02 0d 0e 20 21                                   .... !

0000791c <door0>:
    791c:	02 02 0b 0c 1e 1f                                   ......

00007922 <block5>:
    7922:	02 02 0a 08 1d 1b                                   ......

00007928 <block4>:
    7928:	02 02 08 09 1b 1c                                   ......

0000792e <ground3>:
    792e:	02 03 07 06 1a 19 2c 2b                             ......,+

00007936 <ground2>:
    7936:	02 03 07 05 1a 18 2c 2d                             ......,-

0000793e <ground1>:
    793e:	02 03 04 06 17 19 2a 2b                             ......*+

00007946 <ground>:
    7946:	02 03 04 05 17 18 28 29                             ......()

0000794e <block1>:
    794e:	02 02 02 03 15 16                                   ......

00007954 <block0>:
    7954:	02 02 00 01 13 14                                   ......

0000795a <bigblue0>:
    795a:	02 02 12 12 12 12                                   ......

00007960 <__ctors_end>:
    7960:	11 24       	eor	r1, r1
    7962:	1f be       	out	0x3f, r1	; 63
    7964:	cf ef       	ldi	r28, 0xFF	; 255
    7966:	d0 e1       	ldi	r29, 0x10	; 16
    7968:	de bf       	out	0x3e, r29	; 62
    796a:	cd bf       	out	0x3d, r28	; 61

0000796c <__do_copy_data>:
    796c:	11 e0       	ldi	r17, 0x01	; 1
    796e:	a0 e0       	ldi	r26, 0x00	; 0
    7970:	b1 e0       	ldi	r27, 0x01	; 1
    7972:	ee e9       	ldi	r30, 0x9E	; 158
    7974:	f4 ed       	ldi	r31, 0xD4	; 212
    7976:	02 c0       	rjmp	.+4      	; 0x797c <__do_copy_data+0x10>
    7978:	05 90       	lpm	r0, Z+
    797a:	0d 92       	st	X+, r0
    797c:	a2 30       	cpi	r26, 0x02	; 2
    797e:	b1 07       	cpc	r27, r17
    7980:	d9 f7       	brne	.-10     	; 0x7978 <__do_copy_data+0xc>

00007982 <__do_clear_bss>:
    7982:	2a e0       	ldi	r18, 0x0A	; 10
    7984:	a2 e0       	ldi	r26, 0x02	; 2
    7986:	b1 e0       	ldi	r27, 0x01	; 1
    7988:	01 c0       	rjmp	.+2      	; 0x798c <.do_clear_bss_start>

0000798a <.do_clear_bss_loop>:
    798a:	1d 92       	st	X+, r1

0000798c <.do_clear_bss_start>:
    798c:	a4 3c       	cpi	r26, 0xC4	; 196
    798e:	b2 07       	cpc	r27, r18
    7990:	e1 f7       	brne	.-8      	; 0x798a <.do_clear_bss_loop>

00007992 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    7992:	14 be       	out	0x34, r1	; 52
    7994:	0f b6       	in	r0, 0x3f	; 63
    7996:	f8 94       	cli
    7998:	a8 95       	wdr
    799a:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    799e:	88 61       	ori	r24, 0x18	; 24
    79a0:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    79a4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    79a8:	0f be       	out	0x3f, r0	; 63

000079aa <Initialize>:
    79aa:	f8 94       	cli
    79ac:	80 e7       	ldi	r24, 0x70	; 112
    79ae:	90 e0       	ldi	r25, 0x00	; 0
    79b0:	42 ea       	ldi	r20, 0xA2	; 162
    79b2:	50 e0       	ldi	r21, 0x00	; 0
    79b4:	fc 01       	movw	r30, r24
    79b6:	25 91       	lpm	r18, Z+
    79b8:	34 91       	lpm	r19, Z
    79ba:	f9 01       	movw	r30, r18
    79bc:	ff 27       	eor	r31, r31
    79be:	30 83       	st	Z, r19
    79c0:	02 96       	adiw	r24, 0x02	; 2
    79c2:	48 17       	cp	r20, r24
    79c4:	59 07       	cpc	r21, r25
    79c6:	b1 f7       	brne	.-20     	; 0x79b4 <Initialize+0xa>
    79c8:	0e 94 cd 42 	call	0x859a	; 0x859a <isEepromFormatted>
    79cc:	81 11       	cpse	r24, r1
    79ce:	02 c0       	rjmp	.+4      	; 0x79d4 <Initialize+0x2a>
    79d0:	0e 94 ab 42 	call	0x8556	; 0x8556 <FormatEeprom>
    79d4:	81 e0       	ldi	r24, 0x01	; 1
    79d6:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
    79da:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_barrel_hi>
    79de:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    79e2:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <mixer>
    79e6:	10 92 7c 08 	sts	0x087C, r1	; 0x80087c <tr2_vol>
    79ea:	10 92 82 08 	sts	0x0882, r1	; 0x800882 <tr3_vol>
    79ee:	10 92 88 08 	sts	0x0888, r1	; 0x800888 <tr4_vol>
    79f2:	10 92 8e 08 	sts	0x088E, r1	; 0x80088e <tr5_vol>
    79f6:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <sync_phase>
    79fa:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_flags>
    79fe:	92 e1       	ldi	r25, 0x12	; 18
    7a00:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <sync_pulse>
    7a04:	90 ee       	ldi	r25, 0xE0	; 224
    7a06:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <render_lines_count>
    7a0a:	98 e1       	ldi	r25, 0x18	; 24
    7a0c:	90 93 67 08 	sts	0x0867, r25	; 0x800867 <first_render_line>
    7a10:	10 92 6c 08 	sts	0x086C, r1	; 0x80086c <joypad1_status_hi+0x1>
    7a14:	10 92 6b 08 	sts	0x086B, r1	; 0x80086b <joypad1_status_hi>
    7a18:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <joypad2_status_hi+0x1>
    7a1c:	10 92 6f 08 	sts	0x086F, r1	; 0x80086f <joypad2_status_hi>
    7a20:	80 93 75 08 	sts	0x0875, r24	; 0x800875 <sound_enabled>
    7a24:	0e 94 ae 4e 	call	0x9d5c	; 0x9d5c <InitializeVideoMode>
    7a28:	78 94       	sei
    7a2a:	0e 94 18 4f 	call	0x9e30	; 0x9e30 <DisplayLogo>
    7a2e:	0e 94 d3 67 	call	0xcfa6	; 0xcfa6 <main>
    7a32:	0c 94 4d 6a 	jmp	0xd49a	; 0xd49a <_exit>

00007a36 <__bad_interrupt>:
    7a36:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00007a3a <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    7a3a:	03 e8       	ldi	r16, 0x83	; 131
    7a3c:	0a 95       	dec	r16
    7a3e:	f1 f7       	brne	.-4      	; 0x7a3c <sub_video_mode3+0x2>
    7a40:	00 c0       	rjmp	.+0      	; 0x7a42 <sub_video_mode3+0x8>
    7a42:	00 91 4c 08 	lds	r16, 0x084C	; 0x80084c <user_ram_tiles_c>
    7a46:	ea ef       	ldi	r30, 0xFA	; 250
    7a48:	f7 e0       	ldi	r31, 0x07	; 7
    7a4a:	23 e0       	ldi	r18, 0x03	; 3
    7a4c:	02 9f       	mul	r16, r18
    7a4e:	e0 0d       	add	r30, r0
    7a50:	f1 1d       	adc	r31, r1
    7a52:	20 91 4b 08 	lds	r18, 0x084B	; 0x80084b <free_tile_index>
    7a56:	3c e3       	ldi	r19, 0x3C	; 60
    7a58:	32 1b       	sub	r19, r18
    7a5a:	30 0f       	add	r19, r16
    7a5c:	20 17       	cp	r18, r16
    7a5e:	51 f0       	breq	.+20     	; 0x7a74 <no_ramtiles>
    7a60:	00 00       	nop
	...

00007a64 <upd_loop>:
    7a64:	a1 91       	ld	r26, Z+
    7a66:	b1 91       	ld	r27, Z+
    7a68:	1c 91       	ld	r17, X
    7a6a:	11 93       	st	Z+, r17
    7a6c:	0c 93       	st	X, r16
    7a6e:	03 95       	inc	r16
    7a70:	02 17       	cp	r16, r18
    7a72:	c0 f3       	brcs	.-16     	; 0x7a64 <upd_loop>

00007a74 <no_ramtiles>:
    7a74:	13 e0       	ldi	r17, 0x03	; 3
    7a76:	1a 95       	dec	r17
    7a78:	f1 f7       	brne	.-4      	; 0x7a76 <no_ramtiles+0x2>
    7a7a:	00 c0       	rjmp	.+0      	; 0x7a7c <no_ramtiles+0x8>
    7a7c:	3a 95       	dec	r19
    7a7e:	d1 f7       	brne	.-12     	; 0x7a74 <no_ramtiles>
    7a80:	c0 e0       	ldi	r28, 0x00	; 0
    7a82:	db e0       	ldi	r29, 0x0B	; 11
    7a84:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    7a88:	92 2f       	mov	r25, r18
    7a8a:	28 7f       	andi	r18, 0xF8	; 248
    7a8c:	c2 0f       	add	r28, r18
    7a8e:	6e 01       	movw	r12, r28
    7a90:	00 91 5d 08 	lds	r16, 0x085D	; 0x80085d <screen_scrollY>
    7a94:	60 2f       	mov	r22, r16
    7a96:	06 95       	lsr	r16
    7a98:	06 95       	lsr	r16
    7a9a:	06 95       	lsr	r16
    7a9c:	10 91 5e 08 	lds	r17, 0x085E	; 0x80085e <screen_scrollHeight>
    7aa0:	10 1b       	sub	r17, r16
    7aa2:	f1 2e       	mov	r15, r17
    7aa4:	10 2f       	mov	r17, r16
    7aa6:	06 95       	lsr	r16
    7aa8:	06 95       	lsr	r16
    7aaa:	06 95       	lsr	r16
    7aac:	d0 0f       	add	r29, r16
    7aae:	17 70       	andi	r17, 0x07	; 7
    7ab0:	c1 0f       	add	r28, r17
    7ab2:	67 70       	andi	r22, 0x07	; 7
    7ab4:	40 91 5a 08 	lds	r20, 0x085A	; 0x80085a <overlay_tile_table>
    7ab8:	50 91 5b 08 	lds	r21, 0x085B	; 0x80085b <overlay_tile_table+0x1>
    7abc:	60 90 56 08 	lds	r6, 0x0856	; 0x800856 <tile_table_lo>
    7ac0:	70 90 57 08 	lds	r7, 0x0857	; 0x800857 <tile_table_hi>
    7ac4:	d3 01       	movw	r26, r6
    7ac6:	5e 01       	movw	r10, r28
    7ac8:	76 2f       	mov	r23, r22
    7aca:	8f 2d       	mov	r24, r15
    7acc:	99 2e       	mov	r9, r25
    7ace:	00 91 5e 08 	lds	r16, 0x085E	; 0x80085e <screen_scrollHeight>
    7ad2:	20 2f       	mov	r18, r16
    7ad4:	06 95       	lsr	r16
    7ad6:	06 95       	lsr	r16
    7ad8:	06 95       	lsr	r16
    7ada:	03 95       	inc	r16
    7adc:	27 70       	andi	r18, 0x07	; 7
    7ade:	30 91 59 08 	lds	r19, 0x0859	; 0x800859 <Screen>
    7ae2:	30 30       	cpi	r19, 0x00	; 0
    7ae4:	0f b6       	in	r0, 0x3f	; 63
    7ae6:	01 fe       	sbrs	r0, 1
    7ae8:	66 27       	eor	r22, r22
    7aea:	01 fe       	sbrs	r0, 1
    7aec:	c2 2f       	mov	r28, r18
    7aee:	01 fe       	sbrs	r0, 1
    7af0:	d0 2f       	mov	r29, r16
    7af2:	01 fe       	sbrs	r0, 1
    7af4:	8f ef       	ldi	r24, 0xFF	; 255
    7af6:	01 fe       	sbrs	r0, 1
    7af8:	99 24       	eor	r9, r9
    7afa:	01 fe       	sbrs	r0, 1
    7afc:	da 01       	movw	r26, r20
    7afe:	80 90 68 08 	lds	r8, 0x0868	; 0x800868 <render_lines_count>
    7b02:	07 e0       	ldi	r16, 0x07	; 7
    7b04:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7b08:	01 e0       	ldi	r16, 0x01	; 1
    7b0a:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7b0e:	01 e0       	ldi	r16, 0x01	; 1
    7b10:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00007b14 <next_tile_line>:
    7b14:	08 e0       	ldi	r16, 0x08	; 8
    7b16:	60 9f       	mul	r22, r16
    7b18:	8d 01       	movw	r16, r26
    7b1a:	00 5c       	subi	r16, 0xC0	; 192
    7b1c:	16 40       	sbci	r17, 0x06	; 6
    7b1e:	00 0d       	add	r16, r0
    7b20:	11 1d       	adc	r17, r1
    7b22:	18 01       	movw	r2, r16
    7b24:	0a e3       	ldi	r16, 0x3A	; 58
    7b26:	11 e0       	ldi	r17, 0x01	; 1
    7b28:	00 0d       	add	r16, r0
    7b2a:	11 1d       	adc	r17, r1
    7b2c:	28 01       	movw	r4, r16
    7b2e:	00 e4       	ldi	r16, 0x40	; 64
    7b30:	e0 2e       	mov	r14, r16
    7b32:	03 e9       	ldi	r16, 0x93	; 147
    7b34:	1a ef       	ldi	r17, 0xFA	; 250
    7b36:	cf 93       	push	r28
    7b38:	df 93       	push	r29
    7b3a:	58 81       	ld	r21, Y
    7b3c:	c8 5f       	subi	r28, 0xF8	; 248
    7b3e:	48 81       	ld	r20, Y
    7b40:	c8 5f       	subi	r28, 0xF8	; 248
    7b42:	a5 d3       	rcall	.+1866   	; 0x828e <hsync_pulse>
    7b44:	2c e0       	ldi	r18, 0x0C	; 12
    7b46:	2a 95       	dec	r18
    7b48:	f1 f7       	brne	.-4      	; 0x7b46 <next_tile_line+0x32>
    7b4a:	20 e1       	ldi	r18, 0x10	; 16
    7b4c:	2a 95       	dec	r18
    7b4e:	f1 f7       	brne	.-4      	; 0x7b4c <next_tile_line+0x38>
    7b50:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7b54:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7b58:	78 94       	sei
    7b5a:	00 27       	eor	r16, r16
    7b5c:	5e 9d       	mul	r21, r14
    7b5e:	5b 31       	cpi	r21, 0x1B	; 27
    7b60:	f1 01       	movw	r30, r2
    7b62:	08 f4       	brcc	.+2      	; 0x7b66 <next_tile_line+0x52>
    7b64:	f2 01       	movw	r30, r4
    7b66:	00 1f       	adc	r16, r16
    7b68:	e0 0d       	add	r30, r0
    7b6a:	f1 1d       	adc	r31, r1
    7b6c:	29 2d       	mov	r18, r9
    7b6e:	27 70       	andi	r18, 0x07	; 7
    7b70:	11 24       	eor	r1, r1
    7b72:	e2 0f       	add	r30, r18
    7b74:	f1 1d       	adc	r31, r1
    7b76:	4e 9d       	mul	r20, r14
    7b78:	4b 31       	cpi	r20, 0x1B	; 27
    7b7a:	a1 01       	movw	r20, r2
    7b7c:	08 f4       	brcc	.+2      	; 0x7b80 <next_tile_line+0x6c>
    7b7e:	a2 01       	movw	r20, r4
    7b80:	00 1f       	adc	r16, r16
    7b82:	40 0d       	add	r20, r0
    7b84:	51 1d       	adc	r21, r1
    7b86:	1a e1       	ldi	r17, 0x1A	; 26
    7b88:	01 9f       	mul	r16, r17
    7b8a:	00 2d       	mov	r16, r0
    7b8c:	13 e0       	ldi	r17, 0x03	; 3
    7b8e:	21 9f       	mul	r18, r17
    7b90:	11 27       	eor	r17, r17
    7b92:	06 5e       	subi	r16, 0xE6	; 230
    7b94:	11 4c       	sbci	r17, 0xC1	; 193
    7b96:	00 0e       	add	r0, r16
    7b98:	11 1e       	adc	r1, r17
    7b9a:	11 27       	eor	r17, r17
    7b9c:	0f 92       	push	r0
    7b9e:	1f 92       	push	r1
    7ba0:	08 95       	ret

00007ba2 <__vector_15>:
    7ba2:	18 b9       	out	0x08, r17	; 8
    7ba4:	0f 90       	pop	r0
    7ba6:	0f 90       	pop	r0
    7ba8:	df 91       	pop	r29
    7baa:	cf 91       	pop	r28
    7bac:	03 e1       	ldi	r16, 0x13	; 19
    7bae:	0a 95       	dec	r16
    7bb0:	f1 f7       	brne	.-4      	; 0x7bae <__vector_15+0xc>
    7bb2:	00 c0       	rjmp	.+0      	; 0x7bb4 <__vector_15+0x12>
    7bb4:	63 95       	inc	r22
    7bb6:	8a 94       	dec	r8
    7bb8:	f9 f0       	breq	.+62     	; 0x7bf8 <text_frame_end>
    7bba:	68 30       	cpi	r22, 0x08	; 8
    7bbc:	29 f0       	breq	.+10     	; 0x7bc8 <next_tile_row>
    7bbe:	07 e0       	ldi	r16, 0x07	; 7
    7bc0:	0a 95       	dec	r16
    7bc2:	f1 f7       	brne	.-4      	; 0x7bc0 <__vector_15+0x1e>
    7bc4:	00 c0       	rjmp	.+0      	; 0x7bc6 <__vector_15+0x24>
    7bc6:	a6 cf       	rjmp	.-180    	; 0x7b14 <next_tile_line>

00007bc8 <next_tile_row>:
    7bc8:	66 27       	eor	r22, r22
    7bca:	0c 2f       	mov	r16, r28
    7bcc:	07 70       	andi	r16, 0x07	; 7
    7bce:	07 30       	cpi	r16, 0x07	; 7
    7bd0:	11 f0       	breq	.+4      	; 0x7bd6 <next_tile_row+0xe>
    7bd2:	c3 95       	inc	r28
    7bd4:	02 c0       	rjmp	.+4      	; 0x7bda <next_tile_row+0x12>
    7bd6:	c8 7f       	andi	r28, 0xF8	; 248
    7bd8:	d3 95       	inc	r29
    7bda:	8a 95       	dec	r24
    7bdc:	09 f4       	brne	.+2      	; 0x7be0 <next_tile_row+0x18>
    7bde:	e6 01       	movw	r28, r12
    7be0:	3a 95       	dec	r19
    7be2:	09 f4       	brne	.+2      	; 0x7be6 <next_tile_row+0x1e>
    7be4:	67 2f       	mov	r22, r23
    7be6:	09 f4       	brne	.+2      	; 0x7bea <next_tile_row+0x22>
    7be8:	e5 01       	movw	r28, r10
    7bea:	09 f4       	brne	.+2      	; 0x7bee <next_tile_row+0x26>
    7bec:	8f 2d       	mov	r24, r15
    7bee:	09 f4       	brne	.+2      	; 0x7bf2 <next_tile_row+0x2a>
    7bf0:	99 2e       	mov	r9, r25
    7bf2:	09 f4       	brne	.+2      	; 0x7bf6 <next_tile_row+0x2e>
    7bf4:	d3 01       	movw	r26, r6
    7bf6:	8e cf       	rjmp	.-228    	; 0x7b14 <next_tile_line>

00007bf8 <text_frame_end>:
    7bf8:	20 e1       	ldi	r18, 0x10	; 16
    7bfa:	2a 95       	dec	r18
    7bfc:	f1 f7       	brne	.-4      	; 0x7bfa <text_frame_end+0x2>
    7bfe:	00 e0       	ldi	r16, 0x00	; 0
    7c00:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7c04:	0c e2       	ldi	r16, 0x2C	; 44
    7c06:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7c0a:	41 d3       	rcall	.+1666   	; 0x828e <hsync_pulse>
    7c0c:	11 24       	eor	r1, r1
    7c0e:	0e 94 ec 3f 	call	0x7fd8	; 0x7fd8 <RestoreBackground>
    7c12:	e0 91 62 08 	lds	r30, 0x0862	; 0x800862 <sync_flags>
    7c16:	42 e0       	ldi	r20, 0x02	; 2
    7c18:	e1 60       	ori	r30, 0x01	; 1
    7c1a:	e4 27       	eor	r30, r20
    7c1c:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_flags>
    7c20:	07 e0       	ldi	r16, 0x07	; 7
    7c22:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7c26:	09 e0       	ldi	r16, 0x09	; 9
    7c28:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7c2c:	02 e0       	ldi	r16, 0x02	; 2
    7c2e:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7c32:	08 95       	ret

00007c34 <romrom_e>:
    7c34:	00 c0       	rjmp	.+0      	; 0x7c36 <romrom_e+0x2>
    7c36:	05 91       	lpm	r16, Z+
    7c38:	08 b9       	out	0x08, r16	; 8
    7c3a:	00 c0       	rjmp	.+0      	; 0x7c3c <romrom_e+0x8>
    7c3c:	05 91       	lpm	r16, Z+
    7c3e:	08 b9       	out	0x08, r16	; 8
    7c40:	00 c0       	rjmp	.+0      	; 0x7c42 <romrom_e+0xe>
    7c42:	05 91       	lpm	r16, Z+
    7c44:	08 b9       	out	0x08, r16	; 8
    7c46:	00 c0       	rjmp	.+0      	; 0x7c48 <romrom_e+0x14>
    7c48:	05 91       	lpm	r16, Z+
    7c4a:	08 b9       	out	0x08, r16	; 8
    7c4c:	00 c0       	rjmp	.+0      	; 0x7c4e <romrom_e+0x1a>
    7c4e:	05 91       	lpm	r16, Z+
    7c50:	08 b9       	out	0x08, r16	; 8
    7c52:	00 c0       	rjmp	.+0      	; 0x7c54 <romrom_e+0x20>
    7c54:	05 91       	lpm	r16, Z+
    7c56:	08 b9       	out	0x08, r16	; 8
    7c58:	00 c0       	rjmp	.+0      	; 0x7c5a <romrom_e+0x26>
    7c5a:	05 91       	lpm	r16, Z+
    7c5c:	08 b9       	out	0x08, r16	; 8
    7c5e:	00 00       	nop
    7c60:	05 91       	lpm	r16, Z+
    7c62:	fa 01       	movw	r30, r20
    7c64:	08 b9       	out	0x08, r16	; 8
    7c66:	56 c0       	rjmp	.+172    	; 0x7d14 <romloop_px0>

00007c68 <romram_e>:
    7c68:	00 c0       	rjmp	.+0      	; 0x7c6a <romram_e+0x2>
    7c6a:	05 91       	lpm	r16, Z+
    7c6c:	08 b9       	out	0x08, r16	; 8
    7c6e:	00 c0       	rjmp	.+0      	; 0x7c70 <romram_e+0x8>
    7c70:	05 91       	lpm	r16, Z+
    7c72:	08 b9       	out	0x08, r16	; 8
    7c74:	00 c0       	rjmp	.+0      	; 0x7c76 <romram_e+0xe>
    7c76:	05 91       	lpm	r16, Z+
    7c78:	08 b9       	out	0x08, r16	; 8
    7c7a:	00 c0       	rjmp	.+0      	; 0x7c7c <romram_e+0x14>
    7c7c:	05 91       	lpm	r16, Z+
    7c7e:	08 b9       	out	0x08, r16	; 8
    7c80:	00 c0       	rjmp	.+0      	; 0x7c82 <romram_e+0x1a>
    7c82:	05 91       	lpm	r16, Z+
    7c84:	08 b9       	out	0x08, r16	; 8
    7c86:	00 c0       	rjmp	.+0      	; 0x7c88 <romram_e+0x20>
    7c88:	05 91       	lpm	r16, Z+
    7c8a:	08 b9       	out	0x08, r16	; 8
    7c8c:	00 c0       	rjmp	.+0      	; 0x7c8e <romram_e+0x26>
    7c8e:	05 91       	lpm	r16, Z+
    7c90:	08 b9       	out	0x08, r16	; 8
    7c92:	00 00       	nop
    7c94:	05 91       	lpm	r16, Z+
    7c96:	fa 01       	movw	r30, r20
    7c98:	08 b9       	out	0x08, r16	; 8
    7c9a:	59 c0       	rjmp	.+178    	; 0x7d4e <ramloop_px0>

00007c9c <ramrom_e>:
    7c9c:	04 91       	lpm	r16, Z
    7c9e:	01 91       	ld	r16, Z+
    7ca0:	08 b9       	out	0x08, r16	; 8
    7ca2:	04 91       	lpm	r16, Z
    7ca4:	01 91       	ld	r16, Z+
    7ca6:	08 b9       	out	0x08, r16	; 8
    7ca8:	04 91       	lpm	r16, Z
    7caa:	01 91       	ld	r16, Z+
    7cac:	08 b9       	out	0x08, r16	; 8
    7cae:	04 91       	lpm	r16, Z
    7cb0:	01 91       	ld	r16, Z+
    7cb2:	08 b9       	out	0x08, r16	; 8
    7cb4:	04 91       	lpm	r16, Z
    7cb6:	01 91       	ld	r16, Z+
    7cb8:	08 b9       	out	0x08, r16	; 8
    7cba:	04 91       	lpm	r16, Z
    7cbc:	01 91       	ld	r16, Z+
    7cbe:	08 b9       	out	0x08, r16	; 8
    7cc0:	04 91       	lpm	r16, Z
    7cc2:	01 91       	ld	r16, Z+
    7cc4:	08 b9       	out	0x08, r16	; 8
    7cc6:	00 c0       	rjmp	.+0      	; 0x7cc8 <ramrom_e+0x2c>
    7cc8:	01 91       	ld	r16, Z+
    7cca:	fa 01       	movw	r30, r20
    7ccc:	08 b9       	out	0x08, r16	; 8
    7cce:	22 c0       	rjmp	.+68     	; 0x7d14 <romloop_px0>

00007cd0 <ramram_e>:
    7cd0:	04 91       	lpm	r16, Z
    7cd2:	01 91       	ld	r16, Z+
    7cd4:	08 b9       	out	0x08, r16	; 8
    7cd6:	04 91       	lpm	r16, Z
    7cd8:	01 91       	ld	r16, Z+
    7cda:	08 b9       	out	0x08, r16	; 8
    7cdc:	04 91       	lpm	r16, Z
    7cde:	01 91       	ld	r16, Z+
    7ce0:	08 b9       	out	0x08, r16	; 8
    7ce2:	04 91       	lpm	r16, Z
    7ce4:	01 91       	ld	r16, Z+
    7ce6:	08 b9       	out	0x08, r16	; 8
    7ce8:	04 91       	lpm	r16, Z
    7cea:	01 91       	ld	r16, Z+
    7cec:	08 b9       	out	0x08, r16	; 8
    7cee:	04 91       	lpm	r16, Z
    7cf0:	01 91       	ld	r16, Z+
    7cf2:	08 b9       	out	0x08, r16	; 8
    7cf4:	04 91       	lpm	r16, Z
    7cf6:	01 91       	ld	r16, Z+
    7cf8:	08 b9       	out	0x08, r16	; 8
    7cfa:	00 c0       	rjmp	.+0      	; 0x7cfc <ramram_e+0x2c>
    7cfc:	01 91       	ld	r16, Z+
    7cfe:	fa 01       	movw	r30, r20
    7d00:	08 b9       	out	0x08, r16	; 8
    7d02:	25 c0       	rjmp	.+74     	; 0x7d4e <ramloop_px0>

00007d04 <romloop>:
    7d04:	05 91       	lpm	r16, Z+
    7d06:	08 b9       	out	0x08, r16	; 8
    7d08:	02 0c       	add	r0, r2
    7d0a:	00 00       	nop
    7d0c:	05 91       	lpm	r16, Z+
    7d0e:	08 b9       	out	0x08, r16	; 8
    7d10:	13 1c       	adc	r1, r3
    7d12:	f0 01       	movw	r30, r0

00007d14 <romloop_px0>:
    7d14:	05 91       	lpm	r16, Z+
    7d16:	08 b9       	out	0x08, r16	; 8
    7d18:	00 c0       	rjmp	.+0      	; 0x7d1a <romloop_px0+0x6>
    7d1a:	05 91       	lpm	r16, Z+
    7d1c:	08 b9       	out	0x08, r16	; 8
    7d1e:	48 81       	ld	r20, Y
    7d20:	05 91       	lpm	r16, Z+
    7d22:	08 b9       	out	0x08, r16	; 8
    7d24:	c8 5f       	subi	r28, 0xF8	; 248
    7d26:	00 00       	nop
    7d28:	05 91       	lpm	r16, Z+
    7d2a:	08 b9       	out	0x08, r16	; 8
    7d2c:	4e 9d       	mul	r20, r14
    7d2e:	05 91       	lpm	r16, Z+
    7d30:	08 b9       	out	0x08, r16	; 8
    7d32:	4b 31       	cpi	r20, 0x1B	; 27
    7d34:	00 00       	nop
    7d36:	05 91       	lpm	r16, Z+
    7d38:	08 b9       	out	0x08, r16	; 8
    7d3a:	20 f7       	brcc	.-56     	; 0x7d04 <romloop>
    7d3c:	00 00       	nop
    7d3e:	05 91       	lpm	r16, Z+
    7d40:	08 b9       	out	0x08, r16	; 8
    7d42:	04 0c       	add	r0, r4
    7d44:	00 00       	nop
    7d46:	05 91       	lpm	r16, Z+
    7d48:	08 b9       	out	0x08, r16	; 8
    7d4a:	15 1c       	adc	r1, r5
    7d4c:	f0 01       	movw	r30, r0

00007d4e <ramloop_px0>:
    7d4e:	00 00       	nop
    7d50:	01 91       	ld	r16, Z+
    7d52:	08 b9       	out	0x08, r16	; 8
    7d54:	48 81       	ld	r20, Y
    7d56:	00 00       	nop
    7d58:	01 91       	ld	r16, Z+
    7d5a:	08 b9       	out	0x08, r16	; 8
    7d5c:	c8 5f       	subi	r28, 0xF8	; 248
    7d5e:	4e 9d       	mul	r20, r14
    7d60:	01 91       	ld	r16, Z+
    7d62:	08 b9       	out	0x08, r16	; 8
    7d64:	04 91       	lpm	r16, Z
    7d66:	01 91       	ld	r16, Z+
    7d68:	08 b9       	out	0x08, r16	; 8
    7d6a:	04 91       	lpm	r16, Z
    7d6c:	01 91       	ld	r16, Z+
    7d6e:	08 b9       	out	0x08, r16	; 8
    7d70:	4b 31       	cpi	r20, 0x1B	; 27
    7d72:	00 c0       	rjmp	.+0      	; 0x7d74 <ramloop_px0+0x26>
    7d74:	01 91       	ld	r16, Z+
    7d76:	08 b9       	out	0x08, r16	; 8
    7d78:	50 f4       	brcc	.+20     	; 0x7d8e <ramloop_tr>
    7d7a:	00 00       	nop
    7d7c:	04 0c       	add	r0, r4
    7d7e:	01 91       	ld	r16, Z+
    7d80:	08 b9       	out	0x08, r16	; 8
    7d82:	15 1c       	adc	r1, r5
    7d84:	00 00       	nop
    7d86:	01 91       	ld	r16, Z+
    7d88:	f0 01       	movw	r30, r0
    7d8a:	08 b9       	out	0x08, r16	; 8
    7d8c:	e0 cf       	rjmp	.-64     	; 0x7d4e <ramloop_px0>

00007d8e <ramloop_tr>:
    7d8e:	02 0c       	add	r0, r2
    7d90:	01 91       	ld	r16, Z+
    7d92:	08 b9       	out	0x08, r16	; 8
    7d94:	13 1c       	adc	r1, r3
    7d96:	00 00       	nop
    7d98:	01 91       	ld	r16, Z+
    7d9a:	f0 01       	movw	r30, r0
    7d9c:	08 b9       	out	0x08, r16	; 8
    7d9e:	ba cf       	rjmp	.-140    	; 0x7d14 <romloop_px0>

00007da0 <CopyFlashTile>:
    7da0:	20 e4       	ldi	r18, 0x40	; 64
    7da2:	e0 91 56 08 	lds	r30, 0x0856	; 0x800856 <tile_table_lo>
    7da6:	f0 91 57 08 	lds	r31, 0x0857	; 0x800857 <tile_table_hi>
    7daa:	82 9f       	mul	r24, r18
    7dac:	e0 0d       	add	r30, r0
    7dae:	f1 1d       	adc	r31, r1
    7db0:	aa e3       	ldi	r26, 0x3A	; 58
    7db2:	b1 e0       	ldi	r27, 0x01	; 1
    7db4:	62 9f       	mul	r22, r18
    7db6:	a0 0d       	add	r26, r0
    7db8:	b1 1d       	adc	r27, r1
    7dba:	15 90       	lpm	r1, Z+
    7dbc:	1d 92       	st	X+, r1
    7dbe:	15 90       	lpm	r1, Z+
    7dc0:	1d 92       	st	X+, r1
    7dc2:	15 90       	lpm	r1, Z+
    7dc4:	1d 92       	st	X+, r1
    7dc6:	15 90       	lpm	r1, Z+
    7dc8:	1d 92       	st	X+, r1
    7dca:	15 90       	lpm	r1, Z+
    7dcc:	1d 92       	st	X+, r1
    7dce:	15 90       	lpm	r1, Z+
    7dd0:	1d 92       	st	X+, r1
    7dd2:	15 90       	lpm	r1, Z+
    7dd4:	1d 92       	st	X+, r1
    7dd6:	15 90       	lpm	r1, Z+
    7dd8:	1d 92       	st	X+, r1
    7dda:	15 90       	lpm	r1, Z+
    7ddc:	1d 92       	st	X+, r1
    7dde:	15 90       	lpm	r1, Z+
    7de0:	1d 92       	st	X+, r1
    7de2:	15 90       	lpm	r1, Z+
    7de4:	1d 92       	st	X+, r1
    7de6:	15 90       	lpm	r1, Z+
    7de8:	1d 92       	st	X+, r1
    7dea:	15 90       	lpm	r1, Z+
    7dec:	1d 92       	st	X+, r1
    7dee:	15 90       	lpm	r1, Z+
    7df0:	1d 92       	st	X+, r1
    7df2:	15 90       	lpm	r1, Z+
    7df4:	1d 92       	st	X+, r1
    7df6:	15 90       	lpm	r1, Z+
    7df8:	1d 92       	st	X+, r1
    7dfa:	15 90       	lpm	r1, Z+
    7dfc:	1d 92       	st	X+, r1
    7dfe:	15 90       	lpm	r1, Z+
    7e00:	1d 92       	st	X+, r1
    7e02:	15 90       	lpm	r1, Z+
    7e04:	1d 92       	st	X+, r1
    7e06:	15 90       	lpm	r1, Z+
    7e08:	1d 92       	st	X+, r1
    7e0a:	15 90       	lpm	r1, Z+
    7e0c:	1d 92       	st	X+, r1
    7e0e:	15 90       	lpm	r1, Z+
    7e10:	1d 92       	st	X+, r1
    7e12:	15 90       	lpm	r1, Z+
    7e14:	1d 92       	st	X+, r1
    7e16:	15 90       	lpm	r1, Z+
    7e18:	1d 92       	st	X+, r1
    7e1a:	15 90       	lpm	r1, Z+
    7e1c:	1d 92       	st	X+, r1
    7e1e:	15 90       	lpm	r1, Z+
    7e20:	1d 92       	st	X+, r1
    7e22:	15 90       	lpm	r1, Z+
    7e24:	1d 92       	st	X+, r1
    7e26:	15 90       	lpm	r1, Z+
    7e28:	1d 92       	st	X+, r1
    7e2a:	15 90       	lpm	r1, Z+
    7e2c:	1d 92       	st	X+, r1
    7e2e:	15 90       	lpm	r1, Z+
    7e30:	1d 92       	st	X+, r1
    7e32:	15 90       	lpm	r1, Z+
    7e34:	1d 92       	st	X+, r1
    7e36:	15 90       	lpm	r1, Z+
    7e38:	1d 92       	st	X+, r1
    7e3a:	15 90       	lpm	r1, Z+
    7e3c:	1d 92       	st	X+, r1
    7e3e:	15 90       	lpm	r1, Z+
    7e40:	1d 92       	st	X+, r1
    7e42:	15 90       	lpm	r1, Z+
    7e44:	1d 92       	st	X+, r1
    7e46:	15 90       	lpm	r1, Z+
    7e48:	1d 92       	st	X+, r1
    7e4a:	15 90       	lpm	r1, Z+
    7e4c:	1d 92       	st	X+, r1
    7e4e:	15 90       	lpm	r1, Z+
    7e50:	1d 92       	st	X+, r1
    7e52:	15 90       	lpm	r1, Z+
    7e54:	1d 92       	st	X+, r1
    7e56:	15 90       	lpm	r1, Z+
    7e58:	1d 92       	st	X+, r1
    7e5a:	15 90       	lpm	r1, Z+
    7e5c:	1d 92       	st	X+, r1
    7e5e:	15 90       	lpm	r1, Z+
    7e60:	1d 92       	st	X+, r1
    7e62:	15 90       	lpm	r1, Z+
    7e64:	1d 92       	st	X+, r1
    7e66:	15 90       	lpm	r1, Z+
    7e68:	1d 92       	st	X+, r1
    7e6a:	15 90       	lpm	r1, Z+
    7e6c:	1d 92       	st	X+, r1
    7e6e:	15 90       	lpm	r1, Z+
    7e70:	1d 92       	st	X+, r1
    7e72:	15 90       	lpm	r1, Z+
    7e74:	1d 92       	st	X+, r1
    7e76:	15 90       	lpm	r1, Z+
    7e78:	1d 92       	st	X+, r1
    7e7a:	15 90       	lpm	r1, Z+
    7e7c:	1d 92       	st	X+, r1
    7e7e:	15 90       	lpm	r1, Z+
    7e80:	1d 92       	st	X+, r1
    7e82:	15 90       	lpm	r1, Z+
    7e84:	1d 92       	st	X+, r1
    7e86:	15 90       	lpm	r1, Z+
    7e88:	1d 92       	st	X+, r1
    7e8a:	15 90       	lpm	r1, Z+
    7e8c:	1d 92       	st	X+, r1
    7e8e:	15 90       	lpm	r1, Z+
    7e90:	1d 92       	st	X+, r1
    7e92:	15 90       	lpm	r1, Z+
    7e94:	1d 92       	st	X+, r1
    7e96:	15 90       	lpm	r1, Z+
    7e98:	1d 92       	st	X+, r1
    7e9a:	15 90       	lpm	r1, Z+
    7e9c:	1d 92       	st	X+, r1
    7e9e:	15 90       	lpm	r1, Z+
    7ea0:	1d 92       	st	X+, r1
    7ea2:	15 90       	lpm	r1, Z+
    7ea4:	1d 92       	st	X+, r1
    7ea6:	15 90       	lpm	r1, Z+
    7ea8:	1d 92       	st	X+, r1
    7eaa:	15 90       	lpm	r1, Z+
    7eac:	1d 92       	st	X+, r1
    7eae:	15 90       	lpm	r1, Z+
    7eb0:	1d 92       	st	X+, r1
    7eb2:	15 90       	lpm	r1, Z+
    7eb4:	1d 92       	st	X+, r1
    7eb6:	15 90       	lpm	r1, Z+
    7eb8:	1d 92       	st	X+, r1
    7eba:	11 24       	eor	r1, r1
    7ebc:	08 95       	ret

00007ebe <CopyRamTile>:
    7ebe:	20 e4       	ldi	r18, 0x40	; 64
    7ec0:	ea e3       	ldi	r30, 0x3A	; 58
    7ec2:	f1 e0       	ldi	r31, 0x01	; 1
    7ec4:	82 9f       	mul	r24, r18
    7ec6:	e0 0d       	add	r30, r0
    7ec8:	f1 1d       	adc	r31, r1
    7eca:	aa e3       	ldi	r26, 0x3A	; 58
    7ecc:	b1 e0       	ldi	r27, 0x01	; 1
    7ece:	62 9f       	mul	r22, r18
    7ed0:	a0 0d       	add	r26, r0
    7ed2:	b1 1d       	adc	r27, r1
    7ed4:	11 90       	ld	r1, Z+
    7ed6:	1d 92       	st	X+, r1
    7ed8:	11 90       	ld	r1, Z+
    7eda:	1d 92       	st	X+, r1
    7edc:	11 90       	ld	r1, Z+
    7ede:	1d 92       	st	X+, r1
    7ee0:	11 90       	ld	r1, Z+
    7ee2:	1d 92       	st	X+, r1
    7ee4:	11 90       	ld	r1, Z+
    7ee6:	1d 92       	st	X+, r1
    7ee8:	11 90       	ld	r1, Z+
    7eea:	1d 92       	st	X+, r1
    7eec:	11 90       	ld	r1, Z+
    7eee:	1d 92       	st	X+, r1
    7ef0:	11 90       	ld	r1, Z+
    7ef2:	1d 92       	st	X+, r1
    7ef4:	11 90       	ld	r1, Z+
    7ef6:	1d 92       	st	X+, r1
    7ef8:	11 90       	ld	r1, Z+
    7efa:	1d 92       	st	X+, r1
    7efc:	11 90       	ld	r1, Z+
    7efe:	1d 92       	st	X+, r1
    7f00:	11 90       	ld	r1, Z+
    7f02:	1d 92       	st	X+, r1
    7f04:	11 90       	ld	r1, Z+
    7f06:	1d 92       	st	X+, r1
    7f08:	11 90       	ld	r1, Z+
    7f0a:	1d 92       	st	X+, r1
    7f0c:	11 90       	ld	r1, Z+
    7f0e:	1d 92       	st	X+, r1
    7f10:	11 90       	ld	r1, Z+
    7f12:	1d 92       	st	X+, r1
    7f14:	11 90       	ld	r1, Z+
    7f16:	1d 92       	st	X+, r1
    7f18:	11 90       	ld	r1, Z+
    7f1a:	1d 92       	st	X+, r1
    7f1c:	11 90       	ld	r1, Z+
    7f1e:	1d 92       	st	X+, r1
    7f20:	11 90       	ld	r1, Z+
    7f22:	1d 92       	st	X+, r1
    7f24:	11 90       	ld	r1, Z+
    7f26:	1d 92       	st	X+, r1
    7f28:	11 90       	ld	r1, Z+
    7f2a:	1d 92       	st	X+, r1
    7f2c:	11 90       	ld	r1, Z+
    7f2e:	1d 92       	st	X+, r1
    7f30:	11 90       	ld	r1, Z+
    7f32:	1d 92       	st	X+, r1
    7f34:	11 90       	ld	r1, Z+
    7f36:	1d 92       	st	X+, r1
    7f38:	11 90       	ld	r1, Z+
    7f3a:	1d 92       	st	X+, r1
    7f3c:	11 90       	ld	r1, Z+
    7f3e:	1d 92       	st	X+, r1
    7f40:	11 90       	ld	r1, Z+
    7f42:	1d 92       	st	X+, r1
    7f44:	11 90       	ld	r1, Z+
    7f46:	1d 92       	st	X+, r1
    7f48:	11 90       	ld	r1, Z+
    7f4a:	1d 92       	st	X+, r1
    7f4c:	11 90       	ld	r1, Z+
    7f4e:	1d 92       	st	X+, r1
    7f50:	11 90       	ld	r1, Z+
    7f52:	1d 92       	st	X+, r1
    7f54:	11 90       	ld	r1, Z+
    7f56:	1d 92       	st	X+, r1
    7f58:	11 90       	ld	r1, Z+
    7f5a:	1d 92       	st	X+, r1
    7f5c:	11 90       	ld	r1, Z+
    7f5e:	1d 92       	st	X+, r1
    7f60:	11 90       	ld	r1, Z+
    7f62:	1d 92       	st	X+, r1
    7f64:	11 90       	ld	r1, Z+
    7f66:	1d 92       	st	X+, r1
    7f68:	11 90       	ld	r1, Z+
    7f6a:	1d 92       	st	X+, r1
    7f6c:	11 90       	ld	r1, Z+
    7f6e:	1d 92       	st	X+, r1
    7f70:	11 90       	ld	r1, Z+
    7f72:	1d 92       	st	X+, r1
    7f74:	11 90       	ld	r1, Z+
    7f76:	1d 92       	st	X+, r1
    7f78:	11 90       	ld	r1, Z+
    7f7a:	1d 92       	st	X+, r1
    7f7c:	11 90       	ld	r1, Z+
    7f7e:	1d 92       	st	X+, r1
    7f80:	11 90       	ld	r1, Z+
    7f82:	1d 92       	st	X+, r1
    7f84:	11 90       	ld	r1, Z+
    7f86:	1d 92       	st	X+, r1
    7f88:	11 90       	ld	r1, Z+
    7f8a:	1d 92       	st	X+, r1
    7f8c:	11 90       	ld	r1, Z+
    7f8e:	1d 92       	st	X+, r1
    7f90:	11 90       	ld	r1, Z+
    7f92:	1d 92       	st	X+, r1
    7f94:	11 90       	ld	r1, Z+
    7f96:	1d 92       	st	X+, r1
    7f98:	11 90       	ld	r1, Z+
    7f9a:	1d 92       	st	X+, r1
    7f9c:	11 90       	ld	r1, Z+
    7f9e:	1d 92       	st	X+, r1
    7fa0:	11 90       	ld	r1, Z+
    7fa2:	1d 92       	st	X+, r1
    7fa4:	11 90       	ld	r1, Z+
    7fa6:	1d 92       	st	X+, r1
    7fa8:	11 90       	ld	r1, Z+
    7faa:	1d 92       	st	X+, r1
    7fac:	11 90       	ld	r1, Z+
    7fae:	1d 92       	st	X+, r1
    7fb0:	11 90       	ld	r1, Z+
    7fb2:	1d 92       	st	X+, r1
    7fb4:	11 90       	ld	r1, Z+
    7fb6:	1d 92       	st	X+, r1
    7fb8:	11 90       	ld	r1, Z+
    7fba:	1d 92       	st	X+, r1
    7fbc:	11 90       	ld	r1, Z+
    7fbe:	1d 92       	st	X+, r1
    7fc0:	11 90       	ld	r1, Z+
    7fc2:	1d 92       	st	X+, r1
    7fc4:	11 90       	ld	r1, Z+
    7fc6:	1d 92       	st	X+, r1
    7fc8:	11 90       	ld	r1, Z+
    7fca:	1d 92       	st	X+, r1
    7fcc:	11 90       	ld	r1, Z+
    7fce:	1d 92       	st	X+, r1
    7fd0:	11 90       	ld	r1, Z+
    7fd2:	1d 92       	st	X+, r1
    7fd4:	11 24       	eor	r1, r1
    7fd6:	08 95       	ret

00007fd8 <RestoreBackground>:
    7fd8:	e0 91 4c 08 	lds	r30, 0x084C	; 0x80084c <user_ram_tiles_c>
    7fdc:	8e 2f       	mov	r24, r30
    7fde:	ee 0f       	add	r30, r30
    7fe0:	e8 0f       	add	r30, r24
    7fe2:	ff 27       	eor	r31, r31
    7fe4:	e6 50       	subi	r30, 0x06	; 6
    7fe6:	f8 4f       	sbci	r31, 0xF8	; 248
    7fe8:	00 90 4b 08 	lds	r0, 0x084B	; 0x80084b <free_tile_index>
    7fec:	80 19       	sub	r24, r0
    7fee:	30 f4       	brcc	.+12     	; 0x7ffc <rbg_exit>

00007ff0 <rbg_loop>:
    7ff0:	a1 91       	ld	r26, Z+
    7ff2:	b1 91       	ld	r27, Z+
    7ff4:	01 90       	ld	r0, Z+
    7ff6:	0c 92       	st	X, r0
    7ff8:	83 95       	inc	r24
    7ffa:	d1 f7       	brne	.-12     	; 0x7ff0 <rbg_loop>

00007ffc <rbg_exit>:
    7ffc:	08 95       	ret

00007ffe <BlitSpritePart>:
    7ffe:	98 e0       	ldi	r25, 0x08	; 8
    8000:	79 9f       	mul	r23, r25
    8002:	a1 2d       	mov	r26, r1
    8004:	bb 27       	eor	r27, r27
    8006:	a2 5b       	subi	r26, 0xB2	; 178
    8008:	b7 4f       	sbci	r27, 0xF7	; 247
    800a:	ed 91       	ld	r30, X+
    800c:	fd 91       	ld	r31, X+

0000800e <bsp_send>:
    800e:	90 e4       	ldi	r25, 0x40	; 64
    8010:	69 9f       	mul	r22, r25
    8012:	e0 0d       	add	r30, r0
    8014:	f1 1d       	adc	r31, r1
    8016:	89 9f       	mul	r24, r25
    8018:	d0 01       	movw	r26, r0
    801a:	a6 5c       	subi	r26, 0xC6	; 198
    801c:	be 4f       	sbci	r27, 0xFE	; 254
    801e:	90 e0       	ldi	r25, 0x00	; 0
    8020:	40 fd       	sbrc	r20, 0
    8022:	09 c0       	rjmp	.+18     	; 0x8036 <x_2nd_tile>
    8024:	82 2f       	mov	r24, r18
    8026:	48 e0       	ldi	r20, 0x08	; 8
    8028:	42 1b       	sub	r20, r18
    802a:	70 ff       	sbrs	r23, 0
    802c:	0a c0       	rjmp	.+20     	; 0x8042 <x_1st_tile_nxf>
    802e:	17 96       	adiw	r26, 0x07	; 7

00008030 <x_2nd_tile_nxf>:
    8030:	e8 0f       	add	r30, r24
    8032:	f9 1f       	adc	r31, r25
    8034:	08 c0       	rjmp	.+16     	; 0x8046 <x_check_end>

00008036 <x_2nd_tile>:
    8036:	88 e0       	ldi	r24, 0x08	; 8
    8038:	82 1b       	sub	r24, r18
    803a:	42 2f       	mov	r20, r18
    803c:	70 ff       	sbrs	r23, 0
    803e:	f8 cf       	rjmp	.-16     	; 0x8030 <x_2nd_tile_nxf>
    8040:	11 97       	sbiw	r26, 0x01	; 1

00008042 <x_1st_tile_nxf>:
    8042:	a2 0f       	add	r26, r18
    8044:	b9 1f       	adc	r27, r25

00008046 <x_check_end>:
    8046:	68 e0       	ldi	r22, 0x08	; 8
    8048:	28 e0       	ldi	r18, 0x08	; 8
    804a:	23 1b       	sub	r18, r19
    804c:	50 fd       	sbrc	r21, 0
    804e:	09 c0       	rjmp	.+18     	; 0x8062 <y_2nd_tile>
    8050:	63 9f       	mul	r22, r19
    8052:	a0 0d       	add	r26, r0
    8054:	b1 1d       	adc	r27, r1
    8056:	71 fd       	sbrc	r23, 1
    8058:	e8 5c       	subi	r30, 0xC8	; 200
    805a:	71 fd       	sbrc	r23, 1
    805c:	ff 4f       	sbci	r31, 0xFF	; 255
    805e:	12 2e       	mov	r1, r18
    8060:	08 c0       	rjmp	.+16     	; 0x8072 <y_check_end>

00008062 <y_2nd_tile>:
    8062:	13 2e       	mov	r1, r19
    8064:	1a 94       	dec	r1
    8066:	71 ff       	sbrs	r23, 1
    8068:	12 2e       	mov	r1, r18
    806a:	61 9d       	mul	r22, r1
    806c:	e0 0d       	add	r30, r0
    806e:	f1 1d       	adc	r31, r1
    8070:	13 2e       	mov	r1, r19

00008072 <y_check_end>:
    8072:	71 fd       	sbrc	r23, 1
    8074:	40 97       	sbiw	r24, 0x10	; 16
    8076:	70 fd       	sbrc	r23, 0
    8078:	05 c0       	rjmp	.+10     	; 0x8084 <x_diff_xf>
    807a:	57 ef       	ldi	r21, 0xF7	; 247
    807c:	54 0f       	add	r21, r20
    807e:	70 e0       	ldi	r23, 0x00	; 0
    8080:	61 e0       	ldi	r22, 0x01	; 1
    8082:	04 c0       	rjmp	.+8      	; 0x808c <x_diff_end>

00008084 <x_diff_xf>:
    8084:	59 ef       	ldi	r21, 0xF9	; 249
    8086:	54 1b       	sub	r21, r20
    8088:	7f ef       	ldi	r23, 0xFF	; 255
    808a:	6f ef       	ldi	r22, 0xFF	; 255

0000808c <x_diff_end>:
    808c:	3e ef       	ldi	r19, 0xFE	; 254
    808e:	04 2e       	mov	r0, r20
    8090:	46 95       	lsr	r20
    8092:	30 f4       	brcc	.+12     	; 0x80a0 <x_loop1>
    8094:	61 f0       	breq	.+24     	; 0x80ae <x_loopx>

00008096 <x_loop0>:
    8096:	25 91       	lpm	r18, Z+
    8098:	23 13       	cpse	r18, r19
    809a:	2c 93       	st	X, r18
    809c:	a6 0f       	add	r26, r22
    809e:	b7 1f       	adc	r27, r23

000080a0 <x_loop1>:
    80a0:	25 91       	lpm	r18, Z+
    80a2:	23 13       	cpse	r18, r19
    80a4:	2c 93       	st	X, r18
    80a6:	a6 0f       	add	r26, r22
    80a8:	b7 1f       	adc	r27, r23
    80aa:	41 50       	subi	r20, 0x01	; 1
    80ac:	a1 f7       	brne	.-24     	; 0x8096 <x_loop0>

000080ae <x_loopx>:
    80ae:	25 91       	lpm	r18, Z+
    80b0:	23 13       	cpse	r18, r19
    80b2:	2c 93       	st	X, r18
    80b4:	1a 94       	dec	r1
    80b6:	49 f0       	breq	.+18     	; 0x80ca <loop_e>
    80b8:	e8 0f       	add	r30, r24
    80ba:	f9 1f       	adc	r31, r25
    80bc:	a5 1b       	sub	r26, r21
    80be:	bf 4f       	sbci	r27, 0xFF	; 255
    80c0:	40 2d       	mov	r20, r0
    80c2:	46 95       	lsr	r20
    80c4:	68 f7       	brcc	.-38     	; 0x80a0 <x_loop1>
    80c6:	39 f7       	brne	.-50     	; 0x8096 <x_loop0>
    80c8:	f2 cf       	rjmp	.-28     	; 0x80ae <x_loopx>

000080ca <loop_e>:
    80ca:	08 95       	ret

000080cc <__vector_13>:
    80cc:	0f 92       	push	r0
    80ce:	1f 92       	push	r1
    80d0:	ef 93       	push	r30
    80d2:	ff 93       	push	r31
    80d4:	ff b7       	in	r31, 0x3f	; 63
    80d6:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    80da:	ff 93       	push	r31
    80dc:	e2 fd       	sbrc	r30, 2
    80de:	04 c0       	rjmp	.+8      	; 0x80e8 <__vector_13+0x1c>
    80e0:	e1 fd       	sbrc	r30, 1
    80e2:	02 c0       	rjmp	.+4      	; 0x80e8 <__vector_13+0x1c>
    80e4:	00 00       	nop
    80e6:	00 c0       	rjmp	.+0      	; 0x80e8 <__vector_13+0x1c>
    80e8:	e0 ff       	sbrs	r30, 0
    80ea:	00 c0       	rjmp	.+0      	; 0x80ec <__vector_13+0x20>
    80ec:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    80f0:	ea 95       	dec	r30
    80f2:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    80f6:	f0 91 60 08 	lds	r31, 0x0860	; 0x800860 <sync_phase>
    80fa:	f0 fd       	sbrc	r31, 0
    80fc:	51 c0       	rjmp	.+162    	; 0x81a0 <sync_hsync>
    80fe:	ec 30       	cpi	r30, 0x0C	; 12
    8100:	98 f0       	brcs	.+38     	; 0x8128 <sync_eq>
    8102:	f3 e0       	ldi	r31, 0x03	; 3
    8104:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8108:	fd e8       	ldi	r31, 0x8D	; 141
    810a:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    810e:	e0 fb       	bst	r30, 0
    8110:	28 98       	cbi	0x05, 0	; 5
    8112:	26 f4       	brtc	.+8      	; 0x811c <sync_pre_eq_no_sound_update>
    8114:	e1 e0       	ldi	r30, 0x01	; 1
    8116:	0e 94 58 41 	call	0x82b0	; 0x82b0 <update_sound>
    811a:	b2 c0       	rjmp	.+356    	; 0x8280 <sync_end>

0000811c <sync_pre_eq_no_sound_update>:
    811c:	e5 e1       	ldi	r30, 0x15	; 21
    811e:	ea 95       	dec	r30
    8120:	f1 f7       	brne	.-4      	; 0x811e <sync_pre_eq_no_sound_update+0x2>
    8122:	00 00       	nop
    8124:	28 9a       	sbi	0x05, 0	; 5
    8126:	ac c0       	rjmp	.+344    	; 0x8280 <sync_end>

00008128 <sync_eq>:
    8128:	e6 30       	cpi	r30, 0x06	; 6
    812a:	08 f1       	brcs	.+66     	; 0x816e <sync_post_eq>
    812c:	00 c0       	rjmp	.+0      	; 0x812e <sync_eq+0x6>
    812e:	00 c0       	rjmp	.+0      	; 0x8130 <sync_eq+0x8>
    8130:	28 98       	cbi	0x05, 0	; 5
    8132:	e0 fb       	bst	r30, 0
    8134:	e4 e0       	ldi	r30, 0x04	; 4
    8136:	16 f4       	brtc	.+4      	; 0x813c <sync_eq_skip>
    8138:	0e 94 58 41 	call	0x82b0	; 0x82b0 <update_sound>

0000813c <sync_eq_skip>:
    813c:	e4 e0       	ldi	r30, 0x04	; 4
    813e:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8142:	e6 e0       	ldi	r30, 0x06	; 6
    8144:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8148:	9b c0       	rjmp	.+310    	; 0x8280 <sync_end>

0000814a <__vector_14>:
    814a:	ef 93       	push	r30
    814c:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8150:	e2 fd       	sbrc	r30, 2
    8152:	04 c0       	rjmp	.+8      	; 0x815c <__vector_14+0x12>
    8154:	e1 fd       	sbrc	r30, 1
    8156:	02 c0       	rjmp	.+4      	; 0x815c <__vector_14+0x12>
    8158:	00 00       	nop
    815a:	00 c0       	rjmp	.+0      	; 0x815c <__vector_14+0x12>
    815c:	e0 ff       	sbrs	r30, 0
    815e:	00 c0       	rjmp	.+0      	; 0x8160 <__vector_14+0x16>
    8160:	e2 e0       	ldi	r30, 0x02	; 2
    8162:	00 00       	nop
    8164:	28 9a       	sbi	0x05, 0	; 5
    8166:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    816a:	ef 91       	pop	r30
    816c:	18 95       	reti

0000816e <sync_post_eq>:
    816e:	00 c0       	rjmp	.+0      	; 0x8170 <sync_post_eq+0x2>
    8170:	e0 fb       	bst	r30, 0
    8172:	28 98       	cbi	0x05, 0	; 5
    8174:	26 f4       	brtc	.+8      	; 0x817e <sync_post_eq_no_sound_update>
    8176:	e1 e0       	ldi	r30, 0x01	; 1
    8178:	0e 94 58 41 	call	0x82b0	; 0x82b0 <update_sound>
    817c:	05 c0       	rjmp	.+10     	; 0x8188 <sync_pre_eq_cont>

0000817e <sync_post_eq_no_sound_update>:
    817e:	e5 e1       	ldi	r30, 0x15	; 21
    8180:	ea 95       	dec	r30
    8182:	f1 f7       	brne	.-4      	; 0x8180 <sync_post_eq_no_sound_update+0x2>
    8184:	00 00       	nop
    8186:	28 9a       	sbi	0x05, 0	; 5

00008188 <sync_pre_eq_cont>:
    8188:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    818c:	e0 30       	cpi	r30, 0x00	; 0
    818e:	09 f0       	breq	.+2      	; 0x8192 <sync_pre_eq_cont+0xa>
    8190:	77 c0       	rjmp	.+238    	; 0x8280 <sync_end>
    8192:	ed ef       	ldi	r30, 0xFD	; 253
    8194:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8198:	e1 e0       	ldi	r30, 0x01	; 1
    819a:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    819e:	70 c0       	rjmp	.+224    	; 0x8280 <sync_end>

000081a0 <sync_hsync>:
    81a0:	e7 e0       	ldi	r30, 0x07	; 7
    81a2:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    81a6:	eb e1       	ldi	r30, 0x1B	; 27
    81a8:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    81ac:	00 c0       	rjmp	.+0      	; 0x81ae <sync_hsync+0xe>
    81ae:	28 98       	cbi	0x05, 0	; 5
    81b0:	e2 e0       	ldi	r30, 0x02	; 2
    81b2:	00 c0       	rjmp	.+0      	; 0x81b4 <sync_hsync+0x14>
    81b4:	0e 94 58 41 	call	0x82b0	; 0x82b0 <update_sound>
    81b8:	fd ef       	ldi	r31, 0xFD	; 253
    81ba:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    81be:	f0 19       	sub	r31, r0
    81c0:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    81c4:	ef 17       	cp	r30, r31
    81c6:	d8 f4       	brcc	.+54     	; 0x81fe <no_render>
    81c8:	fd ef       	ldi	r31, 0xFD	; 253
    81ca:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    81ce:	f0 19       	sub	r31, r0
    81d0:	00 90 68 08 	lds	r0, 0x0868	; 0x800868 <render_lines_count>
    81d4:	f0 19       	sub	r31, r0
    81d6:	ef 17       	cp	r30, r31
    81d8:	90 f0       	brcs	.+36     	; 0x81fe <no_render>
    81da:	ed e1       	ldi	r30, 0x1D	; 29
    81dc:	ff 27       	eor	r31, r31

000081de <push_loop>:
    81de:	00 80       	ld	r0, Z
    81e0:	0f 92       	push	r0
    81e2:	ea 95       	dec	r30
    81e4:	e1 f7       	brne	.-8      	; 0x81de <push_loop>
    81e6:	0d e0       	ldi	r16, 0x0D	; 13
    81e8:	0a 95       	dec	r16
    81ea:	f1 f7       	brne	.-4      	; 0x81e8 <push_loop+0xa>
    81ec:	00 c0       	rjmp	.+0      	; 0x81ee <push_loop+0x10>
    81ee:	0e 94 1d 3d 	call	0x7a3a	; 0x7a3a <sub_video_mode3>
    81f2:	e1 e0       	ldi	r30, 0x01	; 1
    81f4:	ff 27       	eor	r31, r31

000081f6 <pop_loop>:
    81f6:	0f 90       	pop	r0
    81f8:	01 92       	st	Z+, r0
    81fa:	ee 31       	cpi	r30, 0x1E	; 30
    81fc:	e0 f3       	brcs	.-8      	; 0x81f6 <pop_loop>

000081fe <no_render>:
    81fe:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8202:	e0 30       	cpi	r30, 0x00	; 0
    8204:	09 f0       	breq	.+2      	; 0x8208 <no_render+0xa>
    8206:	3c c0       	rjmp	.+120    	; 0x8280 <sync_end>
    8208:	2f 93       	push	r18
    820a:	3f 93       	push	r19
    820c:	4f 93       	push	r20
    820e:	5f 93       	push	r21
    8210:	6f 93       	push	r22
    8212:	7f 93       	push	r23
    8214:	8f 93       	push	r24
    8216:	9f 93       	push	r25
    8218:	af 93       	push	r26
    821a:	bf 93       	push	r27
    821c:	78 94       	sei
    821e:	11 24       	eor	r1, r1
    8220:	ee 27       	eor	r30, r30
    8222:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    8226:	e2 e1       	ldi	r30, 0x12	; 18
    8228:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    822c:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <vsync_counter>
    8230:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <vsync_counter+0x1>
    8234:	01 96       	adiw	r24, 0x01	; 1
    8236:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <vsync_counter>
    823a:	90 93 72 08 	sts	0x0872, r25	; 0x800872 <vsync_counter+0x1>
    823e:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <pre_vsync_user_callback>
    8242:	f0 91 64 08 	lds	r31, 0x0864	; 0x800864 <pre_vsync_user_callback+0x1>
    8246:	e1 15       	cp	r30, r1
    8248:	f1 05       	cpc	r31, r1
    824a:	09 f0       	breq	.+2      	; 0x824e <no_render+0x50>
    824c:	09 95       	icall
    824e:	0e 94 9b 42 	call	0x8536	; 0x8536 <ReadControllers>
    8252:	0e 94 9a 4f 	call	0x9f34	; 0x9f34 <VideoModeVsync>
    8256:	0e 94 52 41 	call	0x82a4	; 0x82a4 <process_music>
    825a:	11 24       	eor	r1, r1
    825c:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <post_vsync_user_callback>
    8260:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <post_vsync_user_callback+0x1>
    8264:	e1 15       	cp	r30, r1
    8266:	f1 05       	cpc	r31, r1
    8268:	09 f0       	breq	.+2      	; 0x826c <no_render+0x6e>
    826a:	09 95       	icall
    826c:	bf 91       	pop	r27
    826e:	af 91       	pop	r26
    8270:	9f 91       	pop	r25
    8272:	8f 91       	pop	r24
    8274:	7f 91       	pop	r23
    8276:	6f 91       	pop	r22
    8278:	5f 91       	pop	r21
    827a:	4f 91       	pop	r20
    827c:	3f 91       	pop	r19
    827e:	2f 91       	pop	r18

00008280 <sync_end>:
    8280:	ef 91       	pop	r30
    8282:	ef bf       	out	0x3f, r30	; 63
    8284:	ff 91       	pop	r31
    8286:	ef 91       	pop	r30
    8288:	1f 90       	pop	r1
    828a:	0f 90       	pop	r0
    828c:	18 95       	reti

0000828e <hsync_pulse>:
    828e:	28 98       	cbi	0x05, 0	; 5
    8290:	e2 e0       	ldi	r30, 0x02	; 2
    8292:	00 c0       	rjmp	.+0      	; 0x8294 <hsync_pulse+0x6>
    8294:	0e 94 58 41 	call	0x82b0	; 0x82b0 <update_sound>
    8298:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    829c:	ea 95       	dec	r30
    829e:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    82a2:	08 95       	ret

000082a4 <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    82a4:	e0 91 75 08 	lds	r30, 0x0875	; 0x800875 <sound_enabled>
    82a8:	e0 fd       	sbrc	r30, 0
    82aa:	0e 94 10 45 	call	0x8a20	; 0x8a20 <ProcessMusic>
    82ae:	08 95       	ret

000082b0 <update_sound>:
    82b0:	2f 93       	push	r18
    82b2:	1f 93       	push	r17
    82b4:	0f 93       	push	r16
    82b6:	2e 2f       	mov	r18, r30
    82b8:	10 91 79 08 	lds	r17, 0x0879	; 0x800879 <tr1_pos_frac>
    82bc:	e0 91 7a 08 	lds	r30, 0x087A	; 0x80087a <tr1_pos_lo>
    82c0:	f0 91 7b 08 	lds	r31, 0x087B	; 0x80087b <tr1_pos_hi>
    82c4:	00 91 77 08 	lds	r16, 0x0877	; 0x800877 <tr1_step_lo>
    82c8:	10 0f       	add	r17, r16
    82ca:	00 91 78 08 	lds	r16, 0x0878	; 0x800878 <tr1_step_hi>
    82ce:	e0 1f       	adc	r30, r16
    82d0:	04 91       	lpm	r16, Z
    82d2:	e0 93 7a 08 	sts	0x087A, r30	; 0x80087a <tr1_pos_lo>
    82d6:	10 93 79 08 	sts	0x0879, r17	; 0x800879 <tr1_pos_frac>
    82da:	10 91 76 08 	lds	r17, 0x0876	; 0x800876 <mixer>
    82de:	01 03       	mulsu	r16, r17
    82e0:	00 08       	sbc	r0, r0
    82e2:	10 91 7f 08 	lds	r17, 0x087F	; 0x80087f <tr2_pos_frac>
    82e6:	e0 91 80 08 	lds	r30, 0x0880	; 0x800880 <tr2_pos_lo>
    82ea:	f0 91 81 08 	lds	r31, 0x0881	; 0x800881 <tr2_pos_hi>
    82ee:	00 91 7d 08 	lds	r16, 0x087D	; 0x80087d <tr2_step_lo>
    82f2:	10 0f       	add	r17, r16
    82f4:	00 91 7e 08 	lds	r16, 0x087E	; 0x80087e <tr2_step_hi>
    82f8:	e0 1f       	adc	r30, r16
    82fa:	04 91       	lpm	r16, Z
    82fc:	e0 93 80 08 	sts	0x0880, r30	; 0x800880 <tr2_pos_lo>
    8300:	10 93 7f 08 	sts	0x087F, r17	; 0x80087f <tr2_pos_frac>
    8304:	f0 01       	movw	r30, r0
    8306:	10 91 7c 08 	lds	r17, 0x087C	; 0x80087c <tr2_vol>
    830a:	01 03       	mulsu	r16, r17
    830c:	00 08       	sbc	r0, r0
    830e:	1f 0e       	add	r1, r31
    8310:	10 91 85 08 	lds	r17, 0x0885	; 0x800885 <tr3_pos_frac>
    8314:	20 fd       	sbrc	r18, 0
    8316:	28 9a       	sbi	0x05, 0	; 5
    8318:	0e 1e       	adc	r0, r30
    831a:	e0 91 86 08 	lds	r30, 0x0886	; 0x800886 <tr3_pos_lo>
    831e:	f0 91 87 08 	lds	r31, 0x0887	; 0x800887 <tr3_pos_hi>
    8322:	00 91 83 08 	lds	r16, 0x0883	; 0x800883 <tr3_step_lo>
    8326:	10 0f       	add	r17, r16
    8328:	00 91 84 08 	lds	r16, 0x0884	; 0x800884 <tr3_step_hi>
    832c:	e0 1f       	adc	r30, r16
    832e:	04 91       	lpm	r16, Z
    8330:	e0 93 86 08 	sts	0x0886, r30	; 0x800886 <tr3_pos_lo>
    8334:	10 93 85 08 	sts	0x0885, r17	; 0x800885 <tr3_pos_frac>
    8338:	f0 01       	movw	r30, r0
    833a:	10 91 82 08 	lds	r17, 0x0882	; 0x800882 <tr3_vol>
    833e:	01 03       	mulsu	r16, r17
    8340:	00 08       	sbc	r0, r0
    8342:	1f 0e       	add	r1, r31
    8344:	0e 1e       	adc	r0, r30
    8346:	00 91 8a 08 	lds	r16, 0x088A	; 0x80088a <tr4_barrel_lo>
    834a:	10 91 8b 08 	lds	r17, 0x088B	; 0x80088b <tr4_barrel_hi>
    834e:	f0 91 88 08 	lds	r31, 0x0888	; 0x800888 <tr4_vol>
    8352:	f6 95       	lsr	r31
    8354:	88 94       	clc
    8356:	00 fd       	sbrc	r16, 0
    8358:	f1 95       	neg	r31
    835a:	ee 0b       	sbc	r30, r30
    835c:	1f 0e       	add	r1, r31
    835e:	0e 1e       	adc	r0, r30
    8360:	e0 91 8c 08 	lds	r30, 0x088C	; 0x80088c <tr4_divider>
    8364:	e2 50       	subi	r30, 0x02	; 2
    8366:	20 f0       	brcs	.+8      	; 0x8370 <ch4_shift>
    8368:	e4 91       	lpm	r30, Z
    836a:	e4 91       	lpm	r30, Z
    836c:	e4 91       	lpm	r30, Z
    836e:	0a c0       	rjmp	.+20     	; 0x8384 <ch4_end>

00008370 <ch4_shift>:
    8370:	e0 2f       	mov	r30, r16
    8372:	16 95       	lsr	r17
    8374:	07 95       	ror	r16
    8376:	e0 27       	eor	r30, r16
    8378:	e0 fb       	bst	r30, 0
    837a:	16 f9       	bld	r17, 6
    837c:	e0 91 89 08 	lds	r30, 0x0889	; 0x800889 <tr4_params>
    8380:	e0 ff       	sbrs	r30, 0
    8382:	06 f9       	bld	r16, 6

00008384 <ch4_end>:
    8384:	00 93 8a 08 	sts	0x088A, r16	; 0x80088a <tr4_barrel_lo>
    8388:	10 93 8b 08 	sts	0x088B, r17	; 0x80088b <tr4_barrel_hi>
    838c:	e0 93 8c 08 	sts	0x088C, r30	; 0x80088c <tr4_divider>
    8390:	10 e0       	ldi	r17, 0x00	; 0
    8392:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <tr5_pos_frac>
    8396:	f0 91 8f 08 	lds	r31, 0x088F	; 0x80088f <tr5_step_lo>
    839a:	21 fd       	sbrc	r18, 1
    839c:	28 9a       	sbi	0x05, 0	; 5
    839e:	ef 0f       	add	r30, r31
    83a0:	e0 93 91 08 	sts	0x0891, r30	; 0x800891 <tr5_pos_frac>
    83a4:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <tr5_pos_lo>
    83a8:	f0 91 93 08 	lds	r31, 0x0893	; 0x800893 <tr5_pos_hi>
    83ac:	00 91 90 08 	lds	r16, 0x0890	; 0x800890 <tr5_step_hi>
    83b0:	e0 1f       	adc	r30, r16
    83b2:	f1 1f       	adc	r31, r17
    83b4:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_end_lo>
    83b8:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_end_hi>
    83bc:	e0 17       	cp	r30, r16
    83be:	f1 07       	cpc	r31, r17
    83c0:	18 f4       	brcc	.+6      	; 0x83c8 <ch5_reset>
    83c2:	04 91       	lpm	r16, Z
    83c4:	00 c0       	rjmp	.+0      	; 0x83c6 <ch4_end+0x42>
    83c6:	06 c0       	rjmp	.+12     	; 0x83d4 <ch5_nores>

000083c8 <ch5_reset>:
    83c8:	00 91 94 08 	lds	r16, 0x0894	; 0x800894 <tr5_loop_len_lo>
    83cc:	10 91 95 08 	lds	r17, 0x0895	; 0x800895 <tr5_loop_len_hi>
    83d0:	e0 1b       	sub	r30, r16
    83d2:	f1 0b       	sbc	r31, r17

000083d4 <ch5_nores>:
    83d4:	e0 93 92 08 	sts	0x0892, r30	; 0x800892 <tr5_pos_lo>
    83d8:	f0 93 93 08 	sts	0x0893, r31	; 0x800893 <tr5_pos_hi>
    83dc:	04 91       	lpm	r16, Z
    83de:	f0 01       	movw	r30, r0
    83e0:	10 91 8e 08 	lds	r17, 0x088E	; 0x80088e <tr5_vol>
    83e4:	01 03       	mulsu	r16, r17
    83e6:	00 08       	sbc	r0, r0
    83e8:	1f 0e       	add	r1, r31
    83ea:	0e 1e       	adc	r0, r30
    83ec:	f0 01       	movw	r30, r0
    83ee:	0f 91       	pop	r16
    83f0:	1f 91       	pop	r17
    83f2:	f0 58       	subi	r31, 0x80	; 128
    83f4:	ef 4f       	sbci	r30, 0xFF	; 255
    83f6:	1a f4       	brpl	.+6      	; 0x83fe <ch5_nores+0x2a>
    83f8:	f0 e0       	ldi	r31, 0x00	; 0
    83fa:	00 00       	nop
    83fc:	03 c0       	rjmp	.+6      	; 0x8404 <ch5_nores+0x30>
    83fe:	e0 30       	cpi	r30, 0x00	; 0
    8400:	09 f0       	breq	.+2      	; 0x8404 <ch5_nores+0x30>
    8402:	ff ef       	ldi	r31, 0xFF	; 255
    8404:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    8408:	2f 91       	pop	r18
    840a:	08 95       	ret

0000840c <SetSpritesTileTable>:
    840c:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <sprites_tile_banks>
    8410:	90 93 4f 08 	sts	0x084F, r25	; 0x80084f <sprites_tile_banks+0x1>
    8414:	08 95       	ret

00008416 <ClearVram>:
    8416:	e0 e2       	ldi	r30, 0x20	; 32
    8418:	f4 e0       	ldi	r31, 0x04	; 4
    841a:	a0 e0       	ldi	r26, 0x00	; 0
    841c:	bb e0       	ldi	r27, 0x0B	; 11
    841e:	6b e1       	ldi	r22, 0x1B	; 27

00008420 <fill_vram_loop>:
    8420:	6d 93       	st	X+, r22
    8422:	31 97       	sbiw	r30, 0x01	; 1
    8424:	e9 f7       	brne	.-6      	; 0x8420 <fill_vram_loop>
    8426:	11 24       	eor	r1, r1
    8428:	08 95       	ret

0000842a <SetTile>:
    842a:	8f 71       	andi	r24, 0x1F	; 31
    842c:	76 2f       	mov	r23, r22
    842e:	66 95       	lsr	r22
    8430:	66 95       	lsr	r22
    8432:	66 95       	lsr	r22
    8434:	28 e0       	ldi	r18, 0x08	; 8
    8436:	82 9f       	mul	r24, r18
    8438:	d0 01       	movw	r26, r0
    843a:	a0 50       	subi	r26, 0x00	; 0
    843c:	b5 4f       	sbci	r27, 0xF5	; 245
    843e:	b6 0f       	add	r27, r22
    8440:	77 70       	andi	r23, 0x07	; 7
    8442:	a7 0f       	add	r26, r23
    8444:	45 5e       	subi	r20, 0xE5	; 229
    8446:	4c 93       	st	X, r20
    8448:	11 24       	eor	r1, r1
    844a:	08 95       	ret

0000844c <SetTileTable>:
    844c:	80 93 56 08 	sts	0x0856, r24	; 0x800856 <tile_table_lo>
    8450:	90 93 57 08 	sts	0x0857, r25	; 0x800857 <tile_table_hi>
    8454:	08 95       	ret

00008456 <GetVsyncFlag>:
    8456:	80 91 62 08 	lds	r24, 0x0862	; 0x800862 <sync_flags>
    845a:	81 70       	andi	r24, 0x01	; 1
    845c:	08 95       	ret

0000845e <ClearVsyncFlag>:
    845e:	20 91 62 08 	lds	r18, 0x0862	; 0x800862 <sync_flags>
    8462:	2e 7f       	andi	r18, 0xFE	; 254
    8464:	20 93 62 08 	sts	0x0862, r18	; 0x800862 <sync_flags>
    8468:	08 95       	ret

0000846a <ReadJoypad>:
    846a:	88 23       	and	r24, r24
    846c:	29 f4       	brne	.+10     	; 0x8478 <rj_p2>
    846e:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    8472:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    8476:	08 95       	ret

00008478 <rj_p2>:
    8478:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    847c:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    8480:	08 95       	ret

00008482 <SoftReset>:
    8482:	e0 e6       	ldi	r30, 0x60	; 96
    8484:	f0 e0       	ldi	r31, 0x00	; 0
    8486:	80 81       	ld	r24, Z
    8488:	83 fd       	sbrc	r24, 3
    848a:	08 95       	ret
    848c:	88 e1       	ldi	r24, 0x18	; 24
    848e:	98 e0       	ldi	r25, 0x08	; 8
    8490:	f8 94       	cli
    8492:	80 83       	st	Z, r24
    8494:	90 83       	st	Z, r25
    8496:	78 94       	sei
    8498:	ff cf       	rjmp	.-2      	; 0x8498 <SoftReset+0x16>

0000849a <WriteEeprom>:
    849a:	f9 99       	sbic	0x1f, 1	; 31
    849c:	fe cf       	rjmp	.-4      	; 0x849a <WriteEeprom>
    849e:	92 bd       	out	0x22, r25	; 34
    84a0:	81 bd       	out	0x21, r24	; 33
    84a2:	60 bd       	out	0x20, r22	; 32
    84a4:	f8 94       	cli
    84a6:	fa 9a       	sbi	0x1f, 2	; 31
    84a8:	f9 9a       	sbi	0x1f, 1	; 31
    84aa:	78 94       	sei
    84ac:	08 95       	ret

000084ae <ReadEeprom>:
    84ae:	f9 99       	sbic	0x1f, 1	; 31
    84b0:	fe cf       	rjmp	.-4      	; 0x84ae <ReadEeprom>
    84b2:	92 bd       	out	0x22, r25	; 34
    84b4:	81 bd       	out	0x21, r24	; 33
    84b6:	f8 94       	cli
    84b8:	f8 9a       	sbi	0x1f, 0	; 31
    84ba:	80 b5       	in	r24, 0x20	; 32
    84bc:	78 94       	sei
    84be:	08 95       	ret

000084c0 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    84c0:	80 93 65 08 	sts	0x0865, r24	; 0x800865 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    84c4:	90 93 66 08 	sts	0x0866, r25	; 0x800866 <post_vsync_user_callback+0x1>
	ret
    84c8:	08 95       	ret

000084ca <ReadButtons>:
    84ca:	12 9a       	sbi	0x02, 2	; 2
    84cc:	c8 95       	lpm
    84ce:	c8 95       	lpm
    84d0:	c8 95       	lpm
    84d2:	c8 95       	lpm
    84d4:	12 98       	cbi	0x02, 2	; 2
    84d6:	40 e1       	ldi	r20, 0x10	; 16
    84d8:	80 e0       	ldi	r24, 0x00	; 0
    84da:	90 e0       	ldi	r25, 0x00	; 0
    84dc:	20 e0       	ldi	r18, 0x00	; 0
    84de:	30 e0       	ldi	r19, 0x00	; 0
    84e0:	36 95       	lsr	r19
    84e2:	27 95       	ror	r18
    84e4:	96 95       	lsr	r25
    84e6:	87 95       	ror	r24
    84e8:	c8 95       	lpm
    84ea:	c8 95       	lpm
    84ec:	c8 95       	lpm
    84ee:	c8 95       	lpm
    84f0:	13 98       	cbi	0x02, 3	; 2
    84f2:	00 9b       	sbis	0x00, 0	; 0
    84f4:	30 68       	ori	r19, 0x80	; 128
    84f6:	01 9b       	sbis	0x00, 1	; 0
    84f8:	90 68       	ori	r25, 0x80	; 128
    84fa:	13 9a       	sbi	0x02, 3	; 2
    84fc:	c8 95       	lpm
    84fe:	c8 95       	lpm
    8500:	c8 95       	lpm
    8502:	c8 95       	lpm
    8504:	41 50       	subi	r20, 0x01	; 1
    8506:	61 f7       	brne	.-40     	; 0x84e0 <ReadButtons+0x16>
    8508:	30 93 6a 08 	sts	0x086A, r19	; 0x80086a <joypad1_status_lo+0x1>
    850c:	20 93 69 08 	sts	0x0869, r18	; 0x800869 <joypad1_status_lo>
    8510:	90 93 6e 08 	sts	0x086E, r25	; 0x80086e <joypad2_status_lo+0x1>
    8514:	80 93 6d 08 	sts	0x086D, r24	; 0x80086d <joypad2_status_lo>
    8518:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    851c:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    8520:	0f 97       	sbiw	r24, 0x0f	; 15
    8522:	31 f0       	breq	.+12     	; 0x8530 <ReadButtons+0x66>
    8524:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    8528:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    852c:	0f 97       	sbiw	r24, 0x0f	; 15
    852e:	11 f4       	brne	.+4      	; 0x8534 <ReadButtons+0x6a>
    8530:	0c 94 41 42 	jmp	0x8482	; 0x8482 <SoftReset>
    8534:	08 95       	ret

00008536 <ReadControllers>:
    8536:	10 92 9c 08 	sts	0x089C, r1	; 0x80089c <joypadsConnectionStatus>
    853a:	00 99       	sbic	0x00, 0	; 0
    853c:	03 c0       	rjmp	.+6      	; 0x8544 <ReadControllers+0xe>
    853e:	81 e0       	ldi	r24, 0x01	; 1
    8540:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    8544:	01 99       	sbic	0x00, 1	; 0
    8546:	05 c0       	rjmp	.+10     	; 0x8552 <ReadControllers+0x1c>
    8548:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <joypadsConnectionStatus>
    854c:	82 60       	ori	r24, 0x02	; 2
    854e:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    8552:	0c 94 65 42 	jmp	0x84ca	; 0x84ca <ReadButtons>

00008556 <FormatEeprom>:
    8556:	cf 93       	push	r28
    8558:	df 93       	push	r29
    855a:	c0 e0       	ldi	r28, 0x00	; 0
    855c:	d0 e0       	ldi	r29, 0x00	; 0
    855e:	fe 01       	movw	r30, r28
    8560:	ee 55       	subi	r30, 0x5E	; 94
    8562:	ff 4f       	sbci	r31, 0xFF	; 255
    8564:	64 91       	lpm	r22, Z
    8566:	ce 01       	movw	r24, r28
    8568:	0e 94 4d 42 	call	0x849a	; 0x849a <WriteEeprom>
    856c:	21 96       	adiw	r28, 0x01	; 1
    856e:	c0 32       	cpi	r28, 0x20	; 32
    8570:	d1 05       	cpc	r29, r1
    8572:	a9 f7       	brne	.-22     	; 0x855e <FormatEeprom+0x8>
    8574:	c0 e2       	ldi	r28, 0x20	; 32
    8576:	d0 e0       	ldi	r29, 0x00	; 0
    8578:	6f ef       	ldi	r22, 0xFF	; 255
    857a:	ce 01       	movw	r24, r28
    857c:	0e 94 4d 42 	call	0x849a	; 0x849a <WriteEeprom>
    8580:	6f ef       	ldi	r22, 0xFF	; 255
    8582:	ce 01       	movw	r24, r28
    8584:	01 96       	adiw	r24, 0x01	; 1
    8586:	0e 94 4d 42 	call	0x849a	; 0x849a <WriteEeprom>
    858a:	a0 96       	adiw	r28, 0x20	; 32
    858c:	c1 15       	cp	r28, r1
    858e:	88 e0       	ldi	r24, 0x08	; 8
    8590:	d8 07       	cpc	r29, r24
    8592:	91 f7       	brne	.-28     	; 0x8578 <FormatEeprom+0x22>
    8594:	df 91       	pop	r29
    8596:	cf 91       	pop	r28
    8598:	08 95       	ret

0000859a <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    859a:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    859c:	80 e0       	ldi	r24, 0x00	; 0
    859e:	90 e0       	ldi	r25, 0x00	; 0
    85a0:	0e 94 57 42 	call	0x84ae	; 0x84ae <ReadEeprom>
    85a4:	c8 2f       	mov	r28, r24
    85a6:	81 e0       	ldi	r24, 0x01	; 1
    85a8:	90 e0       	ldi	r25, 0x00	; 0
    85aa:	0e 94 57 42 	call	0x84ae	; 0x84ae <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    85ae:	28 2f       	mov	r18, r24
    85b0:	30 e0       	ldi	r19, 0x00	; 0
    85b2:	32 2f       	mov	r19, r18
    85b4:	22 27       	eor	r18, r18
    85b6:	2c 0f       	add	r18, r28
    85b8:	31 1d       	adc	r19, r1
    85ba:	81 e0       	ldi	r24, 0x01	; 1
    85bc:	2a 35       	cpi	r18, 0x5A	; 90
    85be:	35 45       	sbci	r19, 0x55	; 85
    85c0:	09 f0       	breq	.+2      	; 0x85c4 <isEepromFormatted+0x2a>
    85c2:	80 e0       	ldi	r24, 0x00	; 0
}
    85c4:	cf 91       	pop	r28
    85c6:	08 95       	ret

000085c8 <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    85c8:	fc 01       	movw	r30, r24
    85ca:	67 87       	std	Z+15, r22	; 0x0f
    85cc:	08 95       	ret

000085ce <PatchCommand01>:
    85ce:	e6 e7       	ldi	r30, 0x76	; 118
    85d0:	f8 e0       	ldi	r31, 0x08	; 8
    85d2:	81 e0       	ldi	r24, 0x01	; 1
    85d4:	91 e0       	ldi	r25, 0x01	; 1
    85d6:	95 8b       	std	Z+21, r25	; 0x15
    85d8:	84 8b       	std	Z+20, r24	; 0x14
    85da:	63 8b       	std	Z+19, r22	; 0x13
    85dc:	08 95       	ret

000085de <PatchCommand05>:
    85de:	fc 01       	movw	r30, r24
    85e0:	90 81       	ld	r25, Z
    85e2:	9f 75       	andi	r25, 0x5F	; 95
    85e4:	90 83       	st	Z, r25
    85e6:	08 95       	ret

000085e8 <PatchCommand06>:
    85e8:	fc 01       	movw	r30, r24
    85ea:	90 81       	ld	r25, Z
    85ec:	90 64       	ori	r25, 0x40	; 64
    85ee:	90 83       	st	Z, r25
    85f0:	08 95       	ret

000085f2 <PatchCommand07>:
    85f2:	fc 01       	movw	r30, r24
    85f4:	66 87       	std	Z+14, r22	; 0x0e
    85f6:	08 95       	ret

000085f8 <PatchCommand09>:
    85f8:	fc 01       	movw	r30, r24
    85fa:	62 87       	std	Z+10, r22	; 0x0a
    85fc:	08 95       	ret

000085fe <PatchCommand10>:
    85fe:	fc 01       	movw	r30, r24
    8600:	63 87       	std	Z+11, r22	; 0x0b
    8602:	08 95       	ret

00008604 <PatchCommand11>:
    8604:	cf 93       	push	r28
    8606:	df 93       	push	r29
    8608:	ec 01       	movw	r28, r24
    860a:	26 2f       	mov	r18, r22
    860c:	89 81       	ldd	r24, Y+1	; 0x01
    860e:	90 e0       	ldi	r25, 0x00	; 0
    8610:	fc 01       	movw	r30, r24
    8612:	ee 0f       	add	r30, r30
    8614:	ff 1f       	adc	r31, r31
    8616:	e6 5c       	subi	r30, 0xC6	; 198
    8618:	f1 47       	sbci	r31, 0x71	; 113
    861a:	45 91       	lpm	r20, Z+
    861c:	54 91       	lpm	r21, Z
    861e:	fc 01       	movw	r30, r24
    8620:	e6 0f       	add	r30, r22
    8622:	f1 1d       	adc	r31, r1
    8624:	67 fd       	sbrc	r22, 7
    8626:	fa 95       	dec	r31
    8628:	ee 0f       	add	r30, r30
    862a:	ff 1f       	adc	r31, r31
    862c:	e6 5c       	subi	r30, 0xC6	; 198
    862e:	f1 47       	sbci	r31, 0x71	; 113
    8630:	85 91       	lpm	r24, Z+
    8632:	94 91       	lpm	r25, Z
    8634:	84 1b       	sub	r24, r20
    8636:	95 0b       	sbc	r25, r21
    8638:	68 85       	ldd	r22, Y+8	; 0x08
    863a:	70 e0       	ldi	r23, 0x00	; 0
    863c:	0e 94 e2 69 	call	0xd3c4	; 0xd3c4 <__divmodhi4>
    8640:	61 15       	cp	r22, r1
    8642:	71 05       	cpc	r23, r1
    8644:	11 f4       	brne	.+4      	; 0x864a <PatchCommand11+0x46>
    8646:	61 e0       	ldi	r22, 0x01	; 1
    8648:	70 e0       	ldi	r23, 0x00	; 0
    864a:	ea 81       	ldd	r30, Y+2	; 0x02
    864c:	86 e0       	ldi	r24, 0x06	; 6
    864e:	e8 9f       	mul	r30, r24
    8650:	f0 01       	movw	r30, r0
    8652:	11 24       	eor	r1, r1
    8654:	ea 58       	subi	r30, 0x8A	; 138
    8656:	f7 4f       	sbci	r31, 0xF7	; 247
    8658:	81 81       	ldd	r24, Z+1	; 0x01
    865a:	92 81       	ldd	r25, Z+2	; 0x02
    865c:	86 0f       	add	r24, r22
    865e:	97 1f       	adc	r25, r23
    8660:	92 83       	std	Z+2, r25	; 0x02
    8662:	81 83       	std	Z+1, r24	; 0x01
    8664:	7e 83       	std	Y+6, r23	; 0x06
    8666:	6d 83       	std	Y+5, r22	; 0x05
    8668:	88 81       	ld	r24, Y
    866a:	88 60       	ori	r24, 0x08	; 8
    866c:	88 83       	st	Y, r24
    866e:	89 81       	ldd	r24, Y+1	; 0x01
    8670:	28 0f       	add	r18, r24
    8672:	2f 83       	std	Y+7, r18	; 0x07
    8674:	df 91       	pop	r29
    8676:	cf 91       	pop	r28
    8678:	08 95       	ret

0000867a <PatchCommand12>:
    867a:	fc 01       	movw	r30, r24
    867c:	60 87       	std	Z+8, r22	; 0x08
    867e:	08 95       	ret

00008680 <PatchCommand13>:
    8680:	fc 01       	movw	r30, r24
    8682:	64 83       	std	Z+4, r22	; 0x04
    8684:	08 95       	ret

00008686 <PatchCommand02>:
    8686:	fc 01       	movw	r30, r24
    8688:	82 81       	ldd	r24, Z+2	; 0x02
    868a:	0c 94 00 47 	jmp	0x8e00	; 0x8e00 <SetMixerWave>

0000868e <PatchCommand03>:
    868e:	fc 01       	movw	r30, r24
    8690:	91 81       	ldd	r25, Z+1	; 0x01
    8692:	69 0f       	add	r22, r25
    8694:	61 83       	std	Z+1, r22	; 0x01
    8696:	82 81       	ldd	r24, Z+2	; 0x02
    8698:	0c 94 e9 46 	jmp	0x8dd2	; 0x8dd2 <SetMixerNote>

0000869c <PatchCommand04>:
    869c:	fc 01       	movw	r30, r24
    869e:	91 81       	ldd	r25, Z+1	; 0x01
    86a0:	96 1b       	sub	r25, r22
    86a2:	69 2f       	mov	r22, r25
    86a4:	91 83       	std	Z+1, r25	; 0x01
    86a6:	82 81       	ldd	r24, Z+2	; 0x02
    86a8:	0c 94 e9 46 	jmp	0x8dd2	; 0x8dd2 <SetMixerNote>

000086ac <PatchCommand08>:
    86ac:	1f 93       	push	r17
    86ae:	cf 93       	push	r28
    86b0:	df 93       	push	r29
    86b2:	ec 01       	movw	r28, r24
    86b4:	16 2f       	mov	r17, r22
    86b6:	8a 81       	ldd	r24, Y+2	; 0x02
    86b8:	0e 94 e9 46 	call	0x8dd2	; 0x8dd2 <SetMixerNote>
    86bc:	19 83       	std	Y+1, r17	; 0x01
    86be:	88 81       	ld	r24, Y
    86c0:	87 7f       	andi	r24, 0xF7	; 247
    86c2:	88 83       	st	Y, r24
    86c4:	df 91       	pop	r29
    86c6:	cf 91       	pop	r28
    86c8:	1f 91       	pop	r17
    86ca:	08 95       	ret

000086cc <PatchCommand14>:
    86cc:	dc 01       	movw	r26, r24
    86ce:	14 96       	adiw	r26, 0x04	; 4
    86d0:	8c 91       	ld	r24, X
    86d2:	14 97       	sbiw	r26, 0x04	; 4
    86d4:	88 23       	and	r24, r24
    86d6:	19 f1       	breq	.+70     	; 0x871e <PatchCommand14+0x52>
    86d8:	55 96       	adiw	r26, 0x15	; 21
    86da:	2d 91       	ld	r18, X+
    86dc:	3c 91       	ld	r19, X
    86de:	56 97       	sbiw	r26, 0x16	; 22
    86e0:	66 23       	and	r22, r22
    86e2:	79 f0       	breq	.+30     	; 0x8702 <PatchCommand14+0x36>
    86e4:	06 2e       	mov	r0, r22
    86e6:	00 0c       	add	r0, r0
    86e8:	77 0b       	sbc	r23, r23
    86ea:	6f 5f       	subi	r22, 0xFF	; 255
    86ec:	7f 4f       	sbci	r23, 0xFF	; 255
    86ee:	ab 01       	movw	r20, r22
    86f0:	44 0f       	add	r20, r20
    86f2:	55 1f       	adc	r21, r21
    86f4:	64 0f       	add	r22, r20
    86f6:	75 1f       	adc	r23, r21
    86f8:	26 1b       	sub	r18, r22
    86fa:	37 0b       	sbc	r19, r23
    86fc:	09 c0       	rjmp	.+18     	; 0x8710 <PatchCommand14+0x44>
    86fe:	ef 3f       	cpi	r30, 0xFF	; 255
    8700:	39 f0       	breq	.+14     	; 0x8710 <PatchCommand14+0x44>
    8702:	23 50       	subi	r18, 0x03	; 3
    8704:	31 09       	sbc	r19, r1
    8706:	f9 01       	movw	r30, r18
    8708:	32 97       	sbiw	r30, 0x02	; 2
    870a:	e4 91       	lpm	r30, Z
    870c:	ed 30       	cpi	r30, 0x0D	; 13
    870e:	b9 f7       	brne	.-18     	; 0x86fe <PatchCommand14+0x32>
    8710:	56 96       	adiw	r26, 0x16	; 22
    8712:	3c 93       	st	X, r19
    8714:	2e 93       	st	-X, r18
    8716:	55 97       	sbiw	r26, 0x15	; 21
    8718:	81 50       	subi	r24, 0x01	; 1
    871a:	14 96       	adiw	r26, 0x04	; 4
    871c:	8c 93       	st	X, r24
    871e:	08 95       	ret

00008720 <InitMusicPlayer>:
    8720:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <patchPointers+0x1>
    8724:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <patchPointers>
    8728:	8f e6       	ldi	r24, 0x6F	; 111
    872a:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <masterVolume>
    872e:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    8732:	ef e9       	ldi	r30, 0x9F	; 159
    8734:	f8 e0       	ldi	r31, 0x08	; 8
    8736:	80 e0       	ldi	r24, 0x00	; 0
    8738:	90 e1       	ldi	r25, 0x10	; 16
    873a:	3f ef       	ldi	r19, 0xFF	; 255
    873c:	28 e1       	ldi	r18, 0x18	; 24
    873e:	82 83       	std	Z+2, r24	; 0x02
    8740:	90 83       	st	Z, r25
    8742:	15 86       	std	Z+13, r1	; 0x0d
    8744:	34 87       	std	Z+12, r19	; 0x0c
    8746:	10 8a       	std	Z+16, r1	; 0x10
    8748:	23 87       	std	Z+11, r18	; 0x0b
    874a:	90 87       	std	Z+8, r25	; 0x08
    874c:	8f 5f       	subi	r24, 0xFF	; 255
    874e:	77 96       	adiw	r30, 0x17	; 23
    8750:	85 30       	cpi	r24, 0x05	; 5
    8752:	a9 f7       	brne	.-22     	; 0x873e <InitMusicPlayer+0x1e>
    8754:	08 95       	ret

00008756 <StartSong>:
    8756:	ef e9       	ldi	r30, 0x9F	; 159
    8758:	f8 e0       	ldi	r31, 0x08	; 8
    875a:	3f ef       	ldi	r19, 0xFF	; 255
    875c:	20 81       	ld	r18, Z
    875e:	2f 77       	andi	r18, 0x7F	; 127
    8760:	20 83       	st	Z, r18
    8762:	33 83       	std	Z+3, r19	; 0x03
    8764:	77 96       	adiw	r30, 0x17	; 23
    8766:	29 e0       	ldi	r18, 0x09	; 9
    8768:	e2 31       	cpi	r30, 0x12	; 18
    876a:	f2 07       	cpc	r31, r18
    876c:	b9 f7       	brne	.-18     	; 0x875c <StartSong+0x6>
    876e:	01 96       	adiw	r24, 0x01	; 1
    8770:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8774:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    8778:	90 93 9e 08 	sts	0x089E, r25	; 0x80089e <songStart+0x1>
    877c:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <songStart>
    8780:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    8784:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    8788:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <nextDeltaTime+0x1>
    878c:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <nextDeltaTime>
    8790:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    8794:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    8798:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <songSpeed>
    879c:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <lastStatus>
    87a0:	81 e0       	ldi	r24, 0x01	; 1
    87a2:	80 93 74 08 	sts	0x0874, r24	; 0x800874 <playSong>
    87a6:	08 95       	ret

000087a8 <StopSong>:
    87a8:	ef e9       	ldi	r30, 0x9F	; 159
    87aa:	f8 e0       	ldi	r31, 0x08	; 8
    87ac:	8a ef       	ldi	r24, 0xFA	; 250
    87ae:	87 87       	std	Z+15, r24	; 0x0f
    87b0:	86 a3       	std	Z+38, r24	; 0x26
    87b2:	85 af       	std	Z+61, r24	; 0x3d
    87b4:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <tracks+0x54>
    87b8:	80 93 0a 09 	sts	0x090A, r24	; 0x80090a <tracks+0x6b>
    87bc:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    87c0:	08 95       	ret

000087c2 <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    87c2:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    87c4:	ed 91       	ld	r30, X+
    87c6:	fc 91       	ld	r31, X
    87c8:	11 97       	sbiw	r26, 0x01	; 1
    87ca:	9f 01       	movw	r18, r30
    87cc:	2f 5f       	subi	r18, 0xFF	; 255
    87ce:	3f 4f       	sbci	r19, 0xFF	; 255
    87d0:	11 96       	adiw	r26, 0x01	; 1
    87d2:	3c 93       	st	X, r19
    87d4:	2e 93       	st	-X, r18
    87d6:	e4 91       	lpm	r30, Z
    87d8:	e7 fd       	sbrc	r30, 7
    87da:	03 c0       	rjmp	.+6      	; 0x87e2 <ReadVarLen+0x20>
    87dc:	8e 2f       	mov	r24, r30
    87de:	90 e0       	ldi	r25, 0x00	; 0
    87e0:	08 95       	ret
    {
       value &= 0x7F;
    87e2:	ef 77       	andi	r30, 0x7F	; 127
    87e4:	8e 2f       	mov	r24, r30
    87e6:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    87e8:	96 95       	lsr	r25
    87ea:	98 2f       	mov	r25, r24
    87ec:	88 27       	eor	r24, r24
    87ee:	97 95       	ror	r25
    87f0:	87 95       	ror	r24
    87f2:	2f 5f       	subi	r18, 0xFF	; 255
    87f4:	3f 4f       	sbci	r19, 0xFF	; 255
    87f6:	f9 01       	movw	r30, r18
    87f8:	31 97       	sbiw	r30, 0x01	; 1
    87fa:	e4 91       	lpm	r30, Z
    87fc:	4e 2f       	mov	r20, r30
    87fe:	4f 77       	andi	r20, 0x7F	; 127
    8800:	84 0f       	add	r24, r20
    8802:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    8804:	e7 fd       	sbrc	r30, 7
    8806:	f0 cf       	rjmp	.-32     	; 0x87e8 <ReadVarLen+0x26>
    8808:	2d 93       	st	X+, r18
    880a:	3c 93       	st	X, r19
    }


    return value;
}
    880c:	08 95       	ret

0000880e <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    880e:	ff 92       	push	r15
    8810:	0f 93       	push	r16
    8812:	1f 93       	push	r17
    8814:	cf 93       	push	r28
    8816:	df 93       	push	r29
    8818:	ec 01       	movw	r28, r24
    881a:	16 2f       	mov	r17, r22
    881c:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    881e:	88 81       	ld	r24, Y
    8820:	28 2f       	mov	r18, r24
    8822:	20 78       	andi	r18, 0x80	; 128
    8824:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    8826:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    8828:	9f ef       	ldi	r25, 0xFF	; 255
    882a:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    882c:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    882e:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    8830:	87 7b       	andi	r24, 0xB7	; 183
    8832:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    8834:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    8836:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    8838:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    883a:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    883c:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    883e:	8a 81       	ldd	r24, Y+2	; 0x02
    8840:	83 30       	cpi	r24, 0x03	; 3
    8842:	69 f4       	brne	.+26     	; 0x885e <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    8844:	21 11       	cpse	r18, r1
    8846:	01 c0       	rjmp	.+2      	; 0x884a <TriggerCommon+0x3c>
    8848:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    884a:	81 e0       	ldi	r24, 0x01	; 1
    884c:	91 e0       	ldi	r25, 0x01	; 1
    884e:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <tr4_barrel_hi>
    8852:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    8856:	81 e0       	ldi	r24, 0x01	; 1
    8858:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    885c:	36 c0       	rjmp	.+108    	; 0x88ca <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    885e:	84 30       	cpi	r24, 0x04	; 4
    8860:	69 f5       	brne	.+90     	; 0x88bc <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    8862:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    8866:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <patchPointers>
    886a:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <patchPointers+0x1>
    886e:	e9 e0       	ldi	r30, 0x09	; 9
    8870:	6e 9f       	mul	r22, r30
    8872:	80 0d       	add	r24, r0
    8874:	91 1d       	adc	r25, r1
    8876:	11 24       	eor	r1, r1
    8878:	fc 01       	movw	r30, r24
    887a:	31 96       	adiw	r30, 0x01	; 1
    887c:	45 91       	lpm	r20, Z+
    887e:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    8880:	50 93 93 08 	sts	0x0893, r21	; 0x800893 <tr5_pos_hi>
    8884:	40 93 92 08 	sts	0x0892, r20	; 0x800892 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    8888:	9c 01       	movw	r18, r24
    888a:	29 5f       	subi	r18, 0xF9	; 249
    888c:	3f 4f       	sbci	r19, 0xFF	; 255
    888e:	f9 01       	movw	r30, r18
    8890:	65 91       	lpm	r22, Z+
    8892:	74 91       	lpm	r23, Z
    8894:	05 96       	adiw	r24, 0x05	; 5
    8896:	fc 01       	movw	r30, r24
    8898:	85 91       	lpm	r24, Z+
    889a:	94 91       	lpm	r25, Z
    889c:	68 1b       	sub	r22, r24
    889e:	79 0b       	sbc	r23, r25
    88a0:	70 93 95 08 	sts	0x0895, r23	; 0x800895 <tr5_loop_len_hi>
    88a4:	60 93 94 08 	sts	0x0894, r22	; 0x800894 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    88a8:	f9 01       	movw	r30, r18
    88aa:	85 91       	lpm	r24, Z+
    88ac:	94 91       	lpm	r25, Z
    88ae:	48 0f       	add	r20, r24
    88b0:	59 1f       	adc	r21, r25
    88b2:	50 93 97 08 	sts	0x0897, r21	; 0x800897 <tr5_loop_end_hi>
    88b6:	40 93 96 08 	sts	0x0896, r20	; 0x800896 <tr5_loop_end_lo>
    88ba:	03 c0       	rjmp	.+6      	; 0x88c2 <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    88bc:	60 e0       	ldi	r22, 0x00	; 0
    88be:	0e 94 00 47 	call	0x8e00	; 0x8e00 <SetMixerWave>
			SetMixerNote(track->channel,note);
    88c2:	60 2f       	mov	r22, r16
    88c4:	8a 81       	ldd	r24, Y+2	; 0x02
    88c6:	0e 94 e9 46 	call	0x8dd2	; 0x8dd2 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    88ca:	ff 20       	and	r15, r15
    88cc:	11 f0       	breq	.+4      	; 0x88d2 <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    88ce:	19 8b       	std	Y+17, r17	; 0x11
    88d0:	01 c0       	rjmp	.+2      	; 0x88d4 <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    88d2:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    88d4:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    88d8:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    88dc:	29 e0       	ldi	r18, 0x09	; 9
    88de:	12 9f       	mul	r17, r18
    88e0:	e0 0d       	add	r30, r0
    88e2:	f1 1d       	adc	r31, r1
    88e4:	11 24       	eor	r1, r1
    88e6:	33 96       	adiw	r30, 0x03	; 3
    88e8:	85 91       	lpm	r24, Z+
    88ea:	94 91       	lpm	r25, Z
	if(pos==NULL){
    88ec:	00 97       	sbiw	r24, 0x00	; 0
    88ee:	19 f4       	brne	.+6      	; 0x88f6 <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    88f0:	1e 8a       	std	Y+22, r1	; 0x16
    88f2:	1d 8a       	std	Y+21, r1	; 0x15
    88f4:	07 c0       	rjmp	.+14     	; 0x8904 <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    88f6:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    88f8:	fc 01       	movw	r30, r24
    88fa:	24 91       	lpm	r18, Z
    88fc:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    88fe:	01 96       	adiw	r24, 0x01	; 1
    8900:	9e 8b       	std	Y+22, r25	; 0x16
    8902:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    8904:	df 91       	pop	r29
    8906:	cf 91       	pop	r28
    8908:	1f 91       	pop	r17
    890a:	0f 91       	pop	r16
    890c:	ff 90       	pop	r15
    890e:	08 95       	ret

00008910 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    8910:	cf 93       	push	r28
    8912:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    8914:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    8918:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    891c:	99 e0       	ldi	r25, 0x09	; 9
    891e:	89 9f       	mul	r24, r25
    8920:	e0 0d       	add	r30, r0
    8922:	f1 1d       	adc	r31, r1
    8924:	11 24       	eor	r1, r1
    8926:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    8928:	e1 30       	cpi	r30, 0x01	; 1
    892a:	e9 f0       	breq	.+58     	; 0x8966 <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    892c:	e2 30       	cpi	r30, 0x02	; 2
    892e:	e9 f0       	breq	.+58     	; 0x896a <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    8930:	90 91 b6 08 	lds	r25, 0x08B6	; 0x8008b6 <tracks+0x17>
    8934:	97 ff       	sbrs	r25, 7
    8936:	1b c0       	rjmp	.+54     	; 0x896e <TriggerFx+0x5e>
    8938:	90 91 c7 08 	lds	r25, 0x08C7	; 0x8008c7 <tracks+0x28>
    893c:	89 13       	cpse	r24, r25
    893e:	02 c0       	rjmp	.+4      	; 0x8944 <TriggerFx+0x34>
    8940:	41 11       	cpse	r20, r1
    8942:	15 c0       	rjmp	.+42     	; 0x896e <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    8944:	90 91 cd 08 	lds	r25, 0x08CD	; 0x8008cd <tracks+0x2e>
    8948:	97 ff       	sbrs	r25, 7
    894a:	13 c0       	rjmp	.+38     	; 0x8972 <TriggerFx+0x62>
    894c:	90 91 de 08 	lds	r25, 0x08DE	; 0x8008de <tracks+0x3f>
    8950:	89 13       	cpse	r24, r25
    8952:	02 c0       	rjmp	.+4      	; 0x8958 <TriggerFx+0x48>
    8954:	41 11       	cpse	r20, r1
    8956:	0d c0       	rjmp	.+26     	; 0x8972 <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    8958:	20 91 ca 08 	lds	r18, 0x08CA	; 0x8008ca <tracks+0x2b>
    895c:	90 91 e1 08 	lds	r25, 0x08E1	; 0x8008e1 <tracks+0x42>
    8960:	92 17       	cp	r25, r18
    8962:	38 f4       	brcc	.+14     	; 0x8972 <TriggerFx+0x62>
    8964:	04 c0       	rjmp	.+8      	; 0x896e <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    8966:	c3 e0       	ldi	r28, 0x03	; 3
    8968:	05 c0       	rjmp	.+10     	; 0x8974 <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    896a:	c4 e0       	ldi	r28, 0x04	; 4
    896c:	03 c0       	rjmp	.+6      	; 0x8974 <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    896e:	c1 e0       	ldi	r28, 0x01	; 1
    8970:	01 c0       	rjmp	.+2      	; 0x8974 <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    8972:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    8974:	97 e1       	ldi	r25, 0x17	; 23
    8976:	c9 9f       	mul	r28, r25
    8978:	e0 01       	movw	r28, r0
    897a:	11 24       	eor	r1, r1
    897c:	c1 56       	subi	r28, 0x61	; 97
    897e:	d7 4f       	sbci	r29, 0xF7	; 247
    8980:	90 e8       	ldi	r25, 0x80	; 128
    8982:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    8984:	1e 8a       	std	Y+22, r1	; 0x16
    8986:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    8988:	20 e5       	ldi	r18, 0x50	; 80
    898a:	46 2f       	mov	r20, r22
    898c:	68 2f       	mov	r22, r24
    898e:	ce 01       	movw	r24, r28
    8990:	0e 94 07 44 	call	0x880e	; 0x880e <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    8994:	88 81       	ld	r24, Y
    8996:	80 62       	ori	r24, 0x20	; 32
    8998:	88 83       	st	Y, r24
}
    899a:	df 91       	pop	r29
    899c:	cf 91       	pop	r28
    899e:	08 95       	ret

000089a0 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    89a0:	cf 93       	push	r28
    89a2:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    89a4:	a8 2f       	mov	r26, r24
    89a6:	b0 e0       	ldi	r27, 0x00	; 0
    89a8:	97 e1       	ldi	r25, 0x17	; 23
    89aa:	89 9f       	mul	r24, r25
    89ac:	f0 01       	movw	r30, r0
    89ae:	11 24       	eor	r1, r1
    89b0:	e1 56       	subi	r30, 0x61	; 97
    89b2:	f7 4f       	sbci	r31, 0xF7	; 247
    89b4:	80 81       	ld	r24, Z
    89b6:	85 ff       	sbrs	r24, 5
    89b8:	02 c0       	rjmp	.+4      	; 0x89be <TriggerNote+0x1e>
    89ba:	87 fd       	sbrc	r24, 7
    89bc:	2e c0       	rjmp	.+92     	; 0x8a1a <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    89be:	21 11       	cpse	r18, r1
    89c0:	18 c0       	rjmp	.+48     	; 0x89f2 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    89c2:	97 e1       	ldi	r25, 0x17	; 23
    89c4:	9a 9f       	mul	r25, r26
    89c6:	f0 01       	movw	r30, r0
    89c8:	9b 9f       	mul	r25, r27
    89ca:	f0 0d       	add	r31, r0
    89cc:	11 24       	eor	r1, r1
    89ce:	e1 56       	subi	r30, 0x61	; 97
    89d0:	f7 4f       	sbci	r31, 0xF7	; 247
    89d2:	97 85       	ldd	r25, Z+15	; 0x0f
    89d4:	91 11       	cpse	r25, r1
    89d6:	02 c0       	rjmp	.+4      	; 0x89dc <TriggerNote+0x3c>
    89d8:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    89da:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    89dc:	97 e1       	ldi	r25, 0x17	; 23
    89de:	9a 9f       	mul	r25, r26
    89e0:	f0 01       	movw	r30, r0
    89e2:	9b 9f       	mul	r25, r27
    89e4:	f0 0d       	add	r31, r0
    89e6:	11 24       	eor	r1, r1
    89e8:	e1 56       	subi	r30, 0x61	; 97
    89ea:	f7 4f       	sbci	r31, 0xF7	; 247
    89ec:	8f 7b       	andi	r24, 0xBF	; 191
    89ee:	80 83       	st	Z, r24
    89f0:	14 c0       	rjmp	.+40     	; 0x8a1a <TriggerNote+0x7a>
    89f2:	82 2f       	mov	r24, r18
    89f4:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    89f6:	97 e1       	ldi	r25, 0x17	; 23
    89f8:	9a 9f       	mul	r25, r26
    89fa:	e0 01       	movw	r28, r0
    89fc:	9b 9f       	mul	r25, r27
    89fe:	d0 0d       	add	r29, r0
    8a00:	11 24       	eor	r1, r1
    8a02:	c1 56       	subi	r28, 0x61	; 97
    8a04:	d7 4f       	sbci	r29, 0xF7	; 247
    8a06:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    8a08:	1e 8a       	std	Y+22, r1	; 0x16
    8a0a:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    8a0c:	48 2f       	mov	r20, r24
    8a0e:	ce 01       	movw	r24, r28
    8a10:	0e 94 07 44 	call	0x880e	; 0x880e <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    8a14:	88 81       	ld	r24, Y
    8a16:	80 62       	ori	r24, 0x20	; 32
    8a18:	88 83       	st	Y, r24
		}

	}
}
    8a1a:	df 91       	pop	r29
    8a1c:	cf 91       	pop	r28
    8a1e:	08 95       	ret

00008a20 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    8a20:	ef 92       	push	r14
    8a22:	ff 92       	push	r15
    8a24:	0f 93       	push	r16
    8a26:	1f 93       	push	r17
    8a28:	cf 93       	push	r28
    8a2a:	df 93       	push	r29
    8a2c:	cf e9       	ldi	r28, 0x9F	; 159
    8a2e:	d8 e0       	ldi	r29, 0x08	; 8
    8a30:	06 e7       	ldi	r16, 0x76	; 118
    8a32:	18 e0       	ldi	r17, 0x08	; 8
    8a34:	98 01       	movw	r18, r16
    8a36:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    8a38:	1f 96       	adiw	r26, 0x0f	; 15
    8a3a:	8c 91       	ld	r24, X
    8a3c:	1f 97       	sbiw	r26, 0x0f	; 15
    8a3e:	88 23       	and	r24, r24
    8a40:	a9 f0       	breq	.+42     	; 0x8a6c <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    8a42:	1e 96       	adiw	r26, 0x0e	; 14
    8a44:	4c 91       	ld	r20, X
    8a46:	1e 97       	sbiw	r26, 0x0e	; 14
    8a48:	08 2e       	mov	r0, r24
    8a4a:	00 0c       	add	r0, r0
    8a4c:	99 0b       	sbc	r25, r25
    8a4e:	84 0f       	add	r24, r20
    8a50:	91 1d       	adc	r25, r1
    8a52:	8f 3f       	cpi	r24, 0xFF	; 255
    8a54:	91 05       	cpc	r25, r1
    8a56:	19 f0       	breq	.+6      	; 0x8a5e <ProcessMusic+0x3e>
    8a58:	14 f0       	brlt	.+4      	; 0x8a5e <ProcessMusic+0x3e>
    8a5a:	8f ef       	ldi	r24, 0xFF	; 255
    8a5c:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    8a5e:	97 ff       	sbrs	r25, 7
    8a60:	02 c0       	rjmp	.+4      	; 0x8a66 <ProcessMusic+0x46>
    8a62:	80 e0       	ldi	r24, 0x00	; 0
    8a64:	90 e0       	ldi	r25, 0x00	; 0
    8a66:	1e 96       	adiw	r26, 0x0e	; 14
    8a68:	8c 93       	st	X, r24
    8a6a:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    8a6c:	6c 91       	ld	r22, X
    8a6e:	63 ff       	sbrs	r22, 3
    8a70:	26 c0       	rjmp	.+76     	; 0x8abe <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    8a72:	15 96       	adiw	r26, 0x05	; 5
    8a74:	4d 91       	ld	r20, X+
    8a76:	5c 91       	ld	r21, X
    8a78:	16 97       	sbiw	r26, 0x06	; 6
    8a7a:	f9 01       	movw	r30, r18
    8a7c:	81 81       	ldd	r24, Z+1	; 0x01
    8a7e:	92 81       	ldd	r25, Z+2	; 0x02
    8a80:	84 0f       	add	r24, r20
    8a82:	95 1f       	adc	r25, r21
    8a84:	92 83       	std	Z+2, r25	; 0x02
    8a86:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    8a88:	17 96       	adiw	r26, 0x07	; 7
    8a8a:	ec 91       	ld	r30, X
    8a8c:	17 97       	sbiw	r26, 0x07	; 7
    8a8e:	f0 e0       	ldi	r31, 0x00	; 0
    8a90:	ee 0f       	add	r30, r30
    8a92:	ff 1f       	adc	r31, r31
    8a94:	e6 5c       	subi	r30, 0xC6	; 198
    8a96:	f1 47       	sbci	r31, 0x71	; 113
    8a98:	e5 90       	lpm	r14, Z+
    8a9a:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    8a9c:	14 16       	cp	r1, r20
    8a9e:	15 06       	cpc	r1, r21
    8aa0:	24 f4       	brge	.+8      	; 0x8aaa <ProcessMusic+0x8a>
    8aa2:	8e 15       	cp	r24, r14
    8aa4:	9f 05       	cpc	r25, r15
    8aa6:	30 f4       	brcc	.+12     	; 0x8ab4 <ProcessMusic+0x94>
    8aa8:	0a c0       	rjmp	.+20     	; 0x8abe <ProcessMusic+0x9e>
    8aaa:	45 2b       	or	r20, r21
    8aac:	41 f0       	breq	.+16     	; 0x8abe <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    8aae:	e8 16       	cp	r14, r24
    8ab0:	f9 06       	cpc	r15, r25
    8ab2:	28 f0       	brcs	.+10     	; 0x8abe <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    8ab4:	f9 01       	movw	r30, r18
    8ab6:	f2 82       	std	Z+2, r15	; 0x02
    8ab8:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    8aba:	67 7f       	andi	r22, 0xF7	; 247
    8abc:	6c 93       	st	X, r22
    8abe:	57 96       	adiw	r26, 0x17	; 23
    8ac0:	2a 5f       	subi	r18, 0xFA	; 250
    8ac2:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8ac4:	f9 e0       	ldi	r31, 0x09	; 9
    8ac6:	a2 31       	cpi	r26, 0x12	; 18
    8ac8:	bf 07       	cpc	r27, r31
    8aca:	09 f0       	breq	.+2      	; 0x8ace <ProcessMusic+0xae>
    8acc:	b5 cf       	rjmp	.-150    	; 0x8a38 <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    8ace:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <playSong>
    8ad2:	88 23       	and	r24, r24
    8ad4:	09 f4       	brne	.+2      	; 0x8ad8 <ProcessMusic+0xb8>
    8ad6:	cc c0       	rjmp	.+408    	; 0x8c70 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    8ad8:	87 e1       	ldi	r24, 0x17	; 23
    8ada:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    8adc:	80 91 12 09 	lds	r24, 0x0912	; 0x800912 <currDeltaTime>
    8ae0:	90 91 13 09 	lds	r25, 0x0913	; 0x800913 <currDeltaTime+0x1>
    8ae4:	20 91 18 09 	lds	r18, 0x0918	; 0x800918 <nextDeltaTime>
    8ae8:	30 91 19 09 	lds	r19, 0x0919	; 0x800919 <nextDeltaTime+0x1>
    8aec:	82 17       	cp	r24, r18
    8aee:	93 07       	cpc	r25, r19
    8af0:	09 f0       	breq	.+2      	; 0x8af4 <ProcessMusic+0xd4>
    8af2:	b9 c0       	rjmp	.+370    	; 0x8c66 <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    8af4:	20 91 1b 09 	lds	r18, 0x091B	; 0x80091b <songPos>
    8af8:	30 91 1c 09 	lds	r19, 0x091C	; 0x80091c <songPos+0x1>
    8afc:	b9 01       	movw	r22, r18
    8afe:	6f 5f       	subi	r22, 0xFF	; 255
    8b00:	7f 4f       	sbci	r23, 0xFF	; 255
    8b02:	70 93 1c 09 	sts	0x091C, r23	; 0x80091c <songPos+0x1>
    8b06:	60 93 1b 09 	sts	0x091B, r22	; 0x80091b <songPos>
    8b0a:	f9 01       	movw	r30, r18
    8b0c:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    8b0e:	4f 3f       	cpi	r20, 0xFF	; 255
    8b10:	79 f5       	brne	.+94     	; 0x8b70 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    8b12:	a9 01       	movw	r20, r18
    8b14:	4e 5f       	subi	r20, 0xFE	; 254
    8b16:	5f 4f       	sbci	r21, 0xFF	; 255
    8b18:	50 93 1c 09 	sts	0x091C, r21	; 0x80091c <songPos+0x1>
    8b1c:	40 93 1b 09 	sts	0x091B, r20	; 0x80091b <songPos>
    8b20:	fb 01       	movw	r30, r22
    8b22:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    8b24:	6f 32       	cpi	r22, 0x2F	; 47
    8b26:	19 f4       	brne	.+6      	; 0x8b2e <ProcessMusic+0x10e>
						playSong=false;
    8b28:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
						break;	
    8b2c:	9c c0       	rjmp	.+312    	; 0x8c66 <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    8b2e:	66 30       	cpi	r22, 0x06	; 6
    8b30:	09 f0       	breq	.+2      	; 0x8b34 <ProcessMusic+0x114>
    8b32:	8c c0       	rjmp	.+280    	; 0x8c4c <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    8b34:	fa 01       	movw	r30, r20
    8b36:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    8b38:	c9 01       	movw	r24, r18
    8b3a:	04 96       	adiw	r24, 0x04	; 4
    8b3c:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8b40:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    8b44:	f9 01       	movw	r30, r18
    8b46:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    8b48:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    8b4a:	e3 35       	cpi	r30, 0x53	; 83
    8b4c:	29 f4       	brne	.+10     	; 0x8b58 <ProcessMusic+0x138>
							loopStart=songPos;
    8b4e:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    8b52:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    8b56:	7a c0       	rjmp	.+244    	; 0x8c4c <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    8b58:	e5 34       	cpi	r30, 0x45	; 69
    8b5a:	09 f0       	breq	.+2      	; 0x8b5e <ProcessMusic+0x13e>
    8b5c:	77 c0       	rjmp	.+238    	; 0x8c4c <ProcessMusic+0x22c>
							songPos=loopStart;
    8b5e:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <loopStart>
    8b62:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <loopStart+0x1>
    8b66:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8b6a:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    8b6e:	6e c0       	rjmp	.+220    	; 0x8c4c <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    8b70:	47 fd       	sbrc	r20, 7
    8b72:	40 93 16 09 	sts	0x0916, r20	; 0x800916 <lastStatus>
					channel=lastStatus&0x0f;
    8b76:	90 91 16 09 	lds	r25, 0x0916	; 0x800916 <lastStatus>
    8b7a:	89 2f       	mov	r24, r25
    8b7c:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    8b7e:	47 ff       	sbrs	r20, 7
    8b80:	08 c0       	rjmp	.+16     	; 0x8b92 <ProcessMusic+0x172>
    8b82:	2e 5f       	subi	r18, 0xFE	; 254
    8b84:	3f 4f       	sbci	r19, 0xFF	; 255
    8b86:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8b8a:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8b8e:	fb 01       	movw	r30, r22
    8b90:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    8b92:	90 7f       	andi	r25, 0xF0	; 240
    8b94:	90 3b       	cpi	r25, 0xB0	; 176
    8b96:	e1 f0       	breq	.+56     	; 0x8bd0 <ProcessMusic+0x1b0>
    8b98:	90 3c       	cpi	r25, 0xC0	; 192
    8b9a:	09 f4       	brne	.+2      	; 0x8b9e <ProcessMusic+0x17e>
    8b9c:	51 c0       	rjmp	.+162    	; 0x8c40 <ProcessMusic+0x220>
    8b9e:	90 39       	cpi	r25, 0x90	; 144
    8ba0:	09 f0       	breq	.+2      	; 0x8ba4 <ProcessMusic+0x184>
    8ba2:	54 c0       	rjmp	.+168    	; 0x8c4c <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    8ba4:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    8ba8:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    8bac:	9f 01       	movw	r18, r30
    8bae:	2f 5f       	subi	r18, 0xFF	; 255
    8bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    8bb2:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8bb6:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8bba:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    8bbc:	22 0f       	add	r18, r18
    8bbe:	f8 9e       	mul	r15, r24
    8bc0:	f0 01       	movw	r30, r0
    8bc2:	11 24       	eor	r1, r1
    8bc4:	e1 56       	subi	r30, 0x61	; 97
    8bc6:	f7 4f       	sbci	r31, 0xF7	; 247
    8bc8:	60 89       	ldd	r22, Z+16	; 0x10
    8bca:	0e 94 d0 44 	call	0x89a0	; 0x89a0 <TriggerNote>
    8bce:	3e c0       	rjmp	.+124    	; 0x8c4c <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    8bd0:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    8bd4:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    8bd8:	9f 01       	movw	r18, r30
    8bda:	2f 5f       	subi	r18, 0xFF	; 255
    8bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    8bde:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8be2:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8be6:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    8be8:	47 30       	cpi	r20, 0x07	; 7
    8bea:	49 f4       	brne	.+18     	; 0x8bfe <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    8bec:	f8 9e       	mul	r15, r24
    8bee:	d0 01       	movw	r26, r0
    8bf0:	11 24       	eor	r1, r1
    8bf2:	a1 56       	subi	r26, 0x61	; 97
    8bf4:	b7 4f       	sbci	r27, 0xF7	; 247
    8bf6:	ee 0f       	add	r30, r30
    8bf8:	1c 96       	adiw	r26, 0x0c	; 12
    8bfa:	ec 93       	st	X, r30
    8bfc:	27 c0       	rjmp	.+78     	; 0x8c4c <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    8bfe:	4b 30       	cpi	r20, 0x0B	; 11
    8c00:	49 f4       	brne	.+18     	; 0x8c14 <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    8c02:	f8 9e       	mul	r15, r24
    8c04:	d0 01       	movw	r26, r0
    8c06:	11 24       	eor	r1, r1
    8c08:	a1 56       	subi	r26, 0x61	; 97
    8c0a:	b7 4f       	sbci	r27, 0xF7	; 247
    8c0c:	ee 0f       	add	r30, r30
    8c0e:	13 96       	adiw	r26, 0x03	; 3
    8c10:	ec 93       	st	X, r30
    8c12:	1c c0       	rjmp	.+56     	; 0x8c4c <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    8c14:	4c 35       	cpi	r20, 0x5C	; 92
    8c16:	49 f4       	brne	.+18     	; 0x8c2a <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    8c18:	f8 9e       	mul	r15, r24
    8c1a:	d0 01       	movw	r26, r0
    8c1c:	11 24       	eor	r1, r1
    8c1e:	a1 56       	subi	r26, 0x61	; 97
    8c20:	b7 4f       	sbci	r27, 0xF7	; 247
    8c22:	ee 0f       	add	r30, r30
    8c24:	1a 96       	adiw	r26, 0x0a	; 10
    8c26:	ec 93       	st	X, r30
    8c28:	11 c0       	rjmp	.+34     	; 0x8c4c <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    8c2a:	44 36       	cpi	r20, 0x64	; 100
    8c2c:	79 f4       	brne	.+30     	; 0x8c4c <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    8c2e:	f8 9e       	mul	r15, r24
    8c30:	d0 01       	movw	r26, r0
    8c32:	11 24       	eor	r1, r1
    8c34:	a1 56       	subi	r26, 0x61	; 97
    8c36:	b7 4f       	sbci	r27, 0xF7	; 247
    8c38:	ee 0f       	add	r30, r30
    8c3a:	1b 96       	adiw	r26, 0x0b	; 11
    8c3c:	ec 93       	st	X, r30
    8c3e:	06 c0       	rjmp	.+12     	; 0x8c4c <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    8c40:	f8 9e       	mul	r15, r24
    8c42:	f0 01       	movw	r30, r0
    8c44:	11 24       	eor	r1, r1
    8c46:	e1 56       	subi	r30, 0x61	; 97
    8c48:	f7 4f       	sbci	r31, 0xF7	; 247
    8c4a:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    8c4c:	8b e1       	ldi	r24, 0x1B	; 27
    8c4e:	99 e0       	ldi	r25, 0x09	; 9
    8c50:	0e 94 e1 43 	call	0x87c2	; 0x87c2 <ReadVarLen>
    8c54:	90 93 19 09 	sts	0x0919, r25	; 0x800919 <nextDeltaTime+0x1>
    8c58:	80 93 18 09 	sts	0x0918, r24	; 0x800918 <nextDeltaTime>
				currDeltaTime=0;
    8c5c:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    8c60:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    8c64:	3b cf       	rjmp	.-394    	; 0x8adc <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    8c66:	01 96       	adiw	r24, 0x01	; 1
    8c68:	90 93 13 09 	sts	0x0913, r25	; 0x800913 <currDeltaTime+0x1>
    8c6c:	80 93 12 09 	sts	0x0912, r24	; 0x800912 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8c70:	ee 24       	eor	r14, r14
    8c72:	ea 94       	dec	r14
    8c74:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    8c76:	88 81       	ld	r24, Y
    8c78:	85 ff       	sbrs	r24, 5
    8c7a:	37 c0       	rjmp	.+110    	; 0x8cea <ProcessMusic+0x2ca>
    8c7c:	2d 89       	ldd	r18, Y+21	; 0x15
    8c7e:	3e 89       	ldd	r19, Y+22	; 0x16
    8c80:	23 2b       	or	r18, r19
    8c82:	09 f4       	brne	.+2      	; 0x8c86 <ProcessMusic+0x266>
    8c84:	32 c0       	rjmp	.+100    	; 0x8cea <ProcessMusic+0x2ca>
    8c86:	86 fd       	sbrc	r24, 6
    8c88:	30 c0       	rjmp	.+96     	; 0x8cea <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    8c8a:	9b 89       	ldd	r25, Y+19	; 0x13
    8c8c:	8a 89       	ldd	r24, Y+18	; 0x12
    8c8e:	98 13       	cpse	r25, r24
    8c90:	2a c0       	rjmp	.+84     	; 0x8ce6 <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    8c92:	ed 89       	ldd	r30, Y+21	; 0x15
    8c94:	fe 89       	ldd	r31, Y+22	; 0x16
    8c96:	bf 01       	movw	r22, r30
    8c98:	6f 5f       	subi	r22, 0xFF	; 255
    8c9a:	7f 4f       	sbci	r23, 0xFF	; 255
    8c9c:	7e 8b       	std	Y+22, r23	; 0x16
    8c9e:	6d 8b       	std	Y+21, r22	; 0x15
    8ca0:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    8ca2:	8f 3f       	cpi	r24, 0xFF	; 255
    8ca4:	31 f4       	brne	.+12     	; 0x8cb2 <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8ca6:	88 81       	ld	r24, Y
    8ca8:	8f 77       	andi	r24, 0x7F	; 127
    8caa:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    8cac:	1e 8a       	std	Y+22, r1	; 0x16
    8cae:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    8cb0:	1a c0       	rjmp	.+52     	; 0x8ce6 <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    8cb2:	32 96       	adiw	r30, 0x02	; 2
    8cb4:	fe 8b       	std	Y+22, r31	; 0x16
    8cb6:	ed 8b       	std	Y+21, r30	; 0x15
    8cb8:	fb 01       	movw	r30, r22
    8cba:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    8cbc:	e8 2f       	mov	r30, r24
    8cbe:	f0 e0       	ldi	r31, 0x00	; 0
    8cc0:	ee 0f       	add	r30, r30
    8cc2:	ff 1f       	adc	r31, r31
    8cc4:	ee 53       	subi	r30, 0x3E	; 62
    8cc6:	ff 4f       	sbci	r31, 0xFF	; 255
    8cc8:	25 91       	lpm	r18, Z+
    8cca:	34 91       	lpm	r19, Z
    8ccc:	ce 01       	movw	r24, r28
    8cce:	f9 01       	movw	r30, r18
    8cd0:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    8cd2:	ed 89       	ldd	r30, Y+21	; 0x15
    8cd4:	fe 89       	ldd	r31, Y+22	; 0x16
    8cd6:	cf 01       	movw	r24, r30
    8cd8:	01 96       	adiw	r24, 0x01	; 1
    8cda:	9e 8b       	std	Y+22, r25	; 0x16
    8cdc:	8d 8b       	std	Y+21, r24	; 0x15
    8cde:	e4 91       	lpm	r30, Z
    8ce0:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    8ce2:	1b 8a       	std	Y+19, r1	; 0x13
    8ce4:	d2 cf       	rjmp	.-92     	; 0x8c8a <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    8ce6:	9f 5f       	subi	r25, 0xFF	; 255
    8ce8:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    8cea:	98 81       	ld	r25, Y
    8cec:	95 ff       	sbrs	r25, 5
    8cee:	5e c0       	rjmp	.+188    	; 0x8dac <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    8cf0:	8c 89       	ldd	r24, Y+20	; 0x14
    8cf2:	8f 3f       	cpi	r24, 0xFF	; 255
    8cf4:	11 f0       	breq	.+4      	; 0x8cfa <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    8cf6:	8f 5f       	subi	r24, 0xFF	; 255
    8cf8:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    8cfa:	97 fd       	sbrc	r25, 7
    8cfc:	02 c0       	rjmp	.+4      	; 0x8d02 <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    8cfe:	9c 85       	ldd	r25, Y+12	; 0x0c
    8d00:	01 c0       	rjmp	.+2      	; 0x8d04 <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    8d02:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    8d04:	8d 85       	ldd	r24, Y+13	; 0x0d
    8d06:	49 85       	ldd	r20, Y+9	; 0x09
    8d08:	88 23       	and	r24, r24
    8d0a:	09 f4       	brne	.+2      	; 0x8d0e <ProcessMusic+0x2ee>
    8d0c:	49 c0       	rjmp	.+146    	; 0x8da0 <ProcessMusic+0x380>
    8d0e:	6e 85       	ldd	r22, Y+14	; 0x0e
    8d10:	66 23       	and	r22, r22
    8d12:	09 f4       	brne	.+2      	; 0x8d16 <ProcessMusic+0x2f6>
    8d14:	45 c0       	rjmp	.+138    	; 0x8da0 <ProcessMusic+0x380>
    8d16:	99 23       	and	r25, r25
    8d18:	09 f4       	brne	.+2      	; 0x8d1c <ProcessMusic+0x2fc>
    8d1a:	42 c0       	rjmp	.+132    	; 0x8da0 <ProcessMusic+0x380>
    8d1c:	50 91 17 09 	lds	r21, 0x0917	; 0x800917 <masterVolume>
    8d20:	55 23       	and	r21, r21
    8d22:	09 f4       	brne	.+2      	; 0x8d26 <ProcessMusic+0x306>
    8d24:	3d c0       	rjmp	.+122    	; 0x8da0 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    8d26:	89 9f       	mul	r24, r25
    8d28:	c0 01       	movw	r24, r0
    8d2a:	11 24       	eor	r1, r1
    8d2c:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    8d2e:	89 2f       	mov	r24, r25
    8d30:	99 27       	eor	r25, r25
    8d32:	68 9f       	mul	r22, r24
    8d34:	90 01       	movw	r18, r0
    8d36:	69 9f       	mul	r22, r25
    8d38:	30 0d       	add	r19, r0
    8d3a:	11 24       	eor	r1, r1
    8d3c:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    8d3e:	23 2f       	mov	r18, r19
    8d40:	33 27       	eor	r19, r19
    8d42:	6b 81       	ldd	r22, Y+3	; 0x03
    8d44:	62 9f       	mul	r22, r18
    8d46:	c0 01       	movw	r24, r0
    8d48:	63 9f       	mul	r22, r19
    8d4a:	90 0d       	add	r25, r0
    8d4c:	11 24       	eor	r1, r1
    8d4e:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    8d50:	89 2f       	mov	r24, r25
    8d52:	99 27       	eor	r25, r25
    8d54:	58 9f       	mul	r21, r24
    8d56:	90 01       	movw	r18, r0
    8d58:	59 9f       	mul	r21, r25
    8d5a:	30 0d       	add	r19, r0
    8d5c:	11 24       	eor	r1, r1
    8d5e:	33 95       	inc	r19
				uVol>>=8;
    8d60:	23 2f       	mov	r18, r19
    8d62:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    8d64:	8a 85       	ldd	r24, Y+10	; 0x0a
    8d66:	88 23       	and	r24, r24
    8d68:	e9 f0       	breq	.+58     	; 0x8da4 <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    8d6a:	e4 2f       	mov	r30, r20
    8d6c:	f0 e0       	ldi	r31, 0x00	; 0
    8d6e:	e0 50       	subi	r30, 0x00	; 0
    8d70:	f0 47       	sbci	r31, 0x70	; 112
    8d72:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    8d74:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    8d76:	8e 9f       	mul	r24, r30
    8d78:	f0 01       	movw	r30, r0
    8d7a:	11 24       	eor	r1, r1
    8d7c:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8d7e:	ef 2f       	mov	r30, r31
    8d80:	ff 27       	eor	r31, r31
    8d82:	b7 01       	movw	r22, r14
    8d84:	6e 1b       	sub	r22, r30
    8d86:	7f 0b       	sbc	r23, r31
    8d88:	62 9f       	mul	r22, r18
    8d8a:	c0 01       	movw	r24, r0
    8d8c:	63 9f       	mul	r22, r19
    8d8e:	90 0d       	add	r25, r0
    8d90:	72 9f       	mul	r23, r18
    8d92:	90 0d       	add	r25, r0
    8d94:	11 24       	eor	r1, r1
    8d96:	9c 01       	movw	r18, r24
    8d98:	33 95       	inc	r19
					uVol>>=8;
    8d9a:	23 2f       	mov	r18, r19
    8d9c:	33 27       	eor	r19, r19
    8d9e:	02 c0       	rjmp	.+4      	; 0x8da4 <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    8da0:	20 e0       	ldi	r18, 0x00	; 0
    8da2:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    8da4:	8b 85       	ldd	r24, Y+11	; 0x0b
    8da6:	48 0f       	add	r20, r24
    8da8:	49 87       	std	Y+9, r20	; 0x09
    8daa:	02 c0       	rjmp	.+4      	; 0x8db0 <ProcessMusic+0x390>

		}else{
			uVol=0;
    8dac:	20 e0       	ldi	r18, 0x00	; 0
    8dae:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    8db0:	f8 01       	movw	r30, r16
    8db2:	20 83       	st	Z, r18
    8db4:	67 96       	adiw	r28, 0x17	; 23
    8db6:	0a 5f       	subi	r16, 0xFA	; 250
    8db8:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8dba:	f9 e0       	ldi	r31, 0x09	; 9
    8dbc:	c2 31       	cpi	r28, 0x12	; 18
    8dbe:	df 07       	cpc	r29, r31
    8dc0:	09 f0       	breq	.+2      	; 0x8dc4 <ProcessMusic+0x3a4>
    8dc2:	59 cf       	rjmp	.-334    	; 0x8c76 <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    8dc4:	df 91       	pop	r29
    8dc6:	cf 91       	pop	r28
    8dc8:	1f 91       	pop	r17
    8dca:	0f 91       	pop	r16
    8dcc:	ff 90       	pop	r15
    8dce:	ef 90       	pop	r14
    8dd0:	08 95       	ret

00008dd2 <SetMixerNote>:
    8dd2:	99 27       	eor	r25, r25
    8dd4:	77 27       	eor	r23, r23
    8dd6:	83 30       	cpi	r24, 0x03	; 3
    8dd8:	09 f4       	brne	.+2      	; 0x8ddc <set_note_waves>
    8dda:	08 95       	ret

00008ddc <set_note_waves>:
    8ddc:	ea e3       	ldi	r30, 0x3A	; 58
    8dde:	fe e8       	ldi	r31, 0x8E	; 142
    8de0:	66 0f       	add	r22, r22
    8de2:	77 1f       	adc	r23, r23
    8de4:	e6 0f       	add	r30, r22
    8de6:	f7 1f       	adc	r31, r23
    8de8:	a5 91       	lpm	r26, Z+
    8dea:	b4 91       	lpm	r27, Z
    8dec:	e6 e7       	ldi	r30, 0x76	; 118
    8dee:	f8 e0       	ldi	r31, 0x08	; 8
    8df0:	26 e0       	ldi	r18, 0x06	; 6
    8df2:	28 9f       	mul	r18, r24
    8df4:	e0 0d       	add	r30, r0
    8df6:	f1 1d       	adc	r31, r1
    8df8:	a1 83       	std	Z+1, r26	; 0x01
    8dfa:	b2 83       	std	Z+2, r27	; 0x02
    8dfc:	11 24       	eor	r1, r1
    8dfe:	08 95       	ret

00008e00 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    8e00:	99 27       	eor	r25, r25
	clr r23
    8e02:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    8e04:	e6 e7       	ldi	r30, 0x76	; 118
	ldi ZH,hi8(mixerStruct)
    8e06:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    8e08:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    8e0a:	28 9f       	mul	r18, r24
	add ZL,r0
    8e0c:	e0 0d       	add	r30, r0
	adc ZH,r1
    8e0e:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    8e10:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    8e12:	31 f4       	brne	.+12     	; 0x8e20 <smw1>
	lds r22,tr4_params
    8e14:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	andi r22,0xfe;
    8e18:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    8e1a:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw	
    8e1e:	0b c0       	rjmp	.+22     	; 0x8e36 <esmw>

00008e20 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    8e20:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    8e22:	31 f4       	brne	.+12     	; 0x8e30 <smw2>
	lds r22,tr4_params
    8e24:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	ori r22,0xfe;
    8e28:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    8e2a:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw
    8e2e:	03 c0       	rjmp	.+6      	; 0x8e36 <esmw>

00008e30 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    8e30:	70 e9       	ldi	r23, 0x90	; 144
	add r23,r22
    8e32:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    8e34:	75 83       	std	Z+5, r23	; 0x05

00008e36 <esmw>:
#endif

esmw:
	clr r1	
    8e36:	11 24       	eor	r1, r1
	ret
    8e38:	08 95       	ret

00008e3a <steptable>:
    8e3a:	22 00       	.word	0x0022	; ????
    8e3c:	24 00       	.word	0x0024	; ????
    8e3e:	26 00       	.word	0x0026	; ????
    8e40:	28 00       	.word	0x0028	; ????
    8e42:	2b 00       	.word	0x002b	; ????
    8e44:	2d 00       	.word	0x002d	; ????
    8e46:	30 00       	.word	0x0030	; ????
    8e48:	33 00       	.word	0x0033	; ????
    8e4a:	36 00       	.word	0x0036	; ????
    8e4c:	39 00       	.word	0x0039	; ????
    8e4e:	3d 00       	.word	0x003d	; ????
    8e50:	40 00       	.word	0x0040	; ????
    8e52:	44 00       	.word	0x0044	; ????
    8e54:	48 00       	.word	0x0048	; ????
    8e56:	4c 00       	.word	0x004c	; ????
    8e58:	51 00       	.word	0x0051	; ????
    8e5a:	56 00       	.word	0x0056	; ????
    8e5c:	5b 00       	.word	0x005b	; ????
    8e5e:	60 00       	.word	0x0060	; ????
    8e60:	66 00       	.word	0x0066	; ????
    8e62:	6c 00       	.word	0x006c	; ????
    8e64:	73 00       	.word	0x0073	; ????
    8e66:	79 00       	.word	0x0079	; ????
    8e68:	81 00       	.word	0x0081	; ????
    8e6a:	88 00       	.word	0x0088	; ????
    8e6c:	90 00       	.word	0x0090	; ????
    8e6e:	99 00       	.word	0x0099	; ????
    8e70:	a2 00       	.word	0x00a2	; ????
    8e72:	ac 00       	.word	0x00ac	; ????
    8e74:	b6 00       	.word	0x00b6	; ????
    8e76:	c1 00       	.word	0x00c1	; ????
    8e78:	cc 00       	.word	0x00cc	; ????
    8e7a:	d8 00       	.word	0x00d8	; ????
    8e7c:	e5 00       	.word	0x00e5	; ????
    8e7e:	f3 00       	.word	0x00f3	; ????
    8e80:	01 01       	movw	r0, r2
    8e82:	10 01       	movw	r2, r0
    8e84:	21 01       	movw	r4, r2
    8e86:	32 01       	movw	r6, r4
    8e88:	44 01       	movw	r8, r8
    8e8a:	57 01       	movw	r10, r14
    8e8c:	6c 01       	movw	r12, r24
    8e8e:	81 01       	movw	r16, r2
    8e90:	98 01       	movw	r18, r16
    8e92:	b0 01       	movw	r22, r0
    8e94:	ca 01       	movw	r24, r20
    8e96:	e5 01       	movw	r28, r10
    8e98:	02 02       	muls	r16, r18
    8e9a:	21 02       	muls	r18, r17
    8e9c:	41 02       	muls	r20, r17
    8e9e:	64 02       	muls	r22, r20
    8ea0:	88 02       	muls	r24, r24
    8ea2:	ae 02       	muls	r26, r30
    8ea4:	d7 02       	muls	r29, r23
    8ea6:	03 03       	mulsu	r16, r19
    8ea8:	30 03       	mulsu	r19, r16
    8eaa:	61 03       	mulsu	r22, r17
    8eac:	94 03       	fmuls	r17, r20
    8eae:	cb 03       	fmulsu	r20, r19
    8eb0:	05 04       	cpc	r0, r5
    8eb2:	42 04       	cpc	r4, r2
    8eb4:	83 04       	cpc	r8, r3
    8eb6:	c7 04       	cpc	r12, r7
    8eb8:	10 05       	cpc	r17, r0
    8eba:	5d 05       	cpc	r21, r13
    8ebc:	af 05       	cpc	r26, r15
    8ebe:	05 06       	cpc	r0, r21
    8ec0:	61 06       	cpc	r6, r17
    8ec2:	c2 06       	cpc	r12, r18
    8ec4:	29 07       	cpc	r18, r25
    8ec6:	96 07       	cpc	r25, r22
    8ec8:	09 08       	sbc	r0, r9
    8eca:	83 08       	sbc	r8, r3
    8ecc:	05 09       	sbc	r16, r5
    8ece:	8e 09       	sbc	r24, r14
    8ed0:	20 0a       	sbc	r2, r16
    8ed2:	ba 0a       	sbc	r11, r26
    8ed4:	5d 0b       	sbc	r21, r29
    8ed6:	0a 0c       	add	r0, r10
    8ed8:	c1 0c       	add	r12, r1
    8eda:	84 0d       	add	r24, r4
    8edc:	51 0e       	add	r5, r17
    8ede:	2b 0f       	add	r18, r27
    8ee0:	12 10       	cpse	r1, r2
    8ee2:	07 11       	cpse	r16, r7
    8ee4:	0a 12       	cpse	r0, r26
    8ee6:	1d 13       	cpse	r17, r29
    8ee8:	40 14       	cp	r4, r0
    8eea:	74 15       	cp	r23, r4
    8eec:	ba 16       	cp	r11, r26
    8eee:	14 18       	sub	r1, r4
    8ef0:	83 19       	sub	r24, r3
    8ef2:	07 1b       	sub	r16, r23
    8ef4:	a3 1c       	adc	r10, r3
    8ef6:	57 1e       	adc	r5, r23
    8ef8:	24 20       	and	r2, r4
    8efa:	0e 22       	and	r0, r30
    8efc:	14 24       	eor	r1, r4
    8efe:	39 26       	eor	r3, r25
    8f00:	7f 28       	or	r7, r15
    8f02:	e8 2a       	or	r14, r24
    8f04:	75 2d       	mov	r23, r5
    8f06:	29 30       	cpi	r18, 0x09	; 9
    8f08:	06 33       	cpi	r16, 0x36	; 54
    8f0a:	0f 36       	cpi	r16, 0x6F	; 111
    8f0c:	45 39       	cpi	r20, 0x95	; 149
    8f0e:	ad 3c       	cpi	r26, 0xCD	; 205
    8f10:	49 40       	sbci	r20, 0x09	; 9
    8f12:	1b 44       	sbci	r17, 0x4B	; 75
    8f14:	28 48       	sbci	r18, 0x88	; 136
    8f16:	73 4c       	sbci	r23, 0xC3	; 195
    8f18:	fe 50       	subi	r31, 0x0E	; 14
    8f1a:	cf 55       	subi	r28, 0x5F	; 95
    8f1c:	ea 5a       	subi	r30, 0xAA	; 170
    8f1e:	51 60       	ori	r21, 0x01	; 1
    8f20:	0c 66       	ori	r16, 0x6C	; 108
    8f22:	1d 6c       	ori	r17, 0xCD	; 205
    8f24:	8b 72       	andi	r24, 0x2B	; 43
    8f26:	5a 79       	andi	r21, 0x9A	; 154
    8f28:	92 80       	ldd	r9, Z+2	; 0x02
    8f2a:	37 88       	ldd	r3, Z+23	; 0x17
    8f2c:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x89e5>
    8f30:	fd a1       	ldd	r31, Y+37	; 0x25
    8f32:	9f ab       	std	Y+55, r25	; 0x37
    8f34:	d3 b5       	in	r29, 0x23	; 35
    8f36:	a3 c0       	rjmp	.+326    	; 0x907e <waves+0x7e>
	...

00009000 <waves>:
    9000:	00 03       	mulsu	r16, r16
    9002:	06 09       	sbc	r16, r6
    9004:	0c 10       	cpse	r0, r12
    9006:	13 16       	cp	r1, r19
    9008:	19 1c       	adc	r1, r9
    900a:	1f 22       	and	r1, r31
    900c:	25 28       	or	r2, r5
    900e:	2b 2e       	mov	r2, r27
    9010:	31 33       	cpi	r19, 0x31	; 49
    9012:	36 39       	cpi	r19, 0x96	; 150
    9014:	3c 3f       	cpi	r19, 0xFC	; 252
    9016:	41 44       	sbci	r20, 0x41	; 65
    9018:	47 49       	sbci	r20, 0x97	; 151
    901a:	4c 4e       	sbci	r20, 0xEC	; 236
    901c:	51 53       	subi	r21, 0x31	; 49
    901e:	55 58       	subi	r21, 0x85	; 133
    9020:	5a 5c       	subi	r21, 0xCA	; 202
    9022:	5e 60       	ori	r21, 0x0E	; 14
    9024:	62 64       	ori	r22, 0x42	; 66
    9026:	66 68       	ori	r22, 0x86	; 134
    9028:	6a 6b       	ori	r22, 0xBA	; 186
    902a:	6d 6f       	ori	r22, 0xFD	; 253
    902c:	70 71       	andi	r23, 0x10	; 16
    902e:	73 74       	andi	r23, 0x43	; 67
    9030:	75 76       	andi	r23, 0x65	; 101
    9032:	78 79       	andi	r23, 0x98	; 152
    9034:	7a 7a       	andi	r23, 0xAA	; 170
    9036:	7b 7c       	andi	r23, 0xCB	; 203
    9038:	7d 7d       	andi	r23, 0xDD	; 221
    903a:	7e 7e       	andi	r23, 0xEE	; 238
    903c:	7e 7f       	andi	r23, 0xFE	; 254
    903e:	7f 7f       	andi	r23, 0xFF	; 255
    9040:	7f 7f       	andi	r23, 0xFF	; 255
    9042:	7f 7f       	andi	r23, 0xFF	; 255
    9044:	7e 7e       	andi	r23, 0xEE	; 238
    9046:	7e 7d       	andi	r23, 0xDE	; 222
    9048:	7d 7c       	andi	r23, 0xCD	; 205
    904a:	7b 7a       	andi	r23, 0xAB	; 171
    904c:	7a 79       	andi	r23, 0x9A	; 154
    904e:	78 76       	andi	r23, 0x68	; 104
    9050:	75 74       	andi	r23, 0x45	; 69
    9052:	73 71       	andi	r23, 0x13	; 19
    9054:	70 6f       	ori	r23, 0xF0	; 240
    9056:	6d 6b       	ori	r22, 0xBD	; 189
    9058:	6a 68       	ori	r22, 0x8A	; 138
    905a:	66 64       	ori	r22, 0x46	; 70
    905c:	62 60       	ori	r22, 0x02	; 2
    905e:	5e 5c       	subi	r21, 0xCE	; 206
    9060:	5a 58       	subi	r21, 0x8A	; 138
    9062:	55 53       	subi	r21, 0x35	; 53
    9064:	51 4e       	sbci	r21, 0xE1	; 225
    9066:	4c 49       	sbci	r20, 0x9C	; 156
    9068:	47 44       	sbci	r20, 0x47	; 71
    906a:	41 3f       	cpi	r20, 0xF1	; 241
    906c:	3c 39       	cpi	r19, 0x9C	; 156
    906e:	36 33       	cpi	r19, 0x36	; 54
    9070:	31 2e       	mov	r3, r17
    9072:	2b 28       	or	r2, r11
    9074:	25 22       	and	r2, r21
    9076:	1f 1c       	adc	r1, r15
    9078:	19 16       	cp	r1, r25
    907a:	13 10       	cpse	r1, r3
    907c:	0c 09       	sbc	r16, r12
    907e:	06 03       	mulsu	r16, r22
    9080:	00 fd       	sbrc	r16, 0
    9082:	fa f7       	brpl	.-2      	; 0x9082 <waves+0x82>
    9084:	f4 f0       	brlt	.+60     	; 0x90c2 <waves+0xc2>
    9086:	ed ea       	ldi	r30, 0xAD	; 173
    9088:	e7 e4       	ldi	r30, 0x47	; 71
    908a:	e1 de       	rcall	.-574    	; 0x8e4e <steptable+0x14>
    908c:	db d8       	rcall	.-3658   	; 0x8244 <no_render+0x46>
    908e:	d5 d2       	rcall	.+1450   	; 0x963a <waves+0x63a>
    9090:	cf cd       	rjmp	.-1122   	; 0x8c30 <ProcessMusic+0x210>
    9092:	ca c7       	rjmp	.+3988   	; 0xa028 <drawplayer+0xc4>
    9094:	c4 c1       	rjmp	.+904    	; 0x941e <waves+0x41e>
    9096:	bf bc       	out	0x2f, r11	; 47
    9098:	b9 b7       	in	r27, 0x39	; 57
    909a:	b4 b2       	in	r11, 0x14	; 20
    909c:	af ad       	ldd	r26, Y+63	; 0x3f
    909e:	ab a8       	ldd	r10, Y+51	; 0x33
    90a0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    90a2:	a2 a0       	ldd	r10, Z+34	; 0x22
    90a4:	9e 9c       	mul	r9, r14
    90a6:	9a 98       	cbi	0x13, 2	; 19
    90a8:	96 95       	lsr	r25
    90aa:	93 91       	.word	0x9193	; ????
    90ac:	90 8f       	std	Z+24, r25	; 0x18
    90ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    90b0:	8b 8a       	std	Y+19, r8	; 0x13
    90b2:	88 87       	std	Y+8, r24	; 0x08
    90b4:	86 86       	std	Z+14, r8	; 0x0e
    90b6:	85 84       	ldd	r8, Z+13	; 0x0d
    90b8:	83 83       	std	Z+3, r24	; 0x03
    90ba:	82 82       	std	Z+2, r8	; 0x02
    90bc:	82 81       	ldd	r24, Z+2	; 0x02
    90be:	81 81       	ldd	r24, Z+1	; 0x01
    90c0:	81 81       	ldd	r24, Z+1	; 0x01
    90c2:	81 81       	ldd	r24, Z+1	; 0x01
    90c4:	82 82       	std	Z+2, r8	; 0x02
    90c6:	82 83       	std	Z+2, r24	; 0x02
    90c8:	83 84       	ldd	r8, Z+11	; 0x0b
    90ca:	85 86       	std	Z+13, r8	; 0x0d
    90cc:	86 87       	std	Z+14, r24	; 0x0e
    90ce:	88 8a       	std	Y+16, r8	; 0x10
    90d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    90d2:	8d 8f       	std	Y+29, r24	; 0x1d
    90d4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8693>
    90d8:	96 98       	cbi	0x12, 6	; 18
    90da:	9a 9c       	mul	r9, r10
    90dc:	9e a0       	ldd	r9, Y+38	; 0x26
    90de:	a2 a4       	ldd	r10, Z+42	; 0x2a
    90e0:	a6 a8       	ldd	r10, Z+54	; 0x36
    90e2:	ab ad       	ldd	r26, Y+59	; 0x3b
    90e4:	af b2       	in	r10, 0x1f	; 31
    90e6:	b4 b7       	in	r27, 0x34	; 52
    90e8:	b9 bc       	out	0x29, r11	; 41
    90ea:	bf c1       	rjmp	.+894    	; 0x946a <waves+0x46a>
    90ec:	c4 c7       	rjmp	.+3976   	; 0xa076 <drawplayer+0x112>
    90ee:	ca cd       	rjmp	.-1132   	; 0x8c84 <ProcessMusic+0x264>
    90f0:	cf d2       	rcall	.+1438   	; 0x9690 <waves+0x690>
    90f2:	d5 d8       	rcall	.-3670   	; 0x829e <hsync_pulse+0x10>
    90f4:	db de       	rcall	.-586    	; 0x8eac <steptable+0x72>
    90f6:	e1 e4       	ldi	r30, 0x41	; 65
    90f8:	e7 ea       	ldi	r30, 0xA7	; 167
    90fa:	ed f0       	brhs	.+58     	; 0x9136 <waves+0x136>
    90fc:	f4 f7       	brge	.-4      	; 0x90fa <waves+0xfa>
    90fe:	fa fd       	.word	0xfdfa	; ????
    9100:	80 81       	ld	r24, Z
    9102:	82 83       	std	Z+2, r24	; 0x02
    9104:	84 85       	ldd	r24, Z+12	; 0x0c
    9106:	86 87       	std	Z+14, r24	; 0x0e
    9108:	88 89       	ldd	r24, Y+16	; 0x10
    910a:	8a 8b       	std	Y+18, r24	; 0x12
    910c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    910e:	8e 8f       	std	Y+30, r24	; 0x1e
    9110:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8492>
    9114:	94 95       	.word	0x9594	; ????
    9116:	96 97       	sbiw	r26, 0x26	; 38
    9118:	98 99       	sbic	0x13, 0	; 19
    911a:	9a 9b       	sbis	0x13, 2	; 19
    911c:	9c 9d       	mul	r25, r12
    911e:	9e 9f       	mul	r25, r30
    9120:	a0 a1       	ldd	r26, Z+32	; 0x20
    9122:	a2 a3       	std	Z+34, r26	; 0x22
    9124:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9126:	a6 a7       	std	Z+46, r26	; 0x2e
    9128:	a8 a9       	ldd	r26, Y+48	; 0x30
    912a:	aa ab       	std	Y+50, r26	; 0x32
    912c:	ac ad       	ldd	r26, Y+60	; 0x3c
    912e:	ae af       	std	Y+62, r26	; 0x3e
    9130:	b0 b1       	in	r27, 0x00	; 0
    9132:	b2 b3       	in	r27, 0x12	; 18
    9134:	b4 b5       	in	r27, 0x24	; 36
    9136:	b6 b7       	in	r27, 0x36	; 54
    9138:	b8 b9       	out	0x08, r27	; 8
    913a:	ba bb       	out	0x1a, r27	; 26
    913c:	bc bd       	out	0x2c, r27	; 44
    913e:	be bf       	out	0x3e, r27	; 62
    9140:	c0 c1       	rjmp	.+896    	; 0x94c2 <waves+0x4c2>
    9142:	c2 c3       	rjmp	.+1924   	; 0x98c8 <waves+0x8c8>
    9144:	c4 c5       	rjmp	.+2952   	; 0x9cce <MapSprite2+0x3e>
    9146:	c6 c7       	rjmp	.+3980   	; 0xa0d4 <drawplayer2+0x44>
    9148:	c8 c9       	rjmp	.-3184   	; 0x84da <ReadButtons+0x10>
    914a:	ca cb       	rjmp	.-2156   	; 0x88e0 <TriggerCommon+0xd2>
    914c:	cc cd       	rjmp	.-1128   	; 0x8ce6 <ProcessMusic+0x2c6>
    914e:	ce cf       	rjmp	.-100    	; 0x90ec <waves+0xec>
    9150:	d0 d1       	rcall	.+928    	; 0x94f2 <waves+0x4f2>
    9152:	d2 d3       	rcall	.+1956   	; 0x98f8 <waves+0x8f8>
    9154:	d4 d5       	rcall	.+2984   	; 0x9cfe <MapSprite2+0x6e>
    9156:	d6 d7       	rcall	.+4012   	; 0xa104 <drawplayer2+0x74>
    9158:	d8 d9       	rcall	.-3152   	; 0x850a <ReadButtons+0x40>
    915a:	da db       	rcall	.-2124   	; 0x8910 <TriggerFx>
    915c:	dc dd       	rcall	.-1096   	; 0x8d16 <ProcessMusic+0x2f6>
    915e:	de df       	rcall	.-68     	; 0x911c <waves+0x11c>
    9160:	e0 e1       	ldi	r30, 0x10	; 16
    9162:	e2 e3       	ldi	r30, 0x32	; 50
    9164:	e4 e5       	ldi	r30, 0x54	; 84
    9166:	e6 e7       	ldi	r30, 0x76	; 118
    9168:	e8 e9       	ldi	r30, 0x98	; 152
    916a:	ea eb       	ldi	r30, 0xBA	; 186
    916c:	ec ed       	ldi	r30, 0xDC	; 220
    916e:	ee ef       	ldi	r30, 0xFE	; 254
    9170:	f0 f1       	brcs	.+124    	; 0x91ee <waves+0x1ee>
    9172:	f2 f3       	brmi	.-4      	; 0x9170 <waves+0x170>
    9174:	f4 f5       	brge	.+124    	; 0x91f2 <waves+0x1f2>
    9176:	f6 f7       	brtc	.-4      	; 0x9174 <waves+0x174>
    9178:	f8 f9       	.word	0xf9f8	; ????
    917a:	fa fb       	.word	0xfbfa	; ????
    917c:	fc fd       	.word	0xfdfc	; ????
    917e:	fe ff       	.word	0xfffe	; ????
    9180:	00 01       	movw	r0, r0
    9182:	02 03       	mulsu	r16, r18
    9184:	04 05       	cpc	r16, r4
    9186:	06 07       	cpc	r16, r22
    9188:	08 09       	sbc	r16, r8
    918a:	0a 0b       	sbc	r16, r26
    918c:	0c 0d       	add	r16, r12
    918e:	0e 0f       	add	r16, r30
    9190:	10 11       	cpse	r17, r0
    9192:	12 13       	cpse	r17, r18
    9194:	14 15       	cp	r17, r4
    9196:	16 17       	cp	r17, r22
    9198:	18 19       	sub	r17, r8
    919a:	1a 1b       	sub	r17, r26
    919c:	1c 1d       	adc	r17, r12
    919e:	1e 1f       	adc	r17, r30
    91a0:	20 21       	and	r18, r0
    91a2:	22 23       	and	r18, r18
    91a4:	24 25       	eor	r18, r4
    91a6:	26 27       	eor	r18, r22
    91a8:	28 29       	or	r18, r8
    91aa:	2a 2b       	or	r18, r26
    91ac:	2c 2d       	mov	r18, r12
    91ae:	2e 2f       	mov	r18, r30
    91b0:	30 31       	cpi	r19, 0x10	; 16
    91b2:	32 33       	cpi	r19, 0x32	; 50
    91b4:	34 35       	cpi	r19, 0x54	; 84
    91b6:	36 37       	cpi	r19, 0x76	; 118
    91b8:	38 39       	cpi	r19, 0x98	; 152
    91ba:	3a 3b       	cpi	r19, 0xBA	; 186
    91bc:	3c 3d       	cpi	r19, 0xDC	; 220
    91be:	3e 3f       	cpi	r19, 0xFE	; 254
    91c0:	40 41       	sbci	r20, 0x10	; 16
    91c2:	42 43       	sbci	r20, 0x32	; 50
    91c4:	44 45       	sbci	r20, 0x54	; 84
    91c6:	46 47       	sbci	r20, 0x76	; 118
    91c8:	48 49       	sbci	r20, 0x98	; 152
    91ca:	4a 4b       	sbci	r20, 0xBA	; 186
    91cc:	4c 4d       	sbci	r20, 0xDC	; 220
    91ce:	4e 4f       	sbci	r20, 0xFE	; 254
    91d0:	50 51       	subi	r21, 0x10	; 16
    91d2:	52 53       	subi	r21, 0x32	; 50
    91d4:	54 55       	subi	r21, 0x54	; 84
    91d6:	56 57       	subi	r21, 0x76	; 118
    91d8:	58 59       	subi	r21, 0x98	; 152
    91da:	5a 5b       	subi	r21, 0xBA	; 186
    91dc:	5c 5d       	subi	r21, 0xDC	; 220
    91de:	5e 5f       	subi	r21, 0xFE	; 254
    91e0:	60 61       	ori	r22, 0x10	; 16
    91e2:	62 63       	ori	r22, 0x32	; 50
    91e4:	64 65       	ori	r22, 0x54	; 84
    91e6:	66 67       	ori	r22, 0x76	; 118
    91e8:	68 69       	ori	r22, 0x98	; 152
    91ea:	6a 6b       	ori	r22, 0xBA	; 186
    91ec:	6c 6d       	ori	r22, 0xDC	; 220
    91ee:	6e 6f       	ori	r22, 0xFE	; 254
    91f0:	70 71       	andi	r23, 0x10	; 16
    91f2:	72 73       	andi	r23, 0x32	; 50
    91f4:	74 75       	andi	r23, 0x54	; 84
    91f6:	76 77       	andi	r23, 0x76	; 118
    91f8:	78 79       	andi	r23, 0x98	; 152
    91fa:	7a 7b       	andi	r23, 0xBA	; 186
    91fc:	7c 7d       	andi	r23, 0xDC	; 220
    91fe:	7e 7f       	andi	r23, 0xFE	; 254
    9200:	00 02       	muls	r16, r16
    9202:	04 06       	cpc	r0, r20
    9204:	08 0a       	sbc	r0, r24
    9206:	0c 0e       	add	r0, r28
    9208:	10 12       	cpse	r1, r16
    920a:	14 16       	cp	r1, r20
    920c:	18 1a       	sub	r1, r24
    920e:	1c 1e       	adc	r1, r28
    9210:	20 22       	and	r2, r16
    9212:	24 26       	eor	r2, r20
    9214:	28 2a       	or	r2, r24
    9216:	2c 2e       	mov	r2, r28
    9218:	30 32       	cpi	r19, 0x20	; 32
    921a:	34 36       	cpi	r19, 0x64	; 100
    921c:	38 3a       	cpi	r19, 0xA8	; 168
    921e:	3c 3e       	cpi	r19, 0xEC	; 236
    9220:	40 42       	sbci	r20, 0x20	; 32
    9222:	44 46       	sbci	r20, 0x64	; 100
    9224:	48 4a       	sbci	r20, 0xA8	; 168
    9226:	4c 4e       	sbci	r20, 0xEC	; 236
    9228:	50 52       	subi	r21, 0x20	; 32
    922a:	54 56       	subi	r21, 0x64	; 100
    922c:	58 5a       	subi	r21, 0xA8	; 168
    922e:	5c 5e       	subi	r21, 0xEC	; 236
    9230:	60 62       	ori	r22, 0x20	; 32
    9232:	64 66       	ori	r22, 0x64	; 100
    9234:	68 6a       	ori	r22, 0xA8	; 168
    9236:	6c 6e       	ori	r22, 0xEC	; 236
    9238:	70 72       	andi	r23, 0x20	; 32
    923a:	74 76       	andi	r23, 0x64	; 100
    923c:	78 7a       	andi	r23, 0xA8	; 168
    923e:	7c 7e       	andi	r23, 0xEC	; 236
    9240:	7f 7d       	andi	r23, 0xDF	; 223
    9242:	7b 79       	andi	r23, 0x9B	; 155
    9244:	77 75       	andi	r23, 0x57	; 87
    9246:	73 71       	andi	r23, 0x13	; 19
    9248:	6f 6d       	ori	r22, 0xDF	; 223
    924a:	6b 69       	ori	r22, 0x9B	; 155
    924c:	67 65       	ori	r22, 0x57	; 87
    924e:	63 61       	ori	r22, 0x13	; 19
    9250:	5f 5d       	subi	r21, 0xDF	; 223
    9252:	5b 59       	subi	r21, 0x9B	; 155
    9254:	57 55       	subi	r21, 0x57	; 87
    9256:	53 51       	subi	r21, 0x13	; 19
    9258:	4f 4d       	sbci	r20, 0xDF	; 223
    925a:	4b 49       	sbci	r20, 0x9B	; 155
    925c:	47 45       	sbci	r20, 0x57	; 87
    925e:	43 41       	sbci	r20, 0x13	; 19
    9260:	3f 3d       	cpi	r19, 0xDF	; 223
    9262:	3b 39       	cpi	r19, 0x9B	; 155
    9264:	37 35       	cpi	r19, 0x57	; 87
    9266:	33 31       	cpi	r19, 0x13	; 19
    9268:	2f 2d       	mov	r18, r15
    926a:	2b 29       	or	r18, r11
    926c:	27 25       	eor	r18, r7
    926e:	23 21       	and	r18, r3
    9270:	1f 1d       	adc	r17, r15
    9272:	1b 19       	sub	r17, r11
    9274:	17 15       	cp	r17, r7
    9276:	13 11       	cpse	r17, r3
    9278:	0f 0d       	add	r16, r15
    927a:	0b 09       	sbc	r16, r11
    927c:	07 05       	cpc	r16, r7
    927e:	03 01       	movw	r0, r6
    9280:	ff fd       	.word	0xfdff	; ????
    9282:	fb f9       	.word	0xf9fb	; ????
    9284:	f7 f5       	brid	.+124    	; 0x9302 <waves+0x302>
    9286:	f3 f1       	brvs	.+124    	; 0x9304 <waves+0x304>
    9288:	ef ed       	ldi	r30, 0xDF	; 223
    928a:	eb e9       	ldi	r30, 0x9B	; 155
    928c:	e7 e5       	ldi	r30, 0x57	; 87
    928e:	e3 e1       	ldi	r30, 0x13	; 19
    9290:	df dd       	rcall	.-1090   	; 0x8e50 <steptable+0x16>
    9292:	db d9       	rcall	.-3146   	; 0x864a <PatchCommand11+0x46>
    9294:	d7 d5       	rcall	.+2990   	; 0x9e44 <DisplayLogo+0x14>
    9296:	d3 d1       	rcall	.+934    	; 0x963e <waves+0x63e>
    9298:	cf cd       	rjmp	.-1122   	; 0x8e38 <esmw+0x2>
    929a:	cb c9       	rjmp	.-3178   	; 0x8632 <PatchCommand11+0x2e>
    929c:	c7 c5       	rjmp	.+2958   	; 0x9e2c <WaitVsync+0x2a>
    929e:	c3 c1       	rjmp	.+902    	; 0x9626 <waves+0x626>
    92a0:	bf bd       	out	0x2f, r27	; 47
    92a2:	bb b9       	out	0x0b, r27	; 11
    92a4:	b7 b5       	in	r27, 0x27	; 39
    92a6:	b3 b1       	in	r27, 0x03	; 3
    92a8:	af ad       	ldd	r26, Y+63	; 0x3f
    92aa:	ab a9       	ldd	r26, Y+51	; 0x33
    92ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    92ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    92b0:	9f 9d       	mul	r25, r15
    92b2:	9b 99       	sbic	0x13, 3	; 19
    92b4:	97 95       	ror	r25
    92b6:	93 91       	.word	0x9193	; ????
    92b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    92ba:	8b 89       	ldd	r24, Y+19	; 0x13
    92bc:	87 85       	ldd	r24, Z+15	; 0x0f
    92be:	83 81       	ldd	r24, Z+3	; 0x03
    92c0:	80 82       	st	Z, r8
    92c2:	84 86       	std	Z+12, r8	; 0x0c
    92c4:	88 8a       	std	Y+16, r8	; 0x10
    92c6:	8c 8e       	std	Y+28, r8	; 0x1c
    92c8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8794>
    92cc:	98 9a       	sbi	0x13, 0	; 19
    92ce:	9c 9e       	mul	r9, r28
    92d0:	a0 a2       	std	Z+32, r10	; 0x20
    92d2:	a4 a6       	std	Z+44, r10	; 0x2c
    92d4:	a8 aa       	std	Y+48, r10	; 0x30
    92d6:	ac ae       	std	Y+60, r10	; 0x3c
    92d8:	b0 b2       	in	r11, 0x10	; 16
    92da:	b4 b6       	in	r11, 0x34	; 52
    92dc:	b8 ba       	out	0x18, r11	; 24
    92de:	bc be       	out	0x3c, r11	; 60
    92e0:	c0 c2       	rjmp	.+1408   	; 0x9862 <waves+0x862>
    92e2:	c4 c6       	rjmp	.+3464   	; 0xa06c <drawplayer+0x108>
    92e4:	c8 ca       	rjmp	.-2672   	; 0x8876 <TriggerCommon+0x68>
    92e6:	cc ce       	rjmp	.-616    	; 0x9080 <waves+0x80>
    92e8:	d0 d2       	rcall	.+1440   	; 0x988a <waves+0x88a>
    92ea:	d4 d6       	rcall	.+3496   	; 0xa094 <drawplayer2+0x4>
    92ec:	d8 da       	rcall	.-2640   	; 0x889e <TriggerCommon+0x90>
    92ee:	dc de       	rcall	.-584    	; 0x90a8 <waves+0xa8>
    92f0:	e0 e2       	ldi	r30, 0x20	; 32
    92f2:	e4 e6       	ldi	r30, 0x64	; 100
    92f4:	e8 ea       	ldi	r30, 0xA8	; 168
    92f6:	ec ee       	ldi	r30, 0xEC	; 236
    92f8:	f0 f2       	brcs	.-68     	; 0x92b6 <waves+0x2b6>
    92fa:	f4 f6       	brge	.-68     	; 0x92b8 <waves+0x2b8>
    92fc:	f8 fa       	.word	0xfaf8	; ????
    92fe:	fc fe       	.word	0xfefc	; ????
    9300:	7f 7f       	andi	r23, 0xFF	; 255
    9302:	7f 7f       	andi	r23, 0xFF	; 255
    9304:	7f 7f       	andi	r23, 0xFF	; 255
    9306:	7f 7f       	andi	r23, 0xFF	; 255
    9308:	7f 7f       	andi	r23, 0xFF	; 255
    930a:	7f 7f       	andi	r23, 0xFF	; 255
    930c:	7f 7f       	andi	r23, 0xFF	; 255
    930e:	7f 7f       	andi	r23, 0xFF	; 255
    9310:	7f 7f       	andi	r23, 0xFF	; 255
    9312:	7f 7f       	andi	r23, 0xFF	; 255
    9314:	7f 7f       	andi	r23, 0xFF	; 255
    9316:	7f 7f       	andi	r23, 0xFF	; 255
    9318:	7f 7f       	andi	r23, 0xFF	; 255
    931a:	7f 7f       	andi	r23, 0xFF	; 255
    931c:	7f 7f       	andi	r23, 0xFF	; 255
    931e:	7f 7f       	andi	r23, 0xFF	; 255
    9320:	7f 7f       	andi	r23, 0xFF	; 255
    9322:	7f 7f       	andi	r23, 0xFF	; 255
    9324:	7f 7f       	andi	r23, 0xFF	; 255
    9326:	7f 7f       	andi	r23, 0xFF	; 255
    9328:	7f 7f       	andi	r23, 0xFF	; 255
    932a:	7f 7f       	andi	r23, 0xFF	; 255
    932c:	7f 7f       	andi	r23, 0xFF	; 255
    932e:	7f 7f       	andi	r23, 0xFF	; 255
    9330:	7f 7f       	andi	r23, 0xFF	; 255
    9332:	7f 7f       	andi	r23, 0xFF	; 255
    9334:	7f 7f       	andi	r23, 0xFF	; 255
    9336:	7f 7f       	andi	r23, 0xFF	; 255
    9338:	7f 7f       	andi	r23, 0xFF	; 255
    933a:	7f 7f       	andi	r23, 0xFF	; 255
    933c:	7f 7f       	andi	r23, 0xFF	; 255
    933e:	7f 7f       	andi	r23, 0xFF	; 255
    9340:	80 80       	ld	r8, Z
    9342:	80 80       	ld	r8, Z
    9344:	80 80       	ld	r8, Z
    9346:	80 80       	ld	r8, Z
    9348:	80 80       	ld	r8, Z
    934a:	80 80       	ld	r8, Z
    934c:	80 80       	ld	r8, Z
    934e:	80 80       	ld	r8, Z
    9350:	80 80       	ld	r8, Z
    9352:	80 80       	ld	r8, Z
    9354:	80 80       	ld	r8, Z
    9356:	80 80       	ld	r8, Z
    9358:	80 80       	ld	r8, Z
    935a:	80 80       	ld	r8, Z
    935c:	80 80       	ld	r8, Z
    935e:	80 80       	ld	r8, Z
    9360:	80 80       	ld	r8, Z
    9362:	80 80       	ld	r8, Z
    9364:	80 80       	ld	r8, Z
    9366:	80 80       	ld	r8, Z
    9368:	80 80       	ld	r8, Z
    936a:	80 80       	ld	r8, Z
    936c:	80 80       	ld	r8, Z
    936e:	80 80       	ld	r8, Z
    9370:	80 80       	ld	r8, Z
    9372:	80 80       	ld	r8, Z
    9374:	80 80       	ld	r8, Z
    9376:	80 80       	ld	r8, Z
    9378:	80 80       	ld	r8, Z
    937a:	80 80       	ld	r8, Z
    937c:	80 80       	ld	r8, Z
    937e:	80 80       	ld	r8, Z
    9380:	80 80       	ld	r8, Z
    9382:	80 80       	ld	r8, Z
    9384:	80 80       	ld	r8, Z
    9386:	80 80       	ld	r8, Z
    9388:	80 80       	ld	r8, Z
    938a:	80 80       	ld	r8, Z
    938c:	80 80       	ld	r8, Z
    938e:	80 80       	ld	r8, Z
    9390:	80 80       	ld	r8, Z
    9392:	80 80       	ld	r8, Z
    9394:	80 80       	ld	r8, Z
    9396:	80 80       	ld	r8, Z
    9398:	80 80       	ld	r8, Z
    939a:	80 80       	ld	r8, Z
    939c:	80 80       	ld	r8, Z
    939e:	80 80       	ld	r8, Z
    93a0:	80 80       	ld	r8, Z
    93a2:	80 80       	ld	r8, Z
    93a4:	80 80       	ld	r8, Z
    93a6:	80 80       	ld	r8, Z
    93a8:	80 80       	ld	r8, Z
    93aa:	80 80       	ld	r8, Z
    93ac:	80 80       	ld	r8, Z
    93ae:	80 80       	ld	r8, Z
    93b0:	80 80       	ld	r8, Z
    93b2:	80 80       	ld	r8, Z
    93b4:	80 80       	ld	r8, Z
    93b6:	80 80       	ld	r8, Z
    93b8:	80 80       	ld	r8, Z
    93ba:	80 80       	ld	r8, Z
    93bc:	80 80       	ld	r8, Z
    93be:	80 80       	ld	r8, Z
    93c0:	80 80       	ld	r8, Z
    93c2:	80 80       	ld	r8, Z
    93c4:	80 80       	ld	r8, Z
    93c6:	80 80       	ld	r8, Z
    93c8:	80 80       	ld	r8, Z
    93ca:	80 80       	ld	r8, Z
    93cc:	80 80       	ld	r8, Z
    93ce:	80 80       	ld	r8, Z
    93d0:	80 80       	ld	r8, Z
    93d2:	80 80       	ld	r8, Z
    93d4:	80 80       	ld	r8, Z
    93d6:	80 80       	ld	r8, Z
    93d8:	80 80       	ld	r8, Z
    93da:	80 80       	ld	r8, Z
    93dc:	80 80       	ld	r8, Z
    93de:	80 80       	ld	r8, Z
    93e0:	80 80       	ld	r8, Z
    93e2:	80 80       	ld	r8, Z
    93e4:	80 80       	ld	r8, Z
    93e6:	80 80       	ld	r8, Z
    93e8:	80 80       	ld	r8, Z
    93ea:	80 80       	ld	r8, Z
    93ec:	80 80       	ld	r8, Z
    93ee:	80 80       	ld	r8, Z
    93f0:	80 80       	ld	r8, Z
    93f2:	80 80       	ld	r8, Z
    93f4:	80 80       	ld	r8, Z
    93f6:	80 80       	ld	r8, Z
    93f8:	80 80       	ld	r8, Z
    93fa:	80 80       	ld	r8, Z
    93fc:	80 80       	ld	r8, Z
    93fe:	80 80       	ld	r8, Z
    9400:	7f 7f       	andi	r23, 0xFF	; 255
    9402:	7f 7f       	andi	r23, 0xFF	; 255
    9404:	7f 7f       	andi	r23, 0xFF	; 255
    9406:	7f 7f       	andi	r23, 0xFF	; 255
    9408:	7f 7f       	andi	r23, 0xFF	; 255
    940a:	7f 7f       	andi	r23, 0xFF	; 255
    940c:	7f 7f       	andi	r23, 0xFF	; 255
    940e:	7f 7f       	andi	r23, 0xFF	; 255
    9410:	7f 7f       	andi	r23, 0xFF	; 255
    9412:	7f 7f       	andi	r23, 0xFF	; 255
    9414:	7f 7f       	andi	r23, 0xFF	; 255
    9416:	7f 7f       	andi	r23, 0xFF	; 255
    9418:	7f 7f       	andi	r23, 0xFF	; 255
    941a:	7f 7f       	andi	r23, 0xFF	; 255
    941c:	7f 7f       	andi	r23, 0xFF	; 255
    941e:	7f 7f       	andi	r23, 0xFF	; 255
    9420:	7f 7f       	andi	r23, 0xFF	; 255
    9422:	7f 7f       	andi	r23, 0xFF	; 255
    9424:	7f 7f       	andi	r23, 0xFF	; 255
    9426:	7f 7f       	andi	r23, 0xFF	; 255
    9428:	7f 7f       	andi	r23, 0xFF	; 255
    942a:	7f 7f       	andi	r23, 0xFF	; 255
    942c:	7f 7f       	andi	r23, 0xFF	; 255
    942e:	7f 7f       	andi	r23, 0xFF	; 255
    9430:	7f 7f       	andi	r23, 0xFF	; 255
    9432:	7f 7f       	andi	r23, 0xFF	; 255
    9434:	7f 7f       	andi	r23, 0xFF	; 255
    9436:	7f 7f       	andi	r23, 0xFF	; 255
    9438:	7f 7f       	andi	r23, 0xFF	; 255
    943a:	7f 7f       	andi	r23, 0xFF	; 255
    943c:	7f 7f       	andi	r23, 0xFF	; 255
    943e:	7f 7f       	andi	r23, 0xFF	; 255
    9440:	7f 7f       	andi	r23, 0xFF	; 255
    9442:	7f 7f       	andi	r23, 0xFF	; 255
    9444:	7f 7f       	andi	r23, 0xFF	; 255
    9446:	7f 7f       	andi	r23, 0xFF	; 255
    9448:	7f 7f       	andi	r23, 0xFF	; 255
    944a:	7f 7f       	andi	r23, 0xFF	; 255
    944c:	7f 7f       	andi	r23, 0xFF	; 255
    944e:	7f 7f       	andi	r23, 0xFF	; 255
    9450:	7f 7f       	andi	r23, 0xFF	; 255
    9452:	7f 7f       	andi	r23, 0xFF	; 255
    9454:	7f 7f       	andi	r23, 0xFF	; 255
    9456:	7f 7f       	andi	r23, 0xFF	; 255
    9458:	7f 7f       	andi	r23, 0xFF	; 255
    945a:	7f 7f       	andi	r23, 0xFF	; 255
    945c:	7f 7f       	andi	r23, 0xFF	; 255
    945e:	7f 7f       	andi	r23, 0xFF	; 255
    9460:	7f 7f       	andi	r23, 0xFF	; 255
    9462:	7f 7f       	andi	r23, 0xFF	; 255
    9464:	7f 7f       	andi	r23, 0xFF	; 255
    9466:	7f 7f       	andi	r23, 0xFF	; 255
    9468:	7f 7f       	andi	r23, 0xFF	; 255
    946a:	7f 7f       	andi	r23, 0xFF	; 255
    946c:	7f 7f       	andi	r23, 0xFF	; 255
    946e:	7f 7f       	andi	r23, 0xFF	; 255
    9470:	7f 7f       	andi	r23, 0xFF	; 255
    9472:	7f 7f       	andi	r23, 0xFF	; 255
    9474:	7f 7f       	andi	r23, 0xFF	; 255
    9476:	7f 7f       	andi	r23, 0xFF	; 255
    9478:	7f 7f       	andi	r23, 0xFF	; 255
    947a:	7f 7f       	andi	r23, 0xFF	; 255
    947c:	7f 7f       	andi	r23, 0xFF	; 255
    947e:	7f 7f       	andi	r23, 0xFF	; 255
    9480:	80 80       	ld	r8, Z
    9482:	80 80       	ld	r8, Z
    9484:	80 80       	ld	r8, Z
    9486:	80 80       	ld	r8, Z
    9488:	80 80       	ld	r8, Z
    948a:	80 80       	ld	r8, Z
    948c:	80 80       	ld	r8, Z
    948e:	80 80       	ld	r8, Z
    9490:	80 80       	ld	r8, Z
    9492:	80 80       	ld	r8, Z
    9494:	80 80       	ld	r8, Z
    9496:	80 80       	ld	r8, Z
    9498:	80 80       	ld	r8, Z
    949a:	80 80       	ld	r8, Z
    949c:	80 80       	ld	r8, Z
    949e:	80 80       	ld	r8, Z
    94a0:	80 80       	ld	r8, Z
    94a2:	80 80       	ld	r8, Z
    94a4:	80 80       	ld	r8, Z
    94a6:	80 80       	ld	r8, Z
    94a8:	80 80       	ld	r8, Z
    94aa:	80 80       	ld	r8, Z
    94ac:	80 80       	ld	r8, Z
    94ae:	80 80       	ld	r8, Z
    94b0:	80 80       	ld	r8, Z
    94b2:	80 80       	ld	r8, Z
    94b4:	80 80       	ld	r8, Z
    94b6:	80 80       	ld	r8, Z
    94b8:	80 80       	ld	r8, Z
    94ba:	80 80       	ld	r8, Z
    94bc:	80 80       	ld	r8, Z
    94be:	80 80       	ld	r8, Z
    94c0:	80 80       	ld	r8, Z
    94c2:	80 80       	ld	r8, Z
    94c4:	80 80       	ld	r8, Z
    94c6:	80 80       	ld	r8, Z
    94c8:	80 80       	ld	r8, Z
    94ca:	80 80       	ld	r8, Z
    94cc:	80 80       	ld	r8, Z
    94ce:	80 80       	ld	r8, Z
    94d0:	80 80       	ld	r8, Z
    94d2:	80 80       	ld	r8, Z
    94d4:	80 80       	ld	r8, Z
    94d6:	80 80       	ld	r8, Z
    94d8:	80 80       	ld	r8, Z
    94da:	80 80       	ld	r8, Z
    94dc:	80 80       	ld	r8, Z
    94de:	80 80       	ld	r8, Z
    94e0:	80 80       	ld	r8, Z
    94e2:	80 80       	ld	r8, Z
    94e4:	80 80       	ld	r8, Z
    94e6:	80 80       	ld	r8, Z
    94e8:	80 80       	ld	r8, Z
    94ea:	80 80       	ld	r8, Z
    94ec:	80 80       	ld	r8, Z
    94ee:	80 80       	ld	r8, Z
    94f0:	80 80       	ld	r8, Z
    94f2:	80 80       	ld	r8, Z
    94f4:	80 80       	ld	r8, Z
    94f6:	80 80       	ld	r8, Z
    94f8:	80 80       	ld	r8, Z
    94fa:	80 80       	ld	r8, Z
    94fc:	80 80       	ld	r8, Z
    94fe:	80 80       	ld	r8, Z
    9500:	7f 7f       	andi	r23, 0xFF	; 255
    9502:	7f 7f       	andi	r23, 0xFF	; 255
    9504:	7f 7f       	andi	r23, 0xFF	; 255
    9506:	7f 7f       	andi	r23, 0xFF	; 255
    9508:	7f 7f       	andi	r23, 0xFF	; 255
    950a:	7f 7f       	andi	r23, 0xFF	; 255
    950c:	7f 7f       	andi	r23, 0xFF	; 255
    950e:	7f 7f       	andi	r23, 0xFF	; 255
    9510:	7f 7f       	andi	r23, 0xFF	; 255
    9512:	7f 7f       	andi	r23, 0xFF	; 255
    9514:	7f 7f       	andi	r23, 0xFF	; 255
    9516:	7f 7f       	andi	r23, 0xFF	; 255
    9518:	7f 7f       	andi	r23, 0xFF	; 255
    951a:	7f 7f       	andi	r23, 0xFF	; 255
    951c:	7f 7f       	andi	r23, 0xFF	; 255
    951e:	7f 7f       	andi	r23, 0xFF	; 255
    9520:	7f 7f       	andi	r23, 0xFF	; 255
    9522:	7f 7f       	andi	r23, 0xFF	; 255
    9524:	7f 7f       	andi	r23, 0xFF	; 255
    9526:	7f 7f       	andi	r23, 0xFF	; 255
    9528:	7f 7f       	andi	r23, 0xFF	; 255
    952a:	7f 7f       	andi	r23, 0xFF	; 255
    952c:	7f 7f       	andi	r23, 0xFF	; 255
    952e:	7f 7f       	andi	r23, 0xFF	; 255
    9530:	7f 7f       	andi	r23, 0xFF	; 255
    9532:	7f 7f       	andi	r23, 0xFF	; 255
    9534:	7f 7f       	andi	r23, 0xFF	; 255
    9536:	7f 7f       	andi	r23, 0xFF	; 255
    9538:	7f 7f       	andi	r23, 0xFF	; 255
    953a:	7f 7f       	andi	r23, 0xFF	; 255
    953c:	7f 7f       	andi	r23, 0xFF	; 255
    953e:	7f 7f       	andi	r23, 0xFF	; 255
    9540:	7f 7f       	andi	r23, 0xFF	; 255
    9542:	7f 7f       	andi	r23, 0xFF	; 255
    9544:	7f 7f       	andi	r23, 0xFF	; 255
    9546:	7f 7f       	andi	r23, 0xFF	; 255
    9548:	7f 7f       	andi	r23, 0xFF	; 255
    954a:	7f 7f       	andi	r23, 0xFF	; 255
    954c:	7f 7f       	andi	r23, 0xFF	; 255
    954e:	7f 7f       	andi	r23, 0xFF	; 255
    9550:	7f 7f       	andi	r23, 0xFF	; 255
    9552:	7f 7f       	andi	r23, 0xFF	; 255
    9554:	7f 7f       	andi	r23, 0xFF	; 255
    9556:	7f 7f       	andi	r23, 0xFF	; 255
    9558:	7f 7f       	andi	r23, 0xFF	; 255
    955a:	7f 7f       	andi	r23, 0xFF	; 255
    955c:	7f 7f       	andi	r23, 0xFF	; 255
    955e:	7f 7f       	andi	r23, 0xFF	; 255
    9560:	7f 7f       	andi	r23, 0xFF	; 255
    9562:	7f 7f       	andi	r23, 0xFF	; 255
    9564:	7f 7f       	andi	r23, 0xFF	; 255
    9566:	7f 7f       	andi	r23, 0xFF	; 255
    9568:	7f 7f       	andi	r23, 0xFF	; 255
    956a:	7f 7f       	andi	r23, 0xFF	; 255
    956c:	7f 7f       	andi	r23, 0xFF	; 255
    956e:	7f 7f       	andi	r23, 0xFF	; 255
    9570:	7f 7f       	andi	r23, 0xFF	; 255
    9572:	7f 7f       	andi	r23, 0xFF	; 255
    9574:	7f 7f       	andi	r23, 0xFF	; 255
    9576:	7f 7f       	andi	r23, 0xFF	; 255
    9578:	7f 7f       	andi	r23, 0xFF	; 255
    957a:	7f 7f       	andi	r23, 0xFF	; 255
    957c:	7f 7f       	andi	r23, 0xFF	; 255
    957e:	7f 7f       	andi	r23, 0xFF	; 255
    9580:	7f 7f       	andi	r23, 0xFF	; 255
    9582:	7f 7f       	andi	r23, 0xFF	; 255
    9584:	7f 7f       	andi	r23, 0xFF	; 255
    9586:	7f 7f       	andi	r23, 0xFF	; 255
    9588:	7f 7f       	andi	r23, 0xFF	; 255
    958a:	7f 7f       	andi	r23, 0xFF	; 255
    958c:	7f 7f       	andi	r23, 0xFF	; 255
    958e:	7f 7f       	andi	r23, 0xFF	; 255
    9590:	7f 7f       	andi	r23, 0xFF	; 255
    9592:	7f 7f       	andi	r23, 0xFF	; 255
    9594:	7f 7f       	andi	r23, 0xFF	; 255
    9596:	7f 7f       	andi	r23, 0xFF	; 255
    9598:	7f 7f       	andi	r23, 0xFF	; 255
    959a:	7f 7f       	andi	r23, 0xFF	; 255
    959c:	7f 7f       	andi	r23, 0xFF	; 255
    959e:	7f 7f       	andi	r23, 0xFF	; 255
    95a0:	7f 7f       	andi	r23, 0xFF	; 255
    95a2:	7f 7f       	andi	r23, 0xFF	; 255
    95a4:	7f 7f       	andi	r23, 0xFF	; 255
    95a6:	7f 7f       	andi	r23, 0xFF	; 255
    95a8:	7f 7f       	andi	r23, 0xFF	; 255
    95aa:	7f 7f       	andi	r23, 0xFF	; 255
    95ac:	7f 7f       	andi	r23, 0xFF	; 255
    95ae:	7f 7f       	andi	r23, 0xFF	; 255
    95b0:	7f 7f       	andi	r23, 0xFF	; 255
    95b2:	7f 7f       	andi	r23, 0xFF	; 255
    95b4:	7f 7f       	andi	r23, 0xFF	; 255
    95b6:	7f 7f       	andi	r23, 0xFF	; 255
    95b8:	7f 7f       	andi	r23, 0xFF	; 255
    95ba:	7f 7f       	andi	r23, 0xFF	; 255
    95bc:	7f 7f       	andi	r23, 0xFF	; 255
    95be:	7f 7f       	andi	r23, 0xFF	; 255
    95c0:	80 80       	ld	r8, Z
    95c2:	80 80       	ld	r8, Z
    95c4:	80 80       	ld	r8, Z
    95c6:	80 80       	ld	r8, Z
    95c8:	80 80       	ld	r8, Z
    95ca:	80 80       	ld	r8, Z
    95cc:	80 80       	ld	r8, Z
    95ce:	80 80       	ld	r8, Z
    95d0:	80 80       	ld	r8, Z
    95d2:	80 80       	ld	r8, Z
    95d4:	80 80       	ld	r8, Z
    95d6:	80 80       	ld	r8, Z
    95d8:	80 80       	ld	r8, Z
    95da:	80 80       	ld	r8, Z
    95dc:	80 80       	ld	r8, Z
    95de:	80 80       	ld	r8, Z
    95e0:	80 80       	ld	r8, Z
    95e2:	80 80       	ld	r8, Z
    95e4:	80 80       	ld	r8, Z
    95e6:	80 80       	ld	r8, Z
    95e8:	80 80       	ld	r8, Z
    95ea:	80 80       	ld	r8, Z
    95ec:	80 80       	ld	r8, Z
    95ee:	80 80       	ld	r8, Z
    95f0:	80 80       	ld	r8, Z
    95f2:	80 80       	ld	r8, Z
    95f4:	80 80       	ld	r8, Z
    95f6:	80 80       	ld	r8, Z
    95f8:	80 80       	ld	r8, Z
    95fa:	80 80       	ld	r8, Z
    95fc:	80 80       	ld	r8, Z
    95fe:	80 80       	ld	r8, Z
    9600:	03 09       	sbc	r16, r3
    9602:	13 1e       	adc	r1, r19
    9604:	28 31       	cpi	r18, 0x18	; 24
    9606:	3a 40       	sbci	r19, 0x0A	; 10
    9608:	46 4c       	sbci	r20, 0xC6	; 198
    960a:	50 54       	subi	r21, 0x40	; 64
    960c:	58 5b       	subi	r21, 0xB8	; 184
    960e:	5e 61       	ori	r21, 0x1E	; 30
    9610:	63 65       	ori	r22, 0x53	; 83
    9612:	67 69       	ori	r22, 0x97	; 151
    9614:	6b 6c       	ori	r22, 0xCB	; 203
    9616:	6e 6f       	ori	r22, 0xFE	; 254
    9618:	70 71       	andi	r23, 0x10	; 16
    961a:	72 73       	andi	r23, 0x32	; 50
    961c:	74 75       	andi	r23, 0x54	; 84
    961e:	76 77       	andi	r23, 0x76	; 118
    9620:	77 78       	andi	r23, 0x87	; 135
    9622:	79 79       	andi	r23, 0x99	; 153
    9624:	7a 7a       	andi	r23, 0xAA	; 170
    9626:	7b 7b       	andi	r23, 0xBB	; 187
    9628:	7c 7c       	andi	r23, 0xCC	; 204
    962a:	7c 7d       	andi	r23, 0xDC	; 220
    962c:	7d 7d       	andi	r23, 0xDD	; 221
    962e:	7e 7e       	andi	r23, 0xEE	; 238
    9630:	7e 7e       	andi	r23, 0xEE	; 238
    9632:	7f 7f       	andi	r23, 0xFF	; 255
    9634:	7f 7f       	andi	r23, 0xFF	; 255
    9636:	7f 7f       	andi	r23, 0xFF	; 255
    9638:	7f 7f       	andi	r23, 0xFF	; 255
    963a:	7f 7f       	andi	r23, 0xFF	; 255
    963c:	7f 7f       	andi	r23, 0xFF	; 255
    963e:	7f 7f       	andi	r23, 0xFF	; 255
    9640:	7f 7f       	andi	r23, 0xFF	; 255
    9642:	7f 7f       	andi	r23, 0xFF	; 255
    9644:	7f 7f       	andi	r23, 0xFF	; 255
    9646:	7f 7f       	andi	r23, 0xFF	; 255
    9648:	7f 7f       	andi	r23, 0xFF	; 255
    964a:	7f 7f       	andi	r23, 0xFF	; 255
    964c:	7f 7e       	andi	r23, 0xEF	; 239
    964e:	7e 7e       	andi	r23, 0xEE	; 238
    9650:	7e 7d       	andi	r23, 0xDE	; 222
    9652:	7d 7d       	andi	r23, 0xDD	; 221
    9654:	7c 7c       	andi	r23, 0xCC	; 204
    9656:	7c 7b       	andi	r23, 0xBC	; 188
    9658:	7b 7a       	andi	r23, 0xAB	; 171
    965a:	7a 79       	andi	r23, 0x9A	; 154
    965c:	79 78       	andi	r23, 0x89	; 137
    965e:	77 77       	andi	r23, 0x77	; 119
    9660:	76 75       	andi	r23, 0x56	; 86
    9662:	74 73       	andi	r23, 0x34	; 52
    9664:	72 71       	andi	r23, 0x12	; 18
    9666:	70 6f       	ori	r23, 0xF0	; 240
    9668:	6e 6c       	ori	r22, 0xCE	; 206
    966a:	6b 69       	ori	r22, 0x9B	; 155
    966c:	67 65       	ori	r22, 0x57	; 87
    966e:	63 61       	ori	r22, 0x13	; 19
    9670:	5e 5b       	subi	r21, 0xBE	; 190
    9672:	58 54       	subi	r21, 0x48	; 72
    9674:	50 4c       	sbci	r21, 0xC0	; 192
    9676:	46 40       	sbci	r20, 0x06	; 6
    9678:	3a 31       	cpi	r19, 0x1A	; 26
    967a:	28 1e       	adc	r2, r24
    967c:	13 09       	sbc	r17, r3
    967e:	03 00       	.word	0x0003	; ????
    9680:	c6 cc       	rjmp	.-1652   	; 0x900e <waves+0xe>
    9682:	d5 db       	rcall	.-2134   	; 0x8e2e <smw1+0xe>
    9684:	df e3       	ldi	r29, 0x3F	; 63
    9686:	e5 e7       	ldi	r30, 0x75	; 117
    9688:	e9 ea       	ldi	r30, 0xA9	; 169
    968a:	eb ec       	ldi	r30, 0xCB	; 203
    968c:	ed ee       	ldi	r30, 0xED	; 237
    968e:	ef ef       	ldi	r30, 0xFF	; 255
    9690:	f0 f0       	brcs	.+60     	; 0x96ce <waves+0x6ce>
    9692:	f0 f1       	brcs	.+124    	; 0x9710 <waves+0x710>
    9694:	f1 f1       	breq	.+124    	; 0x9712 <waves+0x712>
    9696:	f1 f2       	breq	.-68     	; 0x9654 <waves+0x654>
    9698:	f2 f2       	brmi	.-68     	; 0x9656 <waves+0x656>
    969a:	f2 f2       	brmi	.-68     	; 0x9658 <waves+0x658>
    969c:	f2 f2       	brmi	.-68     	; 0x965a <waves+0x65a>
    969e:	f2 f3       	brmi	.-4      	; 0x969c <waves+0x69c>
    96a0:	f3 f3       	brvs	.-4      	; 0x969e <waves+0x69e>
    96a2:	f3 f3       	brvs	.-4      	; 0x96a0 <waves+0x6a0>
    96a4:	f3 f3       	brvs	.-4      	; 0x96a2 <waves+0x6a2>
    96a6:	f3 f3       	brvs	.-4      	; 0x96a4 <waves+0x6a4>
    96a8:	f3 f3       	brvs	.-4      	; 0x96a6 <waves+0x6a6>
    96aa:	f3 f3       	brvs	.-4      	; 0x96a8 <waves+0x6a8>
    96ac:	f3 f3       	brvs	.-4      	; 0x96aa <waves+0x6aa>
    96ae:	f3 f3       	brvs	.-4      	; 0x96ac <waves+0x6ac>
    96b0:	f3 f3       	brvs	.-4      	; 0x96ae <waves+0x6ae>
    96b2:	f3 f3       	brvs	.-4      	; 0x96b0 <waves+0x6b0>
    96b4:	f3 f3       	brvs	.-4      	; 0x96b2 <waves+0x6b2>
    96b6:	f3 f3       	brvs	.-4      	; 0x96b4 <waves+0x6b4>
    96b8:	f3 f3       	brvs	.-4      	; 0x96b6 <waves+0x6b6>
    96ba:	f3 f3       	brvs	.-4      	; 0x96b8 <waves+0x6b8>
    96bc:	f3 f3       	brvs	.-4      	; 0x96ba <waves+0x6ba>
    96be:	f3 f3       	brvs	.-4      	; 0x96bc <waves+0x6bc>
    96c0:	f3 f3       	brvs	.-4      	; 0x96be <waves+0x6be>
    96c2:	f3 f3       	brvs	.-4      	; 0x96c0 <waves+0x6c0>
    96c4:	f3 f3       	brvs	.-4      	; 0x96c2 <waves+0x6c2>
    96c6:	f3 f3       	brvs	.-4      	; 0x96c4 <waves+0x6c4>
    96c8:	f3 f3       	brvs	.-4      	; 0x96c6 <waves+0x6c6>
    96ca:	f3 f3       	brvs	.-4      	; 0x96c8 <waves+0x6c8>
    96cc:	f3 f3       	brvs	.-4      	; 0x96ca <waves+0x6ca>
    96ce:	f3 f3       	brvs	.-4      	; 0x96cc <waves+0x6cc>
    96d0:	f3 f3       	brvs	.-4      	; 0x96ce <waves+0x6ce>
    96d2:	f3 f3       	brvs	.-4      	; 0x96d0 <waves+0x6d0>
    96d4:	f3 f3       	brvs	.-4      	; 0x96d2 <waves+0x6d2>
    96d6:	f3 f3       	brvs	.-4      	; 0x96d4 <waves+0x6d4>
    96d8:	f3 f3       	brvs	.-4      	; 0x96d6 <waves+0x6d6>
    96da:	f3 f3       	brvs	.-4      	; 0x96d8 <waves+0x6d8>
    96dc:	f3 f3       	brvs	.-4      	; 0x96da <waves+0x6da>
    96de:	f3 f3       	brvs	.-4      	; 0x96dc <waves+0x6dc>
    96e0:	f2 f2       	brmi	.-68     	; 0x969e <waves+0x69e>
    96e2:	f2 f2       	brmi	.-68     	; 0x96a0 <waves+0x6a0>
    96e4:	f2 f2       	brmi	.-68     	; 0x96a2 <waves+0x6a2>
    96e6:	f2 f2       	brmi	.-68     	; 0x96a4 <waves+0x6a4>
    96e8:	f1 f1       	breq	.+124    	; 0x9766 <waves+0x766>
    96ea:	f1 f1       	breq	.+124    	; 0x9768 <waves+0x768>
    96ec:	f0 f0       	brcs	.+60     	; 0x972a <waves+0x72a>
    96ee:	f0 ef       	ldi	r31, 0xF0	; 240
    96f0:	ef ee       	ldi	r30, 0xEF	; 239
    96f2:	ed ec       	ldi	r30, 0xCD	; 205
    96f4:	eb ea       	ldi	r30, 0xAB	; 171
    96f6:	e9 e7       	ldi	r30, 0x79	; 121
    96f8:	e5 e3       	ldi	r30, 0x35	; 53
    96fa:	df db       	rcall	.-2114   	; 0x8eba <steptable+0x80>
    96fc:	d5 cc       	rjmp	.-1622   	; 0x90a8 <waves+0xa8>
    96fe:	c6 00       	.word	0x00c6	; ????
    9700:	00 28       	or	r0, r0
    9702:	3d 42       	sbci	r19, 0x2D	; 45
    9704:	30 2d       	mov	r19, r0
    9706:	2c 2b       	or	r18, r28
    9708:	2c 2d       	mov	r18, r12
    970a:	2e 2f       	mov	r18, r30
    970c:	30 32       	cpi	r19, 0x20	; 32
    970e:	33 35       	cpi	r19, 0x53	; 83
    9710:	37 39       	cpi	r19, 0x97	; 151
    9712:	3b 3d       	cpi	r19, 0xDB	; 219
    9714:	3f 41       	sbci	r19, 0x1F	; 31
    9716:	43 45       	sbci	r20, 0x53	; 83
    9718:	48 4a       	sbci	r20, 0xA8	; 168
    971a:	4c 4e       	sbci	r20, 0xEC	; 236
    971c:	50 53       	subi	r21, 0x30	; 48
    971e:	55 57       	subi	r21, 0x75	; 117
    9720:	59 5b       	subi	r21, 0xB9	; 185
    9722:	5d 5f       	subi	r21, 0xFD	; 253
    9724:	61 63       	ori	r22, 0x31	; 49
    9726:	65 67       	ori	r22, 0x75	; 117
    9728:	69 6b       	ori	r22, 0xB9	; 185
    972a:	6c 6e       	ori	r22, 0xEC	; 236
    972c:	70 71       	andi	r23, 0x10	; 16
    972e:	73 74       	andi	r23, 0x43	; 67
    9730:	75 77       	andi	r23, 0x75	; 117
    9732:	78 79       	andi	r23, 0x98	; 152
    9734:	7a 7b       	andi	r23, 0xBA	; 186
    9736:	7c 7d       	andi	r23, 0xDC	; 220
    9738:	7d 7e       	andi	r23, 0xED	; 237
    973a:	7e 7f       	andi	r23, 0xFE	; 254
    973c:	7f 7f       	andi	r23, 0xFF	; 255
    973e:	7f 7f       	andi	r23, 0xFF	; 255
    9740:	7f 7f       	andi	r23, 0xFF	; 255
    9742:	7f 7f       	andi	r23, 0xFF	; 255
    9744:	7f 7f       	andi	r23, 0xFF	; 255
    9746:	7e 7e       	andi	r23, 0xEE	; 238
    9748:	7d 7d       	andi	r23, 0xDD	; 221
    974a:	7c 7b       	andi	r23, 0xBC	; 188
    974c:	7a 79       	andi	r23, 0x9A	; 154
    974e:	78 77       	andi	r23, 0x78	; 120
    9750:	75 74       	andi	r23, 0x45	; 69
    9752:	73 71       	andi	r23, 0x13	; 19
    9754:	70 6e       	ori	r23, 0xE0	; 224
    9756:	6c 6b       	ori	r22, 0xBC	; 188
    9758:	69 67       	ori	r22, 0x79	; 121
    975a:	65 63       	ori	r22, 0x35	; 53
    975c:	61 5f       	subi	r22, 0xF1	; 241
    975e:	5d 5b       	subi	r21, 0xBD	; 189
    9760:	59 57       	subi	r21, 0x79	; 121
    9762:	55 53       	subi	r21, 0x35	; 53
    9764:	50 4e       	sbci	r21, 0xE0	; 224
    9766:	4c 4a       	sbci	r20, 0xAC	; 172
    9768:	48 45       	sbci	r20, 0x58	; 88
    976a:	43 41       	sbci	r20, 0x13	; 19
    976c:	3f 3d       	cpi	r19, 0xDF	; 223
    976e:	3b 39       	cpi	r19, 0x9B	; 155
    9770:	37 35       	cpi	r19, 0x57	; 87
    9772:	33 32       	cpi	r19, 0x23	; 35
    9774:	30 2f       	mov	r19, r16
    9776:	2e 2d       	mov	r18, r14
    9778:	2c 2b       	or	r18, r28
    977a:	2c 2d       	mov	r18, r12
    977c:	30 42       	sbci	r19, 0x20	; 32
    977e:	3d 28       	or	r3, r13
    9780:	00 e9       	ldi	r16, 0x90	; 144
    9782:	e5 fe       	sbrs	r14, 5
    9784:	d4 d7       	rcall	.+4008   	; 0xa72e <printheadline+0x1c>
    9786:	d7 d7       	rcall	.+4014   	; 0xa736 <printheadline+0x24>
    9788:	d6 d4       	rcall	.+2476   	; 0xa136 <drawplayer2+0xa6>
    978a:	d2 d0       	rcall	.+420    	; 0x9930 <waves+0x930>
    978c:	ce cc       	rjmp	.-1636   	; 0x912a <waves+0x12a>
    978e:	ca c8       	rjmp	.-3692   	; 0x8924 <TriggerFx+0x14>
    9790:	c6 c3       	rjmp	.+1932   	; 0x9f1e <ProcessFading+0x34>
    9792:	c1 bf       	out	0x31, r28	; 49
    9794:	bd ba       	out	0x1d, r11	; 29
    9796:	b8 b6       	in	r11, 0x38	; 56
    9798:	b4 b1       	in	r27, 0x04	; 4
    979a:	af ad       	ldd	r26, Y+63	; 0x3f
    979c:	ab a9       	ldd	r26, Y+51	; 0x33
    979e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    97a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    97a2:	9f 9e       	mul	r9, r31
    97a4:	9c 9a       	sbi	0x13, 4	; 19
    97a6:	99 97       	sbiw	r26, 0x29	; 41
    97a8:	95 94       	asr	r9
    97aa:	93 91       	.word	0x9193	; ????
    97ac:	90 8f       	std	Z+24, r25	; 0x18
    97ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    97b0:	8b 8a       	std	Y+19, r8	; 0x13
    97b2:	89 88       	ldd	r8, Y+17	; 0x11
    97b4:	88 87       	std	Y+8, r24	; 0x08
    97b6:	86 85       	ldd	r24, Z+14	; 0x0e
    97b8:	85 84       	ldd	r8, Z+13	; 0x0d
    97ba:	84 84       	ldd	r8, Z+12	; 0x0c
    97bc:	83 83       	std	Z+3, r24	; 0x03
    97be:	83 83       	std	Z+3, r24	; 0x03
    97c0:	83 83       	std	Z+3, r24	; 0x03
    97c2:	83 83       	std	Z+3, r24	; 0x03
    97c4:	83 84       	ldd	r8, Z+11	; 0x0b
    97c6:	84 84       	ldd	r8, Z+12	; 0x0c
    97c8:	85 85       	ldd	r24, Z+13	; 0x0d
    97ca:	86 87       	std	Z+14, r24	; 0x0e
    97cc:	88 88       	ldd	r8, Y+16	; 0x10
    97ce:	89 8a       	std	Y+17, r8	; 0x11
    97d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    97d2:	8d 8f       	std	Y+29, r24	; 0x1d
    97d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8593>
    97d8:	95 97       	sbiw	r26, 0x25	; 37
    97da:	99 9a       	sbi	0x13, 1	; 19
    97dc:	9c 9e       	mul	r9, r28
    97de:	9f a1       	ldd	r25, Y+39	; 0x27
    97e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    97e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    97e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    97e6:	af b1       	in	r26, 0x0f	; 15
    97e8:	b4 b6       	in	r11, 0x34	; 52
    97ea:	b8 ba       	out	0x18, r11	; 24
    97ec:	bd bf       	out	0x3d, r27	; 61
    97ee:	c1 c3       	rjmp	.+1922   	; 0x9f72 <drawplayer+0xe>
    97f0:	c6 c8       	rjmp	.-3700   	; 0x897e <TriggerFx+0x6e>
    97f2:	ca cc       	rjmp	.-1644   	; 0x9188 <waves+0x188>
    97f4:	ce d0       	rcall	.+412    	; 0x9992 <waves+0x992>
    97f6:	d2 d4       	rcall	.+2468   	; 0xa19c <drawplayer2+0x10c>
    97f8:	d6 d7       	rcall	.+4012   	; 0xa7a6 <updatepoints+0xa>
    97fa:	d7 d7       	rcall	.+4014   	; 0xa7aa <updatepoints+0xe>
    97fc:	d4 fe       	sbrs	r13, 4
    97fe:	e5 e9       	ldi	r30, 0x95	; 149
    9800:	f9 f8       	.word	0xf8f9	; ????
    9802:	f9 f5       	brne	.+126    	; 0x9882 <waves+0x882>
    9804:	eb e1       	ldi	r30, 0x1B	; 27
    9806:	dd de       	rcall	.-582    	; 0x95c2 <waves+0x5c2>
    9808:	e0 e2       	ldi	r30, 0x20	; 32
    980a:	e4 e5       	ldi	r30, 0x54	; 84
    980c:	e6 e5       	ldi	r30, 0x56	; 86
    980e:	e4 e2       	ldi	r30, 0x24	; 36
    9810:	de d9       	rcall	.-3140   	; 0x8bce <ProcessMusic+0x1ae>
    9812:	d2 ca       	rjmp	.-2652   	; 0x8db8 <ProcessMusic+0x398>
    9814:	c1 b7       	in	r28, 0x31	; 49
    9816:	ac a2       	std	Y+36, r10	; 0x24
    9818:	99 91       	ld	r25, Y+
    981a:	8a 86       	std	Y+10, r8	; 0x0a
    981c:	83 81       	ldd	r24, Z+3	; 0x03
    981e:	80 80       	ld	r8, Z
    9820:	81 82       	std	Z+1, r8	; 0x01
    9822:	83 85       	ldd	r24, Z+11	; 0x0b
    9824:	86 88       	ldd	r8, Z+22	; 0x16
    9826:	8a 8c       	ldd	r8, Y+26	; 0x1a
    9828:	8d 8f       	std	Y+29, r24	; 0x1d
    982a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8693>
    982e:	96 97       	sbiw	r26, 0x26	; 38
    9830:	98 99       	sbic	0x13, 0	; 19
    9832:	9a 9b       	sbis	0x13, 2	; 19
    9834:	9b 9c       	mul	r9, r11
    9836:	9d 9d       	mul	r25, r13
    9838:	9d 9e       	mul	r9, r29
    983a:	9e 9e       	mul	r9, r30
    983c:	9f 9f       	mul	r25, r31
    983e:	9f 9f       	mul	r25, r31
    9840:	9f 9f       	mul	r25, r31
    9842:	9f 9e       	mul	r9, r31
    9844:	9e 9e       	mul	r9, r30
    9846:	9d 9d       	mul	r25, r13
    9848:	9d 9c       	mul	r9, r13
    984a:	9b 9b       	sbis	0x13, 3	; 19
    984c:	9a 99       	sbic	0x13, 2	; 19
    984e:	98 97       	sbiw	r26, 0x28	; 40
    9850:	96 95       	lsr	r25
    9852:	93 92       	.word	0x9293	; ????
    9854:	90 8f       	std	Z+24, r25	; 0x18
    9856:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9858:	8a 88       	ldd	r8, Y+18	; 0x12
    985a:	86 85       	ldd	r24, Z+14	; 0x0e
    985c:	83 82       	std	Z+3, r8	; 0x03
    985e:	81 80       	ldd	r8, Z+1	; 0x01
    9860:	80 81       	ld	r24, Z
    9862:	83 86       	std	Z+11, r8	; 0x0b
    9864:	8a 91       	ld	r24, -Y
    9866:	99 a2       	std	Y+33, r9	; 0x21
    9868:	ac b7       	in	r26, 0x3c	; 60
    986a:	c1 ca       	rjmp	.-2686   	; 0x8dee <set_note_waves+0x12>
    986c:	d2 d9       	rcall	.-3164   	; 0x8c12 <ProcessMusic+0x1f2>
    986e:	de e2       	ldi	r29, 0x2E	; 46
    9870:	e4 e5       	ldi	r30, 0x54	; 84
    9872:	e6 e5       	ldi	r30, 0x56	; 86
    9874:	e4 e2       	ldi	r30, 0x24	; 36
    9876:	e0 de       	rcall	.-576    	; 0x9638 <waves+0x638>
    9878:	dd e1       	ldi	r29, 0x1D	; 29
    987a:	eb f5       	brvc	.+122    	; 0x98f6 <waves+0x8f6>
    987c:	f9 f8       	.word	0xf8f9	; ????
    987e:	f9 00       	.word	0x00f9	; ????
    9880:	07 08       	sbc	r0, r7
    9882:	07 0b       	sbc	r16, r23
    9884:	15 1f       	adc	r17, r21
    9886:	23 22       	and	r2, r19
    9888:	20 1e       	adc	r2, r16
    988a:	1c 1b       	sub	r17, r28
    988c:	1a 1b       	sub	r17, r26
    988e:	1c 1e       	adc	r1, r28
    9890:	22 27       	eor	r18, r18
    9892:	2e 36       	cpi	r18, 0x6E	; 110
    9894:	3f 49       	sbci	r19, 0x9F	; 159
    9896:	54 5e       	subi	r21, 0xE4	; 228
    9898:	67 6f       	ori	r22, 0xF7	; 247
    989a:	76 7a       	andi	r23, 0xA6	; 166
    989c:	7e 7f       	andi	r23, 0xFE	; 254
    989e:	7f 7f       	andi	r23, 0xFF	; 255
    98a0:	7f 7e       	andi	r23, 0xEF	; 239
    98a2:	7d 7b       	andi	r23, 0xBD	; 189
    98a4:	7a 78       	andi	r23, 0x8A	; 138
    98a6:	76 74       	andi	r23, 0x46	; 70
    98a8:	73 71       	andi	r23, 0x13	; 19
    98aa:	70 6e       	ori	r23, 0xE0	; 224
    98ac:	6d 6b       	ori	r22, 0xBD	; 189
    98ae:	6a 69       	ori	r22, 0x9A	; 154
    98b0:	68 67       	ori	r22, 0x78	; 120
    98b2:	66 65       	ori	r22, 0x56	; 86
    98b4:	65 64       	ori	r22, 0x45	; 69
    98b6:	64 63       	ori	r22, 0x34	; 52
    98b8:	63 62       	ori	r22, 0x23	; 35
    98ba:	62 62       	ori	r22, 0x22	; 34
    98bc:	61 61       	ori	r22, 0x11	; 17
    98be:	61 61       	ori	r22, 0x11	; 17
    98c0:	61 61       	ori	r22, 0x11	; 17
    98c2:	61 62       	ori	r22, 0x21	; 33
    98c4:	62 62       	ori	r22, 0x22	; 34
    98c6:	63 63       	ori	r22, 0x33	; 51
    98c8:	63 64       	ori	r22, 0x43	; 67
    98ca:	65 65       	ori	r22, 0x55	; 85
    98cc:	66 67       	ori	r22, 0x76	; 118
    98ce:	68 69       	ori	r22, 0x98	; 152
    98d0:	6a 6b       	ori	r22, 0xBA	; 186
    98d2:	6d 6e       	ori	r22, 0xED	; 237
    98d4:	70 71       	andi	r23, 0x10	; 16
    98d6:	73 74       	andi	r23, 0x43	; 67
    98d8:	76 78       	andi	r23, 0x86	; 134
    98da:	7a 7b       	andi	r23, 0xBA	; 186
    98dc:	7d 7e       	andi	r23, 0xED	; 237
    98de:	7f 7f       	andi	r23, 0xFF	; 255
    98e0:	7f 7f       	andi	r23, 0xFF	; 255
    98e2:	7e 7a       	andi	r23, 0xAE	; 174
    98e4:	76 6f       	ori	r23, 0xF6	; 246
    98e6:	67 5e       	subi	r22, 0xE7	; 231
    98e8:	54 49       	sbci	r21, 0x94	; 148
    98ea:	3f 36       	cpi	r19, 0x6F	; 111
    98ec:	2e 27       	eor	r18, r30
    98ee:	22 1e       	adc	r2, r18
    98f0:	1c 1b       	sub	r17, r28
    98f2:	1a 1b       	sub	r17, r26
    98f4:	1c 1e       	adc	r1, r28
    98f6:	20 22       	and	r2, r16
    98f8:	23 1f       	adc	r18, r19
    98fa:	15 0b       	sbc	r17, r21
    98fc:	07 08       	sbc	r0, r7
    98fe:	07 00       	.word	0x0007	; ????
    9900:	1f 31       	cpi	r17, 0x1F	; 31
    9902:	3d 44       	sbci	r19, 0x4D	; 77
    9904:	4e 53       	subi	r20, 0x3E	; 62
    9906:	54 56       	subi	r21, 0x64	; 100
    9908:	5a 5f       	subi	r21, 0xFA	; 250
    990a:	64 69       	ori	r22, 0x94	; 148
    990c:	6e 74       	andi	r22, 0x4E	; 78
    990e:	76 79       	andi	r23, 0x96	; 150
    9910:	7c 7f       	andi	r23, 0xFC	; 252
    9912:	7f 7f       	andi	r23, 0xFF	; 255
    9914:	7f 7f       	andi	r23, 0xFF	; 255
    9916:	7f 7f       	andi	r23, 0xFF	; 255
    9918:	7f 7f       	andi	r23, 0xFF	; 255
    991a:	7f 7f       	andi	r23, 0xFF	; 255
    991c:	7f 7f       	andi	r23, 0xFF	; 255
    991e:	7f 7f       	andi	r23, 0xFF	; 255
    9920:	7f 7f       	andi	r23, 0xFF	; 255
    9922:	7f 7f       	andi	r23, 0xFF	; 255
    9924:	7f 7f       	andi	r23, 0xFF	; 255
    9926:	7f 7f       	andi	r23, 0xFF	; 255
    9928:	7f 7f       	andi	r23, 0xFF	; 255
    992a:	7f 7f       	andi	r23, 0xFF	; 255
    992c:	7f 7f       	andi	r23, 0xFF	; 255
    992e:	7f 7f       	andi	r23, 0xFF	; 255
    9930:	7f 7f       	andi	r23, 0xFF	; 255
    9932:	7f 7f       	andi	r23, 0xFF	; 255
    9934:	7f 7f       	andi	r23, 0xFF	; 255
    9936:	7f 7f       	andi	r23, 0xFF	; 255
    9938:	7f 7f       	andi	r23, 0xFF	; 255
    993a:	7f 7f       	andi	r23, 0xFF	; 255
    993c:	7f 7f       	andi	r23, 0xFF	; 255
    993e:	7f 7f       	andi	r23, 0xFF	; 255
    9940:	7f 7f       	andi	r23, 0xFF	; 255
    9942:	7f 7f       	andi	r23, 0xFF	; 255
    9944:	7f 7f       	andi	r23, 0xFF	; 255
    9946:	7f 7f       	andi	r23, 0xFF	; 255
    9948:	7f 7f       	andi	r23, 0xFF	; 255
    994a:	7f 7f       	andi	r23, 0xFF	; 255
    994c:	7f 7f       	andi	r23, 0xFF	; 255
    994e:	7f 7f       	andi	r23, 0xFF	; 255
    9950:	7f 7f       	andi	r23, 0xFF	; 255
    9952:	7f 7f       	andi	r23, 0xFF	; 255
    9954:	7f 7f       	andi	r23, 0xFF	; 255
    9956:	7f 7f       	andi	r23, 0xFF	; 255
    9958:	7f 7f       	andi	r23, 0xFF	; 255
    995a:	7f 7f       	andi	r23, 0xFF	; 255
    995c:	7f 7f       	andi	r23, 0xFF	; 255
    995e:	7f 7f       	andi	r23, 0xFF	; 255
    9960:	7f 7f       	andi	r23, 0xFF	; 255
    9962:	7f 7f       	andi	r23, 0xFF	; 255
    9964:	7f 7f       	andi	r23, 0xFF	; 255
    9966:	7f 7f       	andi	r23, 0xFF	; 255
    9968:	7f 7f       	andi	r23, 0xFF	; 255
    996a:	7f 7f       	andi	r23, 0xFF	; 255
    996c:	7f 7f       	andi	r23, 0xFF	; 255
    996e:	7f 7f       	andi	r23, 0xFF	; 255
    9970:	7f 7f       	andi	r23, 0xFF	; 255
    9972:	7f 7f       	andi	r23, 0xFF	; 255
    9974:	7f 7f       	andi	r23, 0xFF	; 255
    9976:	7f 7f       	andi	r23, 0xFF	; 255
    9978:	7f 7f       	andi	r23, 0xFF	; 255
    997a:	7f 7c       	andi	r23, 0xCF	; 207
    997c:	78 71       	andi	r23, 0x18	; 24
    997e:	68 4c       	sbci	r22, 0xC8	; 200
    9980:	2c 1c       	adc	r2, r12
    9982:	12 0c       	add	r1, r2
    9984:	0a 0b       	sbc	r16, r26
    9986:	0a 05       	cpc	r16, r10
    9988:	fd f3       	brhs	.-2      	; 0x9988 <waves+0x988>
    998a:	e9 df       	rcall	.-46     	; 0x995e <waves+0x95e>
    998c:	d4 ca       	rjmp	.-2648   	; 0x8f36 <steptable+0xfc>
    998e:	c0 b7       	in	r28, 0x30	; 48
    9990:	ae a6       	std	Y+46, r10	; 0x2e
    9992:	9e 97       	sbiw	r26, 0x2e	; 46
    9994:	91 8b       	std	Z+17, r25	; 0x11
    9996:	86 85       	ldd	r24, Z+14	; 0x0e
    9998:	82 80       	ldd	r8, Z+2	; 0x02
    999a:	80 80       	ld	r8, Z
    999c:	80 80       	ld	r8, Z
    999e:	80 80       	ld	r8, Z
    99a0:	80 80       	ld	r8, Z
    99a2:	80 80       	ld	r8, Z
    99a4:	80 80       	ld	r8, Z
    99a6:	80 80       	ld	r8, Z
    99a8:	80 80       	ld	r8, Z
    99aa:	80 80       	ld	r8, Z
    99ac:	80 80       	ld	r8, Z
    99ae:	80 80       	ld	r8, Z
    99b0:	80 80       	ld	r8, Z
    99b2:	80 80       	ld	r8, Z
    99b4:	80 80       	ld	r8, Z
    99b6:	80 80       	ld	r8, Z
    99b8:	80 80       	ld	r8, Z
    99ba:	80 80       	ld	r8, Z
    99bc:	80 80       	ld	r8, Z
    99be:	80 80       	ld	r8, Z
    99c0:	80 80       	ld	r8, Z
    99c2:	80 80       	ld	r8, Z
    99c4:	80 80       	ld	r8, Z
    99c6:	80 80       	ld	r8, Z
    99c8:	80 80       	ld	r8, Z
    99ca:	80 80       	ld	r8, Z
    99cc:	80 80       	ld	r8, Z
    99ce:	80 80       	ld	r8, Z
    99d0:	80 80       	ld	r8, Z
    99d2:	80 80       	ld	r8, Z
    99d4:	80 80       	ld	r8, Z
    99d6:	80 80       	ld	r8, Z
    99d8:	80 80       	ld	r8, Z
    99da:	80 80       	ld	r8, Z
    99dc:	80 80       	ld	r8, Z
    99de:	80 80       	ld	r8, Z
    99e0:	80 80       	ld	r8, Z
    99e2:	80 80       	ld	r8, Z
    99e4:	80 80       	ld	r8, Z
    99e6:	80 80       	ld	r8, Z
    99e8:	80 80       	ld	r8, Z
    99ea:	80 80       	ld	r8, Z
    99ec:	80 80       	ld	r8, Z
    99ee:	80 80       	ld	r8, Z
    99f0:	80 80       	ld	r8, Z
    99f2:	80 80       	ld	r8, Z
    99f4:	80 87       	std	Z+8, r24	; 0x08
    99f6:	91 9d       	mul	r25, r1
    99f8:	ac c4       	rjmp	.+2392   	; 0xa352 <printtileint+0x1a6>
    99fa:	cb d4       	rcall	.+2454   	; 0xa392 <printtileint+0x1e6>
    99fc:	dd f2       	brhs	.-74     	; 0x99b4 <waves+0x9b4>
    99fe:	fa fa       	.word	0xfafa	; ????

00009a00 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    9a00:	2f 92       	push	r2
    9a02:	3f 92       	push	r3
    9a04:	4f 92       	push	r4
    9a06:	5f 92       	push	r5
    9a08:	6f 92       	push	r6
    9a0a:	7f 92       	push	r7
    9a0c:	8f 92       	push	r8
    9a0e:	9f 92       	push	r9
    9a10:	af 92       	push	r10
    9a12:	bf 92       	push	r11
    9a14:	cf 92       	push	r12
    9a16:	df 92       	push	r13
    9a18:	ef 92       	push	r14
    9a1a:	ff 92       	push	r15
    9a1c:	0f 93       	push	r16
    9a1e:	1f 93       	push	r17
    9a20:	cf 93       	push	r28
    9a22:	df 93       	push	r29
    9a24:	00 d0       	rcall	.+0      	; 0x9a26 <ProcessSprites+0x26>
    9a26:	00 d0       	rcall	.+0      	; 0x9a28 <ProcessSprites+0x28>
    9a28:	00 d0       	rcall	.+0      	; 0x9a2a <ProcessSprites+0x2a>
    9a2a:	cd b7       	in	r28, 0x3d	; 61
    9a2c:	de b7       	in	r29, 0x3e	; 62
    9a2e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    9a32:	88 23       	and	r24, r24
    9a34:	09 f4       	brne	.+2      	; 0x9a38 <ProcessSprites+0x38>
    9a36:	f9 c0       	rjmp	.+498    	; 0x9c2a <ProcessSprites+0x22a>
    9a38:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <user_ram_tiles_c_tmp>
    9a3c:	80 93 4c 08 	sts	0x084C, r24	; 0x80084c <user_ram_tiles_c>
    9a40:	80 93 4b 08 	sts	0x084B, r24	; 0x80084b <free_tile_index>
    9a44:	02 e0       	ldi	r16, 0x02	; 2
    9a46:	11 e0       	ldi	r17, 0x01	; 1
    9a48:	f8 01       	movw	r30, r16
    9a4a:	f3 81       	ldd	r31, Z+3	; 0x03
    9a4c:	fb 83       	std	Y+3, r31	; 0x03
    9a4e:	f2 ff       	sbrs	r31, 2
    9a50:	20 c0       	rjmp	.+64     	; 0x9a92 <ProcessSprites+0x92>
    9a52:	0c 5f       	subi	r16, 0xFC	; 252
    9a54:	1f 4f       	sbci	r17, 0xFF	; 255
    9a56:	21 e0       	ldi	r18, 0x01	; 1
    9a58:	0a 33       	cpi	r16, 0x3A	; 58
    9a5a:	12 07       	cpc	r17, r18
    9a5c:	a9 f7       	brne	.-22     	; 0x9a48 <ProcessSprites+0x48>
    9a5e:	26 96       	adiw	r28, 0x06	; 6
    9a60:	0f b6       	in	r0, 0x3f	; 63
    9a62:	f8 94       	cli
    9a64:	de bf       	out	0x3e, r29	; 62
    9a66:	0f be       	out	0x3f, r0	; 63
    9a68:	cd bf       	out	0x3d, r28	; 61
    9a6a:	df 91       	pop	r29
    9a6c:	cf 91       	pop	r28
    9a6e:	1f 91       	pop	r17
    9a70:	0f 91       	pop	r16
    9a72:	ff 90       	pop	r15
    9a74:	ef 90       	pop	r14
    9a76:	df 90       	pop	r13
    9a78:	cf 90       	pop	r12
    9a7a:	bf 90       	pop	r11
    9a7c:	af 90       	pop	r10
    9a7e:	9f 90       	pop	r9
    9a80:	8f 90       	pop	r8
    9a82:	7f 90       	pop	r7
    9a84:	6f 90       	pop	r6
    9a86:	5f 90       	pop	r5
    9a88:	4f 90       	pop	r4
    9a8a:	3f 90       	pop	r3
    9a8c:	2f 90       	pop	r2
    9a8e:	0c 94 ec 3f 	jmp	0x7fd8	; 0x7fd8 <RestoreBackground>
    9a92:	f8 01       	movw	r30, r16
    9a94:	51 81       	ldd	r21, Z+1	; 0x01
    9a96:	40 81       	ld	r20, Z
    9a98:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    9a9c:	24 0f       	add	r18, r20
    9a9e:	30 91 5d 08 	lds	r19, 0x085D	; 0x80085d <screen_scrollY>
    9aa2:	85 2f       	mov	r24, r21
    9aa4:	90 e0       	ldi	r25, 0x00	; 0
    9aa6:	83 0f       	add	r24, r19
    9aa8:	91 1d       	adc	r25, r1
    9aaa:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollHeight>
    9aae:	33 0f       	add	r19, r19
    9ab0:	33 0f       	add	r19, r19
    9ab2:	33 0f       	add	r19, r19
    9ab4:	31 50       	subi	r19, 0x01	; 1
    9ab6:	35 17       	cp	r19, r21
    9ab8:	08 f4       	brcc	.+2      	; 0x9abc <ProcessSprites+0xbc>
    9aba:	9a 95       	dec	r25
    9abc:	32 2e       	mov	r3, r18
    9abe:	36 94       	lsr	r3
    9ac0:	36 94       	lsr	r3
    9ac2:	36 94       	lsr	r3
    9ac4:	27 70       	andi	r18, 0x07	; 7
    9ac6:	19 f0       	breq	.+6      	; 0x9ace <ProcessSprites+0xce>
    9ac8:	f2 e0       	ldi	r31, 0x02	; 2
    9aca:	f9 83       	std	Y+1, r31	; 0x01
    9acc:	02 c0       	rjmp	.+4      	; 0x9ad2 <ProcessSprites+0xd2>
    9ace:	31 e0       	ldi	r19, 0x01	; 1
    9ad0:	39 83       	std	Y+1, r19	; 0x01
    9ad2:	bc 01       	movw	r22, r24
    9ad4:	e3 e0       	ldi	r30, 0x03	; 3
    9ad6:	76 95       	lsr	r23
    9ad8:	67 95       	ror	r22
    9ada:	ea 95       	dec	r30
    9adc:	e1 f7       	brne	.-8      	; 0x9ad6 <ProcessSprites+0xd6>
    9ade:	26 2e       	mov	r2, r22
    9ae0:	87 70       	andi	r24, 0x07	; 7
    9ae2:	19 f0       	breq	.+6      	; 0x9aea <ProcessSprites+0xea>
    9ae4:	62 e0       	ldi	r22, 0x02	; 2
    9ae6:	6a 83       	std	Y+2, r22	; 0x02
    9ae8:	02 c0       	rjmp	.+4      	; 0x9aee <ProcessSprites+0xee>
    9aea:	71 e0       	ldi	r23, 0x01	; 1
    9aec:	7a 83       	std	Y+2, r23	; 0x02
    9aee:	68 2e       	mov	r6, r24
    9af0:	71 2c       	mov	r7, r1
    9af2:	76 2c       	mov	r7, r6
    9af4:	66 24       	eor	r6, r6
    9af6:	62 0e       	add	r6, r18
    9af8:	71 1c       	adc	r7, r1
    9afa:	fb 81       	ldd	r31, Y+3	; 0x03
    9afc:	ef 2f       	mov	r30, r31
    9afe:	f0 e0       	ldi	r31, 0x00	; 0
    9b00:	7e 2f       	mov	r23, r30
    9b02:	66 27       	eor	r22, r22
    9b04:	f8 01       	movw	r30, r16
    9b06:	92 81       	ldd	r25, Z+2	; 0x02
    9b08:	69 0f       	add	r22, r25
    9b0a:	71 1d       	adc	r23, r1
    9b0c:	7e 83       	std	Y+6, r23	; 0x06
    9b0e:	6d 83       	std	Y+5, r22	; 0x05
    9b10:	c1 2c       	mov	r12, r1
    9b12:	d1 2c       	mov	r13, r1
    9b14:	97 e0       	ldi	r25, 0x07	; 7
    9b16:	95 0f       	add	r25, r21
    9b18:	98 1b       	sub	r25, r24
    9b1a:	9b 83       	std	Y+3, r25	; 0x03
    9b1c:	87 e0       	ldi	r24, 0x07	; 7
    9b1e:	84 0f       	add	r24, r20
    9b20:	82 1b       	sub	r24, r18
    9b22:	8c 83       	std	Y+4, r24	; 0x04
    9b24:	8c 2d       	mov	r24, r12
    9b26:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9b2a:	91 11       	cpse	r25, r1
    9b2c:	07 c0       	rjmp	.+14     	; 0x9b3c <ProcessSprites+0x13c>
    9b2e:	ff ef       	ldi	r31, 0xFF	; 255
    9b30:	cf 1a       	sub	r12, r31
    9b32:	df 0a       	sbc	r13, r31
    9b34:	2a 81       	ldd	r18, Y+2	; 0x02
    9b36:	c2 16       	cp	r12, r18
    9b38:	a8 f3       	brcs	.-22     	; 0x9b24 <ProcessSprites+0x124>
    9b3a:	8b cf       	rjmp	.-234    	; 0x9a52 <ProcessSprites+0x52>
    9b3c:	29 2f       	mov	r18, r25
    9b3e:	22 0f       	add	r18, r18
    9b40:	22 0f       	add	r18, r18
    9b42:	22 0f       	add	r18, r18
    9b44:	21 50       	subi	r18, 0x01	; 1
    9b46:	3b 81       	ldd	r19, Y+3	; 0x03
    9b48:	48 e0       	ldi	r20, 0x08	; 8
    9b4a:	c4 9e       	mul	r12, r20
    9b4c:	30 0d       	add	r19, r0
    9b4e:	11 24       	eor	r1, r1
    9b50:	32 17       	cp	r19, r18
    9b52:	68 f7       	brcc	.-38     	; 0x9b2e <ProcessSprites+0x12e>
    9b54:	82 0d       	add	r24, r2
    9b56:	89 17       	cp	r24, r25
    9b58:	10 f0       	brcs	.+4      	; 0x9b5e <ProcessSprites+0x15e>
    9b5a:	89 1b       	sub	r24, r25
    9b5c:	fc cf       	rjmp	.-8      	; 0x9b56 <ProcessSprites+0x156>
    9b5e:	e8 2e       	mov	r14, r24
    9b60:	e6 94       	lsr	r14
    9b62:	e6 94       	lsr	r14
    9b64:	e6 94       	lsr	r14
    9b66:	f1 2c       	mov	r15, r1
    9b68:	fe 2c       	mov	r15, r14
    9b6a:	ee 24       	eor	r14, r14
    9b6c:	87 70       	andi	r24, 0x07	; 7
    9b6e:	e8 0e       	add	r14, r24
    9b70:	f1 1c       	adc	r15, r1
    9b72:	9c 2c       	mov	r9, r12
    9b74:	88 24       	eor	r8, r8
    9b76:	41 2c       	mov	r4, r1
    9b78:	8c 81       	ldd	r24, Y+4	; 0x04
    9b7a:	68 e0       	ldi	r22, 0x08	; 8
    9b7c:	46 9e       	mul	r4, r22
    9b7e:	80 0d       	add	r24, r0
    9b80:	11 24       	eor	r1, r1
    9b82:	87 3e       	cpi	r24, 0xE7	; 231
    9b84:	08 f0       	brcs	.+2      	; 0x9b88 <ProcessSprites+0x188>
    9b86:	49 c0       	rjmp	.+146    	; 0x9c1a <ProcessSprites+0x21a>
    9b88:	83 2d       	mov	r24, r3
    9b8a:	84 0d       	add	r24, r4
    9b8c:	88 0f       	add	r24, r24
    9b8e:	88 0f       	add	r24, r24
    9b90:	88 0f       	add	r24, r24
    9b92:	f7 01       	movw	r30, r14
    9b94:	e8 0f       	add	r30, r24
    9b96:	f1 1d       	adc	r31, r1
    9b98:	9f 01       	movw	r18, r30
    9b9a:	20 50       	subi	r18, 0x00	; 0
    9b9c:	35 4f       	sbci	r19, 0xF5	; 245
    9b9e:	59 01       	movw	r10, r18
    9ba0:	f9 01       	movw	r30, r18
    9ba2:	50 80       	ld	r5, Z
    9ba4:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9ba8:	fa e1       	ldi	r31, 0x1A	; 26
    9baa:	f5 15       	cp	r31, r5
    9bac:	10 f0       	brcs	.+4      	; 0x9bb2 <ProcessSprites+0x1b2>
    9bae:	58 16       	cp	r5, r24
    9bb0:	48 f5       	brcc	.+82     	; 0x9c04 <ProcessSprites+0x204>
    9bb2:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <free_tile_index>
    9bb6:	6b 31       	cpi	r22, 0x1B	; 27
    9bb8:	10 f5       	brcc	.+68     	; 0x9bfe <ProcessSprites+0x1fe>
    9bba:	2a e1       	ldi	r18, 0x1A	; 26
    9bbc:	25 15       	cp	r18, r5
    9bbe:	28 f4       	brcc	.+10     	; 0x9bca <ProcessSprites+0x1ca>
    9bc0:	85 ee       	ldi	r24, 0xE5	; 229
    9bc2:	85 0d       	add	r24, r5
    9bc4:	0e 94 d0 3e 	call	0x7da0	; 0x7da0 <CopyFlashTile>
    9bc8:	05 c0       	rjmp	.+10     	; 0x9bd4 <ProcessSprites+0x1d4>
    9bca:	58 16       	cp	r5, r24
    9bcc:	18 f4       	brcc	.+6      	; 0x9bd4 <ProcessSprites+0x1d4>
    9bce:	85 2d       	mov	r24, r5
    9bd0:	0e 94 5f 3f 	call	0x7ebe	; 0x7ebe <CopyRamTile>
    9bd4:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <free_tile_index>
    9bd8:	e8 2f       	mov	r30, r24
    9bda:	f0 e0       	ldi	r31, 0x00	; 0
    9bdc:	9f 01       	movw	r18, r30
    9bde:	22 0f       	add	r18, r18
    9be0:	33 1f       	adc	r19, r19
    9be2:	e2 0f       	add	r30, r18
    9be4:	f3 1f       	adc	r31, r19
    9be6:	e6 50       	subi	r30, 0x06	; 6
    9be8:	f8 4f       	sbci	r31, 0xF8	; 248
    9bea:	b1 82       	std	Z+1, r11	; 0x01
    9bec:	a0 82       	st	Z, r10
    9bee:	52 82       	std	Z+2, r5	; 0x02
    9bf0:	f5 01       	movw	r30, r10
    9bf2:	80 83       	st	Z, r24
    9bf4:	91 e0       	ldi	r25, 0x01	; 1
    9bf6:	98 0f       	add	r25, r24
    9bf8:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <free_tile_index>
    9bfc:	58 2e       	mov	r5, r24
    9bfe:	fa e1       	ldi	r31, 0x1A	; 26
    9c00:	f5 15       	cp	r31, r5
    9c02:	58 f0       	brcs	.+22     	; 0x9c1a <ProcessSprites+0x21a>
    9c04:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9c08:	58 16       	cp	r5, r24
    9c0a:	38 f0       	brcs	.+14     	; 0x9c1a <ProcessSprites+0x21a>
    9c0c:	93 01       	movw	r18, r6
    9c0e:	a4 01       	movw	r20, r8
    9c10:	6d 81       	ldd	r22, Y+5	; 0x05
    9c12:	7e 81       	ldd	r23, Y+6	; 0x06
    9c14:	85 2d       	mov	r24, r5
    9c16:	0e 94 ff 3f 	call	0x7ffe	; 0x7ffe <BlitSpritePart>
    9c1a:	43 94       	inc	r4
    9c1c:	2f ef       	ldi	r18, 0xFF	; 255
    9c1e:	82 1a       	sub	r8, r18
    9c20:	92 0a       	sbc	r9, r18
    9c22:	39 81       	ldd	r19, Y+1	; 0x01
    9c24:	43 12       	cpse	r4, r19
    9c26:	a8 cf       	rjmp	.-176    	; 0x9b78 <ProcessSprites+0x178>
    9c28:	82 cf       	rjmp	.-252    	; 0x9b2e <ProcessSprites+0x12e>
    9c2a:	26 96       	adiw	r28, 0x06	; 6
    9c2c:	0f b6       	in	r0, 0x3f	; 63
    9c2e:	f8 94       	cli
    9c30:	de bf       	out	0x3e, r29	; 62
    9c32:	0f be       	out	0x3f, r0	; 63
    9c34:	cd bf       	out	0x3d, r28	; 61
    9c36:	df 91       	pop	r29
    9c38:	cf 91       	pop	r28
    9c3a:	1f 91       	pop	r17
    9c3c:	0f 91       	pop	r16
    9c3e:	ff 90       	pop	r15
    9c40:	ef 90       	pop	r14
    9c42:	df 90       	pop	r13
    9c44:	cf 90       	pop	r12
    9c46:	bf 90       	pop	r11
    9c48:	af 90       	pop	r10
    9c4a:	9f 90       	pop	r9
    9c4c:	8f 90       	pop	r8
    9c4e:	7f 90       	pop	r7
    9c50:	6f 90       	pop	r6
    9c52:	5f 90       	pop	r5
    9c54:	4f 90       	pop	r4
    9c56:	3f 90       	pop	r3
    9c58:	2f 90       	pop	r2
    9c5a:	08 95       	ret

00009c5c <Scroll>:
    9c5c:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9c60:	29 2f       	mov	r18, r25
    9c62:	22 0f       	add	r18, r18
    9c64:	22 0f       	add	r18, r18
    9c66:	22 0f       	add	r18, r18
    9c68:	90 91 5d 08 	lds	r25, 0x085D	; 0x80085d <screen_scrollY>
    9c6c:	96 0f       	add	r25, r22
    9c6e:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9c72:	30 91 5c 08 	lds	r19, 0x085C	; 0x80085c <screen_scrollX>
    9c76:	83 0f       	add	r24, r19
    9c78:	80 93 5c 08 	sts	0x085C, r24	; 0x80085c <screen_scrollX>
    9c7c:	92 17       	cp	r25, r18
    9c7e:	38 f0       	brcs	.+14     	; 0x9c8e <Scroll+0x32>
    9c80:	67 fd       	sbrc	r22, 7
    9c82:	02 c0       	rjmp	.+4      	; 0x9c88 <Scroll+0x2c>
    9c84:	92 1b       	sub	r25, r18
    9c86:	01 c0       	rjmp	.+2      	; 0x9c8a <Scroll+0x2e>
    9c88:	92 0f       	add	r25, r18
    9c8a:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9c8e:	08 95       	ret

00009c90 <MapSprite2>:
    9c90:	df 92       	push	r13
    9c92:	ef 92       	push	r14
    9c94:	ff 92       	push	r15
    9c96:	0f 93       	push	r16
    9c98:	1f 93       	push	r17
    9c9a:	cf 93       	push	r28
    9c9c:	df 93       	push	r29
    9c9e:	fb 01       	movw	r30, r22
    9ca0:	14 91       	lpm	r17, Z
    9ca2:	31 96       	adiw	r30, 0x01	; 1
    9ca4:	54 91       	lpm	r21, Z
    9ca6:	2f ef       	ldi	r18, 0xFF	; 255
    9ca8:	21 0f       	add	r18, r17
    9caa:	e4 2f       	mov	r30, r20
    9cac:	e1 70       	andi	r30, 0x01	; 1
    9cae:	40 ff       	sbrs	r20, 0
    9cb0:	03 c0       	rjmp	.+6      	; 0x9cb8 <MapSprite2+0x28>
    9cb2:	92 2f       	mov	r25, r18
    9cb4:	df ef       	ldi	r29, 0xFF	; 255
    9cb6:	02 c0       	rjmp	.+4      	; 0x9cbc <MapSprite2+0x2c>
    9cb8:	d1 e0       	ldi	r29, 0x01	; 1
    9cba:	90 e0       	ldi	r25, 0x00	; 0
    9cbc:	41 ff       	sbrs	r20, 1
    9cbe:	04 c0       	rjmp	.+8      	; 0x9cc8 <MapSprite2+0x38>
    9cc0:	3f ef       	ldi	r19, 0xFF	; 255
    9cc2:	35 0f       	add	r19, r21
    9cc4:	0f ef       	ldi	r16, 0xFF	; 255
    9cc6:	02 c0       	rjmp	.+4      	; 0x9ccc <MapSprite2+0x3c>
    9cc8:	01 e0       	ldi	r16, 0x01	; 1
    9cca:	30 e0       	ldi	r19, 0x00	; 0
    9ccc:	ee 23       	and	r30, r30
    9cce:	11 f0       	breq	.+4      	; 0x9cd4 <MapSprite2+0x44>
    9cd0:	e2 2e       	mov	r14, r18
    9cd2:	01 c0       	rjmp	.+2      	; 0x9cd6 <MapSprite2+0x46>
    9cd4:	e1 2c       	mov	r14, r1
    9cd6:	c0 e0       	ldi	r28, 0x00	; 0
    9cd8:	c5 17       	cp	r28, r21
    9cda:	f9 f0       	breq	.+62     	; 0x9d1a <MapSprite2+0x8a>
    9cdc:	31 03       	mulsu	r19, r17
    9cde:	d0 01       	movw	r26, r0
    9ce0:	11 24       	eor	r1, r1
    9ce2:	d8 2e       	mov	r13, r24
    9ce4:	d1 0e       	add	r13, r17
    9ce6:	8d 15       	cp	r24, r13
    9ce8:	a1 f0       	breq	.+40     	; 0x9d12 <MapSprite2+0x82>
    9cea:	fd 01       	movw	r30, r26
    9cec:	e9 0f       	add	r30, r25
    9cee:	f1 1d       	adc	r31, r1
    9cf0:	97 fd       	sbrc	r25, 7
    9cf2:	fa 95       	dec	r31
    9cf4:	32 96       	adiw	r30, 0x02	; 2
    9cf6:	e6 0f       	add	r30, r22
    9cf8:	f7 1f       	adc	r31, r23
    9cfa:	f4 90       	lpm	r15, Z
    9cfc:	24 e0       	ldi	r18, 0x04	; 4
    9cfe:	82 9f       	mul	r24, r18
    9d00:	f0 01       	movw	r30, r0
    9d02:	11 24       	eor	r1, r1
    9d04:	ee 5f       	subi	r30, 0xFE	; 254
    9d06:	fe 4f       	sbci	r31, 0xFE	; 254
    9d08:	f2 82       	std	Z+2, r15	; 0x02
    9d0a:	8f 5f       	subi	r24, 0xFF	; 255
    9d0c:	43 83       	std	Z+3, r20	; 0x03
    9d0e:	9d 0f       	add	r25, r29
    9d10:	ea cf       	rjmp	.-44     	; 0x9ce6 <MapSprite2+0x56>
    9d12:	30 0f       	add	r19, r16
    9d14:	cf 5f       	subi	r28, 0xFF	; 255
    9d16:	9e 2d       	mov	r25, r14
    9d18:	df cf       	rjmp	.-66     	; 0x9cd8 <MapSprite2+0x48>
    9d1a:	df 91       	pop	r29
    9d1c:	cf 91       	pop	r28
    9d1e:	1f 91       	pop	r17
    9d20:	0f 91       	pop	r16
    9d22:	ff 90       	pop	r15
    9d24:	ef 90       	pop	r14
    9d26:	df 90       	pop	r13
    9d28:	08 95       	ret

00009d2a <MoveSprite>:
    9d2a:	0f 93       	push	r16
    9d2c:	30 e0       	ldi	r19, 0x00	; 0
    9d2e:	30 17       	cp	r19, r16
    9d30:	99 f0       	breq	.+38     	; 0x9d58 <MoveSprite+0x2e>
    9d32:	58 2f       	mov	r21, r24
    9d34:	52 0f       	add	r21, r18
    9d36:	96 2f       	mov	r25, r22
    9d38:	85 17       	cp	r24, r21
    9d3a:	59 f0       	breq	.+22     	; 0x9d52 <MoveSprite+0x28>
    9d3c:	74 e0       	ldi	r23, 0x04	; 4
    9d3e:	87 9f       	mul	r24, r23
    9d40:	f0 01       	movw	r30, r0
    9d42:	11 24       	eor	r1, r1
    9d44:	ee 5f       	subi	r30, 0xFE	; 254
    9d46:	fe 4f       	sbci	r31, 0xFE	; 254
    9d48:	90 83       	st	Z, r25
    9d4a:	41 83       	std	Z+1, r20	; 0x01
    9d4c:	8f 5f       	subi	r24, 0xFF	; 255
    9d4e:	98 5f       	subi	r25, 0xF8	; 248
    9d50:	f3 cf       	rjmp	.-26     	; 0x9d38 <MoveSprite+0xe>
    9d52:	3f 5f       	subi	r19, 0xFF	; 255
    9d54:	48 5f       	subi	r20, 0xF8	; 248
    9d56:	eb cf       	rjmp	.-42     	; 0x9d2e <MoveSprite+0x4>
    9d58:	0f 91       	pop	r16
    9d5a:	08 95       	ret

00009d5c <InitializeVideoMode>:
    9d5c:	e2 e0       	ldi	r30, 0x02	; 2
    9d5e:	f1 e0       	ldi	r31, 0x01	; 1
    9d60:	80 ee       	ldi	r24, 0xE0	; 224
    9d62:	80 83       	st	Z, r24
    9d64:	81 83       	std	Z+1, r24	; 0x01
    9d66:	34 96       	adiw	r30, 0x04	; 4
    9d68:	91 e0       	ldi	r25, 0x01	; 1
    9d6a:	ea 33       	cpi	r30, 0x3A	; 58
    9d6c:	f9 07       	cpc	r31, r25
    9d6e:	c9 f7       	brne	.-14     	; 0x9d62 <InitializeVideoMode+0x6>
    9d70:	80 e2       	ldi	r24, 0x20	; 32
    9d72:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollHeight>
    9d76:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    9d7a:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <free_tile_index>
    9d7e:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <user_ram_tiles_c_tmp>
    9d82:	08 95       	ret

00009d84 <DrawMap>:
    9d84:	7f 92       	push	r7
    9d86:	8f 92       	push	r8
    9d88:	9f 92       	push	r9
    9d8a:	af 92       	push	r10
    9d8c:	bf 92       	push	r11
    9d8e:	cf 92       	push	r12
    9d90:	df 92       	push	r13
    9d92:	ef 92       	push	r14
    9d94:	ff 92       	push	r15
    9d96:	0f 93       	push	r16
    9d98:	1f 93       	push	r17
    9d9a:	cf 93       	push	r28
    9d9c:	df 93       	push	r29
    9d9e:	98 2e       	mov	r9, r24
    9da0:	86 2e       	mov	r8, r22
    9da2:	fa 01       	movw	r30, r20
    9da4:	e4 90       	lpm	r14, Z
    9da6:	31 96       	adiw	r30, 0x01	; 1
    9da8:	f4 90       	lpm	r15, Z
    9daa:	ae 2c       	mov	r10, r14
    9dac:	b1 2c       	mov	r11, r1
    9dae:	ea 01       	movw	r28, r20
    9db0:	22 96       	adiw	r28, 0x02	; 2
    9db2:	10 e0       	ldi	r17, 0x00	; 0
    9db4:	1f 15       	cp	r17, r15
    9db6:	b9 f0       	breq	.+46     	; 0x9de6 <DrawMap+0x62>
    9db8:	6e 01       	movw	r12, r28
    9dba:	00 e0       	ldi	r16, 0x00	; 0
    9dbc:	71 2e       	mov	r7, r17
    9dbe:	78 0c       	add	r7, r8
    9dc0:	0e 15       	cp	r16, r14
    9dc2:	69 f0       	breq	.+26     	; 0x9dde <DrawMap+0x5a>
    9dc4:	f6 01       	movw	r30, r12
    9dc6:	44 91       	lpm	r20, Z
    9dc8:	50 e0       	ldi	r21, 0x00	; 0
    9dca:	67 2d       	mov	r22, r7
    9dcc:	80 2f       	mov	r24, r16
    9dce:	89 0d       	add	r24, r9
    9dd0:	0e 94 15 42 	call	0x842a	; 0x842a <SetTile>
    9dd4:	0f 5f       	subi	r16, 0xFF	; 255
    9dd6:	ff ef       	ldi	r31, 0xFF	; 255
    9dd8:	cf 1a       	sub	r12, r31
    9dda:	df 0a       	sbc	r13, r31
    9ddc:	f1 cf       	rjmp	.-30     	; 0x9dc0 <DrawMap+0x3c>
    9dde:	1f 5f       	subi	r17, 0xFF	; 255
    9de0:	ca 0d       	add	r28, r10
    9de2:	db 1d       	adc	r29, r11
    9de4:	e7 cf       	rjmp	.-50     	; 0x9db4 <DrawMap+0x30>
    9de6:	df 91       	pop	r29
    9de8:	cf 91       	pop	r28
    9dea:	1f 91       	pop	r17
    9dec:	0f 91       	pop	r16
    9dee:	ff 90       	pop	r15
    9df0:	ef 90       	pop	r14
    9df2:	df 90       	pop	r13
    9df4:	cf 90       	pop	r12
    9df6:	bf 90       	pop	r11
    9df8:	af 90       	pop	r10
    9dfa:	9f 90       	pop	r9
    9dfc:	8f 90       	pop	r8
    9dfe:	7f 90       	pop	r7
    9e00:	08 95       	ret

00009e02 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    9e02:	0f 93       	push	r16
    9e04:	1f 93       	push	r17
    9e06:	cf 93       	push	r28
    9e08:	df 93       	push	r29
    9e0a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9e0c:	c0 e0       	ldi	r28, 0x00	; 0
    9e0e:	d0 e0       	ldi	r29, 0x00	; 0
    9e10:	c0 17       	cp	r28, r16
    9e12:	d1 07       	cpc	r29, r17
    9e14:	44 f4       	brge	.+16     	; 0x9e26 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    9e16:	0e 94 2b 42 	call	0x8456	; 0x8456 <GetVsyncFlag>
    9e1a:	88 23       	and	r24, r24
    9e1c:	e1 f3       	breq	.-8      	; 0x9e16 <WaitVsync+0x14>
		ClearVsyncFlag();		
    9e1e:	0e 94 2f 42 	call	0x845e	; 0x845e <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9e22:	21 96       	adiw	r28, 0x01	; 1
    9e24:	f5 cf       	rjmp	.-22     	; 0x9e10 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    9e26:	df 91       	pop	r29
    9e28:	cf 91       	pop	r28
    9e2a:	1f 91       	pop	r17
    9e2c:	0f 91       	pop	r16
    9e2e:	08 95       	ret

00009e30 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    9e30:	83 e1       	ldi	r24, 0x13	; 19
    9e32:	99 e0       	ldi	r25, 0x09	; 9
    9e34:	0e 94 90 43 	call	0x8720	; 0x8720 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    9e38:	83 e1       	ldi	r24, 0x13	; 19
    9e3a:	91 e0       	ldi	r25, 0x01	; 1
    9e3c:	0e 94 26 42 	call	0x844c	; 0x844c <SetTileTable>

	/* Draw logo */
	ClearVram();
    9e40:	0e 94 0b 42 	call	0x8416	; 0x8416 <ClearVram>
	WaitVsync(15U);
    9e44:	8f e0       	ldi	r24, 0x0F	; 15
    9e46:	90 e0       	ldi	r25, 0x00	; 0
    9e48:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    9e4c:	41 e0       	ldi	r20, 0x01	; 1
    9e4e:	6f ef       	ldi	r22, 0xFF	; 255
    9e50:	80 e0       	ldi	r24, 0x00	; 0
    9e52:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9e56:	4d ef       	ldi	r20, 0xFD	; 253
    9e58:	50 e0       	ldi	r21, 0x00	; 0
    9e5a:	6c e0       	ldi	r22, 0x0C	; 12
    9e5c:	8c e0       	ldi	r24, 0x0C	; 12
    9e5e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	WaitVsync(3);
    9e62:	83 e0       	ldi	r24, 0x03	; 3
    9e64:	90 e0       	ldi	r25, 0x00	; 0
    9e66:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    9e6a:	4c ee       	ldi	r20, 0xEC	; 236
    9e6c:	50 e0       	ldi	r21, 0x00	; 0
    9e6e:	6c e0       	ldi	r22, 0x0C	; 12
    9e70:	8c e0       	ldi	r24, 0x0C	; 12
    9e72:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	WaitVsync(2);
    9e76:	82 e0       	ldi	r24, 0x02	; 2
    9e78:	90 e0       	ldi	r25, 0x00	; 0
    9e7a:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9e7e:	4d ef       	ldi	r20, 0xFD	; 253
    9e80:	50 e0       	ldi	r21, 0x00	; 0
    9e82:	6c e0       	ldi	r22, 0x0C	; 12
    9e84:	8c e0       	ldi	r24, 0x0C	; 12
    9e86:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    9e8a:	81 e4       	ldi	r24, 0x41	; 65
    9e8c:	90 e0       	ldi	r25, 0x00	; 0
    9e8e:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	ClearVram();
    9e92:	0e 94 0b 42 	call	0x8416	; 0x8416 <ClearVram>
	WaitVsync(20U);
    9e96:	84 e1       	ldi	r24, 0x14	; 20
    9e98:	90 e0       	ldi	r25, 0x00	; 0
    9e9a:	0c 94 01 4f 	jmp	0x9e02	; 0x9e02 <WaitVsync>

00009e9e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    9e9e:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <fadeSpeed>
	currFadeFrame=0;
    9ea2:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <currFadeFrame>
	fadeActive=true;
    9ea6:	81 e0       	ldi	r24, 0x01	; 1
    9ea8:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <fadeActive>
		
	if(blocking){
    9eac:	66 23       	and	r22, r22
    9eae:	21 f0       	breq	.+8      	; 0x9eb8 <doFade+0x1a>
		while(fadeActive==true);
    9eb0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    9eb4:	81 11       	cpse	r24, r1
    9eb6:	fc cf       	rjmp	.-8      	; 0x9eb0 <doFade+0x12>
    9eb8:	08 95       	ret

00009eba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    9eba:	81 11       	cpse	r24, r1
    9ebc:	03 c0       	rjmp	.+6      	; 0x9ec4 <FadeIn+0xa>
		DDRC=0xff;
    9ebe:	8f ef       	ldi	r24, 0xFF	; 255
    9ec0:	87 b9       	out	0x07, r24	; 7
		return;
    9ec2:	08 95       	ret
	}
	fadeStep=1;
    9ec4:	91 e0       	ldi	r25, 0x01	; 1
    9ec6:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=1;
    9eca:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    9ece:	0c 94 4f 4f 	jmp	0x9e9e	; 0x9e9e <doFade>

00009ed2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    9ed2:	81 11       	cpse	r24, r1
    9ed4:	02 c0       	rjmp	.+4      	; 0x9eda <FadeOut+0x8>
		DDRC=0;
    9ed6:	17 b8       	out	0x07, r1	; 7
		return;
    9ed8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    9eda:	9c e0       	ldi	r25, 0x0C	; 12
    9edc:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=-1;
    9ee0:	9f ef       	ldi	r25, 0xFF	; 255
    9ee2:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    9ee6:	0c 94 4f 4f 	jmp	0x9e9e	; 0x9e9e <doFade>

00009eea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    9eea:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    9eee:	88 23       	and	r24, r24
    9ef0:	01 f1       	breq	.+64     	; 0x9f32 <ProcessFading+0x48>
		if(currFadeFrame==0){
    9ef2:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <currFadeFrame>
    9ef6:	81 11       	cpse	r24, r1
    9ef8:	19 c0       	rjmp	.+50     	; 0x9f2c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    9efa:	80 91 20 09 	lds	r24, 0x0920	; 0x800920 <fadeSpeed>
    9efe:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    9f02:	e0 91 24 09 	lds	r30, 0x0924	; 0x800924 <fadeStep>
    9f06:	f0 e0       	ldi	r31, 0x00	; 0
    9f08:	e1 52       	subi	r30, 0x21	; 33
    9f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    9f0c:	e4 91       	lpm	r30, Z
    9f0e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    9f10:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <fadeStep>
    9f14:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <fadeDir>
    9f18:	89 0f       	add	r24, r25
    9f1a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    9f1e:	88 23       	and	r24, r24
    9f20:	11 f0       	breq	.+4      	; 0x9f26 <ProcessFading+0x3c>
    9f22:	8d 30       	cpi	r24, 0x0D	; 13
    9f24:	31 f4       	brne	.+12     	; 0x9f32 <ProcessFading+0x48>
				fadeActive=false;
    9f26:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <fadeActive>
    9f2a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    9f2c:	81 50       	subi	r24, 0x01	; 1
    9f2e:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
    9f32:	08 95       	ret

00009f34 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    9f34:	0e 94 75 4f 	call	0x9eea	; 0x9eea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    9f38:	0c 94 00 4d 	jmp	0x9a00	; 0x9a00 <ProcessSprites>

00009f3c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    9f3c:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    9f40:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    9f44:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    9f48:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    9f4c:	01 96       	adiw	r24, 0x01	; 1
    9f4e:	a1 1d       	adc	r26, r1
    9f50:	b1 1d       	adc	r27, r1
    9f52:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <time>
    9f56:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <time+0x1>
    9f5a:	a0 93 0d 0a 	sts	0x0A0D, r26	; 0x800a0d <time+0x2>
    9f5e:	b0 93 0e 0a 	sts	0x0A0E, r27	; 0x800a0e <time+0x3>
    9f62:	08 95       	ret

00009f64 <drawplayer>:
return;
  
}

void drawplayer()
{
    9f64:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,0);
    9f66:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9f6a:	82 37       	cpi	r24, 0x72	; 114
    9f6c:	49 f4       	brne	.+18     	; 0x9f80 <drawplayer+0x1c>
    9f6e:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    9f72:	81 11       	cpse	r24, r1
    9f74:	05 c0       	rjmp	.+10     	; 0x9f80 <drawplayer+0x1c>
    9f76:	40 e0       	ldi	r20, 0x00	; 0
    9f78:	63 e2       	ldi	r22, 0x23	; 35
    9f7a:	77 e4       	ldi	r23, 0x47	; 71
    9f7c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,1);
    9f80:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9f84:	8c 36       	cpi	r24, 0x6C	; 108
    9f86:	49 f4       	brne	.+18     	; 0x9f9a <drawplayer+0x36>
    9f88:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    9f8c:	81 11       	cpse	r24, r1
    9f8e:	05 c0       	rjmp	.+10     	; 0x9f9a <drawplayer+0x36>
    9f90:	41 e0       	ldi	r20, 0x01	; 1
    9f92:	63 e2       	ldi	r22, 0x23	; 35
    9f94:	77 e4       	ldi	r23, 0x47	; 71
    9f96:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,0);
    9f9a:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9f9e:	82 37       	cpi	r24, 0x72	; 114
    9fa0:	59 f4       	brne	.+22     	; 0x9fb8 <drawplayer+0x54>
    9fa2:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    9fa6:	81 50       	subi	r24, 0x01	; 1
    9fa8:	88 30       	cpi	r24, 0x08	; 8
    9faa:	30 f4       	brcc	.+12     	; 0x9fb8 <drawplayer+0x54>
    9fac:	40 e0       	ldi	r20, 0x00	; 0
    9fae:	63 e2       	ldi	r22, 0x23	; 35
    9fb0:	77 e4       	ldi	r23, 0x47	; 71
    9fb2:	80 e0       	ldi	r24, 0x00	; 0
    9fb4:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,0);    
    9fb8:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9fbc:	82 37       	cpi	r24, 0x72	; 114
    9fbe:	59 f4       	brne	.+22     	; 0x9fd6 <drawplayer+0x72>
    9fc0:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    9fc4:	89 50       	subi	r24, 0x09	; 9
    9fc6:	88 30       	cpi	r24, 0x08	; 8
    9fc8:	30 f4       	brcc	.+12     	; 0x9fd6 <drawplayer+0x72>
    9fca:	40 e0       	ldi	r20, 0x00	; 0
    9fcc:	6d e1       	ldi	r22, 0x1D	; 29
    9fce:	77 e4       	ldi	r23, 0x47	; 71
    9fd0:	80 e0       	ldi	r24, 0x00	; 0
    9fd2:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,0);  
    9fd6:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9fda:	82 37       	cpi	r24, 0x72	; 114
    9fdc:	59 f4       	brne	.+22     	; 0x9ff4 <drawplayer+0x90>
    9fde:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    9fe2:	81 51       	subi	r24, 0x11	; 17
    9fe4:	88 30       	cpi	r24, 0x08	; 8
    9fe6:	30 f4       	brcc	.+12     	; 0x9ff4 <drawplayer+0x90>
    9fe8:	40 e0       	ldi	r20, 0x00	; 0
    9fea:	67 e1       	ldi	r22, 0x17	; 23
    9fec:	77 e4       	ldi	r23, 0x47	; 71
    9fee:	80 e0       	ldi	r24, 0x00	; 0
    9ff0:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,1);
    9ff4:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    9ff8:	8c 36       	cpi	r24, 0x6C	; 108
    9ffa:	59 f4       	brne	.+22     	; 0xa012 <drawplayer+0xae>
    9ffc:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    a000:	81 50       	subi	r24, 0x01	; 1
    a002:	88 30       	cpi	r24, 0x08	; 8
    a004:	30 f4       	brcc	.+12     	; 0xa012 <drawplayer+0xae>
    a006:	41 e0       	ldi	r20, 0x01	; 1
    a008:	63 e2       	ldi	r22, 0x23	; 35
    a00a:	77 e4       	ldi	r23, 0x47	; 71
    a00c:	80 e0       	ldi	r24, 0x00	; 0
    a00e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,1);    
    a012:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    a016:	8c 36       	cpi	r24, 0x6C	; 108
    a018:	59 f4       	brne	.+22     	; 0xa030 <drawplayer+0xcc>
    a01a:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    a01e:	89 50       	subi	r24, 0x09	; 9
    a020:	88 30       	cpi	r24, 0x08	; 8
    a022:	30 f4       	brcc	.+12     	; 0xa030 <drawplayer+0xcc>
    a024:	41 e0       	ldi	r20, 0x01	; 1
    a026:	6d e1       	ldi	r22, 0x1D	; 29
    a028:	77 e4       	ldi	r23, 0x47	; 71
    a02a:	80 e0       	ldi	r24, 0x00	; 0
    a02c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,1);  
    a030:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0xe>
    a034:	8c 36       	cpi	r24, 0x6C	; 108
    a036:	59 f4       	brne	.+22     	; 0xa04e <drawplayer+0xea>
    a038:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x1b>
    a03c:	81 51       	subi	r24, 0x11	; 17
    a03e:	88 30       	cpi	r24, 0x08	; 8
    a040:	30 f4       	brcc	.+12     	; 0xa04e <drawplayer+0xea>
    a042:	41 e0       	ldi	r20, 0x01	; 1
    a044:	67 e1       	ldi	r22, 0x17	; 23
    a046:	77 e4       	ldi	r23, 0x47	; 71
    a048:	80 e0       	ldi	r24, 0x00	; 0
    a04a:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a04e:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <player+0xa>
    a052:	88 23       	and	r24, r24
    a054:	31 f0       	breq	.+12     	; 0xa062 <drawplayer+0xfe>
{
   MapSprite2(0 ,pac0 ,0);
    a056:	40 e0       	ldi	r20, 0x00	; 0
    a058:	63 e2       	ldi	r22, 0x23	; 35
    a05a:	77 e4       	ldi	r23, 0x47	; 71
    a05c:	80 e0       	ldi	r24, 0x00	; 0
    a05e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    a062:	40 91 58 09 	lds	r20, 0x0958	; 0x800958 <player+0x2>
    a066:	45 51       	subi	r20, 0x15	; 21
    a068:	60 91 56 09 	lds	r22, 0x0956	; 0x800956 <player>
    a06c:	67 50       	subi	r22, 0x07	; 7
    a06e:	02 e0       	ldi	r16, 0x02	; 2
    a070:	22 e0       	ldi	r18, 0x02	; 2
    a072:	80 e0       	ldi	r24, 0x00	; 0
    a074:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>



aniframe++;
    a078:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a07c:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    a07e:	85 31       	cpi	r24, 0x15	; 21
    a080:	18 f4       	brcc	.+6      	; 0xa088 <drawplayer+0x124>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);



aniframe++;
    a082:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <aniframe>
    a086:	02 c0       	rjmp	.+4      	; 0xa08c <drawplayer+0x128>
if ( aniframe > 20 ) aniframe = 0;     
    a088:	10 92 90 0a 	sts	0x0A90, r1	; 0x800a90 <aniframe>


}
    a08c:	0f 91       	pop	r16
    a08e:	08 95       	ret

0000a090 <drawplayer2>:
void drawplayer2()
{
    a090:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,0);
    a092:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a096:	82 37       	cpi	r24, 0x72	; 114
    a098:	51 f4       	brne	.+20     	; 0xa0ae <drawplayer2+0x1e>
    a09a:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a09e:	81 11       	cpse	r24, r1
    a0a0:	06 c0       	rjmp	.+12     	; 0xa0ae <drawplayer2+0x1e>
    a0a2:	40 e0       	ldi	r20, 0x00	; 0
    a0a4:	65 e0       	ldi	r22, 0x05	; 5
    a0a6:	77 e4       	ldi	r23, 0x47	; 71
    a0a8:	8a e0       	ldi	r24, 0x0A	; 10
    a0aa:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,1);
    a0ae:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a0b2:	8c 36       	cpi	r24, 0x6C	; 108
    a0b4:	51 f4       	brne	.+20     	; 0xa0ca <drawplayer2+0x3a>
    a0b6:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a0ba:	81 11       	cpse	r24, r1
    a0bc:	06 c0       	rjmp	.+12     	; 0xa0ca <drawplayer2+0x3a>
    a0be:	41 e0       	ldi	r20, 0x01	; 1
    a0c0:	65 e0       	ldi	r22, 0x05	; 5
    a0c2:	77 e4       	ldi	r23, 0x47	; 71
    a0c4:	8a e0       	ldi	r24, 0x0A	; 10
    a0c6:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,0);
    a0ca:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a0ce:	82 37       	cpi	r24, 0x72	; 114
    a0d0:	59 f4       	brne	.+22     	; 0xa0e8 <drawplayer2+0x58>
    a0d2:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a0d6:	81 50       	subi	r24, 0x01	; 1
    a0d8:	88 30       	cpi	r24, 0x08	; 8
    a0da:	30 f4       	brcc	.+12     	; 0xa0e8 <drawplayer2+0x58>
    a0dc:	40 e0       	ldi	r20, 0x00	; 0
    a0de:	65 e0       	ldi	r22, 0x05	; 5
    a0e0:	77 e4       	ldi	r23, 0x47	; 71
    a0e2:	8a e0       	ldi	r24, 0x0A	; 10
    a0e4:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,0);    
    a0e8:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a0ec:	82 37       	cpi	r24, 0x72	; 114
    a0ee:	59 f4       	brne	.+22     	; 0xa106 <drawplayer2+0x76>
    a0f0:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a0f4:	89 50       	subi	r24, 0x09	; 9
    a0f6:	88 30       	cpi	r24, 0x08	; 8
    a0f8:	30 f4       	brcc	.+12     	; 0xa106 <drawplayer2+0x76>
    a0fa:	40 e0       	ldi	r20, 0x00	; 0
    a0fc:	6f ef       	ldi	r22, 0xFF	; 255
    a0fe:	76 e4       	ldi	r23, 0x46	; 70
    a100:	8a e0       	ldi	r24, 0x0A	; 10
    a102:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,0);  
    a106:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a10a:	82 37       	cpi	r24, 0x72	; 114
    a10c:	59 f4       	brne	.+22     	; 0xa124 <drawplayer2+0x94>
    a10e:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a112:	81 51       	subi	r24, 0x11	; 17
    a114:	88 30       	cpi	r24, 0x08	; 8
    a116:	30 f4       	brcc	.+12     	; 0xa124 <drawplayer2+0x94>
    a118:	40 e0       	ldi	r20, 0x00	; 0
    a11a:	65 e0       	ldi	r22, 0x05	; 5
    a11c:	77 e4       	ldi	r23, 0x47	; 71
    a11e:	8a e0       	ldi	r24, 0x0A	; 10
    a120:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,1);
    a124:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a128:	8c 36       	cpi	r24, 0x6C	; 108
    a12a:	59 f4       	brne	.+22     	; 0xa142 <drawplayer2+0xb2>
    a12c:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a130:	81 50       	subi	r24, 0x01	; 1
    a132:	88 30       	cpi	r24, 0x08	; 8
    a134:	30 f4       	brcc	.+12     	; 0xa142 <drawplayer2+0xb2>
    a136:	41 e0       	ldi	r20, 0x01	; 1
    a138:	65 e0       	ldi	r22, 0x05	; 5
    a13a:	77 e4       	ldi	r23, 0x47	; 71
    a13c:	8a e0       	ldi	r24, 0x0A	; 10
    a13e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,1);    
    a142:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a146:	8c 36       	cpi	r24, 0x6C	; 108
    a148:	59 f4       	brne	.+22     	; 0xa160 <drawplayer2+0xd0>
    a14a:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a14e:	89 50       	subi	r24, 0x09	; 9
    a150:	88 30       	cpi	r24, 0x08	; 8
    a152:	30 f4       	brcc	.+12     	; 0xa160 <drawplayer2+0xd0>
    a154:	41 e0       	ldi	r20, 0x01	; 1
    a156:	6f ef       	ldi	r22, 0xFF	; 255
    a158:	76 e4       	ldi	r23, 0x46	; 70
    a15a:	8a e0       	ldi	r24, 0x0A	; 10
    a15c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,1);  
    a160:	80 91 1e 0a 	lds	r24, 0x0A1E	; 0x800a1e <player2+0xe>
    a164:	8c 36       	cpi	r24, 0x6C	; 108
    a166:	59 f4       	brne	.+22     	; 0xa17e <drawplayer2+0xee>
    a168:	80 91 2b 0a 	lds	r24, 0x0A2B	; 0x800a2b <player2+0x1b>
    a16c:	81 51       	subi	r24, 0x11	; 17
    a16e:	88 30       	cpi	r24, 0x08	; 8
    a170:	30 f4       	brcc	.+12     	; 0xa17e <drawplayer2+0xee>
    a172:	41 e0       	ldi	r20, 0x01	; 1
    a174:	65 e0       	ldi	r22, 0x05	; 5
    a176:	77 e4       	ldi	r23, 0x47	; 71
    a178:	8a e0       	ldi	r24, 0x0A	; 10
    a17a:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a17e:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <player+0xa>
    a182:	88 23       	and	r24, r24
    a184:	31 f0       	breq	.+12     	; 0xa192 <drawplayer2+0x102>
{
   MapSprite2(10 ,run0 ,0);
    a186:	40 e0       	ldi	r20, 0x00	; 0
    a188:	65 e0       	ldi	r22, 0x05	; 5
    a18a:	77 e4       	ldi	r23, 0x47	; 71
    a18c:	8a e0       	ldi	r24, 0x0A	; 10
    a18e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
}
MoveSprite(10 ,player2.x -7 ,player2.y - 21  ,2 ,2);
    a192:	40 91 12 0a 	lds	r20, 0x0A12	; 0x800a12 <player2+0x2>
    a196:	45 51       	subi	r20, 0x15	; 21
    a198:	60 91 10 0a 	lds	r22, 0x0A10	; 0x800a10 <player2>
    a19c:	67 50       	subi	r22, 0x07	; 7
    a19e:	02 e0       	ldi	r16, 0x02	; 2
    a1a0:	22 e0       	ldi	r18, 0x02	; 2
    a1a2:	8a e0       	ldi	r24, 0x0A	; 10
    a1a4:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

//aniframe++;
//if ( aniframe > 20 ) aniframe = 0;     


}
    a1a8:	0f 91       	pop	r16
    a1aa:	08 95       	ret

0000a1ac <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    a1ac:	ef 92       	push	r14
    a1ae:	ff 92       	push	r15
    a1b0:	1f 93       	push	r17
    a1b2:	cf 93       	push	r28
    a1b4:	df 93       	push	r29
    a1b6:	cd b7       	in	r28, 0x3d	; 61
    a1b8:	de b7       	in	r29, 0x3e	; 62
    a1ba:	2a 97       	sbiw	r28, 0x0a	; 10
    a1bc:	0f b6       	in	r0, 0x3f	; 63
    a1be:	f8 94       	cli
    a1c0:	de bf       	out	0x3e, r29	; 62
    a1c2:	0f be       	out	0x3f, r0	; 63
    a1c4:	cd bf       	out	0x3d, r28	; 61
    a1c6:	18 2f       	mov	r17, r24
    a1c8:	fa 01       	movw	r30, r20
    a1ca:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    a1cc:	90 e2       	ldi	r25, 0x20	; 32
    a1ce:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    a1d0:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    a1d2:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    a1d4:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    a1d6:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    a1d8:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    a1da:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    a1dc:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    a1de:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    a1e0:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    a1e2:	4a e0       	ldi	r20, 0x0A	; 10
    a1e4:	be 01       	movw	r22, r28
    a1e6:	6f 5f       	subi	r22, 0xFF	; 255
    a1e8:	7f 4f       	sbci	r23, 0xFF	; 255
    a1ea:	cf 01       	movw	r24, r30
    a1ec:	0e 94 18 6a 	call	0xd430	; 0xd430 <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a1f0:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <lx+0x1>
    a1f4:	10 92 8e 0a 	sts	0x0A8E, r1	; 0x800a8e <lx>
    a1f8:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a1fc:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a200:	86 30       	cpi	r24, 0x06	; 6
    a202:	91 05       	cpc	r25, r1
    a204:	0c f0       	brlt	.+2      	; 0xa208 <printtileint+0x5c>
    a206:	f8 c0       	rjmp	.+496    	; 0xa3f8 <printtileint+0x24c>
    a208:	8e 15       	cp	r24, r14
    a20a:	9f 05       	cpc	r25, r15
    a20c:	0c f0       	brlt	.+2      	; 0xa210 <printtileint+0x64>
    a20e:	f4 c0       	rjmp	.+488    	; 0xa3f8 <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, black ); 
    a210:	49 ed       	ldi	r20, 0xD9	; 217
    a212:	58 e7       	ldi	r21, 0x78	; 120
    a214:	60 e2       	ldi	r22, 0x20	; 32
    a216:	81 0f       	add	r24, r17
    a218:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,0, n0 );  
    a21c:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a220:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a224:	e1 e0       	ldi	r30, 0x01	; 1
    a226:	f0 e0       	ldi	r31, 0x00	; 0
    a228:	ec 0f       	add	r30, r28
    a22a:	fd 1f       	adc	r31, r29
    a22c:	e8 0f       	add	r30, r24
    a22e:	f9 1f       	adc	r31, r25
    a230:	20 81       	ld	r18, Z
    a232:	20 33       	cpi	r18, 0x30	; 48
    a234:	31 f4       	brne	.+12     	; 0xa242 <printtileint+0x96>
    a236:	4e e5       	ldi	r20, 0x5E	; 94
    a238:	58 e7       	ldi	r21, 0x78	; 120
    a23a:	60 e0       	ldi	r22, 0x00	; 0
    a23c:	81 0f       	add	r24, r17
    a23e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,0, n1 ); 
    a242:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a246:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a24a:	e1 e0       	ldi	r30, 0x01	; 1
    a24c:	f0 e0       	ldi	r31, 0x00	; 0
    a24e:	ec 0f       	add	r30, r28
    a250:	fd 1f       	adc	r31, r29
    a252:	e8 0f       	add	r30, r24
    a254:	f9 1f       	adc	r31, r25
    a256:	20 81       	ld	r18, Z
    a258:	21 33       	cpi	r18, 0x31	; 49
    a25a:	31 f4       	brne	.+12     	; 0xa268 <printtileint+0xbc>
    a25c:	4b e5       	ldi	r20, 0x5B	; 91
    a25e:	58 e7       	ldi	r21, 0x78	; 120
    a260:	60 e0       	ldi	r22, 0x00	; 0
    a262:	81 0f       	add	r24, r17
    a264:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,0, n2 ); 
    a268:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a26c:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a270:	e1 e0       	ldi	r30, 0x01	; 1
    a272:	f0 e0       	ldi	r31, 0x00	; 0
    a274:	ec 0f       	add	r30, r28
    a276:	fd 1f       	adc	r31, r29
    a278:	e8 0f       	add	r30, r24
    a27a:	f9 1f       	adc	r31, r25
    a27c:	20 81       	ld	r18, Z
    a27e:	22 33       	cpi	r18, 0x32	; 50
    a280:	31 f4       	brne	.+12     	; 0xa28e <printtileint+0xe2>
    a282:	48 e5       	ldi	r20, 0x58	; 88
    a284:	58 e7       	ldi	r21, 0x78	; 120
    a286:	60 e0       	ldi	r22, 0x00	; 0
    a288:	81 0f       	add	r24, r17
    a28a:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,0, n3 ); 
    a28e:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a292:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a296:	e1 e0       	ldi	r30, 0x01	; 1
    a298:	f0 e0       	ldi	r31, 0x00	; 0
    a29a:	ec 0f       	add	r30, r28
    a29c:	fd 1f       	adc	r31, r29
    a29e:	e8 0f       	add	r30, r24
    a2a0:	f9 1f       	adc	r31, r25
    a2a2:	20 81       	ld	r18, Z
    a2a4:	23 33       	cpi	r18, 0x33	; 51
    a2a6:	31 f4       	brne	.+12     	; 0xa2b4 <printtileint+0x108>
    a2a8:	45 e5       	ldi	r20, 0x55	; 85
    a2aa:	58 e7       	ldi	r21, 0x78	; 120
    a2ac:	60 e0       	ldi	r22, 0x00	; 0
    a2ae:	81 0f       	add	r24, r17
    a2b0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,0, n4); 
    a2b4:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a2b8:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a2bc:	e1 e0       	ldi	r30, 0x01	; 1
    a2be:	f0 e0       	ldi	r31, 0x00	; 0
    a2c0:	ec 0f       	add	r30, r28
    a2c2:	fd 1f       	adc	r31, r29
    a2c4:	e8 0f       	add	r30, r24
    a2c6:	f9 1f       	adc	r31, r25
    a2c8:	20 81       	ld	r18, Z
    a2ca:	24 33       	cpi	r18, 0x34	; 52
    a2cc:	31 f4       	brne	.+12     	; 0xa2da <printtileint+0x12e>
    a2ce:	42 e5       	ldi	r20, 0x52	; 82
    a2d0:	58 e7       	ldi	r21, 0x78	; 120
    a2d2:	60 e0       	ldi	r22, 0x00	; 0
    a2d4:	81 0f       	add	r24, r17
    a2d6:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,0, n5 ); 
    a2da:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a2de:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a2e2:	e1 e0       	ldi	r30, 0x01	; 1
    a2e4:	f0 e0       	ldi	r31, 0x00	; 0
    a2e6:	ec 0f       	add	r30, r28
    a2e8:	fd 1f       	adc	r31, r29
    a2ea:	e8 0f       	add	r30, r24
    a2ec:	f9 1f       	adc	r31, r25
    a2ee:	20 81       	ld	r18, Z
    a2f0:	25 33       	cpi	r18, 0x35	; 53
    a2f2:	31 f4       	brne	.+12     	; 0xa300 <printtileint+0x154>
    a2f4:	4f e4       	ldi	r20, 0x4F	; 79
    a2f6:	58 e7       	ldi	r21, 0x78	; 120
    a2f8:	60 e0       	ldi	r22, 0x00	; 0
    a2fa:	81 0f       	add	r24, r17
    a2fc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,0, n6 ); 
    a300:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a304:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a308:	e1 e0       	ldi	r30, 0x01	; 1
    a30a:	f0 e0       	ldi	r31, 0x00	; 0
    a30c:	ec 0f       	add	r30, r28
    a30e:	fd 1f       	adc	r31, r29
    a310:	e8 0f       	add	r30, r24
    a312:	f9 1f       	adc	r31, r25
    a314:	20 81       	ld	r18, Z
    a316:	26 33       	cpi	r18, 0x36	; 54
    a318:	31 f4       	brne	.+12     	; 0xa326 <printtileint+0x17a>
    a31a:	4c e4       	ldi	r20, 0x4C	; 76
    a31c:	58 e7       	ldi	r21, 0x78	; 120
    a31e:	60 e0       	ldi	r22, 0x00	; 0
    a320:	81 0f       	add	r24, r17
    a322:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,0, n7 ); 
    a326:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a32a:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a32e:	e1 e0       	ldi	r30, 0x01	; 1
    a330:	f0 e0       	ldi	r31, 0x00	; 0
    a332:	ec 0f       	add	r30, r28
    a334:	fd 1f       	adc	r31, r29
    a336:	e8 0f       	add	r30, r24
    a338:	f9 1f       	adc	r31, r25
    a33a:	20 81       	ld	r18, Z
    a33c:	27 33       	cpi	r18, 0x37	; 55
    a33e:	31 f4       	brne	.+12     	; 0xa34c <printtileint+0x1a0>
    a340:	49 e4       	ldi	r20, 0x49	; 73
    a342:	58 e7       	ldi	r21, 0x78	; 120
    a344:	60 e0       	ldi	r22, 0x00	; 0
    a346:	81 0f       	add	r24, r17
    a348:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,0, n8 ); 
    a34c:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a350:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a354:	e1 e0       	ldi	r30, 0x01	; 1
    a356:	f0 e0       	ldi	r31, 0x00	; 0
    a358:	ec 0f       	add	r30, r28
    a35a:	fd 1f       	adc	r31, r29
    a35c:	e8 0f       	add	r30, r24
    a35e:	f9 1f       	adc	r31, r25
    a360:	20 81       	ld	r18, Z
    a362:	28 33       	cpi	r18, 0x38	; 56
    a364:	31 f4       	brne	.+12     	; 0xa372 <printtileint+0x1c6>
    a366:	46 e4       	ldi	r20, 0x46	; 70
    a368:	58 e7       	ldi	r21, 0x78	; 120
    a36a:	60 e0       	ldi	r22, 0x00	; 0
    a36c:	81 0f       	add	r24, r17
    a36e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,0, n9 );
    a372:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a376:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a37a:	e1 e0       	ldi	r30, 0x01	; 1
    a37c:	f0 e0       	ldi	r31, 0x00	; 0
    a37e:	ec 0f       	add	r30, r28
    a380:	fd 1f       	adc	r31, r29
    a382:	e8 0f       	add	r30, r24
    a384:	f9 1f       	adc	r31, r25
    a386:	20 81       	ld	r18, Z
    a388:	29 33       	cpi	r18, 0x39	; 57
    a38a:	31 f4       	brne	.+12     	; 0xa398 <printtileint+0x1ec>
    a38c:	43 e4       	ldi	r20, 0x43	; 67
    a38e:	58 e7       	ldi	r21, 0x78	; 120
    a390:	60 e0       	ldi	r22, 0x00	; 0
    a392:	81 0f       	add	r24, r17
    a394:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,0, nm );    
    a398:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a39c:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a3a0:	e1 e0       	ldi	r30, 0x01	; 1
    a3a2:	f0 e0       	ldi	r31, 0x00	; 0
    a3a4:	ec 0f       	add	r30, r28
    a3a6:	fd 1f       	adc	r31, r29
    a3a8:	e8 0f       	add	r30, r24
    a3aa:	f9 1f       	adc	r31, r25
    a3ac:	20 81       	ld	r18, Z
    a3ae:	2d 32       	cpi	r18, 0x2D	; 45
    a3b0:	31 f4       	brne	.+12     	; 0xa3be <printtileint+0x212>
    a3b2:	40 e4       	ldi	r20, 0x40	; 64
    a3b4:	58 e7       	ldi	r21, 0x78	; 120
    a3b6:	60 e0       	ldi	r22, 0x00	; 0
    a3b8:	81 0f       	add	r24, r17
    a3ba:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,0, black ); 
    a3be:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a3c2:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a3c6:	e1 e0       	ldi	r30, 0x01	; 1
    a3c8:	f0 e0       	ldi	r31, 0x00	; 0
    a3ca:	ec 0f       	add	r30, r28
    a3cc:	fd 1f       	adc	r31, r29
    a3ce:	e8 0f       	add	r30, r24
    a3d0:	f9 1f       	adc	r31, r25
    a3d2:	20 81       	ld	r18, Z
    a3d4:	20 32       	cpi	r18, 0x20	; 32
    a3d6:	31 f4       	brne	.+12     	; 0xa3e4 <printtileint+0x238>
    a3d8:	49 ed       	ldi	r20, 0xD9	; 217
    a3da:	58 e7       	ldi	r21, 0x78	; 120
    a3dc:	60 e0       	ldi	r22, 0x00	; 0
    a3de:	81 0f       	add	r24, r17
    a3e0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a3e4:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a3e8:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a3ec:	01 96       	adiw	r24, 0x01	; 1
    a3ee:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    a3f2:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    a3f6:	00 cf       	rjmp	.-512    	; 0xa1f8 <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,0, black ); 
    

};
    
}
    a3f8:	2a 96       	adiw	r28, 0x0a	; 10
    a3fa:	0f b6       	in	r0, 0x3f	; 63
    a3fc:	f8 94       	cli
    a3fe:	de bf       	out	0x3e, r29	; 62
    a400:	0f be       	out	0x3f, r0	; 63
    a402:	cd bf       	out	0x3d, r28	; 61
    a404:	df 91       	pop	r29
    a406:	cf 91       	pop	r28
    a408:	1f 91       	pop	r17
    a40a:	ff 90       	pop	r15
    a40c:	ef 90       	pop	r14
    a40e:	08 95       	ret

0000a410 <initlevel>:

void initlevel()
{
    a410:	ef e3       	ldi	r30, 0x3F	; 63
    a412:	fa e0       	ldi	r31, 0x0A	; 10
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    a414:	80 e0       	ldi	r24, 0x00	; 0
    a416:	90 e0       	ldi	r25, 0x00	; 0
    a418:	11 92       	st	Z+, r1
    a41a:	11 92       	st	Z+, r1
    a41c:	01 96       	adiw	r24, 0x01	; 1
    a41e:	89 31       	cpi	r24, 0x19	; 25
    a420:	91 05       	cpc	r25, r1
    a422:	d1 f7       	brne	.-12     	; 0xa418 <initlevel+0x8>
    a424:	e5 e2       	ldi	r30, 0x25	; 37
    a426:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    a428:	80 e0       	ldi	r24, 0x00	; 0
    a42a:	90 e0       	ldi	r25, 0x00	; 0
    a42c:	11 82       	std	Z+1, r1	; 0x01
    a42e:	10 82       	st	Z, r1
    a430:	12 82       	std	Z+2, r1	; 0x02
    a432:	13 82       	std	Z+3, r1	; 0x03
    a434:	01 96       	adiw	r24, 0x01	; 1
    a436:	34 96       	adiw	r30, 0x04	; 4
    a438:	8c 30       	cpi	r24, 0x0C	; 12
    a43a:	91 05       	cpc	r25, r1
    a43c:	b9 f7       	brne	.-18     	; 0xa42c <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    a43e:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <lx+0x1>
    a442:	10 92 8e 0a 	sts	0x0A8E, r1	; 0x800a8e <lx>
    a446:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a44a:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a44e:	80 97       	sbiw	r24, 0x20	; 32
    a450:	c4 f5       	brge	.+112    	; 0xa4c2 <initlevel+0xb2>
     		{
                for (  ly = 0; ly < 28; ly++ )
    a452:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <ly+0x1>
    a456:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <ly>
    a45a:	60 91 75 09 	lds	r22, 0x0975	; 0x800975 <ly>
    a45e:	70 91 76 09 	lds	r23, 0x0976	; 0x800976 <ly+0x1>
    a462:	6c 31       	cpi	r22, 0x1C	; 28
    a464:	71 05       	cpc	r23, r1
    a466:	1c f5       	brge	.+70     	; 0xa4ae <initlevel+0x9e>
                {            
                    if(level == 5)
    a468:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    a46c:	85 30       	cpi	r24, 0x05	; 5
    a46e:	19 f4       	brne	.+6      	; 0xa476 <initlevel+0x66>
                    {
          	         DrawMap2(lx ,ly ,black);
    a470:	49 ed       	ldi	r20, 0xD9	; 217
    a472:	58 e7       	ldi	r21, 0x78	; 120
    a474:	0e c0       	rjmp	.+28     	; 0xa492 <initlevel+0x82>
                    }
                    else{
                      if(ly == 0  && level != 0 || ly == 1 && level != 0 || ly > 26)
    a476:	62 30       	cpi	r22, 0x02	; 2
    a478:	71 05       	cpc	r23, r1
    a47a:	18 f4       	brcc	.+6      	; 0xa482 <initlevel+0x72>
    a47c:	81 11       	cpse	r24, r1
    a47e:	04 c0       	rjmp	.+8      	; 0xa488 <initlevel+0x78>
    a480:	06 c0       	rjmp	.+12     	; 0xa48e <initlevel+0x7e>
    a482:	6b 31       	cpi	r22, 0x1B	; 27
    a484:	71 05       	cpc	r23, r1
    a486:	19 f4       	brne	.+6      	; 0xa48e <initlevel+0x7e>
                      {
                            DrawMap2(lx ,ly ,lilblack);
    a488:	46 ed       	ldi	r20, 0xD6	; 214
    a48a:	58 e7       	ldi	r21, 0x78	; 120
    a48c:	02 c0       	rjmp	.+4      	; 0xa492 <initlevel+0x82>
                      }
                      else{
                          DrawMap2(lx ,ly ,blue);
    a48e:	4b ee       	ldi	r20, 0xEB	; 235
    a490:	58 e7       	ldi	r21, 0x78	; 120
    a492:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a496:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    a49a:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <ly>
    a49e:	90 91 76 09 	lds	r25, 0x0976	; 0x800976 <ly+0x1>
    a4a2:	01 96       	adiw	r24, 0x01	; 1
    a4a4:	90 93 76 09 	sts	0x0976, r25	; 0x800976 <ly+0x1>
    a4a8:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <ly>
    a4ac:	d6 cf       	rjmp	.-84     	; 0xa45a <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    a4ae:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a4b2:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a4b6:	01 96       	adiw	r24, 0x01	; 1
    a4b8:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    a4bc:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    a4c0:	c2 cf       	rjmp	.-124    	; 0xa446 <initlevel+0x36>
                          DrawMap2(lx ,ly ,blue);
                      } 
                    }
                }
     		}
}
    a4c2:	08 95       	ret

0000a4c4 <makeWater>:
    }

}
void makeWater(int x, int y,int z){
    //DrawMap2(x ,y  ,water0);
    waterxs[waterspwncnt] = x;
    a4c4:	e0 91 98 08 	lds	r30, 0x0898	; 0x800898 <waterspwncnt>
    a4c8:	f0 91 99 08 	lds	r31, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a4cc:	9f 01       	movw	r18, r30
    a4ce:	22 0f       	add	r18, r18
    a4d0:	33 1f       	adc	r19, r19
    a4d2:	d9 01       	movw	r26, r18
    a4d4:	a6 52       	subi	r26, 0x26	; 38
    a4d6:	b6 4f       	sbci	r27, 0xF6	; 246
    a4d8:	8d 93       	st	X+, r24
    a4da:	9c 93       	st	X, r25
    waterys[waterspwncnt] = y;
    a4dc:	d9 01       	movw	r26, r18
    a4de:	ad 56       	subi	r26, 0x6D	; 109
    a4e0:	b5 4f       	sbci	r27, 0xF5	; 245
    a4e2:	6d 93       	st	X+, r22
    a4e4:	7c 93       	st	X, r23
    waterscrolls[waterspwncnt] = z / 2;
    a4e6:	d9 01       	movw	r26, r18
    a4e8:	a9 58       	subi	r26, 0x89	; 137
    a4ea:	b6 4f       	sbci	r27, 0xF6	; 246
    a4ec:	ca 01       	movw	r24, r20
    a4ee:	57 fd       	sbrc	r21, 7
    a4f0:	01 96       	adiw	r24, 0x01	; 1
    a4f2:	95 95       	asr	r25
    a4f4:	87 95       	ror	r24
    a4f6:	8d 93       	st	X+, r24
    a4f8:	9c 93       	st	X, r25

    //waterxs[0] = x;
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
    a4fa:	31 96       	adiw	r30, 0x01	; 1
    a4fc:	f0 93 99 08 	sts	0x0899, r31	; 0x800899 <waterspwncnt+0x1>
    a500:	e0 93 98 08 	sts	0x0898, r30	; 0x800898 <waterspwncnt>
    a504:	08 95       	ret

0000a506 <updateWater>:
}
void updateWater(){
    a506:	6f 92       	push	r6
    a508:	7f 92       	push	r7
    a50a:	8f 92       	push	r8
    a50c:	9f 92       	push	r9
    a50e:	af 92       	push	r10
    a510:	bf 92       	push	r11
    a512:	cf 92       	push	r12
    a514:	df 92       	push	r13
    a516:	ef 92       	push	r14
    a518:	ff 92       	push	r15
    a51a:	0f 93       	push	r16
    a51c:	1f 93       	push	r17
    a51e:	cf 93       	push	r28
    a520:	df 93       	push	r29
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a522:	97 e7       	ldi	r25, 0x77	; 119
    a524:	c9 2e       	mov	r12, r25
    a526:	99 e0       	ldi	r25, 0x09	; 9
    a528:	d9 2e       	mov	r13, r25
    a52a:	23 e9       	ldi	r18, 0x93	; 147
    a52c:	e2 2e       	mov	r14, r18
    a52e:	2a e0       	ldi	r18, 0x0A	; 10
    a530:	f2 2e       	mov	r15, r18
    a532:	0a ed       	ldi	r16, 0xDA	; 218
    a534:	19 e0       	ldi	r17, 0x09	; 9
    a536:	a1 2c       	mov	r10, r1
    a538:	b1 2c       	mov	r11, r1
                waterscrolls[i] = waterscrolls[i+1];
              }
              
            }
            else{
                waterxs[i] = 40;
    a53a:	38 e2       	ldi	r19, 0x28	; 40
    a53c:	83 2e       	mov	r8, r19
    a53e:	91 2c       	mov	r9, r1
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a540:	40 91 98 08 	lds	r20, 0x0898	; 0x800898 <waterspwncnt>
    a544:	50 91 99 08 	lds	r21, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a548:	a4 16       	cp	r10, r20
    a54a:	b5 06       	cpc	r11, r21
    a54c:	0c f0       	brlt	.+2      	; 0xa550 <updateWater+0x4a>
    a54e:	7a c0       	rjmp	.+244    	; 0xa644 <updateWater+0x13e>
    {
        int max = 0;
        int x = waterxs[i];
    a550:	f8 01       	movw	r30, r16
    a552:	c0 81       	ld	r28, Z
        int y = waterys[i];
    a554:	f7 01       	movw	r30, r14
    a556:	d0 81       	ld	r29, Z
        if(waterscrolls[i] <= max)
    a558:	f6 01       	movw	r30, r12
    a55a:	20 81       	ld	r18, Z
    a55c:	31 81       	ldd	r19, Z+1	; 0x01
    a55e:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    a562:	12 16       	cp	r1, r18
    a564:	13 06       	cpc	r1, r19
    a566:	b4 f1       	brlt	.+108    	; 0xa5d4 <updateWater+0xce>
        {
            if(level == 5)
    a568:	85 30       	cpi	r24, 0x05	; 5
    a56a:	39 f5       	brne	.+78     	; 0xa5ba <updateWater+0xb4>
            {
                waterspwncnt = waterspwncnt - 1;
    a56c:	41 50       	subi	r20, 0x01	; 1
    a56e:	51 09       	sbc	r21, r1
    a570:	50 93 99 08 	sts	0x0899, r21	; 0x800899 <waterspwncnt+0x1>
    a574:	40 93 98 08 	sts	0x0898, r20	; 0x800898 <waterspwncnt>
                for(int i = 0; i <= waterspwncnt - 1; i++)
    a578:	27 e7       	ldi	r18, 0x77	; 119
    a57a:	39 e0       	ldi	r19, 0x09	; 9
    a57c:	a3 e9       	ldi	r26, 0x93	; 147
    a57e:	ba e0       	ldi	r27, 0x0A	; 10
    a580:	8a ed       	ldi	r24, 0xDA	; 218
    a582:	68 2e       	mov	r6, r24
    a584:	89 e0       	ldi	r24, 0x09	; 9
    a586:	78 2e       	mov	r7, r24
    a588:	80 e0       	ldi	r24, 0x00	; 0
    a58a:	90 e0       	ldi	r25, 0x00	; 0
    a58c:	84 17       	cp	r24, r20
    a58e:	95 07       	cpc	r25, r21
    a590:	1c f5       	brge	.+70     	; 0xa5d8 <updateWater+0xd2>
                {
                waterxs[i] = waterxs[i + 1];
    a592:	01 96       	adiw	r24, 0x01	; 1
    a594:	f3 01       	movw	r30, r6
    a596:	62 81       	ldd	r22, Z+2	; 0x02
    a598:	73 81       	ldd	r23, Z+3	; 0x03
    a59a:	61 93       	st	Z+, r22
    a59c:	71 93       	st	Z+, r23
    a59e:	3f 01       	movw	r6, r30
                waterys[i] = waterys[i + 1];
    a5a0:	12 96       	adiw	r26, 0x02	; 2
    a5a2:	6d 91       	ld	r22, X+
    a5a4:	7c 91       	ld	r23, X
    a5a6:	13 97       	sbiw	r26, 0x03	; 3
    a5a8:	6d 93       	st	X+, r22
    a5aa:	7d 93       	st	X+, r23
                waterscrolls[i] = waterscrolls[i+1];
    a5ac:	f9 01       	movw	r30, r18
    a5ae:	62 81       	ldd	r22, Z+2	; 0x02
    a5b0:	73 81       	ldd	r23, Z+3	; 0x03
    a5b2:	61 93       	st	Z+, r22
    a5b4:	71 93       	st	Z+, r23
    a5b6:	9f 01       	movw	r18, r30
    a5b8:	e9 cf       	rjmp	.-46     	; 0xa58c <updateWater+0x86>
              }
              
            }
            else{
                waterxs[i] = 40;
    a5ba:	f8 01       	movw	r30, r16
    a5bc:	91 82       	std	Z+1, r9	; 0x01
    a5be:	80 82       	st	Z, r8
                waterys[i] = 40;
    a5c0:	f7 01       	movw	r30, r14
    a5c2:	91 82       	std	Z+1, r9	; 0x01
    a5c4:	80 82       	st	Z, r8
                waterscrolls[i] = 40;
    a5c6:	f6 01       	movw	r30, r12
    a5c8:	91 82       	std	Z+1, r9	; 0x01
    a5ca:	80 82       	st	Z, r8
                waterspwncnt = 0;
    a5cc:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    a5d0:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
            }
        }
if(level == 5)
    a5d4:	85 30       	cpi	r24, 0x05	; 5
    a5d6:	51 f4       	brne	.+20     	; 0xa5ec <updateWater+0xe6>
{
    if (aniframe <= 10)
    a5d8:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a5dc:	8b 30       	cpi	r24, 0x0B	; 11
    a5de:	18 f4       	brcc	.+6      	; 0xa5e6 <updateWater+0xe0>
    {
        DrawMap2(x ,y,fire1);
    a5e0:	45 ee       	ldi	r20, 0xE5	; 229
    a5e2:	58 e7       	ldi	r21, 0x78	; 120
    a5e4:	1f c0       	rjmp	.+62     	; 0xa624 <updateWater+0x11e>
    } 
    else  
    {
        DrawMap2(x ,y,fire2);
    a5e6:	4f ed       	ldi	r20, 0xDF	; 223
    a5e8:	58 e7       	ldi	r21, 0x78	; 120
    a5ea:	1c c0       	rjmp	.+56     	; 0xa624 <updateWater+0x11e>
    } 
}
else{
    if (aniframe <= 7)
    a5ec:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a5f0:	88 30       	cpi	r24, 0x08	; 8
    a5f2:	30 f4       	brcc	.+12     	; 0xa600 <updateWater+0xfa>
    {
        DrawMap2(x ,y,water3);
    a5f4:	4c e7       	ldi	r20, 0x7C	; 124
    a5f6:	58 e7       	ldi	r21, 0x78	; 120
    a5f8:	6d 2f       	mov	r22, r29
    a5fa:	8c 2f       	mov	r24, r28
    a5fc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    } 
            if (aniframe > 7 && aniframe <= 14 )   
    a600:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a604:	88 50       	subi	r24, 0x08	; 8
    a606:	87 30       	cpi	r24, 0x07	; 7
    a608:	30 f4       	brcc	.+12     	; 0xa616 <updateWater+0x110>
    {
        DrawMap2(x ,y,water1);
    a60a:	48 e8       	ldi	r20, 0x88	; 136
    a60c:	58 e7       	ldi	r21, 0x78	; 120
    a60e:	6d 2f       	mov	r22, r29
    a610:	8c 2f       	mov	r24, r28
    a612:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    } 
    if (aniframe > 14 && aniframe <= 20)
    a616:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a61a:	8f 50       	subi	r24, 0x0F	; 15
    a61c:	86 30       	cpi	r24, 0x06	; 6
    a61e:	30 f4       	brcc	.+12     	; 0xa62c <updateWater+0x126>
    {
        DrawMap2(x ,y,water2);
    a620:	42 e8       	ldi	r20, 0x82	; 130
    a622:	58 e7       	ldi	r21, 0x78	; 120
    a624:	6d 2f       	mov	r22, r29
    a626:	8c 2f       	mov	r24, r28
    a628:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a62c:	ff ef       	ldi	r31, 0xFF	; 255
    a62e:	af 1a       	sub	r10, r31
    a630:	bf 0a       	sbc	r11, r31
    a632:	0e 5f       	subi	r16, 0xFE	; 254
    a634:	1f 4f       	sbci	r17, 0xFF	; 255
    a636:	82 e0       	ldi	r24, 0x02	; 2
    a638:	e8 0e       	add	r14, r24
    a63a:	f1 1c       	adc	r15, r1
    a63c:	e2 e0       	ldi	r30, 0x02	; 2
    a63e:	ce 0e       	add	r12, r30
    a640:	d1 1c       	adc	r13, r1
    a642:	7e cf       	rjmp	.-260    	; 0xa540 <updateWater+0x3a>
//if (aniframe > 15 && aniframe <= 20){
 //   DrawMap2(x ,y,water3);
//}
    }
    
}
    a644:	df 91       	pop	r29
    a646:	cf 91       	pop	r28
    a648:	1f 91       	pop	r17
    a64a:	0f 91       	pop	r16
    a64c:	ff 90       	pop	r15
    a64e:	ef 90       	pop	r14
    a650:	df 90       	pop	r13
    a652:	cf 90       	pop	r12
    a654:	bf 90       	pop	r11
    a656:	af 90       	pop	r10
    a658:	9f 90       	pop	r9
    a65a:	8f 90       	pop	r8
    a65c:	7f 90       	pop	r7
    a65e:	6f 90       	pop	r6
    a660:	08 95       	ret

0000a662 <makeBanana2>:
    destX=0;
}
}

void makeBanana2(int x, int y,int z)
{
    a662:	ef 92       	push	r14
    a664:	ff 92       	push	r15
    a666:	0f 93       	push	r16
    a668:	1f 93       	push	r17
    a66a:	cf 93       	push	r28
    a66c:	df 93       	push	r29
    a66e:	8a 01       	movw	r16, r20
	int lx;
	int ly;
	lx = x + Levelx;
    a670:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    a674:	82 0f       	add	r24, r18
    a676:	91 1d       	adc	r25, r1
	ly = y;
	lx = lx >> 4;
	ly = ly >> 4;  
    a678:	7b 01       	movw	r14, r22
    a67a:	54 e0       	ldi	r21, 0x04	; 4
    a67c:	f5 94       	asr	r15
    a67e:	e7 94       	ror	r14
    a680:	5a 95       	dec	r21
    a682:	e1 f7       	brne	.-8      	; 0xa67c <makeBanana2+0x1a>
	lx = lx * 2 + destX;
    a684:	64 e0       	ldi	r22, 0x04	; 4
    a686:	95 95       	asr	r25
    a688:	87 95       	ror	r24
    a68a:	6a 95       	dec	r22
    a68c:	e1 f7       	brne	.-8      	; 0xa686 <makeBanana2+0x24>
    a68e:	88 0f       	add	r24, r24
    a690:	99 1f       	adc	r25, r25
    a692:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    a696:	82 0f       	add	r24, r18
    a698:	91 1d       	adc	r25, r1
	if (lx >= 32 ) lx = lx - 32;
    a69a:	80 32       	cpi	r24, 0x20	; 32
    a69c:	91 05       	cpc	r25, r1
    a69e:	0c f0       	brlt	.+2      	; 0xa6a2 <makeBanana2+0x40>
    a6a0:	80 97       	sbiw	r24, 0x20	; 32
    lx = lx - 2;
    a6a2:	ec 01       	movw	r28, r24
    a6a4:	22 97       	sbiw	r28, 0x02	; 2
    ly = (ly * 2) - 2;
    a6a6:	81 e0       	ldi	r24, 0x01	; 1
    a6a8:	e8 1a       	sub	r14, r24
    a6aa:	f1 08       	sbc	r15, r1
    a6ac:	ee 0c       	add	r14, r14
    a6ae:	ff 1c       	adc	r15, r15
	DrawMap2(  lx ,  ly  ,banana );
    a6b0:	42 ef       	ldi	r20, 0xF2	; 242
    a6b2:	58 e7       	ldi	r21, 0x78	; 120
    a6b4:	6e 2d       	mov	r22, r14
    a6b6:	8c 2f       	mov	r24, r28
    a6b8:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    bananax = lx;
    a6bc:	d0 93 3c 0a 	sts	0x0A3C, r29	; 0x800a3c <bananax+0x1>
    a6c0:	c0 93 3b 0a 	sts	0x0A3B, r28	; 0x800a3b <bananax>
	bananay = ly;
    a6c4:	f0 92 ab 09 	sts	0x09AB, r15	; 0x8009ab <bananay+0x1>
    a6c8:	e0 92 aa 09 	sts	0x09AA, r14	; 0x8009aa <bananay>
    //UZEMHEX='\n';
	bananaxs[banspwncnt] = bananax;
    a6cc:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a6d0:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a6d4:	c9 01       	movw	r24, r18
    a6d6:	88 0f       	add	r24, r24
    a6d8:	99 1f       	adc	r25, r25
    a6da:	fc 01       	movw	r30, r24
    a6dc:	e2 55       	subi	r30, 0x52	; 82
    a6de:	f6 4f       	sbci	r31, 0xF6	; 246
    a6e0:	d1 83       	std	Z+1, r29	; 0x01
    a6e2:	c0 83       	st	Z, r28
	bananays[banspwncnt] = bananay;
    a6e4:	fc 01       	movw	r30, r24
    a6e6:	ea 53       	subi	r30, 0x3A	; 58
    a6e8:	f6 4f       	sbci	r31, 0xF6	; 246
    a6ea:	f1 82       	std	Z+1, r15	; 0x01
    a6ec:	e0 82       	st	Z, r14
    bananascrolls[banspwncnt] = z;
    a6ee:	fc 01       	movw	r30, r24
    a6f0:	ec 58       	subi	r30, 0x8C	; 140
    a6f2:	f5 4f       	sbci	r31, 0xF5	; 245
    a6f4:	11 83       	std	Z+1, r17	; 0x01
    a6f6:	00 83       	st	Z, r16
    //UZEMHEX='\n';
	banspwncnt = banspwncnt + 1;
    a6f8:	2f 5f       	subi	r18, 0xFF	; 255
    a6fa:	3f 4f       	sbci	r19, 0xFF	; 255
    a6fc:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a700:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
    a704:	df 91       	pop	r29
    a706:	cf 91       	pop	r28
    a708:	1f 91       	pop	r17
    a70a:	0f 91       	pop	r16
    a70c:	ff 90       	pop	r15
    a70e:	ef 90       	pop	r14
    a710:	08 95       	ret

0000a712 <printheadline>:
if (bl > 0 && bl <= 20) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,0, score0 );  
    a712:	4a e3       	ldi	r20, 0x3A	; 58
    a714:	58 e7       	ldi	r21, 0x78	; 120
    a716:	60 e0       	ldi	r22, 0x00	; 0
    a718:	80 e0       	ldi	r24, 0x00	; 0
    a71a:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 4 ,0,score,4);
    a71e:	40 91 ac 09 	lds	r20, 0x09AC	; 0x8009ac <score>
    a722:	50 91 ad 09 	lds	r21, 0x09AD	; 0x8009ad <score+0x1>
    a726:	24 e0       	ldi	r18, 0x04	; 4
    a728:	30 e0       	ldi	r19, 0x00	; 0
    a72a:	60 e0       	ldi	r22, 0x00	; 0
    a72c:	70 e0       	ldi	r23, 0x00	; 0
    a72e:	84 e0       	ldi	r24, 0x04	; 4
    a730:	90 e0       	ldi	r25, 0x00	; 0
    a732:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,0, live0 ); 
    a736:	4d e1       	ldi	r20, 0x1D	; 29
    a738:	58 e7       	ldi	r21, 0x78	; 120
    a73a:	60 e0       	ldi	r22, 0x00	; 0
    a73c:	8b e0       	ldi	r24, 0x0B	; 11
    a73e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 14 ,0,lives,1);  
    a742:	40 91 2e 0a 	lds	r20, 0x0A2E	; 0x800a2e <lives>
    a746:	50 e0       	ldi	r21, 0x00	; 0
    a748:	21 e0       	ldi	r18, 0x01	; 1
    a74a:	30 e0       	ldi	r19, 0x00	; 0
    a74c:	60 e0       	ldi	r22, 0x00	; 0
    a74e:	70 e0       	ldi	r23, 0x00	; 0
    a750:	8e e0       	ldi	r24, 0x0E	; 14
    a752:	90 e0       	ldi	r25, 0x00	; 0
    a754:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
DrawMap2(16,0, level0 ); 
    a758:	4e e2       	ldi	r20, 0x2E	; 46
    a75a:	58 e7       	ldi	r21, 0x78	; 120
    a75c:	60 e0       	ldi	r22, 0x00	; 0
    a75e:	80 e1       	ldi	r24, 0x10	; 16
    a760:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 20 ,0, level,1);  
    a764:	40 91 c4 09 	lds	r20, 0x09C4	; 0x8009c4 <level>
    a768:	50 e0       	ldi	r21, 0x00	; 0
    a76a:	21 e0       	ldi	r18, 0x01	; 1
    a76c:	30 e0       	ldi	r19, 0x00	; 0
    a76e:	60 e0       	ldi	r22, 0x00	; 0
    a770:	70 e0       	ldi	r23, 0x00	; 0
    a772:	84 e1       	ldi	r24, 0x14	; 20
    a774:	90 e0       	ldi	r25, 0x00	; 0
    a776:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
DrawMap2(23,0, time0 );
    a77a:	48 e1       	ldi	r20, 0x18	; 24
    a77c:	58 e7       	ldi	r21, 0x78	; 120
    a77e:	60 e0       	ldi	r22, 0x00	; 0
    a780:	87 e1       	ldi	r24, 0x17	; 23
    a782:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    a786:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    a78a:	50 e0       	ldi	r21, 0x00	; 0
    a78c:	22 e0       	ldi	r18, 0x02	; 2
    a78e:	30 e0       	ldi	r19, 0x00	; 0
    a790:	60 e0       	ldi	r22, 0x00	; 0
    a792:	70 e0       	ldi	r23, 0x00	; 0
    a794:	8a e1       	ldi	r24, 0x1A	; 26
    a796:	90 e0       	ldi	r25, 0x00	; 0
    a798:	0c 94 d6 50 	jmp	0xa1ac	; 0xa1ac <printtileint>

0000a79c <updatepoints>:
}
void updatepoints()
{
if (introplaying) return;
    a79c:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    a7a0:	81 11       	cpse	r24, r1
    a7a2:	0c c0       	rjmp	.+24     	; 0xa7bc <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    a7a4:	40 91 ac 09 	lds	r20, 0x09AC	; 0x8009ac <score>
    a7a8:	50 91 ad 09 	lds	r21, 0x09AD	; 0x8009ad <score+0x1>
    a7ac:	24 e0       	ldi	r18, 0x04	; 4
    a7ae:	30 e0       	ldi	r19, 0x00	; 0
    a7b0:	60 e0       	ldi	r22, 0x00	; 0
    a7b2:	70 e0       	ldi	r23, 0x00	; 0
    a7b4:	84 e0       	ldi	r24, 0x04	; 4
    a7b6:	90 e0       	ldi	r25, 0x00	; 0
    a7b8:	0c 94 d6 50 	jmp	0xa1ac	; 0xa1ac <printtileint>
    a7bc:	08 95       	ret

0000a7be <checkBanana>:
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
int checkBanana(int x,int y,int z)
{
    a7be:	4f 92       	push	r4
    a7c0:	5f 92       	push	r5
    a7c2:	6f 92       	push	r6
    a7c4:	7f 92       	push	r7
    a7c6:	8f 92       	push	r8
    a7c8:	9f 92       	push	r9
    a7ca:	af 92       	push	r10
    a7cc:	bf 92       	push	r11
    a7ce:	cf 92       	push	r12
    a7d0:	df 92       	push	r13
    a7d2:	ef 92       	push	r14
    a7d4:	ff 92       	push	r15
    a7d6:	0f 93       	push	r16
    a7d8:	1f 93       	push	r17
    a7da:	cf 93       	push	r28
    a7dc:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    a7de:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    a7e2:	82 0f       	add	r24, r18
    a7e4:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    a7e6:	5b 01       	movw	r10, r22
    a7e8:	54 e0       	ldi	r21, 0x04	; 4
    a7ea:	b5 94       	asr	r11
    a7ec:	a7 94       	ror	r10
    a7ee:	5a 95       	dec	r21
    a7f0:	e1 f7       	brne	.-8      	; 0xa7ea <checkBanana+0x2c>
lx = lx * 2 + destX;
    a7f2:	ec 01       	movw	r28, r24
    a7f4:	64 e0       	ldi	r22, 0x04	; 4
    a7f6:	d5 95       	asr	r29
    a7f8:	c7 95       	ror	r28
    a7fa:	6a 95       	dec	r22
    a7fc:	e1 f7       	brne	.-8      	; 0xa7f6 <checkBanana+0x38>
    a7fe:	cc 0f       	add	r28, r28
    a800:	dd 1f       	adc	r29, r29
    a802:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    a806:	c8 0f       	add	r28, r24
    a808:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    a80a:	c0 32       	cpi	r28, 0x20	; 32
    a80c:	d1 05       	cpc	r29, r1
    a80e:	0c f0       	brlt	.+2      	; 0xa812 <checkBanana+0x54>
    a810:	a0 97       	sbiw	r28, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
    a812:	41 e0       	ldi	r20, 0x01	; 1
    a814:	a4 1a       	sub	r10, r20
    a816:	b1 08       	sbc	r11, r1
    a818:	aa 0c       	add	r10, r10
    a81a:	bb 1c       	adc	r11, r11
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
{
    if(bananascrolls[i] <= scrolltiles - 10)
    a81c:	60 90 c3 0a 	lds	r6, 0x0AC3	; 0x800ac3 <scrolltiles>
    a820:	71 2c       	mov	r7, r1
    a822:	59 e0       	ldi	r21, 0x09	; 9
    a824:	65 1a       	sub	r6, r21
    a826:	71 08       	sbc	r7, r1
    a828:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a82c:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a830:	46 ec       	ldi	r20, 0xC6	; 198
    a832:	44 2e       	mov	r4, r20
    a834:	49 e0       	ldi	r20, 0x09	; 9
    a836:	54 2e       	mov	r5, r20
    a838:	ae ea       	ldi	r26, 0xAE	; 174
    a83a:	b9 e0       	ldi	r27, 0x09	; 9
    a83c:	84 e7       	ldi	r24, 0x74	; 116
    a83e:	9a e0       	ldi	r25, 0x0A	; 10
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a840:	00 e0       	ldi	r16, 0x00	; 0
    a842:	10 e0       	ldi	r17, 0x00	; 0
    a844:	02 17       	cp	r16, r18
    a846:	13 07       	cpc	r17, r19
    a848:	0c f0       	brlt	.+2      	; 0xa84c <checkBanana+0x8e>
    a84a:	9c c0       	rjmp	.+312    	; 0xa984 <checkBanana+0x1c6>
{
    if(bananascrolls[i] <= scrolltiles - 10)
    a84c:	fc 01       	movw	r30, r24
    a84e:	40 81       	ld	r20, Z
    a850:	51 81       	ldd	r21, Z+1	; 0x01
    a852:	46 15       	cp	r20, r6
    a854:	57 05       	cpc	r21, r7
    a856:	74 f5       	brge	.+92     	; 0xa8b4 <checkBanana+0xf6>
    {
        bananaxs[i] = 0;
    a858:	11 96       	adiw	r26, 0x01	; 1
    a85a:	1c 92       	st	X, r1
    a85c:	1e 92       	st	-X, r1
        bananays[i] = 0;
    a85e:	f2 01       	movw	r30, r4
    a860:	11 82       	std	Z+1, r1	; 0x01
    a862:	10 82       	st	Z, r1
        bananascrolls[i] = 0;
    a864:	fc 01       	movw	r30, r24
    a866:	11 82       	std	Z+1, r1	; 0x01
    a868:	10 82       	st	Z, r1
    a86a:	a9 01       	movw	r20, r18
    a86c:	41 50       	subi	r20, 0x01	; 1
    a86e:	51 09       	sbc	r21, r1
    a870:	6a 01       	movw	r12, r20
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    a872:	22 30       	cpi	r18, 0x02	; 2
    a874:	31 05       	cpc	r19, r1
    a876:	14 f4       	brge	.+4      	; 0xa87c <checkBanana+0xbe>
            bananaxs[j] = bananaxs[j + 1];
            bananays[j] = bananays[j + 1];
            bananascrolls[j] = bananascrolls[j+1];
            }
    }
    banspwncnt = banspwncnt - 1;
    a878:	96 01       	movw	r18, r12
    a87a:	7c c0       	rjmp	.+248    	; 0xa974 <checkBanana+0x1b6>
    a87c:	7c 01       	movw	r14, r24
    a87e:	b2 01       	movw	r22, r4
    a880:	ad 01       	movw	r20, r26
    a882:	98 01       	movw	r18, r16
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    a884:	2c 15       	cp	r18, r12
    a886:	3d 05       	cpc	r19, r13
    a888:	bc f7       	brge	.-18     	; 0xa878 <checkBanana+0xba>
            {
            bananaxs[j] = bananaxs[j + 1];
    a88a:	2f 5f       	subi	r18, 0xFF	; 255
    a88c:	3f 4f       	sbci	r19, 0xFF	; 255
    a88e:	fa 01       	movw	r30, r20
    a890:	82 80       	ldd	r8, Z+2	; 0x02
    a892:	93 80       	ldd	r9, Z+3	; 0x03
    a894:	81 92       	st	Z+, r8
    a896:	91 92       	st	Z+, r9
    a898:	af 01       	movw	r20, r30
            bananays[j] = bananays[j + 1];
    a89a:	fb 01       	movw	r30, r22
    a89c:	82 80       	ldd	r8, Z+2	; 0x02
    a89e:	93 80       	ldd	r9, Z+3	; 0x03
    a8a0:	81 92       	st	Z+, r8
    a8a2:	91 92       	st	Z+, r9
    a8a4:	bf 01       	movw	r22, r30
            bananascrolls[j] = bananascrolls[j+1];
    a8a6:	f7 01       	movw	r30, r14
    a8a8:	82 80       	ldd	r8, Z+2	; 0x02
    a8aa:	93 80       	ldd	r9, Z+3	; 0x03
    a8ac:	81 92       	st	Z+, r8
    a8ae:	91 92       	st	Z+, r9
    a8b0:	7f 01       	movw	r14, r30
    a8b2:	e8 cf       	rjmp	.-48     	; 0xa884 <checkBanana+0xc6>
            }
    }
    banspwncnt = banspwncnt - 1;
    }
	else if(bananaxs[i] == lx && bananays[i] == ly)
    a8b4:	4d 91       	ld	r20, X+
    a8b6:	5c 91       	ld	r21, X
    a8b8:	11 97       	sbiw	r26, 0x01	; 1
    a8ba:	c4 17       	cp	r28, r20
    a8bc:	d5 07       	cpc	r29, r21
    a8be:	09 f0       	breq	.+2      	; 0xa8c2 <checkBanana+0x104>
    a8c0:	59 c0       	rjmp	.+178    	; 0xa974 <checkBanana+0x1b6>
    a8c2:	f2 01       	movw	r30, r4
    a8c4:	40 81       	ld	r20, Z
    a8c6:	51 81       	ldd	r21, Z+1	; 0x01
    a8c8:	a4 16       	cp	r10, r20
    a8ca:	b5 06       	cpc	r11, r21
    a8cc:	09 f0       	breq	.+2      	; 0xa8d0 <checkBanana+0x112>
    a8ce:	52 c0       	rjmp	.+164    	; 0xa974 <checkBanana+0x1b6>
    a8d0:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a8d4:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
	{ 
        DrawMap2(  lx    ,  ly,bigblue0 ); 
    a8d8:	4a e5       	ldi	r20, 0x5A	; 90
    a8da:	59 e7       	ldi	r21, 0x79	; 121
    a8dc:	6a 2d       	mov	r22, r10
    a8de:	8c 2f       	mov	r24, r28
    a8e0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	    DrawMap2(  lx    ,  ly + 1,banana2 );
    a8e4:	61 e0       	ldi	r22, 0x01	; 1
    a8e6:	6a 0d       	add	r22, r10
    a8e8:	4e ee       	ldi	r20, 0xEE	; 238
    a8ea:	58 e7       	ldi	r21, 0x78	; 120
    a8ec:	8c 2f       	mov	r24, r28
    a8ee:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        bananaxs[i] = 0;
    a8f2:	f8 01       	movw	r30, r16
    a8f4:	ee 0f       	add	r30, r30
    a8f6:	ff 1f       	adc	r31, r31
    a8f8:	df 01       	movw	r26, r30
    a8fa:	a2 55       	subi	r26, 0x52	; 82
    a8fc:	b6 4f       	sbci	r27, 0xF6	; 246
    a8fe:	11 96       	adiw	r26, 0x01	; 1
    a900:	1c 92       	st	X, r1
    a902:	1e 92       	st	-X, r1
        bananays[i] = 0;
    a904:	ef 01       	movw	r28, r30
    a906:	ca 53       	subi	r28, 0x3A	; 58
    a908:	d6 4f       	sbci	r29, 0xF6	; 246
    a90a:	19 82       	std	Y+1, r1	; 0x01
    a90c:	18 82       	st	Y, r1
        bananascrolls[i] = 0;
    a90e:	ec 58       	subi	r30, 0x8C	; 140
    a910:	f5 4f       	sbci	r31, 0xF5	; 245
    a912:	11 82       	std	Z+1, r1	; 0x01
    a914:	10 82       	st	Z, r1
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    a916:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a91a:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a91e:	c9 01       	movw	r24, r18
    a920:	01 97       	sbiw	r24, 0x01	; 1
    a922:	22 30       	cpi	r18, 0x02	; 2
    a924:	31 05       	cpc	r19, r1
    a926:	94 f4       	brge	.+36     	; 0xa94c <checkBanana+0x18e>
    }
   // else{
        //bananaxs[i] = 900;
        //bananays[i] = 900;
    //}
	banspwncnt = banspwncnt - 1;
    a928:	90 93 9b 08 	sts	0x089B, r25	; 0x80089b <banspwncnt+0x1>
    a92c:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <banspwncnt>
    score = score + 5;
    a930:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <score>
    a934:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <score+0x1>
    a938:	05 96       	adiw	r24, 0x05	; 5
    a93a:	90 93 ad 09 	sts	0x09AD, r25	; 0x8009ad <score+0x1>
    a93e:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <score>
    updatepoints();
    a942:	0e 94 ce 53 	call	0xa79c	; 0xa79c <updatepoints>
	return 1;
    a946:	81 e0       	ldi	r24, 0x01	; 1
    a948:	90 e0       	ldi	r25, 0x00	; 0
    a94a:	22 c0       	rjmp	.+68     	; 0xa990 <checkBanana+0x1d2>
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    a94c:	08 17       	cp	r16, r24
    a94e:	19 07       	cpc	r17, r25
    a950:	5c f7       	brge	.-42     	; 0xa928 <checkBanana+0x16a>
            {
            bananaxs[j] = bananaxs[j + 1];
    a952:	0f 5f       	subi	r16, 0xFF	; 255
    a954:	1f 4f       	sbci	r17, 0xFF	; 255
    a956:	12 96       	adiw	r26, 0x02	; 2
    a958:	2d 91       	ld	r18, X+
    a95a:	3c 91       	ld	r19, X
    a95c:	13 97       	sbiw	r26, 0x03	; 3
    a95e:	2d 93       	st	X+, r18
    a960:	3d 93       	st	X+, r19
            bananays[j] = bananays[j + 1];
    a962:	2a 81       	ldd	r18, Y+2	; 0x02
    a964:	3b 81       	ldd	r19, Y+3	; 0x03
    a966:	29 93       	st	Y+, r18
    a968:	39 93       	st	Y+, r19
            bananascrolls[j] = bananascrolls[j+1];
    a96a:	22 81       	ldd	r18, Z+2	; 0x02
    a96c:	33 81       	ldd	r19, Z+3	; 0x03
    a96e:	21 93       	st	Z+, r18
    a970:	31 93       	st	Z+, r19
    a972:	ec cf       	rjmp	.-40     	; 0xa94c <checkBanana+0x18e>
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a974:	0f 5f       	subi	r16, 0xFF	; 255
    a976:	1f 4f       	sbci	r17, 0xFF	; 255
    a978:	f2 e0       	ldi	r31, 0x02	; 2
    a97a:	4f 0e       	add	r4, r31
    a97c:	51 1c       	adc	r5, r1
    a97e:	12 96       	adiw	r26, 0x02	; 2
    a980:	02 96       	adiw	r24, 0x02	; 2
    a982:	60 cf       	rjmp	.-320    	; 0xa844 <checkBanana+0x86>
    a984:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a988:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
    updatepoints();
	return 1;
	}
}

return 0;
    a98c:	80 e0       	ldi	r24, 0x00	; 0
    a98e:	90 e0       	ldi	r25, 0x00	; 0
	
}
    a990:	df 91       	pop	r29
    a992:	cf 91       	pop	r28
    a994:	1f 91       	pop	r17
    a996:	0f 91       	pop	r16
    a998:	ff 90       	pop	r15
    a99a:	ef 90       	pop	r14
    a99c:	df 90       	pop	r13
    a99e:	cf 90       	pop	r12
    a9a0:	bf 90       	pop	r11
    a9a2:	af 90       	pop	r10
    a9a4:	9f 90       	pop	r9
    a9a6:	8f 90       	pop	r8
    a9a8:	7f 90       	pop	r7
    a9aa:	6f 90       	pop	r6
    a9ac:	5f 90       	pop	r5
    a9ae:	4f 90       	pop	r4
    a9b0:	08 95       	ret

0000a9b2 <checkcollide>:
int checkcollide(int x, int y,int z,int playerNum)
{
    a9b2:	7f 92       	push	r7
    a9b4:	8f 92       	push	r8
    a9b6:	9f 92       	push	r9
    a9b8:	af 92       	push	r10
    a9ba:	bf 92       	push	r11
    a9bc:	cf 92       	push	r12
    a9be:	df 92       	push	r13
    a9c0:	ef 92       	push	r14
    a9c2:	ff 92       	push	r15
    a9c4:	0f 93       	push	r16
    a9c6:	1f 93       	push	r17
    a9c8:	cf 93       	push	r28
    a9ca:	df 93       	push	r29
    a9cc:	7c 01       	movw	r14, r24
    a9ce:	6b 01       	movw	r12, r22
    a9d0:	4a 01       	movw	r8, r20
    a9d2:	59 01       	movw	r10, r18
int lx;
int ly;
char bl;
lx = x + Levelx;
    a9d4:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    a9d8:	87 01       	movw	r16, r14
    a9da:	08 0f       	add	r16, r24
    a9dc:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    a9de:	84 e0       	ldi	r24, 0x04	; 4
    a9e0:	15 95       	asr	r17
    a9e2:	07 95       	ror	r16
    a9e4:	8a 95       	dec	r24
    a9e6:	e1 f7       	brne	.-8      	; 0xa9e0 <checkcollide+0x2e>
ly = ly >> 4;  
    a9e8:	eb 01       	movw	r28, r22
    a9ea:	94 e0       	ldi	r25, 0x04	; 4
    a9ec:	d5 95       	asr	r29
    a9ee:	c7 95       	ror	r28
    a9f0:	9a 95       	dec	r25
    a9f2:	e1 f7       	brne	.-8      	; 0xa9ec <checkcollide+0x3a>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a9f4:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    a9f8:	81 11       	cpse	r24, r1
    a9fa:	0f c0       	rjmp	.+30     	; 0xaa1a <checkcollide+0x68>
    a9fc:	9a e5       	ldi	r25, 0x5A	; 90
    a9fe:	9c 9f       	mul	r25, r28
    aa00:	f0 01       	movw	r30, r0
    aa02:	9d 9f       	mul	r25, r29
    aa04:	f0 0d       	add	r31, r0
    aa06:	11 24       	eor	r1, r1
    aa08:	e0 0f       	add	r30, r16
    aa0a:	f1 1f       	adc	r31, r17
    aa0c:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa10:	e9 0f       	add	r30, r25
    aa12:	f1 1d       	adc	r31, r1
    aa14:	e1 58       	subi	r30, 0x81	; 129
    aa16:	fa 4c       	sbci	r31, 0xCA	; 202
    aa18:	98 c0       	rjmp	.+304    	; 0xab4a <checkcollide+0x198>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa1a:	81 30       	cpi	r24, 0x01	; 1
    aa1c:	79 f4       	brne	.+30     	; 0xaa3c <checkcollide+0x8a>
    aa1e:	9a e5       	ldi	r25, 0x5A	; 90
    aa20:	9c 9f       	mul	r25, r28
    aa22:	f0 01       	movw	r30, r0
    aa24:	9d 9f       	mul	r25, r29
    aa26:	f0 0d       	add	r31, r0
    aa28:	11 24       	eor	r1, r1
    aa2a:	e0 0f       	add	r30, r16
    aa2c:	f1 1f       	adc	r31, r17
    aa2e:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa32:	e9 0f       	add	r30, r25
    aa34:	f1 1d       	adc	r31, r1
    aa36:	ed 56       	subi	r30, 0x6D	; 109
    aa38:	ff 4c       	sbci	r31, 0xCF	; 207
    aa3a:	87 c0       	rjmp	.+270    	; 0xab4a <checkcollide+0x198>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa3c:	82 30       	cpi	r24, 0x02	; 2
    aa3e:	79 f4       	brne	.+30     	; 0xaa5e <checkcollide+0xac>
    aa40:	9a e5       	ldi	r25, 0x5A	; 90
    aa42:	9c 9f       	mul	r25, r28
    aa44:	f0 01       	movw	r30, r0
    aa46:	9d 9f       	mul	r25, r29
    aa48:	f0 0d       	add	r31, r0
    aa4a:	11 24       	eor	r1, r1
    aa4c:	e0 0f       	add	r30, r16
    aa4e:	f1 1f       	adc	r31, r17
    aa50:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa54:	e9 0f       	add	r30, r25
    aa56:	f1 1d       	adc	r31, r1
    aa58:	e9 55       	subi	r30, 0x59	; 89
    aa5a:	f4 4d       	sbci	r31, 0xD4	; 212
    aa5c:	76 c0       	rjmp	.+236    	; 0xab4a <checkcollide+0x198>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa5e:	83 30       	cpi	r24, 0x03	; 3
    aa60:	79 f4       	brne	.+30     	; 0xaa80 <checkcollide+0xce>
    aa62:	9a e5       	ldi	r25, 0x5A	; 90
    aa64:	9c 9f       	mul	r25, r28
    aa66:	f0 01       	movw	r30, r0
    aa68:	9d 9f       	mul	r25, r29
    aa6a:	f0 0d       	add	r31, r0
    aa6c:	11 24       	eor	r1, r1
    aa6e:	e0 0f       	add	r30, r16
    aa70:	f1 1f       	adc	r31, r17
    aa72:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa76:	e9 0f       	add	r30, r25
    aa78:	f1 1d       	adc	r31, r1
    aa7a:	e5 54       	subi	r30, 0x45	; 69
    aa7c:	f9 4d       	sbci	r31, 0xD9	; 217
    aa7e:	65 c0       	rjmp	.+202    	; 0xab4a <checkcollide+0x198>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa80:	84 30       	cpi	r24, 0x04	; 4
    aa82:	79 f4       	brne	.+30     	; 0xaaa2 <checkcollide+0xf0>
    aa84:	9a e5       	ldi	r25, 0x5A	; 90
    aa86:	9c 9f       	mul	r25, r28
    aa88:	f0 01       	movw	r30, r0
    aa8a:	9d 9f       	mul	r25, r29
    aa8c:	f0 0d       	add	r31, r0
    aa8e:	11 24       	eor	r1, r1
    aa90:	e0 0f       	add	r30, r16
    aa92:	f1 1f       	adc	r31, r17
    aa94:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa98:	e9 0f       	add	r30, r25
    aa9a:	f1 1d       	adc	r31, r1
    aa9c:	e1 53       	subi	r30, 0x31	; 49
    aa9e:	fe 4d       	sbci	r31, 0xDE	; 222
    aaa0:	54 c0       	rjmp	.+168    	; 0xab4a <checkcollide+0x198>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aaa2:	85 30       	cpi	r24, 0x05	; 5
    aaa4:	79 f4       	brne	.+30     	; 0xaac4 <checkcollide+0x112>
    aaa6:	9a e5       	ldi	r25, 0x5A	; 90
    aaa8:	9c 9f       	mul	r25, r28
    aaaa:	f0 01       	movw	r30, r0
    aaac:	9d 9f       	mul	r25, r29
    aaae:	f0 0d       	add	r31, r0
    aab0:	11 24       	eor	r1, r1
    aab2:	e0 0f       	add	r30, r16
    aab4:	f1 1f       	adc	r31, r17
    aab6:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aaba:	e9 0f       	add	r30, r25
    aabc:	f1 1d       	adc	r31, r1
    aabe:	ed 51       	subi	r30, 0x1D	; 29
    aac0:	f3 4e       	sbci	r31, 0xE3	; 227
    aac2:	43 c0       	rjmp	.+134    	; 0xab4a <checkcollide+0x198>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aac4:	86 30       	cpi	r24, 0x06	; 6
    aac6:	79 f4       	brne	.+30     	; 0xaae6 <checkcollide+0x134>
    aac8:	9a e5       	ldi	r25, 0x5A	; 90
    aaca:	9c 9f       	mul	r25, r28
    aacc:	f0 01       	movw	r30, r0
    aace:	9d 9f       	mul	r25, r29
    aad0:	f0 0d       	add	r31, r0
    aad2:	11 24       	eor	r1, r1
    aad4:	e0 0f       	add	r30, r16
    aad6:	f1 1f       	adc	r31, r17
    aad8:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aadc:	e9 0f       	add	r30, r25
    aade:	f1 1d       	adc	r31, r1
    aae0:	e9 50       	subi	r30, 0x09	; 9
    aae2:	f8 4e       	sbci	r31, 0xE8	; 232
    aae4:	32 c0       	rjmp	.+100    	; 0xab4a <checkcollide+0x198>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aae6:	87 30       	cpi	r24, 0x07	; 7
    aae8:	79 f4       	brne	.+30     	; 0xab08 <checkcollide+0x156>
    aaea:	9a e5       	ldi	r25, 0x5A	; 90
    aaec:	9c 9f       	mul	r25, r28
    aaee:	f0 01       	movw	r30, r0
    aaf0:	9d 9f       	mul	r25, r29
    aaf2:	f0 0d       	add	r31, r0
    aaf4:	11 24       	eor	r1, r1
    aaf6:	e0 0f       	add	r30, r16
    aaf8:	f1 1f       	adc	r31, r17
    aafa:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    aafe:	e9 0f       	add	r30, r25
    ab00:	f1 1d       	adc	r31, r1
    ab02:	e5 5f       	subi	r30, 0xF5	; 245
    ab04:	fc 4e       	sbci	r31, 0xEC	; 236
    ab06:	21 c0       	rjmp	.+66     	; 0xab4a <checkcollide+0x198>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ab08:	88 30       	cpi	r24, 0x08	; 8
    ab0a:	79 f4       	brne	.+30     	; 0xab2a <checkcollide+0x178>
    ab0c:	9a e5       	ldi	r25, 0x5A	; 90
    ab0e:	9c 9f       	mul	r25, r28
    ab10:	f0 01       	movw	r30, r0
    ab12:	9d 9f       	mul	r25, r29
    ab14:	f0 0d       	add	r31, r0
    ab16:	11 24       	eor	r1, r1
    ab18:	e0 0f       	add	r30, r16
    ab1a:	f1 1f       	adc	r31, r17
    ab1c:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ab20:	e9 0f       	add	r30, r25
    ab22:	f1 1d       	adc	r31, r1
    ab24:	e1 5e       	subi	r30, 0xE1	; 225
    ab26:	f1 4f       	sbci	r31, 0xF1	; 241
    ab28:	10 c0       	rjmp	.+32     	; 0xab4a <checkcollide+0x198>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ab2a:	89 30       	cpi	r24, 0x09	; 9
    ab2c:	79 f4       	brne	.+30     	; 0xab4c <checkcollide+0x19a>
    ab2e:	9a e5       	ldi	r25, 0x5A	; 90
    ab30:	9c 9f       	mul	r25, r28
    ab32:	f0 01       	movw	r30, r0
    ab34:	9d 9f       	mul	r25, r29
    ab36:	f0 0d       	add	r31, r0
    ab38:	11 24       	eor	r1, r1
    ab3a:	e0 0f       	add	r30, r16
    ab3c:	f1 1f       	adc	r31, r17
    ab3e:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ab42:	e9 0f       	add	r30, r25
    ab44:	f1 1d       	adc	r31, r1
    ab46:	ed 5c       	subi	r30, 0xCD	; 205
    ab48:	f6 4f       	sbci	r31, 0xF6	; 246
    ab4a:	74 90       	lpm	r7, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    ab4c:	2a e1       	ldi	r18, 0x1A	; 26
    ab4e:	72 16       	cp	r7, r18
    ab50:	19 f0       	breq	.+6      	; 0xab58 <checkcollide+0x1a6>
    ab52:	9c e1       	ldi	r25, 0x1C	; 28
    ab54:	79 12       	cpse	r7, r25
    ab56:	03 c0       	rjmp	.+6      	; 0xab5e <checkcollide+0x1ac>
    ab58:	91 e0       	ldi	r25, 0x01	; 1
    ab5a:	90 93 73 0a 	sts	0x0A73, r25	; 0x800a73 <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) {
    ab5e:	93 ee       	ldi	r25, 0xE3	; 227
    ab60:	97 0d       	add	r25, r7
    ab62:	92 30       	cpi	r25, 0x02	; 2
    ab64:	b0 f5       	brcc	.+108    	; 0xabd2 <checkcollide+0x220>
    ab66:	23 e0       	ldi	r18, 0x03	; 3
    ab68:	82 16       	cp	r8, r18
    ab6a:	91 04       	cpc	r9, r1
    ab6c:	09 f0       	breq	.+2      	; 0xab70 <checkcollide+0x1be>
    ab6e:	6c c0       	rjmp	.+216    	; 0xac48 <checkcollide+0x296>
    ab70:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <play>
    ab74:	88 23       	and	r24, r24
    ab76:	09 f4       	brne	.+2      	; 0xab7a <checkcollide+0x1c8>
    ab78:	67 c0       	rjmp	.+206    	; 0xac48 <checkcollide+0x296>
    ab7a:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    if(playerNum == 1)
    ab7e:	91 e0       	ldi	r25, 0x01	; 1
    ab80:	a9 16       	cp	r10, r25
    ab82:	b1 04       	cpc	r11, r1
    ab84:	71 f4       	brne	.+28     	; 0xaba2 <checkcollide+0x1f0>
    {
        lives++;
    ab86:	8f 5f       	subi	r24, 0xFF	; 255
    ab88:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
        player.x = 30;
    ab8c:	8e e1       	ldi	r24, 0x1E	; 30
    ab8e:	90 e0       	ldi	r25, 0x00	; 0
    ab90:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    ab94:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
        player.y = 0;
    ab98:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <player+0x3>
    ab9c:	10 92 58 09 	sts	0x0958, r1	; 0x800958 <player+0x2>
    aba0:	53 c0       	rjmp	.+166    	; 0xac48 <checkcollide+0x296>
    } 
    else{
    died = true;
    aba2:	91 e0       	ldi	r25, 0x01	; 1
    aba4:	90 93 8d 0a 	sts	0x0A8D, r25	; 0x800a8d <died>
    lives--;    
    aba8:	81 50       	subi	r24, 0x01	; 1
    abaa:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    isplaying = false; 
    abae:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    abb2:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0;  
    abb6:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    abba:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    abbe:	41 e0       	ldi	r20, 0x01	; 1
    abc0:	6f ef       	ldi	r22, 0xFF	; 255
    abc2:	89 e0       	ldi	r24, 0x09	; 9
    abc4:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60);  
    abc8:	8c e3       	ldi	r24, 0x3C	; 60
    abca:	90 e0       	ldi	r25, 0x00	; 0
    abcc:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    abd0:	3b c0       	rjmp	.+118    	; 0xac48 <checkcollide+0x296>
    }   
};
if (bl == 21 && level == 5 && play == true ) { 
    abd2:	25 e1       	ldi	r18, 0x15	; 21
    abd4:	72 12       	cpse	r7, r18
    abd6:	34 c0       	rjmp	.+104    	; 0xac40 <checkcollide+0x28e>
    abd8:	85 30       	cpi	r24, 0x05	; 5
    abda:	09 f0       	breq	.+2      	; 0xabde <checkcollide+0x22c>
    abdc:	92 c2       	rjmp	.+1316   	; 0xb102 <checkcollide+0x750>
    abde:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <play>
    abe2:	88 23       	and	r24, r24
    abe4:	09 f4       	brne	.+2      	; 0xabe8 <checkcollide+0x236>
    abe6:	8d c2       	rjmp	.+1306   	; 0xb102 <checkcollide+0x750>
    abe8:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    if(playerNum == 2)
    abec:	92 e0       	ldi	r25, 0x02	; 2
    abee:	a9 16       	cp	r10, r25
    abf0:	b1 04       	cpc	r11, r1
    abf2:	71 f4       	brne	.+28     	; 0xac10 <checkcollide+0x25e>
    {
        lives++;
    abf4:	8f 5f       	subi	r24, 0xFF	; 255
    abf6:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
        player.x = 30;
    abfa:	8e e1       	ldi	r24, 0x1E	; 30
    abfc:	90 e0       	ldi	r25, 0x00	; 0
    abfe:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    ac02:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
        player.y = 0;
    ac06:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <player+0x3>
    ac0a:	10 92 58 09 	sts	0x0958, r1	; 0x800958 <player+0x2>
    ac0e:	79 c2       	rjmp	.+1266   	; 0xb102 <checkcollide+0x750>
    }
    else{
    died = true;
    ac10:	91 e0       	ldi	r25, 0x01	; 1
    ac12:	90 93 8d 0a 	sts	0x0A8D, r25	; 0x800a8d <died>
    lives--;    
    ac16:	81 50       	subi	r24, 0x01	; 1
    ac18:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    isplaying = false; 
    ac1c:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    ac20:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0;  
    ac24:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    ac28:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    ac2c:	41 e0       	ldi	r20, 0x01	; 1
    ac2e:	6f ef       	ldi	r22, 0xFF	; 255
    ac30:	89 e0       	ldi	r24, 0x09	; 9
    ac32:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60);   
    ac36:	8c e3       	ldi	r24, 0x3C	; 60
    ac38:	90 e0       	ldi	r25, 0x00	; 0
    ac3a:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    ac3e:	61 c2       	rjmp	.+1218   	; 0xb102 <checkcollide+0x750>
    }  
};
    
    
if (bl == 41 && z == 1 ) { 
    ac40:	89 e2       	ldi	r24, 0x29	; 41
    ac42:	78 16       	cp	r7, r24
    ac44:	09 f4       	brne	.+2      	; 0xac48 <checkcollide+0x296>
    ac46:	77 c0       	rjmp	.+238    	; 0xad36 <checkcollide+0x384>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    ac48:	83 e0       	ldi	r24, 0x03	; 3
    ac4a:	78 12       	cpse	r7, r24
    ac4c:	dd c0       	rjmp	.+442    	; 0xae08 <checkcollide+0x456>
    ac4e:	92 e0       	ldi	r25, 0x02	; 2
    ac50:	89 16       	cp	r8, r25
    ac52:	91 04       	cpc	r9, r1
    ac54:	09 f0       	breq	.+2      	; 0xac58 <checkcollide+0x2a6>
    ac56:	55 c2       	rjmp	.+1194   	; 0xb102 <checkcollide+0x750>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    ac58:	2a e5       	ldi	r18, 0x5A	; 90
    ac5a:	2c 9f       	mul	r18, r28
    ac5c:	c0 01       	movw	r24, r0
    ac5e:	2d 9f       	mul	r18, r29
    ac60:	90 0d       	add	r25, r0
    ac62:	11 24       	eor	r1, r1
    ac64:	80 0f       	add	r24, r16
    ac66:	91 1f       	adc	r25, r17
    ac68:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    ac6c:	82 0f       	add	r24, r18
    ac6e:	91 1d       	adc	r25, r1
    ac70:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    ac74:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    ac78:	ef e3       	ldi	r30, 0x3F	; 63
    ac7a:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    ac7c:	e1 2c       	mov	r14, r1
    ac7e:	f1 2c       	mov	r15, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    ac80:	21 91       	ld	r18, Z+
    ac82:	31 91       	ld	r19, Z+
    ac84:	82 17       	cp	r24, r18
    ac86:	93 07       	cpc	r25, r19
    ac88:	09 f4       	brne	.+2      	; 0xac8c <checkcollide+0x2da>
    ac8a:	3b c2       	rjmp	.+1142   	; 0xb102 <checkcollide+0x750>
    if (diamonds[xi] == 0 ) {
    ac8c:	23 2b       	or	r18, r19
    ac8e:	09 f0       	breq	.+2      	; 0xac92 <checkcollide+0x2e0>
    ac90:	49 c0       	rjmp	.+146    	; 0xad24 <checkcollide+0x372>
    score = score + 5 ;
    ac92:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <score>
    ac96:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <score+0x1>
    ac9a:	05 96       	adiw	r24, 0x05	; 5
    ac9c:	90 93 ad 09 	sts	0x09AD, r25	; 0x8009ad <score+0x1>
    aca0:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <score>
    bonus++;
    aca4:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <bonus>
    aca8:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <bonus+0x1>
    acac:	01 96       	adiw	r24, 0x01	; 1
    acae:	90 93 72 0a 	sts	0x0A72, r25	; 0x800a72 <bonus+0x1>
    acb2:	80 93 71 0a 	sts	0x0A71, r24	; 0x800a71 <bonus>
    updatepoints();
    acb6:	0e 94 ce 53 	call	0xa79c	; 0xa79c <updatepoints>
    TriggerFx(7,0xff,true);
    acba:	41 e0       	ldi	r20, 0x01	; 1
    acbc:	6f ef       	ldi	r22, 0xFF	; 255
    acbe:	87 e0       	ldi	r24, 0x07	; 7
    acc0:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    lx = lx * 2 + destX;
    acc4:	c8 01       	movw	r24, r16
    acc6:	88 0f       	add	r24, r24
    acc8:	99 1f       	adc	r25, r25
    acca:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    acce:	82 0f       	add	r24, r18
    acd0:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    acd2:	80 32       	cpi	r24, 0x20	; 32
    acd4:	91 05       	cpc	r25, r1
    acd6:	0c f0       	brlt	.+2      	; 0xacda <checkcollide+0x328>
    acd8:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    if(playerNum == 1)
    acda:	21 e0       	ldi	r18, 0x01	; 1
    acdc:	a2 16       	cp	r10, r18
    acde:	b1 04       	cpc	r11, r1
    ace0:	31 f4       	brne	.+12     	; 0xacee <checkcollide+0x33c>
    {
        player.bananaCount = player.bananaCount + 1;
    ace2:	20 91 72 09 	lds	r18, 0x0972	; 0x800972 <player+0x1c>
    ace6:	2f 5f       	subi	r18, 0xFF	; 255
    ace8:	20 93 72 09 	sts	0x0972, r18	; 0x800972 <player+0x1c>
    acec:	09 c0       	rjmp	.+18     	; 0xad00 <checkcollide+0x34e>
    }
    else if(playerNum == 2)
    acee:	22 e0       	ldi	r18, 0x02	; 2
    acf0:	a2 16       	cp	r10, r18
    acf2:	b1 04       	cpc	r11, r1
    acf4:	29 f4       	brne	.+10     	; 0xad00 <checkcollide+0x34e>
    {
        player2.bananaCount = player2.bananaCount + 1;
    acf6:	20 91 2c 0a 	lds	r18, 0x0A2C	; 0x800a2c <player2+0x1c>
    acfa:	2f 5f       	subi	r18, 0xFF	; 255
    acfc:	20 93 2c 0a 	sts	0x0A2C, r18	; 0x800a2c <player2+0x1c>
    }
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    ad00:	6c 2f       	mov	r22, r28
    ad02:	66 0f       	add	r22, r22
    ad04:	44 e0       	ldi	r20, 0x04	; 4
    ad06:	59 e7       	ldi	r21, 0x79	; 121
    ad08:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    diamonds[xi] = dp;
    ad0c:	f7 01       	movw	r30, r14
    ad0e:	ee 0f       	add	r30, r30
    ad10:	ff 1f       	adc	r31, r31
    ad12:	e1 5c       	subi	r30, 0xC1	; 193
    ad14:	f5 4f       	sbci	r31, 0xF5	; 245
    ad16:	80 91 3d 0a 	lds	r24, 0x0A3D	; 0x800a3d <dp>
    ad1a:	90 91 3e 0a 	lds	r25, 0x0A3E	; 0x800a3e <dp+0x1>
    ad1e:	91 83       	std	Z+1, r25	; 0x01
    ad20:	80 83       	st	Z, r24
    break;
    ad22:	ef c1       	rjmp	.+990    	; 0xb102 <checkcollide+0x750>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    ad24:	2f ef       	ldi	r18, 0xFF	; 255
    ad26:	e2 1a       	sub	r14, r18
    ad28:	f2 0a       	sbc	r15, r18
    ad2a:	29 e1       	ldi	r18, 0x19	; 25
    ad2c:	e2 16       	cp	r14, r18
    ad2e:	f1 04       	cpc	r15, r1
    ad30:	09 f0       	breq	.+2      	; 0xad34 <checkcollide+0x382>
    ad32:	a6 cf       	rjmp	.-180    	; 0xac80 <checkcollide+0x2ce>
    ad34:	e6 c1       	rjmp	.+972    	; 0xb102 <checkcollide+0x750>
    WaitVsync(60);   
    }  
};
    
    
if (bl == 41 && z == 1 ) { 
    ad36:	8a 94       	dec	r8
    ad38:	89 28       	or	r8, r9
    ad3a:	09 f0       	breq	.+2      	; 0xad3e <checkcollide+0x38c>
    ad3c:	e2 c1       	rjmp	.+964    	; 0xb102 <checkcollide+0x750>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    ad3e:	2a e5       	ldi	r18, 0x5A	; 90
    ad40:	2c 9f       	mul	r18, r28
    ad42:	c0 01       	movw	r24, r0
    ad44:	2d 9f       	mul	r18, r29
    ad46:	90 0d       	add	r25, r0
    ad48:	11 24       	eor	r1, r1
    ad4a:	80 0f       	add	r24, r16
    ad4c:	91 1f       	adc	r25, r17
    ad4e:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad52:	82 0f       	add	r24, r18
    ad54:	91 1d       	adc	r25, r1
    ad56:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    ad5a:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    ad5e:	ef e3       	ldi	r30, 0x3F	; 63
    ad60:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    ad62:	e1 2c       	mov	r14, r1
    ad64:	f1 2c       	mov	r15, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    ad66:	21 91       	ld	r18, Z+
    ad68:	31 91       	ld	r19, Z+
    ad6a:	82 17       	cp	r24, r18
    ad6c:	93 07       	cpc	r25, r19
    ad6e:	09 f4       	brne	.+2      	; 0xad72 <checkcollide+0x3c0>
    ad70:	c8 c1       	rjmp	.+912    	; 0xb102 <checkcollide+0x750>
    if (diamonds[xi] == 0 ) {
    ad72:	23 2b       	or	r18, r19
    ad74:	09 f0       	breq	.+2      	; 0xad78 <checkcollide+0x3c6>
    ad76:	3f c0       	rjmp	.+126    	; 0xadf6 <checkcollide+0x444>
    score = score + 5 ;
    ad78:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <score>
    ad7c:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <score+0x1>
    ad80:	05 96       	adiw	r24, 0x05	; 5
    ad82:	90 93 ad 09 	sts	0x09AD, r25	; 0x8009ad <score+0x1>
    ad86:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <score>
    bonus++;
    ad8a:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <bonus>
    ad8e:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <bonus+0x1>
    ad92:	01 96       	adiw	r24, 0x01	; 1
    ad94:	90 93 72 0a 	sts	0x0A72, r25	; 0x800a72 <bonus+0x1>
    ad98:	80 93 71 0a 	sts	0x0A71, r24	; 0x800a71 <bonus>
    updatepoints();
    ad9c:	0e 94 ce 53 	call	0xa79c	; 0xa79c <updatepoints>
    TriggerFx(7,0xff,true);
    ada0:	41 e0       	ldi	r20, 0x01	; 1
    ada2:	6f ef       	ldi	r22, 0xFF	; 255
    ada4:	87 e0       	ldi	r24, 0x07	; 7
    ada6:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
        
    lx = lx * 2 + destX;
    adaa:	00 0f       	add	r16, r16
    adac:	11 1f       	adc	r17, r17
    adae:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    adb2:	08 0f       	add	r16, r24
    adb4:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    adb6:	00 32       	cpi	r16, 0x20	; 32
    adb8:	11 05       	cpc	r17, r1
    adba:	14 f0       	brlt	.+4      	; 0xadc0 <checkcollide+0x40e>
    adbc:	00 52       	subi	r16, 0x20	; 32
    adbe:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    adc0:	cc 0f       	add	r28, r28
    adc2:	41 e6       	ldi	r20, 0x61	; 97
    adc4:	58 e7       	ldi	r21, 0x78	; 120
    adc6:	6c 2f       	mov	r22, r28
    adc8:	80 2f       	mov	r24, r16
    adca:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    adce:	d1 e0       	ldi	r29, 0x01	; 1
    add0:	d0 0f       	add	r29, r16
    add2:	41 e6       	ldi	r20, 0x61	; 97
    add4:	58 e7       	ldi	r21, 0x78	; 120
    add6:	6c 2f       	mov	r22, r28
    add8:	8d 2f       	mov	r24, r29
    adda:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    adde:	cf 5f       	subi	r28, 0xFF	; 255
    ade0:	41 e6       	ldi	r20, 0x61	; 97
    ade2:	58 e7       	ldi	r21, 0x78	; 120
    ade4:	6c 2f       	mov	r22, r28
    ade6:	80 2f       	mov	r24, r16
    ade8:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    adec:	41 e6       	ldi	r20, 0x61	; 97
    adee:	58 e7       	ldi	r21, 0x78	; 120
    adf0:	6c 2f       	mov	r22, r28
    adf2:	8d 2f       	mov	r24, r29
    adf4:	89 cf       	rjmp	.-238    	; 0xad08 <checkcollide+0x356>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    adf6:	2f ef       	ldi	r18, 0xFF	; 255
    adf8:	e2 1a       	sub	r14, r18
    adfa:	f2 0a       	sbc	r15, r18
    adfc:	29 e1       	ldi	r18, 0x19	; 25
    adfe:	e2 16       	cp	r14, r18
    ae00:	f1 04       	cpc	r15, r1
    ae02:	09 f0       	breq	.+2      	; 0xae06 <checkcollide+0x454>
    ae04:	b0 cf       	rjmp	.-160    	; 0xad66 <checkcollide+0x3b4>
    ae06:	7d c1       	rjmp	.+762    	; 0xb102 <checkcollide+0x750>
    diamonds[xi] = dp;
    break;
    };
    };
}; 
if (bl == 9 )
    ae08:	99 e0       	ldi	r25, 0x09	; 9
    ae0a:	79 12       	cpse	r7, r25
    ae0c:	0f c0       	rjmp	.+30     	; 0xae2c <checkcollide+0x47a>
{
lx = x + Levelx;
    ae0e:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    ae12:	e8 0e       	add	r14, r24
    ae14:	f1 1c       	adc	r15, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) return 1; else return 0;
    ae16:	8f e0       	ldi	r24, 0x0F	; 15
    ae18:	e8 22       	and	r14, r24
    ae1a:	ff 24       	eor	r15, r15
    ae1c:	81 e0       	ldi	r24, 0x01	; 1
    ae1e:	90 e0       	ldi	r25, 0x00	; 0
    ae20:	29 e0       	ldi	r18, 0x09	; 9
    ae22:	e2 16       	cp	r14, r18
    ae24:	f1 04       	cpc	r15, r1
    ae26:	0c f4       	brge	.+2      	; 0xae2a <checkcollide+0x478>
    ae28:	73 c1       	rjmp	.+742    	; 0xb110 <checkcollide+0x75e>
    ae2a:	71 c1       	rjmp	.+738    	; 0xb10e <checkcollide+0x75c>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    ae2c:	2a e0       	ldi	r18, 0x0A	; 10
    ae2e:	72 12       	cpse	r7, r18
    ae30:	0f c0       	rjmp	.+30     	; 0xae50 <checkcollide+0x49e>
{
lx = x + Levelx;
    ae32:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    ae36:	e8 0e       	add	r14, r24
    ae38:	f1 1c       	adc	r15, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) return 1; else return 0;
    ae3a:	8f e0       	ldi	r24, 0x0F	; 15
    ae3c:	e8 22       	and	r14, r24
    ae3e:	ff 24       	eor	r15, r15
    ae40:	81 e0       	ldi	r24, 0x01	; 1
    ae42:	90 e0       	ldi	r25, 0x00	; 0
    ae44:	29 e0       	ldi	r18, 0x09	; 9
    ae46:	e2 16       	cp	r14, r18
    ae48:	f1 04       	cpc	r15, r1
    ae4a:	0c f0       	brlt	.+2      	; 0xae4e <checkcollide+0x49c>
    ae4c:	61 c1       	rjmp	.+706    	; 0xb110 <checkcollide+0x75e>
    ae4e:	5f c1       	rjmp	.+702    	; 0xb10e <checkcollide+0x75c>
}
 

    
    
if (bl == 39 )
    ae50:	87 e2       	ldi	r24, 0x27	; 39
    ae52:	78 12       	cpse	r7, r24
    ae54:	56 c1       	rjmp	.+684    	; 0xb102 <checkcollide+0x750>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    ae56:	ce 01       	movw	r24, r28
    ae58:	f4 e0       	ldi	r31, 0x04	; 4
    ae5a:	88 0f       	add	r24, r24
    ae5c:	99 1f       	adc	r25, r25
    ae5e:	fa 95       	dec	r31
    ae60:	e1 f7       	brne	.-8      	; 0xae5a <checkcollide+0x4a8>
ly = ly - lx;
        
if (ly < 5  ) 
    ae62:	c8 1a       	sub	r12, r24
    ae64:	d9 0a       	sbc	r13, r25
    ae66:	95 e0       	ldi	r25, 0x05	; 5
    ae68:	c9 16       	cp	r12, r25
    ae6a:	d1 04       	cpc	r13, r1
    ae6c:	0c f0       	brlt	.+2      	; 0xae70 <checkcollide+0x4be>
    ae6e:	80 c0       	rjmp	.+256    	; 0xaf70 <checkcollide+0x5be>
{
lx = x + Levelx;
    ae70:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    ae74:	e8 0e       	add	r14, r24
    ae76:	f1 1c       	adc	r15, r1
ly = y;
lx = lx >> 4;
    ae78:	87 01       	movw	r16, r14
    ae7a:	e4 e0       	ldi	r30, 0x04	; 4
    ae7c:	15 95       	asr	r17
    ae7e:	07 95       	ror	r16
    ae80:	ea 95       	dec	r30
    ae82:	e1 f7       	brne	.-8      	; 0xae7c <checkcollide+0x4ca>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    ae84:	2a e5       	ldi	r18, 0x5A	; 90
    ae86:	2c 9f       	mul	r18, r28
    ae88:	c0 01       	movw	r24, r0
    ae8a:	2d 9f       	mul	r18, r29
    ae8c:	90 0d       	add	r25, r0
    ae8e:	11 24       	eor	r1, r1
    ae90:	80 0f       	add	r24, r16
    ae92:	91 1f       	adc	r25, r17
    ae94:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    ae98:	82 0f       	add	r24, r18
    ae9a:	91 1d       	adc	r25, r1
    ae9c:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    aea0:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    aea4:	e5 e2       	ldi	r30, 0x25	; 37
    aea6:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    aea8:	c1 2c       	mov	r12, r1
    aeaa:	d1 2c       	mov	r13, r1
     {
     if (bridges[xi].id == dp)         
    aeac:	20 81       	ld	r18, Z
    aeae:	31 81       	ldd	r19, Z+1	; 0x01
    aeb0:	82 17       	cp	r24, r18
    aeb2:	93 07       	cpc	r25, r19
    aeb4:	09 f0       	breq	.+2      	; 0xaeb8 <checkcollide+0x506>
    aeb6:	0c c1       	rjmp	.+536    	; 0xb0d0 <checkcollide+0x71e>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    aeb8:	c8 01       	movw	r24, r16
    aeba:	54 e0       	ldi	r21, 0x04	; 4
    aebc:	88 0f       	add	r24, r24
    aebe:	99 1f       	adc	r25, r25
    aec0:	5a 95       	dec	r21
    aec2:	e1 f7       	brne	.-8      	; 0xaebc <checkcollide+0x50a>
    aec4:	e8 1a       	sub	r14, r24
    aec6:	f9 0a       	sbc	r15, r25
    aec8:	90 91 c4 09 	lds	r25, 0x09C4	; 0x8009c4 <level>
    aecc:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    aed0:	cc 0c       	add	r12, r12
    aed2:	dd 1c       	adc	r13, r13
    aed4:	cc 0c       	add	r12, r12
    aed6:	dd 1c       	adc	r13, r13
    aed8:	00 0f       	add	r16, r16
    aeda:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    aedc:	f6 01       	movw	r30, r12
    aede:	eb 5d       	subi	r30, 0xDB	; 219
    aee0:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    aee2:	89 e0       	ldi	r24, 0x09	; 9
    aee4:	e8 16       	cp	r14, r24
    aee6:	f1 04       	cpc	r15, r1
    aee8:	0c f0       	brlt	.+2      	; 0xaeec <checkcollide+0x53a>
    aeea:	78 c0       	rjmp	.+240    	; 0xafdc <checkcollide+0x62a>
        {
        bridges[xi].r++;    
    aeec:	83 81       	ldd	r24, Z+3	; 0x03
    aeee:	31 e0       	ldi	r19, 0x01	; 1
    aef0:	38 0f       	add	r19, r24
    aef2:	33 83       	std	Z+3, r19	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    aef4:	02 0f       	add	r16, r18
    aef6:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    aef8:	00 32       	cpi	r16, 0x20	; 32
    aefa:	11 05       	cpc	r17, r1
    aefc:	14 f0       	brlt	.+4      	; 0xaf02 <checkcollide+0x550>
    aefe:	00 52       	subi	r16, 0x20	; 32
    af00:	11 09       	sbc	r17, r1
        if(level == 5)
    af02:	95 30       	cpi	r25, 0x05	; 5
    af04:	c1 f5       	brne	.+112    	; 0xaf76 <checkcollide+0x5c4>
        {
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge1 );
    af06:	88 30       	cpi	r24, 0x08	; 8
    af08:	38 f4       	brcc	.+14     	; 0xaf18 <checkcollide+0x566>
    af0a:	4a e6       	ldi	r20, 0x6A	; 106
    af0c:	58 e7       	ldi	r21, 0x78	; 120
    af0e:	6c 2f       	mov	r22, r28
    af10:	66 0f       	add	r22, r22
    af12:	80 2f       	mov	r24, r16
    af14:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge2 ); 
    af18:	f6 01       	movw	r30, r12
    af1a:	eb 5d       	subi	r30, 0xDB	; 219
    af1c:	f6 4f       	sbci	r31, 0xF6	; 246
    af1e:	83 81       	ldd	r24, Z+3	; 0x03
    af20:	89 50       	subi	r24, 0x09	; 9
    af22:	88 30       	cpi	r24, 0x08	; 8
    af24:	38 f4       	brcc	.+14     	; 0xaf34 <checkcollide+0x582>
    af26:	47 e6       	ldi	r20, 0x67	; 103
    af28:	58 e7       	ldi	r21, 0x78	; 120
    af2a:	6c 2f       	mov	r22, r28
    af2c:	66 0f       	add	r22, r22
    af2e:	80 2f       	mov	r24, r16
    af30:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge3 );     
    af34:	f6 01       	movw	r30, r12
    af36:	eb 5d       	subi	r30, 0xDB	; 219
    af38:	f6 4f       	sbci	r31, 0xF6	; 246
    af3a:	83 81       	ldd	r24, Z+3	; 0x03
    af3c:	81 51       	subi	r24, 0x11	; 17
    af3e:	87 30       	cpi	r24, 0x07	; 7
    af40:	38 f4       	brcc	.+14     	; 0xaf50 <checkcollide+0x59e>
    af42:	44 e6       	ldi	r20, 0x64	; 100
    af44:	58 e7       	ldi	r21, 0x78	; 120
    af46:	6c 2f       	mov	r22, r28
    af48:	66 0f       	add	r22, r22
    af4a:	80 2f       	mov	r24, r16
    af4c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,lilblack ); return 0;};
    af50:	f6 01       	movw	r30, r12
    af52:	eb 5d       	subi	r30, 0xDB	; 219
    af54:	f6 4f       	sbci	r31, 0xF6	; 246
    af56:	83 81       	ldd	r24, Z+3	; 0x03
    af58:	88 31       	cpi	r24, 0x18	; 24
    af5a:	08 f4       	brcc	.+2      	; 0xaf5e <checkcollide+0x5ac>
    af5c:	c7 c0       	rjmp	.+398    	; 0xb0ec <checkcollide+0x73a>
    af5e:	88 e1       	ldi	r24, 0x18	; 24
    af60:	83 83       	std	Z+3, r24	; 0x03
    af62:	6c 2f       	mov	r22, r28
    af64:	66 0f       	add	r22, r22
    af66:	46 ed       	ldi	r20, 0xD6	; 214
    af68:	58 e7       	ldi	r21, 0x78	; 120
    af6a:	80 2f       	mov	r24, r16
    af6c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    af70:	80 e0       	ldi	r24, 0x00	; 0
    af72:	90 e0       	ldi	r25, 0x00	; 0
    af74:	cd c0       	rjmp	.+410    	; 0xb110 <checkcollide+0x75e>
        }
        else{
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    af76:	88 30       	cpi	r24, 0x08	; 8
    af78:	38 f4       	brcc	.+14     	; 0xaf88 <checkcollide+0x5d6>
    af7a:	46 e7       	ldi	r20, 0x76	; 118
    af7c:	58 e7       	ldi	r21, 0x78	; 120
    af7e:	6c 2f       	mov	r22, r28
    af80:	66 0f       	add	r22, r22
    af82:	80 2f       	mov	r24, r16
    af84:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    af88:	f6 01       	movw	r30, r12
    af8a:	eb 5d       	subi	r30, 0xDB	; 219
    af8c:	f6 4f       	sbci	r31, 0xF6	; 246
    af8e:	83 81       	ldd	r24, Z+3	; 0x03
    af90:	89 50       	subi	r24, 0x09	; 9
    af92:	88 30       	cpi	r24, 0x08	; 8
    af94:	38 f4       	brcc	.+14     	; 0xafa4 <checkcollide+0x5f2>
    af96:	43 e7       	ldi	r20, 0x73	; 115
    af98:	58 e7       	ldi	r21, 0x78	; 120
    af9a:	6c 2f       	mov	r22, r28
    af9c:	66 0f       	add	r22, r22
    af9e:	80 2f       	mov	r24, r16
    afa0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    afa4:	f6 01       	movw	r30, r12
    afa6:	eb 5d       	subi	r30, 0xDB	; 219
    afa8:	f6 4f       	sbci	r31, 0xF6	; 246
    afaa:	83 81       	ldd	r24, Z+3	; 0x03
    afac:	81 51       	subi	r24, 0x11	; 17
    afae:	87 30       	cpi	r24, 0x07	; 7
    afb0:	38 f4       	brcc	.+14     	; 0xafc0 <checkcollide+0x60e>
    afb2:	40 e7       	ldi	r20, 0x70	; 112
    afb4:	58 e7       	ldi	r21, 0x78	; 120
    afb6:	6c 2f       	mov	r22, r28
    afb8:	66 0f       	add	r22, r22
    afba:	80 2f       	mov	r24, r16
    afbc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};  
    afc0:	f6 01       	movw	r30, r12
    afc2:	eb 5d       	subi	r30, 0xDB	; 219
    afc4:	f6 4f       	sbci	r31, 0xF6	; 246
    afc6:	83 81       	ldd	r24, Z+3	; 0x03
    afc8:	88 31       	cpi	r24, 0x18	; 24
    afca:	08 f4       	brcc	.+2      	; 0xafce <checkcollide+0x61c>
    afcc:	8f c0       	rjmp	.+286    	; 0xb0ec <checkcollide+0x73a>
    afce:	88 e1       	ldi	r24, 0x18	; 24
    afd0:	83 83       	std	Z+3, r24	; 0x03
    afd2:	6c 2f       	mov	r22, r28
    afd4:	66 0f       	add	r22, r22
    afd6:	41 e6       	ldi	r20, 0x61	; 97
    afd8:	58 e7       	ldi	r21, 0x78	; 120
    afda:	c7 cf       	rjmp	.-114    	; 0xaf6a <checkcollide+0x5b8>
        }
        }
        else
        {
        bridges[xi].l++;
    afdc:	82 81       	ldd	r24, Z+2	; 0x02
    afde:	31 e0       	ldi	r19, 0x01	; 1
    afe0:	38 0f       	add	r19, r24
    afe2:	32 83       	std	Z+2, r19	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    afe4:	02 0f       	add	r16, r18
    afe6:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    afe8:	00 32       	cpi	r16, 0x20	; 32
    afea:	11 05       	cpc	r17, r1
    afec:	14 f0       	brlt	.+4      	; 0xaff2 <checkcollide+0x640>
    afee:	00 52       	subi	r16, 0x20	; 32
    aff0:	11 09       	sbc	r17, r1
        if(level == 5)
    aff2:	95 30       	cpi	r25, 0x05	; 5
    aff4:	b1 f5       	brne	.+108    	; 0xb062 <checkcollide+0x6b0>
        {
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge1 );
    aff6:	88 30       	cpi	r24, 0x08	; 8
    aff8:	40 f4       	brcc	.+16     	; 0xb00a <checkcollide+0x658>
    affa:	4a e6       	ldi	r20, 0x6A	; 106
    affc:	58 e7       	ldi	r21, 0x78	; 120
    affe:	6c 2f       	mov	r22, r28
    b000:	66 0f       	add	r22, r22
    b002:	81 e0       	ldi	r24, 0x01	; 1
    b004:	80 0f       	add	r24, r16
    b006:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge2 ); 
    b00a:	f6 01       	movw	r30, r12
    b00c:	eb 5d       	subi	r30, 0xDB	; 219
    b00e:	f6 4f       	sbci	r31, 0xF6	; 246
    b010:	82 81       	ldd	r24, Z+2	; 0x02
    b012:	89 50       	subi	r24, 0x09	; 9
    b014:	88 30       	cpi	r24, 0x08	; 8
    b016:	40 f4       	brcc	.+16     	; 0xb028 <checkcollide+0x676>
    b018:	47 e6       	ldi	r20, 0x67	; 103
    b01a:	58 e7       	ldi	r21, 0x78	; 120
    b01c:	6c 2f       	mov	r22, r28
    b01e:	66 0f       	add	r22, r22
    b020:	81 e0       	ldi	r24, 0x01	; 1
    b022:	80 0f       	add	r24, r16
    b024:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge3 );      
    b028:	f6 01       	movw	r30, r12
    b02a:	eb 5d       	subi	r30, 0xDB	; 219
    b02c:	f6 4f       	sbci	r31, 0xF6	; 246
    b02e:	82 81       	ldd	r24, Z+2	; 0x02
    b030:	81 51       	subi	r24, 0x11	; 17
    b032:	87 30       	cpi	r24, 0x07	; 7
    b034:	40 f4       	brcc	.+16     	; 0xb046 <checkcollide+0x694>
    b036:	44 e6       	ldi	r20, 0x64	; 100
    b038:	58 e7       	ldi	r21, 0x78	; 120
    b03a:	6c 2f       	mov	r22, r28
    b03c:	66 0f       	add	r22, r22
    b03e:	81 e0       	ldi	r24, 0x01	; 1
    b040:	80 0f       	add	r24, r16
    b042:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,lilblack ); return 0;}; 
    b046:	f6 01       	movw	r30, r12
    b048:	eb 5d       	subi	r30, 0xDB	; 219
    b04a:	f6 4f       	sbci	r31, 0xF6	; 246
    b04c:	82 81       	ldd	r24, Z+2	; 0x02
    b04e:	88 31       	cpi	r24, 0x18	; 24
    b050:	08 f4       	brcc	.+2      	; 0xb054 <checkcollide+0x6a2>
    b052:	4c c0       	rjmp	.+152    	; 0xb0ec <checkcollide+0x73a>
    b054:	88 e1       	ldi	r24, 0x18	; 24
    b056:	82 83       	std	Z+2, r24	; 0x02
    b058:	6c 2f       	mov	r22, r28
    b05a:	66 0f       	add	r22, r22
    b05c:	46 ed       	ldi	r20, 0xD6	; 214
    b05e:	58 e7       	ldi	r21, 0x78	; 120
    b060:	34 c0       	rjmp	.+104    	; 0xb0ca <checkcollide+0x718>
        }
        else{
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    b062:	88 30       	cpi	r24, 0x08	; 8
    b064:	40 f4       	brcc	.+16     	; 0xb076 <checkcollide+0x6c4>
    b066:	46 e7       	ldi	r20, 0x76	; 118
    b068:	58 e7       	ldi	r21, 0x78	; 120
    b06a:	6c 2f       	mov	r22, r28
    b06c:	66 0f       	add	r22, r22
    b06e:	81 e0       	ldi	r24, 0x01	; 1
    b070:	80 0f       	add	r24, r16
    b072:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    b076:	f6 01       	movw	r30, r12
    b078:	eb 5d       	subi	r30, 0xDB	; 219
    b07a:	f6 4f       	sbci	r31, 0xF6	; 246
    b07c:	82 81       	ldd	r24, Z+2	; 0x02
    b07e:	89 50       	subi	r24, 0x09	; 9
    b080:	88 30       	cpi	r24, 0x08	; 8
    b082:	40 f4       	brcc	.+16     	; 0xb094 <checkcollide+0x6e2>
    b084:	43 e7       	ldi	r20, 0x73	; 115
    b086:	58 e7       	ldi	r21, 0x78	; 120
    b088:	6c 2f       	mov	r22, r28
    b08a:	66 0f       	add	r22, r22
    b08c:	81 e0       	ldi	r24, 0x01	; 1
    b08e:	80 0f       	add	r24, r16
    b090:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    b094:	f6 01       	movw	r30, r12
    b096:	eb 5d       	subi	r30, 0xDB	; 219
    b098:	f6 4f       	sbci	r31, 0xF6	; 246
    b09a:	82 81       	ldd	r24, Z+2	; 0x02
    b09c:	81 51       	subi	r24, 0x11	; 17
    b09e:	87 30       	cpi	r24, 0x07	; 7
    b0a0:	40 f4       	brcc	.+16     	; 0xb0b2 <checkcollide+0x700>
    b0a2:	40 e7       	ldi	r20, 0x70	; 112
    b0a4:	58 e7       	ldi	r21, 0x78	; 120
    b0a6:	6c 2f       	mov	r22, r28
    b0a8:	66 0f       	add	r22, r22
    b0aa:	81 e0       	ldi	r24, 0x01	; 1
    b0ac:	80 0f       	add	r24, r16
    b0ae:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;};  
    b0b2:	f6 01       	movw	r30, r12
    b0b4:	eb 5d       	subi	r30, 0xDB	; 219
    b0b6:	f6 4f       	sbci	r31, 0xF6	; 246
    b0b8:	82 81       	ldd	r24, Z+2	; 0x02
    b0ba:	88 31       	cpi	r24, 0x18	; 24
    b0bc:	b8 f0       	brcs	.+46     	; 0xb0ec <checkcollide+0x73a>
    b0be:	88 e1       	ldi	r24, 0x18	; 24
    b0c0:	82 83       	std	Z+2, r24	; 0x02
    b0c2:	6c 2f       	mov	r22, r28
    b0c4:	66 0f       	add	r22, r22
    b0c6:	41 e6       	ldi	r20, 0x61	; 97
    b0c8:	58 e7       	ldi	r21, 0x78	; 120
    b0ca:	81 e0       	ldi	r24, 0x01	; 1
    b0cc:	80 0f       	add	r24, r16
    b0ce:	4e cf       	rjmp	.-356    	; 0xaf6c <checkcollide+0x5ba>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    b0d0:	23 2b       	or	r18, r19
    b0d2:	71 f4       	brne	.+28     	; 0xb0f0 <checkcollide+0x73e>
    b0d4:	96 01       	movw	r18, r12
    b0d6:	22 0f       	add	r18, r18
    b0d8:	33 1f       	adc	r19, r19
    b0da:	22 0f       	add	r18, r18
    b0dc:	33 1f       	adc	r19, r19
    b0de:	f9 01       	movw	r30, r18
    b0e0:	eb 5d       	subi	r30, 0xDB	; 219
    b0e2:	f6 4f       	sbci	r31, 0xF6	; 246
    b0e4:	91 83       	std	Z+1, r25	; 0x01
    b0e6:	80 83       	st	Z, r24
    b0e8:	12 82       	std	Z+2, r1	; 0x02
    b0ea:	13 82       	std	Z+3, r1	; 0x03
    b0ec:	81 e0       	ldi	r24, 0x01	; 1
    b0ee:	41 cf       	rjmp	.-382    	; 0xaf72 <checkcollide+0x5c0>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b0f0:	2f ef       	ldi	r18, 0xFF	; 255
    b0f2:	c2 1a       	sub	r12, r18
    b0f4:	d2 0a       	sbc	r13, r18
    b0f6:	34 96       	adiw	r30, 0x04	; 4
    b0f8:	2c e0       	ldi	r18, 0x0C	; 12
    b0fa:	c2 16       	cp	r12, r18
    b0fc:	d1 04       	cpc	r13, r1
    b0fe:	09 f0       	breq	.+2      	; 0xb102 <checkcollide+0x750>
    b100:	d5 ce       	rjmp	.-598    	; 0xaeac <checkcollide+0x4fa>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) return 1; else return 0;
    b102:	ef ef       	ldi	r30, 0xFF	; 255
    b104:	e7 0d       	add	r30, r7
    b106:	81 e0       	ldi	r24, 0x01	; 1
    b108:	90 e0       	ldi	r25, 0x00	; 0
    b10a:	e4 31       	cpi	r30, 0x14	; 20
    b10c:	08 f0       	brcs	.+2      	; 0xb110 <checkcollide+0x75e>
    b10e:	80 e0       	ldi	r24, 0x00	; 0
}
    b110:	df 91       	pop	r29
    b112:	cf 91       	pop	r28
    b114:	1f 91       	pop	r17
    b116:	0f 91       	pop	r16
    b118:	ff 90       	pop	r15
    b11a:	ef 90       	pop	r14
    b11c:	df 90       	pop	r13
    b11e:	cf 90       	pop	r12
    b120:	bf 90       	pop	r11
    b122:	af 90       	pop	r10
    b124:	9f 90       	pop	r9
    b126:	8f 90       	pop	r8
    b128:	7f 90       	pop	r7
    b12a:	08 95       	ret

0000b12c <moveplayer2>:
  
}

void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
    b12c:	81 e0       	ldi	r24, 0x01	; 1
    b12e:	0e 94 35 42 	call	0x846a	; 0x846a <ReadJoypad>
if(player2.stuck)
    b132:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <player2+0xa>
    b136:	22 23       	and	r18, r18
    b138:	a1 f0       	breq	.+40     	; 0xb162 <moveplayer2+0x36>
{
player2.sCount = player2.sCount + 1;
    b13a:	20 91 18 0a 	lds	r18, 0x0A18	; 0x800a18 <player2+0x8>
    b13e:	30 91 19 0a 	lds	r19, 0x0A19	; 0x800a19 <player2+0x9>
    b142:	2f 5f       	subi	r18, 0xFF	; 255
    b144:	3f 4f       	sbci	r19, 0xFF	; 255
if(player2.sCount >= 100)
    b146:	24 36       	cpi	r18, 0x64	; 100
    b148:	31 05       	cpc	r19, r1
    b14a:	2c f4       	brge	.+10     	; 0xb156 <moveplayer2+0x2a>
void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
if(player2.stuck)
{
player2.sCount = player2.sCount + 1;
    b14c:	30 93 19 0a 	sts	0x0A19, r19	; 0x800a19 <player2+0x9>
    b150:	20 93 18 0a 	sts	0x0A18, r18	; 0x800a18 <player2+0x8>
    b154:	06 c0       	rjmp	.+12     	; 0xb162 <moveplayer2+0x36>
if(player2.sCount >= 100)
{
player2.sCount = 0;
    b156:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <player2+0x9>
    b15a:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <player2+0x8>
player2.stuck = false;
    b15e:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <player2+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    b162:	20 91 74 09 	lds	r18, 0x0974	; 0x800974 <introplaying>
    b166:	22 23       	and	r18, r18
    b168:	29 f0       	breq	.+10     	; 0xb174 <moveplayer2+0x48>
    b16a:	83 ff       	sbrs	r24, 3
    b16c:	85 c0       	rjmp	.+266    	; 0xb278 <moveplayer2+0x14c>
    b16e:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <introplaying>
    b172:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player2.stuck == false) { 
    b174:	86 ff       	sbrs	r24, 6
    b176:	13 c0       	rjmp	.+38     	; 0xb19e <moveplayer2+0x72>
    b178:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <player2+0xa>
    b17c:	21 11       	cpse	r18, r1
    b17e:	0f c0       	rjmp	.+30     	; 0xb19e <moveplayer2+0x72>
player2.direction = 'l';
    b180:	2c e6       	ldi	r18, 0x6C	; 108
    b182:	20 93 1e 0a 	sts	0x0A1E, r18	; 0x800a1e <player2+0xe>
player2.action = 'w';
    b186:	27 e7       	ldi	r18, 0x77	; 119
    b188:	20 93 1d 0a 	sts	0x0A1D, r18	; 0x800a1d <player2+0xd>
player2.facing = 1;
    b18c:	21 e0       	ldi	r18, 0x01	; 1
    b18e:	30 e0       	ldi	r19, 0x00	; 0
    b190:	30 93 1c 0a 	sts	0x0A1C, r19	; 0x800a1c <player2+0xc>
    b194:	20 93 1b 0a 	sts	0x0A1B, r18	; 0x800a1b <player2+0xb>
player2.ximpulse = -1; 
    b198:	2f ef       	ldi	r18, 0xFF	; 255
    b19a:	20 93 22 0a 	sts	0x0A22, r18	; 0x800a22 <player2+0x12>
};
if (joy&BTN_RIGHT && player2.stuck == false) {
    b19e:	87 ff       	sbrs	r24, 7
    b1a0:	11 c0       	rjmp	.+34     	; 0xb1c4 <moveplayer2+0x98>
    b1a2:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <player2+0xa>
    b1a6:	21 11       	cpse	r18, r1
    b1a8:	0d c0       	rjmp	.+26     	; 0xb1c4 <moveplayer2+0x98>
player2.direction = 'r';
    b1aa:	22 e7       	ldi	r18, 0x72	; 114
    b1ac:	20 93 1e 0a 	sts	0x0A1E, r18	; 0x800a1e <player2+0xe>
player2.action = 'w';
    b1b0:	27 e7       	ldi	r18, 0x77	; 119
    b1b2:	20 93 1d 0a 	sts	0x0A1D, r18	; 0x800a1d <player2+0xd>
player2.facing = 0;
    b1b6:	10 92 1c 0a 	sts	0x0A1C, r1	; 0x800a1c <player2+0xc>
    b1ba:	10 92 1b 0a 	sts	0x0A1B, r1	; 0x800a1b <player2+0xb>
player2.ximpulse = 1; 
    b1be:	21 e0       	ldi	r18, 0x01	; 1
    b1c0:	20 93 22 0a 	sts	0x0A22, r18	; 0x800a22 <player2+0x12>
};
if ( !(joy&BTN_A) ) {
    b1c4:	ac 01       	movw	r20, r24
    b1c6:	44 27       	eor	r20, r20
    b1c8:	51 70       	andi	r21, 0x01	; 1
    b1ca:	90 fd       	sbrc	r25, 0
    b1cc:	09 c0       	rjmp	.+18     	; 0xb1e0 <moveplayer2+0xb4>
player2.yimpulse = 0;
    b1ce:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x13>
player2.jumpreleased = true;
    b1d2:	21 e0       	ldi	r18, 0x01	; 1
    b1d4:	20 93 25 0a 	sts	0x0A25, r18	; 0x800a25 <player2+0x15>
player2.jumping = false;
    b1d8:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x14>
player2.jumpcounter = 0;
    b1dc:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <player2+0x1a>
};

if ( !(joy&BTN_B) ) {
    b1e0:	80 fd       	sbrc	r24, 0
    b1e2:	03 c0       	rjmp	.+6      	; 0xb1ea <moveplayer2+0xbe>
player2.bpressed = false;
    b1e4:	10 92 26 0a 	sts	0x0A26, r1	; 0x800a26 <player2+0x16>
    b1e8:	08 c0       	rjmp	.+16     	; 0xb1fa <moveplayer2+0xce>
};
if ( joy&BTN_B && player2.touchground) {
    b1ea:	20 91 21 0a 	lds	r18, 0x0A21	; 0x800a21 <player2+0x11>
    b1ee:	22 23       	and	r18, r18
    b1f0:	21 f0       	breq	.+8      	; 0xb1fa <moveplayer2+0xce>
	if(player2.bananaCount > 0 && player2.bpressed == false)
    b1f2:	20 91 2c 0a 	lds	r18, 0x0A2C	; 0x800a2c <player2+0x1c>
    b1f6:	21 11       	cpse	r18, r1
    b1f8:	2c c2       	rjmp	.+1112   	; 0xb652 <moveplayer2+0x526>
	player2.bananaCount = player2.bananaCount - 1;
    player2.bananaBool = true;
	player2.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    b1fa:	81 fd       	sbrc	r24, 1
    b1fc:	03 c0       	rjmp	.+6      	; 0xb204 <moveplayer2+0xd8>
player2.ypressed = false;
    b1fe:	10 92 27 0a 	sts	0x0A27, r1	; 0x800a27 <player2+0x17>
    b202:	16 c0       	rjmp	.+44     	; 0xb230 <moveplayer2+0x104>
};
if ( joy&BTN_Y) {
	if(player2.mushroomCount > 0 && player2.ypressed == false)
    b204:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <player2+0x6>
    b208:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <player2+0x7>
    b20c:	18 16       	cp	r1, r24
    b20e:	19 06       	cpc	r1, r25
    b210:	7c f4       	brge	.+30     	; 0xb230 <moveplayer2+0x104>
    b212:	20 91 27 0a 	lds	r18, 0x0A27	; 0x800a27 <player2+0x17>
    b216:	21 11       	cpse	r18, r1
    b218:	0b c0       	rjmp	.+22     	; 0xb230 <moveplayer2+0x104>
	{
	player2.mushroomCount = player2.mushroomCount - 1;
    b21a:	01 97       	sbiw	r24, 0x01	; 1
    b21c:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <player2+0x7>
    b220:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <player2+0x6>
	player2.ximpulse = 10;
    b224:	8a e0       	ldi	r24, 0x0A	; 10
    b226:	80 93 22 0a 	sts	0x0A22, r24	; 0x800a22 <player2+0x12>
	player2.ypressed = true;
    b22a:	81 e0       	ldi	r24, 0x01	; 1
    b22c:	80 93 27 0a 	sts	0x0A27, r24	; 0x800a27 <player2+0x17>
	};
}; 


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    b230:	45 2b       	or	r20, r21
    b232:	11 f1       	breq	.+68     	; 0xb278 <moveplayer2+0x14c>
    b234:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <player2+0x11>
    b238:	88 23       	and	r24, r24
    b23a:	f1 f0       	breq	.+60     	; 0xb278 <moveplayer2+0x14c>
    b23c:	80 91 25 0a 	lds	r24, 0x0A25	; 0x800a25 <player2+0x15>
    b240:	88 23       	and	r24, r24
    b242:	d1 f0       	breq	.+52     	; 0xb278 <moveplayer2+0x14c>
    b244:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <player2+0xa>
    b248:	81 11       	cpse	r24, r1
    b24a:	16 c0       	rjmp	.+44     	; 0xb278 <moveplayer2+0x14c>
player2.action = 'j';
    b24c:	8a e6       	ldi	r24, 0x6A	; 106
    b24e:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0xd>
player2.yimpulse = 0;
    b252:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x13>
player2.jumping = true;
    b256:	81 e0       	ldi	r24, 0x01	; 1
    b258:	80 93 24 0a 	sts	0x0A24, r24	; 0x800a24 <player2+0x14>
player2.touchground = false;
    b25c:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <player2+0x11>
player2.jumpreleased = false;
    b260:	10 92 25 0a 	sts	0x0A25, r1	; 0x800a25 <player2+0x15>
player2.jumpcounter++ ; 
    b264:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <player2+0x1a>
    b268:	8f 5f       	subi	r24, 0xFF	; 255
    b26a:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <player2+0x1a>
TriggerFx(4,0xff,true);
    b26e:	41 e0       	ldi	r20, 0x01	; 1
    b270:	6f ef       	ldi	r22, 0xFF	; 255
    b272:	84 e0       	ldi	r24, 0x04	; 4
    b274:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
};
};

oldx = player2.x;
    b278:	20 91 10 0a 	lds	r18, 0x0A10	; 0x800a10 <player2>
    b27c:	30 91 11 0a 	lds	r19, 0x0A11	; 0x800a11 <player2+0x1>
    b280:	30 93 c3 09 	sts	0x09C3, r19	; 0x8009c3 <oldx+0x1>
    b284:	20 93 c2 09 	sts	0x09C2, r18	; 0x8009c2 <oldx>
oldy = player2.y;
    b288:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b28c:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b290:	70 93 92 0a 	sts	0x0A92, r23	; 0x800a92 <oldy+0x1>
    b294:	60 93 91 0a 	sts	0x0A91, r22	; 0x800a91 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    b298:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <player2+0x1a>
    b29c:	9f ef       	ldi	r25, 0xFF	; 255
    b29e:	98 0f       	add	r25, r24
    b2a0:	99 31       	cpi	r25, 0x19	; 25
    b2a2:	18 f4       	brcc	.+6      	; 0xb2aa <moveplayer2+0x17e>
    b2a4:	9c ef       	ldi	r25, 0xFC	; 252
    b2a6:	90 93 23 0a 	sts	0x0A23, r25	; 0x800a23 <player2+0x13>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    b2aa:	96 ee       	ldi	r25, 0xE6	; 230
    b2ac:	98 0f       	add	r25, r24
    b2ae:	9b 30       	cpi	r25, 0x0B	; 11
    b2b0:	18 f4       	brcc	.+6      	; 0xb2b8 <moveplayer2+0x18c>
    b2b2:	9d ef       	ldi	r25, 0xFD	; 253
    b2b4:	90 93 23 0a 	sts	0x0A23, r25	; 0x800a23 <player2+0x13>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    b2b8:	9b ed       	ldi	r25, 0xDB	; 219
    b2ba:	98 0f       	add	r25, r24
    b2bc:	94 30       	cpi	r25, 0x04	; 4
    b2be:	18 f4       	brcc	.+6      	; 0xb2c6 <moveplayer2+0x19a>
    b2c0:	9e ef       	ldi	r25, 0xFE	; 254
    b2c2:	90 93 23 0a 	sts	0x0A23, r25	; 0x800a23 <player2+0x13>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    b2c6:	97 ed       	ldi	r25, 0xD7	; 215
    b2c8:	98 0f       	add	r25, r24
    b2ca:	96 30       	cpi	r25, 0x06	; 6
    b2cc:	20 f4       	brcc	.+8      	; 0xb2d6 <moveplayer2+0x1aa>
    b2ce:	9f ef       	ldi	r25, 0xFF	; 255
    b2d0:	90 93 23 0a 	sts	0x0A23, r25	; 0x800a23 <player2+0x13>
    b2d4:	02 c0       	rjmp	.+4      	; 0xb2da <moveplayer2+0x1ae>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    b2d6:	88 23       	and	r24, r24
    b2d8:	19 f0       	breq	.+6      	; 0xb2e0 <moveplayer2+0x1b4>
    b2da:	8f 5f       	subi	r24, 0xFF	; 255
    b2dc:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <player2+0x1a>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    b2e0:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <player2+0x1a>
    b2e4:	8f 32       	cpi	r24, 0x2F	; 47
    b2e6:	10 f0       	brcs	.+4      	; 0xb2ec <moveplayer2+0x1c0>
    b2e8:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <player2+0x1a>
player2.x = player2.x + player2.ximpulse;
    b2ec:	80 91 22 0a 	lds	r24, 0x0A22	; 0x800a22 <player2+0x12>
    b2f0:	a9 01       	movw	r20, r18
    b2f2:	48 0f       	add	r20, r24
    b2f4:	51 1d       	adc	r21, r1
    b2f6:	87 fd       	sbrc	r24, 7
    b2f8:	5a 95       	dec	r21
    b2fa:	ca 01       	movw	r24, r20
    b2fc:	50 93 11 0a 	sts	0x0A11, r21	; 0x800a11 <player2+0x1>
    b300:	40 93 10 0a 	sts	0x0A10, r20	; 0x800a10 <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    b304:	40 91 23 0a 	lds	r20, 0x0A23	; 0x800a23 <player2+0x13>
    b308:	64 0f       	add	r22, r20
    b30a:	71 1d       	adc	r23, r1
    b30c:	47 fd       	sbrc	r20, 7
    b30e:	7a 95       	dec	r23
    b310:	6e 5f       	subi	r22, 0xFE	; 254
    b312:	7f 4f       	sbci	r23, 0xFF	; 255
    b314:	70 93 13 0a 	sts	0x0A13, r23	; 0x800a13 <player2+0x3>
    b318:	60 93 12 0a 	sts	0x0A12, r22	; 0x800a12 <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    b31c:	28 17       	cp	r18, r24
    b31e:	39 07       	cpc	r19, r25
    b320:	3c f4       	brge	.+14     	; 0xb330 <moveplayer2+0x204>
    b322:	20 91 2b 0a 	lds	r18, 0x0A2B	; 0x800a2b <player2+0x1b>
    b326:	2f 5f       	subi	r18, 0xFF	; 255
    b328:	20 93 2b 0a 	sts	0x0A2B, r18	; 0x800a2b <player2+0x1b>
    b32c:	22 e7       	ldi	r18, 0x72	; 114
    b32e:	09 c0       	rjmp	.+18     	; 0xb342 <moveplayer2+0x216>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    b330:	82 17       	cp	r24, r18
    b332:	93 07       	cpc	r25, r19
    b334:	4c f4       	brge	.+18     	; 0xb348 <moveplayer2+0x21c>
    b336:	20 91 2b 0a 	lds	r18, 0x0A2B	; 0x800a2b <player2+0x1b>
    b33a:	2f 5f       	subi	r18, 0xFF	; 255
    b33c:	20 93 2b 0a 	sts	0x0A2B, r18	; 0x800a2b <player2+0x1b>
    b340:	2c e6       	ldi	r18, 0x6C	; 108
    b342:	20 93 1e 0a 	sts	0x0A1E, r18	; 0x800a1e <player2+0xe>
    b346:	05 c0       	rjmp	.+10     	; 0xb352 <moveplayer2+0x226>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    b348:	28 17       	cp	r18, r24
    b34a:	39 07       	cpc	r19, r25
    b34c:	11 f4       	brne	.+4      	; 0xb352 <moveplayer2+0x226>
    b34e:	10 92 2b 0a 	sts	0x0A2B, r1	; 0x800a2b <player2+0x1b>
if (player2.aniframe > 0 ) player2.aniframe++;
    b352:	20 91 2b 0a 	lds	r18, 0x0A2B	; 0x800a2b <player2+0x1b>
    b356:	22 23       	and	r18, r18
    b358:	19 f0       	breq	.+6      	; 0xb360 <moveplayer2+0x234>
    b35a:	2f 5f       	subi	r18, 0xFF	; 255
    b35c:	20 93 2b 0a 	sts	0x0A2B, r18	; 0x800a2b <player2+0x1b>
if (player2.aniframe>24) player2.aniframe = 1;
    b360:	20 91 2b 0a 	lds	r18, 0x0A2B	; 0x800a2b <player2+0x1b>
    b364:	29 31       	cpi	r18, 0x19	; 25
    b366:	18 f0       	brcs	.+6      	; 0xb36e <moveplayer2+0x242>
    b368:	21 e0       	ldi	r18, 0x01	; 1
    b36a:	20 93 2b 0a 	sts	0x0A2B, r18	; 0x800a2b <player2+0x1b>
if(checkBanana(player2.x + 4, player2.y ,1) == 1)
    b36e:	41 e0       	ldi	r20, 0x01	; 1
    b370:	50 e0       	ldi	r21, 0x00	; 0
    b372:	04 96       	adiw	r24, 0x04	; 4
    b374:	0e 94 df 53 	call	0xa7be	; 0xa7be <checkBanana>
    b378:	01 97       	sbiw	r24, 0x01	; 1
    b37a:	19 f4       	brne	.+6      	; 0xb382 <moveplayer2+0x256>
{
    player2.stuck = true;
    b37c:	81 e0       	ldi	r24, 0x01	; 1
    b37e:	80 93 1a 0a 	sts	0x0A1A, r24	; 0x800a1a <player2+0xa>
} 
if(player2.bananaBool == true)
    b382:	80 91 28 0a 	lds	r24, 0x0A28	; 0x800a28 <player2+0x18>
    b386:	88 23       	and	r24, r24
    b388:	81 f0       	breq	.+32     	; 0xb3aa <moveplayer2+0x27e>
{
makeBanana2(player2.x + 4, player2.y,scrolltiles);
    b38a:	40 91 c3 0a 	lds	r20, 0x0AC3	; 0x800ac3 <scrolltiles>
    b38e:	50 e0       	ldi	r21, 0x00	; 0
    b390:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b394:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b398:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b39c:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b3a0:	04 96       	adiw	r24, 0x04	; 4
    b3a2:	0e 94 31 53 	call	0xa662	; 0xa662 <makeBanana2>
player2.bananaBool = false;
    b3a6:	10 92 28 0a 	sts	0x0A28, r1	; 0x800a28 <player2+0x18>
}
checkcollide( player2.x, player2.y - 4 ,1,2);
    b3aa:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b3ae:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b3b2:	64 50       	subi	r22, 0x04	; 4
    b3b4:	71 09       	sbc	r23, r1
    b3b6:	22 e0       	ldi	r18, 0x02	; 2
    b3b8:	30 e0       	ldi	r19, 0x00	; 0
    b3ba:	41 e0       	ldi	r20, 0x01	; 1
    b3bc:	50 e0       	ldi	r21, 0x00	; 0
    b3be:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b3c2:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b3c6:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3,2);
    b3ca:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b3ce:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b3d2:	64 50       	subi	r22, 0x04	; 4
    b3d4:	71 09       	sbc	r23, r1
    b3d6:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b3da:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b3de:	22 e0       	ldi	r18, 0x02	; 2
    b3e0:	30 e0       	ldi	r19, 0x00	; 0
    b3e2:	43 e0       	ldi	r20, 0x03	; 3
    b3e4:	50 e0       	ldi	r21, 0x00	; 0
    b3e6:	03 97       	sbiw	r24, 0x03	; 3
    b3e8:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3,2);
    b3ec:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b3f0:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b3f4:	64 50       	subi	r22, 0x04	; 4
    b3f6:	71 09       	sbc	r23, r1
    b3f8:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b3fc:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b400:	22 e0       	ldi	r18, 0x02	; 2
    b402:	30 e0       	ldi	r19, 0x00	; 0
    b404:	43 e0       	ldi	r20, 0x03	; 3
    b406:	50 e0       	ldi	r21, 0x00	; 0
    b408:	04 96       	adiw	r24, 0x04	; 4
    b40a:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2,2);
    b40e:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b412:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b416:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b41a:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b41e:	68 17       	cp	r22, r24
    b420:	79 07       	cpc	r23, r25
    b422:	64 f4       	brge	.+24     	; 0xb43c <moveplayer2+0x310>
    b424:	66 51       	subi	r22, 0x16	; 22
    b426:	71 09       	sbc	r23, r1
    b428:	22 e0       	ldi	r18, 0x02	; 2
    b42a:	30 e0       	ldi	r19, 0x00	; 0
    b42c:	42 e0       	ldi	r20, 0x02	; 2
    b42e:	50 e0       	ldi	r21, 0x00	; 0
    b430:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b434:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b438:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    b43c:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b440:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b444:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b448:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b44c:	86 17       	cp	r24, r22
    b44e:	97 07       	cpc	r25, r23
    b450:	ac f5       	brge	.+106    	; 0xb4bc <moveplayer2+0x390>
    b452:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <player2+0x11>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0,2 )&1 || checkcollide( player2.x + 4 , player2.y     ,0,2 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    b456:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b45a:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b45e:	22 e0       	ldi	r18, 0x02	; 2
    b460:	30 e0       	ldi	r19, 0x00	; 0
    b462:	40 e0       	ldi	r20, 0x00	; 0
    b464:	50 e0       	ldi	r21, 0x00	; 0
    b466:	03 97       	sbiw	r24, 0x03	; 3
    b468:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b46c:	80 ff       	sbrs	r24, 0
    b46e:	15 c0       	rjmp	.+42     	; 0xb49a <moveplayer2+0x36e>
    b470:	80 91 12 0a 	lds	r24, 0x0A12	; 0x800a12 <player2+0x2>
    b474:	90 91 13 0a 	lds	r25, 0x0A13	; 0x800a13 <player2+0x3>
    b478:	97 fd       	sbrc	r25, 7
    b47a:	0f 96       	adiw	r24, 0x0f	; 15
    b47c:	80 7f       	andi	r24, 0xF0	; 240
    b47e:	01 97       	sbiw	r24, 0x01	; 1
    b480:	90 93 13 0a 	sts	0x0A13, r25	; 0x800a13 <player2+0x3>
    b484:	80 93 12 0a 	sts	0x0A12, r24	; 0x800a12 <player2+0x2>
    b488:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x14>
    b48c:	81 e0       	ldi	r24, 0x01	; 1
    b48e:	80 93 21 0a 	sts	0x0A21, r24	; 0x800a21 <player2+0x11>
    b492:	87 e7       	ldi	r24, 0x77	; 119
    b494:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0xd>
    b498:	11 c0       	rjmp	.+34     	; 0xb4bc <moveplayer2+0x390>
    b49a:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b49e:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b4a2:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b4a6:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b4aa:	22 e0       	ldi	r18, 0x02	; 2
    b4ac:	30 e0       	ldi	r19, 0x00	; 0
    b4ae:	40 e0       	ldi	r20, 0x00	; 0
    b4b0:	50 e0       	ldi	r21, 0x00	; 0
    b4b2:	04 96       	adiw	r24, 0x04	; 4
    b4b4:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b4b8:	80 fd       	sbrc	r24, 0
    b4ba:	da cf       	rjmp	.-76     	; 0xb470 <moveplayer2+0x344>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0,2 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0,2 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b4bc:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b4c0:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b4c4:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b4c8:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b4cc:	68 17       	cp	r22, r24
    b4ce:	79 07       	cpc	r23, r25
    b4d0:	94 f5       	brge	.+100    	; 0xb536 <moveplayer2+0x40a>
    b4d2:	65 51       	subi	r22, 0x15	; 21
    b4d4:	71 09       	sbc	r23, r1
    b4d6:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b4da:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b4de:	22 e0       	ldi	r18, 0x02	; 2
    b4e0:	30 e0       	ldi	r19, 0x00	; 0
    b4e2:	40 e0       	ldi	r20, 0x00	; 0
    b4e4:	50 e0       	ldi	r21, 0x00	; 0
    b4e6:	03 97       	sbiw	r24, 0x03	; 3
    b4e8:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b4ec:	80 ff       	sbrs	r24, 0
    b4ee:	10 c0       	rjmp	.+32     	; 0xb510 <moveplayer2+0x3e4>
    b4f0:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b4f4:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b4f8:	90 93 13 0a 	sts	0x0A13, r25	; 0x800a13 <player2+0x3>
    b4fc:	80 93 12 0a 	sts	0x0A12, r24	; 0x800a12 <player2+0x2>
    b500:	10 92 2a 0a 	sts	0x0A2A, r1	; 0x800a2a <player2+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    b504:	41 e0       	ldi	r20, 0x01	; 1
    b506:	6f ef       	ldi	r22, 0xFF	; 255
    b508:	85 e0       	ldi	r24, 0x05	; 5
    b50a:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    b50e:	13 c0       	rjmp	.+38     	; 0xb536 <moveplayer2+0x40a>
checkcollide( player2.x +4, player2.y - 4 ,3,2);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0,2 )&1 || checkcollide( player2.x + 4 , player2.y     ,0,2 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0,2 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0,2 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b510:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b514:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b518:	65 51       	subi	r22, 0x15	; 21
    b51a:	71 09       	sbc	r23, r1
    b51c:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b520:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b524:	22 e0       	ldi	r18, 0x02	; 2
    b526:	30 e0       	ldi	r19, 0x00	; 0
    b528:	40 e0       	ldi	r20, 0x00	; 0
    b52a:	50 e0       	ldi	r21, 0x00	; 0
    b52c:	04 96       	adiw	r24, 0x04	; 4
    b52e:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b532:	80 fd       	sbrc	r24, 0
    b534:	dd cf       	rjmp	.-70     	; 0xb4f0 <moveplayer2+0x3c4>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0,2 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0,2 )&1)  player2.x = oldx;  
    b536:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b53a:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b53e:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    b542:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    b546:	28 17       	cp	r18, r24
    b548:	39 07       	cpc	r19, r25
    b54a:	5c f5       	brge	.+86     	; 0xb5a2 <moveplayer2+0x476>
    b54c:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b550:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b554:	63 50       	subi	r22, 0x03	; 3
    b556:	71 09       	sbc	r23, r1
    b558:	22 e0       	ldi	r18, 0x02	; 2
    b55a:	30 e0       	ldi	r19, 0x00	; 0
    b55c:	40 e0       	ldi	r20, 0x00	; 0
    b55e:	50 e0       	ldi	r21, 0x00	; 0
    b560:	05 96       	adiw	r24, 0x05	; 5
    b562:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b566:	80 ff       	sbrs	r24, 0
    b568:	09 c0       	rjmp	.+18     	; 0xb57c <moveplayer2+0x450>
    b56a:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <oldx>
    b56e:	90 91 c3 09 	lds	r25, 0x09C3	; 0x8009c3 <oldx+0x1>
    b572:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    b576:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
    b57a:	13 c0       	rjmp	.+38     	; 0xb5a2 <moveplayer2+0x476>
    b57c:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b580:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b584:	64 51       	subi	r22, 0x14	; 20
    b586:	71 09       	sbc	r23, r1
    b588:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b58c:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b590:	22 e0       	ldi	r18, 0x02	; 2
    b592:	30 e0       	ldi	r19, 0x00	; 0
    b594:	40 e0       	ldi	r20, 0x00	; 0
    b596:	50 e0       	ldi	r21, 0x00	; 0
    b598:	05 96       	adiw	r24, 0x05	; 5
    b59a:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b59e:	80 fd       	sbrc	r24, 0
    b5a0:	e4 cf       	rjmp	.-56     	; 0xb56a <moveplayer2+0x43e>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0,2 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0,2 )&1)  player2.x = oldx; 
    b5a2:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b5a6:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b5aa:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    b5ae:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    b5b2:	82 17       	cp	r24, r18
    b5b4:	93 07       	cpc	r25, r19
    b5b6:	5c f5       	brge	.+86     	; 0xb60e <moveplayer2+0x4e2>
    b5b8:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b5bc:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b5c0:	63 50       	subi	r22, 0x03	; 3
    b5c2:	71 09       	sbc	r23, r1
    b5c4:	22 e0       	ldi	r18, 0x02	; 2
    b5c6:	30 e0       	ldi	r19, 0x00	; 0
    b5c8:	40 e0       	ldi	r20, 0x00	; 0
    b5ca:	50 e0       	ldi	r21, 0x00	; 0
    b5cc:	04 97       	sbiw	r24, 0x04	; 4
    b5ce:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b5d2:	80 ff       	sbrs	r24, 0
    b5d4:	09 c0       	rjmp	.+18     	; 0xb5e8 <moveplayer2+0x4bc>
    b5d6:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <oldx>
    b5da:	90 91 c3 09 	lds	r25, 0x09C3	; 0x8009c3 <oldx+0x1>
    b5de:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    b5e2:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
    b5e6:	13 c0       	rjmp	.+38     	; 0xb60e <moveplayer2+0x4e2>
    b5e8:	60 91 12 0a 	lds	r22, 0x0A12	; 0x800a12 <player2+0x2>
    b5ec:	70 91 13 0a 	lds	r23, 0x0A13	; 0x800a13 <player2+0x3>
    b5f0:	64 51       	subi	r22, 0x14	; 20
    b5f2:	71 09       	sbc	r23, r1
    b5f4:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b5f8:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b5fc:	22 e0       	ldi	r18, 0x02	; 2
    b5fe:	30 e0       	ldi	r19, 0x00	; 0
    b600:	40 e0       	ldi	r20, 0x00	; 0
    b602:	50 e0       	ldi	r21, 0x00	; 0
    b604:	04 97       	sbiw	r24, 0x04	; 4
    b606:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b60a:	80 fd       	sbrc	r24, 0
    b60c:	e4 cf       	rjmp	.-56     	; 0xb5d6 <moveplayer2+0x4aa>
player2.ximpulse = 0;    
    b60e:	10 92 22 0a 	sts	0x0A22, r1	; 0x800a22 <player2+0x12>
player2.yimpulse = 0;
    b612:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x13>
if ( player2.x < 8 ) player2.x = player.x;   // Increase time penalty herer
    b616:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b61a:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b61e:	08 97       	sbiw	r24, 0x08	; 8
    b620:	44 f4       	brge	.+16     	; 0xb632 <moveplayer2+0x506>
    b622:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    b626:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    b62a:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    b62e:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
if ( player2.x > 232 ) player2.x = player.x;    
    b632:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    b636:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    b63a:	89 3e       	cpi	r24, 0xE9	; 233
    b63c:	91 05       	cpc	r25, r1
    b63e:	b4 f0       	brlt	.+44     	; 0xb66c <moveplayer2+0x540>
    b640:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    b644:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    b648:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    b64c:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
    b650:	08 95       	ret

if ( !(joy&BTN_B) ) {
player2.bpressed = false;
};
if ( joy&BTN_B && player2.touchground) {
	if(player2.bananaCount > 0 && player2.bpressed == false)
    b652:	30 91 26 0a 	lds	r19, 0x0A26	; 0x800a26 <player2+0x16>
    b656:	31 11       	cpse	r19, r1
    b658:	d0 cd       	rjmp	.-1120   	; 0xb1fa <moveplayer2+0xce>
	{
	player2.bananaCount = player2.bananaCount - 1;
    b65a:	21 50       	subi	r18, 0x01	; 1
    b65c:	20 93 2c 0a 	sts	0x0A2C, r18	; 0x800a2c <player2+0x1c>
    player2.bananaBool = true;
    b660:	21 e0       	ldi	r18, 0x01	; 1
    b662:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <player2+0x18>
	player2.bpressed = true;
    b666:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <player2+0x16>
    b66a:	c7 cd       	rjmp	.-1138   	; 0xb1fa <moveplayer2+0xce>
    b66c:	08 95       	ret

0000b66e <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b66e:	cf 93       	push	r28
    b670:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b672:	41 e6       	ldi	r20, 0x61	; 97
    b674:	58 e7       	ldi	r21, 0x78	; 120
    b676:	60 e2       	ldi	r22, 0x20	; 32
    b678:	8c 2f       	mov	r24, r28
    b67a:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    b67e:	cf 5f       	subi	r28, 0xFF	; 255
    b680:	c0 32       	cpi	r28, 0x20	; 32
    b682:	b9 f7       	brne	.-18     	; 0xb672 <setheadline+0x4>
}
    b684:	cf 91       	pop	r28
    b686:	08 95       	ret

0000b688 <drawmonster>:

void drawmonster()
{
    b688:	0f 93       	push	r16
if (owl.onscreen)
    b68a:	80 91 38 0a 	lds	r24, 0x0A38	; 0x800a38 <owl+0x9>
    b68e:	88 23       	and	r24, r24
    b690:	09 f4       	brne	.+2      	; 0xb694 <drawmonster+0xc>
    b692:	46 c0       	rjmp	.+140    	; 0xb720 <drawmonster+0x98>
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
    b694:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <owl+0xa>
    b698:	81 11       	cpse	r24, r1
    b69a:	10 c0       	rjmp	.+32     	; 0xb6bc <drawmonster+0x34>
    b69c:	40 e0       	ldi	r20, 0x00	; 0
    b69e:	6b e0       	ldi	r22, 0x0B	; 11
    b6a0:	77 e4       	ldi	r23, 0x47	; 71
    b6a2:	86 e0       	ldi	r24, 0x06	; 6
    b6a4:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
    b6a8:	02 e0       	ldi	r16, 0x02	; 2
    b6aa:	22 e0       	ldi	r18, 0x02	; 2
    b6ac:	40 91 31 0a 	lds	r20, 0x0A31	; 0x800a31 <owl+0x2>
    b6b0:	60 91 2f 0a 	lds	r22, 0x0A2F	; 0x800a2f <owl>
    b6b4:	86 e0       	ldi	r24, 0x06	; 6
    b6b6:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    b6ba:	32 c0       	rjmp	.+100    	; 0xb720 <drawmonster+0x98>
if (aniframe < 10 ) 
    b6bc:	90 91 90 0a 	lds	r25, 0x0A90	; 0x800a90 <aniframe>
    b6c0:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0x19>
    b6c4:	9a 30       	cpi	r25, 0x0A	; 10
    b6c6:	90 f4       	brcc	.+36     	; 0xb6ec <drawmonster+0x64>
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b6c8:	02 e0       	ldi	r16, 0x02	; 2
    b6ca:	22 e0       	ldi	r18, 0x02	; 2
    b6cc:	40 91 31 0a 	lds	r20, 0x0A31	; 0x800a31 <owl+0x2>
    b6d0:	60 91 2f 0a 	lds	r22, 0x0A2F	; 0x800a2f <owl>
if (owl.onscreen)
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
{
    if(player.killer == true)
    b6d4:	88 23       	and	r24, r24
    b6d6:	29 f0       	breq	.+10     	; 0xb6e2 <drawmonster+0x5a>
    {
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b6d8:	86 e0       	ldi	r24, 0x06	; 6
    b6da:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,0); 
    b6de:	40 e0       	ldi	r20, 0x00	; 0
    b6e0:	12 c0       	rjmp	.+36     	; 0xb706 <drawmonster+0x7e>
    }
    else{
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b6e2:	86 e0       	ldi	r24, 0x06	; 6
    b6e4:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    b6e8:	40 e0       	ldi	r20, 0x00	; 0
    b6ea:	14 c0       	rjmp	.+40     	; 0xb714 <drawmonster+0x8c>
    b6ec:	60 91 2f 0a 	lds	r22, 0x0A2F	; 0x800a2f <owl>
}
else
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b6f0:	61 50       	subi	r22, 0x01	; 1
    b6f2:	02 e0       	ldi	r16, 0x02	; 2
    b6f4:	22 e0       	ldi	r18, 0x02	; 2
    b6f6:	40 91 31 0a 	lds	r20, 0x0A31	; 0x800a31 <owl+0x2>
    MapSprite2(owlIndex , owl0 ,0); 
    }
}
else
{
    if(player.killer == true)
    b6fa:	88 23       	and	r24, r24
    b6fc:	39 f0       	breq	.+14     	; 0xb70c <drawmonster+0x84>
    {
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b6fe:	86 e0       	ldi	r24, 0x06	; 6
    b700:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,1);
    b704:	41 e0       	ldi	r20, 0x01	; 1
    b706:	6b e0       	ldi	r22, 0x0B	; 11
    b708:	77 e4       	ldi	r23, 0x47	; 71
    b70a:	06 c0       	rjmp	.+12     	; 0xb718 <drawmonster+0x90>
    }
    else{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b70c:	86 e0       	ldi	r24, 0x06	; 6
    b70e:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    b712:	41 e0       	ldi	r20, 0x01	; 1
    b714:	61 e1       	ldi	r22, 0x11	; 17
    b716:	77 e4       	ldi	r23, 0x47	; 71
    b718:	86 e0       	ldi	r24, 0x06	; 6
    }
};
}; 
   
}
    b71a:	0f 91       	pop	r16
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    MapSprite2(owlIndex , owl1 ,1);
    }
    else{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    MapSprite2(owlIndex , owl0 ,1); 
    b71c:	0c 94 48 4e 	jmp	0x9c90	; 0x9c90 <MapSprite2>
    }
};
}; 
   
}
    b720:	0f 91       	pop	r16
    b722:	08 95       	ret

0000b724 <movemonster>:

void movemonster()
{
    b724:	0f 93       	push	r16
if (owl.onscreen) 
    b726:	80 91 38 0a 	lds	r24, 0x0A38	; 0x800a38 <owl+0x9>
    b72a:	88 23       	and	r24, r24
    b72c:	09 f4       	brne	.+2      	; 0xb730 <movemonster+0xc>
    b72e:	c9 c0       	rjmp	.+402    	; 0xb8c2 <movemonster+0x19e>
{
 
    owl.x = owl.x2 >> 2;
    b730:	80 91 33 0a 	lds	r24, 0x0A33	; 0x800a33 <owl+0x4>
    b734:	90 91 34 0a 	lds	r25, 0x0A34	; 0x800a34 <owl+0x5>
    oldx = owl.x;
    b738:	9c 01       	movw	r18, r24
    b73a:	35 95       	asr	r19
    b73c:	27 95       	ror	r18
    b73e:	35 95       	asr	r19
    b740:	27 95       	ror	r18
    b742:	30 93 c3 09 	sts	0x09C3, r19	; 0x8009c3 <oldx+0x1>
    b746:	20 93 c2 09 	sts	0x09C2, r18	; 0x8009c2 <oldx>
    oldy = owl.y; 
    b74a:	20 91 31 0a 	lds	r18, 0x0A31	; 0x800a31 <owl+0x2>
    b74e:	30 91 32 0a 	lds	r19, 0x0A32	; 0x800a32 <owl+0x3>
    b752:	30 93 92 0a 	sts	0x0A92, r19	; 0x800a92 <oldy+0x1>
    b756:	20 93 91 0a 	sts	0x0A91, r18	; 0x800a91 <oldy>
    oldx2 = owl.x2;
    b75a:	90 93 8b 0a 	sts	0x0A8B, r25	; 0x800a8b <oldx2+0x1>
    b75e:	80 93 8a 0a 	sts	0x0A8A, r24	; 0x800a8a <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    b762:	b9 01       	movw	r22, r18
    b764:	6e 5f       	subi	r22, 0xFE	; 254
    b766:	7f 4f       	sbci	r23, 0xFF	; 255
    b768:	40 91 37 0a 	lds	r20, 0x0A37	; 0x800a37 <owl+0x8>
    b76c:	64 0f       	add	r22, r20
    b76e:	71 1d       	adc	r23, r1
    b770:	47 fd       	sbrc	r20, 7
    b772:	7a 95       	dec	r23
    b774:	70 93 32 0a 	sts	0x0A32, r23	; 0x800a32 <owl+0x3>
    b778:	60 93 31 0a 	sts	0x0A31, r22	; 0x800a31 <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    b77c:	40 91 36 0a 	lds	r20, 0x0A36	; 0x800a36 <owl+0x7>
    b780:	84 0f       	add	r24, r20
    b782:	91 1d       	adc	r25, r1
    b784:	47 fd       	sbrc	r20, 7
    b786:	9a 95       	dec	r25
    b788:	90 93 34 0a 	sts	0x0A34, r25	; 0x800a34 <owl+0x5>
    b78c:	80 93 33 0a 	sts	0x0A33, r24	; 0x800a33 <owl+0x4>
    owl.x = owl.x2 >> 2;
    b790:	95 95       	asr	r25
    b792:	87 95       	ror	r24
    b794:	95 95       	asr	r25
    b796:	87 95       	ror	r24
    b798:	90 93 30 0a 	sts	0x0A30, r25	; 0x800a30 <owl+0x1>
    b79c:	80 93 2f 0a 	sts	0x0A2F, r24	; 0x800a2f <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0,0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    b7a0:	26 17       	cp	r18, r22
    b7a2:	37 07       	cpc	r19, r23
    b7a4:	54 f5       	brge	.+84     	; 0xb7fa <movemonster+0xd6>
    b7a6:	60 5f       	subi	r22, 0xF0	; 240
    b7a8:	7f 4f       	sbci	r23, 0xFF	; 255
    b7aa:	20 e0       	ldi	r18, 0x00	; 0
    b7ac:	30 e0       	ldi	r19, 0x00	; 0
    b7ae:	40 e0       	ldi	r20, 0x00	; 0
    b7b0:	50 e0       	ldi	r21, 0x00	; 0
    b7b2:	03 96       	adiw	r24, 0x03	; 3
    b7b4:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b7b8:	80 ff       	sbrs	r24, 0
    b7ba:	0c c0       	rjmp	.+24     	; 0xb7d4 <movemonster+0xb0>
    b7bc:	80 91 31 0a 	lds	r24, 0x0A31	; 0x800a31 <owl+0x2>
    b7c0:	90 91 32 0a 	lds	r25, 0x0A32	; 0x800a32 <owl+0x3>
    b7c4:	97 fd       	sbrc	r25, 7
    b7c6:	0f 96       	adiw	r24, 0x0f	; 15
    b7c8:	80 7f       	andi	r24, 0xF0	; 240
    b7ca:	90 93 32 0a 	sts	0x0A32, r25	; 0x800a32 <owl+0x3>
    b7ce:	80 93 31 0a 	sts	0x0A31, r24	; 0x800a31 <owl+0x2>
    b7d2:	13 c0       	rjmp	.+38     	; 0xb7fa <movemonster+0xd6>
    b7d4:	60 91 31 0a 	lds	r22, 0x0A31	; 0x800a31 <owl+0x2>
    b7d8:	70 91 32 0a 	lds	r23, 0x0A32	; 0x800a32 <owl+0x3>
    b7dc:	60 5f       	subi	r22, 0xF0	; 240
    b7de:	7f 4f       	sbci	r23, 0xFF	; 255
    b7e0:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <owl>
    b7e4:	90 91 30 0a 	lds	r25, 0x0A30	; 0x800a30 <owl+0x1>
    b7e8:	20 e0       	ldi	r18, 0x00	; 0
    b7ea:	30 e0       	ldi	r19, 0x00	; 0
    b7ec:	40 e0       	ldi	r20, 0x00	; 0
    b7ee:	50 e0       	ldi	r21, 0x00	; 0
    b7f0:	0c 96       	adiw	r24, 0x0c	; 12
    b7f2:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b7f6:	80 fd       	sbrc	r24, 0
    b7f8:	e1 cf       	rjmp	.-62     	; 0xb7bc <movemonster+0x98>
    if (owl.x > oldx ) if (!checkcollide( owl.x + 17, owl.y + 17 ,0,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    b7fa:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <owl>
    b7fe:	90 91 30 0a 	lds	r25, 0x0A30	; 0x800a30 <owl+0x1>
    b802:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    b806:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    b80a:	28 17       	cp	r18, r24
    b80c:	39 07       	cpc	r19, r25
    b80e:	d4 f4       	brge	.+52     	; 0xb844 <movemonster+0x120>
    b810:	60 91 31 0a 	lds	r22, 0x0A31	; 0x800a31 <owl+0x2>
    b814:	70 91 32 0a 	lds	r23, 0x0A32	; 0x800a32 <owl+0x3>
    b818:	6f 5e       	subi	r22, 0xEF	; 239
    b81a:	7f 4f       	sbci	r23, 0xFF	; 255
    b81c:	20 e0       	ldi	r18, 0x00	; 0
    b81e:	30 e0       	ldi	r19, 0x00	; 0
    b820:	40 e0       	ldi	r20, 0x00	; 0
    b822:	50 e0       	ldi	r21, 0x00	; 0
    b824:	41 96       	adiw	r24, 0x11	; 17
    b826:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b82a:	89 2b       	or	r24, r25
    b82c:	59 f4       	brne	.+22     	; 0xb844 <movemonster+0x120>
    b82e:	80 91 8a 0a 	lds	r24, 0x0A8A	; 0x800a8a <oldx2>
    b832:	90 91 8b 0a 	lds	r25, 0x0A8B	; 0x800a8b <oldx2+0x1>
    b836:	90 93 34 0a 	sts	0x0A34, r25	; 0x800a34 <owl+0x5>
    b83a:	80 93 33 0a 	sts	0x0A33, r24	; 0x800a33 <owl+0x4>
    b83e:	8f ef       	ldi	r24, 0xFF	; 255
    b840:	80 93 36 0a 	sts	0x0A36, r24	; 0x800a36 <owl+0x7>
    if (owl.x < oldx ) if (!checkcollide( owl.x - 1 , owl.y + 17,0,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    b844:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <owl>
    b848:	90 91 30 0a 	lds	r25, 0x0A30	; 0x800a30 <owl+0x1>
    b84c:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    b850:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    b854:	82 17       	cp	r24, r18
    b856:	93 07       	cpc	r25, r19
    b858:	d4 f4       	brge	.+52     	; 0xb88e <movemonster+0x16a>
    b85a:	60 91 31 0a 	lds	r22, 0x0A31	; 0x800a31 <owl+0x2>
    b85e:	70 91 32 0a 	lds	r23, 0x0A32	; 0x800a32 <owl+0x3>
    b862:	6f 5e       	subi	r22, 0xEF	; 239
    b864:	7f 4f       	sbci	r23, 0xFF	; 255
    b866:	20 e0       	ldi	r18, 0x00	; 0
    b868:	30 e0       	ldi	r19, 0x00	; 0
    b86a:	40 e0       	ldi	r20, 0x00	; 0
    b86c:	50 e0       	ldi	r21, 0x00	; 0
    b86e:	01 97       	sbiw	r24, 0x01	; 1
    b870:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    b874:	89 2b       	or	r24, r25
    b876:	59 f4       	brne	.+22     	; 0xb88e <movemonster+0x16a>
    b878:	80 91 8a 0a 	lds	r24, 0x0A8A	; 0x800a8a <oldx2>
    b87c:	90 91 8b 0a 	lds	r25, 0x0A8B	; 0x800a8b <oldx2+0x1>
    b880:	90 93 34 0a 	sts	0x0A34, r25	; 0x800a34 <owl+0x5>
    b884:	80 93 33 0a 	sts	0x0A33, r24	; 0x800a33 <owl+0x4>
    b888:	81 e0       	ldi	r24, 0x01	; 1
    b88a:	80 93 36 0a 	sts	0x0A36, r24	; 0x800a36 <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); owl.onscreen = false;};
    b88e:	80 91 31 0a 	lds	r24, 0x0A31	; 0x800a31 <owl+0x2>
    b892:	90 91 32 0a 	lds	r25, 0x0A32	; 0x800a32 <owl+0x3>
    b896:	81 3f       	cpi	r24, 0xF1	; 241
    b898:	91 05       	cpc	r25, r1
    b89a:	40 f4       	brcc	.+16     	; 0xb8ac <movemonster+0x188>
    b89c:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <owl>
    b8a0:	90 91 30 0a 	lds	r25, 0x0A30	; 0x800a30 <owl+0x1>
    b8a4:	40 96       	adiw	r24, 0x10	; 16
    b8a6:	81 30       	cpi	r24, 0x01	; 1
    b8a8:	91 40       	sbci	r25, 0x01	; 1
    b8aa:	58 f0       	brcs	.+22     	; 0xb8c2 <movemonster+0x19e>
    b8ac:	10 92 0f 0a 	sts	0x0A0F, r1	; 0x800a0f <MonsteronScreen>
    b8b0:	02 e0       	ldi	r16, 0x02	; 2
    b8b2:	22 e0       	ldi	r18, 0x02	; 2
    b8b4:	4c ee       	ldi	r20, 0xEC	; 236
    b8b6:	6c ee       	ldi	r22, 0xEC	; 236
    b8b8:	86 e0       	ldi	r24, 0x06	; 6
    b8ba:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    b8be:	10 92 38 0a 	sts	0x0A38, r1	; 0x800a38 <owl+0x9>
} 

    
}
    b8c2:	0f 91       	pop	r16
    b8c4:	08 95       	ret

0000b8c6 <checkplayer>:
void checkplayer(int x,int y)
{
    if(x >= player2.x - 10 && x <= player2.x + 10 && y >= player2.y - 10 && y <= player2.y + 10)
    b8c6:	20 91 10 0a 	lds	r18, 0x0A10	; 0x800a10 <player2>
    b8ca:	30 91 11 0a 	lds	r19, 0x0A11	; 0x800a11 <player2+0x1>
    b8ce:	a9 01       	movw	r20, r18
    b8d0:	4a 50       	subi	r20, 0x0A	; 10
    b8d2:	51 09       	sbc	r21, r1
    b8d4:	84 17       	cp	r24, r20
    b8d6:	95 07       	cpc	r25, r21
    b8d8:	64 f1       	brlt	.+88     	; 0xb932 <checkplayer+0x6c>
    b8da:	26 5f       	subi	r18, 0xF6	; 246
    b8dc:	3f 4f       	sbci	r19, 0xFF	; 255
    b8de:	28 17       	cp	r18, r24
    b8e0:	39 07       	cpc	r19, r25
    b8e2:	3c f1       	brlt	.+78     	; 0xb932 <checkplayer+0x6c>
    b8e4:	80 91 12 0a 	lds	r24, 0x0A12	; 0x800a12 <player2+0x2>
    b8e8:	90 91 13 0a 	lds	r25, 0x0A13	; 0x800a13 <player2+0x3>
    b8ec:	9c 01       	movw	r18, r24
    b8ee:	2a 50       	subi	r18, 0x0A	; 10
    b8f0:	31 09       	sbc	r19, r1
    b8f2:	62 17       	cp	r22, r18
    b8f4:	73 07       	cpc	r23, r19
    b8f6:	ec f0       	brlt	.+58     	; 0xb932 <checkplayer+0x6c>
    b8f8:	0a 96       	adiw	r24, 0x0a	; 10
    b8fa:	86 17       	cp	r24, r22
    b8fc:	97 07       	cpc	r25, r23
    b8fe:	cc f0       	brlt	.+50     	; 0xb932 <checkplayer+0x6c>
    {   
    died = true;
    b900:	81 e0       	ldi	r24, 0x01	; 1
    b902:	80 93 8d 0a 	sts	0x0A8D, r24	; 0x800a8d <died>
    lives--;    
    b906:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    b90a:	81 50       	subi	r24, 0x01	; 1
    b90c:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    isplaying = false; 
    b910:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    b914:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0; 
    b918:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    b91c:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    b920:	41 e0       	ldi	r20, 0x01	; 1
    b922:	6f ef       	ldi	r22, 0xFF	; 255
    b924:	89 e0       	ldi	r24, 0x09	; 9
    b926:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60); 
    b92a:	8c e3       	ldi	r24, 0x3C	; 60
    b92c:	90 e0       	ldi	r25, 0x00	; 0
    b92e:	0c 94 01 4f 	jmp	0x9e02	; 0x9e02 <WaitVsync>
    b932:	08 95       	ret

0000b934 <checkmonster>:
    }
}
void checkmonster(int x, int y,int z)
{
if (!MonsteronScreen) return;
    b934:	20 91 0f 0a 	lds	r18, 0x0A0F	; 0x800a0f <MonsteronScreen>
    b938:	22 23       	and	r18, r18
    b93a:	09 f4       	brne	.+2      	; 0xb93e <checkmonster+0xa>
    b93c:	4e c0       	rjmp	.+156    	; 0xb9da <checkmonster+0xa6>

if   (owl.onscreen && owl.alive)
    b93e:	20 91 38 0a 	lds	r18, 0x0A38	; 0x800a38 <owl+0x9>
    b942:	22 23       	and	r18, r18
    b944:	09 f4       	brne	.+2      	; 0xb948 <checkmonster+0x14>
    b946:	49 c0       	rjmp	.+146    	; 0xb9da <checkmonster+0xa6>
    b948:	20 91 39 0a 	lds	r18, 0x0A39	; 0x800a39 <owl+0xa>
    b94c:	22 23       	and	r18, r18
    b94e:	09 f4       	brne	.+2      	; 0xb952 <checkmonster+0x1e>
    b950:	44 c0       	rjmp	.+136    	; 0xb9da <checkmonster+0xa6>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    b952:	20 91 2f 0a 	lds	r18, 0x0A2F	; 0x800a2f <owl>
    b956:	30 91 30 0a 	lds	r19, 0x0A30	; 0x800a30 <owl+0x1>
    b95a:	f9 01       	movw	r30, r18
    b95c:	33 96       	adiw	r30, 0x03	; 3
    b95e:	e8 17       	cp	r30, r24
    b960:	f9 07       	cpc	r31, r25
    b962:	dc f5       	brge	.+118    	; 0xb9da <checkmonster+0xa6>
    b964:	25 5f       	subi	r18, 0xF5	; 245
    b966:	3f 4f       	sbci	r19, 0xFF	; 255
    b968:	28 17       	cp	r18, r24
    b96a:	39 07       	cpc	r19, r25
    b96c:	b4 f1       	brlt	.+108    	; 0xb9da <checkmonster+0xa6>
    b96e:	80 91 31 0a 	lds	r24, 0x0A31	; 0x800a31 <owl+0x2>
    b972:	90 91 32 0a 	lds	r25, 0x0A32	; 0x800a32 <owl+0x3>
    b976:	9c 01       	movw	r18, r24
    b978:	2d 5f       	subi	r18, 0xFD	; 253
    b97a:	3f 4f       	sbci	r19, 0xFF	; 255
    b97c:	26 17       	cp	r18, r22
    b97e:	37 07       	cpc	r19, r23
    b980:	64 f5       	brge	.+88     	; 0xb9da <checkmonster+0xa6>
    b982:	0e 96       	adiw	r24, 0x0e	; 14
    b984:	86 17       	cp	r24, r22
    b986:	97 07       	cpc	r25, r23
    b988:	44 f1       	brlt	.+80     	; 0xb9da <checkmonster+0xa6>
   {
    if ( z== 0)
    b98a:	45 2b       	or	r20, r21
    b98c:	81 f4       	brne	.+32     	; 0xb9ae <checkmonster+0x7a>
    {
        lives++;
    b98e:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    b992:	8f 5f       	subi	r24, 0xFF	; 255
    b994:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
        player.x = 30;
    b998:	8e e1       	ldi	r24, 0x1E	; 30
    b99a:	90 e0       	ldi	r25, 0x00	; 0
    b99c:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    b9a0:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
        player.y = 0;
    b9a4:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <player+0x3>
    b9a8:	10 92 58 09 	sts	0x0958, r1	; 0x800958 <player+0x2>
    b9ac:	08 95       	ret
   // TriggerFx(9,0xff,true);
   // WaitVsync(60); 
    }
       else
       {
        owl.alive = false; 
    b9ae:	10 92 39 0a 	sts	0x0A39, r1	; 0x800a39 <owl+0xa>
        owl.ximpulse = 0;
    b9b2:	10 92 36 0a 	sts	0x0A36, r1	; 0x800a36 <owl+0x7>
        owl.yimpulse = 0; 
    b9b6:	10 92 37 0a 	sts	0x0A37, r1	; 0x800a37 <owl+0x8>
        score = score + 50;
    b9ba:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <score>
    b9be:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <score+0x1>
    b9c2:	c2 96       	adiw	r24, 0x32	; 50
    b9c4:	90 93 ad 09 	sts	0x09AD, r25	; 0x8009ad <score+0x1>
    b9c8:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <score>
        updatepoints();
    b9cc:	0e 94 ce 53 	call	0xa79c	; 0xa79c <updatepoints>
        TriggerFx(8,0xff,true);
    b9d0:	41 e0       	ldi	r20, 0x01	; 1
    b9d2:	6f ef       	ldi	r22, 0xFF	; 255
    b9d4:	88 e0       	ldi	r24, 0x08	; 8
    b9d6:	0c 94 88 44 	jmp	0x8910	; 0x8910 <TriggerFx>
    b9da:	08 95       	ret

0000b9dc <moveplayer>:
bool exitgame;
bool play;

void moveplayer()
{
if(player.killer == true && player.killerCount < 100)
    b9dc:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0x19>
    b9e0:	88 23       	and	r24, r24
    b9e2:	71 f0       	breq	.+28     	; 0xba00 <moveplayer+0x24>
    b9e4:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <player+0x1d>
    b9e8:	84 36       	cpi	r24, 0x64	; 100
    b9ea:	50 f4       	brcc	.+20     	; 0xba00 <moveplayer+0x24>
{
    player.speed = 2;
    b9ec:	22 e0       	ldi	r18, 0x02	; 2
    b9ee:	30 e0       	ldi	r19, 0x00	; 0
    b9f0:	30 93 5b 09 	sts	0x095B, r19	; 0x80095b <player+0x5>
    b9f4:	20 93 5a 09 	sts	0x095A, r18	; 0x80095a <player+0x4>
    player.killerCount = player.killerCount + 1;
    b9f8:	8f 5f       	subi	r24, 0xFF	; 255
    b9fa:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <player+0x1d>
    b9fe:	0a c0       	rjmp	.+20     	; 0xba14 <moveplayer+0x38>
}
else{
    player.speed = 1;
    ba00:	81 e0       	ldi	r24, 0x01	; 1
    ba02:	90 e0       	ldi	r25, 0x00	; 0
    ba04:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <player+0x5>
    ba08:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <player+0x4>
    player.killer = false;
    ba0c:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0x19>
    player.killerCount = 0;
    ba10:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x1d>
}
player.mushroomCount = 10;
    ba14:	8a e0       	ldi	r24, 0x0A	; 10
    ba16:	90 e0       	ldi	r25, 0x00	; 0
    ba18:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <player+0x7>
    ba1c:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <player+0x6>
unsigned int joy=ReadJoypad(0);
    ba20:	80 e0       	ldi	r24, 0x00	; 0
    ba22:	0e 94 35 42 	call	0x846a	; 0x846a <ReadJoypad>
if(player.stuck)
    ba26:	20 91 60 09 	lds	r18, 0x0960	; 0x800960 <player+0xa>
    ba2a:	22 23       	and	r18, r18
    ba2c:	a1 f0       	breq	.+40     	; 0xba56 <moveplayer+0x7a>
{
player.sCount = player.sCount + 1;
    ba2e:	20 91 5e 09 	lds	r18, 0x095E	; 0x80095e <player+0x8>
    ba32:	30 91 5f 09 	lds	r19, 0x095F	; 0x80095f <player+0x9>
    ba36:	2f 5f       	subi	r18, 0xFF	; 255
    ba38:	3f 4f       	sbci	r19, 0xFF	; 255
if(player.sCount >= 100)
    ba3a:	24 36       	cpi	r18, 0x64	; 100
    ba3c:	31 05       	cpc	r19, r1
    ba3e:	2c f4       	brge	.+10     	; 0xba4a <moveplayer+0x6e>
}
player.mushroomCount = 10;
unsigned int joy=ReadJoypad(0);
if(player.stuck)
{
player.sCount = player.sCount + 1;
    ba40:	30 93 5f 09 	sts	0x095F, r19	; 0x80095f <player+0x9>
    ba44:	20 93 5e 09 	sts	0x095E, r18	; 0x80095e <player+0x8>
    ba48:	06 c0       	rjmp	.+12     	; 0xba56 <moveplayer+0x7a>
if(player.sCount >= 100)
{
player.sCount = 0;
    ba4a:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <player+0x9>
    ba4e:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <player+0x8>
player.stuck = false;
    ba52:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <player+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    ba56:	20 91 74 09 	lds	r18, 0x0974	; 0x800974 <introplaying>
    ba5a:	22 23       	and	r18, r18
    ba5c:	29 f0       	breq	.+10     	; 0xba68 <moveplayer+0x8c>
    ba5e:	83 ff       	sbrs	r24, 3
    ba60:	bd c0       	rjmp	.+378    	; 0xbbdc <moveplayer+0x200>
    ba62:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <introplaying>
    ba66:	08 95       	ret
if (!introplaying)
{

if (joy&BTN_SR && joy&BTN_SL && joy&BTN_A) { 
    ba68:	93 ff       	sbrs	r25, 3
    ba6a:	2c c0       	rjmp	.+88     	; 0xbac4 <moveplayer+0xe8>
    ba6c:	9c 01       	movw	r18, r24
    ba6e:	22 27       	eor	r18, r18
    ba70:	35 70       	andi	r19, 0x05	; 5
    ba72:	21 15       	cp	r18, r1
    ba74:	35 40       	sbci	r19, 0x05	; 5
    ba76:	81 f4       	brne	.+32     	; 0xba98 <moveplayer+0xbc>
    died = true;
    ba78:	21 e0       	ldi	r18, 0x01	; 1
    ba7a:	20 93 8d 0a 	sts	0x0A8D, r18	; 0x800a8d <died>
    level++;    
    ba7e:	20 91 c4 09 	lds	r18, 0x09C4	; 0x8009c4 <level>
    ba82:	2f 5f       	subi	r18, 0xFF	; 255
    ba84:	20 93 c4 09 	sts	0x09C4, r18	; 0x8009c4 <level>
    isplaying = false; 
    ba88:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    ba8c:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0;  
    ba90:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    ba94:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    //TriggerFx(9,0xff,true);
    //WaitVsync(60);  
};
if (joy&BTN_SR && joy&BTN_SL && joy&BTN_Y) { 
    ba98:	9c 01       	movw	r18, r24
    ba9a:	22 70       	andi	r18, 0x02	; 2
    ba9c:	34 70       	andi	r19, 0x04	; 4
    ba9e:	22 30       	cpi	r18, 0x02	; 2
    baa0:	34 40       	sbci	r19, 0x04	; 4
    baa2:	81 f4       	brne	.+32     	; 0xbac4 <moveplayer+0xe8>
    died = true;
    baa4:	21 e0       	ldi	r18, 0x01	; 1
    baa6:	20 93 8d 0a 	sts	0x0A8D, r18	; 0x800a8d <died>
    level--;    
    baaa:	20 91 c4 09 	lds	r18, 0x09C4	; 0x8009c4 <level>
    baae:	21 50       	subi	r18, 0x01	; 1
    bab0:	20 93 c4 09 	sts	0x09C4, r18	; 0x8009c4 <level>
    isplaying = false; 
    bab4:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    bab8:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0;  
    babc:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    bac0:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    //TriggerFx(9,0xff,true);
    //WaitVsync(60);  
};
if (joy&BTN_LEFT && player.stuck == false) { 
    bac4:	86 ff       	sbrs	r24, 6
    bac6:	15 c0       	rjmp	.+42     	; 0xbaf2 <moveplayer+0x116>
    bac8:	20 91 60 09 	lds	r18, 0x0960	; 0x800960 <player+0xa>
    bacc:	21 11       	cpse	r18, r1
    bace:	11 c0       	rjmp	.+34     	; 0xbaf2 <moveplayer+0x116>
player.direction = 'l';
    bad0:	2c e6       	ldi	r18, 0x6C	; 108
    bad2:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <player+0xe>
player.action = 'w';
    bad6:	27 e7       	ldi	r18, 0x77	; 119
    bad8:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <player+0xd>
player.facing = 1;
    badc:	21 e0       	ldi	r18, 0x01	; 1
    bade:	30 e0       	ldi	r19, 0x00	; 0
    bae0:	30 93 62 09 	sts	0x0962, r19	; 0x800962 <player+0xc>
    bae4:	20 93 61 09 	sts	0x0961, r18	; 0x800961 <player+0xb>
player.ximpulse = -player.speed; 
    bae8:	20 91 5a 09 	lds	r18, 0x095A	; 0x80095a <player+0x4>
    baec:	21 95       	neg	r18
    baee:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x12>
};
if (joy&BTN_RIGHT && player.stuck == false) {
    baf2:	87 ff       	sbrs	r24, 7
    baf4:	12 c0       	rjmp	.+36     	; 0xbb1a <moveplayer+0x13e>
    baf6:	20 91 60 09 	lds	r18, 0x0960	; 0x800960 <player+0xa>
    bafa:	21 11       	cpse	r18, r1
    bafc:	0e c0       	rjmp	.+28     	; 0xbb1a <moveplayer+0x13e>
player.direction = 'r';
    bafe:	22 e7       	ldi	r18, 0x72	; 114
    bb00:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <player+0xe>
player.action = 'w';
    bb04:	27 e7       	ldi	r18, 0x77	; 119
    bb06:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <player+0xd>
player.facing = 0;
    bb0a:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <player+0xc>
    bb0e:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <player+0xb>
player.ximpulse = player.speed; 
    bb12:	20 91 5a 09 	lds	r18, 0x095A	; 0x80095a <player+0x4>
    bb16:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x12>

};
if ( !(joy&BTN_A) ) {
    bb1a:	ac 01       	movw	r20, r24
    bb1c:	44 27       	eor	r20, r20
    bb1e:	51 70       	andi	r21, 0x01	; 1
    bb20:	90 fd       	sbrc	r25, 0
    bb22:	09 c0       	rjmp	.+18     	; 0xbb36 <moveplayer+0x15a>
player.yimpulse = 0;
    bb24:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x13>
player.jumpreleased = true;
    bb28:	21 e0       	ldi	r18, 0x01	; 1
    bb2a:	20 93 6b 09 	sts	0x096B, r18	; 0x80096b <player+0x15>
player.jumping = false;
    bb2e:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x14>
player.jumpcounter = 0;
    bb32:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0x1a>
};
if ( !(joy&BTN_B) ) {
    bb36:	80 fd       	sbrc	r24, 0
    bb38:	03 c0       	rjmp	.+6      	; 0xbb40 <moveplayer+0x164>
player.bpressed = false;
    bb3a:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0x16>
    bb3e:	12 c0       	rjmp	.+36     	; 0xbb64 <moveplayer+0x188>
};
if ( joy&BTN_B && player.touchground) {
    bb40:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x11>
    bb44:	22 23       	and	r18, r18
    bb46:	71 f0       	breq	.+28     	; 0xbb64 <moveplayer+0x188>
	if(player.bpressed == false) // check count here
    bb48:	20 91 6c 09 	lds	r18, 0x096C	; 0x80096c <player+0x16>
    bb4c:	21 11       	cpse	r18, r1
    bb4e:	0a c0       	rjmp	.+20     	; 0xbb64 <moveplayer+0x188>
	{
	player.bananaCount = player.bananaCount - 1;
    bb50:	20 91 72 09 	lds	r18, 0x0972	; 0x800972 <player+0x1c>
    bb54:	21 50       	subi	r18, 0x01	; 1
    bb56:	20 93 72 09 	sts	0x0972, r18	; 0x800972 <player+0x1c>
    player.killer = true;
    bb5a:	21 e0       	ldi	r18, 0x01	; 1
    bb5c:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0x19>
	player.bpressed = true;
    bb60:	20 93 6c 09 	sts	0x096C, r18	; 0x80096c <player+0x16>
	};
};  
if ( !(joy&BTN_Y) ) {
    bb64:	81 fd       	sbrc	r24, 1
    bb66:	03 c0       	rjmp	.+6      	; 0xbb6e <moveplayer+0x192>
player.ypressed = false;
    bb68:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0x17>
    bb6c:	13 c0       	rjmp	.+38     	; 0xbb94 <moveplayer+0x1b8>
};
if ( joy&BTN_Y) {
	if(player.mushroomCount > 0 && player.ypressed == false)
    bb6e:	80 91 5c 09 	lds	r24, 0x095C	; 0x80095c <player+0x6>
    bb72:	90 91 5d 09 	lds	r25, 0x095D	; 0x80095d <player+0x7>
    bb76:	18 16       	cp	r1, r24
    bb78:	19 06       	cpc	r1, r25
    bb7a:	64 f4       	brge	.+24     	; 0xbb94 <moveplayer+0x1b8>
    bb7c:	20 91 6d 09 	lds	r18, 0x096D	; 0x80096d <player+0x17>
    bb80:	21 11       	cpse	r18, r1
    bb82:	08 c0       	rjmp	.+16     	; 0xbb94 <moveplayer+0x1b8>
	{
	player.mushroomCount = player.mushroomCount - 1;
    bb84:	01 97       	sbiw	r24, 0x01	; 1
    bb86:	90 93 5d 09 	sts	0x095D, r25	; 0x80095d <player+0x7>
    bb8a:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <player+0x6>
	//player.speed = 10;
	player.ypressed = true;
    bb8e:	81 e0       	ldi	r24, 0x01	; 1
    bb90:	80 93 6d 09 	sts	0x096D, r24	; 0x80096d <player+0x17>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    bb94:	45 2b       	or	r20, r21
    bb96:	11 f1       	breq	.+68     	; 0xbbdc <moveplayer+0x200>
    bb98:	80 91 67 09 	lds	r24, 0x0967	; 0x800967 <player+0x11>
    bb9c:	88 23       	and	r24, r24
    bb9e:	f1 f0       	breq	.+60     	; 0xbbdc <moveplayer+0x200>
    bba0:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0x15>
    bba4:	88 23       	and	r24, r24
    bba6:	d1 f0       	breq	.+52     	; 0xbbdc <moveplayer+0x200>
    bba8:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <player+0xa>
    bbac:	81 11       	cpse	r24, r1
    bbae:	16 c0       	rjmp	.+44     	; 0xbbdc <moveplayer+0x200>
player.action = 'j';
    bbb0:	8a e6       	ldi	r24, 0x6A	; 106
    bbb2:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0xd>
player.yimpulse = 0;
    bbb6:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x13>
player.jumping = true;
    bbba:	81 e0       	ldi	r24, 0x01	; 1
    bbbc:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <player+0x14>
player.touchground = false;
    bbc0:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0x11>
player.jumpreleased = false;
    bbc4:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x15>
player.jumpcounter++ ; 
    bbc8:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0x1a>
    bbcc:	8f 5f       	subi	r24, 0xFF	; 255
    bbce:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0x1a>
TriggerFx(4,0xff,true);
    bbd2:	41 e0       	ldi	r20, 0x01	; 1
    bbd4:	6f ef       	ldi	r22, 0xFF	; 255
    bbd6:	84 e0       	ldi	r24, 0x04	; 4
    bbd8:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
};
};

oldx = player.x;
    bbdc:	20 91 56 09 	lds	r18, 0x0956	; 0x800956 <player>
    bbe0:	30 91 57 09 	lds	r19, 0x0957	; 0x800957 <player+0x1>
    bbe4:	30 93 c3 09 	sts	0x09C3, r19	; 0x8009c3 <oldx+0x1>
    bbe8:	20 93 c2 09 	sts	0x09C2, r18	; 0x8009c2 <oldx>
oldy = player.y;
    bbec:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bbf0:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bbf4:	70 93 92 0a 	sts	0x0A92, r23	; 0x800a92 <oldy+0x1>
    bbf8:	60 93 91 0a 	sts	0x0A91, r22	; 0x800a91 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    bbfc:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0x1a>
    bc00:	9f ef       	ldi	r25, 0xFF	; 255
    bc02:	98 0f       	add	r25, r24
    bc04:	99 31       	cpi	r25, 0x19	; 25
    bc06:	18 f4       	brcc	.+6      	; 0xbc0e <moveplayer+0x232>
    bc08:	9c ef       	ldi	r25, 0xFC	; 252
    bc0a:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x13>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    bc0e:	96 ee       	ldi	r25, 0xE6	; 230
    bc10:	98 0f       	add	r25, r24
    bc12:	9b 30       	cpi	r25, 0x0B	; 11
    bc14:	18 f4       	brcc	.+6      	; 0xbc1c <moveplayer+0x240>
    bc16:	9d ef       	ldi	r25, 0xFD	; 253
    bc18:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x13>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    bc1c:	9b ed       	ldi	r25, 0xDB	; 219
    bc1e:	98 0f       	add	r25, r24
    bc20:	94 30       	cpi	r25, 0x04	; 4
    bc22:	18 f4       	brcc	.+6      	; 0xbc2a <moveplayer+0x24e>
    bc24:	9e ef       	ldi	r25, 0xFE	; 254
    bc26:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x13>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    bc2a:	97 ed       	ldi	r25, 0xD7	; 215
    bc2c:	98 0f       	add	r25, r24
    bc2e:	96 30       	cpi	r25, 0x06	; 6
    bc30:	20 f4       	brcc	.+8      	; 0xbc3a <moveplayer+0x25e>
    bc32:	9f ef       	ldi	r25, 0xFF	; 255
    bc34:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x13>
    bc38:	02 c0       	rjmp	.+4      	; 0xbc3e <moveplayer+0x262>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    bc3a:	88 23       	and	r24, r24
    bc3c:	19 f0       	breq	.+6      	; 0xbc44 <moveplayer+0x268>
    bc3e:	8f 5f       	subi	r24, 0xFF	; 255
    bc40:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0x1a>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    bc44:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0x1a>
    bc48:	8f 32       	cpi	r24, 0x2F	; 47
    bc4a:	10 f0       	brcs	.+4      	; 0xbc50 <moveplayer+0x274>
    bc4c:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0x1a>
player.x = player.x + player.ximpulse;
    bc50:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x12>
    bc54:	a9 01       	movw	r20, r18
    bc56:	48 0f       	add	r20, r24
    bc58:	51 1d       	adc	r21, r1
    bc5a:	87 fd       	sbrc	r24, 7
    bc5c:	5a 95       	dec	r21
    bc5e:	ca 01       	movw	r24, r20
    bc60:	50 93 57 09 	sts	0x0957, r21	; 0x800957 <player+0x1>
    bc64:	40 93 56 09 	sts	0x0956, r20	; 0x800956 <player>
player.y = player.y + player.yimpulse + gravity ;
    bc68:	40 91 69 09 	lds	r20, 0x0969	; 0x800969 <player+0x13>
    bc6c:	64 0f       	add	r22, r20
    bc6e:	71 1d       	adc	r23, r1
    bc70:	47 fd       	sbrc	r20, 7
    bc72:	7a 95       	dec	r23
    bc74:	6e 5f       	subi	r22, 0xFE	; 254
    bc76:	7f 4f       	sbci	r23, 0xFF	; 255
    bc78:	70 93 59 09 	sts	0x0959, r23	; 0x800959 <player+0x3>
    bc7c:	60 93 58 09 	sts	0x0958, r22	; 0x800958 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    bc80:	28 17       	cp	r18, r24
    bc82:	39 07       	cpc	r19, r25
    bc84:	3c f4       	brge	.+14     	; 0xbc94 <moveplayer+0x2b8>
    bc86:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x1b>
    bc8a:	2f 5f       	subi	r18, 0xFF	; 255
    bc8c:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x1b>
    bc90:	22 e7       	ldi	r18, 0x72	; 114
    bc92:	09 c0       	rjmp	.+18     	; 0xbca6 <moveplayer+0x2ca>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    bc94:	82 17       	cp	r24, r18
    bc96:	93 07       	cpc	r25, r19
    bc98:	4c f4       	brge	.+18     	; 0xbcac <moveplayer+0x2d0>
    bc9a:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x1b>
    bc9e:	2f 5f       	subi	r18, 0xFF	; 255
    bca0:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x1b>
    bca4:	2c e6       	ldi	r18, 0x6C	; 108
    bca6:	20 93 64 09 	sts	0x0964, r18	; 0x800964 <player+0xe>
    bcaa:	05 c0       	rjmp	.+10     	; 0xbcb6 <moveplayer+0x2da>
if (player.x == oldx  ) { player.aniframe = 0;};
    bcac:	28 17       	cp	r18, r24
    bcae:	39 07       	cpc	r19, r25
    bcb0:	11 f4       	brne	.+4      	; 0xbcb6 <moveplayer+0x2da>
    bcb2:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x1b>
if (player.aniframe > 0 ) player.aniframe++;
    bcb6:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x1b>
    bcba:	22 23       	and	r18, r18
    bcbc:	19 f0       	breq	.+6      	; 0xbcc4 <moveplayer+0x2e8>
    bcbe:	2f 5f       	subi	r18, 0xFF	; 255
    bcc0:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x1b>
if (player.aniframe>24) player.aniframe = 1;
    bcc4:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x1b>
    bcc8:	29 31       	cpi	r18, 0x19	; 25
    bcca:	18 f0       	brcs	.+6      	; 0xbcd2 <moveplayer+0x2f6>
    bccc:	21 e0       	ldi	r18, 0x01	; 1
    bcce:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x1b>
if(checkBanana(player.x + 4, player.y ,1) == 1)
    bcd2:	41 e0       	ldi	r20, 0x01	; 1
    bcd4:	50 e0       	ldi	r21, 0x00	; 0
    bcd6:	04 96       	adiw	r24, 0x04	; 4
    bcd8:	0e 94 df 53 	call	0xa7be	; 0xa7be <checkBanana>
    bcdc:	01 97       	sbiw	r24, 0x01	; 1
    bcde:	19 f4       	brne	.+6      	; 0xbce6 <moveplayer+0x30a>
{
    player.stuck = true;
    bce0:	81 e0       	ldi	r24, 0x01	; 1
    bce2:	80 93 60 09 	sts	0x0960, r24	; 0x800960 <player+0xa>
} 
if(player.bananaBool == true)
    bce6:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0x18>
    bcea:	88 23       	and	r24, r24
    bcec:	79 f0       	breq	.+30     	; 0xbd0c <moveplayer+0x330>
{
makeBanana2(player.x + 4, player.y,1);
    bcee:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bcf2:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bcf6:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bcfa:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bcfe:	41 e0       	ldi	r20, 0x01	; 1
    bd00:	50 e0       	ldi	r21, 0x00	; 0
    bd02:	04 96       	adiw	r24, 0x04	; 4
    bd04:	0e 94 31 53 	call	0xa662	; 0xa662 <makeBanana2>
player.bananaBool = false;
    bd08:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0x18>
}
checkcollide( player.x, player.y - 4 ,1,1);
    bd0c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bd10:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bd14:	64 50       	subi	r22, 0x04	; 4
    bd16:	71 09       	sbc	r23, r1
    bd18:	21 e0       	ldi	r18, 0x01	; 1
    bd1a:	30 e0       	ldi	r19, 0x00	; 0
    bd1c:	41 e0       	ldi	r20, 0x01	; 1
    bd1e:	50 e0       	ldi	r21, 0x00	; 0
    bd20:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bd24:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bd28:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3,1);
    bd2c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bd30:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bd34:	64 50       	subi	r22, 0x04	; 4
    bd36:	71 09       	sbc	r23, r1
    bd38:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bd3c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bd40:	21 e0       	ldi	r18, 0x01	; 1
    bd42:	30 e0       	ldi	r19, 0x00	; 0
    bd44:	43 e0       	ldi	r20, 0x03	; 3
    bd46:	50 e0       	ldi	r21, 0x00	; 0
    bd48:	03 97       	sbiw	r24, 0x03	; 3
    bd4a:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3,1);
    bd4e:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bd52:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bd56:	64 50       	subi	r22, 0x04	; 4
    bd58:	71 09       	sbc	r23, r1
    bd5a:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bd5e:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bd62:	21 e0       	ldi	r18, 0x01	; 1
    bd64:	30 e0       	ldi	r19, 0x00	; 0
    bd66:	43 e0       	ldi	r20, 0x03	; 3
    bd68:	50 e0       	ldi	r21, 0x00	; 0
    bd6a:	04 96       	adiw	r24, 0x04	; 4
    bd6c:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2,1);
    bd70:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bd74:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bd78:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    bd7c:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    bd80:	68 17       	cp	r22, r24
    bd82:	79 07       	cpc	r23, r25
    bd84:	64 f4       	brge	.+24     	; 0xbd9e <moveplayer+0x3c2>
    bd86:	66 51       	subi	r22, 0x16	; 22
    bd88:	71 09       	sbc	r23, r1
    bd8a:	21 e0       	ldi	r18, 0x01	; 1
    bd8c:	30 e0       	ldi	r19, 0x00	; 0
    bd8e:	42 e0       	ldi	r20, 0x02	; 2
    bd90:	50 e0       	ldi	r21, 0x00	; 0
    bd92:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bd96:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bd9a:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    bd9e:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bda2:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bda6:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    bdaa:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    bdae:	86 17       	cp	r24, r22
    bdb0:	97 07       	cpc	r25, r23
    bdb2:	ac f5       	brge	.+106    	; 0xbe1e <moveplayer+0x442>
    bdb4:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0x11>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0,1 )&1 || checkcollide( player.x + 4 , player.y     ,0,1 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    bdb8:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bdbc:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bdc0:	21 e0       	ldi	r18, 0x01	; 1
    bdc2:	30 e0       	ldi	r19, 0x00	; 0
    bdc4:	40 e0       	ldi	r20, 0x00	; 0
    bdc6:	50 e0       	ldi	r21, 0x00	; 0
    bdc8:	03 97       	sbiw	r24, 0x03	; 3
    bdca:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    bdce:	80 ff       	sbrs	r24, 0
    bdd0:	15 c0       	rjmp	.+42     	; 0xbdfc <moveplayer+0x420>
    bdd2:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <player+0x2>
    bdd6:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <player+0x3>
    bdda:	97 fd       	sbrc	r25, 7
    bddc:	0f 96       	adiw	r24, 0x0f	; 15
    bdde:	80 7f       	andi	r24, 0xF0	; 240
    bde0:	01 97       	sbiw	r24, 0x01	; 1
    bde2:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <player+0x3>
    bde6:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <player+0x2>
    bdea:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x14>
    bdee:	81 e0       	ldi	r24, 0x01	; 1
    bdf0:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x11>
    bdf4:	87 e7       	ldi	r24, 0x77	; 119
    bdf6:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0xd>
    bdfa:	11 c0       	rjmp	.+34     	; 0xbe1e <moveplayer+0x442>
    bdfc:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    be00:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    be04:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    be08:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    be0c:	21 e0       	ldi	r18, 0x01	; 1
    be0e:	30 e0       	ldi	r19, 0x00	; 0
    be10:	40 e0       	ldi	r20, 0x00	; 0
    be12:	50 e0       	ldi	r21, 0x00	; 0
    be14:	04 96       	adiw	r24, 0x04	; 4
    be16:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    be1a:	80 fd       	sbrc	r24, 0
    be1c:	da cf       	rjmp	.-76     	; 0xbdd2 <moveplayer+0x3f6>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0,1 )&1 || checkcollide( player.x + 4 , player.y - 21,0,1 )&1)  { player.y = oldy;player.jumpcounter = 0;
    be1e:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    be22:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    be26:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    be2a:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    be2e:	68 17       	cp	r22, r24
    be30:	79 07       	cpc	r23, r25
    be32:	94 f5       	brge	.+100    	; 0xbe98 <moveplayer+0x4bc>
    be34:	65 51       	subi	r22, 0x15	; 21
    be36:	71 09       	sbc	r23, r1
    be38:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    be3c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    be40:	21 e0       	ldi	r18, 0x01	; 1
    be42:	30 e0       	ldi	r19, 0x00	; 0
    be44:	40 e0       	ldi	r20, 0x00	; 0
    be46:	50 e0       	ldi	r21, 0x00	; 0
    be48:	03 97       	sbiw	r24, 0x03	; 3
    be4a:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    be4e:	80 ff       	sbrs	r24, 0
    be50:	10 c0       	rjmp	.+32     	; 0xbe72 <moveplayer+0x496>
    be52:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    be56:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    be5a:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <player+0x3>
    be5e:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <player+0x2>
    be62:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    be66:	41 e0       	ldi	r20, 0x01	; 1
    be68:	6f ef       	ldi	r22, 0xFF	; 255
    be6a:	85 e0       	ldi	r24, 0x05	; 5
    be6c:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    be70:	13 c0       	rjmp	.+38     	; 0xbe98 <moveplayer+0x4bc>
checkcollide( player.x +4, player.y - 4 ,3,1);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2,1);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0,1 )&1 || checkcollide( player.x + 4 , player.y     ,0,1 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0,1 )&1 || checkcollide( player.x + 4 , player.y - 21,0,1 )&1)  { player.y = oldy;player.jumpcounter = 0;
    be72:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    be76:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    be7a:	65 51       	subi	r22, 0x15	; 21
    be7c:	71 09       	sbc	r23, r1
    be7e:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    be82:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    be86:	21 e0       	ldi	r18, 0x01	; 1
    be88:	30 e0       	ldi	r19, 0x00	; 0
    be8a:	40 e0       	ldi	r20, 0x00	; 0
    be8c:	50 e0       	ldi	r21, 0x00	; 0
    be8e:	04 96       	adiw	r24, 0x04	; 4
    be90:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    be94:	80 fd       	sbrc	r24, 0
    be96:	dd cf       	rjmp	.-70     	; 0xbe52 <moveplayer+0x476>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0,1 )&1 || checkcollide( player.x + 5 , player.y - 20,0,1 )&1)  player.x = oldx;  
    be98:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    be9c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bea0:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    bea4:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    bea8:	28 17       	cp	r18, r24
    beaa:	39 07       	cpc	r19, r25
    beac:	5c f5       	brge	.+86     	; 0xbf04 <moveplayer+0x528>
    beae:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    beb2:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    beb6:	63 50       	subi	r22, 0x03	; 3
    beb8:	71 09       	sbc	r23, r1
    beba:	21 e0       	ldi	r18, 0x01	; 1
    bebc:	30 e0       	ldi	r19, 0x00	; 0
    bebe:	40 e0       	ldi	r20, 0x00	; 0
    bec0:	50 e0       	ldi	r21, 0x00	; 0
    bec2:	05 96       	adiw	r24, 0x05	; 5
    bec4:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    bec8:	80 ff       	sbrs	r24, 0
    beca:	09 c0       	rjmp	.+18     	; 0xbede <moveplayer+0x502>
    becc:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <oldx>
    bed0:	90 91 c3 09 	lds	r25, 0x09C3	; 0x8009c3 <oldx+0x1>
    bed4:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    bed8:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
    bedc:	13 c0       	rjmp	.+38     	; 0xbf04 <moveplayer+0x528>
    bede:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bee2:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bee6:	64 51       	subi	r22, 0x14	; 20
    bee8:	71 09       	sbc	r23, r1
    beea:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    beee:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bef2:	21 e0       	ldi	r18, 0x01	; 1
    bef4:	30 e0       	ldi	r19, 0x00	; 0
    bef6:	40 e0       	ldi	r20, 0x00	; 0
    bef8:	50 e0       	ldi	r21, 0x00	; 0
    befa:	05 96       	adiw	r24, 0x05	; 5
    befc:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    bf00:	80 fd       	sbrc	r24, 0
    bf02:	e4 cf       	rjmp	.-56     	; 0xbecc <moveplayer+0x4f0>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0,1 )&1 || checkcollide( player.x - 4 , player.y - 20,0,1 )&1)  player.x = oldx; 
    bf04:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bf08:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bf0c:	20 91 c2 09 	lds	r18, 0x09C2	; 0x8009c2 <oldx>
    bf10:	30 91 c3 09 	lds	r19, 0x09C3	; 0x8009c3 <oldx+0x1>
    bf14:	82 17       	cp	r24, r18
    bf16:	93 07       	cpc	r25, r19
    bf18:	5c f5       	brge	.+86     	; 0xbf70 <moveplayer+0x594>
    bf1a:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bf1e:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bf22:	63 50       	subi	r22, 0x03	; 3
    bf24:	71 09       	sbc	r23, r1
    bf26:	21 e0       	ldi	r18, 0x01	; 1
    bf28:	30 e0       	ldi	r19, 0x00	; 0
    bf2a:	40 e0       	ldi	r20, 0x00	; 0
    bf2c:	50 e0       	ldi	r21, 0x00	; 0
    bf2e:	04 97       	sbiw	r24, 0x04	; 4
    bf30:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    bf34:	80 ff       	sbrs	r24, 0
    bf36:	09 c0       	rjmp	.+18     	; 0xbf4a <moveplayer+0x56e>
    bf38:	80 91 c2 09 	lds	r24, 0x09C2	; 0x8009c2 <oldx>
    bf3c:	90 91 c3 09 	lds	r25, 0x09C3	; 0x8009c3 <oldx+0x1>
    bf40:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    bf44:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
    bf48:	13 c0       	rjmp	.+38     	; 0xbf70 <moveplayer+0x594>
    bf4a:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bf4e:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bf52:	64 51       	subi	r22, 0x14	; 20
    bf54:	71 09       	sbc	r23, r1
    bf56:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bf5a:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bf5e:	21 e0       	ldi	r18, 0x01	; 1
    bf60:	30 e0       	ldi	r19, 0x00	; 0
    bf62:	40 e0       	ldi	r20, 0x00	; 0
    bf64:	50 e0       	ldi	r21, 0x00	; 0
    bf66:	04 97       	sbiw	r24, 0x04	; 4
    bf68:	0e 94 d9 54 	call	0xa9b2	; 0xa9b2 <checkcollide>
    bf6c:	80 fd       	sbrc	r24, 0
    bf6e:	e4 cf       	rjmp	.-56     	; 0xbf38 <moveplayer+0x55c>
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    bf70:	20 91 6f 09 	lds	r18, 0x096F	; 0x80096f <player+0x19>
    bf74:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bf78:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bf7c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bf80:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
{
checkmonster(player.x +4, player.y -3,1 );
    bf84:	63 50       	subi	r22, 0x03	; 3
    bf86:	71 09       	sbc	r23, r1
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0,1 )&1 || checkcollide( player.x + 5 , player.y - 20,0,1 )&1)  player.x = oldx;  
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0,1 )&1 || checkcollide( player.x - 4 , player.y - 20,0,1 )&1)  player.x = oldx; 
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    bf88:	22 23       	and	r18, r18
    bf8a:	d9 f1       	breq	.+118    	; 0xc002 <moveplayer+0x626>
{
checkmonster(player.x +4, player.y -3,1 );
    bf8c:	41 e0       	ldi	r20, 0x01	; 1
    bf8e:	50 e0       	ldi	r21, 0x00	; 0
    bf90:	04 96       	adiw	r24, 0x04	; 4
    bf92:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
checkmonster(player.x +4, player.y -19,1 );
    bf96:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bf9a:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bf9e:	63 51       	subi	r22, 0x13	; 19
    bfa0:	71 09       	sbc	r23, r1
    bfa2:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bfa6:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bfaa:	41 e0       	ldi	r20, 0x01	; 1
    bfac:	50 e0       	ldi	r21, 0x00	; 0
    bfae:	04 96       	adiw	r24, 0x04	; 4
    bfb0:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
checkmonster(player.x -3, player.y -3 ,1);
    bfb4:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bfb8:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bfbc:	63 50       	subi	r22, 0x03	; 3
    bfbe:	71 09       	sbc	r23, r1
    bfc0:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bfc4:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bfc8:	41 e0       	ldi	r20, 0x01	; 1
    bfca:	50 e0       	ldi	r21, 0x00	; 0
    bfcc:	03 97       	sbiw	r24, 0x03	; 3
    bfce:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
checkmonster(player.x -3, player.y -19 ,1);  
    bfd2:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bfd6:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bfda:	63 51       	subi	r22, 0x13	; 19
    bfdc:	71 09       	sbc	r23, r1
    bfde:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    bfe2:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    bfe6:	41 e0       	ldi	r20, 0x01	; 1
    bfe8:	50 e0       	ldi	r21, 0x00	; 0
    bfea:	03 97       	sbiw	r24, 0x03	; 3
    bfec:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
checkmonster(player.x , player.y -22 ,1);
    bff0:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    bff4:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    bff8:	66 51       	subi	r22, 0x16	; 22
    bffa:	71 09       	sbc	r23, r1
    bffc:	41 e0       	ldi	r20, 0x01	; 1
    bffe:	50 e0       	ldi	r21, 0x00	; 0
    c000:	3a c0       	rjmp	.+116    	; 0xc076 <moveplayer+0x69a>
checkplayer(player.x,player.y);
}
else{
    checkmonster(player.x +4, player.y -3,0 );
    c002:	40 e0       	ldi	r20, 0x00	; 0
    c004:	50 e0       	ldi	r21, 0x00	; 0
    c006:	04 96       	adiw	r24, 0x04	; 4
    c008:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
    checkmonster(player.x +4, player.y -19,0 );
    c00c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    c010:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    c014:	63 51       	subi	r22, 0x13	; 19
    c016:	71 09       	sbc	r23, r1
    c018:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c01c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c020:	40 e0       	ldi	r20, 0x00	; 0
    c022:	50 e0       	ldi	r21, 0x00	; 0
    c024:	04 96       	adiw	r24, 0x04	; 4
    c026:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
    checkmonster(player.x -3, player.y -3 ,0);
    c02a:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    c02e:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    c032:	63 50       	subi	r22, 0x03	; 3
    c034:	71 09       	sbc	r23, r1
    c036:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c03a:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c03e:	40 e0       	ldi	r20, 0x00	; 0
    c040:	50 e0       	ldi	r21, 0x00	; 0
    c042:	03 97       	sbiw	r24, 0x03	; 3
    c044:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
    checkmonster(player.x -3, player.y -19 ,0);  
    c048:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    c04c:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    c050:	63 51       	subi	r22, 0x13	; 19
    c052:	71 09       	sbc	r23, r1
    c054:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c058:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c05c:	40 e0       	ldi	r20, 0x00	; 0
    c05e:	50 e0       	ldi	r21, 0x00	; 0
    c060:	03 97       	sbiw	r24, 0x03	; 3
    c062:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
    checkmonster(player.x , player.y -22 ,0);
    c066:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    c06a:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    c06e:	66 51       	subi	r22, 0x16	; 22
    c070:	71 09       	sbc	r23, r1
    c072:	40 e0       	ldi	r20, 0x00	; 0
    c074:	50 e0       	ldi	r21, 0x00	; 0
    c076:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c07a:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c07e:	0e 94 9a 5c 	call	0xb934	; 0xb934 <checkmonster>
    checkplayer(player.x,player.y);
    c082:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <player+0x2>
    c086:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <player+0x3>
    c08a:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c08e:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c092:	0e 94 63 5c 	call	0xb8c6	; 0xb8c6 <checkplayer>
}
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
player.ximpulse = 0;    
    c096:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0x12>
player.yimpulse = 0;
    c09a:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x13>
if ( player.x < 8 ){ 
    c09e:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c0a2:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c0a6:	08 97       	sbiw	r24, 0x08	; 8
    c0a8:	7c f4       	brge	.+30     	; 0xc0c8 <moveplayer+0x6ec>
    lives++;
    c0aa:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    c0ae:	8f 5f       	subi	r24, 0xFF	; 255
    c0b0:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    player.x = 30;
    c0b4:	8e e1       	ldi	r24, 0x1E	; 30
    c0b6:	90 e0       	ldi	r25, 0x00	; 0
    c0b8:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    c0bc:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
    player.y = 0;
    c0c0:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <player+0x3>
    c0c4:	10 92 58 09 	sts	0x0958, r1	; 0x800958 <player+0x2>
}
if ( player.x > 232 ) player.x = player2.x - 30;    
    c0c8:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c0cc:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c0d0:	89 3e       	cpi	r24, 0xE9	; 233
    c0d2:	91 05       	cpc	r25, r1
    c0d4:	54 f0       	brlt	.+20     	; 0xc0ea <moveplayer+0x70e>
    c0d6:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    c0da:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    c0de:	4e 97       	sbiw	r24, 0x1e	; 30
    c0e0:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    c0e4:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
    c0e8:	08 95       	ret
    c0ea:	08 95       	ret

0000c0ec <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    c0ec:	20 91 38 0a 	lds	r18, 0x0A38	; 0x800a38 <owl+0x9>
    c0f0:	22 23       	and	r18, r18
    c0f2:	71 f0       	breq	.+28     	; 0xc110 <scrollmonster+0x24>
    c0f4:	88 0f       	add	r24, r24
    c0f6:	99 1f       	adc	r25, r25
    c0f8:	88 0f       	add	r24, r24
    c0fa:	99 1f       	adc	r25, r25
    c0fc:	20 91 33 0a 	lds	r18, 0x0A33	; 0x800a33 <owl+0x4>
    c100:	30 91 34 0a 	lds	r19, 0x0A34	; 0x800a34 <owl+0x5>
    c104:	82 0f       	add	r24, r18
    c106:	93 1f       	adc	r25, r19
    c108:	90 93 34 0a 	sts	0x0A34, r25	; 0x800a34 <owl+0x5>
    c10c:	80 93 33 0a 	sts	0x0A33, r24	; 0x800a33 <owl+0x4>
    c110:	08 95       	ret

0000c112 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    c112:	20 91 0f 0a 	lds	r18, 0x0A0F	; 0x800a0f <MonsteronScreen>
    c116:	21 11       	cpse	r18, r1
    c118:	38 c0       	rjmp	.+112    	; 0xc18a <setowl+0x78>
if ( owl.onscreen == true ) return;    
    c11a:	20 91 38 0a 	lds	r18, 0x0A38	; 0x800a38 <owl+0x9>
    c11e:	21 11       	cpse	r18, r1
    c120:	34 c0       	rjmp	.+104    	; 0xc18a <setowl+0x78>
owl.x = x * 8;
    c122:	33 e0       	ldi	r19, 0x03	; 3
    c124:	88 0f       	add	r24, r24
    c126:	99 1f       	adc	r25, r25
    c128:	3a 95       	dec	r19
    c12a:	e1 f7       	brne	.-8      	; 0xc124 <setowl+0x12>
    c12c:	90 93 30 0a 	sts	0x0A30, r25	; 0x800a30 <owl+0x1>
    c130:	80 93 2f 0a 	sts	0x0A2F, r24	; 0x800a2f <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    c134:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    c138:	88 23       	and	r24, r24
    c13a:	31 f0       	breq	.+12     	; 0xc148 <setowl+0x36>
    c13c:	80 ef       	ldi	r24, 0xF0	; 240
    c13e:	90 e0       	ldi	r25, 0x00	; 0
    c140:	90 93 30 0a 	sts	0x0A30, r25	; 0x800a30 <owl+0x1>
    c144:	80 93 2f 0a 	sts	0x0A2F, r24	; 0x800a2f <owl>
owl.y = y * 8;     
    c148:	83 e0       	ldi	r24, 0x03	; 3
    c14a:	66 0f       	add	r22, r22
    c14c:	77 1f       	adc	r23, r23
    c14e:	8a 95       	dec	r24
    c150:	e1 f7       	brne	.-8      	; 0xc14a <setowl+0x38>
    c152:	70 93 32 0a 	sts	0x0A32, r23	; 0x800a32 <owl+0x3>
    c156:	60 93 31 0a 	sts	0x0A31, r22	; 0x800a31 <owl+0x2>
owl.x2 = owl.x << 2;        
    c15a:	80 91 2f 0a 	lds	r24, 0x0A2F	; 0x800a2f <owl>
    c15e:	90 91 30 0a 	lds	r25, 0x0A30	; 0x800a30 <owl+0x1>
    c162:	88 0f       	add	r24, r24
    c164:	99 1f       	adc	r25, r25
    c166:	88 0f       	add	r24, r24
    c168:	99 1f       	adc	r25, r25
    c16a:	90 93 34 0a 	sts	0x0A34, r25	; 0x800a34 <owl+0x5>
    c16e:	80 93 33 0a 	sts	0x0A33, r24	; 0x800a33 <owl+0x4>
owl.ximpulse = -1;
    c172:	8f ef       	ldi	r24, 0xFF	; 255
    c174:	80 93 36 0a 	sts	0x0A36, r24	; 0x800a36 <owl+0x7>
owl.yimpulse = 0;    
    c178:	10 92 37 0a 	sts	0x0A37, r1	; 0x800a37 <owl+0x8>
owl.onscreen = true;
    c17c:	81 e0       	ldi	r24, 0x01	; 1
    c17e:	80 93 38 0a 	sts	0x0A38, r24	; 0x800a38 <owl+0x9>
owl.alive = true; 
    c182:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <owl+0xa>
MonsteronScreen = true;     
    c186:	80 93 0f 0a 	sts	0x0A0F, r24	; 0x800a0f <MonsteronScreen>
    c18a:	08 95       	ret

0000c18c <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    c18c:	6f 92       	push	r6
    c18e:	7f 92       	push	r7
    c190:	8f 92       	push	r8
    c192:	bf 92       	push	r11
    c194:	cf 92       	push	r12
    c196:	df 92       	push	r13
    c198:	ef 92       	push	r14
    c19a:	ff 92       	push	r15
    c19c:	0f 93       	push	r16
    c19e:	1f 93       	push	r17
    c1a0:	cf 93       	push	r28
    c1a2:	df 93       	push	r29
int ly;
char bl;
lx = Levelx;
lx = lx >> 4;

player.stuck = false;
    c1a4:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <player+0xa>
player2.stuck = false;
    c1a8:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <player2+0xa>
player.sCount =0;
    c1ac:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <player+0x9>
    c1b0:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <player+0x8>
player2.sCount =0;
    c1b4:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <player2+0x9>
    c1b8:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <player2+0x8>
    c1bc:	01 e0       	ldi	r16, 0x01	; 1
    c1be:	e1 2c       	mov	r14, r1
    c1c0:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c1c2:	c1 2c       	mov	r12, r1
    c1c4:	d1 2c       	mov	r13, r1
    if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c1c6:	be 2c       	mov	r11, r14
    c1c8:	36 01       	movw	r6, r12
    c1ca:	c0 e0       	ldi	r28, 0x00	; 0
    c1cc:	d0 e0       	ldi	r29, 0x00	; 0
for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
//if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi+(Levelx)]));
    if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    c1ce:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    c1d2:	81 11       	cpse	r24, r1
    c1d4:	04 c0       	rjmp	.+8      	; 0xc1de <drawlevel+0x52>
    c1d6:	f3 01       	movw	r30, r6
    c1d8:	e1 58       	subi	r30, 0x81	; 129
    c1da:	fa 4c       	sbci	r31, 0xCA	; 202
    c1dc:	35 c0       	rjmp	.+106    	; 0xc248 <drawlevel+0xbc>
    if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    c1de:	81 30       	cpi	r24, 0x01	; 1
    c1e0:	21 f4       	brne	.+8      	; 0xc1ea <drawlevel+0x5e>
    c1e2:	f3 01       	movw	r30, r6
    c1e4:	ed 56       	subi	r30, 0x6D	; 109
    c1e6:	ff 4c       	sbci	r31, 0xCF	; 207
    c1e8:	2f c0       	rjmp	.+94     	; 0xc248 <drawlevel+0xbc>
    if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    c1ea:	82 30       	cpi	r24, 0x02	; 2
    c1ec:	21 f4       	brne	.+8      	; 0xc1f6 <drawlevel+0x6a>
    c1ee:	f3 01       	movw	r30, r6
    c1f0:	e9 55       	subi	r30, 0x59	; 89
    c1f2:	f4 4d       	sbci	r31, 0xD4	; 212
    c1f4:	29 c0       	rjmp	.+82     	; 0xc248 <drawlevel+0xbc>
    if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    c1f6:	83 30       	cpi	r24, 0x03	; 3
    c1f8:	21 f4       	brne	.+8      	; 0xc202 <drawlevel+0x76>
    c1fa:	f3 01       	movw	r30, r6
    c1fc:	e5 54       	subi	r30, 0x45	; 69
    c1fe:	f9 4d       	sbci	r31, 0xD9	; 217
    c200:	23 c0       	rjmp	.+70     	; 0xc248 <drawlevel+0xbc>
    if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    c202:	84 30       	cpi	r24, 0x04	; 4
    c204:	21 f4       	brne	.+8      	; 0xc20e <drawlevel+0x82>
    c206:	f3 01       	movw	r30, r6
    c208:	e1 53       	subi	r30, 0x31	; 49
    c20a:	fe 4d       	sbci	r31, 0xDE	; 222
    c20c:	1d c0       	rjmp	.+58     	; 0xc248 <drawlevel+0xbc>
    if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    c20e:	85 30       	cpi	r24, 0x05	; 5
    c210:	21 f4       	brne	.+8      	; 0xc21a <drawlevel+0x8e>
    c212:	f3 01       	movw	r30, r6
    c214:	ed 51       	subi	r30, 0x1D	; 29
    c216:	f3 4e       	sbci	r31, 0xE3	; 227
    c218:	17 c0       	rjmp	.+46     	; 0xc248 <drawlevel+0xbc>
    if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    c21a:	86 30       	cpi	r24, 0x06	; 6
    c21c:	21 f4       	brne	.+8      	; 0xc226 <drawlevel+0x9a>
    c21e:	f3 01       	movw	r30, r6
    c220:	e9 50       	subi	r30, 0x09	; 9
    c222:	f8 4e       	sbci	r31, 0xE8	; 232
    c224:	11 c0       	rjmp	.+34     	; 0xc248 <drawlevel+0xbc>
    if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    c226:	87 30       	cpi	r24, 0x07	; 7
    c228:	21 f4       	brne	.+8      	; 0xc232 <drawlevel+0xa6>
    c22a:	f3 01       	movw	r30, r6
    c22c:	e5 5f       	subi	r30, 0xF5	; 245
    c22e:	fc 4e       	sbci	r31, 0xEC	; 236
    c230:	0b c0       	rjmp	.+22     	; 0xc248 <drawlevel+0xbc>
    if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    c232:	88 30       	cpi	r24, 0x08	; 8
    c234:	21 f4       	brne	.+8      	; 0xc23e <drawlevel+0xb2>
    c236:	f3 01       	movw	r30, r6
    c238:	e1 5e       	subi	r30, 0xE1	; 225
    c23a:	f1 4f       	sbci	r31, 0xF1	; 241
    c23c:	05 c0       	rjmp	.+10     	; 0xc248 <drawlevel+0xbc>
    if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    c23e:	89 30       	cpi	r24, 0x09	; 9
    c240:	21 f4       	brne	.+8      	; 0xc24a <drawlevel+0xbe>
    c242:	f3 01       	movw	r30, r6
    c244:	ed 5c       	subi	r30, 0xCD	; 205
    c246:	f6 4f       	sbci	r31, 0xF6	; 246
    c248:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c24a:	11 30       	cpi	r17, 0x01	; 1
    c24c:	19 f4       	brne	.+6      	; 0xc254 <drawlevel+0xc8>
    c24e:	46 e4       	ldi	r20, 0x46	; 70
    c250:	59 e7       	ldi	r21, 0x79	; 121
    c252:	25 c0       	rjmp	.+74     	; 0xc29e <drawlevel+0x112>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    c254:	12 30       	cpi	r17, 0x02	; 2
    c256:	19 f4       	brne	.+6      	; 0xc25e <drawlevel+0xd2>
    c258:	44 e5       	ldi	r20, 0x54	; 84
    c25a:	59 e7       	ldi	r21, 0x79	; 121
    c25c:	20 c0       	rjmp	.+64     	; 0xc29e <drawlevel+0x112>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    c25e:	13 30       	cpi	r17, 0x03	; 3
    c260:	19 f4       	brne	.+6      	; 0xc268 <drawlevel+0xdc>
    c262:	4e e4       	ldi	r20, 0x4E	; 78
    c264:	59 e7       	ldi	r21, 0x79	; 121
    c266:	1b c0       	rjmp	.+54     	; 0xc29e <drawlevel+0x112>
    if ( c == 4 ) {
    c268:	14 30       	cpi	r17, 0x04	; 4
    c26a:	29 f4       	brne	.+10     	; 0xc276 <drawlevel+0xea>
        if(level == 5)
    c26c:	85 30       	cpi	r24, 0x05	; 5
    c26e:	81 f0       	breq	.+32     	; 0xc290 <drawlevel+0x104>
        {
            DrawMap2(destx  ,yi *2  ,blackblock);
        }
        else{
            DrawMap2(destx  ,yi *2  ,block2);
    c270:	44 e0       	ldi	r20, 0x04	; 4
    c272:	59 e7       	ldi	r21, 0x79	; 121
    c274:	14 c0       	rjmp	.+40     	; 0xc29e <drawlevel+0x112>
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    c276:	15 30       	cpi	r17, 0x05	; 5
    c278:	19 f4       	brne	.+6      	; 0xc280 <drawlevel+0xf4>
    c27a:	4e e3       	ldi	r20, 0x3E	; 62
    c27c:	59 e7       	ldi	r21, 0x79	; 121
    c27e:	0f c0       	rjmp	.+30     	; 0xc29e <drawlevel+0x112>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    c280:	16 30       	cpi	r17, 0x06	; 6
    c282:	49 f4       	brne	.+18     	; 0xc296 <drawlevel+0x10a>
    c284:	46 e3       	ldi	r20, 0x36	; 54
    c286:	59 e7       	ldi	r21, 0x79	; 121
    c288:	0a c0       	rjmp	.+20     	; 0xc29e <drawlevel+0x112>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,groundblock0);
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,groundblock1);
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    c28a:	12 32       	cpi	r17, 0x22	; 34
    c28c:	09 f0       	breq	.+2      	; 0xc290 <drawlevel+0x104>
    c28e:	5a c0       	rjmp	.+180    	; 0xc344 <drawlevel+0x1b8>
    c290:	40 ed       	ldi	r20, 0xD0	; 208
    c292:	58 e7       	ldi	r21, 0x78	; 120
    c294:	04 c0       	rjmp	.+8      	; 0xc29e <drawlevel+0x112>
            DrawMap2(destx  ,yi *2  ,block2);
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    c296:	17 30       	cpi	r17, 0x07	; 7
    c298:	39 f5       	brne	.+78     	; 0xc2e8 <drawlevel+0x15c>
    c29a:	4e ef       	ldi	r20, 0xFE	; 254
    c29c:	58 e7       	ldi	r21, 0x78	; 120
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    if ( c == 50 ) setowl(destx,  yi *2);     
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    c29e:	6c 2f       	mov	r22, r28
    c2a0:	8b 2d       	mov	r24, r11
    c2a2:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c2a6:	22 96       	adiw	r28, 0x02	; 2
    c2a8:	8a e5       	ldi	r24, 0x5A	; 90
    c2aa:	68 0e       	add	r6, r24
    c2ac:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    c2ae:	cc 31       	cpi	r28, 0x1C	; 28
    c2b0:	d1 05       	cpc	r29, r1
    c2b2:	09 f0       	breq	.+2      	; 0xc2b6 <drawlevel+0x12a>
    c2b4:	8c cf       	rjmp	.-232    	; 0xc1ce <drawlevel+0x42>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c2b6:	8f ef       	ldi	r24, 0xFF	; 255
    c2b8:	c8 1a       	sub	r12, r24
    c2ba:	d8 0a       	sbc	r13, r24
    c2bc:	82 e0       	ldi	r24, 0x02	; 2
    c2be:	e8 0e       	add	r14, r24
    c2c0:	f1 1c       	adc	r15, r1
    c2c2:	0e 5f       	subi	r16, 0xFE	; 254
    c2c4:	80 e2       	ldi	r24, 0x20	; 32
    c2c6:	e8 16       	cp	r14, r24
    c2c8:	f1 04       	cpc	r15, r1
    c2ca:	09 f0       	breq	.+2      	; 0xc2ce <drawlevel+0x142>
    c2cc:	7c cf       	rjmp	.-264    	; 0xc1c6 <drawlevel+0x3a>
    if ( c == 50 ) setowl(destx,  yi *2);     
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    }
    }

}
    c2ce:	df 91       	pop	r29
    c2d0:	cf 91       	pop	r28
    c2d2:	1f 91       	pop	r17
    c2d4:	0f 91       	pop	r16
    c2d6:	ff 90       	pop	r15
    c2d8:	ef 90       	pop	r14
    c2da:	df 90       	pop	r13
    c2dc:	cf 90       	pop	r12
    c2de:	bf 90       	pop	r11
    c2e0:	8f 90       	pop	r8
    c2e2:	7f 90       	pop	r7
    c2e4:	6f 90       	pop	r6
    c2e6:	08 95       	ret
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    c2e8:	18 30       	cpi	r17, 0x08	; 8
    c2ea:	19 f4       	brne	.+6      	; 0xc2f2 <drawlevel+0x166>
    c2ec:	4e e2       	ldi	r20, 0x2E	; 46
    c2ee:	59 e7       	ldi	r21, 0x79	; 121
    c2f0:	d6 cf       	rjmp	.-84     	; 0xc29e <drawlevel+0x112>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    c2f2:	19 30       	cpi	r17, 0x09	; 9
    c2f4:	19 f4       	brne	.+6      	; 0xc2fc <drawlevel+0x170>
    c2f6:	48 e2       	ldi	r20, 0x28	; 40
    c2f8:	59 e7       	ldi	r21, 0x79	; 121
    c2fa:	d1 cf       	rjmp	.-94     	; 0xc29e <drawlevel+0x112>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    c2fc:	1a 30       	cpi	r17, 0x0A	; 10
    c2fe:	19 f4       	brne	.+6      	; 0xc306 <drawlevel+0x17a>
    c300:	42 e2       	ldi	r20, 0x22	; 34
    c302:	59 e7       	ldi	r21, 0x79	; 121
    c304:	cc cf       	rjmp	.-104    	; 0xc29e <drawlevel+0x112>
    if ( c == 40 ) DrawMap2(destx ,yi *2  ,moss);
    c306:	18 32       	cpi	r17, 0x28	; 40
    c308:	19 f4       	brne	.+6      	; 0xc310 <drawlevel+0x184>
    c30a:	4c ea       	ldi	r20, 0xAC	; 172
    c30c:	58 e7       	ldi	r21, 0x78	; 120
    c30e:	c7 cf       	rjmp	.-114    	; 0xc29e <drawlevel+0x112>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,groundblock0);
    c310:	1c 30       	cpi	r17, 0x0C	; 12
    c312:	19 f4       	brne	.+6      	; 0xc31a <drawlevel+0x18e>
    c314:	46 ea       	ldi	r20, 0xA6	; 166
    c316:	58 e7       	ldi	r21, 0x78	; 120
    c318:	c2 cf       	rjmp	.-124    	; 0xc29e <drawlevel+0x112>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,groundblock1);
    c31a:	1d 30       	cpi	r17, 0x0D	; 13
    c31c:	19 f4       	brne	.+6      	; 0xc324 <drawlevel+0x198>
    c31e:	40 ea       	ldi	r20, 0xA0	; 160
    c320:	58 e7       	ldi	r21, 0x78	; 120
    c322:	bd cf       	rjmp	.-134    	; 0xc29e <drawlevel+0x112>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    c324:	1f 31       	cpi	r17, 0x1F	; 31
    c326:	19 f4       	brne	.+6      	; 0xc32e <drawlevel+0x1a2>
    c328:	45 ee       	ldi	r20, 0xE5	; 229
    c32a:	58 e7       	ldi	r21, 0x78	; 120
    c32c:	b8 cf       	rjmp	.-144    	; 0xc29e <drawlevel+0x112>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    c32e:	10 32       	cpi	r17, 0x20	; 32
    c330:	19 f4       	brne	.+6      	; 0xc338 <drawlevel+0x1ac>
    c332:	4f ed       	ldi	r20, 0xDF	; 223
    c334:	58 e7       	ldi	r21, 0x78	; 120
    c336:	b3 cf       	rjmp	.-154    	; 0xc29e <drawlevel+0x112>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    c338:	11 32       	cpi	r17, 0x21	; 33
    c33a:	09 f0       	breq	.+2      	; 0xc33e <drawlevel+0x1b2>
    c33c:	a6 cf       	rjmp	.-180    	; 0xc28a <drawlevel+0xfe>
    c33e:	49 ed       	ldi	r20, 0xD9	; 217
    c340:	58 e7       	ldi	r21, 0x78	; 120
    c342:	ad cf       	rjmp	.-166    	; 0xc29e <drawlevel+0x112>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    c344:	13 32       	cpi	r17, 0x23	; 35
    c346:	09 f4       	brne	.+2      	; 0xc34a <drawlevel+0x1be>
    c348:	50 c0       	rjmp	.+160    	; 0xc3ea <drawlevel+0x25e>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    c34a:	14 32       	cpi	r17, 0x24	; 36
    c34c:	19 f4       	brne	.+6      	; 0xc354 <drawlevel+0x1c8>
    c34e:	4e eb       	ldi	r20, 0xBE	; 190
    c350:	58 e7       	ldi	r21, 0x78	; 120
    c352:	a5 cf       	rjmp	.-182    	; 0xc29e <drawlevel+0x112>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    c354:	15 32       	cpi	r17, 0x25	; 37
    c356:	19 f4       	brne	.+6      	; 0xc35e <drawlevel+0x1d2>
    c358:	48 eb       	ldi	r20, 0xB8	; 184
    c35a:	58 e7       	ldi	r21, 0x78	; 120
    c35c:	a0 cf       	rjmp	.-192    	; 0xc29e <drawlevel+0x112>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    c35e:	16 32       	cpi	r17, 0x26	; 38
    c360:	19 f4       	brne	.+6      	; 0xc368 <drawlevel+0x1dc>
    c362:	42 eb       	ldi	r20, 0xB2	; 178
    c364:	58 e7       	ldi	r21, 0x78	; 120
    c366:	9b cf       	rjmp	.-202    	; 0xc29e <drawlevel+0x112>
    if ( c == 39 ) {
    c368:	17 32       	cpi	r17, 0x27	; 39
    c36a:	89 f5       	brne	.+98     	; 0xc3ce <drawlevel+0x242>
        if(level == 5){
    c36c:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    c370:	8c 2e       	mov	r8, r28
    c372:	83 94       	inc	r8
    c374:	85 30       	cpi	r24, 0x05	; 5
    c376:	a9 f4       	brne	.+42     	; 0xc3a2 <drawlevel+0x216>
        DrawMap2(destx ,yi *2 ,drkbridge0);
    c378:	4d e6       	ldi	r20, 0x6D	; 109
    c37a:	58 e7       	ldi	r21, 0x78	; 120
    c37c:	6c 2f       	mov	r22, r28
    c37e:	8b 2d       	mov	r24, r11
    c380:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx +1 ,yi *2  ,drkbridge0);
    c384:	4d e6       	ldi	r20, 0x6D	; 109
    c386:	58 e7       	ldi	r21, 0x78	; 120
    c388:	6c 2f       	mov	r22, r28
    c38a:	80 2f       	mov	r24, r16
    c38c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx  ,yi *2 +1 ,lilblack);
    c390:	46 ed       	ldi	r20, 0xD6	; 214
    c392:	58 e7       	ldi	r21, 0x78	; 120
    c394:	68 2d       	mov	r22, r8
    c396:	8b 2d       	mov	r24, r11
    c398:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx +1 ,yi *2 +1 ,lilblack);
    c39c:	46 ed       	ldi	r20, 0xD6	; 214
    c39e:	58 e7       	ldi	r21, 0x78	; 120
    c3a0:	14 c0       	rjmp	.+40     	; 0xc3ca <drawlevel+0x23e>
        }
        else{
        DrawMap2(destx ,yi *2 ,bridge0);
    c3a2:	49 e7       	ldi	r20, 0x79	; 121
    c3a4:	58 e7       	ldi	r21, 0x78	; 120
    c3a6:	6c 2f       	mov	r22, r28
    c3a8:	8b 2d       	mov	r24, r11
    c3aa:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx +1 ,yi *2  ,bridge0);
    c3ae:	49 e7       	ldi	r20, 0x79	; 121
    c3b0:	58 e7       	ldi	r21, 0x78	; 120
    c3b2:	6c 2f       	mov	r22, r28
    c3b4:	80 2f       	mov	r24, r16
    c3b6:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx  ,yi *2 +1 ,nb);
    c3ba:	41 e6       	ldi	r20, 0x61	; 97
    c3bc:	58 e7       	ldi	r21, 0x78	; 120
    c3be:	68 2d       	mov	r22, r8
    c3c0:	8b 2d       	mov	r24, r11
    c3c2:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destx +1 ,yi *2 +1 ,nb);
    c3c6:	41 e6       	ldi	r20, 0x61	; 97
    c3c8:	58 e7       	ldi	r21, 0x78	; 120
    c3ca:	68 2d       	mov	r22, r8
    c3cc:	1c c0       	rjmp	.+56     	; 0xc406 <drawlevel+0x27a>
        }
        };
    if ( c == 21 ) {makeWater(destx,yi *2,destx);}
    c3ce:	15 31       	cpi	r17, 0x15	; 21
    c3d0:	31 f4       	brne	.+12     	; 0xc3de <drawlevel+0x252>
    c3d2:	a7 01       	movw	r20, r14
    c3d4:	be 01       	movw	r22, r28
    c3d6:	c7 01       	movw	r24, r14
    c3d8:	0e 94 62 52 	call	0xa4c4	; 0xa4c4 <makeWater>
    c3dc:	64 cf       	rjmp	.-312    	; 0xc2a6 <drawlevel+0x11a>

    if ( c == 22 ) DrawMap2(destx ,yi *2  ,cloud0);
    c3de:	16 31       	cpi	r17, 0x16	; 22
    c3e0:	21 f0       	breq	.+8      	; 0xc3ea <drawlevel+0x25e>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,cloud0);
    c3e2:	17 31       	cpi	r17, 0x17	; 23
    c3e4:	11 f0       	breq	.+4      	; 0xc3ea <drawlevel+0x25e>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,cloud0);
    c3e6:	18 31       	cpi	r17, 0x18	; 24
    c3e8:	81 f4       	brne	.+32     	; 0xc40a <drawlevel+0x27e>
    c3ea:	44 ec       	ldi	r20, 0xC4	; 196
    c3ec:	58 e7       	ldi	r21, 0x78	; 120
    c3ee:	57 cf       	rjmp	.-338    	; 0xc29e <drawlevel+0x112>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    c3f0:	1d 31       	cpi	r17, 0x1D	; 29
    c3f2:	f9 f4       	brne	.+62     	; 0xc432 <drawlevel+0x2a6>
    c3f4:	4d ee       	ldi	r20, 0xED	; 237
    c3f6:	57 e7       	ldi	r21, 0x77	; 119
    c3f8:	6c 2f       	mov	r22, r28
    c3fa:	8b 2d       	mov	r24, r11
    c3fc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c400:	4d ee       	ldi	r20, 0xED	; 237
    c402:	57 e7       	ldi	r21, 0x77	; 119
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    c404:	6c 2f       	mov	r22, r28
    c406:	80 2f       	mov	r24, r16
    c408:	4c cf       	rjmp	.-360    	; 0xc2a2 <drawlevel+0x116>
    if ( c == 21 ) {makeWater(destx,yi *2,destx);}

    if ( c == 22 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    c40a:	19 31       	cpi	r17, 0x19	; 25
    c40c:	19 f4       	brne	.+6      	; 0xc414 <drawlevel+0x288>
    c40e:	4c e1       	ldi	r20, 0x1C	; 28
    c410:	59 e7       	ldi	r21, 0x79	; 121
    c412:	45 cf       	rjmp	.-374    	; 0xc29e <drawlevel+0x112>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    c414:	1a 31       	cpi	r17, 0x1A	; 26
    c416:	19 f4       	brne	.+6      	; 0xc41e <drawlevel+0x292>
    c418:	46 e1       	ldi	r20, 0x16	; 22
    c41a:	59 e7       	ldi	r21, 0x79	; 121
    c41c:	40 cf       	rjmp	.-384    	; 0xc29e <drawlevel+0x112>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    c41e:	1b 31       	cpi	r17, 0x1B	; 27
    c420:	19 f4       	brne	.+6      	; 0xc428 <drawlevel+0x29c>
    c422:	40 e1       	ldi	r20, 0x10	; 16
    c424:	59 e7       	ldi	r21, 0x79	; 121
    c426:	3b cf       	rjmp	.-394    	; 0xc29e <drawlevel+0x112>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    c428:	1c 31       	cpi	r17, 0x1C	; 28
    c42a:	11 f7       	brne	.-60     	; 0xc3f0 <drawlevel+0x264>
    c42c:	4a e0       	ldi	r20, 0x0A	; 10
    c42e:	59 e7       	ldi	r21, 0x79	; 121
    c430:	36 cf       	rjmp	.-404    	; 0xc29e <drawlevel+0x112>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    c432:	1e 31       	cpi	r17, 0x1E	; 30
    c434:	49 f4       	brne	.+18     	; 0xc448 <drawlevel+0x2bc>
    c436:	49 ee       	ldi	r20, 0xE9	; 233
    c438:	57 e7       	ldi	r21, 0x77	; 119
    c43a:	6c 2f       	mov	r22, r28
    c43c:	8b 2d       	mov	r24, r11
    c43e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c442:	49 ee       	ldi	r20, 0xE9	; 233
    c444:	57 e7       	ldi	r21, 0x77	; 119
    c446:	de cf       	rjmp	.-68     	; 0xc404 <drawlevel+0x278>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    c448:	19 32       	cpi	r17, 0x29	; 41
    c44a:	19 f4       	brne	.+6      	; 0xc452 <drawlevel+0x2c6>
    c44c:	48 ef       	ldi	r20, 0xF8	; 248
    c44e:	58 e7       	ldi	r21, 0x78	; 120
    c450:	26 cf       	rjmp	.-436    	; 0xc29e <drawlevel+0x112>
    if ( c == 50 ) setowl(destx,  yi *2);     
    c452:	12 33       	cpi	r17, 0x32	; 50
    c454:	29 f4       	brne	.+10     	; 0xc460 <drawlevel+0x2d4>
    c456:	be 01       	movw	r22, r28
    c458:	c7 01       	movw	r24, r14
    c45a:	0e 94 89 60 	call	0xc112	; 0xc112 <setowl>
    c45e:	23 cf       	rjmp	.-442    	; 0xc2a6 <drawlevel+0x11a>
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    c460:	1e 33       	cpi	r17, 0x3E	; 62
    c462:	09 f0       	breq	.+2      	; 0xc466 <drawlevel+0x2da>
    c464:	20 cf       	rjmp	.-448    	; 0xc2a6 <drawlevel+0x11a>
    c466:	4a ec       	ldi	r20, 0xCA	; 202
    c468:	58 e7       	ldi	r21, 0x78	; 120
    c46a:	19 cf       	rjmp	.-462    	; 0xc29e <drawlevel+0x112>

0000c46c <updatelevel>:
//}
    }
    
}
void updatelevel()
{
    c46c:	cf 92       	push	r12
    c46e:	df 92       	push	r13
    c470:	ef 92       	push	r14
    c472:	ff 92       	push	r15
    c474:	0f 93       	push	r16
    c476:	1f 93       	push	r17
    c478:	cf 93       	push	r28
    c47a:	df 93       	push	r29
    c47c:	00 e0       	ldi	r16, 0x00	; 0
    c47e:	10 e0       	ldi	r17, 0x00	; 0
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c480:	e1 2c       	mov	r14, r1
    c482:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    c484:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    c488:	81 11       	cpse	r24, r1
    c48a:	08 c0       	rjmp	.+16     	; 0xc49c <updatelevel+0x30>
    c48c:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c490:	f8 01       	movw	r30, r16
    c492:	e9 0f       	add	r30, r25
    c494:	f1 1d       	adc	r31, r1
    c496:	e1 57       	subi	r30, 0x71	; 113
    c498:	fa 4c       	sbci	r31, 0xCA	; 202
    c49a:	59 c0       	rjmp	.+178    	; 0xc54e <updatelevel+0xe2>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    c49c:	81 30       	cpi	r24, 0x01	; 1
    c49e:	41 f4       	brne	.+16     	; 0xc4b0 <updatelevel+0x44>
    c4a0:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c4a4:	f8 01       	movw	r30, r16
    c4a6:	e9 0f       	add	r30, r25
    c4a8:	f1 1d       	adc	r31, r1
    c4aa:	ed 55       	subi	r30, 0x5D	; 93
    c4ac:	ff 4c       	sbci	r31, 0xCF	; 207
    c4ae:	4f c0       	rjmp	.+158    	; 0xc54e <updatelevel+0xe2>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    c4b0:	82 30       	cpi	r24, 0x02	; 2
    c4b2:	41 f4       	brne	.+16     	; 0xc4c4 <updatelevel+0x58>
    c4b4:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c4b8:	f8 01       	movw	r30, r16
    c4ba:	e9 0f       	add	r30, r25
    c4bc:	f1 1d       	adc	r31, r1
    c4be:	e9 54       	subi	r30, 0x49	; 73
    c4c0:	f4 4d       	sbci	r31, 0xD4	; 212
    c4c2:	45 c0       	rjmp	.+138    	; 0xc54e <updatelevel+0xe2>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    c4c4:	83 30       	cpi	r24, 0x03	; 3
    c4c6:	41 f4       	brne	.+16     	; 0xc4d8 <updatelevel+0x6c>
    c4c8:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c4cc:	f8 01       	movw	r30, r16
    c4ce:	e9 0f       	add	r30, r25
    c4d0:	f1 1d       	adc	r31, r1
    c4d2:	e5 53       	subi	r30, 0x35	; 53
    c4d4:	f9 4d       	sbci	r31, 0xD9	; 217
    c4d6:	3b c0       	rjmp	.+118    	; 0xc54e <updatelevel+0xe2>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    c4d8:	84 30       	cpi	r24, 0x04	; 4
    c4da:	41 f4       	brne	.+16     	; 0xc4ec <updatelevel+0x80>
    c4dc:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c4e0:	f8 01       	movw	r30, r16
    c4e2:	e9 0f       	add	r30, r25
    c4e4:	f1 1d       	adc	r31, r1
    c4e6:	e1 52       	subi	r30, 0x21	; 33
    c4e8:	fe 4d       	sbci	r31, 0xDE	; 222
    c4ea:	31 c0       	rjmp	.+98     	; 0xc54e <updatelevel+0xe2>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    c4ec:	85 30       	cpi	r24, 0x05	; 5
    c4ee:	41 f4       	brne	.+16     	; 0xc500 <updatelevel+0x94>
    c4f0:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c4f4:	f8 01       	movw	r30, r16
    c4f6:	e9 0f       	add	r30, r25
    c4f8:	f1 1d       	adc	r31, r1
    c4fa:	ed 50       	subi	r30, 0x0D	; 13
    c4fc:	f3 4e       	sbci	r31, 0xE3	; 227
    c4fe:	27 c0       	rjmp	.+78     	; 0xc54e <updatelevel+0xe2>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    c500:	86 30       	cpi	r24, 0x06	; 6
    c502:	41 f4       	brne	.+16     	; 0xc514 <updatelevel+0xa8>
    c504:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c508:	f8 01       	movw	r30, r16
    c50a:	e9 0f       	add	r30, r25
    c50c:	f1 1d       	adc	r31, r1
    c50e:	e9 5f       	subi	r30, 0xF9	; 249
    c510:	f7 4e       	sbci	r31, 0xE7	; 231
    c512:	1d c0       	rjmp	.+58     	; 0xc54e <updatelevel+0xe2>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    c514:	87 30       	cpi	r24, 0x07	; 7
    c516:	41 f4       	brne	.+16     	; 0xc528 <updatelevel+0xbc>
    c518:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c51c:	f8 01       	movw	r30, r16
    c51e:	e9 0f       	add	r30, r25
    c520:	f1 1d       	adc	r31, r1
    c522:	e5 5e       	subi	r30, 0xE5	; 229
    c524:	fc 4e       	sbci	r31, 0xEC	; 236
    c526:	13 c0       	rjmp	.+38     	; 0xc54e <updatelevel+0xe2>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    c528:	88 30       	cpi	r24, 0x08	; 8
    c52a:	41 f4       	brne	.+16     	; 0xc53c <updatelevel+0xd0>
    c52c:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c530:	f8 01       	movw	r30, r16
    c532:	e9 0f       	add	r30, r25
    c534:	f1 1d       	adc	r31, r1
    c536:	e1 5d       	subi	r30, 0xD1	; 209
    c538:	f1 4f       	sbci	r31, 0xF1	; 241
    c53a:	09 c0       	rjmp	.+18     	; 0xc54e <updatelevel+0xe2>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    c53c:	89 30       	cpi	r24, 0x09	; 9
    c53e:	41 f4       	brne	.+16     	; 0xc550 <updatelevel+0xe4>
    c540:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c544:	f8 01       	movw	r30, r16
    c546:	e9 0f       	add	r30, r25
    c548:	f1 1d       	adc	r31, r1
    c54a:	ed 5b       	subi	r30, 0xBD	; 189
    c54c:	f6 4f       	sbci	r31, 0xF6	; 246
    c54e:	d4 91       	lpm	r29, Z
    xi = yi << 1;
    c550:	67 01       	movw	r12, r14
    c552:	cc 0c       	add	r12, r12
    c554:	dd 1c       	adc	r13, r13
    if ( c == 0 ) {
    c556:	d1 11       	cpse	r29, r1
    c558:	21 c0       	rjmp	.+66     	; 0xc59c <updatelevel+0x130>
        if(level == 5 || yi == 0 && level != 0)
    c55a:	85 30       	cpi	r24, 0x05	; 5
    c55c:	29 f0       	breq	.+10     	; 0xc568 <updatelevel+0xfc>
    c55e:	e1 14       	cp	r14, r1
    c560:	f1 04       	cpc	r15, r1
    c562:	29 f4       	brne	.+10     	; 0xc56e <updatelevel+0x102>
    c564:	88 23       	and	r24, r24
    c566:	19 f0       	breq	.+6      	; 0xc56e <updatelevel+0x102>
        {
        DrawMap2(destX,xi  ,black);
    c568:	49 ed       	ldi	r20, 0xD9	; 217
    c56a:	58 e7       	ldi	r21, 0x78	; 120
    c56c:	02 c0       	rjmp	.+4      	; 0xc572 <updatelevel+0x106>
        }
        else{
        DrawMap2(destX,xi  ,bigblue0); 
    c56e:	4a e5       	ldi	r20, 0x5A	; 90
    c570:	59 e7       	ldi	r21, 0x79	; 121
    c572:	6c 2d       	mov	r22, r12
    c574:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c578:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        }
    }
    if ( c == 0 && yi == 12 ) {
    c57c:	8c e0       	ldi	r24, 0x0C	; 12
    c57e:	e8 16       	cp	r14, r24
    c580:	f1 04       	cpc	r15, r1
    c582:	f9 f4       	brne	.+62     	; 0xc5c2 <updatelevel+0x156>
        if(level == 5)
    c584:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    c588:	61 e0       	ldi	r22, 0x01	; 1
    c58a:	6c 0d       	add	r22, r12
    c58c:	85 30       	cpi	r24, 0x05	; 5
    c58e:	19 f4       	brne	.+6      	; 0xc596 <updatelevel+0x12a>
        {
        DrawMap2(destX,xi + 1,black);
    c590:	49 ed       	ldi	r20, 0xD9	; 217
    c592:	58 e7       	ldi	r21, 0x78	; 120
    c594:	12 c0       	rjmp	.+36     	; 0xc5ba <updatelevel+0x14e>
        }
        else{
        DrawMap2(destX,xi + 1,bigblue0); 
    c596:	4a e5       	ldi	r20, 0x5A	; 90
    c598:	59 e7       	ldi	r21, 0x79	; 121
    c59a:	0f c0       	rjmp	.+30     	; 0xc5ba <updatelevel+0x14e>
        }  
    }

    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    c59c:	d1 30       	cpi	r29, 0x01	; 1
    c59e:	19 f4       	brne	.+6      	; 0xc5a6 <updatelevel+0x13a>
    c5a0:	46 e4       	ldi	r20, 0x46	; 70
    c5a2:	59 e7       	ldi	r21, 0x79	; 121
    c5a4:	09 c0       	rjmp	.+18     	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    c5a6:	d2 30       	cpi	r29, 0x02	; 2
    c5a8:	19 f4       	brne	.+6      	; 0xc5b0 <updatelevel+0x144>
    c5aa:	44 e5       	ldi	r20, 0x54	; 84
    c5ac:	59 e7       	ldi	r21, 0x79	; 121
    c5ae:	04 c0       	rjmp	.+8      	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    c5b0:	d3 30       	cpi	r29, 0x03	; 3
    c5b2:	e1 f4       	brne	.+56     	; 0xc5ec <updatelevel+0x180>
    c5b4:	4e e4       	ldi	r20, 0x4E	; 78
    c5b6:	59 e7       	ldi	r21, 0x79	; 121
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    c5b8:	6c 2d       	mov	r22, r12
    c5ba:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c5be:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
{
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c5c2:	8f ef       	ldi	r24, 0xFF	; 255
    c5c4:	e8 1a       	sub	r14, r24
    c5c6:	f8 0a       	sbc	r15, r24
    c5c8:	06 5a       	subi	r16, 0xA6	; 166
    c5ca:	1f 4f       	sbci	r17, 0xFF	; 255
    c5cc:	8d e0       	ldi	r24, 0x0D	; 13
    c5ce:	e8 16       	cp	r14, r24
    c5d0:	f1 04       	cpc	r15, r1
    c5d2:	09 f0       	breq	.+2      	; 0xc5d6 <updatelevel+0x16a>
    c5d4:	57 cf       	rjmp	.-338    	; 0xc484 <updatelevel+0x18>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c5d6:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c5da:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32){
    c5dc:	80 32       	cpi	r24, 0x20	; 32
    c5de:	18 f4       	brcc	.+6      	; 0xc5e6 <updatelevel+0x17a>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c5e0:	80 93 3a 0a 	sts	0x0A3A, r24	; 0x800a3a <destX>
    c5e4:	f6 c0       	rjmp	.+492    	; 0xc7d2 <updatelevel+0x366>
if(destX>=32){
    destX=0;
    c5e6:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
}
}
    c5ea:	f3 c0       	rjmp	.+486    	; 0xc7d2 <updatelevel+0x366>
    }

    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) {
    c5ec:	d4 30       	cpi	r29, 0x04	; 4
    c5ee:	29 f4       	brne	.+10     	; 0xc5fa <updatelevel+0x18e>
        if(level == 5)
    c5f0:	85 30       	cpi	r24, 0x05	; 5
    c5f2:	79 f0       	breq	.+30     	; 0xc612 <updatelevel+0x1a6>
        {
        DrawMap2(destX,xi  ,blackblock);
        }
        else{
        DrawMap2(destX,xi  ,block2); 
    c5f4:	44 e0       	ldi	r20, 0x04	; 4
    c5f6:	59 e7       	ldi	r21, 0x79	; 121
    c5f8:	df cf       	rjmp	.-66     	; 0xc5b8 <updatelevel+0x14c>
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    c5fa:	d5 30       	cpi	r29, 0x05	; 5
    c5fc:	19 f4       	brne	.+6      	; 0xc604 <updatelevel+0x198>
    c5fe:	4e e3       	ldi	r20, 0x3E	; 62
    c600:	59 e7       	ldi	r21, 0x79	; 121
    c602:	da cf       	rjmp	.-76     	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    c604:	d6 30       	cpi	r29, 0x06	; 6
    c606:	41 f4       	brne	.+16     	; 0xc618 <updatelevel+0x1ac>
    c608:	46 e3       	ldi	r20, 0x36	; 54
    c60a:	59 e7       	ldi	r21, 0x79	; 121
    c60c:	d5 cf       	rjmp	.-86     	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 12 ) DrawMap2(destX ,xi  ,groundblock0);
    if ( c == 13 ) DrawMap2(destX ,xi  ,groundblock1);
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    c60e:	d2 32       	cpi	r29, 0x22	; 34
    c610:	a9 f5       	brne	.+106    	; 0xc67c <updatelevel+0x210>
    c612:	40 ed       	ldi	r20, 0xD0	; 208
    c614:	58 e7       	ldi	r21, 0x78	; 120
    c616:	d0 cf       	rjmp	.-96     	; 0xc5b8 <updatelevel+0x14c>
        DrawMap2(destX,xi  ,block2); 
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    c618:	d7 30       	cpi	r29, 0x07	; 7
    c61a:	19 f4       	brne	.+6      	; 0xc622 <updatelevel+0x1b6>
    c61c:	4e ef       	ldi	r20, 0xFE	; 254
    c61e:	58 e7       	ldi	r21, 0x78	; 120
    c620:	cb cf       	rjmp	.-106    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    c622:	d8 30       	cpi	r29, 0x08	; 8
    c624:	19 f4       	brne	.+6      	; 0xc62c <updatelevel+0x1c0>
    c626:	4e e2       	ldi	r20, 0x2E	; 46
    c628:	59 e7       	ldi	r21, 0x79	; 121
    c62a:	c6 cf       	rjmp	.-116    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    c62c:	d9 30       	cpi	r29, 0x09	; 9
    c62e:	19 f4       	brne	.+6      	; 0xc636 <updatelevel+0x1ca>
    c630:	48 e2       	ldi	r20, 0x28	; 40
    c632:	59 e7       	ldi	r21, 0x79	; 121
    c634:	c1 cf       	rjmp	.-126    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    c636:	da 30       	cpi	r29, 0x0A	; 10
    c638:	19 f4       	brne	.+6      	; 0xc640 <updatelevel+0x1d4>
    c63a:	42 e2       	ldi	r20, 0x22	; 34
    c63c:	59 e7       	ldi	r21, 0x79	; 121
    c63e:	bc cf       	rjmp	.-136    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 40 ) DrawMap2(destX ,xi  ,moss);
    c640:	d8 32       	cpi	r29, 0x28	; 40
    c642:	19 f4       	brne	.+6      	; 0xc64a <updatelevel+0x1de>
    c644:	4c ea       	ldi	r20, 0xAC	; 172
    c646:	58 e7       	ldi	r21, 0x78	; 120
    c648:	b7 cf       	rjmp	.-146    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 12 ) DrawMap2(destX ,xi  ,groundblock0);
    c64a:	dc 30       	cpi	r29, 0x0C	; 12
    c64c:	19 f4       	brne	.+6      	; 0xc654 <updatelevel+0x1e8>
    c64e:	46 ea       	ldi	r20, 0xA6	; 166
    c650:	58 e7       	ldi	r21, 0x78	; 120
    c652:	b2 cf       	rjmp	.-156    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 13 ) DrawMap2(destX ,xi  ,groundblock1);
    c654:	dd 30       	cpi	r29, 0x0D	; 13
    c656:	19 f4       	brne	.+6      	; 0xc65e <updatelevel+0x1f2>
    c658:	40 ea       	ldi	r20, 0xA0	; 160
    c65a:	58 e7       	ldi	r21, 0x78	; 120
    c65c:	ad cf       	rjmp	.-166    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    c65e:	df 31       	cpi	r29, 0x1F	; 31
    c660:	19 f4       	brne	.+6      	; 0xc668 <updatelevel+0x1fc>
    c662:	45 ee       	ldi	r20, 0xE5	; 229
    c664:	58 e7       	ldi	r21, 0x78	; 120
    c666:	a8 cf       	rjmp	.-176    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    c668:	d0 32       	cpi	r29, 0x20	; 32
    c66a:	19 f4       	brne	.+6      	; 0xc672 <updatelevel+0x206>
    c66c:	4f ed       	ldi	r20, 0xDF	; 223
    c66e:	58 e7       	ldi	r21, 0x78	; 120
    c670:	a3 cf       	rjmp	.-186    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    c672:	d1 32       	cpi	r29, 0x21	; 33
    c674:	61 f6       	brne	.-104    	; 0xc60e <updatelevel+0x1a2>
    c676:	49 ed       	ldi	r20, 0xD9	; 217
    c678:	58 e7       	ldi	r21, 0x78	; 120
    c67a:	9e cf       	rjmp	.-196    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    c67c:	d3 32       	cpi	r29, 0x23	; 35
    c67e:	19 f4       	brne	.+6      	; 0xc686 <updatelevel+0x21a>
    c680:	44 ec       	ldi	r20, 0xC4	; 196
    c682:	58 e7       	ldi	r21, 0x78	; 120
    c684:	99 cf       	rjmp	.-206    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    c686:	d4 32       	cpi	r29, 0x24	; 36
    c688:	19 f4       	brne	.+6      	; 0xc690 <updatelevel+0x224>
    c68a:	4e eb       	ldi	r20, 0xBE	; 190
    c68c:	58 e7       	ldi	r21, 0x78	; 120
    c68e:	94 cf       	rjmp	.-216    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    c690:	d5 32       	cpi	r29, 0x25	; 37
    c692:	19 f4       	brne	.+6      	; 0xc69a <updatelevel+0x22e>
    c694:	48 eb       	ldi	r20, 0xB8	; 184
    c696:	58 e7       	ldi	r21, 0x78	; 120
    c698:	8f cf       	rjmp	.-226    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    c69a:	d6 32       	cpi	r29, 0x26	; 38
    c69c:	19 f4       	brne	.+6      	; 0xc6a4 <updatelevel+0x238>
    c69e:	42 eb       	ldi	r20, 0xB2	; 178
    c6a0:	58 e7       	ldi	r21, 0x78	; 120
    c6a2:	8a cf       	rjmp	.-236    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 39 ) {
    c6a4:	d7 32       	cpi	r29, 0x27	; 39
    c6a6:	e9 f5       	brne	.+122    	; 0xc722 <updatelevel+0x2b6>
        if(level == 5)
    c6a8:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    c6ac:	c1 e0       	ldi	r28, 0x01	; 1
    c6ae:	cc 0d       	add	r28, r12
    c6b0:	85 30       	cpi	r24, 0x05	; 5
    c6b2:	d9 f4       	brne	.+54     	; 0xc6ea <updatelevel+0x27e>
        {
        DrawMap2(destX,xi  ,drkbridge0);
    c6b4:	4d e6       	ldi	r20, 0x6D	; 109
    c6b6:	58 e7       	ldi	r21, 0x78	; 120
    c6b8:	6c 2d       	mov	r22, r12
    c6ba:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6be:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX +1 ,xi,drkbridge0);
    c6c2:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6c6:	4d e6       	ldi	r20, 0x6D	; 109
    c6c8:	58 e7       	ldi	r21, 0x78	; 120
    c6ca:	6c 2d       	mov	r22, r12
    c6cc:	8f 5f       	subi	r24, 0xFF	; 255
    c6ce:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX  ,xi + 1 ,lilblack);
    c6d2:	46 ed       	ldi	r20, 0xD6	; 214
    c6d4:	58 e7       	ldi	r21, 0x78	; 120
    c6d6:	6c 2f       	mov	r22, r28
    c6d8:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6dc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX +1 ,xi + 1 ,lilblack);
    c6e0:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6e4:	46 ed       	ldi	r20, 0xD6	; 214
    c6e6:	58 e7       	ldi	r21, 0x78	; 120
    c6e8:	1a c0       	rjmp	.+52     	; 0xc71e <updatelevel+0x2b2>
        }
        else{
        DrawMap2(destX,xi  ,bridge0);
    c6ea:	49 e7       	ldi	r20, 0x79	; 121
    c6ec:	58 e7       	ldi	r21, 0x78	; 120
    c6ee:	6c 2d       	mov	r22, r12
    c6f0:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6f4:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX +1 ,xi,bridge0);
    c6f8:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c6fc:	49 e7       	ldi	r20, 0x79	; 121
    c6fe:	58 e7       	ldi	r21, 0x78	; 120
    c700:	6c 2d       	mov	r22, r12
    c702:	8f 5f       	subi	r24, 0xFF	; 255
    c704:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX  ,xi + 1 ,nb);
    c708:	41 e6       	ldi	r20, 0x61	; 97
    c70a:	58 e7       	ldi	r21, 0x78	; 120
    c70c:	6c 2f       	mov	r22, r28
    c70e:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c712:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        DrawMap2(destX +1 ,xi + 1 ,nb);
    c716:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c71a:	41 e6       	ldi	r20, 0x61	; 97
    c71c:	58 e7       	ldi	r21, 0x78	; 120
    c71e:	6c 2f       	mov	r22, r28
    c720:	1e c0       	rjmp	.+60     	; 0xc75e <updatelevel+0x2f2>
        }
        };
    if ( c == 21 ) {
    c722:	d5 31       	cpi	r29, 0x15	; 21
    c724:	49 f4       	brne	.+18     	; 0xc738 <updatelevel+0x2cc>
        makeWater(destX,xi,30);
    c726:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c72a:	4e e1       	ldi	r20, 0x1E	; 30
    c72c:	50 e0       	ldi	r21, 0x00	; 0
    c72e:	b6 01       	movw	r22, r12
    c730:	90 e0       	ldi	r25, 0x00	; 0
    c732:	0e 94 62 52 	call	0xa4c4	; 0xa4c4 <makeWater>
    c736:	45 cf       	rjmp	.-374    	; 0xc5c2 <updatelevel+0x156>
    }
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    c738:	d9 31       	cpi	r29, 0x19	; 25
    c73a:	99 f4       	brne	.+38     	; 0xc762 <updatelevel+0x2f6>
    c73c:	4c e1       	ldi	r20, 0x1C	; 28
    c73e:	59 e7       	ldi	r21, 0x79	; 121
    c740:	3b cf       	rjmp	.-394    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    c742:	dd 31       	cpi	r29, 0x1D	; 29
    c744:	e9 f4       	brne	.+58     	; 0xc780 <updatelevel+0x314>
    c746:	4d ee       	ldi	r20, 0xED	; 237
    c748:	57 e7       	ldi	r21, 0x77	; 119
    c74a:	6c 2d       	mov	r22, r12
    c74c:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c750:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c754:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c758:	4d ee       	ldi	r20, 0xED	; 237
    c75a:	57 e7       	ldi	r21, 0x77	; 119
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    c75c:	6c 2d       	mov	r22, r12
    c75e:	8f 5f       	subi	r24, 0xFF	; 255
    c760:	2e cf       	rjmp	.-420    	; 0xc5be <updatelevel+0x152>
        };
    if ( c == 21 ) {
        makeWater(destX,xi,30);
    }
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    c762:	da 31       	cpi	r29, 0x1A	; 26
    c764:	19 f4       	brne	.+6      	; 0xc76c <updatelevel+0x300>
    c766:	46 e1       	ldi	r20, 0x16	; 22
    c768:	59 e7       	ldi	r21, 0x79	; 121
    c76a:	26 cf       	rjmp	.-436    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    c76c:	db 31       	cpi	r29, 0x1B	; 27
    c76e:	19 f4       	brne	.+6      	; 0xc776 <updatelevel+0x30a>
    c770:	40 e1       	ldi	r20, 0x10	; 16
    c772:	59 e7       	ldi	r21, 0x79	; 121
    c774:	21 cf       	rjmp	.-446    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    c776:	dc 31       	cpi	r29, 0x1C	; 28
    c778:	21 f7       	brne	.-56     	; 0xc742 <updatelevel+0x2d6>
    c77a:	4a e0       	ldi	r20, 0x0A	; 10
    c77c:	59 e7       	ldi	r21, 0x79	; 121
    c77e:	1c cf       	rjmp	.-456    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    c780:	de 31       	cpi	r29, 0x1E	; 30
    c782:	61 f4       	brne	.+24     	; 0xc79c <updatelevel+0x330>
    c784:	49 ee       	ldi	r20, 0xE9	; 233
    c786:	57 e7       	ldi	r21, 0x77	; 119
    c788:	6c 2d       	mov	r22, r12
    c78a:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c78e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c792:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c796:	49 ee       	ldi	r20, 0xE9	; 233
    c798:	57 e7       	ldi	r21, 0x77	; 119
    c79a:	e0 cf       	rjmp	.-64     	; 0xc75c <updatelevel+0x2f0>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    c79c:	d9 32       	cpi	r29, 0x29	; 41
    c79e:	19 f4       	brne	.+6      	; 0xc7a6 <updatelevel+0x33a>
    c7a0:	48 ef       	ldi	r20, 0xF8	; 248
    c7a2:	58 e7       	ldi	r21, 0x78	; 120
    c7a4:	09 cf       	rjmp	.-494    	; 0xc5b8 <updatelevel+0x14c>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    c7a6:	d2 33       	cpi	r29, 0x32	; 50
    c7a8:	71 f4       	brne	.+28     	; 0xc7c6 <updatelevel+0x35a>
    c7aa:	4a e5       	ldi	r20, 0x5A	; 90
    c7ac:	59 e7       	ldi	r21, 0x79	; 121
    c7ae:	6c 2d       	mov	r22, r12
    c7b0:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c7b4:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c7b8:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c7bc:	b6 01       	movw	r22, r12
    c7be:	90 e0       	ldi	r25, 0x00	; 0
    c7c0:	0e 94 89 60 	call	0xc112	; 0xc112 <setowl>
    c7c4:	fe ce       	rjmp	.-516    	; 0xc5c2 <updatelevel+0x156>
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    c7c6:	de 33       	cpi	r29, 0x3E	; 62
    c7c8:	09 f0       	breq	.+2      	; 0xc7cc <updatelevel+0x360>
    c7ca:	fb ce       	rjmp	.-522    	; 0xc5c2 <updatelevel+0x156>
    c7cc:	4a ec       	ldi	r20, 0xCA	; 202
    c7ce:	58 e7       	ldi	r21, 0x78	; 120
    c7d0:	f3 ce       	rjmp	.-538    	; 0xc5b8 <updatelevel+0x14c>
    
destX = destX + 2;
if(destX>=32){
    destX=0;
}
}
    c7d2:	df 91       	pop	r29
    c7d4:	cf 91       	pop	r28
    c7d6:	1f 91       	pop	r17
    c7d8:	0f 91       	pop	r16
    c7da:	ff 90       	pop	r15
    c7dc:	ef 90       	pop	r14
    c7de:	df 90       	pop	r13
    c7e0:	cf 90       	pop	r12
    c7e2:	08 95       	ret

0000c7e4 <initmonster>:
}


void initmonster()
{
owl.onscreen = false;    
    c7e4:	10 92 38 0a 	sts	0x0A38, r1	; 0x800a38 <owl+0x9>
MonsteronScreen = false;
    c7e8:	10 92 0f 0a 	sts	0x0A0F, r1	; 0x800a0f <MonsteronScreen>
    c7ec:	08 95       	ret

0000c7ee <movelevel>:
}

void movelevel()
{
if (player2.x >= 150 && (scrolltiles + 15 <= levelwidth ) || player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    c7ee:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    c7f2:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    c7f6:	86 39       	cpi	r24, 0x96	; 150
    c7f8:	91 05       	cpc	r25, r1
    c7fa:	44 f4       	brge	.+16     	; 0xc80c <movelevel+0x1e>
    c7fc:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c800:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c804:	86 39       	cpi	r24, 0x96	; 150
    c806:	91 05       	cpc	r25, r1
    c808:	0c f4       	brge	.+2      	; 0xc80c <movelevel+0x1e>
    c80a:	4f c0       	rjmp	.+158    	; 0xc8aa <movelevel+0xbc>
    c80c:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    c810:	90 e0       	ldi	r25, 0x00	; 0
    c812:	8c 34       	cpi	r24, 0x4C	; 76
    c814:	91 05       	cpc	r25, r1
    c816:	0c f0       	brlt	.+2      	; 0xc81a <movelevel+0x2c>
    c818:	48 c0       	rjmp	.+144    	; 0xc8aa <movelevel+0xbc>
Scroll(1 ,0);   
    c81a:	60 e0       	ldi	r22, 0x00	; 0
    c81c:	81 e0       	ldi	r24, 0x01	; 1
    c81e:	0e 94 2e 4e 	call	0x9c5c	; 0x9c5c <Scroll>
Levelx  = Levelx + 1;
    c822:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    c826:	8f 5f       	subi	r24, 0xFF	; 255
    c828:	80 93 8c 0a 	sts	0x0A8C, r24	; 0x800a8c <Levelx>
player.x = player.x - 1;
    c82c:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <player>
    c830:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <player+0x1>
    c834:	01 97       	sbiw	r24, 0x01	; 1
    c836:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    c83a:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
player2.x = player2.x -1;  
    c83e:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    c842:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    c846:	01 97       	sbiw	r24, 0x01	; 1
    c848:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    c84c:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
levMovedCnt = levMovedCnt + 1;
    c850:	80 91 a8 09 	lds	r24, 0x09A8	; 0x8009a8 <levMovedCnt>
    c854:	90 91 a9 09 	lds	r25, 0x09A9	; 0x8009a9 <levMovedCnt+0x1>
    c858:	01 96       	adiw	r24, 0x01	; 1
    c85a:	90 93 a9 09 	sts	0x09A9, r25	; 0x8009a9 <levMovedCnt+0x1>
    c85e:	80 93 a8 09 	sts	0x09A8, r24	; 0x8009a8 <levMovedCnt>

scrollmonster(-1);
    c862:	8f ef       	ldi	r24, 0xFF	; 255
    c864:	9f ef       	ldi	r25, 0xFF	; 255
    c866:	0e 94 76 60 	call	0xc0ec	; 0xc0ec <scrollmonster>
if ( Levelx >= 16 )
    c86a:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    c86e:	80 31       	cpi	r24, 0x10	; 16
    c870:	e0 f0       	brcs	.+56     	; 0xc8aa <movelevel+0xbc>
{
for(int i = 0; i <= waterspwncnt - 1; i++)
    c872:	40 91 98 08 	lds	r20, 0x0898	; 0x800898 <waterspwncnt>
    c876:	50 91 99 08 	lds	r21, 0x0899	; 0x800899 <waterspwncnt+0x1>
    c87a:	e7 e7       	ldi	r30, 0x77	; 119
    c87c:	f9 e0       	ldi	r31, 0x09	; 9
    c87e:	80 e0       	ldi	r24, 0x00	; 0
    c880:	90 e0       	ldi	r25, 0x00	; 0
    c882:	84 17       	cp	r24, r20
    c884:	95 07       	cpc	r25, r21
    c886:	44 f4       	brge	.+16     	; 0xc898 <movelevel+0xaa>
{
    waterscrolls[i] = waterscrolls[i] - 1;
    c888:	20 81       	ld	r18, Z
    c88a:	31 81       	ldd	r19, Z+1	; 0x01
    c88c:	21 50       	subi	r18, 0x01	; 1
    c88e:	31 09       	sbc	r19, r1
    c890:	21 93       	st	Z+, r18
    c892:	31 93       	st	Z+, r19
levMovedCnt = levMovedCnt + 1;

scrollmonster(-1);
if ( Levelx >= 16 )
{
for(int i = 0; i <= waterspwncnt - 1; i++)
    c894:	01 96       	adiw	r24, 0x01	; 1
    c896:	f5 cf       	rjmp	.-22     	; 0xc882 <movelevel+0x94>
{
    waterscrolls[i] = waterscrolls[i] - 1;
}
updatelevel();
    c898:	0e 94 36 62 	call	0xc46c	; 0xc46c <updatelevel>
scrolltiles++; 
    c89c:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    c8a0:	8f 5f       	subi	r24, 0xFF	; 255
    c8a2:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <scrolltiles>
Levelx = 0;    
    c8a6:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
    c8aa:	08 95       	ret

0000c8ac <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    c8ac:	cf 92       	push	r12
    c8ae:	df 92       	push	r13
    c8b0:	ef 92       	push	r14
    c8b2:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    c8b4:	2c e3       	ldi	r18, 0x3C	; 60
    c8b6:	30 e0       	ldi	r19, 0x00	; 0
    c8b8:	40 e0       	ldi	r20, 0x00	; 0
    c8ba:	50 e0       	ldi	r21, 0x00	; 0
    c8bc:	0e 94 f6 69 	call	0xd3ec	; 0xd3ec <__udivmodsi4>
    tmp = 99 - tmp ;
    c8c0:	83 e6       	ldi	r24, 0x63	; 99
    c8c2:	c8 2e       	mov	r12, r24
    c8c4:	d1 2c       	mov	r13, r1
    c8c6:	e1 2c       	mov	r14, r1
    c8c8:	f1 2c       	mov	r15, r1
    c8ca:	c2 1a       	sub	r12, r18
    c8cc:	d3 0a       	sbc	r13, r19
    c8ce:	e4 0a       	sbc	r14, r20
    c8d0:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    c8d2:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    c8d6:	84 2f       	mov	r24, r20
    c8d8:	90 e0       	ldi	r25, 0x00	; 0
    c8da:	a0 e0       	ldi	r26, 0x00	; 0
    c8dc:	b0 e0       	ldi	r27, 0x00	; 0
    c8de:	c8 16       	cp	r12, r24
    c8e0:	d9 06       	cpc	r13, r25
    c8e2:	ea 06       	cpc	r14, r26
    c8e4:	fb 06       	cpc	r15, r27
    c8e6:	10 f0       	brcs	.+4      	; 0xc8ec <updatetime+0x40>
    c8e8:	41 11       	cpse	r20, r1
    c8ea:	09 c0       	rjmp	.+18     	; 0xc8fe <updatetime+0x52>
    c8ec:	50 e0       	ldi	r21, 0x00	; 0
    c8ee:	22 e0       	ldi	r18, 0x02	; 2
    c8f0:	30 e0       	ldi	r19, 0x00	; 0
    c8f2:	60 e0       	ldi	r22, 0x00	; 0
    c8f4:	70 e0       	ldi	r23, 0x00	; 0
    c8f6:	8a e1       	ldi	r24, 0x1A	; 26
    c8f8:	90 e0       	ldi	r25, 0x00	; 0
    c8fa:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
    leveltime = tmp;
    c8fe:	c0 92 89 0a 	sts	0x0A89, r12	; 0x800a89 <leveltime>
    if (leveltime == 0 ) timeisup = true;
    c902:	c1 10       	cpse	r12, r1
    c904:	03 c0       	rjmp	.+6      	; 0xc90c <updatetime+0x60>
    c906:	81 e0       	ldi	r24, 0x01	; 1
    c908:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <timeisup>
    
}
    c90c:	ff 90       	pop	r15
    c90e:	ef 90       	pop	r14
    c910:	df 90       	pop	r13
    c912:	cf 90       	pop	r12
    c914:	08 95       	ret

0000c916 <playintro>:

void playintro()
{
    c916:	0f 93       	push	r16
    c918:	cf 93       	push	r28
    c91a:	df 93       	push	r29

introplaying = true;
    c91c:	c1 e0       	ldi	r28, 0x01	; 1
    c91e:	c0 93 74 09 	sts	0x0974, r28	; 0x800974 <introplaying>
waterspwncnt = 0;
    c922:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    c926:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    c92a:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    c92e:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
Levelx = 0;
    c932:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    c936:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player2.speed = 1;
    c93a:	21 e0       	ldi	r18, 0x01	; 1
    c93c:	30 e0       	ldi	r19, 0x00	; 0
    c93e:	30 93 15 0a 	sts	0x0A15, r19	; 0x800a15 <player2+0x5>
    c942:	20 93 14 0a 	sts	0x0A14, r18	; 0x800a14 <player2+0x4>
player2.x = 38;
    c946:	86 e2       	ldi	r24, 0x26	; 38
    c948:	90 e0       	ldi	r25, 0x00	; 0
    c94a:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    c94e:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
player2.y = 191;
    c952:	8f eb       	ldi	r24, 0xBF	; 191
    c954:	90 e0       	ldi	r25, 0x00	; 0
    c956:	90 93 13 0a 	sts	0x0A13, r25	; 0x800a13 <player2+0x3>
    c95a:	80 93 12 0a 	sts	0x0A12, r24	; 0x800a12 <player2+0x2>
player2.touchground = true;
    c95e:	c0 93 21 0a 	sts	0x0A21, r28	; 0x800a21 <player2+0x11>
player2.jumping = false;
    c962:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x14>
player2.jumpreleased = true;
    c966:	c0 93 25 0a 	sts	0x0A25, r28	; 0x800a25 <player2+0x15>
player.speed = 1;
    c96a:	30 93 5b 09 	sts	0x095B, r19	; 0x80095b <player+0x5>
    c96e:	20 93 5a 09 	sts	0x095A, r18	; 0x80095a <player+0x4>
player.x = 8;
    c972:	28 e0       	ldi	r18, 0x08	; 8
    c974:	30 e0       	ldi	r19, 0x00	; 0
    c976:	30 93 57 09 	sts	0x0957, r19	; 0x800957 <player+0x1>
    c97a:	20 93 56 09 	sts	0x0956, r18	; 0x800956 <player>
player.y = 191;
    c97e:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <player+0x3>
    c982:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <player+0x2>
player.touchground = true;
    c986:	c0 93 67 09 	sts	0x0967, r28	; 0x800967 <player+0x11>
player.jumping = false;
    c98a:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x14>
player.jumpreleased = true;
    c98e:	c0 93 6b 09 	sts	0x096B, r28	; 0x80096b <player+0x15>
player.killer = false;
    c992:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0x19>
player.bananaCount = 0;
    c996:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x1c>
player2.bananaCount = 0;
    c99a:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <player2+0x1c>
initlevel();
    c99e:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
initmonster();
    c9a2:	0e 94 f2 63 	call	0xc7e4	; 0xc7e4 <initmonster>
setheadline();    
    c9a6:	0e 94 37 5b 	call	0xb66e	; 0xb66e <setheadline>
drawlevel(Levelx);
    c9aa:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    c9ae:	90 e0       	ldi	r25, 0x00	; 0
    c9b0:	0e 94 c6 60 	call	0xc18c	; 0xc18c <drawlevel>
setheadline();
    c9b4:	0e 94 37 5b 	call	0xb66e	; 0xb66e <setheadline>
MapSprite2(0 ,pac0 ,0);
    c9b8:	40 e0       	ldi	r20, 0x00	; 0
    c9ba:	63 e2       	ldi	r22, 0x23	; 35
    c9bc:	77 e4       	ldi	r23, 0x47	; 71
    c9be:	80 e0       	ldi	r24, 0x00	; 0
    c9c0:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(spriteInd ,run0,0);
    c9c4:	40 e0       	ldi	r20, 0x00	; 0
    c9c6:	65 e0       	ldi	r22, 0x05	; 5
    c9c8:	77 e4       	ldi	r23, 0x47	; 71
    c9ca:	8a e0       	ldi	r24, 0x0A	; 10
    c9cc:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    c9d0:	40 e0       	ldi	r20, 0x00	; 0
    c9d2:	61 e1       	ldi	r22, 0x11	; 17
    c9d4:	77 e4       	ldi	r23, 0x47	; 71
    c9d6:	86 e0       	ldi	r24, 0x06	; 6
    c9d8:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
score = 0;
    c9dc:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <score+0x1>
    c9e0:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <score>
leveltime = 99;
    c9e4:	83 e6       	ldi	r24, 0x63	; 99
    c9e6:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <leveltime>
time = 0;
    c9ea:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    c9ee:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    c9f2:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    c9f6:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
lives = 3;    
    c9fa:	83 e0       	ldi	r24, 0x03	; 3
    c9fc:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
level = 0;
    ca00:	10 92 c4 09 	sts	0x09C4, r1	; 0x8009c4 <level>
bonus = 0;
    ca04:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    ca08:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
scrolltiles = 0;
    ca0c:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
Screen.scrollX = 0;
    ca10:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
destX = 0;
    ca14:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
Levelx = 0;
    ca18:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
setheadline();
    ca1c:	0e 94 37 5b 	call	0xb66e	; 0xb66e <setheadline>
player.direction = 'r';
    ca20:	92 e7       	ldi	r25, 0x72	; 114
    ca22:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0xe>
player.action = 'w';
    ca26:	87 e7       	ldi	r24, 0x77	; 119
    ca28:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0xd>
player.facing = 0;
    ca2c:	10 92 62 09 	sts	0x0962, r1	; 0x800962 <player+0xc>
    ca30:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <player+0xb>
player.ximpulse = 1; 
    ca34:	c0 93 68 09 	sts	0x0968, r28	; 0x800968 <player+0x12>
player2.direction = 'r';
    ca38:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <player2+0xe>
player2.action = 'w';
    ca3c:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0xd>
player2.facing = 0;
    ca40:	10 92 1c 0a 	sts	0x0A1C, r1	; 0x800a1c <player2+0xc>
    ca44:	10 92 1b 0a 	sts	0x0A1B, r1	; 0x800a1b <player2+0xb>
player2.ximpulse = 1; 
    ca48:	c0 93 22 0a 	sts	0x0A22, r28	; 0x800a22 <player2+0x12>
FadeIn(1, true);
    ca4c:	61 e0       	ldi	r22, 0x01	; 1
    ca4e:	81 e0       	ldi	r24, 0x01	; 1
    ca50:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 38 && Levelx == 10 ) )
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    ca54:	da e6       	ldi	r29, 0x6A	; 106
player2.direction = 'r';
player2.action = 'w';
player2.facing = 0;
player2.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    ca56:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    ca5a:	88 23       	and	r24, r24
    ca5c:	09 f4       	brne	.+2      	; 0xca60 <playintro+0x14a>
    ca5e:	1f c1       	rjmp	.+574    	; 0xcc9e <playintro+0x388>
{
moveplayer();  
    ca60:	0e 94 ee 5c 	call	0xb9dc	; 0xb9dc <moveplayer>
moveplayer2();
    ca64:	0e 94 96 58 	call	0xb12c	; 0xb12c <moveplayer2>
movemonster(); 
    ca68:	0e 94 92 5b 	call	0xb724	; 0xb724 <movemonster>
WaitVsync(1); 
    ca6c:	81 e0       	ldi	r24, 0x01	; 1
    ca6e:	90 e0       	ldi	r25, 0x00	; 0
    ca70:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
drawmonster();       
    ca74:	0e 94 44 5b 	call	0xb688	; 0xb688 <drawmonster>
movelevel();
    ca78:	0e 94 f7 63 	call	0xc7ee	; 0xc7ee <movelevel>
drawplayer();
    ca7c:	0e 94 b2 4f 	call	0x9f64	; 0x9f64 <drawplayer>
drawplayer2();   
    ca80:	0e 94 48 50 	call	0xa090	; 0xa090 <drawplayer2>
//drawlevel(Levelx);  
updateWater(); 
    ca84:	0e 94 83 52 	call	0xa506	; 0xa506 <updateWater>
  



player.ximpulse = 1;
    ca88:	c0 93 68 09 	sts	0x0968, r28	; 0x800968 <player+0x12>
player2.ximpulse = 1;
    ca8c:	c0 93 22 0a 	sts	0x0A22, r28	; 0x800a22 <player2+0x12>
if ( time <= 210 && introplaying ){
    ca90:	40 91 0b 0a 	lds	r20, 0x0A0B	; 0x800a0b <time>
    ca94:	50 91 0c 0a 	lds	r21, 0x0A0C	; 0x800a0c <time+0x1>
    ca98:	60 91 0d 0a 	lds	r22, 0x0A0D	; 0x800a0d <time+0x2>
    ca9c:	70 91 0e 0a 	lds	r23, 0x0A0E	; 0x800a0e <time+0x3>
    caa0:	43 3d       	cpi	r20, 0xD3	; 211
    caa2:	51 05       	cpc	r21, r1
    caa4:	61 05       	cpc	r22, r1
    caa6:	71 05       	cpc	r23, r1
    caa8:	40 f4       	brcc	.+16     	; 0xcaba <playintro+0x1a4>
    caaa:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    caae:	88 23       	and	r24, r24
    cab0:	21 f0       	breq	.+8      	; 0xcaba <playintro+0x1a4>
    player.ximpulse = 0; 
    cab2:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0x12>
    player2.ximpulse = 0;
    cab6:	10 92 22 0a 	sts	0x0A22, r1	; 0x800a22 <player2+0x12>
};
    lx = 12 + destX;
    caba:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cabe:	90 e0       	ldi	r25, 0x00	; 0
    cac0:	9c 01       	movw	r18, r24
    cac2:	24 5f       	subi	r18, 0xF4	; 244
    cac4:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    cac6:	20 32       	cpi	r18, 0x20	; 32
    cac8:	31 05       	cpc	r19, r1
    caca:	2c f4       	brge	.+10     	; 0xcad6 <playintro+0x1c0>
player2.ximpulse = 1;
if ( time <= 210 && introplaying ){
    player.ximpulse = 0; 
    player2.ximpulse = 0;
};
    lx = 12 + destX;
    cacc:	30 93 8f 0a 	sts	0x0A8F, r19	; 0x800a8f <lx+0x1>
    cad0:	20 93 8e 0a 	sts	0x0A8E, r18	; 0x800a8e <lx>
    cad4:	05 c0       	rjmp	.+10     	; 0xcae0 <playintro+0x1ca>
    if (lx >= 32 ) lx = lx - 32;
    cad6:	44 97       	sbiw	r24, 0x14	; 20
    cad8:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    cadc:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    cae0:	4c 33       	cpi	r20, 0x3C	; 60
    cae2:	51 05       	cpc	r21, r1
    cae4:	61 05       	cpc	r22, r1
    cae6:	71 05       	cpc	r23, r1
    cae8:	29 f0       	breq	.+10     	; 0xcaf4 <playintro+0x1de>
    caea:	40 3f       	cpi	r20, 0xF0	; 240
    caec:	51 05       	cpc	r21, r1
    caee:	61 05       	cpc	r22, r1
    caf0:	71 05       	cpc	r23, r1
    caf2:	59 f4       	brne	.+22     	; 0xcb0a <playintro+0x1f4>
    caf4:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    caf8:	88 23       	and	r24, r24
    cafa:	39 f0       	breq	.+14     	; 0xcb0a <playintro+0x1f4>
    cafc:	4e e0       	ldi	r20, 0x0E	; 14
    cafe:	58 e7       	ldi	r21, 0x78	; 120
    cb00:	62 e1       	ldi	r22, 0x12	; 18
    cb02:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb06:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    cb0a:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    cb0e:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    cb12:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    cb16:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    cb1a:	86 39       	cpi	r24, 0x96	; 150
    cb1c:	91 05       	cpc	r25, r1
    cb1e:	a1 05       	cpc	r26, r1
    cb20:	b1 05       	cpc	r27, r1
    cb22:	31 f0       	breq	.+12     	; 0xcb30 <playintro+0x21a>
    cb24:	8a 34       	cpi	r24, 0x4A	; 74
    cb26:	91 40       	sbci	r25, 0x01	; 1
    cb28:	a1 05       	cpc	r26, r1
    cb2a:	b1 05       	cpc	r27, r1
    cb2c:	09 f0       	breq	.+2      	; 0xcb30 <playintro+0x21a>
    cb2e:	44 c0       	rjmp	.+136    	; 0xcbb8 <playintro+0x2a2>
    cb30:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    cb34:	88 23       	and	r24, r24
    cb36:	09 f4       	brne	.+2      	; 0xcb3a <playintro+0x224>
    cb38:	3f c0       	rjmp	.+126    	; 0xcbb8 <playintro+0x2a2>
    DrawMap2(  lx,  18 ,nb );   
    cb3a:	41 e6       	ldi	r20, 0x61	; 97
    cb3c:	58 e7       	ldi	r21, 0x78	; 120
    cb3e:	62 e1       	ldi	r22, 0x12	; 18
    cb40:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb44:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    cb48:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb4c:	41 e6       	ldi	r20, 0x61	; 97
    cb4e:	58 e7       	ldi	r21, 0x78	; 120
    cb50:	62 e1       	ldi	r22, 0x12	; 18
    cb52:	8f 5f       	subi	r24, 0xFF	; 255
    cb54:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    cb58:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb5c:	41 e6       	ldi	r20, 0x61	; 97
    cb5e:	58 e7       	ldi	r21, 0x78	; 120
    cb60:	62 e1       	ldi	r22, 0x12	; 18
    cb62:	8e 5f       	subi	r24, 0xFE	; 254
    cb64:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    cb68:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb6c:	41 e6       	ldi	r20, 0x61	; 97
    cb6e:	58 e7       	ldi	r21, 0x78	; 120
    cb70:	62 e1       	ldi	r22, 0x12	; 18
    cb72:	8d 5f       	subi	r24, 0xFD	; 253
    cb74:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    cb78:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb7c:	41 e6       	ldi	r20, 0x61	; 97
    cb7e:	58 e7       	ldi	r21, 0x78	; 120
    cb80:	62 e1       	ldi	r22, 0x12	; 18
    cb82:	8c 5f       	subi	r24, 0xFC	; 252
    cb84:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    cb88:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb8c:	41 e6       	ldi	r20, 0x61	; 97
    cb8e:	58 e7       	ldi	r21, 0x78	; 120
    cb90:	62 e1       	ldi	r22, 0x12	; 18
    cb92:	8b 5f       	subi	r24, 0xFB	; 251
    cb94:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    cb98:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cb9c:	41 e6       	ldi	r20, 0x61	; 97
    cb9e:	58 e7       	ldi	r21, 0x78	; 120
    cba0:	62 e1       	ldi	r22, 0x12	; 18
    cba2:	8a 5f       	subi	r24, 0xFA	; 250
    cba4:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    cba8:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cbac:	41 e6       	ldi	r20, 0x61	; 97
    cbae:	58 e7       	ldi	r21, 0x78	; 120
    cbb0:	62 e1       	ldi	r22, 0x12	; 18
    cbb2:	89 5f       	subi	r24, 0xF9	; 249
    cbb4:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    
};


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 38 && Levelx == 10 ) )
    cbb8:	20 91 56 09 	lds	r18, 0x0956	; 0x800956 <player>
    cbbc:	30 91 57 09 	lds	r19, 0x0957	; 0x800957 <player+0x1>
    cbc0:	27 37       	cpi	r18, 0x77	; 119
    cbc2:	31 05       	cpc	r19, r1
    cbc4:	21 f5       	brne	.+72     	; 0xcc0e <playintro+0x2f8>
    cbc6:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    cbca:	80 31       	cpi	r24, 0x10	; 16
    cbcc:	29 f4       	brne	.+10     	; 0xcbd8 <playintro+0x2c2>
    cbce:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cbd2:	82 30       	cpi	r24, 0x02	; 2
    cbd4:	e1 f4       	brne	.+56     	; 0xcc0e <playintro+0x2f8>
    cbd6:	0c c0       	rjmp	.+24     	; 0xcbf0 <playintro+0x2da>
    cbd8:	89 31       	cpi	r24, 0x19	; 25
    cbda:	31 f0       	breq	.+12     	; 0xcbe8 <playintro+0x2d2>
    cbdc:	82 32       	cpi	r24, 0x22	; 34
    cbde:	21 f0       	breq	.+8      	; 0xcbe8 <playintro+0x2d2>
    cbe0:	8c 32       	cpi	r24, 0x2C	; 44
    cbe2:	11 f0       	breq	.+4      	; 0xcbe8 <playintro+0x2d2>
    cbe4:	86 32       	cpi	r24, 0x26	; 38
    cbe6:	99 f4       	brne	.+38     	; 0xcc0e <playintro+0x2f8>
    cbe8:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cbec:	8a 30       	cpi	r24, 0x0A	; 10
    cbee:	79 f4       	brne	.+30     	; 0xcc0e <playintro+0x2f8>
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    cbf0:	d0 93 63 09 	sts	0x0963, r29	; 0x800963 <player+0xd>
player.yimpulse = 0;
    cbf4:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x13>
player.jumping = true;
    cbf8:	c0 93 6a 09 	sts	0x096A, r28	; 0x80096a <player+0x14>
player.touchground = false;
    cbfc:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0x11>
player.jumpreleased = false;
    cc00:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x15>
player.jumpcounter++ ; 
    cc04:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0x1a>
    cc08:	8f 5f       	subi	r24, 0xFF	; 255
    cc0a:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0x1a>
};
if  (( player2.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player2.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player2.x == 149 && scrolltiles == 42 && Levelx == 10 ))
    cc0e:	80 91 10 0a 	lds	r24, 0x0A10	; 0x800a10 <player2>
    cc12:	90 91 11 0a 	lds	r25, 0x0A11	; 0x800a11 <player2+0x1>
    cc16:	85 39       	cpi	r24, 0x95	; 149
    cc18:	91 05       	cpc	r25, r1
    cc1a:	d9 f4       	brne	.+54     	; 0xcc52 <playintro+0x33c>
    cc1c:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    cc20:	87 31       	cpi	r24, 0x17	; 23
    cc22:	21 f0       	breq	.+8      	; 0xcc2c <playintro+0x316>
    cc24:	80 32       	cpi	r24, 0x20	; 32
    cc26:	11 f0       	breq	.+4      	; 0xcc2c <playintro+0x316>
    cc28:	8a 32       	cpi	r24, 0x2A	; 42
    cc2a:	99 f4       	brne	.+38     	; 0xcc52 <playintro+0x33c>
    cc2c:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cc30:	8a 30       	cpi	r24, 0x0A	; 10
    cc32:	79 f4       	brne	.+30     	; 0xcc52 <playintro+0x33c>
{
player2.action = 'j';
    cc34:	d0 93 1d 0a 	sts	0x0A1D, r29	; 0x800a1d <player2+0xd>
player2.yimpulse = 0;
    cc38:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x13>
player2.jumping = true;
    cc3c:	c0 93 24 0a 	sts	0x0A24, r28	; 0x800a24 <player2+0x14>
player2.touchground = false;
    cc40:	10 92 21 0a 	sts	0x0A21, r1	; 0x800a21 <player2+0x11>
player2.jumpreleased = false;
    cc44:	10 92 25 0a 	sts	0x0A25, r1	; 0x800a25 <player2+0x15>
player2.jumpcounter++ ; 
    cc48:	80 91 2a 0a 	lds	r24, 0x0A2A	; 0x800a2a <player2+0x1a>
    cc4c:	8f 5f       	subi	r24, 0xFF	; 255
    cc4e:	80 93 2a 0a 	sts	0x0A2A, r24	; 0x800a2a <player2+0x1a>
}  
if ( player.x  == 160 ) time = 0;   
    cc52:	20 3a       	cpi	r18, 0xA0	; 160
    cc54:	31 05       	cpc	r19, r1
    cc56:	49 f4       	brne	.+18     	; 0xcc6a <playintro+0x354>
    cc58:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    cc5c:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    cc60:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    cc64:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
    cc68:	f6 ce       	rjmp	.-532    	; 0xca56 <playintro+0x140>
if ( player.x >= 206 ) {
    cc6a:	2e 3c       	cpi	r18, 0xCE	; 206
    cc6c:	31 05       	cpc	r19, r1
    cc6e:	2c f0       	brlt	.+10     	; 0xcc7a <playintro+0x364>
player.ximpulse = 0; 
    cc70:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0x12>
player2.ximpulse = 0;
    cc74:	10 92 22 0a 	sts	0x0A22, r1	; 0x800a22 <player2+0x12>
    cc78:	04 c0       	rjmp	.+8      	; 0xcc82 <playintro+0x36c>
};
if ( player.x >= 180 && time > 420 ) { 
    cc7a:	24 3b       	cpi	r18, 0xB4	; 180
    cc7c:	31 05       	cpc	r19, r1
    cc7e:	0c f4       	brge	.+2      	; 0xcc82 <playintro+0x36c>
    cc80:	ea ce       	rjmp	.-556    	; 0xca56 <playintro+0x140>
    cc82:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    cc86:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    cc8a:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    cc8e:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    cc92:	85 3a       	cpi	r24, 0xA5	; 165
    cc94:	91 40       	sbci	r25, 0x01	; 1
    cc96:	a1 05       	cpc	r26, r1
    cc98:	b1 05       	cpc	r27, r1
    cc9a:	08 f4       	brcc	.+2      	; 0xcc9e <playintro+0x388>
    cc9c:	dc ce       	rjmp	.-584    	; 0xca56 <playintro+0x140>
                                 
                                      break; };
};

FadeOut(5,true); 
    cc9e:	61 e0       	ldi	r22, 0x01	; 1
    cca0:	85 e0       	ldi	r24, 0x05	; 5
    cca2:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
player.x = 8;
    cca6:	88 e0       	ldi	r24, 0x08	; 8
    cca8:	90 e0       	ldi	r25, 0x00	; 0
    ccaa:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <player+0x1>
    ccae:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <player>
player.y = 191;
    ccb2:	cf eb       	ldi	r28, 0xBF	; 191
    ccb4:	d0 e0       	ldi	r29, 0x00	; 0
    ccb6:	d0 93 59 09 	sts	0x0959, r29	; 0x800959 <player+0x3>
    ccba:	c0 93 58 09 	sts	0x0958, r28	; 0x800958 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    ccbe:	02 e0       	ldi	r16, 0x02	; 2
    ccc0:	22 e0       	ldi	r18, 0x02	; 2
    ccc2:	4a ea       	ldi	r20, 0xAA	; 170
    ccc4:	61 e0       	ldi	r22, 0x01	; 1
    ccc6:	80 e0       	ldi	r24, 0x00	; 0
    ccc8:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

player2.x = 38;
    cccc:	86 e2       	ldi	r24, 0x26	; 38
    ccce:	90 e0       	ldi	r25, 0x00	; 0
    ccd0:	90 93 11 0a 	sts	0x0A11, r25	; 0x800a11 <player2+0x1>
    ccd4:	80 93 10 0a 	sts	0x0A10, r24	; 0x800a10 <player2>
player2.y = 191;
    ccd8:	d0 93 13 0a 	sts	0x0A13, r29	; 0x800a13 <player2+0x3>
    ccdc:	c0 93 12 0a 	sts	0x0A12, r28	; 0x800a12 <player2+0x2>
MoveSprite(spriteInd ,player2.x -7 ,player2.y - 21  ,2 ,2);
    cce0:	22 e0       	ldi	r18, 0x02	; 2
    cce2:	4a ea       	ldi	r20, 0xAA	; 170
    cce4:	6f e1       	ldi	r22, 0x1F	; 31
    cce6:	8a e0       	ldi	r24, 0x0A	; 10
    cce8:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

}
    ccec:	df 91       	pop	r29
    ccee:	cf 91       	pop	r28
    ccf0:	0f 91       	pop	r16
    ccf2:	08 95       	ret

0000ccf4 <showgetready>:

void showgetready()
{
    ccf4:	0f 93       	push	r16
FadeOut(0, true);
    ccf6:	61 e0       	ldi	r22, 0x01	; 1
    ccf8:	80 e0       	ldi	r24, 0x00	; 0
    ccfa:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    ccfe:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cd02:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
printheadline();
    cd06:	0e 94 89 53 	call	0xa712	; 0xa712 <printheadline>
printtileint( 26 ,0,99,2); 
    cd0a:	22 e0       	ldi	r18, 0x02	; 2
    cd0c:	30 e0       	ldi	r19, 0x00	; 0
    cd0e:	43 e6       	ldi	r20, 0x63	; 99
    cd10:	50 e0       	ldi	r21, 0x00	; 0
    cd12:	60 e0       	ldi	r22, 0x00	; 0
    cd14:	70 e0       	ldi	r23, 0x00	; 0
    cd16:	8a e1       	ldi	r24, 0x1A	; 26
    cd18:	90 e0       	ldi	r25, 0x00	; 0
    cd1a:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cd1e:	02 e0       	ldi	r16, 0x02	; 2
    cd20:	22 e0       	ldi	r18, 0x02	; 2
    cd22:	4c ee       	ldi	r20, 0xEC	; 236
    cd24:	6c ee       	ldi	r22, 0xEC	; 236
    cd26:	80 e0       	ldi	r24, 0x00	; 0
    cd28:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20 ,2 ,2);
    cd2c:	22 e0       	ldi	r18, 0x02	; 2
    cd2e:	4c ee       	ldi	r20, 0xEC	; 236
    cd30:	6e ec       	ldi	r22, 0xCE	; 206
    cd32:	8a e0       	ldi	r24, 0x0A	; 10
    cd34:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cd38:	22 e0       	ldi	r18, 0x02	; 2
    cd3a:	4c ee       	ldi	r20, 0xEC	; 236
    cd3c:	6c ee       	ldi	r22, 0xEC	; 236
    cd3e:	86 e0       	ldi	r24, 0x06	; 6
    cd40:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    cd44:	42 e2       	ldi	r20, 0x22	; 34
    cd46:	58 e7       	ldi	r21, 0x78	; 120
    cd48:	6a e0       	ldi	r22, 0x0A	; 10
    cd4a:	8b e0       	ldi	r24, 0x0B	; 11
    cd4c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    cd50:	81 e0       	ldi	r24, 0x01	; 1
    cd52:	90 e0       	ldi	r25, 0x00	; 0
    cd54:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    cd58:	61 e0       	ldi	r22, 0x01	; 1
    cd5a:	80 e0       	ldi	r24, 0x00	; 0
    cd5c:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    cd60:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    cd64:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    cd68:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    cd6c:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
while ( time < 240 )
    cd70:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    cd74:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    cd78:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    cd7c:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    cd80:	80 3f       	cpi	r24, 0xF0	; 240
    cd82:	91 05       	cpc	r25, r1
    cd84:	a1 05       	cpc	r26, r1
    cd86:	b1 05       	cpc	r27, r1
    cd88:	80 f4       	brcc	.+32     	; 0xcdaa <showgetready+0xb6>
{ time++;    
    cd8a:	01 96       	adiw	r24, 0x01	; 1
    cd8c:	a1 1d       	adc	r26, r1
    cd8e:	b1 1d       	adc	r27, r1
    cd90:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <time>
    cd94:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <time+0x1>
    cd98:	a0 93 0d 0a 	sts	0x0A0D, r26	; 0x800a0d <time+0x2>
    cd9c:	b0 93 0e 0a 	sts	0x0A0E, r27	; 0x800a0e <time+0x3>
WaitVsync(1);    
    cda0:	81 e0       	ldi	r24, 0x01	; 1
    cda2:	90 e0       	ldi	r25, 0x00	; 0
    cda4:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    cda8:	e3 cf       	rjmp	.-58     	; 0xcd70 <showgetready+0x7c>
};
 FadeOut(0, true);    
    cdaa:	61 e0       	ldi	r22, 0x01	; 1
    cdac:	80 e0       	ldi	r24, 0x00	; 0
};
    cdae:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    cdb0:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000cdb4 <showgameover>:
};

void showgameover()
{
    cdb4:	0f 93       	push	r16
    
FadeOut(0, true);
    cdb6:	61 e0       	ldi	r22, 0x01	; 1
    cdb8:	80 e0       	ldi	r24, 0x00	; 0
    cdba:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    cdbe:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cdc2:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cdc6:	02 e0       	ldi	r16, 0x02	; 2
    cdc8:	22 e0       	ldi	r18, 0x02	; 2
    cdca:	4c ee       	ldi	r20, 0xEC	; 236
    cdcc:	6c ee       	ldi	r22, 0xEC	; 236
    cdce:	80 e0       	ldi	r24, 0x00	; 0
    cdd0:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cdd4:	22 e0       	ldi	r18, 0x02	; 2
    cdd6:	4c ee       	ldi	r20, 0xEC	; 236
    cdd8:	6c ee       	ldi	r22, 0xEC	; 236
    cdda:	86 e0       	ldi	r24, 0x06	; 6
    cddc:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    cde0:	22 e0       	ldi	r18, 0x02	; 2
    cde2:	4c ee       	ldi	r20, 0xEC	; 236
    cde4:	6e ec       	ldi	r22, 0xCE	; 206
    cde6:	8a e0       	ldi	r24, 0x0A	; 10
    cde8:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    cdec:	45 e0       	ldi	r20, 0x05	; 5
    cdee:	58 e7       	ldi	r21, 0x78	; 120
    cdf0:	6a e0       	ldi	r22, 0x0A	; 10
    cdf2:	8b e0       	ldi	r24, 0x0B	; 11
    cdf4:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    cdf8:	81 e0       	ldi	r24, 0x01	; 1
    cdfa:	90 e0       	ldi	r25, 0x00	; 0
    cdfc:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    ce00:	61 e0       	ldi	r22, 0x01	; 1
    ce02:	80 e0       	ldi	r24, 0x00	; 0
    ce04:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    ce08:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    ce0c:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    ce10:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    ce14:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
while ( time < 240 )
    ce18:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    ce1c:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    ce20:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    ce24:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    ce28:	80 3f       	cpi	r24, 0xF0	; 240
    ce2a:	91 05       	cpc	r25, r1
    ce2c:	a1 05       	cpc	r26, r1
    ce2e:	b1 05       	cpc	r27, r1
    ce30:	80 f4       	brcc	.+32     	; 0xce52 <showgameover+0x9e>
{ time++;    
    ce32:	01 96       	adiw	r24, 0x01	; 1
    ce34:	a1 1d       	adc	r26, r1
    ce36:	b1 1d       	adc	r27, r1
    ce38:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <time>
    ce3c:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <time+0x1>
    ce40:	a0 93 0d 0a 	sts	0x0A0D, r26	; 0x800a0d <time+0x2>
    ce44:	b0 93 0e 0a 	sts	0x0A0E, r27	; 0x800a0e <time+0x3>
WaitVsync(1);    
    ce48:	81 e0       	ldi	r24, 0x01	; 1
    ce4a:	90 e0       	ldi	r25, 0x00	; 0
    ce4c:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    ce50:	e3 cf       	rjmp	.-58     	; 0xce18 <showgameover+0x64>
};
 FadeOut(0, true);    
    ce52:	61 e0       	ldi	r22, 0x01	; 1
    ce54:	80 e0       	ldi	r24, 0x00	; 0
};
    ce56:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    ce58:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000ce5c <showtimesup>:
};
void showtimesup()
{
    ce5c:	0f 93       	push	r16
FadeOut(0, true);
    ce5e:	61 e0       	ldi	r22, 0x01	; 1
    ce60:	80 e0       	ldi	r24, 0x00	; 0
    ce62:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    ce66:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    ce6a:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    ce6e:	02 e0       	ldi	r16, 0x02	; 2
    ce70:	22 e0       	ldi	r18, 0x02	; 2
    ce72:	4c ee       	ldi	r20, 0xEC	; 236
    ce74:	6c ee       	ldi	r22, 0xEC	; 236
    ce76:	80 e0       	ldi	r24, 0x00	; 0
    ce78:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    ce7c:	22 e0       	ldi	r18, 0x02	; 2
    ce7e:	4c ee       	ldi	r20, 0xEC	; 236
    ce80:	6c ee       	ldi	r22, 0xEC	; 236
    ce82:	86 e0       	ldi	r24, 0x06	; 6
    ce84:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    ce88:	22 e0       	ldi	r18, 0x02	; 2
    ce8a:	4c ee       	ldi	r20, 0xEC	; 236
    ce8c:	6e ec       	ldi	r22, 0xCE	; 206
    ce8e:	8a e0       	ldi	r24, 0x0A	; 10
    ce90:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    ce94:	4d ef       	ldi	r20, 0xFD	; 253
    ce96:	57 e7       	ldi	r21, 0x77	; 119
    ce98:	6a e0       	ldi	r22, 0x0A	; 10
    ce9a:	8b e0       	ldi	r24, 0x0B	; 11
    ce9c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    cea0:	81 e0       	ldi	r24, 0x01	; 1
    cea2:	90 e0       	ldi	r25, 0x00	; 0
    cea4:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    cea8:	61 e0       	ldi	r22, 0x01	; 1
    ceaa:	80 e0       	ldi	r24, 0x00	; 0
    ceac:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    ceb0:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    ceb4:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    ceb8:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    cebc:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
while ( time < 240 )
    cec0:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    cec4:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    cec8:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    cecc:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    ced0:	80 3f       	cpi	r24, 0xF0	; 240
    ced2:	91 05       	cpc	r25, r1
    ced4:	a1 05       	cpc	r26, r1
    ced6:	b1 05       	cpc	r27, r1
    ced8:	80 f4       	brcc	.+32     	; 0xcefa <showtimesup+0x9e>
{ time++;    
    ceda:	01 96       	adiw	r24, 0x01	; 1
    cedc:	a1 1d       	adc	r26, r1
    cede:	b1 1d       	adc	r27, r1
    cee0:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <time>
    cee4:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <time+0x1>
    cee8:	a0 93 0d 0a 	sts	0x0A0D, r26	; 0x800a0d <time+0x2>
    ceec:	b0 93 0e 0a 	sts	0x0A0E, r27	; 0x800a0e <time+0x3>
WaitVsync(1);    
    cef0:	81 e0       	ldi	r24, 0x01	; 1
    cef2:	90 e0       	ldi	r25, 0x00	; 0
    cef4:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    cef8:	e3 cf       	rjmp	.-58     	; 0xcec0 <showtimesup+0x64>
};
 FadeOut(0, true);    
    cefa:	61 e0       	ldi	r22, 0x01	; 1
    cefc:	80 e0       	ldi	r24, 0x00	; 0
};
    cefe:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    cf00:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000cf04 <showcongratulation>:
};
void showcongratulation()
{
    cf04:	0f 93       	push	r16
FadeOut(0, true);
    cf06:	61 e0       	ldi	r22, 0x01	; 1
    cf08:	80 e0       	ldi	r24, 0x00	; 0
    cf0a:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    cf0e:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cf12:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cf16:	02 e0       	ldi	r16, 0x02	; 2
    cf18:	22 e0       	ldi	r18, 0x02	; 2
    cf1a:	4c ee       	ldi	r20, 0xEC	; 236
    cf1c:	6c ee       	ldi	r22, 0xEC	; 236
    cf1e:	80 e0       	ldi	r24, 0x00	; 0
    cf20:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cf24:	22 e0       	ldi	r18, 0x02	; 2
    cf26:	4c ee       	ldi	r20, 0xEC	; 236
    cf28:	6c ee       	ldi	r22, 0xEC	; 236
    cf2a:	86 e0       	ldi	r24, 0x06	; 6
    cf2c:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    cf30:	22 e0       	ldi	r18, 0x02	; 2
    cf32:	4c ee       	ldi	r20, 0xEC	; 236
    cf34:	6e ec       	ldi	r22, 0xCE	; 206
    cf36:	8a e0       	ldi	r24, 0x0A	; 10
    cf38:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    cf3c:	41 ef       	ldi	r20, 0xF1	; 241
    cf3e:	57 e7       	ldi	r21, 0x77	; 119
    cf40:	6a e0       	ldi	r22, 0x0A	; 10
    cf42:	89 e0       	ldi	r24, 0x09	; 9
    cf44:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
FadeIn(0, true);
    cf48:	61 e0       	ldi	r22, 0x01	; 1
    cf4a:	80 e0       	ldi	r24, 0x00	; 0
    cf4c:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    cf50:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    cf54:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    cf58:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    cf5c:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
while ( time < 480 )
    cf60:	80 91 0b 0a 	lds	r24, 0x0A0B	; 0x800a0b <time>
    cf64:	90 91 0c 0a 	lds	r25, 0x0A0C	; 0x800a0c <time+0x1>
    cf68:	a0 91 0d 0a 	lds	r26, 0x0A0D	; 0x800a0d <time+0x2>
    cf6c:	b0 91 0e 0a 	lds	r27, 0x0A0E	; 0x800a0e <time+0x3>
    cf70:	80 3e       	cpi	r24, 0xE0	; 224
    cf72:	21 e0       	ldi	r18, 0x01	; 1
    cf74:	92 07       	cpc	r25, r18
    cf76:	a1 05       	cpc	r26, r1
    cf78:	b1 05       	cpc	r27, r1
    cf7a:	80 f4       	brcc	.+32     	; 0xcf9c <showcongratulation+0x98>
{ time++;    
    cf7c:	01 96       	adiw	r24, 0x01	; 1
    cf7e:	a1 1d       	adc	r26, r1
    cf80:	b1 1d       	adc	r27, r1
    cf82:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <time>
    cf86:	90 93 0c 0a 	sts	0x0A0C, r25	; 0x800a0c <time+0x1>
    cf8a:	a0 93 0d 0a 	sts	0x0A0D, r26	; 0x800a0d <time+0x2>
    cf8e:	b0 93 0e 0a 	sts	0x0A0E, r27	; 0x800a0e <time+0x3>
WaitVsync(1);    
    cf92:	81 e0       	ldi	r24, 0x01	; 1
    cf94:	90 e0       	ldi	r25, 0x00	; 0
    cf96:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    cf9a:	e2 cf       	rjmp	.-60     	; 0xcf60 <showcongratulation+0x5c>
};
 FadeOut(0, true);    
    cf9c:	61 e0       	ldi	r22, 0x01	; 1
    cf9e:	80 e0       	ldi	r24, 0x00	; 0
};
    cfa0:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    cfa2:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000cfa6 <main>:
};
int main(){ 
ClearVram();    
    cfa6:	0e 94 0b 42 	call	0x8416	; 0x8416 <ClearVram>
FadeOut(0, true);
    cfaa:	61 e0       	ldi	r22, 0x01	; 1
    cfac:	80 e0       	ldi	r24, 0x00	; 0
    cfae:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
SetTileTable(uMTiles);
    cfb2:	89 e2       	ldi	r24, 0x29	; 41
    cfb4:	97 e4       	ldi	r25, 0x47	; 71
    cfb6:	0e 94 26 42 	call	0x844c	; 0x844c <SetTileTable>
SetSpritesTileTable(uMSprites);
    cfba:	83 e3       	ldi	r24, 0x33	; 51
    cfbc:	90 e4       	ldi	r25, 0x40	; 64
    cfbe:	0e 94 06 42 	call	0x840c	; 0x840c <SetSpritesTileTable>
InitMusicPlayer(patches);
    cfc2:	84 ec       	ldi	r24, 0xC4	; 196
    cfc4:	9e e3       	ldi	r25, 0x3E	; 62
    cfc6:	0e 94 90 43 	call	0x8720	; 0x8720 <InitMusicPlayer>
Screen.scrollY=0;  
    cfca:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    cfce:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    cfd2:	8e e9       	ldi	r24, 0x9E	; 158
    cfd4:	9f e4       	ldi	r25, 0x4F	; 79
    cfd6:	0e 94 60 42 	call	0x84c0	; 0x84c0 <SetUserPostVsyncCallback>
waterspwncnt = 0;
banspwncnt = 0;
introplaying = true; 
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    cfda:	28 e0       	ldi	r18, 0x08	; 8
    cfdc:	e2 2e       	mov	r14, r18
    cfde:	f1 2c       	mov	r15, r1
player.y = 191;
    cfe0:	cf eb       	ldi	r28, 0xBF	; 191
    cfe2:	d0 e0       	ldi	r29, 0x00	; 0
player2.x = 38;
    cfe4:	36 e2       	ldi	r19, 0x26	; 38
    cfe6:	c3 2e       	mov	r12, r19
    cfe8:	d1 2c       	mov	r13, r1
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
player2.y = 191;
    cfea:	4f eb       	ldi	r20, 0xBF	; 191
    cfec:	a4 2e       	mov	r10, r20
    cfee:	b1 2c       	mov	r11, r1
Levelx = 0;
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
    cff0:	56 e2       	ldi	r21, 0x26	; 38
    cff2:	25 2e       	mov	r2, r21
    cff4:	31 2c       	mov	r3, r1

updatetime(time);
    if ( player.y > 240) 
    {
    lives++;
    player.x = 30;
    cff6:	6e e1       	ldi	r22, 0x1E	; 30
    cff8:	46 2e       	mov	r4, r22
    cffa:	51 2c       	mov	r5, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
waterspwncnt = 0;
    cffc:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d000:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d004:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d008:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
introplaying = true; 
    d00c:	81 e0       	ldi	r24, 0x01	; 1
    d00e:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <introplaying>
Levelx = 0;
    d012:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    d016:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player.x = 8;
    d01a:	f0 92 57 09 	sts	0x0957, r15	; 0x800957 <player+0x1>
    d01e:	e0 92 56 09 	sts	0x0956, r14	; 0x800956 <player>
player.y = 191;
    d022:	d0 93 59 09 	sts	0x0959, r29	; 0x800959 <player+0x3>
    d026:	c0 93 58 09 	sts	0x0958, r28	; 0x800958 <player+0x2>
player2.x = 38;
    d02a:	d0 92 11 0a 	sts	0x0A11, r13	; 0x800a11 <player2+0x1>
    d02e:	c0 92 10 0a 	sts	0x0A10, r12	; 0x800a10 <player2>
player2.y = 191;
    d032:	d0 93 13 0a 	sts	0x0A13, r29	; 0x800a13 <player2+0x3>
    d036:	c0 93 12 0a 	sts	0x0A12, r28	; 0x800a12 <player2+0x2>
destX = 0;
    d03a:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
level = 0;
    d03e:	10 92 c4 09 	sts	0x09C4, r1	; 0x8009c4 <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d042:	02 e0       	ldi	r16, 0x02	; 2
    d044:	22 e0       	ldi	r18, 0x02	; 2
    d046:	4c ee       	ldi	r20, 0xEC	; 236
    d048:	6c ee       	ldi	r22, 0xEC	; 236
    d04a:	86 e0       	ldi	r24, 0x06	; 6
    d04c:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2);  
    d050:	22 e0       	ldi	r18, 0x02	; 2
    d052:	4c ee       	ldi	r20, 0xEC	; 236
    d054:	6c ee       	ldi	r22, 0xEC	; 236
    d056:	80 e0       	ldi	r24, 0x00	; 0
    d058:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);
    d05c:	22 e0       	ldi	r18, 0x02	; 2
    d05e:	4c ee       	ldi	r20, 0xEC	; 236
    d060:	6e ec       	ldi	r22, 0xCE	; 206
    d062:	8a e0       	ldi	r24, 0x0A	; 10
    d064:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
while(introplaying) playintro();
    d068:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <introplaying>
    d06c:	88 23       	and	r24, r24
    d06e:	19 f0       	breq	.+6      	; 0xd076 <main+0xd0>
    d070:	0e 94 8b 64 	call	0xc916	; 0xc916 <playintro>
    d074:	f9 cf       	rjmp	.-14     	; 0xd068 <main+0xc2>
    
score = 0;
    d076:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <score+0x1>
    d07a:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <score>
lives = 3; 
    d07e:	83 e0       	ldi	r24, 0x03	; 3
    d080:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
level = startlevel;
    d084:	81 e0       	ldi	r24, 0x01	; 1
    d086:	80 93 c4 09 	sts	0x09C4, r24	; 0x8009c4 <level>
isplaying = true;
    d08a:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <isplaying>
exitgame = false;
    d08e:	10 92 0a 0a 	sts	0x0A0A, r1	; 0x800a0a <exitgame>
Levelx = 0;
    d092:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    d096:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player.x = 8;
    d09a:	f0 92 57 09 	sts	0x0957, r15	; 0x800957 <player+0x1>
    d09e:	e0 92 56 09 	sts	0x0956, r14	; 0x800956 <player>
player.y = 191;
    d0a2:	d0 93 59 09 	sts	0x0959, r29	; 0x800959 <player+0x3>
    d0a6:	c0 93 58 09 	sts	0x0958, r28	; 0x800958 <player+0x2>
player2.x = 38;
    d0aa:	d0 92 11 0a 	sts	0x0A11, r13	; 0x800a11 <player2+0x1>
    d0ae:	c0 92 10 0a 	sts	0x0A10, r12	; 0x800a10 <player2>
player2.y = 191;
    d0b2:	d0 93 13 0a 	sts	0x0A13, r29	; 0x800a13 <player2+0x3>
    d0b6:	c0 93 12 0a 	sts	0x0A12, r28	; 0x800a12 <player2+0x2>
waterspwncnt = 0;
    d0ba:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d0be:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d0c2:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d0c6:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
destX = 0;
    d0ca:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
score = 0;
StartSong(midisong);
    d0ce:	8b e6       	ldi	r24, 0x6B	; 107
    d0d0:	9a e3       	ldi	r25, 0x3A	; 58
    d0d2:	0e 94 ab 43 	call	0x8756	; 0x8756 <StartSong>
timeisup = false;    
Levelx = 0;
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
    d0d6:	88 24       	eor	r8, r8
    d0d8:	83 94       	inc	r8
    d0da:	91 2c       	mov	r9, r1
waterspwncnt = 0;
banspwncnt = 0;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    d0dc:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    d0e0:	88 23       	and	r24, r24
    d0e2:	09 f4       	brne	.+2      	; 0xd0e6 <main+0x140>
    d0e4:	58 c1       	rjmp	.+688    	; 0xd396 <main+0x3f0>
{
isplaying = true;
    d0e6:	81 e0       	ldi	r24, 0x01	; 1
    d0e8:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <isplaying>
while (isplaying)
{

showgetready();
isplaying = true;
    d0ec:	11 e0       	ldi	r17, 0x01	; 1
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
player2.y = 191;
player.speed = 1;
player.x = 8;
    d0ee:	88 e0       	ldi	r24, 0x08	; 8
    d0f0:	68 2e       	mov	r6, r24
    d0f2:	71 2c       	mov	r7, r1
score = 0;
StartSong(midisong);
while (lives > 0 )
{
isplaying = true;
while (isplaying)
    d0f4:	80 91 88 0a 	lds	r24, 0x0A88	; 0x800a88 <isplaying>
    d0f8:	88 23       	and	r24, r24
    d0fa:	81 f3       	breq	.-32     	; 0xd0dc <main+0x136>
{

showgetready();
    d0fc:	0e 94 7a 66 	call	0xccf4	; 0xccf4 <showgetready>
isplaying = true;
    d100:	10 93 88 0a 	sts	0x0A88, r17	; 0x800a88 <isplaying>
finished = false;
    d104:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
died = false;
    d108:	10 92 8d 0a 	sts	0x0A8D, r1	; 0x800a8d <died>
timeisup = false;    
    d10c:	10 92 55 09 	sts	0x0955, r1	; 0x800955 <timeisup>
Levelx = 0;
    d110:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
waterspwncnt = 0;
    d114:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d118:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d11c:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d120:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
scrolltiles = 0;
    d124:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player2.speed = 1;
    d128:	90 92 15 0a 	sts	0x0A15, r9	; 0x800a15 <player2+0x5>
    d12c:	80 92 14 0a 	sts	0x0A14, r8	; 0x800a14 <player2+0x4>
player2.x = 38;
    d130:	30 92 11 0a 	sts	0x0A11, r3	; 0x800a11 <player2+0x1>
    d134:	20 92 10 0a 	sts	0x0A10, r2	; 0x800a10 <player2>
player2.y = 191;
    d138:	b0 92 13 0a 	sts	0x0A13, r11	; 0x800a13 <player2+0x3>
    d13c:	a0 92 12 0a 	sts	0x0A12, r10	; 0x800a12 <player2+0x2>
player.speed = 1;
    d140:	90 92 5b 09 	sts	0x095B, r9	; 0x80095b <player+0x5>
    d144:	80 92 5a 09 	sts	0x095A, r8	; 0x80095a <player+0x4>
player.x = 8;
    d148:	70 92 57 09 	sts	0x0957, r7	; 0x800957 <player+0x1>
    d14c:	60 92 56 09 	sts	0x0956, r6	; 0x800956 <player>
player.y = 191;
    d150:	b0 92 59 09 	sts	0x0959, r11	; 0x800959 <player+0x3>
    d154:	a0 92 58 09 	sts	0x0958, r10	; 0x800958 <player+0x2>
destX = 0;
    d158:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
player2.touchground = true;
    d15c:	10 93 21 0a 	sts	0x0A21, r17	; 0x800a21 <player2+0x11>
player2.jumping = false;
    d160:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x14>
player2.jumpreleased = true;
    d164:	10 93 25 0a 	sts	0x0A25, r17	; 0x800a25 <player2+0x15>
player.touchground = true;
    d168:	10 93 67 09 	sts	0x0967, r17	; 0x800967 <player+0x11>
player.jumping = false;
    d16c:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x14>
player.jumpreleased = true;
    d170:	10 93 6b 09 	sts	0x096B, r17	; 0x80096b <player+0x15>
player.killer = false;
    d174:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0x19>
player.bananaCount = 0;
    d178:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x1c>
player2.bananaCount = 0;
    d17c:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <player2+0x1c>
initlevel();
    d180:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
initmonster();
    d184:	0e 94 f2 63 	call	0xc7e4	; 0xc7e4 <initmonster>
MapSprite2(0 ,pac0 ,0);
    d188:	40 e0       	ldi	r20, 0x00	; 0
    d18a:	63 e2       	ldi	r22, 0x23	; 35
    d18c:	77 e4       	ldi	r23, 0x47	; 71
    d18e:	80 e0       	ldi	r24, 0x00	; 0
    d190:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(spriteInd ,run0 ,0);
    d194:	40 e0       	ldi	r20, 0x00	; 0
    d196:	65 e0       	ldi	r22, 0x05	; 5
    d198:	77 e4       	ldi	r23, 0x47	; 71
    d19a:	8a e0       	ldi	r24, 0x0A	; 10
    d19c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    d1a0:	40 e0       	ldi	r20, 0x00	; 0
    d1a2:	61 e1       	ldi	r22, 0x11	; 17
    d1a4:	77 e4       	ldi	r23, 0x47	; 71
    d1a6:	86 e0       	ldi	r24, 0x06	; 6
    d1a8:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d1ac:	02 e0       	ldi	r16, 0x02	; 2
    d1ae:	22 e0       	ldi	r18, 0x02	; 2
    d1b0:	4c ee       	ldi	r20, 0xEC	; 236
    d1b2:	6c ee       	ldi	r22, 0xEC	; 236
    d1b4:	86 e0       	ldi	r24, 0x06	; 6
    d1b6:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2); 
    d1ba:	22 e0       	ldi	r18, 0x02	; 2
    d1bc:	4c ee       	ldi	r20, 0xEC	; 236
    d1be:	6c ee       	ldi	r22, 0xEC	; 236
    d1c0:	80 e0       	ldi	r24, 0x00	; 0
    d1c2:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);    
    d1c6:	22 e0       	ldi	r18, 0x02	; 2
    d1c8:	4c ee       	ldi	r20, 0xEC	; 236
    d1ca:	6e ec       	ldi	r22, 0xCE	; 206
    d1cc:	8a e0       	ldi	r24, 0x0A	; 10
    d1ce:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
leveltime = 99;
    d1d2:	83 e6       	ldi	r24, 0x63	; 99
    d1d4:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <leveltime>
time = 0;
    d1d8:	10 92 0b 0a 	sts	0x0A0B, r1	; 0x800a0b <time>
    d1dc:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <time+0x1>
    d1e0:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <time+0x2>
    d1e4:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <time+0x3>
bonus = 0;
    d1e8:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d1ec:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
scrolltiles = 0;
    d1f0:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
Screen.scrollX = 0;
    d1f4:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
setheadline();    
    d1f8:	0e 94 37 5b 	call	0xb66e	; 0xb66e <setheadline>
drawlevel(Levelx);
    d1fc:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    d200:	90 e0       	ldi	r25, 0x00	; 0
    d202:	0e 94 c6 60 	call	0xc18c	; 0xc18c <drawlevel>
printheadline();   
    d206:	0e 94 89 53 	call	0xa712	; 0xa712 <printheadline>
FadeIn(1, true);   
    d20a:	61 e0       	ldi	r22, 0x01	; 1
    d20c:	81 e0       	ldi	r24, 0x01	; 1
    d20e:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>

play = true;
    d212:	10 93 c5 09 	sts	0x09C5, r17	; 0x8009c5 <play>
    player.y = 0;

    };
    if ( player2.y > 240) 
    {
    died = true;
    d216:	01 e0       	ldi	r16, 0x01	; 1
printheadline();   
FadeIn(1, true);   

play = true;

while(play)
    d218:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <play>
    d21c:	88 23       	and	r24, r24
    d21e:	09 f4       	brne	.+2      	; 0xd222 <main+0x27c>
    d220:	a4 c0       	rjmp	.+328    	; 0xd36a <main+0x3c4>
{
    
moveplayer(); 
    d222:	0e 94 ee 5c 	call	0xb9dc	; 0xb9dc <moveplayer>
moveplayer2();
    d226:	0e 94 96 58 	call	0xb12c	; 0xb12c <moveplayer2>
movemonster();
    d22a:	0e 94 92 5b 	call	0xb724	; 0xb724 <movemonster>
WaitVsync(1); 
    d22e:	81 e0       	ldi	r24, 0x01	; 1
    d230:	90 e0       	ldi	r25, 0x00	; 0
    d232:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
drawmonster();   
    d236:	0e 94 44 5b 	call	0xb688	; 0xb688 <drawmonster>
movelevel();
    d23a:	0e 94 f7 63 	call	0xc7ee	; 0xc7ee <movelevel>
drawplayer(); 
    d23e:	0e 94 b2 4f 	call	0x9f64	; 0x9f64 <drawplayer>
drawplayer2(); 
    d242:	0e 94 48 50 	call	0xa090	; 0xa090 <drawplayer2>
//drawlevel(Levelx);
updateWater();
    d246:	0e 94 83 52 	call	0xa506	; 0xa506 <updateWater>
printheadline();
    d24a:	0e 94 89 53 	call	0xa712	; 0xa712 <printheadline>
//drawplayer();  

//movemonster();
//drawmonster();

updatetime(time);
    d24e:	60 91 0b 0a 	lds	r22, 0x0A0B	; 0x800a0b <time>
    d252:	70 91 0c 0a 	lds	r23, 0x0A0C	; 0x800a0c <time+0x1>
    d256:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <time+0x2>
    d25a:	90 91 0e 0a 	lds	r25, 0x0A0E	; 0x800a0e <time+0x3>
    d25e:	0e 94 56 64 	call	0xc8ac	; 0xc8ac <updatetime>
    if ( player.y > 240) 
    d262:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <player+0x2>
    d266:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <player+0x3>
    d26a:	81 3f       	cpi	r24, 0xF1	; 241
    d26c:	91 05       	cpc	r25, r1
    d26e:	6c f0       	brlt	.+26     	; 0xd28a <main+0x2e4>
    {
    lives++;
    d270:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    d274:	8f 5f       	subi	r24, 0xFF	; 255
    d276:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    player.x = 30;
    d27a:	50 92 57 09 	sts	0x0957, r5	; 0x800957 <player+0x1>
    d27e:	40 92 56 09 	sts	0x0956, r4	; 0x800956 <player>
    player.y = 0;
    d282:	10 92 59 09 	sts	0x0959, r1	; 0x800959 <player+0x3>
    d286:	10 92 58 09 	sts	0x0958, r1	; 0x800958 <player+0x2>

    };
    if ( player2.y > 240) 
    d28a:	80 91 12 0a 	lds	r24, 0x0A12	; 0x800a12 <player2+0x2>
    d28e:	90 91 13 0a 	lds	r25, 0x0A13	; 0x800a13 <player2+0x3>
    d292:	81 3f       	cpi	r24, 0xF1	; 241
    d294:	91 05       	cpc	r25, r1
    d296:	c4 f0       	brlt	.+48     	; 0xd2c8 <main+0x322>
    {
    died = true;
    d298:	00 93 8d 0a 	sts	0x0A8D, r16	; 0x800a8d <died>
    lives--;    
    d29c:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    d2a0:	81 50       	subi	r24, 0x01	; 1
    d2a2:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    isplaying = false; 
    d2a6:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d2aa:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    bonus = 0; 
    d2ae:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d2b2:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    d2b6:	41 e0       	ldi	r20, 0x01	; 1
    d2b8:	6f ef       	ldi	r22, 0xFF	; 255
    d2ba:	89 e0       	ldi	r24, 0x09	; 9
    d2bc:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60); 
    d2c0:	8c e3       	ldi	r24, 0x3C	; 60
    d2c2:	90 e0       	ldi	r25, 0x00	; 0
    d2c4:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    };

    if (timeisup)
    d2c8:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <timeisup>
    d2cc:	88 23       	and	r24, r24
    d2ce:	19 f1       	breq	.+70     	; 0xd316 <main+0x370>
    {
    printtileint( 26 ,0,leveltime,2);
    d2d0:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    d2d4:	50 e0       	ldi	r21, 0x00	; 0
    d2d6:	22 e0       	ldi	r18, 0x02	; 2
    d2d8:	30 e0       	ldi	r19, 0x00	; 0
    d2da:	60 e0       	ldi	r22, 0x00	; 0
    d2dc:	70 e0       	ldi	r23, 0x00	; 0
    d2de:	8a e1       	ldi	r24, 0x1A	; 26
    d2e0:	90 e0       	ldi	r25, 0x00	; 0
    d2e2:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
    TriggerFx(9,0xff,true);
    d2e6:	41 e0       	ldi	r20, 0x01	; 1
    d2e8:	6f ef       	ldi	r22, 0xFF	; 255
    d2ea:	89 e0       	ldi	r24, 0x09	; 9
    d2ec:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60);   
    d2f0:	8c e3       	ldi	r24, 0x3C	; 60
    d2f2:	90 e0       	ldi	r25, 0x00	; 0
    d2f4:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    showtimesup();
    d2f8:	0e 94 2e 67 	call	0xce5c	; 0xce5c <showtimesup>
    lives--;    
    d2fc:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    d300:	81 50       	subi	r24, 0x01	; 1
    d302:	80 93 2e 0a 	sts	0x0A2E, r24	; 0x800a2e <lives>
    bonus = 0;  
    d306:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d30a:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    isplaying = false; 
    d30e:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d312:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    };
      if (finished)
    d316:	80 91 73 0a 	lds	r24, 0x0A73	; 0x800a73 <finished>
    d31a:	88 23       	and	r24, r24
    d31c:	09 f4       	brne	.+2      	; 0xd320 <main+0x37a>
    d31e:	7c cf       	rjmp	.-264    	; 0xd218 <main+0x272>
    {
    TriggerFx(10,0xff,true);      
    d320:	41 e0       	ldi	r20, 0x01	; 1
    d322:	6f ef       	ldi	r22, 0xFF	; 255
    d324:	8a e0       	ldi	r24, 0x0A	; 10
    d326:	0e 94 88 44 	call	0x8910	; 0x8910 <TriggerFx>
    WaitVsync(60);
    d32a:	8c e3       	ldi	r24, 0x3C	; 60
    d32c:	90 e0       	ldi	r25, 0x00	; 0
    d32e:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    score = score + 100;
    d332:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <score>
    d336:	90 91 ad 09 	lds	r25, 0x09AD	; 0x8009ad <score+0x1>
    d33a:	8c 59       	subi	r24, 0x9C	; 156
    d33c:	9f 4f       	sbci	r25, 0xFF	; 255
    d33e:	90 93 ad 09 	sts	0x09AD, r25	; 0x8009ad <score+0x1>
    d342:	80 93 ac 09 	sts	0x09AC, r24	; 0x8009ac <score>
    updatepoints();
    d346:	0e 94 ce 53 	call	0xa79c	; 0xa79c <updatepoints>
    level++;    
    d34a:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    d34e:	8f 5f       	subi	r24, 0xFF	; 255
    d350:	80 93 c4 09 	sts	0x09C4, r24	; 0x8009c4 <level>
    StartSong(midisong);
    d354:	8b e6       	ldi	r24, 0x6B	; 107
    d356:	9a e3       	ldi	r25, 0x3A	; 58
    d358:	0e 94 ab 43 	call	0x8756	; 0x8756 <StartSong>
    isplaying = false; 
    d35c:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d360:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    finished = false;
    d364:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
    d368:	57 cf       	rjmp	.-338    	; 0xd218 <main+0x272>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    d36a:	80 91 2e 0a 	lds	r24, 0x0A2E	; 0x800a2e <lives>
    d36e:	81 11       	cpse	r24, r1
    d370:	02 c0       	rjmp	.+4      	; 0xd376 <main+0x3d0>
    d372:	0e 94 da 66 	call	0xcdb4	; 0xcdb4 <showgameover>

if  (level > maxlevel  ) 
    d376:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <level>
    d37a:	8a 30       	cpi	r24, 0x0A	; 10
    d37c:	08 f4       	brcc	.+2      	; 0xd380 <main+0x3da>
    d37e:	ba ce       	rjmp	.-652    	; 0xd0f4 <main+0x14e>
{   showcongratulation();
    d380:	0e 94 82 67 	call	0xcf04	; 0xcf04 <showcongratulation>
    isplaying = false; 
    d384:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d388:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <play>
    finished = false;
    d38c:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
    lives = 0;
    d390:	10 92 2e 0a 	sts	0x0A2E, r1	; 0x800a2e <lives>
    d394:	af ce       	rjmp	.-674    	; 0xd0f4 <main+0x14e>
 
};
};
};
StopSong();
    d396:	0e 94 d4 43 	call	0x87a8	; 0x87a8 <StopSong>

    
};
    d39a:	30 ce       	rjmp	.-928    	; 0xcffc <main+0x56>

0000d39c <__udivmodhi4>:
    d39c:	aa 1b       	sub	r26, r26
    d39e:	bb 1b       	sub	r27, r27
    d3a0:	51 e1       	ldi	r21, 0x11	; 17
    d3a2:	07 c0       	rjmp	.+14     	; 0xd3b2 <__udivmodhi4_ep>

0000d3a4 <__udivmodhi4_loop>:
    d3a4:	aa 1f       	adc	r26, r26
    d3a6:	bb 1f       	adc	r27, r27
    d3a8:	a6 17       	cp	r26, r22
    d3aa:	b7 07       	cpc	r27, r23
    d3ac:	10 f0       	brcs	.+4      	; 0xd3b2 <__udivmodhi4_ep>
    d3ae:	a6 1b       	sub	r26, r22
    d3b0:	b7 0b       	sbc	r27, r23

0000d3b2 <__udivmodhi4_ep>:
    d3b2:	88 1f       	adc	r24, r24
    d3b4:	99 1f       	adc	r25, r25
    d3b6:	5a 95       	dec	r21
    d3b8:	a9 f7       	brne	.-22     	; 0xd3a4 <__udivmodhi4_loop>
    d3ba:	80 95       	com	r24
    d3bc:	90 95       	com	r25
    d3be:	bc 01       	movw	r22, r24
    d3c0:	cd 01       	movw	r24, r26
    d3c2:	08 95       	ret

0000d3c4 <__divmodhi4>:
    d3c4:	97 fb       	bst	r25, 7
    d3c6:	07 2e       	mov	r0, r23
    d3c8:	16 f4       	brtc	.+4      	; 0xd3ce <__divmodhi4+0xa>
    d3ca:	00 94       	com	r0
    d3cc:	07 d0       	rcall	.+14     	; 0xd3dc <__divmodhi4_neg1>
    d3ce:	77 fd       	sbrc	r23, 7
    d3d0:	09 d0       	rcall	.+18     	; 0xd3e4 <__divmodhi4_neg2>
    d3d2:	0e 94 ce 69 	call	0xd39c	; 0xd39c <__udivmodhi4>
    d3d6:	07 fc       	sbrc	r0, 7
    d3d8:	05 d0       	rcall	.+10     	; 0xd3e4 <__divmodhi4_neg2>
    d3da:	3e f4       	brtc	.+14     	; 0xd3ea <__divmodhi4_exit>

0000d3dc <__divmodhi4_neg1>:
    d3dc:	90 95       	com	r25
    d3de:	81 95       	neg	r24
    d3e0:	9f 4f       	sbci	r25, 0xFF	; 255
    d3e2:	08 95       	ret

0000d3e4 <__divmodhi4_neg2>:
    d3e4:	70 95       	com	r23
    d3e6:	61 95       	neg	r22
    d3e8:	7f 4f       	sbci	r23, 0xFF	; 255

0000d3ea <__divmodhi4_exit>:
    d3ea:	08 95       	ret

0000d3ec <__udivmodsi4>:
    d3ec:	a1 e2       	ldi	r26, 0x21	; 33
    d3ee:	1a 2e       	mov	r1, r26
    d3f0:	aa 1b       	sub	r26, r26
    d3f2:	bb 1b       	sub	r27, r27
    d3f4:	fd 01       	movw	r30, r26
    d3f6:	0d c0       	rjmp	.+26     	; 0xd412 <__udivmodsi4_ep>

0000d3f8 <__udivmodsi4_loop>:
    d3f8:	aa 1f       	adc	r26, r26
    d3fa:	bb 1f       	adc	r27, r27
    d3fc:	ee 1f       	adc	r30, r30
    d3fe:	ff 1f       	adc	r31, r31
    d400:	a2 17       	cp	r26, r18
    d402:	b3 07       	cpc	r27, r19
    d404:	e4 07       	cpc	r30, r20
    d406:	f5 07       	cpc	r31, r21
    d408:	20 f0       	brcs	.+8      	; 0xd412 <__udivmodsi4_ep>
    d40a:	a2 1b       	sub	r26, r18
    d40c:	b3 0b       	sbc	r27, r19
    d40e:	e4 0b       	sbc	r30, r20
    d410:	f5 0b       	sbc	r31, r21

0000d412 <__udivmodsi4_ep>:
    d412:	66 1f       	adc	r22, r22
    d414:	77 1f       	adc	r23, r23
    d416:	88 1f       	adc	r24, r24
    d418:	99 1f       	adc	r25, r25
    d41a:	1a 94       	dec	r1
    d41c:	69 f7       	brne	.-38     	; 0xd3f8 <__udivmodsi4_loop>
    d41e:	60 95       	com	r22
    d420:	70 95       	com	r23
    d422:	80 95       	com	r24
    d424:	90 95       	com	r25
    d426:	9b 01       	movw	r18, r22
    d428:	ac 01       	movw	r20, r24
    d42a:	bd 01       	movw	r22, r26
    d42c:	cf 01       	movw	r24, r30
    d42e:	08 95       	ret

0000d430 <__itoa_ncheck>:
    d430:	bb 27       	eor	r27, r27
    d432:	4a 30       	cpi	r20, 0x0A	; 10
    d434:	31 f4       	brne	.+12     	; 0xd442 <__itoa_ncheck+0x12>
    d436:	99 23       	and	r25, r25
    d438:	22 f4       	brpl	.+8      	; 0xd442 <__itoa_ncheck+0x12>
    d43a:	bd e2       	ldi	r27, 0x2D	; 45
    d43c:	90 95       	com	r25
    d43e:	81 95       	neg	r24
    d440:	9f 4f       	sbci	r25, 0xFF	; 255
    d442:	0c 94 24 6a 	jmp	0xd448	; 0xd448 <__utoa_common>

0000d446 <__utoa_ncheck>:
    d446:	bb 27       	eor	r27, r27

0000d448 <__utoa_common>:
    d448:	fb 01       	movw	r30, r22
    d44a:	55 27       	eor	r21, r21
    d44c:	aa 27       	eor	r26, r26
    d44e:	88 0f       	add	r24, r24
    d450:	99 1f       	adc	r25, r25
    d452:	aa 1f       	adc	r26, r26
    d454:	a4 17       	cp	r26, r20
    d456:	10 f0       	brcs	.+4      	; 0xd45c <__utoa_common+0x14>
    d458:	a4 1b       	sub	r26, r20
    d45a:	83 95       	inc	r24
    d45c:	50 51       	subi	r21, 0x10	; 16
    d45e:	b9 f7       	brne	.-18     	; 0xd44e <__utoa_common+0x6>
    d460:	a0 5d       	subi	r26, 0xD0	; 208
    d462:	aa 33       	cpi	r26, 0x3A	; 58
    d464:	08 f0       	brcs	.+2      	; 0xd468 <__utoa_common+0x20>
    d466:	a9 5d       	subi	r26, 0xD9	; 217
    d468:	a1 93       	st	Z+, r26
    d46a:	00 97       	sbiw	r24, 0x00	; 0
    d46c:	79 f7       	brne	.-34     	; 0xd44c <__utoa_common+0x4>
    d46e:	b1 11       	cpse	r27, r1
    d470:	b1 93       	st	Z+, r27
    d472:	11 92       	st	Z+, r1
    d474:	cb 01       	movw	r24, r22
    d476:	0c 94 3d 6a 	jmp	0xd47a	; 0xd47a <strrev>

0000d47a <strrev>:
    d47a:	dc 01       	movw	r26, r24
    d47c:	fc 01       	movw	r30, r24
    d47e:	67 2f       	mov	r22, r23
    d480:	71 91       	ld	r23, Z+
    d482:	77 23       	and	r23, r23
    d484:	e1 f7       	brne	.-8      	; 0xd47e <strrev+0x4>
    d486:	32 97       	sbiw	r30, 0x02	; 2
    d488:	04 c0       	rjmp	.+8      	; 0xd492 <strrev+0x18>
    d48a:	7c 91       	ld	r23, X
    d48c:	6d 93       	st	X+, r22
    d48e:	70 83       	st	Z, r23
    d490:	62 91       	ld	r22, -Z
    d492:	ae 17       	cp	r26, r30
    d494:	bf 07       	cpc	r27, r31
    d496:	c8 f3       	brcs	.-14     	; 0xd48a <strrev+0x10>
    d498:	08 95       	ret

0000d49a <_exit>:
    d49a:	f8 94       	cli

0000d49c <__stop_program>:
    d49c:	ff cf       	rjmp	.-2      	; 0xd49c <__stop_program>
