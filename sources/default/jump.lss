
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000d530  0000d630  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000d530  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000098e  00800102  00800102  0000d632  2**1
                  ALLOC
  3 .noinit       00000470  00800a90  00800a90  0000d700  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000db70  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000db84  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004f0  00000000  00000000  0000dbc0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007c90  00000000  00000000  0000e0b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013d6  00000000  00000000  00015d40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00005b94  00000000  00000000  00017116  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000cc0  00000000  00000000  0001ccac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000158c  00000000  00000000  0001d96c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005371  00000000  00000000  0001eef8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000568  00000000  00000000  00024270  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cd 3c 	jmp	0x799a	; 0x799a <__ctors_end>
       4:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
       8:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
       c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      10:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      14:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      18:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      1c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      20:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      24:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      28:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      2c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      30:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      34:	0c 94 83 40 	jmp	0x8106	; 0x8106 <__vector_13>
      38:	0c 94 c2 40 	jmp	0x8184	; 0x8184 <__vector_14>
      3c:	0c 94 ee 3d 	jmp	0x7bdc	; 0x7bdc <__vector_15>
      40:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      44:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      48:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      4c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      50:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      54:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      58:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      5c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      60:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      64:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      68:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>
      6c:	0c 94 38 3d 	jmp	0x7a70	; 0x7a70 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	01 43 04 43 60 43 64 43 6b 43 0c 43 11 43 16 43     .C.C`CdCkC.C.C.C
      d2:	73 43 19 43 1c 43 1f 43 5a 43 5d 43 83 43           sC.C.C.CZC]C.C

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     93b:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     983:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     993:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     9a3:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bc3:	29 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00     )...............
     bd3:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 33 00 00 00 00 00 00     '........3......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e27:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     e6f:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     e7f:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     e8f:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1313:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
    135b:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
    136b:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
    137b:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
	...
    16e7:	19 1a 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
	...
    173f:	00 00 1b 1c 01 01 01 05 00 00 00 00 00 00 00 00     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    180b:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1847:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 03     ..%&............
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19e3:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 00 00 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 00 00 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	00 00 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 00 00     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 00 00 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c17:	00 00 04 04 04 00 00 00 00 29 00 00 00 00 00 04     .........)......
    1c27:	04 04 04 04 04 04 0d 0e 01 01 01 01 01 01 01 01     ................
    1c37:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c47:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c57:	05 00 00 00 00 00 00 00 00 00 06 05 00 06 01 01     ................
    1c67:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 05     ................
    1c77:	00 00 00 08 00 00 06 01 01 01 01 01 01 01 01 01     ................
    1c87:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1eb3:	00 00 03 00 00 00 00 00 00 00 00 03 03 03 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f23:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
	...
    1f43:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    1f7f:	00 04 04 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    1fbf:	00 00 00 04 04 04 00 00 00 00 00 00 00 04 04 04     ................
	...
    1fdb:	00 00 04 00 00 00 00 00 00 00 04 00 00 04 00 00     ................
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
    1ffb:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2013:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 04 03 03 04 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    206b:	00 00 00 04 00 00 00 00 00 04 00 00 00 00 00 00     ................
    207b:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    208b:	00 00 04 00 00 00 04 00 04 00 00 04 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 00 00 00 00 04 15 00     ................
    20cb:	00 00 15 04 00 15 15 15 00 00 04 04 04 00 00 00     ................
	...
    20e7:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	29 00 00 00 00 00 1b 1c 04 04 04 04 04 04 00 04     )...............
    2123:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    2133:	04 04 04 04 04 04 04 04 04 04 05 00 06 04 04 04     ................
    2143:	04 04 05 00 00 00 00 00 00 00 00 00 00 06 04 04     ................
    2153:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    2163:	05 00 08 00 08 00 06 04 05 00 06 04 04 04 04 04     ................
    2173:	04 04 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     ..>>>>>>>>>>>>>>
    2183:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    2193:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21a3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21b3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    21c3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e                 >>>>>>>>>>>>

000021cf <level4>:
	...
    21e3:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    221f:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    241b:	00 02 02 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    255b:	1f 21 00 00 00 00 00 00 00 00 00 00 00 1f 21 00     .!............!.
    256b:	33 00 00 00 00 00 00 00 00 0f 10 00 00 00 00 00     3...............
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 00 00     ................
    25b3:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    25c3:	22 00 02 00 00 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    26cf:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    270b:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28a7:	07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2957:	0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0b 0c 00 00 00 0f 10 00 00 00 00     ................
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0f 10 00 00 00 0f 10 00 00     ................
    2a0f:	00 00 00 00 00 07 07 07 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0f 10 00 00 00 0f 10 00 00 00 00 00 00 00 00     ................
	...
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0d 0e 00 00 00 0d 0e 00 00 00 00 00 00     ................
	...
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 06 05 00 00 00 00 00 00 00 00     ................
    2b23:	00 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bbb:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2bf7:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
	...
    2c13:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2c53:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
    2c63:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2c7b:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    2c93:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
    2cdf:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2d0b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2d63:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	00 00 00 00 00 00 32 00 00 00 00 29 29 00 00 00     ......2....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 00 00 00 00 04 04 04 04 04 00 00 00 02 02 00     ................
	...
    2e67:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     3...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 04 04     ...2............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 00 00 04     ................
    2eef:	04 04 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 00 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f3f:	00 1f 21 00 00 00 00 00 04 04 04 04 00 0b 0c 00     ..!.............
    2f4f:	02 02 02 02 02 02 00 00 00 00 00 00 00 00 00 29     ...............)
    2f5f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    2f6f:	00 04 04 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f97:	00 00 00 20 22 00 00 04 04 04 04 04 04 04 00 0d     ... "...........
    2fa7:	0e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 00 00 00 00 00 00 00     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 00 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
	...
    30a7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
    30b7:	00 00 00 00 00 15 00 00 00 00 00 00 00 00 00 00     ................
	...
    30e3:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
    310f:	00 00 00 00 00 00 00 15 00 00 00 00 00 00 00 00     ................
    311f:	00 00 00 00 00 00 00 23 24 00 00 00 00 00 00 00     .......#$.......
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 15 00 00 23 24 00 00     %&..........#$..
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31c7:	00 00 00 15 00 00 25 26 00 00 00 00 00 00 00 00     ......%&........
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3223:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    3267:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3277:	00 00 00 00 00 00 00 15 00 00 00 00 00 00 00 00     ................
	...
    32bb:	00 32 00 02 03 02 00 00 00 01 00 00 00 00 00 00     .2..............
	...
    32d3:	00 00 00 29 29 15 00 00 00 00 00 00 00 00 00 00     ...))...........
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    331b:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    332b:	00 00 00 00 02 02 02 15 00 00 00 00 00 00 00 00     ................
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    3377:	00 01 00 00 00 00 00 00 00 00 00 00 00 0b 0c 00     ................
    3387:	00 00 00 00 00 15 00 00 00 00 00 00 00 00 00 00     ................
	...
    33a7:	04 04 04 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    33cb:	02 03 02 03 03 02 00 01 00 00 00 00 00 00 00 00     ................
    33db:	00 00 00 0d 0e 00 00 00 00 00 00 15 00 00 00 00     ................
	...
    33f3:	03 02 02 03 00 02 00 00 00 00 00 00 00 04 04 04     ................
    3403:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    341f:	1f 21 00 00 00 00 00 00 00 00 00 00 00 1f 21 00     .!............!.
	...
    3437:	00 0b 0c 00 00 00 00 00 00 15 00 00 00 00 00 00     ................
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    3467:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .!..............
    3477:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    3487:	22 00 00 00 00 00 00 00 00 00 00 0d 0e 00 00 00     "...............
    3497:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 20 22     .............. "
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 15 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    354b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 15 00 00 00 00 00 00 00 00     ...#$...........
	...
    359f:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    35cf:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    35df:	04 04 04 00 00 25 26 00 00 15 00 00 00 00 00 00     .....%&.........
	...
    35f7:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3627:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    3637:	00 00 04 00 00 04 00 04 00 00 04 15 04 00 00 00     ................
    3647:	00 04 00 00 00 00 32 00 00 00 00 00 00 15 00 00     ......2.........
	...
    3663:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     3...............
	...
    367b:	00 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
	...
    3693:	04 00 00 04 00 04 00 00 04 15 04 04 00 00 00 04     ................
	...
    36ab:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    36d7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
    36e7:	00 00 00 00 00 00 04 00 04 00 00 04 00 00 04 15     ................
    36f7:	04 00 04 00 00 04 00 00 00 00 00 00 00 00 00 00     ................
    3707:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    373b:	00 00 25 26 00 00 00 00 00 00 00 00 04 04 00 00     ..%&............
    374b:	00 04 00 00 04 15 04 00 00 04 00 04 00 00 00 00     ................
    375b:	00 00 00 00 00 00 00 15 00 00 00 00 00 00 00 00     ................
	...
    379f:	00 00 04 00 04 00 00 04 00 00 04 15 04 00 00 00     ................
    37af:	04 04 00 00 00 00 00 00 00 00 00 00 00 15 00 00     ................
	...
    37fb:	04 00 00 04 00 04 04 04 04 15 04 00 00 00 00 04     ................
    380b:	00 00 03 00 00 00 00 00 00 00 00 15 03 00 00 00     ................
    381b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    385b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
    386b:	00 00 00 00 00 15 00 00 00 00 00 00 00 00 00 00     ................
	...
    38b7:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    38c7:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    390b:	1f 21 00 00 00 00 00 15 00 00 00 00 00 1f 21 00     .!............!.
	...
    3923:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3943:	00 00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00     ...!............
    3953:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .!..............
    3963:	00 00 20 22 00 00 00 00 00 15 00 00 00 00 00 20     .. "........... 
    3973:	22 00 00 00 00 00 00 00 00 00 00 15 00 00 00 00     "...............
	...
    399f:	20 22 00 00 00 00 00 00 29 29 29 29 00 00 20 22      "......)))).. "
    39af:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    39bf:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39cf:	01 01 01 01 01 01 01 01 05 15 06 01 01 01 01 01     ................
    39df:	01 01 05 00 06 01 01 01 01 01 01 05 00 06 05 00     ................
    39ef:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39ff:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a0f:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3a2f:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4043:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4053:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 00 00 00     ..??????..???...
    4063:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    4073:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4083:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4093:	3f 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 3f 00 fe     ??????...?????..
    40a3:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f 00     ???????.???????.
    40b3:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    40c3:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    40d3:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    40e3:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    40f3:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4103:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4113:	00 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 00 00 00 fe     .?????..????....
    4123:	3f 3f 00 00 fe fe fe fe 00 00 fe fe fe fe fe fe     ??..............
    4133:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4143:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4153:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    4163:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00     .???????.??????.
    4173:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4183:	3f 3f 3f 3f 00 fe fe fe 00 3f 3f 00 fe fe fe fe     ????.....??.....
    4193:	00 3f 00 fe fe fe fe fe 3f 00 fe fe fe fe fe fe     .?......?.......
    41a3:	00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41b3:	fe fe fe fe fe fe fe 07 fe fe fe fe fe 07 07 07     ................
    41c3:	fe fe fe fe 07 07 07 07 fe fe fe 07 07 07 07 07     ................
    41d3:	fe fe 07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0     ................
    41e3:	fe fe 07 07 ff ff e0 e0 fe 07 07 07 ff ff ff ff     ................
    41f3:	07 fe fe fe fe fe fe fe 07 07 07 fe fe fe fe fe     ................
    4203:	07 07 07 07 fe fe fe fe 07 07 07 07 07 fe fe fe     ................
    4213:	07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0 fe fe     ................
    4223:	07 07 ff ff e0 e0 fe fe 07 07 ff ff ff ff 07 fe     ................
    4233:	fe fe fe fe fe fe fe c9 fe fe fe fe fe c9 c9 c9     ................
    4243:	fe fe fe fe c9 c9 c9 c9 fe fe fe c9 c9 c9 c9 c9     ................
    4253:	fe fe c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9     ................
    4263:	fe fe c9 c9 c9 ff ff c9 fe c9 c9 c9 c9 ff ff c9     ................
    4273:	c9 fe fe fe fe fe fe fe c9 c9 c9 fe fe fe fe fe     ................
    4283:	c9 c9 c9 c9 fe fe fe fe c9 c9 c9 c9 c9 fe fe fe     ................
    4293:	c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9 fe fe     ................
    42a3:	c9 ff ff c9 c9 c9 fe fe c9 ff ff c9 c9 c9 c9 fe     ................
    42b3:	fe fe fe fe fe fe 2a 2a fe fe fe fe fe fe fe 2a     ......**.......*
    42c3:	fe fe fe 2a 2a 2a 2a 2a fe fe 05 2a 2a 2a 2a 2a     ...*****...*****
    42d3:	fe fe 05 07 07 07 2a 2a fe 05 07 07 07 07 07 07     ......**........
    42e3:	05 05 07 07 07 ff ff 07 05 05 07 07 ff ff e0 e0     ................
    42f3:	2a fe fe fe fe fe fe fe 2a fe fe fe fe fe fe fe     *.......*.......
    4303:	2a 2a 2a 2a 2a fe fe fe 2a 2a 2a 2a 2a 07 fe fe     *****...*****...
    4313:	2a 2a 07 07 07 07 fe fe 07 07 07 07 07 07 07 fe     **..............
    4323:	07 07 07 ff ff 07 07 07 07 07 ff ff e0 e0 07 07     ................
    4333:	fe fe fe fe fe fe fe cf fe fe fe fe fe cf cf cf     ................
    4343:	fe fe fe fe cf cf cf cf fe fe fe cf cf cf cf cf     ................
    4353:	fe fe cf cf cf ff ff cf fe fe cf cf ff ff e0 e0     ................
    4363:	fe fe cf cf ff ff e0 e0 fe cf cf cf ff ff ff ff     ................
    4373:	cf fe fe fe fe fe fe fe cf cf cf fe fe fe fe fe     ................
    4383:	cf cf cf cf fe fe fe fe cf cf cf cf cf fe fe fe     ................
    4393:	cf cf cf ff ff cf fe fe cf cf ff ff e0 e0 fe fe     ................
    43a3:	cf cf ff ff e0 e0 fe fe cf cf ff ff ff ff cf fe     ................
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43f3:	00 3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 3f 3f     .??????..???????
    4403:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 3f 3f 3f     ..??????..??????
    4413:	fe fe 00 3f 3f 3f 3f 3f fe fe fe 00 3f 3f 3f 3f     ...?????....????
    4423:	fe fe fe fe 00 00 3f 3f fe fe fe fe fe fe 00 00     ......??........
	...
    443b:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00 fe     ???????.??????..
    444b:	3f 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 00 fe fe     ??????..?????...
    445b:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    446b:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    447b:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    448b:	3f 3f 3f 3f 00 00 00 fe 3f 3f 3f 3f 3f 3f 00 fe     ????....??????..
    449b:	3f 3f 3f 3f 3f 00 fe fe 3f 3f 3f 00 00 fe fe fe     ?????...???.....
    44ab:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44bb:	00 fe fe fe fe fe fe fe 3f 00 fe fe fe fe fe fe     ........?.......
    44cb:	3f 3f 00 fe fe fe fe fe 3f 3f 3f 00 fe fe fe fe     ??......???.....
    44db:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    44eb:	00 00 fe fe fe fe fe fe fe 07 07 07 07 ff ff 07     ................
    44fb:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    450b:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    451b:	fe 07 07 07 07 07 07 07 fe 07 07 fe 07 07 07 fe     ................
    452b:	fe 07 fe fe fe 07 07 fe 07 07 07 ff ff 07 07 fe     ................
    453b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    454b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    455b:	07 07 07 07 07 07 07 fe fe 07 07 07 fe 07 07 fe     ................
    456b:	fe 07 07 fe fe fe 07 fe fe c9 c9 c9 c9 c9 c9 c9     ................
    457b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9     ................
    458b:	fe c9 c9 ff ff c9 c9 ff fe c9 ff c9 c9 ff ff c9     ................
    459b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 fe c9 c9 c9 fe     ................
    45ab:	fe c9 fe fe fe c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45bb:	c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45cb:	ff c9 c9 ff ff c9 c9 fe c9 ff ff c9 c9 ff c9 fe     ................
    45db:	c9 c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 fe c9 c9 fe     ................
    45eb:	fe c9 c9 fe fe fe c9 fe 05 05 07 07 ff ff e0 e0     ................
    45fb:	fe 05 05 07 ff ff ff ff fe fe 05 07 07 ff ff 07     ................
    460b:	fe fe 05 05 07 07 07 07 fe fe fe 05 05 07 07 ff     ................
    461b:	fe fe fe 05 05 05 07 07 fe fe fe fe fe fe 05 05     ................
    462b:	fe fe fe fe fe fe 05 05 07 07 ff ff e0 e0 07 07     ................
    463b:	07 07 ff ff ff ff 07 fe 07 07 07 ff ff 07 fe fe     ................
    464b:	07 07 07 07 07 07 fe fe ff ff 07 07 07 fe fe fe     ................
    465b:	07 07 07 07 07 fe fe fe 07 07 fe fe fe fe fe fe     ................
    466b:	05 07 fe fe fe fe fe fe fe cf cf cf cf ff ff cf     ................
    467b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    468b:	fe cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf     ................
    469b:	fe cf cf cf cf cf cf cf fe cf cf fe cf cf cf fe     ................
    46ab:	fe cf fe fe fe cf cf fe cf cf cf ff ff cf cf fe     ................
    46bb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46cb:	cf cf cf cf cf cf cf fe cf cf cf cf cf cf cf fe     ................
    46db:	cf cf cf cf cf cf cf fe fe cf cf cf fe cf cf fe     ................
    46eb:	fe cf cf fe fe fe cf fe                             ........

000046f3 <blob1>:
    46f3:	02 02 08 09 15 16                                   ......

000046f9 <blob0>:
    46f9:	02 02 0c 0d 19 1a                                   ......

000046ff <run1>:
    46ff:	02 02 0a 0b 17 18                                   ......

00004705 <run0>:
    4705:	02 02 0a 0b 17 18                                   ......

0000470b <owl1>:
    470b:	02 02 08 09 15 16                                   ......

00004711 <owl0>:
    4711:	02 02 06 07 13 14                                   ......

00004717 <pac2>:
    4717:	02 02 04 05 0f 12                                   ......

0000471d <pac1>:
    471d:	02 02 02 03 0f 11                                   ......

00004723 <pac0>:
    4723:	02 02 00 01 0f 10                                   ......

00004729 <uMTiles>:
    4729:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4739:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4749:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    4759:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    4769:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    4779:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4789:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    4799:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    47a9:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    47b9:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    47c9:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    47d9:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    47e9:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    47f9:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    4809:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    4819:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    4829:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    4839:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4849:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4859:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    4869:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    4879:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    4889:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    4899:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    48a9:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    48b9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    48c9:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    48d9:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    48e9:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    48f9:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    4909:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    4919:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    4929:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    4939:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    4949:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4959:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    4969:	04 04 04 04 07 04 04 07 04 04 07 04 04 04 07 07     ................
    4979:	04 07 07 07 04 07 07 07 07 07 07 07 07 27 07 07     .............'..
    4989:	07 07 07 07 07 07 07 27 07 27 07 07 27 07 27 27     .......'.'..'.''
    4999:	07 07 07 27 27 27 27 27 27 07 27 27 27 37 27 27     ...''''''.'''7''
    49a9:	07 04 04 07 04 04 04 04 07 07 04 04 04 07 04 04     ................
    49b9:	07 07 07 04 07 07 07 04 07 07 27 07 07 07 07 07     ..........'.....
    49c9:	27 07 07 07 07 07 07 07 27 27 07 27 07 07 27 07     '.......''.'..'.
    49d9:	27 27 27 27 27 07 07 07 27 27 37 27 27 27 07 27     '''''...''7'''.'
    49e9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    49f9:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    4a09:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    4a19:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    4a29:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    4a39:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a49:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    4a59:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    4a69:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    4a79:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4a89:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    4a99:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    4aa9:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    4ab9:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    4ac9:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    4ad9:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    4ae9:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    4af9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4b09:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    4b19:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    4b69:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    4b79:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    4b89:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    4b99:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    4ba9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bb9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bc9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bd9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4be9:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4bf9:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c09:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    4c19:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c29:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4c39:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c49:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    4c59:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c69:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    4c79:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    4c89:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    4c99:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    4ca9:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    4cb9:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    4cc9:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    4cd9:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    4ce9:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    4cf9:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    4d09:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d19:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    4d29:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    4d39:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d49:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d59:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    4d69:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    4d79:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    4d89:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4d99:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4da9:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    4db9:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    4dc9:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    4dd9:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    4de9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    4df9:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    4e09:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    4e19:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    4e29:	07 27 37 27 27 27 27 37 27 27 27 37 27 27 37 37     .'7''''7'''7''77
    4e39:	27 27 37 37 37 37 37 37 27 37 37 37 37 ff 37 37     ''777777'7777.77
    4e49:	37 37 ff 37 37 37 37 ff ff 37 37 37 ff 37 37 ff     77.7777..777.77.
    4e59:	37 ff 37 ff ff 37 ff ff ff ff 37 ff ff ff ff ff     7.7..7....7.....
    4e69:	37 27 27 27 27 37 27 07 37 37 27 27 37 27 27 27     7''''7'.77''7'''
    4e79:	37 37 37 37 37 37 27 27 37 37 ff 37 37 37 37 27     777777''77.7777'
    4e89:	ff 37 37 37 37 ff 37 37 ff 37 37 ff 37 37 37 ff     .7777.77.77.777.
    4e99:	ff ff 37 ff ff 37 ff 37 ff ff ff ff ff 37 ff ff     ..7..7.7.....7..
    4ea9:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    4eb9:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    4ec9:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    4ed9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    4ee9:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    4f2d:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4f69:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    4f79:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    4f89:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    4f99:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    4fa9:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    4fb9:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    4fc9:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    4fd9:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    4fe9:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    4ff9:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5009:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5019:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
	...
    5035:	00 00 07 00 00 00 00 00 00 07 00 00 00 00 00 00     ................
	...
    504d:	00 00 00 2f 00 00 00 00 00 00 00 00 00 00 00 00     .../............
    505d:	07 2f 00 00 00 00 00 00 00 07 00 00 00 00 00 00     ./..............
    506d:	00 00 00 00 00 00 ff 00 00 2f 00 00 00 00 00 00     ........./......
    507d:	ff 00 00 00 00 07 00 00 00 00 00 00 00 00 00 00     ................
    508d:	00 00 2f 00 2f 00 00 2f 00 00 00 00 00 00 07 00     .././../........
    509d:	00 00 00 2f 00 2f 07 00 00 00 07 00 00 00 07 00     ..././..........
    50ad:	00 00 00 00 00 07 00 00 00 00 00 00 00 00 07 00     ................
    50bd:	00 00 00 00 2f 00 00 2f 00 00 07 00 00 00 00 00     ..../../........
    50cd:	00 07 00 00 00 00 07 00 00 2f 07 00 00 07 07 00     ........./......
    50dd:	00 2f 2f 07 00 07 2f 07 00 07 2f 2f 00 00 07 00     .//.../...//....
    50ed:	00 00 07 00 00 07 00 00 00 00 2f 00 00 00 00 00     ........../.....
	...
    5109:	00 00 00 07 00 00 00 07 00 00 07 00 00 00 00 00     ................
    5119:	00 00 07 2f 00 00 00 00 07 00 2f 07 00 00 00 2f     .../....../..../
    5129:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    5139:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5149:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5159:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    5169:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5179:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5189:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5199:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    51a9:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    51b9:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    51c9:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    51d9:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    51e9:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    51f9:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5209:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5219:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5229:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5239:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    5249:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    5259:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    5269:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5279:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5289:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5299:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    52a9:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    52b9:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    52c9:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    52d9:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    52e9:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    52f9:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    5309:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    5319:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5329:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5339:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5349:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    5359:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    5369:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5379:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    5389:	e4 e4 1a 63 64 6d 6d 76 e4 e4 1a 63 63 6d 64 6d     ...cdmmv...ccmdm
    5399:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    53a9:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    53b9:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    53c9:	6e 77 b7 b7 b7 77 b7 76 76 b7 b7 b7 b7 b7 6e 6e     nw...w.vv.....nn
    53d9:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    53e9:	1b 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6e 6d 76     ..mmvww...dcmnmv
    53f9:	1a 63 64 1a 64 6d 6d 6e 11 1a 63 64 6d 6e 6e 77     .cd.dmmn..cdmnnw
    5409:	e4 11 11 1a 63 1a 63 1b e4 e4 11 11 19 63 1b 64     ....c.c......c.d
    5419:	e4 e4 11 63 63 6c 6d 6d e4 e4 19 64 63 64 6e 6d     ...cclmm...dcdnm
    5429:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 6e 77 77     .......ww...vnww
    5439:	77 b7 b7 76 6e 77 76 76 77 b7 bf b7 77 77 77 77     w..vnwvvw...wwww
    5449:	64 64 64 63 64 64 64 64 65 63 6d 6d 6c 6d 6c 6c     dddcddddecmmlmll
    5459:	76 76 b7 b7 b7 77 77 76 6e b7 b7 b7 77 77 76 76     vv...wwvn...wwvv
    5469:	77 77 76 6e 6e 76 6e 6d 6e 6e 76 6e 6d 6d 64 64     wwvnnvnmnnvnmmdd
    5479:	6e 6e 6e 6d 6d 6d 64 6d 77 76 6e 76 64 6d 63 63     nnnmmmdmwvnvdmcc
    5489:	64 64 64 23 1a 1a 1a 11 63 63 63 1a 1a 19 11 08     ddd#....ccc.....
    5499:	76 76 6d 6d 6d 6d 1b 1a 6e 6d 76 6d 64 64 63 63     vvmmmm..nmvmddcc
    54a9:	1b 64 6c 1a 1a 63 11 11 63 64 63 11 11 1a 11 11     .dl..c..cdc.....
    54b9:	63 63 1a 11 11 11 11 11 63 1a 1a 1a 19 11 11 11     cc......c.......
    54c9:	11 11 11 11 11 11 11 e4 11 11 11 11 11 11 e4 e4     ................
    54d9:	63 1a 08 11 11 11 e4 e4 19 19 11 11 11 11 e4 e4     c...............
    54e9:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    54f9:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5509:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5519:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5529:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5539:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5549:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5559:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5569:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5579:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    5589:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5599:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    55a9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    55b9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    55c9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    55d9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    55e9:	00 00 00 00 07 00 00 00 00 00 00 07 2f 00 00 07     ............/...
    55f9:	00 00 07 07 00 00 00 00 00 2f 07 07 00 00 00 07     ........./......
    5609:	00 07 07 07 07 00 00 07 00 00 2f ff 07 00 07 2f     ........../..../
    5619:	00 00 2f 2f ff 2f 07 ff 00 00 00 2f ff 07 07 ff     ..//./...../....
    5629:	07 07 00 00 00 07 07 00 2f 07 00 00 00 07 00 00     ......../.......
    5639:	2f 2f 07 00 07 07 00 00 2f 2f 07 2f 07 07 00 00     //......//./....
    5649:	2f ff 07 07 07 00 00 00 ff 07 07 07 2f 07 00 00     /.........../...
    5659:	2f 07 2f ff 2f 07 00 00 2f 07 ff ff 2f 00 00 00     /././.../.../...
    5669:	00 00 07 2f 07 07 ff 2f 07 00 00 07 2f 2f 2f ff     .../.../....///.
    5679:	00 2f 00 07 2f 2f 2f ff 00 00 07 07 2f 2f ff ff     ./..///.....//..
    5689:	00 00 07 ff 2f ff ff ff 07 00 07 2f ff ff ff 2f     ..../....../.../
    5699:	00 2f 00 07 ff ff 2f 2f 00 07 07 ff ff ff 2f 2f     ./....//......//
    56a9:	07 07 2f 07 07 00 00 00 2f 2f 2f 2f 07 00 00 00     ../.....////....
    56b9:	ff ff 2f 2f 07 00 00 00 ff ff 2f 2f 07 00 00 00     ..//......//....
    56c9:	ff ff ff 2f 07 00 07 00 ff ff ff 2f 07 07 07 00     .../......./....
    56d9:	2f 2f ff ff ff 2f 00 00 2f 2f 2f ff 2f 2f 07 00     //.../..///.//..
    56e9:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    56f9:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    5709:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    5719:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5729:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    5739:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    5749:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    5759:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    5769:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 00 ff     ................
    5779:	e4 e4 e4 e4 e4 00 ff ff e4 e4 e4 e4 00 ff ff ff     ................
    5789:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 ff ff 3a 3a     .....:.:......::
    5799:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    57a9:	00 e4 e4 e4 e4 e4 e4 e4 3a 00 e4 e4 e4 e4 e4 e4     ........:.......
    57b9:	3a 3a 00 e4 e4 e4 e4 e4 3a 3a 3a 00 e4 e4 e4 e4     ::......:::.....
    57c9:	00 3a 00 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     .:.:....:.::....
    57d9:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    57e9:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    57f9:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    5809:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    5819:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    5829:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5839:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    5849:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    5859:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    5869:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    5879:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    5889:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5899:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    58a9:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    58b9:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    58c9:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    58d9:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    58e9:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    58f9:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    5909:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5919:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    5929:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5939:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5949:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    5959:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    5969:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    5979:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    5989:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    5999:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    59a9:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    59b9:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    59c9:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    59d9:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    59e9:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    59f9:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    5a09:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    5a19:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    5a29:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    5a39:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    5a49:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    5a59:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    5a69:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5a79:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    5a89:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5a99:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    5aa9:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5ab9:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    5ac9:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5ad9:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    5ae9:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5af9:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    5b09:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    5b19:	f5 f5 e8 f5 f5 f5 e8 e8 f5 f5 f5 f5 f5 f5 f5 f5     ................
    5b29:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5b39:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    5b49:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    5b59:	e8 e8 f5 f5 f5 e8 f5 f5 f5 f5 f5 f5 f5 f5 f5 f5     ................
    5b69:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5b79:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    5b89:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5b99:	e8 e8 e8 e8 e8 e8 9a 9a f5 f5 e8 f5 f5 f5 e8 e8     ................
    5ba9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5bb9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    5bc9:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5bd9:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 f5 f5     ................
    5be9:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5bf9:	00 00 00 01 01 00 00 03 03 00 00 00 03 00 00 00     ................
    5c09:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5c19:	01 00 00 01 00 00 00 01 01 00 00 00 01 00 00 00     ................
    5c29:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5c39:	00 00 00 01 01 00 00 01 01 00 00 00 ad 00 00 00     ................
    5c49:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5c59:	01 00 00 01 00 00 00 00 01 00 00 00 01 00 00 00     ................
    5c69:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5c79:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    5c89:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    5c99:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5ca9:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    5cb9:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    5cc9:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    5cd9:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5ce9:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    5cf9:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 3a 3a 3a ff     .....:.:....:::.
    5d09:	e4 e4 e4 e4 00 3a 3a 3a e4 e4 e4 e4 e4 00 3a 3a     .....:::......::
    5d19:	e4 e4 e4 e4 e4 e4 00 3a e4 e4 e4 e4 e4 e4 e4 00     .......:........
    5d29:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    5d39:	3a 00 3a 3a 00 e4 e4 e4 00 ff 00 3a 00 e4 e4 e4     :.::.......:....
    5d49:	3a 3a 3a 00 e4 e4 e4 e4 3a 3a 00 e4 e4 e4 e4 e4     :::.....::......
    5d59:	3a 00 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     :...............
    5d69:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    5d79:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    5d89:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    5d99:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    5da9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    5db9:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    5dc9:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    5dd9:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    5de9:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    5df9:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5e09:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    5e19:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    5e29:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e39:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e49:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e59:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5e69:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5e79:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    5e89:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    5e99:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5ea9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5eb9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5ec9:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5ed9:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    5ee9:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5ef9:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    5f09:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    5f19:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5f29:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5f39:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    5f49:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    5f59:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    5f69:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    5f79:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    5f89:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    5f99:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5fa9:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    5fb9:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    5fc9:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    5fd9:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    5fe9:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    5ff9:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    6009:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    6019:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    6029:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6039:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    6049:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    6059:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    6069:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6079:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    6089:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6099:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    60a9:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    60b9:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    60c9:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    60d9:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    60e9:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    60f9:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    6109:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    6119:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    6129:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6139:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6149:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6159:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6169:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    6179:	00 00 00 01 01 00 00 01 00 00 00 00 01 00 00 00     ................
    6189:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    6199:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
    61a9:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    61b9:	00 00 00 01 01 00 00 01 01 00 00 00 01 00 00 00     ................
    61c9:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    61d9:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
	...
    61f1:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    6201:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    6211:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6221:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    6231:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6241:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6251:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6261:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    6271:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    6281:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6291:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    62b1:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62c1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62f1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 00     ................
    6301:	e4 e4 e4 e4 e4 00 00 3f e4 e4 e4 e4 00 3f 3f 3f     .......?.....???
    6311:	e4 00 00 00 3f 3f 00 3f 00 3f 3f 3f 3f 3f 3f 3f     ....??.?.???????
    6321:	e4 00 00 00 00 00 00 00 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6331:	e4 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    6341:	3f 00 00 e4 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ?.......???.....
    6351:	3f 00 3f 3f 00 00 00 e4 3f 3f 3f 3f 3f 3f 3f 00     ?.??....???????.
    6361:	00 00 00 00 00 00 00 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    6371:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    6381:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6391:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63a1:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    63b1:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    63c1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63d1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63e1:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    63f1:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    6401:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6411:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6421:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    6431:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    6441:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6451:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6461:	e4 e4 e4 e4 e4 e4 e4 e4 6e 6e 6d 64 6c 6d 63 63     ........nnmdlmcc
    6471:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6481:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    6491:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    64a1:	76 6d 6c 6d 6d 6d 64 63 63 11 1a 19 11 11 e4 e4     vmlmmmdcc.......
    64b1:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    64c1:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    64d1:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    64e1:	23 1a 11 19 11 09 e4 e4 e4 e4 1a 63 63 6d 6d 6d     #..........ccmmm
    64f1:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    6501:	e4 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6d 6d 76     ..mmvww...dcmmmv
    6511:	1a 63 1b 64 6d 64 76 76 11 1a 64 63 64 6d 76 76     .c.dmdvv..dcdmvv
    6521:	1a 1a 1b 64 6d 6e 6e 76 6e 77 b7 b7 77 77 77 6e     ...dmnnvnw..wwwn
    6531:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    6541:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 76 77 76     .......ww...vvwv
    6551:	77 b7 b7 b7 b7 6e 6e 76 6e b7 b7 77 76 6e 6e 76     w....nnvn..wvnnv
    6561:	77 b7 b7 77 76 77 77 76 6e 6e 6d 64 64 63 63 63     w..wvwwvnnmddccc
    6571:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    6581:	77 77 76 6e 76 76 6e 6d 6e 6e 6e 6d 6d 64 64 63     wwvnvvnmnnnmmddc
    6591:	6e 6e 6d 6d 64 6d 64 64 76 6e 6e 6e 6d 64 64 63     nnmmdmddvnnnmddc
    65a1:	6e 6e 6d 76 6d 63 63 6c 11 1a 19 19 11 11 e4 e4     nnmvmccl........
    65b1:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    65c1:	1b 6c 6d 19 1a 63 11 e4 64 63 1a 11 11 11 11 11     .lm..c..dc......
    65d1:	64 1a 1b 1a 19 11 11 11 1a 63 1a 11 11 11 11 11     d........c......
    65e1:	63 1b 1a 11 19 11 11 11 9a 9a e8 f5 f5 f5 e8 e8     c...............
    65f1:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    6601:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    6611:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 f5 9a 9a 9a 9a 9a     ................
    6621:	f5 f5 e8 e8 e8 e8 f5 f5 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6631:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    6641:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    6651:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a f5 e8 e8     ................
    6661:	f5 f5 e8 e8 e8 e8 f5 f5 e8 e8 e8 e8 e8 e8 9a 9a     ................
    6671:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    6681:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    6691:	9a 9a e8 f5 f5 f5 e8 e8 f5 f5 9a 9a 9a 9a f5 f5     ................
    66a1:	e8 e8 f5 f5 f5 f5 f5 f5 9a 9a e8 e8 e8 e8 e8 e8     ................
    66b1:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    66c1:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    66d1:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a f5 f5     ................
    66e1:	f5 f5 f5 f5 f5 f5 e8 e8 e4 e4 ff ff ff e4 e4 e4     ................
    66f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff e4 e4     ................
    6701:	e4 ff e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4     ................
    6711:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6721:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6731:	e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6741:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6751:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6761:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6771:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6781:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6791:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    67a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    67b1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    67c1:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    67d1:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    67e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    67f1:	e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    6801:	e4 ff e4 e4 ff e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    6811:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6821:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    6831:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    6841:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6851:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6861:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4     ................
    6871:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6881:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6891:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    68a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    68b1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    68c1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    68d1:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    68e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    68f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6901:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6911:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6921:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    6931:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    6941:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6951:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4     ................
    6961:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6971:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6981:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6991:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    69a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    69b1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    69c1:	e4 e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff     ................
    69d1:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    69e1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    69f1:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6a01:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6a11:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    6a21:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    6a31:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff     ................
    6a41:	e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 ff e4 e4     ................
    6a51:	e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff     ................
    6a61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    6a71:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6a81:	e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    6a91:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    6aa1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4 ff     ................
    6ab1:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6ac1:	ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6ad1:	ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 e4 ff     ................
    6ae1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4     ................
    6af1:	e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff e4     ................
    6b01:	e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff     ................
    6b11:	e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 e4     ................
    6b21:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    6b31:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    6b41:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    6b51:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    6b61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    6b71:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4     ................
    6b81:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6b91:	ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    6ba1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6bb1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6bc1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6bd1:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    6be1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 ff     ................
    6bf1:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    6c01:	e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6c11:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    6c21:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    6c31:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6c41:	ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 ff e4 e4     ................
    6c51:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff     ................
    6c61:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6c71:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6c81:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6c91:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    6ca1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6cb1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6cc1:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    6cd1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ce1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff     ................
    6cf1:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    6d01:	ff e4 e4 ff ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    6d11:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff     ................
    6d21:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff ff ff ff ff     ................
    6d31:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6d41:	ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6d51:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 ff e4 e4     ................
    6d61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    6d71:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6d81:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 ff     ................
    6d91:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6da1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    6db1:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4     ................
    6dc1:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    6dd1:	ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4     ................
    6de1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff ff     ................
    6df1:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    6e01:	e4 ff e4 ff e4 e4 ff e4 ff ff ff ff ff e4 ff e4     ................
    6e11:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    6e21:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    6e31:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 ff     ................
    6e41:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6e51:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    6e61:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6e71:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6e81:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6e91:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6ea1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff     ................
    6eb1:	ff e4 e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff     ................
    6ec1:	ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    6ed1:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    6ee1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    6ef1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    6f01:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    6f11:	e4 e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    6f21:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff     ................
    6f31:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6f41:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6f51:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    6f61:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    6f71:	e4 ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff     ................
    6f81:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6f91:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    6fa1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    6fb1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fc1:	ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fd1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    6fe1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 ff     ................
    6ff1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7001:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7011:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7021:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff ff     ................
    7031:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7041:	ff ff ff e4 e4 ff ff ff e4 ff e4 e4 e4 ff e4 e4     ................
    7051:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    7061:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    7071:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7081:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7091:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    70a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4 ff     ................
    70b1:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    70c1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff ff     ................
    70d1:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    70e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4     ................
    70f1:	e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff     ................
    7101:	ff e4 e4 ff ff ff ff e4 ff ff e4 ff e4 ff e4 e4     ................
    7111:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7121:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7131:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7141:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7151:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7161:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7171:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4     ................
    7181:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7191:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 0f 0f 0f e4 e4 e4     ................
    71a1:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71b1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71c1:	e4 ff e4 e4 e4 e4 e4 e4 e4 f6 f6 e4 e4 e4 e4 e4     ................
    71d1:	e4 ad ad f6 e4 e4 e4 e4 e4 ad a4 ad f6 e4 e4 e4     ................
    71e1:	e4 ad a4 a4 ad f6 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    71f1:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7201:	ff e4 e4 ff ff e4 e4 ff ff e4 e4 e4 ff e4 ff ff     ................
    7211:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4     ................
    7221:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7231:	ff e4 e4 e4 ff ff e4 ff e4 ff e4 e4 ff e4 ff e4     ................
    7241:	e4 ff e4 e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4     ................
    7251:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7261:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7271:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7281:	ff e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7291:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    72a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4     ................
    72b1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    72c1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    72d1:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4     ................
    72e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    72f1:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7301:	e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    7311:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7321:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 ff ff ff ff     ................
    7331:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7341:	ff ff e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4     ................
    7351:	e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4     ................
    7361:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7371:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7381:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7391:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    73a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff e4     ................
    73b1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    73c1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    73d1:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    73e1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff ff     ................
    73f1:	ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7401:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7411:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7421:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff e4 e4 ff ff     ................
    7431:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7441:	ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7451:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 e4 ff ff     ................
    7461:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7471:	e4 ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7481:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7491:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    74a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    74b1:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    74c1:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    74d1:	e4 e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    74e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    74f1:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7501:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7511:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7521:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7531:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7541:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7551:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    7561:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff e4     ................
    7571:	e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff     ................
    7581:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4     ................
    7591:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4     ................
    75a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4     ................
    75b1:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4     ................
    75c1:	e4 ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 ff     ................
    75d1:	ff ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4     ................
    75e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    75f1:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7601:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7611:	e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7621:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff     ................
    7631:	e4 ff e4 e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7641:	ff e4 ff e4 e4 e4 ff e4 ff ff ff ff e4 e4 ff e4     ................
    7651:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    7661:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    7671:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7681:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7691:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    76a1:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    76b1:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4     ................
    76c1:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff ff ff     ................
    76d1:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    76e1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4     ................
    76f1:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7701:	ff e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    7711:	e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    7721:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    7731:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7741:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7751:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7761:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff e4 ff e4     ................
    7771:	ff ff e4 e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7781:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 ff ff e4 ff e4     ................
    7791:	ff e4 e4 ff ff e4 e4 e4 ff e4 e4 e4 ff e4 ff e4     ................
    77a1:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    77b1:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f 0f e4 e4     ................
    77c1:	e4 e4 0f 0c 0c 0f e4 e4 e4 0f 0f 0c 0c 0f 0f e4     ................
    77d1:	e4 0f 0c 0c 0c 0c 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    77e1:	0f 0f 0c 0c 0c 0c 0f 0f e4 ad a4 a4 a4 ad f6 e4     ................
    77f1:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7801:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7811:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
	...

00007829 <spike1>:
    7829:	01 02 aa c3                                         ....

0000782d <spike0>:
    782d:	01 02 a9 c2                                         ....

00007831 <congra0>:
    7831:	0a 01 b8 b9 ba bb bc bd be bf c0 c1                 ............

0000783d <timeup0>:
    783d:	06 01 b2 b3 b4 b5 b6 b7                             ........

00007845 <over0>:
    7845:	07 01 ab ac ad ae af b0 b1                          .........

0000784e <press0>:
    784e:	08 01 a3 a4 9f 91 a5 a6 a7 a8                       ..........

00007858 <time0>:
    7858:	03 01 a0 a1 a2                                      .....

0000785d <live0>:
    785d:	03 01 9e 94 9f                                      .....

00007862 <get0>:
    7862:	07 01 97 98 99 9a 9b 9c 9d                          .........

0000786b <x0>:
    786b:	01 01 96                                            ...

0000786e <level0>:
    786e:	04 01 92 93 94 95                                   ......

00007874 <bonus0>:
    7874:	04 01 8e 8f 90 91                                   ......

0000787a <score0>:
    787a:	04 01 8a 8b 8c 8d                                   ......

00007880 <nm>:
    7880:	01 01 89                                            ...

00007883 <n9>:
    7883:	01 01 88                                            ...

00007886 <n8>:
    7886:	01 01 87                                            ...

00007889 <n7>:
    7889:	01 01 86                                            ...

0000788c <n6>:
    788c:	01 01 85                                            ...

0000788f <n5>:
    788f:	01 01 84                                            ...

00007892 <n4>:
    7892:	01 01 83                                            ...

00007895 <n3>:
    7895:	01 01 82                                            ...

00007898 <n2>:
    7898:	01 01 81                                            ...

0000789b <n1>:
    789b:	01 01 80                                            ...

0000789e <n0>:
    789e:	01 01 7f                                            ...

000078a1 <nb>:
    78a1:	01 01 12                                            ...

000078a4 <bridge3>:
    78a4:	01 01 6e                                            ..n

000078a7 <bridge2>:
    78a7:	01 01 6d                                            ..m

000078aa <bridge1>:
    78aa:	01 01 6c                                            ..l

000078ad <bridge0>:
    78ad:	01 01 6b                                            ..k

000078b0 <water3>:
    78b0:	02 02 67 68 7d 7e                                   ..gh}~

000078b6 <water2>:
    78b6:	02 02 65 66 7b 7c                                   ..ef{|

000078bc <water1>:
    78bc:	02 02 39 3a 51 52                                   ..9:QR

000078c2 <water0>:
    78c2:	02 02 37 38 4f 50                                   ..78OP

000078c8 <tube5>:
    78c8:	02 02 5f 60 75 76                                   .._`uv

000078ce <tube4>:
    78ce:	02 02 31 32 49 4a                                   ..12IJ

000078d4 <tube3>:
    78d4:	02 02 63 64 79 7a                                   ..cdyz

000078da <tube2>:
    78da:	02 02 61 62 77 78                                   ..abwx

000078e0 <tube1>:
    78e0:	02 02 35 36 4d 4e                                   ..56MN

000078e6 <tube0>:
    78e6:	02 02 33 34 4b 4c                                   ..34KL

000078ec <cloud3>:
    78ec:	02 02 5d 5e 73 74                                   ..]^st

000078f2 <cloud2>:
    78f2:	02 02 5b 5c 71 72                                   ..[\qr

000078f8 <cloud1>:
    78f8:	02 02 30 12 47 48                                   ..0.GH

000078fe <cloud0>:
    78fe:	02 02 2e 2f 45 46                                   .../EF

00007904 <fireground>:
    7904:	02 02 09 0a 1c 1d                                   ......

0000790a <blackblock>:
    790a:	02 02 53 54 69 6a                                   ..STij

00007910 <lilblack>:
    7910:	01 01 10                                            ...

00007913 <black>:
    7913:	02 02 10 10 10 10                                   ......

00007919 <fire2>:
    7919:	02 02 26 27 3d 3e                                   ..&'=>

0000791f <fire1>:
    791f:	02 02 24 25 3b 3c                                   ..$%;<

00007925 <blue>:
    7925:	01 01 12                                            ...

00007928 <banana2>:
    7928:	02 01 6f 70                                         ..op

0000792c <banana>:
    792c:	02 02 43 44 59 5a                                   ..CDYZ

00007932 <diamond0>:
    7932:	02 02 41 42 57 58                                   ..ABWX

00007938 <block3>:
    7938:	02 02 08 08 1b 1b                                   ......

0000793e <block2>:
    793e:	02 02 3f 40 55 56                                   ..?@UV

00007944 <door3>:
    7944:	02 02 10 11 10 23                                   .....#

0000794a <door2>:
    794a:	02 02 0f 10 22 10                                   ....".

00007950 <door1>:
    7950:	02 02 0d 0e 20 21                                   .... !

00007956 <door0>:
    7956:	02 02 0b 0c 1e 1f                                   ......

0000795c <block5>:
    795c:	02 02 0a 08 1d 1b                                   ......

00007962 <block4>:
    7962:	02 02 08 09 1b 1c                                   ......

00007968 <ground3>:
    7968:	02 03 07 06 1a 19 2c 2b                             ......,+

00007970 <ground2>:
    7970:	02 03 07 05 1a 18 2c 2d                             ......,-

00007978 <ground1>:
    7978:	02 03 04 06 17 19 2a 2b                             ......*+

00007980 <ground>:
    7980:	02 03 04 05 17 18 28 29                             ......()

00007988 <block1>:
    7988:	02 02 02 03 15 16                                   ......

0000798e <block0>:
    798e:	02 02 00 01 13 14                                   ......

00007994 <bigblue0>:
    7994:	02 02 12 12 12 12                                   ......

0000799a <__ctors_end>:
    799a:	11 24       	eor	r1, r1
    799c:	1f be       	out	0x3f, r1	; 63
    799e:	cf ef       	ldi	r28, 0xFF	; 255
    79a0:	d0 e1       	ldi	r29, 0x10	; 16
    79a2:	de bf       	out	0x3e, r29	; 62
    79a4:	cd bf       	out	0x3d, r28	; 61

000079a6 <__do_copy_data>:
    79a6:	11 e0       	ldi	r17, 0x01	; 1
    79a8:	a0 e0       	ldi	r26, 0x00	; 0
    79aa:	b1 e0       	ldi	r27, 0x01	; 1
    79ac:	e0 e3       	ldi	r30, 0x30	; 48
    79ae:	f5 ed       	ldi	r31, 0xD5	; 213
    79b0:	02 c0       	rjmp	.+4      	; 0x79b6 <__do_copy_data+0x10>
    79b2:	05 90       	lpm	r0, Z+
    79b4:	0d 92       	st	X+, r0
    79b6:	a2 30       	cpi	r26, 0x02	; 2
    79b8:	b1 07       	cpc	r27, r17
    79ba:	d9 f7       	brne	.-10     	; 0x79b2 <__do_copy_data+0xc>

000079bc <__do_clear_bss>:
    79bc:	2a e0       	ldi	r18, 0x0A	; 10
    79be:	a2 e0       	ldi	r26, 0x02	; 2
    79c0:	b1 e0       	ldi	r27, 0x01	; 1
    79c2:	01 c0       	rjmp	.+2      	; 0x79c6 <.do_clear_bss_start>

000079c4 <.do_clear_bss_loop>:
    79c4:	1d 92       	st	X+, r1

000079c6 <.do_clear_bss_start>:
    79c6:	a0 39       	cpi	r26, 0x90	; 144
    79c8:	b2 07       	cpc	r27, r18
    79ca:	e1 f7       	brne	.-8      	; 0x79c4 <.do_clear_bss_loop>

000079cc <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    79cc:	14 be       	out	0x34, r1	; 52
    79ce:	0f b6       	in	r0, 0x3f	; 63
    79d0:	f8 94       	cli
    79d2:	a8 95       	wdr
    79d4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    79d8:	88 61       	ori	r24, 0x18	; 24
    79da:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    79de:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    79e2:	0f be       	out	0x3f, r0	; 63

000079e4 <Initialize>:
    79e4:	f8 94       	cli
    79e6:	80 e7       	ldi	r24, 0x70	; 112
    79e8:	90 e0       	ldi	r25, 0x00	; 0
    79ea:	42 ea       	ldi	r20, 0xA2	; 162
    79ec:	50 e0       	ldi	r21, 0x00	; 0
    79ee:	fc 01       	movw	r30, r24
    79f0:	25 91       	lpm	r18, Z+
    79f2:	34 91       	lpm	r19, Z
    79f4:	f9 01       	movw	r30, r18
    79f6:	ff 27       	eor	r31, r31
    79f8:	30 83       	st	Z, r19
    79fa:	02 96       	adiw	r24, 0x02	; 2
    79fc:	48 17       	cp	r20, r24
    79fe:	59 07       	cpc	r21, r25
    7a00:	b1 f7       	brne	.-20     	; 0x79ee <Initialize+0xa>
    7a02:	0e 94 ea 42 	call	0x85d4	; 0x85d4 <isEepromFormatted>
    7a06:	81 11       	cpse	r24, r1
    7a08:	02 c0       	rjmp	.+4      	; 0x7a0e <Initialize+0x2a>
    7a0a:	0e 94 c8 42 	call	0x8590	; 0x8590 <FormatEeprom>
    7a0e:	81 e0       	ldi	r24, 0x01	; 1
    7a10:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
    7a14:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_barrel_hi>
    7a18:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    7a1c:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <mixer>
    7a20:	10 92 7c 08 	sts	0x087C, r1	; 0x80087c <tr2_vol>
    7a24:	10 92 82 08 	sts	0x0882, r1	; 0x800882 <tr3_vol>
    7a28:	10 92 88 08 	sts	0x0888, r1	; 0x800888 <tr4_vol>
    7a2c:	10 92 8e 08 	sts	0x088E, r1	; 0x80088e <tr5_vol>
    7a30:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <sync_phase>
    7a34:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_flags>
    7a38:	92 e1       	ldi	r25, 0x12	; 18
    7a3a:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <sync_pulse>
    7a3e:	90 ee       	ldi	r25, 0xE0	; 224
    7a40:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <render_lines_count>
    7a44:	98 e1       	ldi	r25, 0x18	; 24
    7a46:	90 93 67 08 	sts	0x0867, r25	; 0x800867 <first_render_line>
    7a4a:	10 92 6c 08 	sts	0x086C, r1	; 0x80086c <joypad1_status_hi+0x1>
    7a4e:	10 92 6b 08 	sts	0x086B, r1	; 0x80086b <joypad1_status_hi>
    7a52:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <joypad2_status_hi+0x1>
    7a56:	10 92 6f 08 	sts	0x086F, r1	; 0x80086f <joypad2_status_hi>
    7a5a:	80 93 75 08 	sts	0x0875, r24	; 0x800875 <sound_enabled>
    7a5e:	0e 94 ae 4e 	call	0x9d5c	; 0x9d5c <InitializeVideoMode>
    7a62:	78 94       	sei
    7a64:	0e 94 18 4f 	call	0x9e30	; 0x9e30 <DisplayLogo>
    7a68:	0e 94 34 68 	call	0xd068	; 0xd068 <main>
    7a6c:	0c 94 96 6a 	jmp	0xd52c	; 0xd52c <_exit>

00007a70 <__bad_interrupt>:
    7a70:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00007a74 <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    7a74:	03 e8       	ldi	r16, 0x83	; 131
    7a76:	0a 95       	dec	r16
    7a78:	f1 f7       	brne	.-4      	; 0x7a76 <sub_video_mode3+0x2>
    7a7a:	00 c0       	rjmp	.+0      	; 0x7a7c <sub_video_mode3+0x8>
    7a7c:	00 91 4c 08 	lds	r16, 0x084C	; 0x80084c <user_ram_tiles_c>
    7a80:	ea ef       	ldi	r30, 0xFA	; 250
    7a82:	f7 e0       	ldi	r31, 0x07	; 7
    7a84:	23 e0       	ldi	r18, 0x03	; 3
    7a86:	02 9f       	mul	r16, r18
    7a88:	e0 0d       	add	r30, r0
    7a8a:	f1 1d       	adc	r31, r1
    7a8c:	20 91 4b 08 	lds	r18, 0x084B	; 0x80084b <free_tile_index>
    7a90:	3c e3       	ldi	r19, 0x3C	; 60
    7a92:	32 1b       	sub	r19, r18
    7a94:	30 0f       	add	r19, r16
    7a96:	20 17       	cp	r18, r16
    7a98:	51 f0       	breq	.+20     	; 0x7aae <no_ramtiles>
    7a9a:	00 00       	nop
	...

00007a9e <upd_loop>:
    7a9e:	a1 91       	ld	r26, Z+
    7aa0:	b1 91       	ld	r27, Z+
    7aa2:	1c 91       	ld	r17, X
    7aa4:	11 93       	st	Z+, r17
    7aa6:	0c 93       	st	X, r16
    7aa8:	03 95       	inc	r16
    7aaa:	02 17       	cp	r16, r18
    7aac:	c0 f3       	brcs	.-16     	; 0x7a9e <upd_loop>

00007aae <no_ramtiles>:
    7aae:	13 e0       	ldi	r17, 0x03	; 3
    7ab0:	1a 95       	dec	r17
    7ab2:	f1 f7       	brne	.-4      	; 0x7ab0 <no_ramtiles+0x2>
    7ab4:	00 c0       	rjmp	.+0      	; 0x7ab6 <no_ramtiles+0x8>
    7ab6:	3a 95       	dec	r19
    7ab8:	d1 f7       	brne	.-12     	; 0x7aae <no_ramtiles>
    7aba:	c0 e0       	ldi	r28, 0x00	; 0
    7abc:	db e0       	ldi	r29, 0x0B	; 11
    7abe:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    7ac2:	92 2f       	mov	r25, r18
    7ac4:	28 7f       	andi	r18, 0xF8	; 248
    7ac6:	c2 0f       	add	r28, r18
    7ac8:	6e 01       	movw	r12, r28
    7aca:	00 91 5d 08 	lds	r16, 0x085D	; 0x80085d <screen_scrollY>
    7ace:	60 2f       	mov	r22, r16
    7ad0:	06 95       	lsr	r16
    7ad2:	06 95       	lsr	r16
    7ad4:	06 95       	lsr	r16
    7ad6:	10 91 5e 08 	lds	r17, 0x085E	; 0x80085e <screen_scrollHeight>
    7ada:	10 1b       	sub	r17, r16
    7adc:	f1 2e       	mov	r15, r17
    7ade:	10 2f       	mov	r17, r16
    7ae0:	06 95       	lsr	r16
    7ae2:	06 95       	lsr	r16
    7ae4:	06 95       	lsr	r16
    7ae6:	d0 0f       	add	r29, r16
    7ae8:	17 70       	andi	r17, 0x07	; 7
    7aea:	c1 0f       	add	r28, r17
    7aec:	67 70       	andi	r22, 0x07	; 7
    7aee:	40 91 5a 08 	lds	r20, 0x085A	; 0x80085a <overlay_tile_table>
    7af2:	50 91 5b 08 	lds	r21, 0x085B	; 0x80085b <overlay_tile_table+0x1>
    7af6:	60 90 56 08 	lds	r6, 0x0856	; 0x800856 <tile_table_lo>
    7afa:	70 90 57 08 	lds	r7, 0x0857	; 0x800857 <tile_table_hi>
    7afe:	d3 01       	movw	r26, r6
    7b00:	5e 01       	movw	r10, r28
    7b02:	76 2f       	mov	r23, r22
    7b04:	8f 2d       	mov	r24, r15
    7b06:	99 2e       	mov	r9, r25
    7b08:	00 91 5e 08 	lds	r16, 0x085E	; 0x80085e <screen_scrollHeight>
    7b0c:	20 2f       	mov	r18, r16
    7b0e:	06 95       	lsr	r16
    7b10:	06 95       	lsr	r16
    7b12:	06 95       	lsr	r16
    7b14:	03 95       	inc	r16
    7b16:	27 70       	andi	r18, 0x07	; 7
    7b18:	30 91 59 08 	lds	r19, 0x0859	; 0x800859 <Screen>
    7b1c:	30 30       	cpi	r19, 0x00	; 0
    7b1e:	0f b6       	in	r0, 0x3f	; 63
    7b20:	01 fe       	sbrs	r0, 1
    7b22:	66 27       	eor	r22, r22
    7b24:	01 fe       	sbrs	r0, 1
    7b26:	c2 2f       	mov	r28, r18
    7b28:	01 fe       	sbrs	r0, 1
    7b2a:	d0 2f       	mov	r29, r16
    7b2c:	01 fe       	sbrs	r0, 1
    7b2e:	8f ef       	ldi	r24, 0xFF	; 255
    7b30:	01 fe       	sbrs	r0, 1
    7b32:	99 24       	eor	r9, r9
    7b34:	01 fe       	sbrs	r0, 1
    7b36:	da 01       	movw	r26, r20
    7b38:	80 90 68 08 	lds	r8, 0x0868	; 0x800868 <render_lines_count>
    7b3c:	07 e0       	ldi	r16, 0x07	; 7
    7b3e:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7b42:	01 e0       	ldi	r16, 0x01	; 1
    7b44:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7b48:	01 e0       	ldi	r16, 0x01	; 1
    7b4a:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00007b4e <next_tile_line>:
    7b4e:	08 e0       	ldi	r16, 0x08	; 8
    7b50:	60 9f       	mul	r22, r16
    7b52:	8d 01       	movw	r16, r26
    7b54:	00 5c       	subi	r16, 0xC0	; 192
    7b56:	16 40       	sbci	r17, 0x06	; 6
    7b58:	00 0d       	add	r16, r0
    7b5a:	11 1d       	adc	r17, r1
    7b5c:	18 01       	movw	r2, r16
    7b5e:	0a e3       	ldi	r16, 0x3A	; 58
    7b60:	11 e0       	ldi	r17, 0x01	; 1
    7b62:	00 0d       	add	r16, r0
    7b64:	11 1d       	adc	r17, r1
    7b66:	28 01       	movw	r4, r16
    7b68:	00 e4       	ldi	r16, 0x40	; 64
    7b6a:	e0 2e       	mov	r14, r16
    7b6c:	03 e9       	ldi	r16, 0x93	; 147
    7b6e:	1a ef       	ldi	r17, 0xFA	; 250
    7b70:	cf 93       	push	r28
    7b72:	df 93       	push	r29
    7b74:	58 81       	ld	r21, Y
    7b76:	c8 5f       	subi	r28, 0xF8	; 248
    7b78:	48 81       	ld	r20, Y
    7b7a:	c8 5f       	subi	r28, 0xF8	; 248
    7b7c:	a5 d3       	rcall	.+1866   	; 0x82c8 <hsync_pulse>
    7b7e:	2c e0       	ldi	r18, 0x0C	; 12
    7b80:	2a 95       	dec	r18
    7b82:	f1 f7       	brne	.-4      	; 0x7b80 <next_tile_line+0x32>
    7b84:	20 e1       	ldi	r18, 0x10	; 16
    7b86:	2a 95       	dec	r18
    7b88:	f1 f7       	brne	.-4      	; 0x7b86 <next_tile_line+0x38>
    7b8a:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7b8e:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7b92:	78 94       	sei
    7b94:	00 27       	eor	r16, r16
    7b96:	5e 9d       	mul	r21, r14
    7b98:	5b 31       	cpi	r21, 0x1B	; 27
    7b9a:	f1 01       	movw	r30, r2
    7b9c:	08 f4       	brcc	.+2      	; 0x7ba0 <next_tile_line+0x52>
    7b9e:	f2 01       	movw	r30, r4
    7ba0:	00 1f       	adc	r16, r16
    7ba2:	e0 0d       	add	r30, r0
    7ba4:	f1 1d       	adc	r31, r1
    7ba6:	29 2d       	mov	r18, r9
    7ba8:	27 70       	andi	r18, 0x07	; 7
    7baa:	11 24       	eor	r1, r1
    7bac:	e2 0f       	add	r30, r18
    7bae:	f1 1d       	adc	r31, r1
    7bb0:	4e 9d       	mul	r20, r14
    7bb2:	4b 31       	cpi	r20, 0x1B	; 27
    7bb4:	a1 01       	movw	r20, r2
    7bb6:	08 f4       	brcc	.+2      	; 0x7bba <next_tile_line+0x6c>
    7bb8:	a2 01       	movw	r20, r4
    7bba:	00 1f       	adc	r16, r16
    7bbc:	40 0d       	add	r20, r0
    7bbe:	51 1d       	adc	r21, r1
    7bc0:	1a e1       	ldi	r17, 0x1A	; 26
    7bc2:	01 9f       	mul	r16, r17
    7bc4:	00 2d       	mov	r16, r0
    7bc6:	13 e0       	ldi	r17, 0x03	; 3
    7bc8:	21 9f       	mul	r18, r17
    7bca:	11 27       	eor	r17, r17
    7bcc:	09 5c       	subi	r16, 0xC9	; 201
    7bce:	11 4c       	sbci	r17, 0xC1	; 193
    7bd0:	00 0e       	add	r0, r16
    7bd2:	11 1e       	adc	r1, r17
    7bd4:	11 27       	eor	r17, r17
    7bd6:	0f 92       	push	r0
    7bd8:	1f 92       	push	r1
    7bda:	08 95       	ret

00007bdc <__vector_15>:
    7bdc:	18 b9       	out	0x08, r17	; 8
    7bde:	0f 90       	pop	r0
    7be0:	0f 90       	pop	r0
    7be2:	df 91       	pop	r29
    7be4:	cf 91       	pop	r28
    7be6:	03 e1       	ldi	r16, 0x13	; 19
    7be8:	0a 95       	dec	r16
    7bea:	f1 f7       	brne	.-4      	; 0x7be8 <__vector_15+0xc>
    7bec:	00 c0       	rjmp	.+0      	; 0x7bee <__vector_15+0x12>
    7bee:	63 95       	inc	r22
    7bf0:	8a 94       	dec	r8
    7bf2:	f9 f0       	breq	.+62     	; 0x7c32 <text_frame_end>
    7bf4:	68 30       	cpi	r22, 0x08	; 8
    7bf6:	29 f0       	breq	.+10     	; 0x7c02 <next_tile_row>
    7bf8:	07 e0       	ldi	r16, 0x07	; 7
    7bfa:	0a 95       	dec	r16
    7bfc:	f1 f7       	brne	.-4      	; 0x7bfa <__vector_15+0x1e>
    7bfe:	00 c0       	rjmp	.+0      	; 0x7c00 <__vector_15+0x24>
    7c00:	a6 cf       	rjmp	.-180    	; 0x7b4e <next_tile_line>

00007c02 <next_tile_row>:
    7c02:	66 27       	eor	r22, r22
    7c04:	0c 2f       	mov	r16, r28
    7c06:	07 70       	andi	r16, 0x07	; 7
    7c08:	07 30       	cpi	r16, 0x07	; 7
    7c0a:	11 f0       	breq	.+4      	; 0x7c10 <next_tile_row+0xe>
    7c0c:	c3 95       	inc	r28
    7c0e:	02 c0       	rjmp	.+4      	; 0x7c14 <next_tile_row+0x12>
    7c10:	c8 7f       	andi	r28, 0xF8	; 248
    7c12:	d3 95       	inc	r29
    7c14:	8a 95       	dec	r24
    7c16:	09 f4       	brne	.+2      	; 0x7c1a <next_tile_row+0x18>
    7c18:	e6 01       	movw	r28, r12
    7c1a:	3a 95       	dec	r19
    7c1c:	09 f4       	brne	.+2      	; 0x7c20 <next_tile_row+0x1e>
    7c1e:	67 2f       	mov	r22, r23
    7c20:	09 f4       	brne	.+2      	; 0x7c24 <next_tile_row+0x22>
    7c22:	e5 01       	movw	r28, r10
    7c24:	09 f4       	brne	.+2      	; 0x7c28 <next_tile_row+0x26>
    7c26:	8f 2d       	mov	r24, r15
    7c28:	09 f4       	brne	.+2      	; 0x7c2c <next_tile_row+0x2a>
    7c2a:	99 2e       	mov	r9, r25
    7c2c:	09 f4       	brne	.+2      	; 0x7c30 <next_tile_row+0x2e>
    7c2e:	d3 01       	movw	r26, r6
    7c30:	8e cf       	rjmp	.-228    	; 0x7b4e <next_tile_line>

00007c32 <text_frame_end>:
    7c32:	20 e1       	ldi	r18, 0x10	; 16
    7c34:	2a 95       	dec	r18
    7c36:	f1 f7       	brne	.-4      	; 0x7c34 <text_frame_end+0x2>
    7c38:	00 e0       	ldi	r16, 0x00	; 0
    7c3a:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7c3e:	0c e2       	ldi	r16, 0x2C	; 44
    7c40:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7c44:	41 d3       	rcall	.+1666   	; 0x82c8 <hsync_pulse>
    7c46:	11 24       	eor	r1, r1
    7c48:	0e 94 09 40 	call	0x8012	; 0x8012 <RestoreBackground>
    7c4c:	e0 91 62 08 	lds	r30, 0x0862	; 0x800862 <sync_flags>
    7c50:	42 e0       	ldi	r20, 0x02	; 2
    7c52:	e1 60       	ori	r30, 0x01	; 1
    7c54:	e4 27       	eor	r30, r20
    7c56:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_flags>
    7c5a:	07 e0       	ldi	r16, 0x07	; 7
    7c5c:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7c60:	09 e0       	ldi	r16, 0x09	; 9
    7c62:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7c66:	02 e0       	ldi	r16, 0x02	; 2
    7c68:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7c6c:	08 95       	ret

00007c6e <romrom_e>:
    7c6e:	00 c0       	rjmp	.+0      	; 0x7c70 <romrom_e+0x2>
    7c70:	05 91       	lpm	r16, Z+
    7c72:	08 b9       	out	0x08, r16	; 8
    7c74:	00 c0       	rjmp	.+0      	; 0x7c76 <romrom_e+0x8>
    7c76:	05 91       	lpm	r16, Z+
    7c78:	08 b9       	out	0x08, r16	; 8
    7c7a:	00 c0       	rjmp	.+0      	; 0x7c7c <romrom_e+0xe>
    7c7c:	05 91       	lpm	r16, Z+
    7c7e:	08 b9       	out	0x08, r16	; 8
    7c80:	00 c0       	rjmp	.+0      	; 0x7c82 <romrom_e+0x14>
    7c82:	05 91       	lpm	r16, Z+
    7c84:	08 b9       	out	0x08, r16	; 8
    7c86:	00 c0       	rjmp	.+0      	; 0x7c88 <romrom_e+0x1a>
    7c88:	05 91       	lpm	r16, Z+
    7c8a:	08 b9       	out	0x08, r16	; 8
    7c8c:	00 c0       	rjmp	.+0      	; 0x7c8e <romrom_e+0x20>
    7c8e:	05 91       	lpm	r16, Z+
    7c90:	08 b9       	out	0x08, r16	; 8
    7c92:	00 c0       	rjmp	.+0      	; 0x7c94 <romrom_e+0x26>
    7c94:	05 91       	lpm	r16, Z+
    7c96:	08 b9       	out	0x08, r16	; 8
    7c98:	00 00       	nop
    7c9a:	05 91       	lpm	r16, Z+
    7c9c:	fa 01       	movw	r30, r20
    7c9e:	08 b9       	out	0x08, r16	; 8
    7ca0:	56 c0       	rjmp	.+172    	; 0x7d4e <romloop_px0>

00007ca2 <romram_e>:
    7ca2:	00 c0       	rjmp	.+0      	; 0x7ca4 <romram_e+0x2>
    7ca4:	05 91       	lpm	r16, Z+
    7ca6:	08 b9       	out	0x08, r16	; 8
    7ca8:	00 c0       	rjmp	.+0      	; 0x7caa <romram_e+0x8>
    7caa:	05 91       	lpm	r16, Z+
    7cac:	08 b9       	out	0x08, r16	; 8
    7cae:	00 c0       	rjmp	.+0      	; 0x7cb0 <romram_e+0xe>
    7cb0:	05 91       	lpm	r16, Z+
    7cb2:	08 b9       	out	0x08, r16	; 8
    7cb4:	00 c0       	rjmp	.+0      	; 0x7cb6 <romram_e+0x14>
    7cb6:	05 91       	lpm	r16, Z+
    7cb8:	08 b9       	out	0x08, r16	; 8
    7cba:	00 c0       	rjmp	.+0      	; 0x7cbc <romram_e+0x1a>
    7cbc:	05 91       	lpm	r16, Z+
    7cbe:	08 b9       	out	0x08, r16	; 8
    7cc0:	00 c0       	rjmp	.+0      	; 0x7cc2 <romram_e+0x20>
    7cc2:	05 91       	lpm	r16, Z+
    7cc4:	08 b9       	out	0x08, r16	; 8
    7cc6:	00 c0       	rjmp	.+0      	; 0x7cc8 <romram_e+0x26>
    7cc8:	05 91       	lpm	r16, Z+
    7cca:	08 b9       	out	0x08, r16	; 8
    7ccc:	00 00       	nop
    7cce:	05 91       	lpm	r16, Z+
    7cd0:	fa 01       	movw	r30, r20
    7cd2:	08 b9       	out	0x08, r16	; 8
    7cd4:	59 c0       	rjmp	.+178    	; 0x7d88 <ramloop_px0>

00007cd6 <ramrom_e>:
    7cd6:	04 91       	lpm	r16, Z
    7cd8:	01 91       	ld	r16, Z+
    7cda:	08 b9       	out	0x08, r16	; 8
    7cdc:	04 91       	lpm	r16, Z
    7cde:	01 91       	ld	r16, Z+
    7ce0:	08 b9       	out	0x08, r16	; 8
    7ce2:	04 91       	lpm	r16, Z
    7ce4:	01 91       	ld	r16, Z+
    7ce6:	08 b9       	out	0x08, r16	; 8
    7ce8:	04 91       	lpm	r16, Z
    7cea:	01 91       	ld	r16, Z+
    7cec:	08 b9       	out	0x08, r16	; 8
    7cee:	04 91       	lpm	r16, Z
    7cf0:	01 91       	ld	r16, Z+
    7cf2:	08 b9       	out	0x08, r16	; 8
    7cf4:	04 91       	lpm	r16, Z
    7cf6:	01 91       	ld	r16, Z+
    7cf8:	08 b9       	out	0x08, r16	; 8
    7cfa:	04 91       	lpm	r16, Z
    7cfc:	01 91       	ld	r16, Z+
    7cfe:	08 b9       	out	0x08, r16	; 8
    7d00:	00 c0       	rjmp	.+0      	; 0x7d02 <ramrom_e+0x2c>
    7d02:	01 91       	ld	r16, Z+
    7d04:	fa 01       	movw	r30, r20
    7d06:	08 b9       	out	0x08, r16	; 8
    7d08:	22 c0       	rjmp	.+68     	; 0x7d4e <romloop_px0>

00007d0a <ramram_e>:
    7d0a:	04 91       	lpm	r16, Z
    7d0c:	01 91       	ld	r16, Z+
    7d0e:	08 b9       	out	0x08, r16	; 8
    7d10:	04 91       	lpm	r16, Z
    7d12:	01 91       	ld	r16, Z+
    7d14:	08 b9       	out	0x08, r16	; 8
    7d16:	04 91       	lpm	r16, Z
    7d18:	01 91       	ld	r16, Z+
    7d1a:	08 b9       	out	0x08, r16	; 8
    7d1c:	04 91       	lpm	r16, Z
    7d1e:	01 91       	ld	r16, Z+
    7d20:	08 b9       	out	0x08, r16	; 8
    7d22:	04 91       	lpm	r16, Z
    7d24:	01 91       	ld	r16, Z+
    7d26:	08 b9       	out	0x08, r16	; 8
    7d28:	04 91       	lpm	r16, Z
    7d2a:	01 91       	ld	r16, Z+
    7d2c:	08 b9       	out	0x08, r16	; 8
    7d2e:	04 91       	lpm	r16, Z
    7d30:	01 91       	ld	r16, Z+
    7d32:	08 b9       	out	0x08, r16	; 8
    7d34:	00 c0       	rjmp	.+0      	; 0x7d36 <ramram_e+0x2c>
    7d36:	01 91       	ld	r16, Z+
    7d38:	fa 01       	movw	r30, r20
    7d3a:	08 b9       	out	0x08, r16	; 8
    7d3c:	25 c0       	rjmp	.+74     	; 0x7d88 <ramloop_px0>

00007d3e <romloop>:
    7d3e:	05 91       	lpm	r16, Z+
    7d40:	08 b9       	out	0x08, r16	; 8
    7d42:	02 0c       	add	r0, r2
    7d44:	00 00       	nop
    7d46:	05 91       	lpm	r16, Z+
    7d48:	08 b9       	out	0x08, r16	; 8
    7d4a:	13 1c       	adc	r1, r3
    7d4c:	f0 01       	movw	r30, r0

00007d4e <romloop_px0>:
    7d4e:	05 91       	lpm	r16, Z+
    7d50:	08 b9       	out	0x08, r16	; 8
    7d52:	00 c0       	rjmp	.+0      	; 0x7d54 <romloop_px0+0x6>
    7d54:	05 91       	lpm	r16, Z+
    7d56:	08 b9       	out	0x08, r16	; 8
    7d58:	48 81       	ld	r20, Y
    7d5a:	05 91       	lpm	r16, Z+
    7d5c:	08 b9       	out	0x08, r16	; 8
    7d5e:	c8 5f       	subi	r28, 0xF8	; 248
    7d60:	00 00       	nop
    7d62:	05 91       	lpm	r16, Z+
    7d64:	08 b9       	out	0x08, r16	; 8
    7d66:	4e 9d       	mul	r20, r14
    7d68:	05 91       	lpm	r16, Z+
    7d6a:	08 b9       	out	0x08, r16	; 8
    7d6c:	4b 31       	cpi	r20, 0x1B	; 27
    7d6e:	00 00       	nop
    7d70:	05 91       	lpm	r16, Z+
    7d72:	08 b9       	out	0x08, r16	; 8
    7d74:	20 f7       	brcc	.-56     	; 0x7d3e <romloop>
    7d76:	00 00       	nop
    7d78:	05 91       	lpm	r16, Z+
    7d7a:	08 b9       	out	0x08, r16	; 8
    7d7c:	04 0c       	add	r0, r4
    7d7e:	00 00       	nop
    7d80:	05 91       	lpm	r16, Z+
    7d82:	08 b9       	out	0x08, r16	; 8
    7d84:	15 1c       	adc	r1, r5
    7d86:	f0 01       	movw	r30, r0

00007d88 <ramloop_px0>:
    7d88:	00 00       	nop
    7d8a:	01 91       	ld	r16, Z+
    7d8c:	08 b9       	out	0x08, r16	; 8
    7d8e:	48 81       	ld	r20, Y
    7d90:	00 00       	nop
    7d92:	01 91       	ld	r16, Z+
    7d94:	08 b9       	out	0x08, r16	; 8
    7d96:	c8 5f       	subi	r28, 0xF8	; 248
    7d98:	4e 9d       	mul	r20, r14
    7d9a:	01 91       	ld	r16, Z+
    7d9c:	08 b9       	out	0x08, r16	; 8
    7d9e:	04 91       	lpm	r16, Z
    7da0:	01 91       	ld	r16, Z+
    7da2:	08 b9       	out	0x08, r16	; 8
    7da4:	04 91       	lpm	r16, Z
    7da6:	01 91       	ld	r16, Z+
    7da8:	08 b9       	out	0x08, r16	; 8
    7daa:	4b 31       	cpi	r20, 0x1B	; 27
    7dac:	00 c0       	rjmp	.+0      	; 0x7dae <ramloop_px0+0x26>
    7dae:	01 91       	ld	r16, Z+
    7db0:	08 b9       	out	0x08, r16	; 8
    7db2:	50 f4       	brcc	.+20     	; 0x7dc8 <ramloop_tr>
    7db4:	00 00       	nop
    7db6:	04 0c       	add	r0, r4
    7db8:	01 91       	ld	r16, Z+
    7dba:	08 b9       	out	0x08, r16	; 8
    7dbc:	15 1c       	adc	r1, r5
    7dbe:	00 00       	nop
    7dc0:	01 91       	ld	r16, Z+
    7dc2:	f0 01       	movw	r30, r0
    7dc4:	08 b9       	out	0x08, r16	; 8
    7dc6:	e0 cf       	rjmp	.-64     	; 0x7d88 <ramloop_px0>

00007dc8 <ramloop_tr>:
    7dc8:	02 0c       	add	r0, r2
    7dca:	01 91       	ld	r16, Z+
    7dcc:	08 b9       	out	0x08, r16	; 8
    7dce:	13 1c       	adc	r1, r3
    7dd0:	00 00       	nop
    7dd2:	01 91       	ld	r16, Z+
    7dd4:	f0 01       	movw	r30, r0
    7dd6:	08 b9       	out	0x08, r16	; 8
    7dd8:	ba cf       	rjmp	.-140    	; 0x7d4e <romloop_px0>

00007dda <CopyFlashTile>:
    7dda:	20 e4       	ldi	r18, 0x40	; 64
    7ddc:	e0 91 56 08 	lds	r30, 0x0856	; 0x800856 <tile_table_lo>
    7de0:	f0 91 57 08 	lds	r31, 0x0857	; 0x800857 <tile_table_hi>
    7de4:	82 9f       	mul	r24, r18
    7de6:	e0 0d       	add	r30, r0
    7de8:	f1 1d       	adc	r31, r1
    7dea:	aa e3       	ldi	r26, 0x3A	; 58
    7dec:	b1 e0       	ldi	r27, 0x01	; 1
    7dee:	62 9f       	mul	r22, r18
    7df0:	a0 0d       	add	r26, r0
    7df2:	b1 1d       	adc	r27, r1
    7df4:	15 90       	lpm	r1, Z+
    7df6:	1d 92       	st	X+, r1
    7df8:	15 90       	lpm	r1, Z+
    7dfa:	1d 92       	st	X+, r1
    7dfc:	15 90       	lpm	r1, Z+
    7dfe:	1d 92       	st	X+, r1
    7e00:	15 90       	lpm	r1, Z+
    7e02:	1d 92       	st	X+, r1
    7e04:	15 90       	lpm	r1, Z+
    7e06:	1d 92       	st	X+, r1
    7e08:	15 90       	lpm	r1, Z+
    7e0a:	1d 92       	st	X+, r1
    7e0c:	15 90       	lpm	r1, Z+
    7e0e:	1d 92       	st	X+, r1
    7e10:	15 90       	lpm	r1, Z+
    7e12:	1d 92       	st	X+, r1
    7e14:	15 90       	lpm	r1, Z+
    7e16:	1d 92       	st	X+, r1
    7e18:	15 90       	lpm	r1, Z+
    7e1a:	1d 92       	st	X+, r1
    7e1c:	15 90       	lpm	r1, Z+
    7e1e:	1d 92       	st	X+, r1
    7e20:	15 90       	lpm	r1, Z+
    7e22:	1d 92       	st	X+, r1
    7e24:	15 90       	lpm	r1, Z+
    7e26:	1d 92       	st	X+, r1
    7e28:	15 90       	lpm	r1, Z+
    7e2a:	1d 92       	st	X+, r1
    7e2c:	15 90       	lpm	r1, Z+
    7e2e:	1d 92       	st	X+, r1
    7e30:	15 90       	lpm	r1, Z+
    7e32:	1d 92       	st	X+, r1
    7e34:	15 90       	lpm	r1, Z+
    7e36:	1d 92       	st	X+, r1
    7e38:	15 90       	lpm	r1, Z+
    7e3a:	1d 92       	st	X+, r1
    7e3c:	15 90       	lpm	r1, Z+
    7e3e:	1d 92       	st	X+, r1
    7e40:	15 90       	lpm	r1, Z+
    7e42:	1d 92       	st	X+, r1
    7e44:	15 90       	lpm	r1, Z+
    7e46:	1d 92       	st	X+, r1
    7e48:	15 90       	lpm	r1, Z+
    7e4a:	1d 92       	st	X+, r1
    7e4c:	15 90       	lpm	r1, Z+
    7e4e:	1d 92       	st	X+, r1
    7e50:	15 90       	lpm	r1, Z+
    7e52:	1d 92       	st	X+, r1
    7e54:	15 90       	lpm	r1, Z+
    7e56:	1d 92       	st	X+, r1
    7e58:	15 90       	lpm	r1, Z+
    7e5a:	1d 92       	st	X+, r1
    7e5c:	15 90       	lpm	r1, Z+
    7e5e:	1d 92       	st	X+, r1
    7e60:	15 90       	lpm	r1, Z+
    7e62:	1d 92       	st	X+, r1
    7e64:	15 90       	lpm	r1, Z+
    7e66:	1d 92       	st	X+, r1
    7e68:	15 90       	lpm	r1, Z+
    7e6a:	1d 92       	st	X+, r1
    7e6c:	15 90       	lpm	r1, Z+
    7e6e:	1d 92       	st	X+, r1
    7e70:	15 90       	lpm	r1, Z+
    7e72:	1d 92       	st	X+, r1
    7e74:	15 90       	lpm	r1, Z+
    7e76:	1d 92       	st	X+, r1
    7e78:	15 90       	lpm	r1, Z+
    7e7a:	1d 92       	st	X+, r1
    7e7c:	15 90       	lpm	r1, Z+
    7e7e:	1d 92       	st	X+, r1
    7e80:	15 90       	lpm	r1, Z+
    7e82:	1d 92       	st	X+, r1
    7e84:	15 90       	lpm	r1, Z+
    7e86:	1d 92       	st	X+, r1
    7e88:	15 90       	lpm	r1, Z+
    7e8a:	1d 92       	st	X+, r1
    7e8c:	15 90       	lpm	r1, Z+
    7e8e:	1d 92       	st	X+, r1
    7e90:	15 90       	lpm	r1, Z+
    7e92:	1d 92       	st	X+, r1
    7e94:	15 90       	lpm	r1, Z+
    7e96:	1d 92       	st	X+, r1
    7e98:	15 90       	lpm	r1, Z+
    7e9a:	1d 92       	st	X+, r1
    7e9c:	15 90       	lpm	r1, Z+
    7e9e:	1d 92       	st	X+, r1
    7ea0:	15 90       	lpm	r1, Z+
    7ea2:	1d 92       	st	X+, r1
    7ea4:	15 90       	lpm	r1, Z+
    7ea6:	1d 92       	st	X+, r1
    7ea8:	15 90       	lpm	r1, Z+
    7eaa:	1d 92       	st	X+, r1
    7eac:	15 90       	lpm	r1, Z+
    7eae:	1d 92       	st	X+, r1
    7eb0:	15 90       	lpm	r1, Z+
    7eb2:	1d 92       	st	X+, r1
    7eb4:	15 90       	lpm	r1, Z+
    7eb6:	1d 92       	st	X+, r1
    7eb8:	15 90       	lpm	r1, Z+
    7eba:	1d 92       	st	X+, r1
    7ebc:	15 90       	lpm	r1, Z+
    7ebe:	1d 92       	st	X+, r1
    7ec0:	15 90       	lpm	r1, Z+
    7ec2:	1d 92       	st	X+, r1
    7ec4:	15 90       	lpm	r1, Z+
    7ec6:	1d 92       	st	X+, r1
    7ec8:	15 90       	lpm	r1, Z+
    7eca:	1d 92       	st	X+, r1
    7ecc:	15 90       	lpm	r1, Z+
    7ece:	1d 92       	st	X+, r1
    7ed0:	15 90       	lpm	r1, Z+
    7ed2:	1d 92       	st	X+, r1
    7ed4:	15 90       	lpm	r1, Z+
    7ed6:	1d 92       	st	X+, r1
    7ed8:	15 90       	lpm	r1, Z+
    7eda:	1d 92       	st	X+, r1
    7edc:	15 90       	lpm	r1, Z+
    7ede:	1d 92       	st	X+, r1
    7ee0:	15 90       	lpm	r1, Z+
    7ee2:	1d 92       	st	X+, r1
    7ee4:	15 90       	lpm	r1, Z+
    7ee6:	1d 92       	st	X+, r1
    7ee8:	15 90       	lpm	r1, Z+
    7eea:	1d 92       	st	X+, r1
    7eec:	15 90       	lpm	r1, Z+
    7eee:	1d 92       	st	X+, r1
    7ef0:	15 90       	lpm	r1, Z+
    7ef2:	1d 92       	st	X+, r1
    7ef4:	11 24       	eor	r1, r1
    7ef6:	08 95       	ret

00007ef8 <CopyRamTile>:
    7ef8:	20 e4       	ldi	r18, 0x40	; 64
    7efa:	ea e3       	ldi	r30, 0x3A	; 58
    7efc:	f1 e0       	ldi	r31, 0x01	; 1
    7efe:	82 9f       	mul	r24, r18
    7f00:	e0 0d       	add	r30, r0
    7f02:	f1 1d       	adc	r31, r1
    7f04:	aa e3       	ldi	r26, 0x3A	; 58
    7f06:	b1 e0       	ldi	r27, 0x01	; 1
    7f08:	62 9f       	mul	r22, r18
    7f0a:	a0 0d       	add	r26, r0
    7f0c:	b1 1d       	adc	r27, r1
    7f0e:	11 90       	ld	r1, Z+
    7f10:	1d 92       	st	X+, r1
    7f12:	11 90       	ld	r1, Z+
    7f14:	1d 92       	st	X+, r1
    7f16:	11 90       	ld	r1, Z+
    7f18:	1d 92       	st	X+, r1
    7f1a:	11 90       	ld	r1, Z+
    7f1c:	1d 92       	st	X+, r1
    7f1e:	11 90       	ld	r1, Z+
    7f20:	1d 92       	st	X+, r1
    7f22:	11 90       	ld	r1, Z+
    7f24:	1d 92       	st	X+, r1
    7f26:	11 90       	ld	r1, Z+
    7f28:	1d 92       	st	X+, r1
    7f2a:	11 90       	ld	r1, Z+
    7f2c:	1d 92       	st	X+, r1
    7f2e:	11 90       	ld	r1, Z+
    7f30:	1d 92       	st	X+, r1
    7f32:	11 90       	ld	r1, Z+
    7f34:	1d 92       	st	X+, r1
    7f36:	11 90       	ld	r1, Z+
    7f38:	1d 92       	st	X+, r1
    7f3a:	11 90       	ld	r1, Z+
    7f3c:	1d 92       	st	X+, r1
    7f3e:	11 90       	ld	r1, Z+
    7f40:	1d 92       	st	X+, r1
    7f42:	11 90       	ld	r1, Z+
    7f44:	1d 92       	st	X+, r1
    7f46:	11 90       	ld	r1, Z+
    7f48:	1d 92       	st	X+, r1
    7f4a:	11 90       	ld	r1, Z+
    7f4c:	1d 92       	st	X+, r1
    7f4e:	11 90       	ld	r1, Z+
    7f50:	1d 92       	st	X+, r1
    7f52:	11 90       	ld	r1, Z+
    7f54:	1d 92       	st	X+, r1
    7f56:	11 90       	ld	r1, Z+
    7f58:	1d 92       	st	X+, r1
    7f5a:	11 90       	ld	r1, Z+
    7f5c:	1d 92       	st	X+, r1
    7f5e:	11 90       	ld	r1, Z+
    7f60:	1d 92       	st	X+, r1
    7f62:	11 90       	ld	r1, Z+
    7f64:	1d 92       	st	X+, r1
    7f66:	11 90       	ld	r1, Z+
    7f68:	1d 92       	st	X+, r1
    7f6a:	11 90       	ld	r1, Z+
    7f6c:	1d 92       	st	X+, r1
    7f6e:	11 90       	ld	r1, Z+
    7f70:	1d 92       	st	X+, r1
    7f72:	11 90       	ld	r1, Z+
    7f74:	1d 92       	st	X+, r1
    7f76:	11 90       	ld	r1, Z+
    7f78:	1d 92       	st	X+, r1
    7f7a:	11 90       	ld	r1, Z+
    7f7c:	1d 92       	st	X+, r1
    7f7e:	11 90       	ld	r1, Z+
    7f80:	1d 92       	st	X+, r1
    7f82:	11 90       	ld	r1, Z+
    7f84:	1d 92       	st	X+, r1
    7f86:	11 90       	ld	r1, Z+
    7f88:	1d 92       	st	X+, r1
    7f8a:	11 90       	ld	r1, Z+
    7f8c:	1d 92       	st	X+, r1
    7f8e:	11 90       	ld	r1, Z+
    7f90:	1d 92       	st	X+, r1
    7f92:	11 90       	ld	r1, Z+
    7f94:	1d 92       	st	X+, r1
    7f96:	11 90       	ld	r1, Z+
    7f98:	1d 92       	st	X+, r1
    7f9a:	11 90       	ld	r1, Z+
    7f9c:	1d 92       	st	X+, r1
    7f9e:	11 90       	ld	r1, Z+
    7fa0:	1d 92       	st	X+, r1
    7fa2:	11 90       	ld	r1, Z+
    7fa4:	1d 92       	st	X+, r1
    7fa6:	11 90       	ld	r1, Z+
    7fa8:	1d 92       	st	X+, r1
    7faa:	11 90       	ld	r1, Z+
    7fac:	1d 92       	st	X+, r1
    7fae:	11 90       	ld	r1, Z+
    7fb0:	1d 92       	st	X+, r1
    7fb2:	11 90       	ld	r1, Z+
    7fb4:	1d 92       	st	X+, r1
    7fb6:	11 90       	ld	r1, Z+
    7fb8:	1d 92       	st	X+, r1
    7fba:	11 90       	ld	r1, Z+
    7fbc:	1d 92       	st	X+, r1
    7fbe:	11 90       	ld	r1, Z+
    7fc0:	1d 92       	st	X+, r1
    7fc2:	11 90       	ld	r1, Z+
    7fc4:	1d 92       	st	X+, r1
    7fc6:	11 90       	ld	r1, Z+
    7fc8:	1d 92       	st	X+, r1
    7fca:	11 90       	ld	r1, Z+
    7fcc:	1d 92       	st	X+, r1
    7fce:	11 90       	ld	r1, Z+
    7fd0:	1d 92       	st	X+, r1
    7fd2:	11 90       	ld	r1, Z+
    7fd4:	1d 92       	st	X+, r1
    7fd6:	11 90       	ld	r1, Z+
    7fd8:	1d 92       	st	X+, r1
    7fda:	11 90       	ld	r1, Z+
    7fdc:	1d 92       	st	X+, r1
    7fde:	11 90       	ld	r1, Z+
    7fe0:	1d 92       	st	X+, r1
    7fe2:	11 90       	ld	r1, Z+
    7fe4:	1d 92       	st	X+, r1
    7fe6:	11 90       	ld	r1, Z+
    7fe8:	1d 92       	st	X+, r1
    7fea:	11 90       	ld	r1, Z+
    7fec:	1d 92       	st	X+, r1
    7fee:	11 90       	ld	r1, Z+
    7ff0:	1d 92       	st	X+, r1
    7ff2:	11 90       	ld	r1, Z+
    7ff4:	1d 92       	st	X+, r1
    7ff6:	11 90       	ld	r1, Z+
    7ff8:	1d 92       	st	X+, r1
    7ffa:	11 90       	ld	r1, Z+
    7ffc:	1d 92       	st	X+, r1
    7ffe:	11 90       	ld	r1, Z+
    8000:	1d 92       	st	X+, r1
    8002:	11 90       	ld	r1, Z+
    8004:	1d 92       	st	X+, r1
    8006:	11 90       	ld	r1, Z+
    8008:	1d 92       	st	X+, r1
    800a:	11 90       	ld	r1, Z+
    800c:	1d 92       	st	X+, r1
    800e:	11 24       	eor	r1, r1
    8010:	08 95       	ret

00008012 <RestoreBackground>:
    8012:	e0 91 4c 08 	lds	r30, 0x084C	; 0x80084c <user_ram_tiles_c>
    8016:	8e 2f       	mov	r24, r30
    8018:	ee 0f       	add	r30, r30
    801a:	e8 0f       	add	r30, r24
    801c:	ff 27       	eor	r31, r31
    801e:	e6 50       	subi	r30, 0x06	; 6
    8020:	f8 4f       	sbci	r31, 0xF8	; 248
    8022:	00 90 4b 08 	lds	r0, 0x084B	; 0x80084b <free_tile_index>
    8026:	80 19       	sub	r24, r0
    8028:	30 f4       	brcc	.+12     	; 0x8036 <rbg_exit>

0000802a <rbg_loop>:
    802a:	a1 91       	ld	r26, Z+
    802c:	b1 91       	ld	r27, Z+
    802e:	01 90       	ld	r0, Z+
    8030:	0c 92       	st	X, r0
    8032:	83 95       	inc	r24
    8034:	d1 f7       	brne	.-12     	; 0x802a <rbg_loop>

00008036 <rbg_exit>:
    8036:	08 95       	ret

00008038 <BlitSpritePart>:
    8038:	98 e0       	ldi	r25, 0x08	; 8
    803a:	79 9f       	mul	r23, r25
    803c:	a1 2d       	mov	r26, r1
    803e:	bb 27       	eor	r27, r27
    8040:	a2 5b       	subi	r26, 0xB2	; 178
    8042:	b7 4f       	sbci	r27, 0xF7	; 247
    8044:	ed 91       	ld	r30, X+
    8046:	fd 91       	ld	r31, X+

00008048 <bsp_send>:
    8048:	90 e4       	ldi	r25, 0x40	; 64
    804a:	69 9f       	mul	r22, r25
    804c:	e0 0d       	add	r30, r0
    804e:	f1 1d       	adc	r31, r1
    8050:	89 9f       	mul	r24, r25
    8052:	d0 01       	movw	r26, r0
    8054:	a6 5c       	subi	r26, 0xC6	; 198
    8056:	be 4f       	sbci	r27, 0xFE	; 254
    8058:	90 e0       	ldi	r25, 0x00	; 0
    805a:	40 fd       	sbrc	r20, 0
    805c:	09 c0       	rjmp	.+18     	; 0x8070 <x_2nd_tile>
    805e:	82 2f       	mov	r24, r18
    8060:	48 e0       	ldi	r20, 0x08	; 8
    8062:	42 1b       	sub	r20, r18
    8064:	70 ff       	sbrs	r23, 0
    8066:	0a c0       	rjmp	.+20     	; 0x807c <x_1st_tile_nxf>
    8068:	17 96       	adiw	r26, 0x07	; 7

0000806a <x_2nd_tile_nxf>:
    806a:	e8 0f       	add	r30, r24
    806c:	f9 1f       	adc	r31, r25
    806e:	08 c0       	rjmp	.+16     	; 0x8080 <x_check_end>

00008070 <x_2nd_tile>:
    8070:	88 e0       	ldi	r24, 0x08	; 8
    8072:	82 1b       	sub	r24, r18
    8074:	42 2f       	mov	r20, r18
    8076:	70 ff       	sbrs	r23, 0
    8078:	f8 cf       	rjmp	.-16     	; 0x806a <x_2nd_tile_nxf>
    807a:	11 97       	sbiw	r26, 0x01	; 1

0000807c <x_1st_tile_nxf>:
    807c:	a2 0f       	add	r26, r18
    807e:	b9 1f       	adc	r27, r25

00008080 <x_check_end>:
    8080:	68 e0       	ldi	r22, 0x08	; 8
    8082:	28 e0       	ldi	r18, 0x08	; 8
    8084:	23 1b       	sub	r18, r19
    8086:	50 fd       	sbrc	r21, 0
    8088:	09 c0       	rjmp	.+18     	; 0x809c <y_2nd_tile>
    808a:	63 9f       	mul	r22, r19
    808c:	a0 0d       	add	r26, r0
    808e:	b1 1d       	adc	r27, r1
    8090:	71 fd       	sbrc	r23, 1
    8092:	e8 5c       	subi	r30, 0xC8	; 200
    8094:	71 fd       	sbrc	r23, 1
    8096:	ff 4f       	sbci	r31, 0xFF	; 255
    8098:	12 2e       	mov	r1, r18
    809a:	08 c0       	rjmp	.+16     	; 0x80ac <y_check_end>

0000809c <y_2nd_tile>:
    809c:	13 2e       	mov	r1, r19
    809e:	1a 94       	dec	r1
    80a0:	71 ff       	sbrs	r23, 1
    80a2:	12 2e       	mov	r1, r18
    80a4:	61 9d       	mul	r22, r1
    80a6:	e0 0d       	add	r30, r0
    80a8:	f1 1d       	adc	r31, r1
    80aa:	13 2e       	mov	r1, r19

000080ac <y_check_end>:
    80ac:	71 fd       	sbrc	r23, 1
    80ae:	40 97       	sbiw	r24, 0x10	; 16
    80b0:	70 fd       	sbrc	r23, 0
    80b2:	05 c0       	rjmp	.+10     	; 0x80be <x_diff_xf>
    80b4:	57 ef       	ldi	r21, 0xF7	; 247
    80b6:	54 0f       	add	r21, r20
    80b8:	70 e0       	ldi	r23, 0x00	; 0
    80ba:	61 e0       	ldi	r22, 0x01	; 1
    80bc:	04 c0       	rjmp	.+8      	; 0x80c6 <x_diff_end>

000080be <x_diff_xf>:
    80be:	59 ef       	ldi	r21, 0xF9	; 249
    80c0:	54 1b       	sub	r21, r20
    80c2:	7f ef       	ldi	r23, 0xFF	; 255
    80c4:	6f ef       	ldi	r22, 0xFF	; 255

000080c6 <x_diff_end>:
    80c6:	3e ef       	ldi	r19, 0xFE	; 254
    80c8:	04 2e       	mov	r0, r20
    80ca:	46 95       	lsr	r20
    80cc:	30 f4       	brcc	.+12     	; 0x80da <x_loop1>
    80ce:	61 f0       	breq	.+24     	; 0x80e8 <x_loopx>

000080d0 <x_loop0>:
    80d0:	25 91       	lpm	r18, Z+
    80d2:	23 13       	cpse	r18, r19
    80d4:	2c 93       	st	X, r18
    80d6:	a6 0f       	add	r26, r22
    80d8:	b7 1f       	adc	r27, r23

000080da <x_loop1>:
    80da:	25 91       	lpm	r18, Z+
    80dc:	23 13       	cpse	r18, r19
    80de:	2c 93       	st	X, r18
    80e0:	a6 0f       	add	r26, r22
    80e2:	b7 1f       	adc	r27, r23
    80e4:	41 50       	subi	r20, 0x01	; 1
    80e6:	a1 f7       	brne	.-24     	; 0x80d0 <x_loop0>

000080e8 <x_loopx>:
    80e8:	25 91       	lpm	r18, Z+
    80ea:	23 13       	cpse	r18, r19
    80ec:	2c 93       	st	X, r18
    80ee:	1a 94       	dec	r1
    80f0:	49 f0       	breq	.+18     	; 0x8104 <loop_e>
    80f2:	e8 0f       	add	r30, r24
    80f4:	f9 1f       	adc	r31, r25
    80f6:	a5 1b       	sub	r26, r21
    80f8:	bf 4f       	sbci	r27, 0xFF	; 255
    80fa:	40 2d       	mov	r20, r0
    80fc:	46 95       	lsr	r20
    80fe:	68 f7       	brcc	.-38     	; 0x80da <x_loop1>
    8100:	39 f7       	brne	.-50     	; 0x80d0 <x_loop0>
    8102:	f2 cf       	rjmp	.-28     	; 0x80e8 <x_loopx>

00008104 <loop_e>:
    8104:	08 95       	ret

00008106 <__vector_13>:
    8106:	0f 92       	push	r0
    8108:	1f 92       	push	r1
    810a:	ef 93       	push	r30
    810c:	ff 93       	push	r31
    810e:	ff b7       	in	r31, 0x3f	; 63
    8110:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8114:	ff 93       	push	r31
    8116:	e2 fd       	sbrc	r30, 2
    8118:	04 c0       	rjmp	.+8      	; 0x8122 <__vector_13+0x1c>
    811a:	e1 fd       	sbrc	r30, 1
    811c:	02 c0       	rjmp	.+4      	; 0x8122 <__vector_13+0x1c>
    811e:	00 00       	nop
    8120:	00 c0       	rjmp	.+0      	; 0x8122 <__vector_13+0x1c>
    8122:	e0 ff       	sbrs	r30, 0
    8124:	00 c0       	rjmp	.+0      	; 0x8126 <__vector_13+0x20>
    8126:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    812a:	ea 95       	dec	r30
    812c:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8130:	f0 91 60 08 	lds	r31, 0x0860	; 0x800860 <sync_phase>
    8134:	f0 fd       	sbrc	r31, 0
    8136:	51 c0       	rjmp	.+162    	; 0x81da <sync_hsync>
    8138:	ec 30       	cpi	r30, 0x0C	; 12
    813a:	98 f0       	brcs	.+38     	; 0x8162 <sync_eq>
    813c:	f3 e0       	ldi	r31, 0x03	; 3
    813e:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8142:	fd e8       	ldi	r31, 0x8D	; 141
    8144:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8148:	e0 fb       	bst	r30, 0
    814a:	28 98       	cbi	0x05, 0	; 5
    814c:	26 f4       	brtc	.+8      	; 0x8156 <sync_pre_eq_no_sound_update>
    814e:	e1 e0       	ldi	r30, 0x01	; 1
    8150:	0e 94 75 41 	call	0x82ea	; 0x82ea <update_sound>
    8154:	b2 c0       	rjmp	.+356    	; 0x82ba <sync_end>

00008156 <sync_pre_eq_no_sound_update>:
    8156:	e5 e1       	ldi	r30, 0x15	; 21
    8158:	ea 95       	dec	r30
    815a:	f1 f7       	brne	.-4      	; 0x8158 <sync_pre_eq_no_sound_update+0x2>
    815c:	00 00       	nop
    815e:	28 9a       	sbi	0x05, 0	; 5
    8160:	ac c0       	rjmp	.+344    	; 0x82ba <sync_end>

00008162 <sync_eq>:
    8162:	e6 30       	cpi	r30, 0x06	; 6
    8164:	08 f1       	brcs	.+66     	; 0x81a8 <sync_post_eq>
    8166:	00 c0       	rjmp	.+0      	; 0x8168 <sync_eq+0x6>
    8168:	00 c0       	rjmp	.+0      	; 0x816a <sync_eq+0x8>
    816a:	28 98       	cbi	0x05, 0	; 5
    816c:	e0 fb       	bst	r30, 0
    816e:	e4 e0       	ldi	r30, 0x04	; 4
    8170:	16 f4       	brtc	.+4      	; 0x8176 <sync_eq_skip>
    8172:	0e 94 75 41 	call	0x82ea	; 0x82ea <update_sound>

00008176 <sync_eq_skip>:
    8176:	e4 e0       	ldi	r30, 0x04	; 4
    8178:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    817c:	e6 e0       	ldi	r30, 0x06	; 6
    817e:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8182:	9b c0       	rjmp	.+310    	; 0x82ba <sync_end>

00008184 <__vector_14>:
    8184:	ef 93       	push	r30
    8186:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    818a:	e2 fd       	sbrc	r30, 2
    818c:	04 c0       	rjmp	.+8      	; 0x8196 <__vector_14+0x12>
    818e:	e1 fd       	sbrc	r30, 1
    8190:	02 c0       	rjmp	.+4      	; 0x8196 <__vector_14+0x12>
    8192:	00 00       	nop
    8194:	00 c0       	rjmp	.+0      	; 0x8196 <__vector_14+0x12>
    8196:	e0 ff       	sbrs	r30, 0
    8198:	00 c0       	rjmp	.+0      	; 0x819a <__vector_14+0x16>
    819a:	e2 e0       	ldi	r30, 0x02	; 2
    819c:	00 00       	nop
    819e:	28 9a       	sbi	0x05, 0	; 5
    81a0:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    81a4:	ef 91       	pop	r30
    81a6:	18 95       	reti

000081a8 <sync_post_eq>:
    81a8:	00 c0       	rjmp	.+0      	; 0x81aa <sync_post_eq+0x2>
    81aa:	e0 fb       	bst	r30, 0
    81ac:	28 98       	cbi	0x05, 0	; 5
    81ae:	26 f4       	brtc	.+8      	; 0x81b8 <sync_post_eq_no_sound_update>
    81b0:	e1 e0       	ldi	r30, 0x01	; 1
    81b2:	0e 94 75 41 	call	0x82ea	; 0x82ea <update_sound>
    81b6:	05 c0       	rjmp	.+10     	; 0x81c2 <sync_pre_eq_cont>

000081b8 <sync_post_eq_no_sound_update>:
    81b8:	e5 e1       	ldi	r30, 0x15	; 21
    81ba:	ea 95       	dec	r30
    81bc:	f1 f7       	brne	.-4      	; 0x81ba <sync_post_eq_no_sound_update+0x2>
    81be:	00 00       	nop
    81c0:	28 9a       	sbi	0x05, 0	; 5

000081c2 <sync_pre_eq_cont>:
    81c2:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    81c6:	e0 30       	cpi	r30, 0x00	; 0
    81c8:	09 f0       	breq	.+2      	; 0x81cc <sync_pre_eq_cont+0xa>
    81ca:	77 c0       	rjmp	.+238    	; 0x82ba <sync_end>
    81cc:	ed ef       	ldi	r30, 0xFD	; 253
    81ce:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    81d2:	e1 e0       	ldi	r30, 0x01	; 1
    81d4:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    81d8:	70 c0       	rjmp	.+224    	; 0x82ba <sync_end>

000081da <sync_hsync>:
    81da:	e7 e0       	ldi	r30, 0x07	; 7
    81dc:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    81e0:	eb e1       	ldi	r30, 0x1B	; 27
    81e2:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    81e6:	00 c0       	rjmp	.+0      	; 0x81e8 <sync_hsync+0xe>
    81e8:	28 98       	cbi	0x05, 0	; 5
    81ea:	e2 e0       	ldi	r30, 0x02	; 2
    81ec:	00 c0       	rjmp	.+0      	; 0x81ee <sync_hsync+0x14>
    81ee:	0e 94 75 41 	call	0x82ea	; 0x82ea <update_sound>
    81f2:	fd ef       	ldi	r31, 0xFD	; 253
    81f4:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    81f8:	f0 19       	sub	r31, r0
    81fa:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    81fe:	ef 17       	cp	r30, r31
    8200:	d8 f4       	brcc	.+54     	; 0x8238 <no_render>
    8202:	fd ef       	ldi	r31, 0xFD	; 253
    8204:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    8208:	f0 19       	sub	r31, r0
    820a:	00 90 68 08 	lds	r0, 0x0868	; 0x800868 <render_lines_count>
    820e:	f0 19       	sub	r31, r0
    8210:	ef 17       	cp	r30, r31
    8212:	90 f0       	brcs	.+36     	; 0x8238 <no_render>
    8214:	ed e1       	ldi	r30, 0x1D	; 29
    8216:	ff 27       	eor	r31, r31

00008218 <push_loop>:
    8218:	00 80       	ld	r0, Z
    821a:	0f 92       	push	r0
    821c:	ea 95       	dec	r30
    821e:	e1 f7       	brne	.-8      	; 0x8218 <push_loop>
    8220:	0d e0       	ldi	r16, 0x0D	; 13
    8222:	0a 95       	dec	r16
    8224:	f1 f7       	brne	.-4      	; 0x8222 <push_loop+0xa>
    8226:	00 c0       	rjmp	.+0      	; 0x8228 <push_loop+0x10>
    8228:	0e 94 3a 3d 	call	0x7a74	; 0x7a74 <sub_video_mode3>
    822c:	e1 e0       	ldi	r30, 0x01	; 1
    822e:	ff 27       	eor	r31, r31

00008230 <pop_loop>:
    8230:	0f 90       	pop	r0
    8232:	01 92       	st	Z+, r0
    8234:	ee 31       	cpi	r30, 0x1E	; 30
    8236:	e0 f3       	brcs	.-8      	; 0x8230 <pop_loop>

00008238 <no_render>:
    8238:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    823c:	e0 30       	cpi	r30, 0x00	; 0
    823e:	09 f0       	breq	.+2      	; 0x8242 <no_render+0xa>
    8240:	3c c0       	rjmp	.+120    	; 0x82ba <sync_end>
    8242:	2f 93       	push	r18
    8244:	3f 93       	push	r19
    8246:	4f 93       	push	r20
    8248:	5f 93       	push	r21
    824a:	6f 93       	push	r22
    824c:	7f 93       	push	r23
    824e:	8f 93       	push	r24
    8250:	9f 93       	push	r25
    8252:	af 93       	push	r26
    8254:	bf 93       	push	r27
    8256:	78 94       	sei
    8258:	11 24       	eor	r1, r1
    825a:	ee 27       	eor	r30, r30
    825c:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    8260:	e2 e1       	ldi	r30, 0x12	; 18
    8262:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8266:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <vsync_counter>
    826a:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <vsync_counter+0x1>
    826e:	01 96       	adiw	r24, 0x01	; 1
    8270:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <vsync_counter>
    8274:	90 93 72 08 	sts	0x0872, r25	; 0x800872 <vsync_counter+0x1>
    8278:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <pre_vsync_user_callback>
    827c:	f0 91 64 08 	lds	r31, 0x0864	; 0x800864 <pre_vsync_user_callback+0x1>
    8280:	e1 15       	cp	r30, r1
    8282:	f1 05       	cpc	r31, r1
    8284:	09 f0       	breq	.+2      	; 0x8288 <no_render+0x50>
    8286:	09 95       	icall
    8288:	0e 94 b8 42 	call	0x8570	; 0x8570 <ReadControllers>
    828c:	0e 94 9a 4f 	call	0x9f34	; 0x9f34 <VideoModeVsync>
    8290:	0e 94 6f 41 	call	0x82de	; 0x82de <process_music>
    8294:	11 24       	eor	r1, r1
    8296:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <post_vsync_user_callback>
    829a:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <post_vsync_user_callback+0x1>
    829e:	e1 15       	cp	r30, r1
    82a0:	f1 05       	cpc	r31, r1
    82a2:	09 f0       	breq	.+2      	; 0x82a6 <no_render+0x6e>
    82a4:	09 95       	icall
    82a6:	bf 91       	pop	r27
    82a8:	af 91       	pop	r26
    82aa:	9f 91       	pop	r25
    82ac:	8f 91       	pop	r24
    82ae:	7f 91       	pop	r23
    82b0:	6f 91       	pop	r22
    82b2:	5f 91       	pop	r21
    82b4:	4f 91       	pop	r20
    82b6:	3f 91       	pop	r19
    82b8:	2f 91       	pop	r18

000082ba <sync_end>:
    82ba:	ef 91       	pop	r30
    82bc:	ef bf       	out	0x3f, r30	; 63
    82be:	ff 91       	pop	r31
    82c0:	ef 91       	pop	r30
    82c2:	1f 90       	pop	r1
    82c4:	0f 90       	pop	r0
    82c6:	18 95       	reti

000082c8 <hsync_pulse>:
    82c8:	28 98       	cbi	0x05, 0	; 5
    82ca:	e2 e0       	ldi	r30, 0x02	; 2
    82cc:	00 c0       	rjmp	.+0      	; 0x82ce <hsync_pulse+0x6>
    82ce:	0e 94 75 41 	call	0x82ea	; 0x82ea <update_sound>
    82d2:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    82d6:	ea 95       	dec	r30
    82d8:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    82dc:	08 95       	ret

000082de <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    82de:	e0 91 75 08 	lds	r30, 0x0875	; 0x800875 <sound_enabled>
    82e2:	e0 fd       	sbrc	r30, 0
    82e4:	0e 94 2d 45 	call	0x8a5a	; 0x8a5a <ProcessMusic>
    82e8:	08 95       	ret

000082ea <update_sound>:
    82ea:	2f 93       	push	r18
    82ec:	1f 93       	push	r17
    82ee:	0f 93       	push	r16
    82f0:	2e 2f       	mov	r18, r30
    82f2:	10 91 79 08 	lds	r17, 0x0879	; 0x800879 <tr1_pos_frac>
    82f6:	e0 91 7a 08 	lds	r30, 0x087A	; 0x80087a <tr1_pos_lo>
    82fa:	f0 91 7b 08 	lds	r31, 0x087B	; 0x80087b <tr1_pos_hi>
    82fe:	00 91 77 08 	lds	r16, 0x0877	; 0x800877 <tr1_step_lo>
    8302:	10 0f       	add	r17, r16
    8304:	00 91 78 08 	lds	r16, 0x0878	; 0x800878 <tr1_step_hi>
    8308:	e0 1f       	adc	r30, r16
    830a:	04 91       	lpm	r16, Z
    830c:	e0 93 7a 08 	sts	0x087A, r30	; 0x80087a <tr1_pos_lo>
    8310:	10 93 79 08 	sts	0x0879, r17	; 0x800879 <tr1_pos_frac>
    8314:	10 91 76 08 	lds	r17, 0x0876	; 0x800876 <mixer>
    8318:	01 03       	mulsu	r16, r17
    831a:	00 08       	sbc	r0, r0
    831c:	10 91 7f 08 	lds	r17, 0x087F	; 0x80087f <tr2_pos_frac>
    8320:	e0 91 80 08 	lds	r30, 0x0880	; 0x800880 <tr2_pos_lo>
    8324:	f0 91 81 08 	lds	r31, 0x0881	; 0x800881 <tr2_pos_hi>
    8328:	00 91 7d 08 	lds	r16, 0x087D	; 0x80087d <tr2_step_lo>
    832c:	10 0f       	add	r17, r16
    832e:	00 91 7e 08 	lds	r16, 0x087E	; 0x80087e <tr2_step_hi>
    8332:	e0 1f       	adc	r30, r16
    8334:	04 91       	lpm	r16, Z
    8336:	e0 93 80 08 	sts	0x0880, r30	; 0x800880 <tr2_pos_lo>
    833a:	10 93 7f 08 	sts	0x087F, r17	; 0x80087f <tr2_pos_frac>
    833e:	f0 01       	movw	r30, r0
    8340:	10 91 7c 08 	lds	r17, 0x087C	; 0x80087c <tr2_vol>
    8344:	01 03       	mulsu	r16, r17
    8346:	00 08       	sbc	r0, r0
    8348:	1f 0e       	add	r1, r31
    834a:	10 91 85 08 	lds	r17, 0x0885	; 0x800885 <tr3_pos_frac>
    834e:	20 fd       	sbrc	r18, 0
    8350:	28 9a       	sbi	0x05, 0	; 5
    8352:	0e 1e       	adc	r0, r30
    8354:	e0 91 86 08 	lds	r30, 0x0886	; 0x800886 <tr3_pos_lo>
    8358:	f0 91 87 08 	lds	r31, 0x0887	; 0x800887 <tr3_pos_hi>
    835c:	00 91 83 08 	lds	r16, 0x0883	; 0x800883 <tr3_step_lo>
    8360:	10 0f       	add	r17, r16
    8362:	00 91 84 08 	lds	r16, 0x0884	; 0x800884 <tr3_step_hi>
    8366:	e0 1f       	adc	r30, r16
    8368:	04 91       	lpm	r16, Z
    836a:	e0 93 86 08 	sts	0x0886, r30	; 0x800886 <tr3_pos_lo>
    836e:	10 93 85 08 	sts	0x0885, r17	; 0x800885 <tr3_pos_frac>
    8372:	f0 01       	movw	r30, r0
    8374:	10 91 82 08 	lds	r17, 0x0882	; 0x800882 <tr3_vol>
    8378:	01 03       	mulsu	r16, r17
    837a:	00 08       	sbc	r0, r0
    837c:	1f 0e       	add	r1, r31
    837e:	0e 1e       	adc	r0, r30
    8380:	00 91 8a 08 	lds	r16, 0x088A	; 0x80088a <tr4_barrel_lo>
    8384:	10 91 8b 08 	lds	r17, 0x088B	; 0x80088b <tr4_barrel_hi>
    8388:	f0 91 88 08 	lds	r31, 0x0888	; 0x800888 <tr4_vol>
    838c:	f6 95       	lsr	r31
    838e:	88 94       	clc
    8390:	00 fd       	sbrc	r16, 0
    8392:	f1 95       	neg	r31
    8394:	ee 0b       	sbc	r30, r30
    8396:	1f 0e       	add	r1, r31
    8398:	0e 1e       	adc	r0, r30
    839a:	e0 91 8c 08 	lds	r30, 0x088C	; 0x80088c <tr4_divider>
    839e:	e2 50       	subi	r30, 0x02	; 2
    83a0:	20 f0       	brcs	.+8      	; 0x83aa <ch4_shift>
    83a2:	e4 91       	lpm	r30, Z
    83a4:	e4 91       	lpm	r30, Z
    83a6:	e4 91       	lpm	r30, Z
    83a8:	0a c0       	rjmp	.+20     	; 0x83be <ch4_end>

000083aa <ch4_shift>:
    83aa:	e0 2f       	mov	r30, r16
    83ac:	16 95       	lsr	r17
    83ae:	07 95       	ror	r16
    83b0:	e0 27       	eor	r30, r16
    83b2:	e0 fb       	bst	r30, 0
    83b4:	16 f9       	bld	r17, 6
    83b6:	e0 91 89 08 	lds	r30, 0x0889	; 0x800889 <tr4_params>
    83ba:	e0 ff       	sbrs	r30, 0
    83bc:	06 f9       	bld	r16, 6

000083be <ch4_end>:
    83be:	00 93 8a 08 	sts	0x088A, r16	; 0x80088a <tr4_barrel_lo>
    83c2:	10 93 8b 08 	sts	0x088B, r17	; 0x80088b <tr4_barrel_hi>
    83c6:	e0 93 8c 08 	sts	0x088C, r30	; 0x80088c <tr4_divider>
    83ca:	10 e0       	ldi	r17, 0x00	; 0
    83cc:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <tr5_pos_frac>
    83d0:	f0 91 8f 08 	lds	r31, 0x088F	; 0x80088f <tr5_step_lo>
    83d4:	21 fd       	sbrc	r18, 1
    83d6:	28 9a       	sbi	0x05, 0	; 5
    83d8:	ef 0f       	add	r30, r31
    83da:	e0 93 91 08 	sts	0x0891, r30	; 0x800891 <tr5_pos_frac>
    83de:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <tr5_pos_lo>
    83e2:	f0 91 93 08 	lds	r31, 0x0893	; 0x800893 <tr5_pos_hi>
    83e6:	00 91 90 08 	lds	r16, 0x0890	; 0x800890 <tr5_step_hi>
    83ea:	e0 1f       	adc	r30, r16
    83ec:	f1 1f       	adc	r31, r17
    83ee:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_end_lo>
    83f2:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_end_hi>
    83f6:	e0 17       	cp	r30, r16
    83f8:	f1 07       	cpc	r31, r17
    83fa:	18 f4       	brcc	.+6      	; 0x8402 <ch5_reset>
    83fc:	04 91       	lpm	r16, Z
    83fe:	00 c0       	rjmp	.+0      	; 0x8400 <ch4_end+0x42>
    8400:	06 c0       	rjmp	.+12     	; 0x840e <ch5_nores>

00008402 <ch5_reset>:
    8402:	00 91 94 08 	lds	r16, 0x0894	; 0x800894 <tr5_loop_len_lo>
    8406:	10 91 95 08 	lds	r17, 0x0895	; 0x800895 <tr5_loop_len_hi>
    840a:	e0 1b       	sub	r30, r16
    840c:	f1 0b       	sbc	r31, r17

0000840e <ch5_nores>:
    840e:	e0 93 92 08 	sts	0x0892, r30	; 0x800892 <tr5_pos_lo>
    8412:	f0 93 93 08 	sts	0x0893, r31	; 0x800893 <tr5_pos_hi>
    8416:	04 91       	lpm	r16, Z
    8418:	f0 01       	movw	r30, r0
    841a:	10 91 8e 08 	lds	r17, 0x088E	; 0x80088e <tr5_vol>
    841e:	01 03       	mulsu	r16, r17
    8420:	00 08       	sbc	r0, r0
    8422:	1f 0e       	add	r1, r31
    8424:	0e 1e       	adc	r0, r30
    8426:	f0 01       	movw	r30, r0
    8428:	0f 91       	pop	r16
    842a:	1f 91       	pop	r17
    842c:	f0 58       	subi	r31, 0x80	; 128
    842e:	ef 4f       	sbci	r30, 0xFF	; 255
    8430:	1a f4       	brpl	.+6      	; 0x8438 <ch5_nores+0x2a>
    8432:	f0 e0       	ldi	r31, 0x00	; 0
    8434:	00 00       	nop
    8436:	03 c0       	rjmp	.+6      	; 0x843e <ch5_nores+0x30>
    8438:	e0 30       	cpi	r30, 0x00	; 0
    843a:	09 f0       	breq	.+2      	; 0x843e <ch5_nores+0x30>
    843c:	ff ef       	ldi	r31, 0xFF	; 255
    843e:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    8442:	2f 91       	pop	r18
    8444:	08 95       	ret

00008446 <SetSpritesTileTable>:
    8446:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <sprites_tile_banks>
    844a:	90 93 4f 08 	sts	0x084F, r25	; 0x80084f <sprites_tile_banks+0x1>
    844e:	08 95       	ret

00008450 <ClearVram>:
    8450:	e0 e2       	ldi	r30, 0x20	; 32
    8452:	f4 e0       	ldi	r31, 0x04	; 4
    8454:	a0 e0       	ldi	r26, 0x00	; 0
    8456:	bb e0       	ldi	r27, 0x0B	; 11
    8458:	6b e1       	ldi	r22, 0x1B	; 27

0000845a <fill_vram_loop>:
    845a:	6d 93       	st	X+, r22
    845c:	31 97       	sbiw	r30, 0x01	; 1
    845e:	e9 f7       	brne	.-6      	; 0x845a <fill_vram_loop>
    8460:	11 24       	eor	r1, r1
    8462:	08 95       	ret

00008464 <SetTile>:
    8464:	8f 71       	andi	r24, 0x1F	; 31
    8466:	76 2f       	mov	r23, r22
    8468:	66 95       	lsr	r22
    846a:	66 95       	lsr	r22
    846c:	66 95       	lsr	r22
    846e:	28 e0       	ldi	r18, 0x08	; 8
    8470:	82 9f       	mul	r24, r18
    8472:	d0 01       	movw	r26, r0
    8474:	a0 50       	subi	r26, 0x00	; 0
    8476:	b5 4f       	sbci	r27, 0xF5	; 245
    8478:	b6 0f       	add	r27, r22
    847a:	77 70       	andi	r23, 0x07	; 7
    847c:	a7 0f       	add	r26, r23
    847e:	45 5e       	subi	r20, 0xE5	; 229
    8480:	4c 93       	st	X, r20
    8482:	11 24       	eor	r1, r1
    8484:	08 95       	ret

00008486 <SetTileTable>:
    8486:	80 93 56 08 	sts	0x0856, r24	; 0x800856 <tile_table_lo>
    848a:	90 93 57 08 	sts	0x0857, r25	; 0x800857 <tile_table_hi>
    848e:	08 95       	ret

00008490 <GetVsyncFlag>:
    8490:	80 91 62 08 	lds	r24, 0x0862	; 0x800862 <sync_flags>
    8494:	81 70       	andi	r24, 0x01	; 1
    8496:	08 95       	ret

00008498 <ClearVsyncFlag>:
    8498:	20 91 62 08 	lds	r18, 0x0862	; 0x800862 <sync_flags>
    849c:	2e 7f       	andi	r18, 0xFE	; 254
    849e:	20 93 62 08 	sts	0x0862, r18	; 0x800862 <sync_flags>
    84a2:	08 95       	ret

000084a4 <ReadJoypad>:
    84a4:	88 23       	and	r24, r24
    84a6:	29 f4       	brne	.+10     	; 0x84b2 <rj_p2>
    84a8:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    84ac:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    84b0:	08 95       	ret

000084b2 <rj_p2>:
    84b2:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    84b6:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    84ba:	08 95       	ret

000084bc <SoftReset>:
    84bc:	e0 e6       	ldi	r30, 0x60	; 96
    84be:	f0 e0       	ldi	r31, 0x00	; 0
    84c0:	80 81       	ld	r24, Z
    84c2:	83 fd       	sbrc	r24, 3
    84c4:	08 95       	ret
    84c6:	88 e1       	ldi	r24, 0x18	; 24
    84c8:	98 e0       	ldi	r25, 0x08	; 8
    84ca:	f8 94       	cli
    84cc:	80 83       	st	Z, r24
    84ce:	90 83       	st	Z, r25
    84d0:	78 94       	sei
    84d2:	ff cf       	rjmp	.-2      	; 0x84d2 <SoftReset+0x16>

000084d4 <WriteEeprom>:
    84d4:	f9 99       	sbic	0x1f, 1	; 31
    84d6:	fe cf       	rjmp	.-4      	; 0x84d4 <WriteEeprom>
    84d8:	92 bd       	out	0x22, r25	; 34
    84da:	81 bd       	out	0x21, r24	; 33
    84dc:	60 bd       	out	0x20, r22	; 32
    84de:	f8 94       	cli
    84e0:	fa 9a       	sbi	0x1f, 2	; 31
    84e2:	f9 9a       	sbi	0x1f, 1	; 31
    84e4:	78 94       	sei
    84e6:	08 95       	ret

000084e8 <ReadEeprom>:
    84e8:	f9 99       	sbic	0x1f, 1	; 31
    84ea:	fe cf       	rjmp	.-4      	; 0x84e8 <ReadEeprom>
    84ec:	92 bd       	out	0x22, r25	; 34
    84ee:	81 bd       	out	0x21, r24	; 33
    84f0:	f8 94       	cli
    84f2:	f8 9a       	sbi	0x1f, 0	; 31
    84f4:	80 b5       	in	r24, 0x20	; 32
    84f6:	78 94       	sei
    84f8:	08 95       	ret

000084fa <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    84fa:	80 93 65 08 	sts	0x0865, r24	; 0x800865 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    84fe:	90 93 66 08 	sts	0x0866, r25	; 0x800866 <post_vsync_user_callback+0x1>
	ret
    8502:	08 95       	ret

00008504 <ReadButtons>:
    8504:	12 9a       	sbi	0x02, 2	; 2
    8506:	c8 95       	lpm
    8508:	c8 95       	lpm
    850a:	c8 95       	lpm
    850c:	c8 95       	lpm
    850e:	12 98       	cbi	0x02, 2	; 2
    8510:	40 e1       	ldi	r20, 0x10	; 16
    8512:	80 e0       	ldi	r24, 0x00	; 0
    8514:	90 e0       	ldi	r25, 0x00	; 0
    8516:	20 e0       	ldi	r18, 0x00	; 0
    8518:	30 e0       	ldi	r19, 0x00	; 0
    851a:	36 95       	lsr	r19
    851c:	27 95       	ror	r18
    851e:	96 95       	lsr	r25
    8520:	87 95       	ror	r24
    8522:	c8 95       	lpm
    8524:	c8 95       	lpm
    8526:	c8 95       	lpm
    8528:	c8 95       	lpm
    852a:	13 98       	cbi	0x02, 3	; 2
    852c:	00 9b       	sbis	0x00, 0	; 0
    852e:	30 68       	ori	r19, 0x80	; 128
    8530:	01 9b       	sbis	0x00, 1	; 0
    8532:	90 68       	ori	r25, 0x80	; 128
    8534:	13 9a       	sbi	0x02, 3	; 2
    8536:	c8 95       	lpm
    8538:	c8 95       	lpm
    853a:	c8 95       	lpm
    853c:	c8 95       	lpm
    853e:	41 50       	subi	r20, 0x01	; 1
    8540:	61 f7       	brne	.-40     	; 0x851a <ReadButtons+0x16>
    8542:	30 93 6a 08 	sts	0x086A, r19	; 0x80086a <joypad1_status_lo+0x1>
    8546:	20 93 69 08 	sts	0x0869, r18	; 0x800869 <joypad1_status_lo>
    854a:	90 93 6e 08 	sts	0x086E, r25	; 0x80086e <joypad2_status_lo+0x1>
    854e:	80 93 6d 08 	sts	0x086D, r24	; 0x80086d <joypad2_status_lo>
    8552:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    8556:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    855a:	0f 97       	sbiw	r24, 0x0f	; 15
    855c:	31 f0       	breq	.+12     	; 0x856a <ReadButtons+0x66>
    855e:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    8562:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    8566:	0f 97       	sbiw	r24, 0x0f	; 15
    8568:	11 f4       	brne	.+4      	; 0x856e <ReadButtons+0x6a>
    856a:	0c 94 5e 42 	jmp	0x84bc	; 0x84bc <SoftReset>
    856e:	08 95       	ret

00008570 <ReadControllers>:
    8570:	10 92 9d 08 	sts	0x089D, r1	; 0x80089d <joypadsConnectionStatus>
    8574:	00 99       	sbic	0x00, 0	; 0
    8576:	03 c0       	rjmp	.+6      	; 0x857e <ReadControllers+0xe>
    8578:	81 e0       	ldi	r24, 0x01	; 1
    857a:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <joypadsConnectionStatus>
    857e:	01 99       	sbic	0x00, 1	; 0
    8580:	05 c0       	rjmp	.+10     	; 0x858c <ReadControllers+0x1c>
    8582:	80 91 9d 08 	lds	r24, 0x089D	; 0x80089d <joypadsConnectionStatus>
    8586:	82 60       	ori	r24, 0x02	; 2
    8588:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <joypadsConnectionStatus>
    858c:	0c 94 82 42 	jmp	0x8504	; 0x8504 <ReadButtons>

00008590 <FormatEeprom>:
    8590:	cf 93       	push	r28
    8592:	df 93       	push	r29
    8594:	c0 e0       	ldi	r28, 0x00	; 0
    8596:	d0 e0       	ldi	r29, 0x00	; 0
    8598:	fe 01       	movw	r30, r28
    859a:	ee 55       	subi	r30, 0x5E	; 94
    859c:	ff 4f       	sbci	r31, 0xFF	; 255
    859e:	64 91       	lpm	r22, Z
    85a0:	ce 01       	movw	r24, r28
    85a2:	0e 94 6a 42 	call	0x84d4	; 0x84d4 <WriteEeprom>
    85a6:	21 96       	adiw	r28, 0x01	; 1
    85a8:	c0 32       	cpi	r28, 0x20	; 32
    85aa:	d1 05       	cpc	r29, r1
    85ac:	a9 f7       	brne	.-22     	; 0x8598 <FormatEeprom+0x8>
    85ae:	c0 e2       	ldi	r28, 0x20	; 32
    85b0:	d0 e0       	ldi	r29, 0x00	; 0
    85b2:	6f ef       	ldi	r22, 0xFF	; 255
    85b4:	ce 01       	movw	r24, r28
    85b6:	0e 94 6a 42 	call	0x84d4	; 0x84d4 <WriteEeprom>
    85ba:	6f ef       	ldi	r22, 0xFF	; 255
    85bc:	ce 01       	movw	r24, r28
    85be:	01 96       	adiw	r24, 0x01	; 1
    85c0:	0e 94 6a 42 	call	0x84d4	; 0x84d4 <WriteEeprom>
    85c4:	a0 96       	adiw	r28, 0x20	; 32
    85c6:	c1 15       	cp	r28, r1
    85c8:	88 e0       	ldi	r24, 0x08	; 8
    85ca:	d8 07       	cpc	r29, r24
    85cc:	91 f7       	brne	.-28     	; 0x85b2 <FormatEeprom+0x22>
    85ce:	df 91       	pop	r29
    85d0:	cf 91       	pop	r28
    85d2:	08 95       	ret

000085d4 <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    85d4:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    85d6:	80 e0       	ldi	r24, 0x00	; 0
    85d8:	90 e0       	ldi	r25, 0x00	; 0
    85da:	0e 94 74 42 	call	0x84e8	; 0x84e8 <ReadEeprom>
    85de:	c8 2f       	mov	r28, r24
    85e0:	81 e0       	ldi	r24, 0x01	; 1
    85e2:	90 e0       	ldi	r25, 0x00	; 0
    85e4:	0e 94 74 42 	call	0x84e8	; 0x84e8 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    85e8:	28 2f       	mov	r18, r24
    85ea:	30 e0       	ldi	r19, 0x00	; 0
    85ec:	32 2f       	mov	r19, r18
    85ee:	22 27       	eor	r18, r18
    85f0:	2c 0f       	add	r18, r28
    85f2:	31 1d       	adc	r19, r1
    85f4:	81 e0       	ldi	r24, 0x01	; 1
    85f6:	2a 35       	cpi	r18, 0x5A	; 90
    85f8:	35 45       	sbci	r19, 0x55	; 85
    85fa:	09 f0       	breq	.+2      	; 0x85fe <isEepromFormatted+0x2a>
    85fc:	80 e0       	ldi	r24, 0x00	; 0
}
    85fe:	cf 91       	pop	r28
    8600:	08 95       	ret

00008602 <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    8602:	fc 01       	movw	r30, r24
    8604:	67 87       	std	Z+15, r22	; 0x0f
    8606:	08 95       	ret

00008608 <PatchCommand01>:
    8608:	e6 e7       	ldi	r30, 0x76	; 118
    860a:	f8 e0       	ldi	r31, 0x08	; 8
    860c:	81 e0       	ldi	r24, 0x01	; 1
    860e:	91 e0       	ldi	r25, 0x01	; 1
    8610:	95 8b       	std	Z+21, r25	; 0x15
    8612:	84 8b       	std	Z+20, r24	; 0x14
    8614:	63 8b       	std	Z+19, r22	; 0x13
    8616:	08 95       	ret

00008618 <PatchCommand05>:
    8618:	fc 01       	movw	r30, r24
    861a:	90 81       	ld	r25, Z
    861c:	9f 75       	andi	r25, 0x5F	; 95
    861e:	90 83       	st	Z, r25
    8620:	08 95       	ret

00008622 <PatchCommand06>:
    8622:	fc 01       	movw	r30, r24
    8624:	90 81       	ld	r25, Z
    8626:	90 64       	ori	r25, 0x40	; 64
    8628:	90 83       	st	Z, r25
    862a:	08 95       	ret

0000862c <PatchCommand07>:
    862c:	fc 01       	movw	r30, r24
    862e:	66 87       	std	Z+14, r22	; 0x0e
    8630:	08 95       	ret

00008632 <PatchCommand09>:
    8632:	fc 01       	movw	r30, r24
    8634:	62 87       	std	Z+10, r22	; 0x0a
    8636:	08 95       	ret

00008638 <PatchCommand10>:
    8638:	fc 01       	movw	r30, r24
    863a:	63 87       	std	Z+11, r22	; 0x0b
    863c:	08 95       	ret

0000863e <PatchCommand11>:
    863e:	cf 93       	push	r28
    8640:	df 93       	push	r29
    8642:	ec 01       	movw	r28, r24
    8644:	26 2f       	mov	r18, r22
    8646:	89 81       	ldd	r24, Y+1	; 0x01
    8648:	90 e0       	ldi	r25, 0x00	; 0
    864a:	fc 01       	movw	r30, r24
    864c:	ee 0f       	add	r30, r30
    864e:	ff 1f       	adc	r31, r31
    8650:	ec 58       	subi	r30, 0x8C	; 140
    8652:	f1 47       	sbci	r31, 0x71	; 113
    8654:	45 91       	lpm	r20, Z+
    8656:	54 91       	lpm	r21, Z
    8658:	fc 01       	movw	r30, r24
    865a:	e6 0f       	add	r30, r22
    865c:	f1 1d       	adc	r31, r1
    865e:	67 fd       	sbrc	r22, 7
    8660:	fa 95       	dec	r31
    8662:	ee 0f       	add	r30, r30
    8664:	ff 1f       	adc	r31, r31
    8666:	ec 58       	subi	r30, 0x8C	; 140
    8668:	f1 47       	sbci	r31, 0x71	; 113
    866a:	85 91       	lpm	r24, Z+
    866c:	94 91       	lpm	r25, Z
    866e:	84 1b       	sub	r24, r20
    8670:	95 0b       	sbc	r25, r21
    8672:	68 85       	ldd	r22, Y+8	; 0x08
    8674:	70 e0       	ldi	r23, 0x00	; 0
    8676:	0e 94 2b 6a 	call	0xd456	; 0xd456 <__divmodhi4>
    867a:	61 15       	cp	r22, r1
    867c:	71 05       	cpc	r23, r1
    867e:	11 f4       	brne	.+4      	; 0x8684 <PatchCommand11+0x46>
    8680:	61 e0       	ldi	r22, 0x01	; 1
    8682:	70 e0       	ldi	r23, 0x00	; 0
    8684:	ea 81       	ldd	r30, Y+2	; 0x02
    8686:	86 e0       	ldi	r24, 0x06	; 6
    8688:	e8 9f       	mul	r30, r24
    868a:	f0 01       	movw	r30, r0
    868c:	11 24       	eor	r1, r1
    868e:	ea 58       	subi	r30, 0x8A	; 138
    8690:	f7 4f       	sbci	r31, 0xF7	; 247
    8692:	81 81       	ldd	r24, Z+1	; 0x01
    8694:	92 81       	ldd	r25, Z+2	; 0x02
    8696:	86 0f       	add	r24, r22
    8698:	97 1f       	adc	r25, r23
    869a:	92 83       	std	Z+2, r25	; 0x02
    869c:	81 83       	std	Z+1, r24	; 0x01
    869e:	7e 83       	std	Y+6, r23	; 0x06
    86a0:	6d 83       	std	Y+5, r22	; 0x05
    86a2:	88 81       	ld	r24, Y
    86a4:	88 60       	ori	r24, 0x08	; 8
    86a6:	88 83       	st	Y, r24
    86a8:	89 81       	ldd	r24, Y+1	; 0x01
    86aa:	28 0f       	add	r18, r24
    86ac:	2f 83       	std	Y+7, r18	; 0x07
    86ae:	df 91       	pop	r29
    86b0:	cf 91       	pop	r28
    86b2:	08 95       	ret

000086b4 <PatchCommand12>:
    86b4:	fc 01       	movw	r30, r24
    86b6:	60 87       	std	Z+8, r22	; 0x08
    86b8:	08 95       	ret

000086ba <PatchCommand13>:
    86ba:	fc 01       	movw	r30, r24
    86bc:	64 83       	std	Z+4, r22	; 0x04
    86be:	08 95       	ret

000086c0 <PatchCommand02>:
    86c0:	fc 01       	movw	r30, r24
    86c2:	82 81       	ldd	r24, Z+2	; 0x02
    86c4:	0c 94 1d 47 	jmp	0x8e3a	; 0x8e3a <SetMixerWave>

000086c8 <PatchCommand03>:
    86c8:	fc 01       	movw	r30, r24
    86ca:	91 81       	ldd	r25, Z+1	; 0x01
    86cc:	69 0f       	add	r22, r25
    86ce:	61 83       	std	Z+1, r22	; 0x01
    86d0:	82 81       	ldd	r24, Z+2	; 0x02
    86d2:	0c 94 06 47 	jmp	0x8e0c	; 0x8e0c <SetMixerNote>

000086d6 <PatchCommand04>:
    86d6:	fc 01       	movw	r30, r24
    86d8:	91 81       	ldd	r25, Z+1	; 0x01
    86da:	96 1b       	sub	r25, r22
    86dc:	69 2f       	mov	r22, r25
    86de:	91 83       	std	Z+1, r25	; 0x01
    86e0:	82 81       	ldd	r24, Z+2	; 0x02
    86e2:	0c 94 06 47 	jmp	0x8e0c	; 0x8e0c <SetMixerNote>

000086e6 <PatchCommand08>:
    86e6:	1f 93       	push	r17
    86e8:	cf 93       	push	r28
    86ea:	df 93       	push	r29
    86ec:	ec 01       	movw	r28, r24
    86ee:	16 2f       	mov	r17, r22
    86f0:	8a 81       	ldd	r24, Y+2	; 0x02
    86f2:	0e 94 06 47 	call	0x8e0c	; 0x8e0c <SetMixerNote>
    86f6:	19 83       	std	Y+1, r17	; 0x01
    86f8:	88 81       	ld	r24, Y
    86fa:	87 7f       	andi	r24, 0xF7	; 247
    86fc:	88 83       	st	Y, r24
    86fe:	df 91       	pop	r29
    8700:	cf 91       	pop	r28
    8702:	1f 91       	pop	r17
    8704:	08 95       	ret

00008706 <PatchCommand14>:
    8706:	dc 01       	movw	r26, r24
    8708:	14 96       	adiw	r26, 0x04	; 4
    870a:	8c 91       	ld	r24, X
    870c:	14 97       	sbiw	r26, 0x04	; 4
    870e:	88 23       	and	r24, r24
    8710:	19 f1       	breq	.+70     	; 0x8758 <PatchCommand14+0x52>
    8712:	55 96       	adiw	r26, 0x15	; 21
    8714:	2d 91       	ld	r18, X+
    8716:	3c 91       	ld	r19, X
    8718:	56 97       	sbiw	r26, 0x16	; 22
    871a:	66 23       	and	r22, r22
    871c:	79 f0       	breq	.+30     	; 0x873c <PatchCommand14+0x36>
    871e:	06 2e       	mov	r0, r22
    8720:	00 0c       	add	r0, r0
    8722:	77 0b       	sbc	r23, r23
    8724:	6f 5f       	subi	r22, 0xFF	; 255
    8726:	7f 4f       	sbci	r23, 0xFF	; 255
    8728:	ab 01       	movw	r20, r22
    872a:	44 0f       	add	r20, r20
    872c:	55 1f       	adc	r21, r21
    872e:	64 0f       	add	r22, r20
    8730:	75 1f       	adc	r23, r21
    8732:	26 1b       	sub	r18, r22
    8734:	37 0b       	sbc	r19, r23
    8736:	09 c0       	rjmp	.+18     	; 0x874a <PatchCommand14+0x44>
    8738:	ef 3f       	cpi	r30, 0xFF	; 255
    873a:	39 f0       	breq	.+14     	; 0x874a <PatchCommand14+0x44>
    873c:	23 50       	subi	r18, 0x03	; 3
    873e:	31 09       	sbc	r19, r1
    8740:	f9 01       	movw	r30, r18
    8742:	32 97       	sbiw	r30, 0x02	; 2
    8744:	e4 91       	lpm	r30, Z
    8746:	ed 30       	cpi	r30, 0x0D	; 13
    8748:	b9 f7       	brne	.-18     	; 0x8738 <PatchCommand14+0x32>
    874a:	56 96       	adiw	r26, 0x16	; 22
    874c:	3c 93       	st	X, r19
    874e:	2e 93       	st	-X, r18
    8750:	55 97       	sbiw	r26, 0x15	; 21
    8752:	81 50       	subi	r24, 0x01	; 1
    8754:	14 96       	adiw	r26, 0x04	; 4
    8756:	8c 93       	st	X, r24
    8758:	08 95       	ret

0000875a <InitMusicPlayer>:
    875a:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <patchPointers+0x1>
    875e:	80 93 15 09 	sts	0x0915, r24	; 0x800915 <patchPointers>
    8762:	8f e6       	ldi	r24, 0x6F	; 111
    8764:	80 93 18 09 	sts	0x0918, r24	; 0x800918 <masterVolume>
    8768:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    876c:	e0 ea       	ldi	r30, 0xA0	; 160
    876e:	f8 e0       	ldi	r31, 0x08	; 8
    8770:	80 e0       	ldi	r24, 0x00	; 0
    8772:	90 e1       	ldi	r25, 0x10	; 16
    8774:	3f ef       	ldi	r19, 0xFF	; 255
    8776:	28 e1       	ldi	r18, 0x18	; 24
    8778:	82 83       	std	Z+2, r24	; 0x02
    877a:	90 83       	st	Z, r25
    877c:	15 86       	std	Z+13, r1	; 0x0d
    877e:	34 87       	std	Z+12, r19	; 0x0c
    8780:	10 8a       	std	Z+16, r1	; 0x10
    8782:	23 87       	std	Z+11, r18	; 0x0b
    8784:	90 87       	std	Z+8, r25	; 0x08
    8786:	8f 5f       	subi	r24, 0xFF	; 255
    8788:	77 96       	adiw	r30, 0x17	; 23
    878a:	85 30       	cpi	r24, 0x05	; 5
    878c:	a9 f7       	brne	.-22     	; 0x8778 <InitMusicPlayer+0x1e>
    878e:	08 95       	ret

00008790 <StartSong>:
    8790:	e0 ea       	ldi	r30, 0xA0	; 160
    8792:	f8 e0       	ldi	r31, 0x08	; 8
    8794:	3f ef       	ldi	r19, 0xFF	; 255
    8796:	20 81       	ld	r18, Z
    8798:	2f 77       	andi	r18, 0x7F	; 127
    879a:	20 83       	st	Z, r18
    879c:	33 83       	std	Z+3, r19	; 0x03
    879e:	77 96       	adiw	r30, 0x17	; 23
    87a0:	29 e0       	ldi	r18, 0x09	; 9
    87a2:	e3 31       	cpi	r30, 0x13	; 19
    87a4:	f2 07       	cpc	r31, r18
    87a6:	b9 f7       	brne	.-18     	; 0x8796 <StartSong+0x6>
    87a8:	01 96       	adiw	r24, 0x01	; 1
    87aa:	90 93 1d 09 	sts	0x091D, r25	; 0x80091d <songPos+0x1>
    87ae:	80 93 1c 09 	sts	0x091C, r24	; 0x80091c <songPos>
    87b2:	90 93 9f 08 	sts	0x089F, r25	; 0x80089f <songStart+0x1>
    87b6:	80 93 9e 08 	sts	0x089E, r24	; 0x80089e <songStart>
    87ba:	90 93 1f 09 	sts	0x091F, r25	; 0x80091f <loopStart+0x1>
    87be:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <loopStart>
    87c2:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <nextDeltaTime+0x1>
    87c6:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <nextDeltaTime>
    87ca:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <currDeltaTime+0x1>
    87ce:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime>
    87d2:	10 92 1b 09 	sts	0x091B, r1	; 0x80091b <songSpeed>
    87d6:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <lastStatus>
    87da:	81 e0       	ldi	r24, 0x01	; 1
    87dc:	80 93 74 08 	sts	0x0874, r24	; 0x800874 <playSong>
    87e0:	08 95       	ret

000087e2 <StopSong>:
    87e2:	e0 ea       	ldi	r30, 0xA0	; 160
    87e4:	f8 e0       	ldi	r31, 0x08	; 8
    87e6:	8a ef       	ldi	r24, 0xFA	; 250
    87e8:	87 87       	std	Z+15, r24	; 0x0f
    87ea:	86 a3       	std	Z+38, r24	; 0x26
    87ec:	85 af       	std	Z+61, r24	; 0x3d
    87ee:	80 93 f4 08 	sts	0x08F4, r24	; 0x8008f4 <tracks+0x54>
    87f2:	80 93 0b 09 	sts	0x090B, r24	; 0x80090b <tracks+0x6b>
    87f6:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    87fa:	08 95       	ret

000087fc <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    87fc:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    87fe:	ed 91       	ld	r30, X+
    8800:	fc 91       	ld	r31, X
    8802:	11 97       	sbiw	r26, 0x01	; 1
    8804:	9f 01       	movw	r18, r30
    8806:	2f 5f       	subi	r18, 0xFF	; 255
    8808:	3f 4f       	sbci	r19, 0xFF	; 255
    880a:	11 96       	adiw	r26, 0x01	; 1
    880c:	3c 93       	st	X, r19
    880e:	2e 93       	st	-X, r18
    8810:	e4 91       	lpm	r30, Z
    8812:	e7 fd       	sbrc	r30, 7
    8814:	03 c0       	rjmp	.+6      	; 0x881c <ReadVarLen+0x20>
    8816:	8e 2f       	mov	r24, r30
    8818:	90 e0       	ldi	r25, 0x00	; 0
    881a:	08 95       	ret
    {
       value &= 0x7F;
    881c:	ef 77       	andi	r30, 0x7F	; 127
    881e:	8e 2f       	mov	r24, r30
    8820:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    8822:	96 95       	lsr	r25
    8824:	98 2f       	mov	r25, r24
    8826:	88 27       	eor	r24, r24
    8828:	97 95       	ror	r25
    882a:	87 95       	ror	r24
    882c:	2f 5f       	subi	r18, 0xFF	; 255
    882e:	3f 4f       	sbci	r19, 0xFF	; 255
    8830:	f9 01       	movw	r30, r18
    8832:	31 97       	sbiw	r30, 0x01	; 1
    8834:	e4 91       	lpm	r30, Z
    8836:	4e 2f       	mov	r20, r30
    8838:	4f 77       	andi	r20, 0x7F	; 127
    883a:	84 0f       	add	r24, r20
    883c:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    883e:	e7 fd       	sbrc	r30, 7
    8840:	f0 cf       	rjmp	.-32     	; 0x8822 <ReadVarLen+0x26>
    8842:	2d 93       	st	X+, r18
    8844:	3c 93       	st	X, r19
    }


    return value;
}
    8846:	08 95       	ret

00008848 <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    8848:	ff 92       	push	r15
    884a:	0f 93       	push	r16
    884c:	1f 93       	push	r17
    884e:	cf 93       	push	r28
    8850:	df 93       	push	r29
    8852:	ec 01       	movw	r28, r24
    8854:	16 2f       	mov	r17, r22
    8856:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    8858:	88 81       	ld	r24, Y
    885a:	28 2f       	mov	r18, r24
    885c:	20 78       	andi	r18, 0x80	; 128
    885e:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    8860:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    8862:	9f ef       	ldi	r25, 0xFF	; 255
    8864:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    8866:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    8868:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    886a:	87 7b       	andi	r24, 0xB7	; 183
    886c:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    886e:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    8870:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    8872:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    8874:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    8876:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    8878:	8a 81       	ldd	r24, Y+2	; 0x02
    887a:	83 30       	cpi	r24, 0x03	; 3
    887c:	69 f4       	brne	.+26     	; 0x8898 <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    887e:	21 11       	cpse	r18, r1
    8880:	01 c0       	rjmp	.+2      	; 0x8884 <TriggerCommon+0x3c>
    8882:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    8884:	81 e0       	ldi	r24, 0x01	; 1
    8886:	91 e0       	ldi	r25, 0x01	; 1
    8888:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <tr4_barrel_hi>
    888c:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    8890:	81 e0       	ldi	r24, 0x01	; 1
    8892:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    8896:	36 c0       	rjmp	.+108    	; 0x8904 <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    8898:	84 30       	cpi	r24, 0x04	; 4
    889a:	69 f5       	brne	.+90     	; 0x88f6 <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    889c:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    88a0:	80 91 15 09 	lds	r24, 0x0915	; 0x800915 <patchPointers>
    88a4:	90 91 16 09 	lds	r25, 0x0916	; 0x800916 <patchPointers+0x1>
    88a8:	e9 e0       	ldi	r30, 0x09	; 9
    88aa:	6e 9f       	mul	r22, r30
    88ac:	80 0d       	add	r24, r0
    88ae:	91 1d       	adc	r25, r1
    88b0:	11 24       	eor	r1, r1
    88b2:	fc 01       	movw	r30, r24
    88b4:	31 96       	adiw	r30, 0x01	; 1
    88b6:	45 91       	lpm	r20, Z+
    88b8:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    88ba:	50 93 93 08 	sts	0x0893, r21	; 0x800893 <tr5_pos_hi>
    88be:	40 93 92 08 	sts	0x0892, r20	; 0x800892 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    88c2:	9c 01       	movw	r18, r24
    88c4:	29 5f       	subi	r18, 0xF9	; 249
    88c6:	3f 4f       	sbci	r19, 0xFF	; 255
    88c8:	f9 01       	movw	r30, r18
    88ca:	65 91       	lpm	r22, Z+
    88cc:	74 91       	lpm	r23, Z
    88ce:	05 96       	adiw	r24, 0x05	; 5
    88d0:	fc 01       	movw	r30, r24
    88d2:	85 91       	lpm	r24, Z+
    88d4:	94 91       	lpm	r25, Z
    88d6:	68 1b       	sub	r22, r24
    88d8:	79 0b       	sbc	r23, r25
    88da:	70 93 95 08 	sts	0x0895, r23	; 0x800895 <tr5_loop_len_hi>
    88de:	60 93 94 08 	sts	0x0894, r22	; 0x800894 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    88e2:	f9 01       	movw	r30, r18
    88e4:	85 91       	lpm	r24, Z+
    88e6:	94 91       	lpm	r25, Z
    88e8:	48 0f       	add	r20, r24
    88ea:	59 1f       	adc	r21, r25
    88ec:	50 93 97 08 	sts	0x0897, r21	; 0x800897 <tr5_loop_end_hi>
    88f0:	40 93 96 08 	sts	0x0896, r20	; 0x800896 <tr5_loop_end_lo>
    88f4:	03 c0       	rjmp	.+6      	; 0x88fc <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    88f6:	60 e0       	ldi	r22, 0x00	; 0
    88f8:	0e 94 1d 47 	call	0x8e3a	; 0x8e3a <SetMixerWave>
			SetMixerNote(track->channel,note);
    88fc:	60 2f       	mov	r22, r16
    88fe:	8a 81       	ldd	r24, Y+2	; 0x02
    8900:	0e 94 06 47 	call	0x8e0c	; 0x8e0c <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    8904:	ff 20       	and	r15, r15
    8906:	11 f0       	breq	.+4      	; 0x890c <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    8908:	19 8b       	std	Y+17, r17	; 0x11
    890a:	01 c0       	rjmp	.+2      	; 0x890e <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    890c:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    890e:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <patchPointers>
    8912:	f0 91 16 09 	lds	r31, 0x0916	; 0x800916 <patchPointers+0x1>
    8916:	29 e0       	ldi	r18, 0x09	; 9
    8918:	12 9f       	mul	r17, r18
    891a:	e0 0d       	add	r30, r0
    891c:	f1 1d       	adc	r31, r1
    891e:	11 24       	eor	r1, r1
    8920:	33 96       	adiw	r30, 0x03	; 3
    8922:	85 91       	lpm	r24, Z+
    8924:	94 91       	lpm	r25, Z
	if(pos==NULL){
    8926:	00 97       	sbiw	r24, 0x00	; 0
    8928:	19 f4       	brne	.+6      	; 0x8930 <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    892a:	1e 8a       	std	Y+22, r1	; 0x16
    892c:	1d 8a       	std	Y+21, r1	; 0x15
    892e:	07 c0       	rjmp	.+14     	; 0x893e <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    8930:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    8932:	fc 01       	movw	r30, r24
    8934:	24 91       	lpm	r18, Z
    8936:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    8938:	01 96       	adiw	r24, 0x01	; 1
    893a:	9e 8b       	std	Y+22, r25	; 0x16
    893c:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    893e:	df 91       	pop	r29
    8940:	cf 91       	pop	r28
    8942:	1f 91       	pop	r17
    8944:	0f 91       	pop	r16
    8946:	ff 90       	pop	r15
    8948:	08 95       	ret

0000894a <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    894a:	cf 93       	push	r28
    894c:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    894e:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <patchPointers>
    8952:	f0 91 16 09 	lds	r31, 0x0916	; 0x800916 <patchPointers+0x1>
    8956:	99 e0       	ldi	r25, 0x09	; 9
    8958:	89 9f       	mul	r24, r25
    895a:	e0 0d       	add	r30, r0
    895c:	f1 1d       	adc	r31, r1
    895e:	11 24       	eor	r1, r1
    8960:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    8962:	e1 30       	cpi	r30, 0x01	; 1
    8964:	e9 f0       	breq	.+58     	; 0x89a0 <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    8966:	e2 30       	cpi	r30, 0x02	; 2
    8968:	e9 f0       	breq	.+58     	; 0x89a4 <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    896a:	90 91 b7 08 	lds	r25, 0x08B7	; 0x8008b7 <tracks+0x17>
    896e:	97 ff       	sbrs	r25, 7
    8970:	1b c0       	rjmp	.+54     	; 0x89a8 <TriggerFx+0x5e>
    8972:	90 91 c8 08 	lds	r25, 0x08C8	; 0x8008c8 <tracks+0x28>
    8976:	89 13       	cpse	r24, r25
    8978:	02 c0       	rjmp	.+4      	; 0x897e <TriggerFx+0x34>
    897a:	41 11       	cpse	r20, r1
    897c:	15 c0       	rjmp	.+42     	; 0x89a8 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    897e:	90 91 ce 08 	lds	r25, 0x08CE	; 0x8008ce <tracks+0x2e>
    8982:	97 ff       	sbrs	r25, 7
    8984:	13 c0       	rjmp	.+38     	; 0x89ac <TriggerFx+0x62>
    8986:	90 91 df 08 	lds	r25, 0x08DF	; 0x8008df <tracks+0x3f>
    898a:	89 13       	cpse	r24, r25
    898c:	02 c0       	rjmp	.+4      	; 0x8992 <TriggerFx+0x48>
    898e:	41 11       	cpse	r20, r1
    8990:	0d c0       	rjmp	.+26     	; 0x89ac <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    8992:	20 91 cb 08 	lds	r18, 0x08CB	; 0x8008cb <tracks+0x2b>
    8996:	90 91 e2 08 	lds	r25, 0x08E2	; 0x8008e2 <tracks+0x42>
    899a:	92 17       	cp	r25, r18
    899c:	38 f4       	brcc	.+14     	; 0x89ac <TriggerFx+0x62>
    899e:	04 c0       	rjmp	.+8      	; 0x89a8 <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    89a0:	c3 e0       	ldi	r28, 0x03	; 3
    89a2:	05 c0       	rjmp	.+10     	; 0x89ae <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    89a4:	c4 e0       	ldi	r28, 0x04	; 4
    89a6:	03 c0       	rjmp	.+6      	; 0x89ae <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    89a8:	c1 e0       	ldi	r28, 0x01	; 1
    89aa:	01 c0       	rjmp	.+2      	; 0x89ae <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    89ac:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    89ae:	97 e1       	ldi	r25, 0x17	; 23
    89b0:	c9 9f       	mul	r28, r25
    89b2:	e0 01       	movw	r28, r0
    89b4:	11 24       	eor	r1, r1
    89b6:	c0 56       	subi	r28, 0x60	; 96
    89b8:	d7 4f       	sbci	r29, 0xF7	; 247
    89ba:	90 e8       	ldi	r25, 0x80	; 128
    89bc:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    89be:	1e 8a       	std	Y+22, r1	; 0x16
    89c0:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    89c2:	20 e5       	ldi	r18, 0x50	; 80
    89c4:	46 2f       	mov	r20, r22
    89c6:	68 2f       	mov	r22, r24
    89c8:	ce 01       	movw	r24, r28
    89ca:	0e 94 24 44 	call	0x8848	; 0x8848 <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    89ce:	88 81       	ld	r24, Y
    89d0:	80 62       	ori	r24, 0x20	; 32
    89d2:	88 83       	st	Y, r24
}
    89d4:	df 91       	pop	r29
    89d6:	cf 91       	pop	r28
    89d8:	08 95       	ret

000089da <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    89da:	cf 93       	push	r28
    89dc:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    89de:	a8 2f       	mov	r26, r24
    89e0:	b0 e0       	ldi	r27, 0x00	; 0
    89e2:	97 e1       	ldi	r25, 0x17	; 23
    89e4:	89 9f       	mul	r24, r25
    89e6:	f0 01       	movw	r30, r0
    89e8:	11 24       	eor	r1, r1
    89ea:	e0 56       	subi	r30, 0x60	; 96
    89ec:	f7 4f       	sbci	r31, 0xF7	; 247
    89ee:	80 81       	ld	r24, Z
    89f0:	85 ff       	sbrs	r24, 5
    89f2:	02 c0       	rjmp	.+4      	; 0x89f8 <TriggerNote+0x1e>
    89f4:	87 fd       	sbrc	r24, 7
    89f6:	2e c0       	rjmp	.+92     	; 0x8a54 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    89f8:	21 11       	cpse	r18, r1
    89fa:	18 c0       	rjmp	.+48     	; 0x8a2c <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    89fc:	97 e1       	ldi	r25, 0x17	; 23
    89fe:	9a 9f       	mul	r25, r26
    8a00:	f0 01       	movw	r30, r0
    8a02:	9b 9f       	mul	r25, r27
    8a04:	f0 0d       	add	r31, r0
    8a06:	11 24       	eor	r1, r1
    8a08:	e0 56       	subi	r30, 0x60	; 96
    8a0a:	f7 4f       	sbci	r31, 0xF7	; 247
    8a0c:	97 85       	ldd	r25, Z+15	; 0x0f
    8a0e:	91 11       	cpse	r25, r1
    8a10:	02 c0       	rjmp	.+4      	; 0x8a16 <TriggerNote+0x3c>
    8a12:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    8a14:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    8a16:	97 e1       	ldi	r25, 0x17	; 23
    8a18:	9a 9f       	mul	r25, r26
    8a1a:	f0 01       	movw	r30, r0
    8a1c:	9b 9f       	mul	r25, r27
    8a1e:	f0 0d       	add	r31, r0
    8a20:	11 24       	eor	r1, r1
    8a22:	e0 56       	subi	r30, 0x60	; 96
    8a24:	f7 4f       	sbci	r31, 0xF7	; 247
    8a26:	8f 7b       	andi	r24, 0xBF	; 191
    8a28:	80 83       	st	Z, r24
    8a2a:	14 c0       	rjmp	.+40     	; 0x8a54 <TriggerNote+0x7a>
    8a2c:	82 2f       	mov	r24, r18
    8a2e:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8a30:	97 e1       	ldi	r25, 0x17	; 23
    8a32:	9a 9f       	mul	r25, r26
    8a34:	e0 01       	movw	r28, r0
    8a36:	9b 9f       	mul	r25, r27
    8a38:	d0 0d       	add	r29, r0
    8a3a:	11 24       	eor	r1, r1
    8a3c:	c0 56       	subi	r28, 0x60	; 96
    8a3e:	d7 4f       	sbci	r29, 0xF7	; 247
    8a40:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    8a42:	1e 8a       	std	Y+22, r1	; 0x16
    8a44:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    8a46:	48 2f       	mov	r20, r24
    8a48:	ce 01       	movw	r24, r28
    8a4a:	0e 94 24 44 	call	0x8848	; 0x8848 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    8a4e:	88 81       	ld	r24, Y
    8a50:	80 62       	ori	r24, 0x20	; 32
    8a52:	88 83       	st	Y, r24
		}

	}
}
    8a54:	df 91       	pop	r29
    8a56:	cf 91       	pop	r28
    8a58:	08 95       	ret

00008a5a <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    8a5a:	ef 92       	push	r14
    8a5c:	ff 92       	push	r15
    8a5e:	0f 93       	push	r16
    8a60:	1f 93       	push	r17
    8a62:	cf 93       	push	r28
    8a64:	df 93       	push	r29
    8a66:	c0 ea       	ldi	r28, 0xA0	; 160
    8a68:	d8 e0       	ldi	r29, 0x08	; 8
    8a6a:	06 e7       	ldi	r16, 0x76	; 118
    8a6c:	18 e0       	ldi	r17, 0x08	; 8
    8a6e:	98 01       	movw	r18, r16
    8a70:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    8a72:	1f 96       	adiw	r26, 0x0f	; 15
    8a74:	8c 91       	ld	r24, X
    8a76:	1f 97       	sbiw	r26, 0x0f	; 15
    8a78:	88 23       	and	r24, r24
    8a7a:	a9 f0       	breq	.+42     	; 0x8aa6 <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    8a7c:	1e 96       	adiw	r26, 0x0e	; 14
    8a7e:	4c 91       	ld	r20, X
    8a80:	1e 97       	sbiw	r26, 0x0e	; 14
    8a82:	08 2e       	mov	r0, r24
    8a84:	00 0c       	add	r0, r0
    8a86:	99 0b       	sbc	r25, r25
    8a88:	84 0f       	add	r24, r20
    8a8a:	91 1d       	adc	r25, r1
    8a8c:	8f 3f       	cpi	r24, 0xFF	; 255
    8a8e:	91 05       	cpc	r25, r1
    8a90:	19 f0       	breq	.+6      	; 0x8a98 <ProcessMusic+0x3e>
    8a92:	14 f0       	brlt	.+4      	; 0x8a98 <ProcessMusic+0x3e>
    8a94:	8f ef       	ldi	r24, 0xFF	; 255
    8a96:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    8a98:	97 ff       	sbrs	r25, 7
    8a9a:	02 c0       	rjmp	.+4      	; 0x8aa0 <ProcessMusic+0x46>
    8a9c:	80 e0       	ldi	r24, 0x00	; 0
    8a9e:	90 e0       	ldi	r25, 0x00	; 0
    8aa0:	1e 96       	adiw	r26, 0x0e	; 14
    8aa2:	8c 93       	st	X, r24
    8aa4:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    8aa6:	6c 91       	ld	r22, X
    8aa8:	63 ff       	sbrs	r22, 3
    8aaa:	26 c0       	rjmp	.+76     	; 0x8af8 <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    8aac:	15 96       	adiw	r26, 0x05	; 5
    8aae:	4d 91       	ld	r20, X+
    8ab0:	5c 91       	ld	r21, X
    8ab2:	16 97       	sbiw	r26, 0x06	; 6
    8ab4:	f9 01       	movw	r30, r18
    8ab6:	81 81       	ldd	r24, Z+1	; 0x01
    8ab8:	92 81       	ldd	r25, Z+2	; 0x02
    8aba:	84 0f       	add	r24, r20
    8abc:	95 1f       	adc	r25, r21
    8abe:	92 83       	std	Z+2, r25	; 0x02
    8ac0:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    8ac2:	17 96       	adiw	r26, 0x07	; 7
    8ac4:	ec 91       	ld	r30, X
    8ac6:	17 97       	sbiw	r26, 0x07	; 7
    8ac8:	f0 e0       	ldi	r31, 0x00	; 0
    8aca:	ee 0f       	add	r30, r30
    8acc:	ff 1f       	adc	r31, r31
    8ace:	ec 58       	subi	r30, 0x8C	; 140
    8ad0:	f1 47       	sbci	r31, 0x71	; 113
    8ad2:	e5 90       	lpm	r14, Z+
    8ad4:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    8ad6:	14 16       	cp	r1, r20
    8ad8:	15 06       	cpc	r1, r21
    8ada:	24 f4       	brge	.+8      	; 0x8ae4 <ProcessMusic+0x8a>
    8adc:	8e 15       	cp	r24, r14
    8ade:	9f 05       	cpc	r25, r15
    8ae0:	30 f4       	brcc	.+12     	; 0x8aee <ProcessMusic+0x94>
    8ae2:	0a c0       	rjmp	.+20     	; 0x8af8 <ProcessMusic+0x9e>
    8ae4:	45 2b       	or	r20, r21
    8ae6:	41 f0       	breq	.+16     	; 0x8af8 <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    8ae8:	e8 16       	cp	r14, r24
    8aea:	f9 06       	cpc	r15, r25
    8aec:	28 f0       	brcs	.+10     	; 0x8af8 <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    8aee:	f9 01       	movw	r30, r18
    8af0:	f2 82       	std	Z+2, r15	; 0x02
    8af2:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    8af4:	67 7f       	andi	r22, 0xF7	; 247
    8af6:	6c 93       	st	X, r22
    8af8:	57 96       	adiw	r26, 0x17	; 23
    8afa:	2a 5f       	subi	r18, 0xFA	; 250
    8afc:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8afe:	f9 e0       	ldi	r31, 0x09	; 9
    8b00:	a3 31       	cpi	r26, 0x13	; 19
    8b02:	bf 07       	cpc	r27, r31
    8b04:	09 f0       	breq	.+2      	; 0x8b08 <ProcessMusic+0xae>
    8b06:	b5 cf       	rjmp	.-150    	; 0x8a72 <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    8b08:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <playSong>
    8b0c:	88 23       	and	r24, r24
    8b0e:	09 f4       	brne	.+2      	; 0x8b12 <ProcessMusic+0xb8>
    8b10:	cc c0       	rjmp	.+408    	; 0x8caa <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    8b12:	87 e1       	ldi	r24, 0x17	; 23
    8b14:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    8b16:	80 91 13 09 	lds	r24, 0x0913	; 0x800913 <currDeltaTime>
    8b1a:	90 91 14 09 	lds	r25, 0x0914	; 0x800914 <currDeltaTime+0x1>
    8b1e:	20 91 19 09 	lds	r18, 0x0919	; 0x800919 <nextDeltaTime>
    8b22:	30 91 1a 09 	lds	r19, 0x091A	; 0x80091a <nextDeltaTime+0x1>
    8b26:	82 17       	cp	r24, r18
    8b28:	93 07       	cpc	r25, r19
    8b2a:	09 f0       	breq	.+2      	; 0x8b2e <ProcessMusic+0xd4>
    8b2c:	b9 c0       	rjmp	.+370    	; 0x8ca0 <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    8b2e:	20 91 1c 09 	lds	r18, 0x091C	; 0x80091c <songPos>
    8b32:	30 91 1d 09 	lds	r19, 0x091D	; 0x80091d <songPos+0x1>
    8b36:	b9 01       	movw	r22, r18
    8b38:	6f 5f       	subi	r22, 0xFF	; 255
    8b3a:	7f 4f       	sbci	r23, 0xFF	; 255
    8b3c:	70 93 1d 09 	sts	0x091D, r23	; 0x80091d <songPos+0x1>
    8b40:	60 93 1c 09 	sts	0x091C, r22	; 0x80091c <songPos>
    8b44:	f9 01       	movw	r30, r18
    8b46:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    8b48:	4f 3f       	cpi	r20, 0xFF	; 255
    8b4a:	79 f5       	brne	.+94     	; 0x8baa <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    8b4c:	a9 01       	movw	r20, r18
    8b4e:	4e 5f       	subi	r20, 0xFE	; 254
    8b50:	5f 4f       	sbci	r21, 0xFF	; 255
    8b52:	50 93 1d 09 	sts	0x091D, r21	; 0x80091d <songPos+0x1>
    8b56:	40 93 1c 09 	sts	0x091C, r20	; 0x80091c <songPos>
    8b5a:	fb 01       	movw	r30, r22
    8b5c:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    8b5e:	6f 32       	cpi	r22, 0x2F	; 47
    8b60:	19 f4       	brne	.+6      	; 0x8b68 <ProcessMusic+0x10e>
						playSong=false;
    8b62:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
						break;	
    8b66:	9c c0       	rjmp	.+312    	; 0x8ca0 <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    8b68:	66 30       	cpi	r22, 0x06	; 6
    8b6a:	09 f0       	breq	.+2      	; 0x8b6e <ProcessMusic+0x114>
    8b6c:	8c c0       	rjmp	.+280    	; 0x8c86 <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    8b6e:	fa 01       	movw	r30, r20
    8b70:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    8b72:	c9 01       	movw	r24, r18
    8b74:	04 96       	adiw	r24, 0x04	; 4
    8b76:	90 93 1d 09 	sts	0x091D, r25	; 0x80091d <songPos+0x1>
    8b7a:	80 93 1c 09 	sts	0x091C, r24	; 0x80091c <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    8b7e:	f9 01       	movw	r30, r18
    8b80:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    8b82:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    8b84:	e3 35       	cpi	r30, 0x53	; 83
    8b86:	29 f4       	brne	.+10     	; 0x8b92 <ProcessMusic+0x138>
							loopStart=songPos;
    8b88:	90 93 1f 09 	sts	0x091F, r25	; 0x80091f <loopStart+0x1>
    8b8c:	80 93 1e 09 	sts	0x091E, r24	; 0x80091e <loopStart>
    8b90:	7a c0       	rjmp	.+244    	; 0x8c86 <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    8b92:	e5 34       	cpi	r30, 0x45	; 69
    8b94:	09 f0       	breq	.+2      	; 0x8b98 <ProcessMusic+0x13e>
    8b96:	77 c0       	rjmp	.+238    	; 0x8c86 <ProcessMusic+0x22c>
							songPos=loopStart;
    8b98:	80 91 1e 09 	lds	r24, 0x091E	; 0x80091e <loopStart>
    8b9c:	90 91 1f 09 	lds	r25, 0x091F	; 0x80091f <loopStart+0x1>
    8ba0:	90 93 1d 09 	sts	0x091D, r25	; 0x80091d <songPos+0x1>
    8ba4:	80 93 1c 09 	sts	0x091C, r24	; 0x80091c <songPos>
    8ba8:	6e c0       	rjmp	.+220    	; 0x8c86 <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    8baa:	47 fd       	sbrc	r20, 7
    8bac:	40 93 17 09 	sts	0x0917, r20	; 0x800917 <lastStatus>
					channel=lastStatus&0x0f;
    8bb0:	90 91 17 09 	lds	r25, 0x0917	; 0x800917 <lastStatus>
    8bb4:	89 2f       	mov	r24, r25
    8bb6:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    8bb8:	47 ff       	sbrs	r20, 7
    8bba:	08 c0       	rjmp	.+16     	; 0x8bcc <ProcessMusic+0x172>
    8bbc:	2e 5f       	subi	r18, 0xFE	; 254
    8bbe:	3f 4f       	sbci	r19, 0xFF	; 255
    8bc0:	30 93 1d 09 	sts	0x091D, r19	; 0x80091d <songPos+0x1>
    8bc4:	20 93 1c 09 	sts	0x091C, r18	; 0x80091c <songPos>
    8bc8:	fb 01       	movw	r30, r22
    8bca:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    8bcc:	90 7f       	andi	r25, 0xF0	; 240
    8bce:	90 3b       	cpi	r25, 0xB0	; 176
    8bd0:	e1 f0       	breq	.+56     	; 0x8c0a <ProcessMusic+0x1b0>
    8bd2:	90 3c       	cpi	r25, 0xC0	; 192
    8bd4:	09 f4       	brne	.+2      	; 0x8bd8 <ProcessMusic+0x17e>
    8bd6:	51 c0       	rjmp	.+162    	; 0x8c7a <ProcessMusic+0x220>
    8bd8:	90 39       	cpi	r25, 0x90	; 144
    8bda:	09 f0       	breq	.+2      	; 0x8bde <ProcessMusic+0x184>
    8bdc:	54 c0       	rjmp	.+168    	; 0x8c86 <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    8bde:	e0 91 1c 09 	lds	r30, 0x091C	; 0x80091c <songPos>
    8be2:	f0 91 1d 09 	lds	r31, 0x091D	; 0x80091d <songPos+0x1>
    8be6:	9f 01       	movw	r18, r30
    8be8:	2f 5f       	subi	r18, 0xFF	; 255
    8bea:	3f 4f       	sbci	r19, 0xFF	; 255
    8bec:	30 93 1d 09 	sts	0x091D, r19	; 0x80091d <songPos+0x1>
    8bf0:	20 93 1c 09 	sts	0x091C, r18	; 0x80091c <songPos>
    8bf4:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    8bf6:	22 0f       	add	r18, r18
    8bf8:	f8 9e       	mul	r15, r24
    8bfa:	f0 01       	movw	r30, r0
    8bfc:	11 24       	eor	r1, r1
    8bfe:	e0 56       	subi	r30, 0x60	; 96
    8c00:	f7 4f       	sbci	r31, 0xF7	; 247
    8c02:	60 89       	ldd	r22, Z+16	; 0x10
    8c04:	0e 94 ed 44 	call	0x89da	; 0x89da <TriggerNote>
    8c08:	3e c0       	rjmp	.+124    	; 0x8c86 <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    8c0a:	e0 91 1c 09 	lds	r30, 0x091C	; 0x80091c <songPos>
    8c0e:	f0 91 1d 09 	lds	r31, 0x091D	; 0x80091d <songPos+0x1>
    8c12:	9f 01       	movw	r18, r30
    8c14:	2f 5f       	subi	r18, 0xFF	; 255
    8c16:	3f 4f       	sbci	r19, 0xFF	; 255
    8c18:	30 93 1d 09 	sts	0x091D, r19	; 0x80091d <songPos+0x1>
    8c1c:	20 93 1c 09 	sts	0x091C, r18	; 0x80091c <songPos>
    8c20:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    8c22:	47 30       	cpi	r20, 0x07	; 7
    8c24:	49 f4       	brne	.+18     	; 0x8c38 <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    8c26:	f8 9e       	mul	r15, r24
    8c28:	d0 01       	movw	r26, r0
    8c2a:	11 24       	eor	r1, r1
    8c2c:	a0 56       	subi	r26, 0x60	; 96
    8c2e:	b7 4f       	sbci	r27, 0xF7	; 247
    8c30:	ee 0f       	add	r30, r30
    8c32:	1c 96       	adiw	r26, 0x0c	; 12
    8c34:	ec 93       	st	X, r30
    8c36:	27 c0       	rjmp	.+78     	; 0x8c86 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    8c38:	4b 30       	cpi	r20, 0x0B	; 11
    8c3a:	49 f4       	brne	.+18     	; 0x8c4e <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    8c3c:	f8 9e       	mul	r15, r24
    8c3e:	d0 01       	movw	r26, r0
    8c40:	11 24       	eor	r1, r1
    8c42:	a0 56       	subi	r26, 0x60	; 96
    8c44:	b7 4f       	sbci	r27, 0xF7	; 247
    8c46:	ee 0f       	add	r30, r30
    8c48:	13 96       	adiw	r26, 0x03	; 3
    8c4a:	ec 93       	st	X, r30
    8c4c:	1c c0       	rjmp	.+56     	; 0x8c86 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    8c4e:	4c 35       	cpi	r20, 0x5C	; 92
    8c50:	49 f4       	brne	.+18     	; 0x8c64 <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    8c52:	f8 9e       	mul	r15, r24
    8c54:	d0 01       	movw	r26, r0
    8c56:	11 24       	eor	r1, r1
    8c58:	a0 56       	subi	r26, 0x60	; 96
    8c5a:	b7 4f       	sbci	r27, 0xF7	; 247
    8c5c:	ee 0f       	add	r30, r30
    8c5e:	1a 96       	adiw	r26, 0x0a	; 10
    8c60:	ec 93       	st	X, r30
    8c62:	11 c0       	rjmp	.+34     	; 0x8c86 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    8c64:	44 36       	cpi	r20, 0x64	; 100
    8c66:	79 f4       	brne	.+30     	; 0x8c86 <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    8c68:	f8 9e       	mul	r15, r24
    8c6a:	d0 01       	movw	r26, r0
    8c6c:	11 24       	eor	r1, r1
    8c6e:	a0 56       	subi	r26, 0x60	; 96
    8c70:	b7 4f       	sbci	r27, 0xF7	; 247
    8c72:	ee 0f       	add	r30, r30
    8c74:	1b 96       	adiw	r26, 0x0b	; 11
    8c76:	ec 93       	st	X, r30
    8c78:	06 c0       	rjmp	.+12     	; 0x8c86 <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    8c7a:	f8 9e       	mul	r15, r24
    8c7c:	f0 01       	movw	r30, r0
    8c7e:	11 24       	eor	r1, r1
    8c80:	e0 56       	subi	r30, 0x60	; 96
    8c82:	f7 4f       	sbci	r31, 0xF7	; 247
    8c84:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    8c86:	8c e1       	ldi	r24, 0x1C	; 28
    8c88:	99 e0       	ldi	r25, 0x09	; 9
    8c8a:	0e 94 fe 43 	call	0x87fc	; 0x87fc <ReadVarLen>
    8c8e:	90 93 1a 09 	sts	0x091A, r25	; 0x80091a <nextDeltaTime+0x1>
    8c92:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <nextDeltaTime>
				currDeltaTime=0;
    8c96:	10 92 14 09 	sts	0x0914, r1	; 0x800914 <currDeltaTime+0x1>
    8c9a:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime>
    8c9e:	3b cf       	rjmp	.-394    	; 0x8b16 <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    8ca0:	01 96       	adiw	r24, 0x01	; 1
    8ca2:	90 93 14 09 	sts	0x0914, r25	; 0x800914 <currDeltaTime+0x1>
    8ca6:	80 93 13 09 	sts	0x0913, r24	; 0x800913 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8caa:	ee 24       	eor	r14, r14
    8cac:	ea 94       	dec	r14
    8cae:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    8cb0:	88 81       	ld	r24, Y
    8cb2:	85 ff       	sbrs	r24, 5
    8cb4:	37 c0       	rjmp	.+110    	; 0x8d24 <ProcessMusic+0x2ca>
    8cb6:	2d 89       	ldd	r18, Y+21	; 0x15
    8cb8:	3e 89       	ldd	r19, Y+22	; 0x16
    8cba:	23 2b       	or	r18, r19
    8cbc:	09 f4       	brne	.+2      	; 0x8cc0 <ProcessMusic+0x266>
    8cbe:	32 c0       	rjmp	.+100    	; 0x8d24 <ProcessMusic+0x2ca>
    8cc0:	86 fd       	sbrc	r24, 6
    8cc2:	30 c0       	rjmp	.+96     	; 0x8d24 <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    8cc4:	9b 89       	ldd	r25, Y+19	; 0x13
    8cc6:	8a 89       	ldd	r24, Y+18	; 0x12
    8cc8:	98 13       	cpse	r25, r24
    8cca:	2a c0       	rjmp	.+84     	; 0x8d20 <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    8ccc:	ed 89       	ldd	r30, Y+21	; 0x15
    8cce:	fe 89       	ldd	r31, Y+22	; 0x16
    8cd0:	bf 01       	movw	r22, r30
    8cd2:	6f 5f       	subi	r22, 0xFF	; 255
    8cd4:	7f 4f       	sbci	r23, 0xFF	; 255
    8cd6:	7e 8b       	std	Y+22, r23	; 0x16
    8cd8:	6d 8b       	std	Y+21, r22	; 0x15
    8cda:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    8cdc:	8f 3f       	cpi	r24, 0xFF	; 255
    8cde:	31 f4       	brne	.+12     	; 0x8cec <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8ce0:	88 81       	ld	r24, Y
    8ce2:	8f 77       	andi	r24, 0x7F	; 127
    8ce4:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    8ce6:	1e 8a       	std	Y+22, r1	; 0x16
    8ce8:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    8cea:	1a c0       	rjmp	.+52     	; 0x8d20 <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    8cec:	32 96       	adiw	r30, 0x02	; 2
    8cee:	fe 8b       	std	Y+22, r31	; 0x16
    8cf0:	ed 8b       	std	Y+21, r30	; 0x15
    8cf2:	fb 01       	movw	r30, r22
    8cf4:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    8cf6:	e8 2f       	mov	r30, r24
    8cf8:	f0 e0       	ldi	r31, 0x00	; 0
    8cfa:	ee 0f       	add	r30, r30
    8cfc:	ff 1f       	adc	r31, r31
    8cfe:	ee 53       	subi	r30, 0x3E	; 62
    8d00:	ff 4f       	sbci	r31, 0xFF	; 255
    8d02:	25 91       	lpm	r18, Z+
    8d04:	34 91       	lpm	r19, Z
    8d06:	ce 01       	movw	r24, r28
    8d08:	f9 01       	movw	r30, r18
    8d0a:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    8d0c:	ed 89       	ldd	r30, Y+21	; 0x15
    8d0e:	fe 89       	ldd	r31, Y+22	; 0x16
    8d10:	cf 01       	movw	r24, r30
    8d12:	01 96       	adiw	r24, 0x01	; 1
    8d14:	9e 8b       	std	Y+22, r25	; 0x16
    8d16:	8d 8b       	std	Y+21, r24	; 0x15
    8d18:	e4 91       	lpm	r30, Z
    8d1a:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    8d1c:	1b 8a       	std	Y+19, r1	; 0x13
    8d1e:	d2 cf       	rjmp	.-92     	; 0x8cc4 <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    8d20:	9f 5f       	subi	r25, 0xFF	; 255
    8d22:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    8d24:	98 81       	ld	r25, Y
    8d26:	95 ff       	sbrs	r25, 5
    8d28:	5e c0       	rjmp	.+188    	; 0x8de6 <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    8d2a:	8c 89       	ldd	r24, Y+20	; 0x14
    8d2c:	8f 3f       	cpi	r24, 0xFF	; 255
    8d2e:	11 f0       	breq	.+4      	; 0x8d34 <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    8d30:	8f 5f       	subi	r24, 0xFF	; 255
    8d32:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    8d34:	97 fd       	sbrc	r25, 7
    8d36:	02 c0       	rjmp	.+4      	; 0x8d3c <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    8d38:	9c 85       	ldd	r25, Y+12	; 0x0c
    8d3a:	01 c0       	rjmp	.+2      	; 0x8d3e <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    8d3c:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    8d3e:	8d 85       	ldd	r24, Y+13	; 0x0d
    8d40:	49 85       	ldd	r20, Y+9	; 0x09
    8d42:	88 23       	and	r24, r24
    8d44:	09 f4       	brne	.+2      	; 0x8d48 <ProcessMusic+0x2ee>
    8d46:	49 c0       	rjmp	.+146    	; 0x8dda <ProcessMusic+0x380>
    8d48:	6e 85       	ldd	r22, Y+14	; 0x0e
    8d4a:	66 23       	and	r22, r22
    8d4c:	09 f4       	brne	.+2      	; 0x8d50 <ProcessMusic+0x2f6>
    8d4e:	45 c0       	rjmp	.+138    	; 0x8dda <ProcessMusic+0x380>
    8d50:	99 23       	and	r25, r25
    8d52:	09 f4       	brne	.+2      	; 0x8d56 <ProcessMusic+0x2fc>
    8d54:	42 c0       	rjmp	.+132    	; 0x8dda <ProcessMusic+0x380>
    8d56:	50 91 18 09 	lds	r21, 0x0918	; 0x800918 <masterVolume>
    8d5a:	55 23       	and	r21, r21
    8d5c:	09 f4       	brne	.+2      	; 0x8d60 <ProcessMusic+0x306>
    8d5e:	3d c0       	rjmp	.+122    	; 0x8dda <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    8d60:	89 9f       	mul	r24, r25
    8d62:	c0 01       	movw	r24, r0
    8d64:	11 24       	eor	r1, r1
    8d66:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    8d68:	89 2f       	mov	r24, r25
    8d6a:	99 27       	eor	r25, r25
    8d6c:	68 9f       	mul	r22, r24
    8d6e:	90 01       	movw	r18, r0
    8d70:	69 9f       	mul	r22, r25
    8d72:	30 0d       	add	r19, r0
    8d74:	11 24       	eor	r1, r1
    8d76:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    8d78:	23 2f       	mov	r18, r19
    8d7a:	33 27       	eor	r19, r19
    8d7c:	6b 81       	ldd	r22, Y+3	; 0x03
    8d7e:	62 9f       	mul	r22, r18
    8d80:	c0 01       	movw	r24, r0
    8d82:	63 9f       	mul	r22, r19
    8d84:	90 0d       	add	r25, r0
    8d86:	11 24       	eor	r1, r1
    8d88:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    8d8a:	89 2f       	mov	r24, r25
    8d8c:	99 27       	eor	r25, r25
    8d8e:	58 9f       	mul	r21, r24
    8d90:	90 01       	movw	r18, r0
    8d92:	59 9f       	mul	r21, r25
    8d94:	30 0d       	add	r19, r0
    8d96:	11 24       	eor	r1, r1
    8d98:	33 95       	inc	r19
				uVol>>=8;
    8d9a:	23 2f       	mov	r18, r19
    8d9c:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    8d9e:	8a 85       	ldd	r24, Y+10	; 0x0a
    8da0:	88 23       	and	r24, r24
    8da2:	e9 f0       	breq	.+58     	; 0x8dde <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    8da4:	e4 2f       	mov	r30, r20
    8da6:	f0 e0       	ldi	r31, 0x00	; 0
    8da8:	e0 50       	subi	r30, 0x00	; 0
    8daa:	f0 47       	sbci	r31, 0x70	; 112
    8dac:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    8dae:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    8db0:	8e 9f       	mul	r24, r30
    8db2:	f0 01       	movw	r30, r0
    8db4:	11 24       	eor	r1, r1
    8db6:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8db8:	ef 2f       	mov	r30, r31
    8dba:	ff 27       	eor	r31, r31
    8dbc:	b7 01       	movw	r22, r14
    8dbe:	6e 1b       	sub	r22, r30
    8dc0:	7f 0b       	sbc	r23, r31
    8dc2:	62 9f       	mul	r22, r18
    8dc4:	c0 01       	movw	r24, r0
    8dc6:	63 9f       	mul	r22, r19
    8dc8:	90 0d       	add	r25, r0
    8dca:	72 9f       	mul	r23, r18
    8dcc:	90 0d       	add	r25, r0
    8dce:	11 24       	eor	r1, r1
    8dd0:	9c 01       	movw	r18, r24
    8dd2:	33 95       	inc	r19
					uVol>>=8;
    8dd4:	23 2f       	mov	r18, r19
    8dd6:	33 27       	eor	r19, r19
    8dd8:	02 c0       	rjmp	.+4      	; 0x8dde <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    8dda:	20 e0       	ldi	r18, 0x00	; 0
    8ddc:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    8dde:	8b 85       	ldd	r24, Y+11	; 0x0b
    8de0:	48 0f       	add	r20, r24
    8de2:	49 87       	std	Y+9, r20	; 0x09
    8de4:	02 c0       	rjmp	.+4      	; 0x8dea <ProcessMusic+0x390>

		}else{
			uVol=0;
    8de6:	20 e0       	ldi	r18, 0x00	; 0
    8de8:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    8dea:	f8 01       	movw	r30, r16
    8dec:	20 83       	st	Z, r18
    8dee:	67 96       	adiw	r28, 0x17	; 23
    8df0:	0a 5f       	subi	r16, 0xFA	; 250
    8df2:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8df4:	f9 e0       	ldi	r31, 0x09	; 9
    8df6:	c3 31       	cpi	r28, 0x13	; 19
    8df8:	df 07       	cpc	r29, r31
    8dfa:	09 f0       	breq	.+2      	; 0x8dfe <ProcessMusic+0x3a4>
    8dfc:	59 cf       	rjmp	.-334    	; 0x8cb0 <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    8dfe:	df 91       	pop	r29
    8e00:	cf 91       	pop	r28
    8e02:	1f 91       	pop	r17
    8e04:	0f 91       	pop	r16
    8e06:	ff 90       	pop	r15
    8e08:	ef 90       	pop	r14
    8e0a:	08 95       	ret

00008e0c <SetMixerNote>:
    8e0c:	99 27       	eor	r25, r25
    8e0e:	77 27       	eor	r23, r23
    8e10:	83 30       	cpi	r24, 0x03	; 3
    8e12:	09 f4       	brne	.+2      	; 0x8e16 <set_note_waves>
    8e14:	08 95       	ret

00008e16 <set_note_waves>:
    8e16:	e4 e7       	ldi	r30, 0x74	; 116
    8e18:	fe e8       	ldi	r31, 0x8E	; 142
    8e1a:	66 0f       	add	r22, r22
    8e1c:	77 1f       	adc	r23, r23
    8e1e:	e6 0f       	add	r30, r22
    8e20:	f7 1f       	adc	r31, r23
    8e22:	a5 91       	lpm	r26, Z+
    8e24:	b4 91       	lpm	r27, Z
    8e26:	e6 e7       	ldi	r30, 0x76	; 118
    8e28:	f8 e0       	ldi	r31, 0x08	; 8
    8e2a:	26 e0       	ldi	r18, 0x06	; 6
    8e2c:	28 9f       	mul	r18, r24
    8e2e:	e0 0d       	add	r30, r0
    8e30:	f1 1d       	adc	r31, r1
    8e32:	a1 83       	std	Z+1, r26	; 0x01
    8e34:	b2 83       	std	Z+2, r27	; 0x02
    8e36:	11 24       	eor	r1, r1
    8e38:	08 95       	ret

00008e3a <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    8e3a:	99 27       	eor	r25, r25
	clr r23
    8e3c:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    8e3e:	e6 e7       	ldi	r30, 0x76	; 118
	ldi ZH,hi8(mixerStruct)
    8e40:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    8e42:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    8e44:	28 9f       	mul	r18, r24
	add ZL,r0
    8e46:	e0 0d       	add	r30, r0
	adc ZH,r1
    8e48:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    8e4a:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    8e4c:	31 f4       	brne	.+12     	; 0x8e5a <smw1>
	lds r22,tr4_params
    8e4e:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	andi r22,0xfe;
    8e52:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    8e54:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw	
    8e58:	0b c0       	rjmp	.+22     	; 0x8e70 <esmw>

00008e5a <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    8e5a:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    8e5c:	31 f4       	brne	.+12     	; 0x8e6a <smw2>
	lds r22,tr4_params
    8e5e:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	ori r22,0xfe;
    8e62:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    8e64:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw
    8e68:	03 c0       	rjmp	.+6      	; 0x8e70 <esmw>

00008e6a <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    8e6a:	70 e9       	ldi	r23, 0x90	; 144
	add r23,r22
    8e6c:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    8e6e:	75 83       	std	Z+5, r23	; 0x05

00008e70 <esmw>:
#endif

esmw:
	clr r1	
    8e70:	11 24       	eor	r1, r1
	ret
    8e72:	08 95       	ret

00008e74 <steptable>:
    8e74:	22 00       	.word	0x0022	; ????
    8e76:	24 00       	.word	0x0024	; ????
    8e78:	26 00       	.word	0x0026	; ????
    8e7a:	28 00       	.word	0x0028	; ????
    8e7c:	2b 00       	.word	0x002b	; ????
    8e7e:	2d 00       	.word	0x002d	; ????
    8e80:	30 00       	.word	0x0030	; ????
    8e82:	33 00       	.word	0x0033	; ????
    8e84:	36 00       	.word	0x0036	; ????
    8e86:	39 00       	.word	0x0039	; ????
    8e88:	3d 00       	.word	0x003d	; ????
    8e8a:	40 00       	.word	0x0040	; ????
    8e8c:	44 00       	.word	0x0044	; ????
    8e8e:	48 00       	.word	0x0048	; ????
    8e90:	4c 00       	.word	0x004c	; ????
    8e92:	51 00       	.word	0x0051	; ????
    8e94:	56 00       	.word	0x0056	; ????
    8e96:	5b 00       	.word	0x005b	; ????
    8e98:	60 00       	.word	0x0060	; ????
    8e9a:	66 00       	.word	0x0066	; ????
    8e9c:	6c 00       	.word	0x006c	; ????
    8e9e:	73 00       	.word	0x0073	; ????
    8ea0:	79 00       	.word	0x0079	; ????
    8ea2:	81 00       	.word	0x0081	; ????
    8ea4:	88 00       	.word	0x0088	; ????
    8ea6:	90 00       	.word	0x0090	; ????
    8ea8:	99 00       	.word	0x0099	; ????
    8eaa:	a2 00       	.word	0x00a2	; ????
    8eac:	ac 00       	.word	0x00ac	; ????
    8eae:	b6 00       	.word	0x00b6	; ????
    8eb0:	c1 00       	.word	0x00c1	; ????
    8eb2:	cc 00       	.word	0x00cc	; ????
    8eb4:	d8 00       	.word	0x00d8	; ????
    8eb6:	e5 00       	.word	0x00e5	; ????
    8eb8:	f3 00       	.word	0x00f3	; ????
    8eba:	01 01       	movw	r0, r2
    8ebc:	10 01       	movw	r2, r0
    8ebe:	21 01       	movw	r4, r2
    8ec0:	32 01       	movw	r6, r4
    8ec2:	44 01       	movw	r8, r8
    8ec4:	57 01       	movw	r10, r14
    8ec6:	6c 01       	movw	r12, r24
    8ec8:	81 01       	movw	r16, r2
    8eca:	98 01       	movw	r18, r16
    8ecc:	b0 01       	movw	r22, r0
    8ece:	ca 01       	movw	r24, r20
    8ed0:	e5 01       	movw	r28, r10
    8ed2:	02 02       	muls	r16, r18
    8ed4:	21 02       	muls	r18, r17
    8ed6:	41 02       	muls	r20, r17
    8ed8:	64 02       	muls	r22, r20
    8eda:	88 02       	muls	r24, r24
    8edc:	ae 02       	muls	r26, r30
    8ede:	d7 02       	muls	r29, r23
    8ee0:	03 03       	mulsu	r16, r19
    8ee2:	30 03       	mulsu	r19, r16
    8ee4:	61 03       	mulsu	r22, r17
    8ee6:	94 03       	fmuls	r17, r20
    8ee8:	cb 03       	fmulsu	r20, r19
    8eea:	05 04       	cpc	r0, r5
    8eec:	42 04       	cpc	r4, r2
    8eee:	83 04       	cpc	r8, r3
    8ef0:	c7 04       	cpc	r12, r7
    8ef2:	10 05       	cpc	r17, r0
    8ef4:	5d 05       	cpc	r21, r13
    8ef6:	af 05       	cpc	r26, r15
    8ef8:	05 06       	cpc	r0, r21
    8efa:	61 06       	cpc	r6, r17
    8efc:	c2 06       	cpc	r12, r18
    8efe:	29 07       	cpc	r18, r25
    8f00:	96 07       	cpc	r25, r22
    8f02:	09 08       	sbc	r0, r9
    8f04:	83 08       	sbc	r8, r3
    8f06:	05 09       	sbc	r16, r5
    8f08:	8e 09       	sbc	r24, r14
    8f0a:	20 0a       	sbc	r2, r16
    8f0c:	ba 0a       	sbc	r11, r26
    8f0e:	5d 0b       	sbc	r21, r29
    8f10:	0a 0c       	add	r0, r10
    8f12:	c1 0c       	add	r12, r1
    8f14:	84 0d       	add	r24, r4
    8f16:	51 0e       	add	r5, r17
    8f18:	2b 0f       	add	r18, r27
    8f1a:	12 10       	cpse	r1, r2
    8f1c:	07 11       	cpse	r16, r7
    8f1e:	0a 12       	cpse	r0, r26
    8f20:	1d 13       	cpse	r17, r29
    8f22:	40 14       	cp	r4, r0
    8f24:	74 15       	cp	r23, r4
    8f26:	ba 16       	cp	r11, r26
    8f28:	14 18       	sub	r1, r4
    8f2a:	83 19       	sub	r24, r3
    8f2c:	07 1b       	sub	r16, r23
    8f2e:	a3 1c       	adc	r10, r3
    8f30:	57 1e       	adc	r5, r23
    8f32:	24 20       	and	r2, r4
    8f34:	0e 22       	and	r0, r30
    8f36:	14 24       	eor	r1, r4
    8f38:	39 26       	eor	r3, r25
    8f3a:	7f 28       	or	r7, r15
    8f3c:	e8 2a       	or	r14, r24
    8f3e:	75 2d       	mov	r23, r5
    8f40:	29 30       	cpi	r18, 0x09	; 9
    8f42:	06 33       	cpi	r16, 0x36	; 54
    8f44:	0f 36       	cpi	r16, 0x6F	; 111
    8f46:	45 39       	cpi	r20, 0x95	; 149
    8f48:	ad 3c       	cpi	r26, 0xCD	; 205
    8f4a:	49 40       	sbci	r20, 0x09	; 9
    8f4c:	1b 44       	sbci	r17, 0x4B	; 75
    8f4e:	28 48       	sbci	r18, 0x88	; 136
    8f50:	73 4c       	sbci	r23, 0xC3	; 195
    8f52:	fe 50       	subi	r31, 0x0E	; 14
    8f54:	cf 55       	subi	r28, 0x5F	; 95
    8f56:	ea 5a       	subi	r30, 0xAA	; 170
    8f58:	51 60       	ori	r21, 0x01	; 1
    8f5a:	0c 66       	ori	r16, 0x6C	; 108
    8f5c:	1d 6c       	ori	r17, 0xCD	; 205
    8f5e:	8b 72       	andi	r24, 0x2B	; 43
    8f60:	5a 79       	andi	r21, 0x9A	; 154
    8f62:	92 80       	ldd	r9, Z+2	; 0x02
    8f64:	37 88       	ldd	r3, Z+23	; 0x17
    8f66:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x89e5>
    8f6a:	fd a1       	ldd	r31, Y+37	; 0x25
    8f6c:	9f ab       	std	Y+55, r25	; 0x37
    8f6e:	d3 b5       	in	r29, 0x23	; 35
    8f70:	a3 c0       	rjmp	.+326    	; 0x90b8 <waves+0xb8>
	...

00009000 <waves>:
    9000:	00 03       	mulsu	r16, r16
    9002:	06 09       	sbc	r16, r6
    9004:	0c 10       	cpse	r0, r12
    9006:	13 16       	cp	r1, r19
    9008:	19 1c       	adc	r1, r9
    900a:	1f 22       	and	r1, r31
    900c:	25 28       	or	r2, r5
    900e:	2b 2e       	mov	r2, r27
    9010:	31 33       	cpi	r19, 0x31	; 49
    9012:	36 39       	cpi	r19, 0x96	; 150
    9014:	3c 3f       	cpi	r19, 0xFC	; 252
    9016:	41 44       	sbci	r20, 0x41	; 65
    9018:	47 49       	sbci	r20, 0x97	; 151
    901a:	4c 4e       	sbci	r20, 0xEC	; 236
    901c:	51 53       	subi	r21, 0x31	; 49
    901e:	55 58       	subi	r21, 0x85	; 133
    9020:	5a 5c       	subi	r21, 0xCA	; 202
    9022:	5e 60       	ori	r21, 0x0E	; 14
    9024:	62 64       	ori	r22, 0x42	; 66
    9026:	66 68       	ori	r22, 0x86	; 134
    9028:	6a 6b       	ori	r22, 0xBA	; 186
    902a:	6d 6f       	ori	r22, 0xFD	; 253
    902c:	70 71       	andi	r23, 0x10	; 16
    902e:	73 74       	andi	r23, 0x43	; 67
    9030:	75 76       	andi	r23, 0x65	; 101
    9032:	78 79       	andi	r23, 0x98	; 152
    9034:	7a 7a       	andi	r23, 0xAA	; 170
    9036:	7b 7c       	andi	r23, 0xCB	; 203
    9038:	7d 7d       	andi	r23, 0xDD	; 221
    903a:	7e 7e       	andi	r23, 0xEE	; 238
    903c:	7e 7f       	andi	r23, 0xFE	; 254
    903e:	7f 7f       	andi	r23, 0xFF	; 255
    9040:	7f 7f       	andi	r23, 0xFF	; 255
    9042:	7f 7f       	andi	r23, 0xFF	; 255
    9044:	7e 7e       	andi	r23, 0xEE	; 238
    9046:	7e 7d       	andi	r23, 0xDE	; 222
    9048:	7d 7c       	andi	r23, 0xCD	; 205
    904a:	7b 7a       	andi	r23, 0xAB	; 171
    904c:	7a 79       	andi	r23, 0x9A	; 154
    904e:	78 76       	andi	r23, 0x68	; 104
    9050:	75 74       	andi	r23, 0x45	; 69
    9052:	73 71       	andi	r23, 0x13	; 19
    9054:	70 6f       	ori	r23, 0xF0	; 240
    9056:	6d 6b       	ori	r22, 0xBD	; 189
    9058:	6a 68       	ori	r22, 0x8A	; 138
    905a:	66 64       	ori	r22, 0x46	; 70
    905c:	62 60       	ori	r22, 0x02	; 2
    905e:	5e 5c       	subi	r21, 0xCE	; 206
    9060:	5a 58       	subi	r21, 0x8A	; 138
    9062:	55 53       	subi	r21, 0x35	; 53
    9064:	51 4e       	sbci	r21, 0xE1	; 225
    9066:	4c 49       	sbci	r20, 0x9C	; 156
    9068:	47 44       	sbci	r20, 0x47	; 71
    906a:	41 3f       	cpi	r20, 0xF1	; 241
    906c:	3c 39       	cpi	r19, 0x9C	; 156
    906e:	36 33       	cpi	r19, 0x36	; 54
    9070:	31 2e       	mov	r3, r17
    9072:	2b 28       	or	r2, r11
    9074:	25 22       	and	r2, r21
    9076:	1f 1c       	adc	r1, r15
    9078:	19 16       	cp	r1, r25
    907a:	13 10       	cpse	r1, r3
    907c:	0c 09       	sbc	r16, r12
    907e:	06 03       	mulsu	r16, r22
    9080:	00 fd       	sbrc	r16, 0
    9082:	fa f7       	brpl	.-2      	; 0x9082 <waves+0x82>
    9084:	f4 f0       	brlt	.+60     	; 0x90c2 <waves+0xc2>
    9086:	ed ea       	ldi	r30, 0xAD	; 173
    9088:	e7 e4       	ldi	r30, 0x47	; 71
    908a:	e1 de       	rcall	.-574    	; 0x8e4e <SetMixerWave+0x14>
    908c:	db d8       	rcall	.-3658   	; 0x8244 <no_render+0xc>
    908e:	d5 d2       	rcall	.+1450   	; 0x963a <waves+0x63a>
    9090:	cf cd       	rjmp	.-1122   	; 0x8c30 <ProcessMusic+0x1d6>
    9092:	ca c7       	rjmp	.+3988   	; 0xa028 <drawplayer+0xc4>
    9094:	c4 c1       	rjmp	.+904    	; 0x941e <waves+0x41e>
    9096:	bf bc       	out	0x2f, r11	; 47
    9098:	b9 b7       	in	r27, 0x39	; 57
    909a:	b4 b2       	in	r11, 0x14	; 20
    909c:	af ad       	ldd	r26, Y+63	; 0x3f
    909e:	ab a8       	ldd	r10, Y+51	; 0x33
    90a0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    90a2:	a2 a0       	ldd	r10, Z+34	; 0x22
    90a4:	9e 9c       	mul	r9, r14
    90a6:	9a 98       	cbi	0x13, 2	; 19
    90a8:	96 95       	lsr	r25
    90aa:	93 91       	.word	0x9193	; ????
    90ac:	90 8f       	std	Z+24, r25	; 0x18
    90ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    90b0:	8b 8a       	std	Y+19, r8	; 0x13
    90b2:	88 87       	std	Y+8, r24	; 0x08
    90b4:	86 86       	std	Z+14, r8	; 0x0e
    90b6:	85 84       	ldd	r8, Z+13	; 0x0d
    90b8:	83 83       	std	Z+3, r24	; 0x03
    90ba:	82 82       	std	Z+2, r8	; 0x02
    90bc:	82 81       	ldd	r24, Z+2	; 0x02
    90be:	81 81       	ldd	r24, Z+1	; 0x01
    90c0:	81 81       	ldd	r24, Z+1	; 0x01
    90c2:	81 81       	ldd	r24, Z+1	; 0x01
    90c4:	82 82       	std	Z+2, r8	; 0x02
    90c6:	82 83       	std	Z+2, r24	; 0x02
    90c8:	83 84       	ldd	r8, Z+11	; 0x0b
    90ca:	85 86       	std	Z+13, r8	; 0x0d
    90cc:	86 87       	std	Z+14, r24	; 0x0e
    90ce:	88 8a       	std	Y+16, r8	; 0x10
    90d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    90d2:	8d 8f       	std	Y+29, r24	; 0x1d
    90d4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8693>
    90d8:	96 98       	cbi	0x12, 6	; 18
    90da:	9a 9c       	mul	r9, r10
    90dc:	9e a0       	ldd	r9, Y+38	; 0x26
    90de:	a2 a4       	ldd	r10, Z+42	; 0x2a
    90e0:	a6 a8       	ldd	r10, Z+54	; 0x36
    90e2:	ab ad       	ldd	r26, Y+59	; 0x3b
    90e4:	af b2       	in	r10, 0x1f	; 31
    90e6:	b4 b7       	in	r27, 0x34	; 52
    90e8:	b9 bc       	out	0x29, r11	; 41
    90ea:	bf c1       	rjmp	.+894    	; 0x946a <waves+0x46a>
    90ec:	c4 c7       	rjmp	.+3976   	; 0xa076 <drawplayer+0x112>
    90ee:	ca cd       	rjmp	.-1132   	; 0x8c84 <ProcessMusic+0x22a>
    90f0:	cf d2       	rcall	.+1438   	; 0x9690 <waves+0x690>
    90f2:	d5 d8       	rcall	.-3670   	; 0x829e <no_render+0x66>
    90f4:	db de       	rcall	.-586    	; 0x8eac <steptable+0x38>
    90f6:	e1 e4       	ldi	r30, 0x41	; 65
    90f8:	e7 ea       	ldi	r30, 0xA7	; 167
    90fa:	ed f0       	brhs	.+58     	; 0x9136 <waves+0x136>
    90fc:	f4 f7       	brge	.-4      	; 0x90fa <waves+0xfa>
    90fe:	fa fd       	.word	0xfdfa	; ????
    9100:	80 81       	ld	r24, Z
    9102:	82 83       	std	Z+2, r24	; 0x02
    9104:	84 85       	ldd	r24, Z+12	; 0x0c
    9106:	86 87       	std	Z+14, r24	; 0x0e
    9108:	88 89       	ldd	r24, Y+16	; 0x10
    910a:	8a 8b       	std	Y+18, r24	; 0x12
    910c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    910e:	8e 8f       	std	Y+30, r24	; 0x1e
    9110:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8492>
    9114:	94 95       	.word	0x9594	; ????
    9116:	96 97       	sbiw	r26, 0x26	; 38
    9118:	98 99       	sbic	0x13, 0	; 19
    911a:	9a 9b       	sbis	0x13, 2	; 19
    911c:	9c 9d       	mul	r25, r12
    911e:	9e 9f       	mul	r25, r30
    9120:	a0 a1       	ldd	r26, Z+32	; 0x20
    9122:	a2 a3       	std	Z+34, r26	; 0x22
    9124:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9126:	a6 a7       	std	Z+46, r26	; 0x2e
    9128:	a8 a9       	ldd	r26, Y+48	; 0x30
    912a:	aa ab       	std	Y+50, r26	; 0x32
    912c:	ac ad       	ldd	r26, Y+60	; 0x3c
    912e:	ae af       	std	Y+62, r26	; 0x3e
    9130:	b0 b1       	in	r27, 0x00	; 0
    9132:	b2 b3       	in	r27, 0x12	; 18
    9134:	b4 b5       	in	r27, 0x24	; 36
    9136:	b6 b7       	in	r27, 0x36	; 54
    9138:	b8 b9       	out	0x08, r27	; 8
    913a:	ba bb       	out	0x1a, r27	; 26
    913c:	bc bd       	out	0x2c, r27	; 44
    913e:	be bf       	out	0x3e, r27	; 62
    9140:	c0 c1       	rjmp	.+896    	; 0x94c2 <waves+0x4c2>
    9142:	c2 c3       	rjmp	.+1924   	; 0x98c8 <waves+0x8c8>
    9144:	c4 c5       	rjmp	.+2952   	; 0x9cce <MapSprite2+0x3e>
    9146:	c6 c7       	rjmp	.+3980   	; 0xa0d4 <drawplayer2+0x44>
    9148:	c8 c9       	rjmp	.-3184   	; 0x84da <WriteEeprom+0x6>
    914a:	ca cb       	rjmp	.-2156   	; 0x88e0 <TriggerCommon+0x98>
    914c:	cc cd       	rjmp	.-1128   	; 0x8ce6 <ProcessMusic+0x28c>
    914e:	ce cf       	rjmp	.-100    	; 0x90ec <waves+0xec>
    9150:	d0 d1       	rcall	.+928    	; 0x94f2 <waves+0x4f2>
    9152:	d2 d3       	rcall	.+1956   	; 0x98f8 <waves+0x8f8>
    9154:	d4 d5       	rcall	.+2984   	; 0x9cfe <MapSprite2+0x6e>
    9156:	d6 d7       	rcall	.+4012   	; 0xa104 <drawplayer2+0x74>
    9158:	d8 d9       	rcall	.-3152   	; 0x850a <ReadButtons+0x6>
    915a:	da db       	rcall	.-2124   	; 0x8910 <TriggerCommon+0xc8>
    915c:	dc dd       	rcall	.-1096   	; 0x8d16 <ProcessMusic+0x2bc>
    915e:	de df       	rcall	.-68     	; 0x911c <waves+0x11c>
    9160:	e0 e1       	ldi	r30, 0x10	; 16
    9162:	e2 e3       	ldi	r30, 0x32	; 50
    9164:	e4 e5       	ldi	r30, 0x54	; 84
    9166:	e6 e7       	ldi	r30, 0x76	; 118
    9168:	e8 e9       	ldi	r30, 0x98	; 152
    916a:	ea eb       	ldi	r30, 0xBA	; 186
    916c:	ec ed       	ldi	r30, 0xDC	; 220
    916e:	ee ef       	ldi	r30, 0xFE	; 254
    9170:	f0 f1       	brcs	.+124    	; 0x91ee <waves+0x1ee>
    9172:	f2 f3       	brmi	.-4      	; 0x9170 <waves+0x170>
    9174:	f4 f5       	brge	.+124    	; 0x91f2 <waves+0x1f2>
    9176:	f6 f7       	brtc	.-4      	; 0x9174 <waves+0x174>
    9178:	f8 f9       	.word	0xf9f8	; ????
    917a:	fa fb       	.word	0xfbfa	; ????
    917c:	fc fd       	.word	0xfdfc	; ????
    917e:	fe ff       	.word	0xfffe	; ????
    9180:	00 01       	movw	r0, r0
    9182:	02 03       	mulsu	r16, r18
    9184:	04 05       	cpc	r16, r4
    9186:	06 07       	cpc	r16, r22
    9188:	08 09       	sbc	r16, r8
    918a:	0a 0b       	sbc	r16, r26
    918c:	0c 0d       	add	r16, r12
    918e:	0e 0f       	add	r16, r30
    9190:	10 11       	cpse	r17, r0
    9192:	12 13       	cpse	r17, r18
    9194:	14 15       	cp	r17, r4
    9196:	16 17       	cp	r17, r22
    9198:	18 19       	sub	r17, r8
    919a:	1a 1b       	sub	r17, r26
    919c:	1c 1d       	adc	r17, r12
    919e:	1e 1f       	adc	r17, r30
    91a0:	20 21       	and	r18, r0
    91a2:	22 23       	and	r18, r18
    91a4:	24 25       	eor	r18, r4
    91a6:	26 27       	eor	r18, r22
    91a8:	28 29       	or	r18, r8
    91aa:	2a 2b       	or	r18, r26
    91ac:	2c 2d       	mov	r18, r12
    91ae:	2e 2f       	mov	r18, r30
    91b0:	30 31       	cpi	r19, 0x10	; 16
    91b2:	32 33       	cpi	r19, 0x32	; 50
    91b4:	34 35       	cpi	r19, 0x54	; 84
    91b6:	36 37       	cpi	r19, 0x76	; 118
    91b8:	38 39       	cpi	r19, 0x98	; 152
    91ba:	3a 3b       	cpi	r19, 0xBA	; 186
    91bc:	3c 3d       	cpi	r19, 0xDC	; 220
    91be:	3e 3f       	cpi	r19, 0xFE	; 254
    91c0:	40 41       	sbci	r20, 0x10	; 16
    91c2:	42 43       	sbci	r20, 0x32	; 50
    91c4:	44 45       	sbci	r20, 0x54	; 84
    91c6:	46 47       	sbci	r20, 0x76	; 118
    91c8:	48 49       	sbci	r20, 0x98	; 152
    91ca:	4a 4b       	sbci	r20, 0xBA	; 186
    91cc:	4c 4d       	sbci	r20, 0xDC	; 220
    91ce:	4e 4f       	sbci	r20, 0xFE	; 254
    91d0:	50 51       	subi	r21, 0x10	; 16
    91d2:	52 53       	subi	r21, 0x32	; 50
    91d4:	54 55       	subi	r21, 0x54	; 84
    91d6:	56 57       	subi	r21, 0x76	; 118
    91d8:	58 59       	subi	r21, 0x98	; 152
    91da:	5a 5b       	subi	r21, 0xBA	; 186
    91dc:	5c 5d       	subi	r21, 0xDC	; 220
    91de:	5e 5f       	subi	r21, 0xFE	; 254
    91e0:	60 61       	ori	r22, 0x10	; 16
    91e2:	62 63       	ori	r22, 0x32	; 50
    91e4:	64 65       	ori	r22, 0x54	; 84
    91e6:	66 67       	ori	r22, 0x76	; 118
    91e8:	68 69       	ori	r22, 0x98	; 152
    91ea:	6a 6b       	ori	r22, 0xBA	; 186
    91ec:	6c 6d       	ori	r22, 0xDC	; 220
    91ee:	6e 6f       	ori	r22, 0xFE	; 254
    91f0:	70 71       	andi	r23, 0x10	; 16
    91f2:	72 73       	andi	r23, 0x32	; 50
    91f4:	74 75       	andi	r23, 0x54	; 84
    91f6:	76 77       	andi	r23, 0x76	; 118
    91f8:	78 79       	andi	r23, 0x98	; 152
    91fa:	7a 7b       	andi	r23, 0xBA	; 186
    91fc:	7c 7d       	andi	r23, 0xDC	; 220
    91fe:	7e 7f       	andi	r23, 0xFE	; 254
    9200:	00 02       	muls	r16, r16
    9202:	04 06       	cpc	r0, r20
    9204:	08 0a       	sbc	r0, r24
    9206:	0c 0e       	add	r0, r28
    9208:	10 12       	cpse	r1, r16
    920a:	14 16       	cp	r1, r20
    920c:	18 1a       	sub	r1, r24
    920e:	1c 1e       	adc	r1, r28
    9210:	20 22       	and	r2, r16
    9212:	24 26       	eor	r2, r20
    9214:	28 2a       	or	r2, r24
    9216:	2c 2e       	mov	r2, r28
    9218:	30 32       	cpi	r19, 0x20	; 32
    921a:	34 36       	cpi	r19, 0x64	; 100
    921c:	38 3a       	cpi	r19, 0xA8	; 168
    921e:	3c 3e       	cpi	r19, 0xEC	; 236
    9220:	40 42       	sbci	r20, 0x20	; 32
    9222:	44 46       	sbci	r20, 0x64	; 100
    9224:	48 4a       	sbci	r20, 0xA8	; 168
    9226:	4c 4e       	sbci	r20, 0xEC	; 236
    9228:	50 52       	subi	r21, 0x20	; 32
    922a:	54 56       	subi	r21, 0x64	; 100
    922c:	58 5a       	subi	r21, 0xA8	; 168
    922e:	5c 5e       	subi	r21, 0xEC	; 236
    9230:	60 62       	ori	r22, 0x20	; 32
    9232:	64 66       	ori	r22, 0x64	; 100
    9234:	68 6a       	ori	r22, 0xA8	; 168
    9236:	6c 6e       	ori	r22, 0xEC	; 236
    9238:	70 72       	andi	r23, 0x20	; 32
    923a:	74 76       	andi	r23, 0x64	; 100
    923c:	78 7a       	andi	r23, 0xA8	; 168
    923e:	7c 7e       	andi	r23, 0xEC	; 236
    9240:	7f 7d       	andi	r23, 0xDF	; 223
    9242:	7b 79       	andi	r23, 0x9B	; 155
    9244:	77 75       	andi	r23, 0x57	; 87
    9246:	73 71       	andi	r23, 0x13	; 19
    9248:	6f 6d       	ori	r22, 0xDF	; 223
    924a:	6b 69       	ori	r22, 0x9B	; 155
    924c:	67 65       	ori	r22, 0x57	; 87
    924e:	63 61       	ori	r22, 0x13	; 19
    9250:	5f 5d       	subi	r21, 0xDF	; 223
    9252:	5b 59       	subi	r21, 0x9B	; 155
    9254:	57 55       	subi	r21, 0x57	; 87
    9256:	53 51       	subi	r21, 0x13	; 19
    9258:	4f 4d       	sbci	r20, 0xDF	; 223
    925a:	4b 49       	sbci	r20, 0x9B	; 155
    925c:	47 45       	sbci	r20, 0x57	; 87
    925e:	43 41       	sbci	r20, 0x13	; 19
    9260:	3f 3d       	cpi	r19, 0xDF	; 223
    9262:	3b 39       	cpi	r19, 0x9B	; 155
    9264:	37 35       	cpi	r19, 0x57	; 87
    9266:	33 31       	cpi	r19, 0x13	; 19
    9268:	2f 2d       	mov	r18, r15
    926a:	2b 29       	or	r18, r11
    926c:	27 25       	eor	r18, r7
    926e:	23 21       	and	r18, r3
    9270:	1f 1d       	adc	r17, r15
    9272:	1b 19       	sub	r17, r11
    9274:	17 15       	cp	r17, r7
    9276:	13 11       	cpse	r17, r3
    9278:	0f 0d       	add	r16, r15
    927a:	0b 09       	sbc	r16, r11
    927c:	07 05       	cpc	r16, r7
    927e:	03 01       	movw	r0, r6
    9280:	ff fd       	.word	0xfdff	; ????
    9282:	fb f9       	.word	0xf9fb	; ????
    9284:	f7 f5       	brid	.+124    	; 0x9302 <waves+0x302>
    9286:	f3 f1       	brvs	.+124    	; 0x9304 <waves+0x304>
    9288:	ef ed       	ldi	r30, 0xDF	; 223
    928a:	eb e9       	ldi	r30, 0x9B	; 155
    928c:	e7 e5       	ldi	r30, 0x57	; 87
    928e:	e3 e1       	ldi	r30, 0x13	; 19
    9290:	df dd       	rcall	.-1090   	; 0x8e50 <SetMixerWave+0x16>
    9292:	db d9       	rcall	.-3146   	; 0x864a <PatchCommand11+0xc>
    9294:	d7 d5       	rcall	.+2990   	; 0x9e44 <DisplayLogo+0x14>
    9296:	d3 d1       	rcall	.+934    	; 0x963e <waves+0x63e>
    9298:	cf cd       	rjmp	.-1122   	; 0x8e38 <set_note_waves+0x22>
    929a:	cb c9       	rjmp	.-3178   	; 0x8632 <PatchCommand09>
    929c:	c7 c5       	rjmp	.+2958   	; 0x9e2c <WaitVsync+0x2a>
    929e:	c3 c1       	rjmp	.+902    	; 0x9626 <waves+0x626>
    92a0:	bf bd       	out	0x2f, r27	; 47
    92a2:	bb b9       	out	0x0b, r27	; 11
    92a4:	b7 b5       	in	r27, 0x27	; 39
    92a6:	b3 b1       	in	r27, 0x03	; 3
    92a8:	af ad       	ldd	r26, Y+63	; 0x3f
    92aa:	ab a9       	ldd	r26, Y+51	; 0x33
    92ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    92ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    92b0:	9f 9d       	mul	r25, r15
    92b2:	9b 99       	sbic	0x13, 3	; 19
    92b4:	97 95       	ror	r25
    92b6:	93 91       	.word	0x9193	; ????
    92b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    92ba:	8b 89       	ldd	r24, Y+19	; 0x13
    92bc:	87 85       	ldd	r24, Z+15	; 0x0f
    92be:	83 81       	ldd	r24, Z+3	; 0x03
    92c0:	80 82       	st	Z, r8
    92c2:	84 86       	std	Z+12, r8	; 0x0c
    92c4:	88 8a       	std	Y+16, r8	; 0x10
    92c6:	8c 8e       	std	Y+28, r8	; 0x1c
    92c8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8794>
    92cc:	98 9a       	sbi	0x13, 0	; 19
    92ce:	9c 9e       	mul	r9, r28
    92d0:	a0 a2       	std	Z+32, r10	; 0x20
    92d2:	a4 a6       	std	Z+44, r10	; 0x2c
    92d4:	a8 aa       	std	Y+48, r10	; 0x30
    92d6:	ac ae       	std	Y+60, r10	; 0x3c
    92d8:	b0 b2       	in	r11, 0x10	; 16
    92da:	b4 b6       	in	r11, 0x34	; 52
    92dc:	b8 ba       	out	0x18, r11	; 24
    92de:	bc be       	out	0x3c, r11	; 60
    92e0:	c0 c2       	rjmp	.+1408   	; 0x9862 <waves+0x862>
    92e2:	c4 c6       	rjmp	.+3464   	; 0xa06c <drawplayer+0x108>
    92e4:	c8 ca       	rjmp	.-2672   	; 0x8876 <TriggerCommon+0x2e>
    92e6:	cc ce       	rjmp	.-616    	; 0x9080 <waves+0x80>
    92e8:	d0 d2       	rcall	.+1440   	; 0x988a <waves+0x88a>
    92ea:	d4 d6       	rcall	.+3496   	; 0xa094 <drawplayer2+0x4>
    92ec:	d8 da       	rcall	.-2640   	; 0x889e <TriggerCommon+0x56>
    92ee:	dc de       	rcall	.-584    	; 0x90a8 <waves+0xa8>
    92f0:	e0 e2       	ldi	r30, 0x20	; 32
    92f2:	e4 e6       	ldi	r30, 0x64	; 100
    92f4:	e8 ea       	ldi	r30, 0xA8	; 168
    92f6:	ec ee       	ldi	r30, 0xEC	; 236
    92f8:	f0 f2       	brcs	.-68     	; 0x92b6 <waves+0x2b6>
    92fa:	f4 f6       	brge	.-68     	; 0x92b8 <waves+0x2b8>
    92fc:	f8 fa       	.word	0xfaf8	; ????
    92fe:	fc fe       	.word	0xfefc	; ????
    9300:	7f 7f       	andi	r23, 0xFF	; 255
    9302:	7f 7f       	andi	r23, 0xFF	; 255
    9304:	7f 7f       	andi	r23, 0xFF	; 255
    9306:	7f 7f       	andi	r23, 0xFF	; 255
    9308:	7f 7f       	andi	r23, 0xFF	; 255
    930a:	7f 7f       	andi	r23, 0xFF	; 255
    930c:	7f 7f       	andi	r23, 0xFF	; 255
    930e:	7f 7f       	andi	r23, 0xFF	; 255
    9310:	7f 7f       	andi	r23, 0xFF	; 255
    9312:	7f 7f       	andi	r23, 0xFF	; 255
    9314:	7f 7f       	andi	r23, 0xFF	; 255
    9316:	7f 7f       	andi	r23, 0xFF	; 255
    9318:	7f 7f       	andi	r23, 0xFF	; 255
    931a:	7f 7f       	andi	r23, 0xFF	; 255
    931c:	7f 7f       	andi	r23, 0xFF	; 255
    931e:	7f 7f       	andi	r23, 0xFF	; 255
    9320:	7f 7f       	andi	r23, 0xFF	; 255
    9322:	7f 7f       	andi	r23, 0xFF	; 255
    9324:	7f 7f       	andi	r23, 0xFF	; 255
    9326:	7f 7f       	andi	r23, 0xFF	; 255
    9328:	7f 7f       	andi	r23, 0xFF	; 255
    932a:	7f 7f       	andi	r23, 0xFF	; 255
    932c:	7f 7f       	andi	r23, 0xFF	; 255
    932e:	7f 7f       	andi	r23, 0xFF	; 255
    9330:	7f 7f       	andi	r23, 0xFF	; 255
    9332:	7f 7f       	andi	r23, 0xFF	; 255
    9334:	7f 7f       	andi	r23, 0xFF	; 255
    9336:	7f 7f       	andi	r23, 0xFF	; 255
    9338:	7f 7f       	andi	r23, 0xFF	; 255
    933a:	7f 7f       	andi	r23, 0xFF	; 255
    933c:	7f 7f       	andi	r23, 0xFF	; 255
    933e:	7f 7f       	andi	r23, 0xFF	; 255
    9340:	80 80       	ld	r8, Z
    9342:	80 80       	ld	r8, Z
    9344:	80 80       	ld	r8, Z
    9346:	80 80       	ld	r8, Z
    9348:	80 80       	ld	r8, Z
    934a:	80 80       	ld	r8, Z
    934c:	80 80       	ld	r8, Z
    934e:	80 80       	ld	r8, Z
    9350:	80 80       	ld	r8, Z
    9352:	80 80       	ld	r8, Z
    9354:	80 80       	ld	r8, Z
    9356:	80 80       	ld	r8, Z
    9358:	80 80       	ld	r8, Z
    935a:	80 80       	ld	r8, Z
    935c:	80 80       	ld	r8, Z
    935e:	80 80       	ld	r8, Z
    9360:	80 80       	ld	r8, Z
    9362:	80 80       	ld	r8, Z
    9364:	80 80       	ld	r8, Z
    9366:	80 80       	ld	r8, Z
    9368:	80 80       	ld	r8, Z
    936a:	80 80       	ld	r8, Z
    936c:	80 80       	ld	r8, Z
    936e:	80 80       	ld	r8, Z
    9370:	80 80       	ld	r8, Z
    9372:	80 80       	ld	r8, Z
    9374:	80 80       	ld	r8, Z
    9376:	80 80       	ld	r8, Z
    9378:	80 80       	ld	r8, Z
    937a:	80 80       	ld	r8, Z
    937c:	80 80       	ld	r8, Z
    937e:	80 80       	ld	r8, Z
    9380:	80 80       	ld	r8, Z
    9382:	80 80       	ld	r8, Z
    9384:	80 80       	ld	r8, Z
    9386:	80 80       	ld	r8, Z
    9388:	80 80       	ld	r8, Z
    938a:	80 80       	ld	r8, Z
    938c:	80 80       	ld	r8, Z
    938e:	80 80       	ld	r8, Z
    9390:	80 80       	ld	r8, Z
    9392:	80 80       	ld	r8, Z
    9394:	80 80       	ld	r8, Z
    9396:	80 80       	ld	r8, Z
    9398:	80 80       	ld	r8, Z
    939a:	80 80       	ld	r8, Z
    939c:	80 80       	ld	r8, Z
    939e:	80 80       	ld	r8, Z
    93a0:	80 80       	ld	r8, Z
    93a2:	80 80       	ld	r8, Z
    93a4:	80 80       	ld	r8, Z
    93a6:	80 80       	ld	r8, Z
    93a8:	80 80       	ld	r8, Z
    93aa:	80 80       	ld	r8, Z
    93ac:	80 80       	ld	r8, Z
    93ae:	80 80       	ld	r8, Z
    93b0:	80 80       	ld	r8, Z
    93b2:	80 80       	ld	r8, Z
    93b4:	80 80       	ld	r8, Z
    93b6:	80 80       	ld	r8, Z
    93b8:	80 80       	ld	r8, Z
    93ba:	80 80       	ld	r8, Z
    93bc:	80 80       	ld	r8, Z
    93be:	80 80       	ld	r8, Z
    93c0:	80 80       	ld	r8, Z
    93c2:	80 80       	ld	r8, Z
    93c4:	80 80       	ld	r8, Z
    93c6:	80 80       	ld	r8, Z
    93c8:	80 80       	ld	r8, Z
    93ca:	80 80       	ld	r8, Z
    93cc:	80 80       	ld	r8, Z
    93ce:	80 80       	ld	r8, Z
    93d0:	80 80       	ld	r8, Z
    93d2:	80 80       	ld	r8, Z
    93d4:	80 80       	ld	r8, Z
    93d6:	80 80       	ld	r8, Z
    93d8:	80 80       	ld	r8, Z
    93da:	80 80       	ld	r8, Z
    93dc:	80 80       	ld	r8, Z
    93de:	80 80       	ld	r8, Z
    93e0:	80 80       	ld	r8, Z
    93e2:	80 80       	ld	r8, Z
    93e4:	80 80       	ld	r8, Z
    93e6:	80 80       	ld	r8, Z
    93e8:	80 80       	ld	r8, Z
    93ea:	80 80       	ld	r8, Z
    93ec:	80 80       	ld	r8, Z
    93ee:	80 80       	ld	r8, Z
    93f0:	80 80       	ld	r8, Z
    93f2:	80 80       	ld	r8, Z
    93f4:	80 80       	ld	r8, Z
    93f6:	80 80       	ld	r8, Z
    93f8:	80 80       	ld	r8, Z
    93fa:	80 80       	ld	r8, Z
    93fc:	80 80       	ld	r8, Z
    93fe:	80 80       	ld	r8, Z
    9400:	7f 7f       	andi	r23, 0xFF	; 255
    9402:	7f 7f       	andi	r23, 0xFF	; 255
    9404:	7f 7f       	andi	r23, 0xFF	; 255
    9406:	7f 7f       	andi	r23, 0xFF	; 255
    9408:	7f 7f       	andi	r23, 0xFF	; 255
    940a:	7f 7f       	andi	r23, 0xFF	; 255
    940c:	7f 7f       	andi	r23, 0xFF	; 255
    940e:	7f 7f       	andi	r23, 0xFF	; 255
    9410:	7f 7f       	andi	r23, 0xFF	; 255
    9412:	7f 7f       	andi	r23, 0xFF	; 255
    9414:	7f 7f       	andi	r23, 0xFF	; 255
    9416:	7f 7f       	andi	r23, 0xFF	; 255
    9418:	7f 7f       	andi	r23, 0xFF	; 255
    941a:	7f 7f       	andi	r23, 0xFF	; 255
    941c:	7f 7f       	andi	r23, 0xFF	; 255
    941e:	7f 7f       	andi	r23, 0xFF	; 255
    9420:	7f 7f       	andi	r23, 0xFF	; 255
    9422:	7f 7f       	andi	r23, 0xFF	; 255
    9424:	7f 7f       	andi	r23, 0xFF	; 255
    9426:	7f 7f       	andi	r23, 0xFF	; 255
    9428:	7f 7f       	andi	r23, 0xFF	; 255
    942a:	7f 7f       	andi	r23, 0xFF	; 255
    942c:	7f 7f       	andi	r23, 0xFF	; 255
    942e:	7f 7f       	andi	r23, 0xFF	; 255
    9430:	7f 7f       	andi	r23, 0xFF	; 255
    9432:	7f 7f       	andi	r23, 0xFF	; 255
    9434:	7f 7f       	andi	r23, 0xFF	; 255
    9436:	7f 7f       	andi	r23, 0xFF	; 255
    9438:	7f 7f       	andi	r23, 0xFF	; 255
    943a:	7f 7f       	andi	r23, 0xFF	; 255
    943c:	7f 7f       	andi	r23, 0xFF	; 255
    943e:	7f 7f       	andi	r23, 0xFF	; 255
    9440:	7f 7f       	andi	r23, 0xFF	; 255
    9442:	7f 7f       	andi	r23, 0xFF	; 255
    9444:	7f 7f       	andi	r23, 0xFF	; 255
    9446:	7f 7f       	andi	r23, 0xFF	; 255
    9448:	7f 7f       	andi	r23, 0xFF	; 255
    944a:	7f 7f       	andi	r23, 0xFF	; 255
    944c:	7f 7f       	andi	r23, 0xFF	; 255
    944e:	7f 7f       	andi	r23, 0xFF	; 255
    9450:	7f 7f       	andi	r23, 0xFF	; 255
    9452:	7f 7f       	andi	r23, 0xFF	; 255
    9454:	7f 7f       	andi	r23, 0xFF	; 255
    9456:	7f 7f       	andi	r23, 0xFF	; 255
    9458:	7f 7f       	andi	r23, 0xFF	; 255
    945a:	7f 7f       	andi	r23, 0xFF	; 255
    945c:	7f 7f       	andi	r23, 0xFF	; 255
    945e:	7f 7f       	andi	r23, 0xFF	; 255
    9460:	7f 7f       	andi	r23, 0xFF	; 255
    9462:	7f 7f       	andi	r23, 0xFF	; 255
    9464:	7f 7f       	andi	r23, 0xFF	; 255
    9466:	7f 7f       	andi	r23, 0xFF	; 255
    9468:	7f 7f       	andi	r23, 0xFF	; 255
    946a:	7f 7f       	andi	r23, 0xFF	; 255
    946c:	7f 7f       	andi	r23, 0xFF	; 255
    946e:	7f 7f       	andi	r23, 0xFF	; 255
    9470:	7f 7f       	andi	r23, 0xFF	; 255
    9472:	7f 7f       	andi	r23, 0xFF	; 255
    9474:	7f 7f       	andi	r23, 0xFF	; 255
    9476:	7f 7f       	andi	r23, 0xFF	; 255
    9478:	7f 7f       	andi	r23, 0xFF	; 255
    947a:	7f 7f       	andi	r23, 0xFF	; 255
    947c:	7f 7f       	andi	r23, 0xFF	; 255
    947e:	7f 7f       	andi	r23, 0xFF	; 255
    9480:	80 80       	ld	r8, Z
    9482:	80 80       	ld	r8, Z
    9484:	80 80       	ld	r8, Z
    9486:	80 80       	ld	r8, Z
    9488:	80 80       	ld	r8, Z
    948a:	80 80       	ld	r8, Z
    948c:	80 80       	ld	r8, Z
    948e:	80 80       	ld	r8, Z
    9490:	80 80       	ld	r8, Z
    9492:	80 80       	ld	r8, Z
    9494:	80 80       	ld	r8, Z
    9496:	80 80       	ld	r8, Z
    9498:	80 80       	ld	r8, Z
    949a:	80 80       	ld	r8, Z
    949c:	80 80       	ld	r8, Z
    949e:	80 80       	ld	r8, Z
    94a0:	80 80       	ld	r8, Z
    94a2:	80 80       	ld	r8, Z
    94a4:	80 80       	ld	r8, Z
    94a6:	80 80       	ld	r8, Z
    94a8:	80 80       	ld	r8, Z
    94aa:	80 80       	ld	r8, Z
    94ac:	80 80       	ld	r8, Z
    94ae:	80 80       	ld	r8, Z
    94b0:	80 80       	ld	r8, Z
    94b2:	80 80       	ld	r8, Z
    94b4:	80 80       	ld	r8, Z
    94b6:	80 80       	ld	r8, Z
    94b8:	80 80       	ld	r8, Z
    94ba:	80 80       	ld	r8, Z
    94bc:	80 80       	ld	r8, Z
    94be:	80 80       	ld	r8, Z
    94c0:	80 80       	ld	r8, Z
    94c2:	80 80       	ld	r8, Z
    94c4:	80 80       	ld	r8, Z
    94c6:	80 80       	ld	r8, Z
    94c8:	80 80       	ld	r8, Z
    94ca:	80 80       	ld	r8, Z
    94cc:	80 80       	ld	r8, Z
    94ce:	80 80       	ld	r8, Z
    94d0:	80 80       	ld	r8, Z
    94d2:	80 80       	ld	r8, Z
    94d4:	80 80       	ld	r8, Z
    94d6:	80 80       	ld	r8, Z
    94d8:	80 80       	ld	r8, Z
    94da:	80 80       	ld	r8, Z
    94dc:	80 80       	ld	r8, Z
    94de:	80 80       	ld	r8, Z
    94e0:	80 80       	ld	r8, Z
    94e2:	80 80       	ld	r8, Z
    94e4:	80 80       	ld	r8, Z
    94e6:	80 80       	ld	r8, Z
    94e8:	80 80       	ld	r8, Z
    94ea:	80 80       	ld	r8, Z
    94ec:	80 80       	ld	r8, Z
    94ee:	80 80       	ld	r8, Z
    94f0:	80 80       	ld	r8, Z
    94f2:	80 80       	ld	r8, Z
    94f4:	80 80       	ld	r8, Z
    94f6:	80 80       	ld	r8, Z
    94f8:	80 80       	ld	r8, Z
    94fa:	80 80       	ld	r8, Z
    94fc:	80 80       	ld	r8, Z
    94fe:	80 80       	ld	r8, Z
    9500:	7f 7f       	andi	r23, 0xFF	; 255
    9502:	7f 7f       	andi	r23, 0xFF	; 255
    9504:	7f 7f       	andi	r23, 0xFF	; 255
    9506:	7f 7f       	andi	r23, 0xFF	; 255
    9508:	7f 7f       	andi	r23, 0xFF	; 255
    950a:	7f 7f       	andi	r23, 0xFF	; 255
    950c:	7f 7f       	andi	r23, 0xFF	; 255
    950e:	7f 7f       	andi	r23, 0xFF	; 255
    9510:	7f 7f       	andi	r23, 0xFF	; 255
    9512:	7f 7f       	andi	r23, 0xFF	; 255
    9514:	7f 7f       	andi	r23, 0xFF	; 255
    9516:	7f 7f       	andi	r23, 0xFF	; 255
    9518:	7f 7f       	andi	r23, 0xFF	; 255
    951a:	7f 7f       	andi	r23, 0xFF	; 255
    951c:	7f 7f       	andi	r23, 0xFF	; 255
    951e:	7f 7f       	andi	r23, 0xFF	; 255
    9520:	7f 7f       	andi	r23, 0xFF	; 255
    9522:	7f 7f       	andi	r23, 0xFF	; 255
    9524:	7f 7f       	andi	r23, 0xFF	; 255
    9526:	7f 7f       	andi	r23, 0xFF	; 255
    9528:	7f 7f       	andi	r23, 0xFF	; 255
    952a:	7f 7f       	andi	r23, 0xFF	; 255
    952c:	7f 7f       	andi	r23, 0xFF	; 255
    952e:	7f 7f       	andi	r23, 0xFF	; 255
    9530:	7f 7f       	andi	r23, 0xFF	; 255
    9532:	7f 7f       	andi	r23, 0xFF	; 255
    9534:	7f 7f       	andi	r23, 0xFF	; 255
    9536:	7f 7f       	andi	r23, 0xFF	; 255
    9538:	7f 7f       	andi	r23, 0xFF	; 255
    953a:	7f 7f       	andi	r23, 0xFF	; 255
    953c:	7f 7f       	andi	r23, 0xFF	; 255
    953e:	7f 7f       	andi	r23, 0xFF	; 255
    9540:	7f 7f       	andi	r23, 0xFF	; 255
    9542:	7f 7f       	andi	r23, 0xFF	; 255
    9544:	7f 7f       	andi	r23, 0xFF	; 255
    9546:	7f 7f       	andi	r23, 0xFF	; 255
    9548:	7f 7f       	andi	r23, 0xFF	; 255
    954a:	7f 7f       	andi	r23, 0xFF	; 255
    954c:	7f 7f       	andi	r23, 0xFF	; 255
    954e:	7f 7f       	andi	r23, 0xFF	; 255
    9550:	7f 7f       	andi	r23, 0xFF	; 255
    9552:	7f 7f       	andi	r23, 0xFF	; 255
    9554:	7f 7f       	andi	r23, 0xFF	; 255
    9556:	7f 7f       	andi	r23, 0xFF	; 255
    9558:	7f 7f       	andi	r23, 0xFF	; 255
    955a:	7f 7f       	andi	r23, 0xFF	; 255
    955c:	7f 7f       	andi	r23, 0xFF	; 255
    955e:	7f 7f       	andi	r23, 0xFF	; 255
    9560:	7f 7f       	andi	r23, 0xFF	; 255
    9562:	7f 7f       	andi	r23, 0xFF	; 255
    9564:	7f 7f       	andi	r23, 0xFF	; 255
    9566:	7f 7f       	andi	r23, 0xFF	; 255
    9568:	7f 7f       	andi	r23, 0xFF	; 255
    956a:	7f 7f       	andi	r23, 0xFF	; 255
    956c:	7f 7f       	andi	r23, 0xFF	; 255
    956e:	7f 7f       	andi	r23, 0xFF	; 255
    9570:	7f 7f       	andi	r23, 0xFF	; 255
    9572:	7f 7f       	andi	r23, 0xFF	; 255
    9574:	7f 7f       	andi	r23, 0xFF	; 255
    9576:	7f 7f       	andi	r23, 0xFF	; 255
    9578:	7f 7f       	andi	r23, 0xFF	; 255
    957a:	7f 7f       	andi	r23, 0xFF	; 255
    957c:	7f 7f       	andi	r23, 0xFF	; 255
    957e:	7f 7f       	andi	r23, 0xFF	; 255
    9580:	7f 7f       	andi	r23, 0xFF	; 255
    9582:	7f 7f       	andi	r23, 0xFF	; 255
    9584:	7f 7f       	andi	r23, 0xFF	; 255
    9586:	7f 7f       	andi	r23, 0xFF	; 255
    9588:	7f 7f       	andi	r23, 0xFF	; 255
    958a:	7f 7f       	andi	r23, 0xFF	; 255
    958c:	7f 7f       	andi	r23, 0xFF	; 255
    958e:	7f 7f       	andi	r23, 0xFF	; 255
    9590:	7f 7f       	andi	r23, 0xFF	; 255
    9592:	7f 7f       	andi	r23, 0xFF	; 255
    9594:	7f 7f       	andi	r23, 0xFF	; 255
    9596:	7f 7f       	andi	r23, 0xFF	; 255
    9598:	7f 7f       	andi	r23, 0xFF	; 255
    959a:	7f 7f       	andi	r23, 0xFF	; 255
    959c:	7f 7f       	andi	r23, 0xFF	; 255
    959e:	7f 7f       	andi	r23, 0xFF	; 255
    95a0:	7f 7f       	andi	r23, 0xFF	; 255
    95a2:	7f 7f       	andi	r23, 0xFF	; 255
    95a4:	7f 7f       	andi	r23, 0xFF	; 255
    95a6:	7f 7f       	andi	r23, 0xFF	; 255
    95a8:	7f 7f       	andi	r23, 0xFF	; 255
    95aa:	7f 7f       	andi	r23, 0xFF	; 255
    95ac:	7f 7f       	andi	r23, 0xFF	; 255
    95ae:	7f 7f       	andi	r23, 0xFF	; 255
    95b0:	7f 7f       	andi	r23, 0xFF	; 255
    95b2:	7f 7f       	andi	r23, 0xFF	; 255
    95b4:	7f 7f       	andi	r23, 0xFF	; 255
    95b6:	7f 7f       	andi	r23, 0xFF	; 255
    95b8:	7f 7f       	andi	r23, 0xFF	; 255
    95ba:	7f 7f       	andi	r23, 0xFF	; 255
    95bc:	7f 7f       	andi	r23, 0xFF	; 255
    95be:	7f 7f       	andi	r23, 0xFF	; 255
    95c0:	80 80       	ld	r8, Z
    95c2:	80 80       	ld	r8, Z
    95c4:	80 80       	ld	r8, Z
    95c6:	80 80       	ld	r8, Z
    95c8:	80 80       	ld	r8, Z
    95ca:	80 80       	ld	r8, Z
    95cc:	80 80       	ld	r8, Z
    95ce:	80 80       	ld	r8, Z
    95d0:	80 80       	ld	r8, Z
    95d2:	80 80       	ld	r8, Z
    95d4:	80 80       	ld	r8, Z
    95d6:	80 80       	ld	r8, Z
    95d8:	80 80       	ld	r8, Z
    95da:	80 80       	ld	r8, Z
    95dc:	80 80       	ld	r8, Z
    95de:	80 80       	ld	r8, Z
    95e0:	80 80       	ld	r8, Z
    95e2:	80 80       	ld	r8, Z
    95e4:	80 80       	ld	r8, Z
    95e6:	80 80       	ld	r8, Z
    95e8:	80 80       	ld	r8, Z
    95ea:	80 80       	ld	r8, Z
    95ec:	80 80       	ld	r8, Z
    95ee:	80 80       	ld	r8, Z
    95f0:	80 80       	ld	r8, Z
    95f2:	80 80       	ld	r8, Z
    95f4:	80 80       	ld	r8, Z
    95f6:	80 80       	ld	r8, Z
    95f8:	80 80       	ld	r8, Z
    95fa:	80 80       	ld	r8, Z
    95fc:	80 80       	ld	r8, Z
    95fe:	80 80       	ld	r8, Z
    9600:	03 09       	sbc	r16, r3
    9602:	13 1e       	adc	r1, r19
    9604:	28 31       	cpi	r18, 0x18	; 24
    9606:	3a 40       	sbci	r19, 0x0A	; 10
    9608:	46 4c       	sbci	r20, 0xC6	; 198
    960a:	50 54       	subi	r21, 0x40	; 64
    960c:	58 5b       	subi	r21, 0xB8	; 184
    960e:	5e 61       	ori	r21, 0x1E	; 30
    9610:	63 65       	ori	r22, 0x53	; 83
    9612:	67 69       	ori	r22, 0x97	; 151
    9614:	6b 6c       	ori	r22, 0xCB	; 203
    9616:	6e 6f       	ori	r22, 0xFE	; 254
    9618:	70 71       	andi	r23, 0x10	; 16
    961a:	72 73       	andi	r23, 0x32	; 50
    961c:	74 75       	andi	r23, 0x54	; 84
    961e:	76 77       	andi	r23, 0x76	; 118
    9620:	77 78       	andi	r23, 0x87	; 135
    9622:	79 79       	andi	r23, 0x99	; 153
    9624:	7a 7a       	andi	r23, 0xAA	; 170
    9626:	7b 7b       	andi	r23, 0xBB	; 187
    9628:	7c 7c       	andi	r23, 0xCC	; 204
    962a:	7c 7d       	andi	r23, 0xDC	; 220
    962c:	7d 7d       	andi	r23, 0xDD	; 221
    962e:	7e 7e       	andi	r23, 0xEE	; 238
    9630:	7e 7e       	andi	r23, 0xEE	; 238
    9632:	7f 7f       	andi	r23, 0xFF	; 255
    9634:	7f 7f       	andi	r23, 0xFF	; 255
    9636:	7f 7f       	andi	r23, 0xFF	; 255
    9638:	7f 7f       	andi	r23, 0xFF	; 255
    963a:	7f 7f       	andi	r23, 0xFF	; 255
    963c:	7f 7f       	andi	r23, 0xFF	; 255
    963e:	7f 7f       	andi	r23, 0xFF	; 255
    9640:	7f 7f       	andi	r23, 0xFF	; 255
    9642:	7f 7f       	andi	r23, 0xFF	; 255
    9644:	7f 7f       	andi	r23, 0xFF	; 255
    9646:	7f 7f       	andi	r23, 0xFF	; 255
    9648:	7f 7f       	andi	r23, 0xFF	; 255
    964a:	7f 7f       	andi	r23, 0xFF	; 255
    964c:	7f 7e       	andi	r23, 0xEF	; 239
    964e:	7e 7e       	andi	r23, 0xEE	; 238
    9650:	7e 7d       	andi	r23, 0xDE	; 222
    9652:	7d 7d       	andi	r23, 0xDD	; 221
    9654:	7c 7c       	andi	r23, 0xCC	; 204
    9656:	7c 7b       	andi	r23, 0xBC	; 188
    9658:	7b 7a       	andi	r23, 0xAB	; 171
    965a:	7a 79       	andi	r23, 0x9A	; 154
    965c:	79 78       	andi	r23, 0x89	; 137
    965e:	77 77       	andi	r23, 0x77	; 119
    9660:	76 75       	andi	r23, 0x56	; 86
    9662:	74 73       	andi	r23, 0x34	; 52
    9664:	72 71       	andi	r23, 0x12	; 18
    9666:	70 6f       	ori	r23, 0xF0	; 240
    9668:	6e 6c       	ori	r22, 0xCE	; 206
    966a:	6b 69       	ori	r22, 0x9B	; 155
    966c:	67 65       	ori	r22, 0x57	; 87
    966e:	63 61       	ori	r22, 0x13	; 19
    9670:	5e 5b       	subi	r21, 0xBE	; 190
    9672:	58 54       	subi	r21, 0x48	; 72
    9674:	50 4c       	sbci	r21, 0xC0	; 192
    9676:	46 40       	sbci	r20, 0x06	; 6
    9678:	3a 31       	cpi	r19, 0x1A	; 26
    967a:	28 1e       	adc	r2, r24
    967c:	13 09       	sbc	r17, r3
    967e:	03 00       	.word	0x0003	; ????
    9680:	c6 cc       	rjmp	.-1652   	; 0x900e <waves+0xe>
    9682:	d5 db       	rcall	.-2134   	; 0x8e2e <set_note_waves+0x18>
    9684:	df e3       	ldi	r29, 0x3F	; 63
    9686:	e5 e7       	ldi	r30, 0x75	; 117
    9688:	e9 ea       	ldi	r30, 0xA9	; 169
    968a:	eb ec       	ldi	r30, 0xCB	; 203
    968c:	ed ee       	ldi	r30, 0xED	; 237
    968e:	ef ef       	ldi	r30, 0xFF	; 255
    9690:	f0 f0       	brcs	.+60     	; 0x96ce <waves+0x6ce>
    9692:	f0 f1       	brcs	.+124    	; 0x9710 <waves+0x710>
    9694:	f1 f1       	breq	.+124    	; 0x9712 <waves+0x712>
    9696:	f1 f2       	breq	.-68     	; 0x9654 <waves+0x654>
    9698:	f2 f2       	brmi	.-68     	; 0x9656 <waves+0x656>
    969a:	f2 f2       	brmi	.-68     	; 0x9658 <waves+0x658>
    969c:	f2 f2       	brmi	.-68     	; 0x965a <waves+0x65a>
    969e:	f2 f3       	brmi	.-4      	; 0x969c <waves+0x69c>
    96a0:	f3 f3       	brvs	.-4      	; 0x969e <waves+0x69e>
    96a2:	f3 f3       	brvs	.-4      	; 0x96a0 <waves+0x6a0>
    96a4:	f3 f3       	brvs	.-4      	; 0x96a2 <waves+0x6a2>
    96a6:	f3 f3       	brvs	.-4      	; 0x96a4 <waves+0x6a4>
    96a8:	f3 f3       	brvs	.-4      	; 0x96a6 <waves+0x6a6>
    96aa:	f3 f3       	brvs	.-4      	; 0x96a8 <waves+0x6a8>
    96ac:	f3 f3       	brvs	.-4      	; 0x96aa <waves+0x6aa>
    96ae:	f3 f3       	brvs	.-4      	; 0x96ac <waves+0x6ac>
    96b0:	f3 f3       	brvs	.-4      	; 0x96ae <waves+0x6ae>
    96b2:	f3 f3       	brvs	.-4      	; 0x96b0 <waves+0x6b0>
    96b4:	f3 f3       	brvs	.-4      	; 0x96b2 <waves+0x6b2>
    96b6:	f3 f3       	brvs	.-4      	; 0x96b4 <waves+0x6b4>
    96b8:	f3 f3       	brvs	.-4      	; 0x96b6 <waves+0x6b6>
    96ba:	f3 f3       	brvs	.-4      	; 0x96b8 <waves+0x6b8>
    96bc:	f3 f3       	brvs	.-4      	; 0x96ba <waves+0x6ba>
    96be:	f3 f3       	brvs	.-4      	; 0x96bc <waves+0x6bc>
    96c0:	f3 f3       	brvs	.-4      	; 0x96be <waves+0x6be>
    96c2:	f3 f3       	brvs	.-4      	; 0x96c0 <waves+0x6c0>
    96c4:	f3 f3       	brvs	.-4      	; 0x96c2 <waves+0x6c2>
    96c6:	f3 f3       	brvs	.-4      	; 0x96c4 <waves+0x6c4>
    96c8:	f3 f3       	brvs	.-4      	; 0x96c6 <waves+0x6c6>
    96ca:	f3 f3       	brvs	.-4      	; 0x96c8 <waves+0x6c8>
    96cc:	f3 f3       	brvs	.-4      	; 0x96ca <waves+0x6ca>
    96ce:	f3 f3       	brvs	.-4      	; 0x96cc <waves+0x6cc>
    96d0:	f3 f3       	brvs	.-4      	; 0x96ce <waves+0x6ce>
    96d2:	f3 f3       	brvs	.-4      	; 0x96d0 <waves+0x6d0>
    96d4:	f3 f3       	brvs	.-4      	; 0x96d2 <waves+0x6d2>
    96d6:	f3 f3       	brvs	.-4      	; 0x96d4 <waves+0x6d4>
    96d8:	f3 f3       	brvs	.-4      	; 0x96d6 <waves+0x6d6>
    96da:	f3 f3       	brvs	.-4      	; 0x96d8 <waves+0x6d8>
    96dc:	f3 f3       	brvs	.-4      	; 0x96da <waves+0x6da>
    96de:	f3 f3       	brvs	.-4      	; 0x96dc <waves+0x6dc>
    96e0:	f2 f2       	brmi	.-68     	; 0x969e <waves+0x69e>
    96e2:	f2 f2       	brmi	.-68     	; 0x96a0 <waves+0x6a0>
    96e4:	f2 f2       	brmi	.-68     	; 0x96a2 <waves+0x6a2>
    96e6:	f2 f2       	brmi	.-68     	; 0x96a4 <waves+0x6a4>
    96e8:	f1 f1       	breq	.+124    	; 0x9766 <waves+0x766>
    96ea:	f1 f1       	breq	.+124    	; 0x9768 <waves+0x768>
    96ec:	f0 f0       	brcs	.+60     	; 0x972a <waves+0x72a>
    96ee:	f0 ef       	ldi	r31, 0xF0	; 240
    96f0:	ef ee       	ldi	r30, 0xEF	; 239
    96f2:	ed ec       	ldi	r30, 0xCD	; 205
    96f4:	eb ea       	ldi	r30, 0xAB	; 171
    96f6:	e9 e7       	ldi	r30, 0x79	; 121
    96f8:	e5 e3       	ldi	r30, 0x35	; 53
    96fa:	df db       	rcall	.-2114   	; 0x8eba <steptable+0x46>
    96fc:	d5 cc       	rjmp	.-1622   	; 0x90a8 <waves+0xa8>
    96fe:	c6 00       	.word	0x00c6	; ????
    9700:	00 28       	or	r0, r0
    9702:	3d 42       	sbci	r19, 0x2D	; 45
    9704:	30 2d       	mov	r19, r0
    9706:	2c 2b       	or	r18, r28
    9708:	2c 2d       	mov	r18, r12
    970a:	2e 2f       	mov	r18, r30
    970c:	30 32       	cpi	r19, 0x20	; 32
    970e:	33 35       	cpi	r19, 0x53	; 83
    9710:	37 39       	cpi	r19, 0x97	; 151
    9712:	3b 3d       	cpi	r19, 0xDB	; 219
    9714:	3f 41       	sbci	r19, 0x1F	; 31
    9716:	43 45       	sbci	r20, 0x53	; 83
    9718:	48 4a       	sbci	r20, 0xA8	; 168
    971a:	4c 4e       	sbci	r20, 0xEC	; 236
    971c:	50 53       	subi	r21, 0x30	; 48
    971e:	55 57       	subi	r21, 0x75	; 117
    9720:	59 5b       	subi	r21, 0xB9	; 185
    9722:	5d 5f       	subi	r21, 0xFD	; 253
    9724:	61 63       	ori	r22, 0x31	; 49
    9726:	65 67       	ori	r22, 0x75	; 117
    9728:	69 6b       	ori	r22, 0xB9	; 185
    972a:	6c 6e       	ori	r22, 0xEC	; 236
    972c:	70 71       	andi	r23, 0x10	; 16
    972e:	73 74       	andi	r23, 0x43	; 67
    9730:	75 77       	andi	r23, 0x75	; 117
    9732:	78 79       	andi	r23, 0x98	; 152
    9734:	7a 7b       	andi	r23, 0xBA	; 186
    9736:	7c 7d       	andi	r23, 0xDC	; 220
    9738:	7d 7e       	andi	r23, 0xED	; 237
    973a:	7e 7f       	andi	r23, 0xFE	; 254
    973c:	7f 7f       	andi	r23, 0xFF	; 255
    973e:	7f 7f       	andi	r23, 0xFF	; 255
    9740:	7f 7f       	andi	r23, 0xFF	; 255
    9742:	7f 7f       	andi	r23, 0xFF	; 255
    9744:	7f 7f       	andi	r23, 0xFF	; 255
    9746:	7e 7e       	andi	r23, 0xEE	; 238
    9748:	7d 7d       	andi	r23, 0xDD	; 221
    974a:	7c 7b       	andi	r23, 0xBC	; 188
    974c:	7a 79       	andi	r23, 0x9A	; 154
    974e:	78 77       	andi	r23, 0x78	; 120
    9750:	75 74       	andi	r23, 0x45	; 69
    9752:	73 71       	andi	r23, 0x13	; 19
    9754:	70 6e       	ori	r23, 0xE0	; 224
    9756:	6c 6b       	ori	r22, 0xBC	; 188
    9758:	69 67       	ori	r22, 0x79	; 121
    975a:	65 63       	ori	r22, 0x35	; 53
    975c:	61 5f       	subi	r22, 0xF1	; 241
    975e:	5d 5b       	subi	r21, 0xBD	; 189
    9760:	59 57       	subi	r21, 0x79	; 121
    9762:	55 53       	subi	r21, 0x35	; 53
    9764:	50 4e       	sbci	r21, 0xE0	; 224
    9766:	4c 4a       	sbci	r20, 0xAC	; 172
    9768:	48 45       	sbci	r20, 0x58	; 88
    976a:	43 41       	sbci	r20, 0x13	; 19
    976c:	3f 3d       	cpi	r19, 0xDF	; 223
    976e:	3b 39       	cpi	r19, 0x9B	; 155
    9770:	37 35       	cpi	r19, 0x57	; 87
    9772:	33 32       	cpi	r19, 0x23	; 35
    9774:	30 2f       	mov	r19, r16
    9776:	2e 2d       	mov	r18, r14
    9778:	2c 2b       	or	r18, r28
    977a:	2c 2d       	mov	r18, r12
    977c:	30 42       	sbci	r19, 0x20	; 32
    977e:	3d 28       	or	r3, r13
    9780:	00 e9       	ldi	r16, 0x90	; 144
    9782:	e5 fe       	sbrs	r14, 5
    9784:	d4 d7       	rcall	.+4008   	; 0xa72e <checkBanana+0x8e>
    9786:	d7 d7       	rcall	.+4014   	; 0xa736 <checkBanana+0x96>
    9788:	d6 d4       	rcall	.+2476   	; 0xa136 <drawplayer2+0xa6>
    978a:	d2 d0       	rcall	.+420    	; 0x9930 <waves+0x930>
    978c:	ce cc       	rjmp	.-1636   	; 0x912a <waves+0x12a>
    978e:	ca c8       	rjmp	.-3692   	; 0x8924 <TriggerCommon+0xdc>
    9790:	c6 c3       	rjmp	.+1932   	; 0x9f1e <ProcessFading+0x34>
    9792:	c1 bf       	out	0x31, r28	; 49
    9794:	bd ba       	out	0x1d, r11	; 29
    9796:	b8 b6       	in	r11, 0x38	; 56
    9798:	b4 b1       	in	r27, 0x04	; 4
    979a:	af ad       	ldd	r26, Y+63	; 0x3f
    979c:	ab a9       	ldd	r26, Y+51	; 0x33
    979e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    97a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    97a2:	9f 9e       	mul	r9, r31
    97a4:	9c 9a       	sbi	0x13, 4	; 19
    97a6:	99 97       	sbiw	r26, 0x29	; 41
    97a8:	95 94       	asr	r9
    97aa:	93 91       	.word	0x9193	; ????
    97ac:	90 8f       	std	Z+24, r25	; 0x18
    97ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    97b0:	8b 8a       	std	Y+19, r8	; 0x13
    97b2:	89 88       	ldd	r8, Y+17	; 0x11
    97b4:	88 87       	std	Y+8, r24	; 0x08
    97b6:	86 85       	ldd	r24, Z+14	; 0x0e
    97b8:	85 84       	ldd	r8, Z+13	; 0x0d
    97ba:	84 84       	ldd	r8, Z+12	; 0x0c
    97bc:	83 83       	std	Z+3, r24	; 0x03
    97be:	83 83       	std	Z+3, r24	; 0x03
    97c0:	83 83       	std	Z+3, r24	; 0x03
    97c2:	83 83       	std	Z+3, r24	; 0x03
    97c4:	83 84       	ldd	r8, Z+11	; 0x0b
    97c6:	84 84       	ldd	r8, Z+12	; 0x0c
    97c8:	85 85       	ldd	r24, Z+13	; 0x0d
    97ca:	86 87       	std	Z+14, r24	; 0x0e
    97cc:	88 88       	ldd	r8, Y+16	; 0x10
    97ce:	89 8a       	std	Y+17, r8	; 0x11
    97d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    97d2:	8d 8f       	std	Y+29, r24	; 0x1d
    97d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8593>
    97d8:	95 97       	sbiw	r26, 0x25	; 37
    97da:	99 9a       	sbi	0x13, 1	; 19
    97dc:	9c 9e       	mul	r9, r28
    97de:	9f a1       	ldd	r25, Y+39	; 0x27
    97e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    97e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    97e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    97e6:	af b1       	in	r26, 0x0f	; 15
    97e8:	b4 b6       	in	r11, 0x34	; 52
    97ea:	b8 ba       	out	0x18, r11	; 24
    97ec:	bd bf       	out	0x3d, r27	; 61
    97ee:	c1 c3       	rjmp	.+1922   	; 0x9f72 <drawplayer+0xe>
    97f0:	c6 c8       	rjmp	.-3700   	; 0x897e <TriggerFx+0x34>
    97f2:	ca cc       	rjmp	.-1644   	; 0x9188 <waves+0x188>
    97f4:	ce d0       	rcall	.+412    	; 0x9992 <waves+0x992>
    97f6:	d2 d4       	rcall	.+2468   	; 0xa19c <drawplayer2+0x10c>
    97f8:	d6 d7       	rcall	.+4012   	; 0xa7a6 <checkBanana+0x106>
    97fa:	d7 d7       	rcall	.+4014   	; 0xa7aa <checkBanana+0x10a>
    97fc:	d4 fe       	sbrs	r13, 4
    97fe:	e5 e9       	ldi	r30, 0x95	; 149
    9800:	f9 f8       	.word	0xf8f9	; ????
    9802:	f9 f5       	brne	.+126    	; 0x9882 <waves+0x882>
    9804:	eb e1       	ldi	r30, 0x1B	; 27
    9806:	dd de       	rcall	.-582    	; 0x95c2 <waves+0x5c2>
    9808:	e0 e2       	ldi	r30, 0x20	; 32
    980a:	e4 e5       	ldi	r30, 0x54	; 84
    980c:	e6 e5       	ldi	r30, 0x56	; 86
    980e:	e4 e2       	ldi	r30, 0x24	; 36
    9810:	de d9       	rcall	.-3140   	; 0x8bce <ProcessMusic+0x174>
    9812:	d2 ca       	rjmp	.-2652   	; 0x8db8 <ProcessMusic+0x35e>
    9814:	c1 b7       	in	r28, 0x31	; 49
    9816:	ac a2       	std	Y+36, r10	; 0x24
    9818:	99 91       	ld	r25, Y+
    981a:	8a 86       	std	Y+10, r8	; 0x0a
    981c:	83 81       	ldd	r24, Z+3	; 0x03
    981e:	80 80       	ld	r8, Z
    9820:	81 82       	std	Z+1, r8	; 0x01
    9822:	83 85       	ldd	r24, Z+11	; 0x0b
    9824:	86 88       	ldd	r8, Z+22	; 0x16
    9826:	8a 8c       	ldd	r8, Y+26	; 0x1a
    9828:	8d 8f       	std	Y+29, r24	; 0x1d
    982a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8693>
    982e:	96 97       	sbiw	r26, 0x26	; 38
    9830:	98 99       	sbic	0x13, 0	; 19
    9832:	9a 9b       	sbis	0x13, 2	; 19
    9834:	9b 9c       	mul	r9, r11
    9836:	9d 9d       	mul	r25, r13
    9838:	9d 9e       	mul	r9, r29
    983a:	9e 9e       	mul	r9, r30
    983c:	9f 9f       	mul	r25, r31
    983e:	9f 9f       	mul	r25, r31
    9840:	9f 9f       	mul	r25, r31
    9842:	9f 9e       	mul	r9, r31
    9844:	9e 9e       	mul	r9, r30
    9846:	9d 9d       	mul	r25, r13
    9848:	9d 9c       	mul	r9, r13
    984a:	9b 9b       	sbis	0x13, 3	; 19
    984c:	9a 99       	sbic	0x13, 2	; 19
    984e:	98 97       	sbiw	r26, 0x28	; 40
    9850:	96 95       	lsr	r25
    9852:	93 92       	.word	0x9293	; ????
    9854:	90 8f       	std	Z+24, r25	; 0x18
    9856:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9858:	8a 88       	ldd	r8, Y+18	; 0x12
    985a:	86 85       	ldd	r24, Z+14	; 0x0e
    985c:	83 82       	std	Z+3, r8	; 0x03
    985e:	81 80       	ldd	r8, Z+1	; 0x01
    9860:	80 81       	ld	r24, Z
    9862:	83 86       	std	Z+11, r8	; 0x0b
    9864:	8a 91       	ld	r24, -Y
    9866:	99 a2       	std	Y+33, r9	; 0x21
    9868:	ac b7       	in	r26, 0x3c	; 60
    986a:	c1 ca       	rjmp	.-2686   	; 0x8dee <ProcessMusic+0x394>
    986c:	d2 d9       	rcall	.-3164   	; 0x8c12 <ProcessMusic+0x1b8>
    986e:	de e2       	ldi	r29, 0x2E	; 46
    9870:	e4 e5       	ldi	r30, 0x54	; 84
    9872:	e6 e5       	ldi	r30, 0x56	; 86
    9874:	e4 e2       	ldi	r30, 0x24	; 36
    9876:	e0 de       	rcall	.-576    	; 0x9638 <waves+0x638>
    9878:	dd e1       	ldi	r29, 0x1D	; 29
    987a:	eb f5       	brvc	.+122    	; 0x98f6 <waves+0x8f6>
    987c:	f9 f8       	.word	0xf8f9	; ????
    987e:	f9 00       	.word	0x00f9	; ????
    9880:	07 08       	sbc	r0, r7
    9882:	07 0b       	sbc	r16, r23
    9884:	15 1f       	adc	r17, r21
    9886:	23 22       	and	r2, r19
    9888:	20 1e       	adc	r2, r16
    988a:	1c 1b       	sub	r17, r28
    988c:	1a 1b       	sub	r17, r26
    988e:	1c 1e       	adc	r1, r28
    9890:	22 27       	eor	r18, r18
    9892:	2e 36       	cpi	r18, 0x6E	; 110
    9894:	3f 49       	sbci	r19, 0x9F	; 159
    9896:	54 5e       	subi	r21, 0xE4	; 228
    9898:	67 6f       	ori	r22, 0xF7	; 247
    989a:	76 7a       	andi	r23, 0xA6	; 166
    989c:	7e 7f       	andi	r23, 0xFE	; 254
    989e:	7f 7f       	andi	r23, 0xFF	; 255
    98a0:	7f 7e       	andi	r23, 0xEF	; 239
    98a2:	7d 7b       	andi	r23, 0xBD	; 189
    98a4:	7a 78       	andi	r23, 0x8A	; 138
    98a6:	76 74       	andi	r23, 0x46	; 70
    98a8:	73 71       	andi	r23, 0x13	; 19
    98aa:	70 6e       	ori	r23, 0xE0	; 224
    98ac:	6d 6b       	ori	r22, 0xBD	; 189
    98ae:	6a 69       	ori	r22, 0x9A	; 154
    98b0:	68 67       	ori	r22, 0x78	; 120
    98b2:	66 65       	ori	r22, 0x56	; 86
    98b4:	65 64       	ori	r22, 0x45	; 69
    98b6:	64 63       	ori	r22, 0x34	; 52
    98b8:	63 62       	ori	r22, 0x23	; 35
    98ba:	62 62       	ori	r22, 0x22	; 34
    98bc:	61 61       	ori	r22, 0x11	; 17
    98be:	61 61       	ori	r22, 0x11	; 17
    98c0:	61 61       	ori	r22, 0x11	; 17
    98c2:	61 62       	ori	r22, 0x21	; 33
    98c4:	62 62       	ori	r22, 0x22	; 34
    98c6:	63 63       	ori	r22, 0x33	; 51
    98c8:	63 64       	ori	r22, 0x43	; 67
    98ca:	65 65       	ori	r22, 0x55	; 85
    98cc:	66 67       	ori	r22, 0x76	; 118
    98ce:	68 69       	ori	r22, 0x98	; 152
    98d0:	6a 6b       	ori	r22, 0xBA	; 186
    98d2:	6d 6e       	ori	r22, 0xED	; 237
    98d4:	70 71       	andi	r23, 0x10	; 16
    98d6:	73 74       	andi	r23, 0x43	; 67
    98d8:	76 78       	andi	r23, 0x86	; 134
    98da:	7a 7b       	andi	r23, 0xBA	; 186
    98dc:	7d 7e       	andi	r23, 0xED	; 237
    98de:	7f 7f       	andi	r23, 0xFF	; 255
    98e0:	7f 7f       	andi	r23, 0xFF	; 255
    98e2:	7e 7a       	andi	r23, 0xAE	; 174
    98e4:	76 6f       	ori	r23, 0xF6	; 246
    98e6:	67 5e       	subi	r22, 0xE7	; 231
    98e8:	54 49       	sbci	r21, 0x94	; 148
    98ea:	3f 36       	cpi	r19, 0x6F	; 111
    98ec:	2e 27       	eor	r18, r30
    98ee:	22 1e       	adc	r2, r18
    98f0:	1c 1b       	sub	r17, r28
    98f2:	1a 1b       	sub	r17, r26
    98f4:	1c 1e       	adc	r1, r28
    98f6:	20 22       	and	r2, r16
    98f8:	23 1f       	adc	r18, r19
    98fa:	15 0b       	sbc	r17, r21
    98fc:	07 08       	sbc	r0, r7
    98fe:	07 00       	.word	0x0007	; ????
    9900:	1f 31       	cpi	r17, 0x1F	; 31
    9902:	3d 44       	sbci	r19, 0x4D	; 77
    9904:	4e 53       	subi	r20, 0x3E	; 62
    9906:	54 56       	subi	r21, 0x64	; 100
    9908:	5a 5f       	subi	r21, 0xFA	; 250
    990a:	64 69       	ori	r22, 0x94	; 148
    990c:	6e 74       	andi	r22, 0x4E	; 78
    990e:	76 79       	andi	r23, 0x96	; 150
    9910:	7c 7f       	andi	r23, 0xFC	; 252
    9912:	7f 7f       	andi	r23, 0xFF	; 255
    9914:	7f 7f       	andi	r23, 0xFF	; 255
    9916:	7f 7f       	andi	r23, 0xFF	; 255
    9918:	7f 7f       	andi	r23, 0xFF	; 255
    991a:	7f 7f       	andi	r23, 0xFF	; 255
    991c:	7f 7f       	andi	r23, 0xFF	; 255
    991e:	7f 7f       	andi	r23, 0xFF	; 255
    9920:	7f 7f       	andi	r23, 0xFF	; 255
    9922:	7f 7f       	andi	r23, 0xFF	; 255
    9924:	7f 7f       	andi	r23, 0xFF	; 255
    9926:	7f 7f       	andi	r23, 0xFF	; 255
    9928:	7f 7f       	andi	r23, 0xFF	; 255
    992a:	7f 7f       	andi	r23, 0xFF	; 255
    992c:	7f 7f       	andi	r23, 0xFF	; 255
    992e:	7f 7f       	andi	r23, 0xFF	; 255
    9930:	7f 7f       	andi	r23, 0xFF	; 255
    9932:	7f 7f       	andi	r23, 0xFF	; 255
    9934:	7f 7f       	andi	r23, 0xFF	; 255
    9936:	7f 7f       	andi	r23, 0xFF	; 255
    9938:	7f 7f       	andi	r23, 0xFF	; 255
    993a:	7f 7f       	andi	r23, 0xFF	; 255
    993c:	7f 7f       	andi	r23, 0xFF	; 255
    993e:	7f 7f       	andi	r23, 0xFF	; 255
    9940:	7f 7f       	andi	r23, 0xFF	; 255
    9942:	7f 7f       	andi	r23, 0xFF	; 255
    9944:	7f 7f       	andi	r23, 0xFF	; 255
    9946:	7f 7f       	andi	r23, 0xFF	; 255
    9948:	7f 7f       	andi	r23, 0xFF	; 255
    994a:	7f 7f       	andi	r23, 0xFF	; 255
    994c:	7f 7f       	andi	r23, 0xFF	; 255
    994e:	7f 7f       	andi	r23, 0xFF	; 255
    9950:	7f 7f       	andi	r23, 0xFF	; 255
    9952:	7f 7f       	andi	r23, 0xFF	; 255
    9954:	7f 7f       	andi	r23, 0xFF	; 255
    9956:	7f 7f       	andi	r23, 0xFF	; 255
    9958:	7f 7f       	andi	r23, 0xFF	; 255
    995a:	7f 7f       	andi	r23, 0xFF	; 255
    995c:	7f 7f       	andi	r23, 0xFF	; 255
    995e:	7f 7f       	andi	r23, 0xFF	; 255
    9960:	7f 7f       	andi	r23, 0xFF	; 255
    9962:	7f 7f       	andi	r23, 0xFF	; 255
    9964:	7f 7f       	andi	r23, 0xFF	; 255
    9966:	7f 7f       	andi	r23, 0xFF	; 255
    9968:	7f 7f       	andi	r23, 0xFF	; 255
    996a:	7f 7f       	andi	r23, 0xFF	; 255
    996c:	7f 7f       	andi	r23, 0xFF	; 255
    996e:	7f 7f       	andi	r23, 0xFF	; 255
    9970:	7f 7f       	andi	r23, 0xFF	; 255
    9972:	7f 7f       	andi	r23, 0xFF	; 255
    9974:	7f 7f       	andi	r23, 0xFF	; 255
    9976:	7f 7f       	andi	r23, 0xFF	; 255
    9978:	7f 7f       	andi	r23, 0xFF	; 255
    997a:	7f 7c       	andi	r23, 0xCF	; 207
    997c:	78 71       	andi	r23, 0x18	; 24
    997e:	68 4c       	sbci	r22, 0xC8	; 200
    9980:	2c 1c       	adc	r2, r12
    9982:	12 0c       	add	r1, r2
    9984:	0a 0b       	sbc	r16, r26
    9986:	0a 05       	cpc	r16, r10
    9988:	fd f3       	brhs	.-2      	; 0x9988 <waves+0x988>
    998a:	e9 df       	rcall	.-46     	; 0x995e <waves+0x95e>
    998c:	d4 ca       	rjmp	.-2648   	; 0x8f36 <steptable+0xc2>
    998e:	c0 b7       	in	r28, 0x30	; 48
    9990:	ae a6       	std	Y+46, r10	; 0x2e
    9992:	9e 97       	sbiw	r26, 0x2e	; 46
    9994:	91 8b       	std	Z+17, r25	; 0x11
    9996:	86 85       	ldd	r24, Z+14	; 0x0e
    9998:	82 80       	ldd	r8, Z+2	; 0x02
    999a:	80 80       	ld	r8, Z
    999c:	80 80       	ld	r8, Z
    999e:	80 80       	ld	r8, Z
    99a0:	80 80       	ld	r8, Z
    99a2:	80 80       	ld	r8, Z
    99a4:	80 80       	ld	r8, Z
    99a6:	80 80       	ld	r8, Z
    99a8:	80 80       	ld	r8, Z
    99aa:	80 80       	ld	r8, Z
    99ac:	80 80       	ld	r8, Z
    99ae:	80 80       	ld	r8, Z
    99b0:	80 80       	ld	r8, Z
    99b2:	80 80       	ld	r8, Z
    99b4:	80 80       	ld	r8, Z
    99b6:	80 80       	ld	r8, Z
    99b8:	80 80       	ld	r8, Z
    99ba:	80 80       	ld	r8, Z
    99bc:	80 80       	ld	r8, Z
    99be:	80 80       	ld	r8, Z
    99c0:	80 80       	ld	r8, Z
    99c2:	80 80       	ld	r8, Z
    99c4:	80 80       	ld	r8, Z
    99c6:	80 80       	ld	r8, Z
    99c8:	80 80       	ld	r8, Z
    99ca:	80 80       	ld	r8, Z
    99cc:	80 80       	ld	r8, Z
    99ce:	80 80       	ld	r8, Z
    99d0:	80 80       	ld	r8, Z
    99d2:	80 80       	ld	r8, Z
    99d4:	80 80       	ld	r8, Z
    99d6:	80 80       	ld	r8, Z
    99d8:	80 80       	ld	r8, Z
    99da:	80 80       	ld	r8, Z
    99dc:	80 80       	ld	r8, Z
    99de:	80 80       	ld	r8, Z
    99e0:	80 80       	ld	r8, Z
    99e2:	80 80       	ld	r8, Z
    99e4:	80 80       	ld	r8, Z
    99e6:	80 80       	ld	r8, Z
    99e8:	80 80       	ld	r8, Z
    99ea:	80 80       	ld	r8, Z
    99ec:	80 80       	ld	r8, Z
    99ee:	80 80       	ld	r8, Z
    99f0:	80 80       	ld	r8, Z
    99f2:	80 80       	ld	r8, Z
    99f4:	80 87       	std	Z+8, r24	; 0x08
    99f6:	91 9d       	mul	r25, r1
    99f8:	ac c4       	rjmp	.+2392   	; 0xa352 <printtileint+0x1a6>
    99fa:	cb d4       	rcall	.+2454   	; 0xa392 <printtileint+0x1e6>
    99fc:	dd f2       	brhs	.-74     	; 0x99b4 <waves+0x9b4>
    99fe:	fa fa       	.word	0xfafa	; ????

00009a00 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    9a00:	2f 92       	push	r2
    9a02:	3f 92       	push	r3
    9a04:	4f 92       	push	r4
    9a06:	5f 92       	push	r5
    9a08:	6f 92       	push	r6
    9a0a:	7f 92       	push	r7
    9a0c:	8f 92       	push	r8
    9a0e:	9f 92       	push	r9
    9a10:	af 92       	push	r10
    9a12:	bf 92       	push	r11
    9a14:	cf 92       	push	r12
    9a16:	df 92       	push	r13
    9a18:	ef 92       	push	r14
    9a1a:	ff 92       	push	r15
    9a1c:	0f 93       	push	r16
    9a1e:	1f 93       	push	r17
    9a20:	cf 93       	push	r28
    9a22:	df 93       	push	r29
    9a24:	00 d0       	rcall	.+0      	; 0x9a26 <ProcessSprites+0x26>
    9a26:	00 d0       	rcall	.+0      	; 0x9a28 <ProcessSprites+0x28>
    9a28:	00 d0       	rcall	.+0      	; 0x9a2a <ProcessSprites+0x2a>
    9a2a:	cd b7       	in	r28, 0x3d	; 61
    9a2c:	de b7       	in	r29, 0x3e	; 62
    9a2e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    9a32:	88 23       	and	r24, r24
    9a34:	09 f4       	brne	.+2      	; 0x9a38 <ProcessSprites+0x38>
    9a36:	f9 c0       	rjmp	.+498    	; 0x9c2a <ProcessSprites+0x22a>
    9a38:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <user_ram_tiles_c_tmp>
    9a3c:	80 93 4c 08 	sts	0x084C, r24	; 0x80084c <user_ram_tiles_c>
    9a40:	80 93 4b 08 	sts	0x084B, r24	; 0x80084b <free_tile_index>
    9a44:	02 e0       	ldi	r16, 0x02	; 2
    9a46:	11 e0       	ldi	r17, 0x01	; 1
    9a48:	f8 01       	movw	r30, r16
    9a4a:	f3 81       	ldd	r31, Z+3	; 0x03
    9a4c:	fb 83       	std	Y+3, r31	; 0x03
    9a4e:	f2 ff       	sbrs	r31, 2
    9a50:	20 c0       	rjmp	.+64     	; 0x9a92 <ProcessSprites+0x92>
    9a52:	0c 5f       	subi	r16, 0xFC	; 252
    9a54:	1f 4f       	sbci	r17, 0xFF	; 255
    9a56:	21 e0       	ldi	r18, 0x01	; 1
    9a58:	0a 33       	cpi	r16, 0x3A	; 58
    9a5a:	12 07       	cpc	r17, r18
    9a5c:	a9 f7       	brne	.-22     	; 0x9a48 <ProcessSprites+0x48>
    9a5e:	26 96       	adiw	r28, 0x06	; 6
    9a60:	0f b6       	in	r0, 0x3f	; 63
    9a62:	f8 94       	cli
    9a64:	de bf       	out	0x3e, r29	; 62
    9a66:	0f be       	out	0x3f, r0	; 63
    9a68:	cd bf       	out	0x3d, r28	; 61
    9a6a:	df 91       	pop	r29
    9a6c:	cf 91       	pop	r28
    9a6e:	1f 91       	pop	r17
    9a70:	0f 91       	pop	r16
    9a72:	ff 90       	pop	r15
    9a74:	ef 90       	pop	r14
    9a76:	df 90       	pop	r13
    9a78:	cf 90       	pop	r12
    9a7a:	bf 90       	pop	r11
    9a7c:	af 90       	pop	r10
    9a7e:	9f 90       	pop	r9
    9a80:	8f 90       	pop	r8
    9a82:	7f 90       	pop	r7
    9a84:	6f 90       	pop	r6
    9a86:	5f 90       	pop	r5
    9a88:	4f 90       	pop	r4
    9a8a:	3f 90       	pop	r3
    9a8c:	2f 90       	pop	r2
    9a8e:	0c 94 09 40 	jmp	0x8012	; 0x8012 <RestoreBackground>
    9a92:	f8 01       	movw	r30, r16
    9a94:	51 81       	ldd	r21, Z+1	; 0x01
    9a96:	40 81       	ld	r20, Z
    9a98:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    9a9c:	24 0f       	add	r18, r20
    9a9e:	30 91 5d 08 	lds	r19, 0x085D	; 0x80085d <screen_scrollY>
    9aa2:	85 2f       	mov	r24, r21
    9aa4:	90 e0       	ldi	r25, 0x00	; 0
    9aa6:	83 0f       	add	r24, r19
    9aa8:	91 1d       	adc	r25, r1
    9aaa:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollHeight>
    9aae:	33 0f       	add	r19, r19
    9ab0:	33 0f       	add	r19, r19
    9ab2:	33 0f       	add	r19, r19
    9ab4:	31 50       	subi	r19, 0x01	; 1
    9ab6:	35 17       	cp	r19, r21
    9ab8:	08 f4       	brcc	.+2      	; 0x9abc <ProcessSprites+0xbc>
    9aba:	9a 95       	dec	r25
    9abc:	32 2e       	mov	r3, r18
    9abe:	36 94       	lsr	r3
    9ac0:	36 94       	lsr	r3
    9ac2:	36 94       	lsr	r3
    9ac4:	27 70       	andi	r18, 0x07	; 7
    9ac6:	19 f0       	breq	.+6      	; 0x9ace <ProcessSprites+0xce>
    9ac8:	f2 e0       	ldi	r31, 0x02	; 2
    9aca:	f9 83       	std	Y+1, r31	; 0x01
    9acc:	02 c0       	rjmp	.+4      	; 0x9ad2 <ProcessSprites+0xd2>
    9ace:	31 e0       	ldi	r19, 0x01	; 1
    9ad0:	39 83       	std	Y+1, r19	; 0x01
    9ad2:	bc 01       	movw	r22, r24
    9ad4:	e3 e0       	ldi	r30, 0x03	; 3
    9ad6:	76 95       	lsr	r23
    9ad8:	67 95       	ror	r22
    9ada:	ea 95       	dec	r30
    9adc:	e1 f7       	brne	.-8      	; 0x9ad6 <ProcessSprites+0xd6>
    9ade:	26 2e       	mov	r2, r22
    9ae0:	87 70       	andi	r24, 0x07	; 7
    9ae2:	19 f0       	breq	.+6      	; 0x9aea <ProcessSprites+0xea>
    9ae4:	62 e0       	ldi	r22, 0x02	; 2
    9ae6:	6a 83       	std	Y+2, r22	; 0x02
    9ae8:	02 c0       	rjmp	.+4      	; 0x9aee <ProcessSprites+0xee>
    9aea:	71 e0       	ldi	r23, 0x01	; 1
    9aec:	7a 83       	std	Y+2, r23	; 0x02
    9aee:	68 2e       	mov	r6, r24
    9af0:	71 2c       	mov	r7, r1
    9af2:	76 2c       	mov	r7, r6
    9af4:	66 24       	eor	r6, r6
    9af6:	62 0e       	add	r6, r18
    9af8:	71 1c       	adc	r7, r1
    9afa:	fb 81       	ldd	r31, Y+3	; 0x03
    9afc:	ef 2f       	mov	r30, r31
    9afe:	f0 e0       	ldi	r31, 0x00	; 0
    9b00:	7e 2f       	mov	r23, r30
    9b02:	66 27       	eor	r22, r22
    9b04:	f8 01       	movw	r30, r16
    9b06:	92 81       	ldd	r25, Z+2	; 0x02
    9b08:	69 0f       	add	r22, r25
    9b0a:	71 1d       	adc	r23, r1
    9b0c:	7e 83       	std	Y+6, r23	; 0x06
    9b0e:	6d 83       	std	Y+5, r22	; 0x05
    9b10:	c1 2c       	mov	r12, r1
    9b12:	d1 2c       	mov	r13, r1
    9b14:	97 e0       	ldi	r25, 0x07	; 7
    9b16:	95 0f       	add	r25, r21
    9b18:	98 1b       	sub	r25, r24
    9b1a:	9b 83       	std	Y+3, r25	; 0x03
    9b1c:	87 e0       	ldi	r24, 0x07	; 7
    9b1e:	84 0f       	add	r24, r20
    9b20:	82 1b       	sub	r24, r18
    9b22:	8c 83       	std	Y+4, r24	; 0x04
    9b24:	8c 2d       	mov	r24, r12
    9b26:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9b2a:	91 11       	cpse	r25, r1
    9b2c:	07 c0       	rjmp	.+14     	; 0x9b3c <ProcessSprites+0x13c>
    9b2e:	ff ef       	ldi	r31, 0xFF	; 255
    9b30:	cf 1a       	sub	r12, r31
    9b32:	df 0a       	sbc	r13, r31
    9b34:	2a 81       	ldd	r18, Y+2	; 0x02
    9b36:	c2 16       	cp	r12, r18
    9b38:	a8 f3       	brcs	.-22     	; 0x9b24 <ProcessSprites+0x124>
    9b3a:	8b cf       	rjmp	.-234    	; 0x9a52 <ProcessSprites+0x52>
    9b3c:	29 2f       	mov	r18, r25
    9b3e:	22 0f       	add	r18, r18
    9b40:	22 0f       	add	r18, r18
    9b42:	22 0f       	add	r18, r18
    9b44:	21 50       	subi	r18, 0x01	; 1
    9b46:	3b 81       	ldd	r19, Y+3	; 0x03
    9b48:	48 e0       	ldi	r20, 0x08	; 8
    9b4a:	c4 9e       	mul	r12, r20
    9b4c:	30 0d       	add	r19, r0
    9b4e:	11 24       	eor	r1, r1
    9b50:	32 17       	cp	r19, r18
    9b52:	68 f7       	brcc	.-38     	; 0x9b2e <ProcessSprites+0x12e>
    9b54:	82 0d       	add	r24, r2
    9b56:	89 17       	cp	r24, r25
    9b58:	10 f0       	brcs	.+4      	; 0x9b5e <ProcessSprites+0x15e>
    9b5a:	89 1b       	sub	r24, r25
    9b5c:	fc cf       	rjmp	.-8      	; 0x9b56 <ProcessSprites+0x156>
    9b5e:	e8 2e       	mov	r14, r24
    9b60:	e6 94       	lsr	r14
    9b62:	e6 94       	lsr	r14
    9b64:	e6 94       	lsr	r14
    9b66:	f1 2c       	mov	r15, r1
    9b68:	fe 2c       	mov	r15, r14
    9b6a:	ee 24       	eor	r14, r14
    9b6c:	87 70       	andi	r24, 0x07	; 7
    9b6e:	e8 0e       	add	r14, r24
    9b70:	f1 1c       	adc	r15, r1
    9b72:	9c 2c       	mov	r9, r12
    9b74:	88 24       	eor	r8, r8
    9b76:	41 2c       	mov	r4, r1
    9b78:	8c 81       	ldd	r24, Y+4	; 0x04
    9b7a:	68 e0       	ldi	r22, 0x08	; 8
    9b7c:	46 9e       	mul	r4, r22
    9b7e:	80 0d       	add	r24, r0
    9b80:	11 24       	eor	r1, r1
    9b82:	87 3e       	cpi	r24, 0xE7	; 231
    9b84:	08 f0       	brcs	.+2      	; 0x9b88 <ProcessSprites+0x188>
    9b86:	49 c0       	rjmp	.+146    	; 0x9c1a <ProcessSprites+0x21a>
    9b88:	83 2d       	mov	r24, r3
    9b8a:	84 0d       	add	r24, r4
    9b8c:	88 0f       	add	r24, r24
    9b8e:	88 0f       	add	r24, r24
    9b90:	88 0f       	add	r24, r24
    9b92:	f7 01       	movw	r30, r14
    9b94:	e8 0f       	add	r30, r24
    9b96:	f1 1d       	adc	r31, r1
    9b98:	9f 01       	movw	r18, r30
    9b9a:	20 50       	subi	r18, 0x00	; 0
    9b9c:	35 4f       	sbci	r19, 0xF5	; 245
    9b9e:	59 01       	movw	r10, r18
    9ba0:	f9 01       	movw	r30, r18
    9ba2:	50 80       	ld	r5, Z
    9ba4:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9ba8:	fa e1       	ldi	r31, 0x1A	; 26
    9baa:	f5 15       	cp	r31, r5
    9bac:	10 f0       	brcs	.+4      	; 0x9bb2 <ProcessSprites+0x1b2>
    9bae:	58 16       	cp	r5, r24
    9bb0:	48 f5       	brcc	.+82     	; 0x9c04 <ProcessSprites+0x204>
    9bb2:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <free_tile_index>
    9bb6:	6b 31       	cpi	r22, 0x1B	; 27
    9bb8:	10 f5       	brcc	.+68     	; 0x9bfe <ProcessSprites+0x1fe>
    9bba:	2a e1       	ldi	r18, 0x1A	; 26
    9bbc:	25 15       	cp	r18, r5
    9bbe:	28 f4       	brcc	.+10     	; 0x9bca <ProcessSprites+0x1ca>
    9bc0:	85 ee       	ldi	r24, 0xE5	; 229
    9bc2:	85 0d       	add	r24, r5
    9bc4:	0e 94 ed 3e 	call	0x7dda	; 0x7dda <CopyFlashTile>
    9bc8:	05 c0       	rjmp	.+10     	; 0x9bd4 <ProcessSprites+0x1d4>
    9bca:	58 16       	cp	r5, r24
    9bcc:	18 f4       	brcc	.+6      	; 0x9bd4 <ProcessSprites+0x1d4>
    9bce:	85 2d       	mov	r24, r5
    9bd0:	0e 94 7c 3f 	call	0x7ef8	; 0x7ef8 <CopyRamTile>
    9bd4:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <free_tile_index>
    9bd8:	e8 2f       	mov	r30, r24
    9bda:	f0 e0       	ldi	r31, 0x00	; 0
    9bdc:	9f 01       	movw	r18, r30
    9bde:	22 0f       	add	r18, r18
    9be0:	33 1f       	adc	r19, r19
    9be2:	e2 0f       	add	r30, r18
    9be4:	f3 1f       	adc	r31, r19
    9be6:	e6 50       	subi	r30, 0x06	; 6
    9be8:	f8 4f       	sbci	r31, 0xF8	; 248
    9bea:	b1 82       	std	Z+1, r11	; 0x01
    9bec:	a0 82       	st	Z, r10
    9bee:	52 82       	std	Z+2, r5	; 0x02
    9bf0:	f5 01       	movw	r30, r10
    9bf2:	80 83       	st	Z, r24
    9bf4:	91 e0       	ldi	r25, 0x01	; 1
    9bf6:	98 0f       	add	r25, r24
    9bf8:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <free_tile_index>
    9bfc:	58 2e       	mov	r5, r24
    9bfe:	fa e1       	ldi	r31, 0x1A	; 26
    9c00:	f5 15       	cp	r31, r5
    9c02:	58 f0       	brcs	.+22     	; 0x9c1a <ProcessSprites+0x21a>
    9c04:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9c08:	58 16       	cp	r5, r24
    9c0a:	38 f0       	brcs	.+14     	; 0x9c1a <ProcessSprites+0x21a>
    9c0c:	93 01       	movw	r18, r6
    9c0e:	a4 01       	movw	r20, r8
    9c10:	6d 81       	ldd	r22, Y+5	; 0x05
    9c12:	7e 81       	ldd	r23, Y+6	; 0x06
    9c14:	85 2d       	mov	r24, r5
    9c16:	0e 94 1c 40 	call	0x8038	; 0x8038 <BlitSpritePart>
    9c1a:	43 94       	inc	r4
    9c1c:	2f ef       	ldi	r18, 0xFF	; 255
    9c1e:	82 1a       	sub	r8, r18
    9c20:	92 0a       	sbc	r9, r18
    9c22:	39 81       	ldd	r19, Y+1	; 0x01
    9c24:	43 12       	cpse	r4, r19
    9c26:	a8 cf       	rjmp	.-176    	; 0x9b78 <ProcessSprites+0x178>
    9c28:	82 cf       	rjmp	.-252    	; 0x9b2e <ProcessSprites+0x12e>
    9c2a:	26 96       	adiw	r28, 0x06	; 6
    9c2c:	0f b6       	in	r0, 0x3f	; 63
    9c2e:	f8 94       	cli
    9c30:	de bf       	out	0x3e, r29	; 62
    9c32:	0f be       	out	0x3f, r0	; 63
    9c34:	cd bf       	out	0x3d, r28	; 61
    9c36:	df 91       	pop	r29
    9c38:	cf 91       	pop	r28
    9c3a:	1f 91       	pop	r17
    9c3c:	0f 91       	pop	r16
    9c3e:	ff 90       	pop	r15
    9c40:	ef 90       	pop	r14
    9c42:	df 90       	pop	r13
    9c44:	cf 90       	pop	r12
    9c46:	bf 90       	pop	r11
    9c48:	af 90       	pop	r10
    9c4a:	9f 90       	pop	r9
    9c4c:	8f 90       	pop	r8
    9c4e:	7f 90       	pop	r7
    9c50:	6f 90       	pop	r6
    9c52:	5f 90       	pop	r5
    9c54:	4f 90       	pop	r4
    9c56:	3f 90       	pop	r3
    9c58:	2f 90       	pop	r2
    9c5a:	08 95       	ret

00009c5c <Scroll>:
    9c5c:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9c60:	29 2f       	mov	r18, r25
    9c62:	22 0f       	add	r18, r18
    9c64:	22 0f       	add	r18, r18
    9c66:	22 0f       	add	r18, r18
    9c68:	90 91 5d 08 	lds	r25, 0x085D	; 0x80085d <screen_scrollY>
    9c6c:	96 0f       	add	r25, r22
    9c6e:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9c72:	30 91 5c 08 	lds	r19, 0x085C	; 0x80085c <screen_scrollX>
    9c76:	83 0f       	add	r24, r19
    9c78:	80 93 5c 08 	sts	0x085C, r24	; 0x80085c <screen_scrollX>
    9c7c:	92 17       	cp	r25, r18
    9c7e:	38 f0       	brcs	.+14     	; 0x9c8e <Scroll+0x32>
    9c80:	67 fd       	sbrc	r22, 7
    9c82:	02 c0       	rjmp	.+4      	; 0x9c88 <Scroll+0x2c>
    9c84:	92 1b       	sub	r25, r18
    9c86:	01 c0       	rjmp	.+2      	; 0x9c8a <Scroll+0x2e>
    9c88:	92 0f       	add	r25, r18
    9c8a:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9c8e:	08 95       	ret

00009c90 <MapSprite2>:
    9c90:	df 92       	push	r13
    9c92:	ef 92       	push	r14
    9c94:	ff 92       	push	r15
    9c96:	0f 93       	push	r16
    9c98:	1f 93       	push	r17
    9c9a:	cf 93       	push	r28
    9c9c:	df 93       	push	r29
    9c9e:	fb 01       	movw	r30, r22
    9ca0:	14 91       	lpm	r17, Z
    9ca2:	31 96       	adiw	r30, 0x01	; 1
    9ca4:	54 91       	lpm	r21, Z
    9ca6:	2f ef       	ldi	r18, 0xFF	; 255
    9ca8:	21 0f       	add	r18, r17
    9caa:	e4 2f       	mov	r30, r20
    9cac:	e1 70       	andi	r30, 0x01	; 1
    9cae:	40 ff       	sbrs	r20, 0
    9cb0:	03 c0       	rjmp	.+6      	; 0x9cb8 <MapSprite2+0x28>
    9cb2:	92 2f       	mov	r25, r18
    9cb4:	df ef       	ldi	r29, 0xFF	; 255
    9cb6:	02 c0       	rjmp	.+4      	; 0x9cbc <MapSprite2+0x2c>
    9cb8:	d1 e0       	ldi	r29, 0x01	; 1
    9cba:	90 e0       	ldi	r25, 0x00	; 0
    9cbc:	41 ff       	sbrs	r20, 1
    9cbe:	04 c0       	rjmp	.+8      	; 0x9cc8 <MapSprite2+0x38>
    9cc0:	3f ef       	ldi	r19, 0xFF	; 255
    9cc2:	35 0f       	add	r19, r21
    9cc4:	0f ef       	ldi	r16, 0xFF	; 255
    9cc6:	02 c0       	rjmp	.+4      	; 0x9ccc <MapSprite2+0x3c>
    9cc8:	01 e0       	ldi	r16, 0x01	; 1
    9cca:	30 e0       	ldi	r19, 0x00	; 0
    9ccc:	ee 23       	and	r30, r30
    9cce:	11 f0       	breq	.+4      	; 0x9cd4 <MapSprite2+0x44>
    9cd0:	e2 2e       	mov	r14, r18
    9cd2:	01 c0       	rjmp	.+2      	; 0x9cd6 <MapSprite2+0x46>
    9cd4:	e1 2c       	mov	r14, r1
    9cd6:	c0 e0       	ldi	r28, 0x00	; 0
    9cd8:	c5 17       	cp	r28, r21
    9cda:	f9 f0       	breq	.+62     	; 0x9d1a <MapSprite2+0x8a>
    9cdc:	31 03       	mulsu	r19, r17
    9cde:	d0 01       	movw	r26, r0
    9ce0:	11 24       	eor	r1, r1
    9ce2:	d8 2e       	mov	r13, r24
    9ce4:	d1 0e       	add	r13, r17
    9ce6:	8d 15       	cp	r24, r13
    9ce8:	a1 f0       	breq	.+40     	; 0x9d12 <MapSprite2+0x82>
    9cea:	fd 01       	movw	r30, r26
    9cec:	e9 0f       	add	r30, r25
    9cee:	f1 1d       	adc	r31, r1
    9cf0:	97 fd       	sbrc	r25, 7
    9cf2:	fa 95       	dec	r31
    9cf4:	32 96       	adiw	r30, 0x02	; 2
    9cf6:	e6 0f       	add	r30, r22
    9cf8:	f7 1f       	adc	r31, r23
    9cfa:	f4 90       	lpm	r15, Z
    9cfc:	24 e0       	ldi	r18, 0x04	; 4
    9cfe:	82 9f       	mul	r24, r18
    9d00:	f0 01       	movw	r30, r0
    9d02:	11 24       	eor	r1, r1
    9d04:	ee 5f       	subi	r30, 0xFE	; 254
    9d06:	fe 4f       	sbci	r31, 0xFE	; 254
    9d08:	f2 82       	std	Z+2, r15	; 0x02
    9d0a:	8f 5f       	subi	r24, 0xFF	; 255
    9d0c:	43 83       	std	Z+3, r20	; 0x03
    9d0e:	9d 0f       	add	r25, r29
    9d10:	ea cf       	rjmp	.-44     	; 0x9ce6 <MapSprite2+0x56>
    9d12:	30 0f       	add	r19, r16
    9d14:	cf 5f       	subi	r28, 0xFF	; 255
    9d16:	9e 2d       	mov	r25, r14
    9d18:	df cf       	rjmp	.-66     	; 0x9cd8 <MapSprite2+0x48>
    9d1a:	df 91       	pop	r29
    9d1c:	cf 91       	pop	r28
    9d1e:	1f 91       	pop	r17
    9d20:	0f 91       	pop	r16
    9d22:	ff 90       	pop	r15
    9d24:	ef 90       	pop	r14
    9d26:	df 90       	pop	r13
    9d28:	08 95       	ret

00009d2a <MoveSprite>:
    9d2a:	0f 93       	push	r16
    9d2c:	30 e0       	ldi	r19, 0x00	; 0
    9d2e:	30 17       	cp	r19, r16
    9d30:	99 f0       	breq	.+38     	; 0x9d58 <MoveSprite+0x2e>
    9d32:	58 2f       	mov	r21, r24
    9d34:	52 0f       	add	r21, r18
    9d36:	96 2f       	mov	r25, r22
    9d38:	85 17       	cp	r24, r21
    9d3a:	59 f0       	breq	.+22     	; 0x9d52 <MoveSprite+0x28>
    9d3c:	74 e0       	ldi	r23, 0x04	; 4
    9d3e:	87 9f       	mul	r24, r23
    9d40:	f0 01       	movw	r30, r0
    9d42:	11 24       	eor	r1, r1
    9d44:	ee 5f       	subi	r30, 0xFE	; 254
    9d46:	fe 4f       	sbci	r31, 0xFE	; 254
    9d48:	90 83       	st	Z, r25
    9d4a:	41 83       	std	Z+1, r20	; 0x01
    9d4c:	8f 5f       	subi	r24, 0xFF	; 255
    9d4e:	98 5f       	subi	r25, 0xF8	; 248
    9d50:	f3 cf       	rjmp	.-26     	; 0x9d38 <MoveSprite+0xe>
    9d52:	3f 5f       	subi	r19, 0xFF	; 255
    9d54:	48 5f       	subi	r20, 0xF8	; 248
    9d56:	eb cf       	rjmp	.-42     	; 0x9d2e <MoveSprite+0x4>
    9d58:	0f 91       	pop	r16
    9d5a:	08 95       	ret

00009d5c <InitializeVideoMode>:
    9d5c:	e2 e0       	ldi	r30, 0x02	; 2
    9d5e:	f1 e0       	ldi	r31, 0x01	; 1
    9d60:	80 ee       	ldi	r24, 0xE0	; 224
    9d62:	80 83       	st	Z, r24
    9d64:	81 83       	std	Z+1, r24	; 0x01
    9d66:	34 96       	adiw	r30, 0x04	; 4
    9d68:	91 e0       	ldi	r25, 0x01	; 1
    9d6a:	ea 33       	cpi	r30, 0x3A	; 58
    9d6c:	f9 07       	cpc	r31, r25
    9d6e:	c9 f7       	brne	.-14     	; 0x9d62 <InitializeVideoMode+0x6>
    9d70:	80 e2       	ldi	r24, 0x20	; 32
    9d72:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollHeight>
    9d76:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    9d7a:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <free_tile_index>
    9d7e:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <user_ram_tiles_c_tmp>
    9d82:	08 95       	ret

00009d84 <DrawMap>:
    9d84:	7f 92       	push	r7
    9d86:	8f 92       	push	r8
    9d88:	9f 92       	push	r9
    9d8a:	af 92       	push	r10
    9d8c:	bf 92       	push	r11
    9d8e:	cf 92       	push	r12
    9d90:	df 92       	push	r13
    9d92:	ef 92       	push	r14
    9d94:	ff 92       	push	r15
    9d96:	0f 93       	push	r16
    9d98:	1f 93       	push	r17
    9d9a:	cf 93       	push	r28
    9d9c:	df 93       	push	r29
    9d9e:	98 2e       	mov	r9, r24
    9da0:	86 2e       	mov	r8, r22
    9da2:	fa 01       	movw	r30, r20
    9da4:	e4 90       	lpm	r14, Z
    9da6:	31 96       	adiw	r30, 0x01	; 1
    9da8:	f4 90       	lpm	r15, Z
    9daa:	ae 2c       	mov	r10, r14
    9dac:	b1 2c       	mov	r11, r1
    9dae:	ea 01       	movw	r28, r20
    9db0:	22 96       	adiw	r28, 0x02	; 2
    9db2:	10 e0       	ldi	r17, 0x00	; 0
    9db4:	1f 15       	cp	r17, r15
    9db6:	b9 f0       	breq	.+46     	; 0x9de6 <DrawMap+0x62>
    9db8:	6e 01       	movw	r12, r28
    9dba:	00 e0       	ldi	r16, 0x00	; 0
    9dbc:	71 2e       	mov	r7, r17
    9dbe:	78 0c       	add	r7, r8
    9dc0:	0e 15       	cp	r16, r14
    9dc2:	69 f0       	breq	.+26     	; 0x9dde <DrawMap+0x5a>
    9dc4:	f6 01       	movw	r30, r12
    9dc6:	44 91       	lpm	r20, Z
    9dc8:	50 e0       	ldi	r21, 0x00	; 0
    9dca:	67 2d       	mov	r22, r7
    9dcc:	80 2f       	mov	r24, r16
    9dce:	89 0d       	add	r24, r9
    9dd0:	0e 94 32 42 	call	0x8464	; 0x8464 <SetTile>
    9dd4:	0f 5f       	subi	r16, 0xFF	; 255
    9dd6:	ff ef       	ldi	r31, 0xFF	; 255
    9dd8:	cf 1a       	sub	r12, r31
    9dda:	df 0a       	sbc	r13, r31
    9ddc:	f1 cf       	rjmp	.-30     	; 0x9dc0 <DrawMap+0x3c>
    9dde:	1f 5f       	subi	r17, 0xFF	; 255
    9de0:	ca 0d       	add	r28, r10
    9de2:	db 1d       	adc	r29, r11
    9de4:	e7 cf       	rjmp	.-50     	; 0x9db4 <DrawMap+0x30>
    9de6:	df 91       	pop	r29
    9de8:	cf 91       	pop	r28
    9dea:	1f 91       	pop	r17
    9dec:	0f 91       	pop	r16
    9dee:	ff 90       	pop	r15
    9df0:	ef 90       	pop	r14
    9df2:	df 90       	pop	r13
    9df4:	cf 90       	pop	r12
    9df6:	bf 90       	pop	r11
    9df8:	af 90       	pop	r10
    9dfa:	9f 90       	pop	r9
    9dfc:	8f 90       	pop	r8
    9dfe:	7f 90       	pop	r7
    9e00:	08 95       	ret

00009e02 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    9e02:	0f 93       	push	r16
    9e04:	1f 93       	push	r17
    9e06:	cf 93       	push	r28
    9e08:	df 93       	push	r29
    9e0a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9e0c:	c0 e0       	ldi	r28, 0x00	; 0
    9e0e:	d0 e0       	ldi	r29, 0x00	; 0
    9e10:	c0 17       	cp	r28, r16
    9e12:	d1 07       	cpc	r29, r17
    9e14:	44 f4       	brge	.+16     	; 0x9e26 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    9e16:	0e 94 48 42 	call	0x8490	; 0x8490 <GetVsyncFlag>
    9e1a:	88 23       	and	r24, r24
    9e1c:	e1 f3       	breq	.-8      	; 0x9e16 <WaitVsync+0x14>
		ClearVsyncFlag();		
    9e1e:	0e 94 4c 42 	call	0x8498	; 0x8498 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    9e22:	21 96       	adiw	r28, 0x01	; 1
    9e24:	f5 cf       	rjmp	.-22     	; 0x9e10 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    9e26:	df 91       	pop	r29
    9e28:	cf 91       	pop	r28
    9e2a:	1f 91       	pop	r17
    9e2c:	0f 91       	pop	r16
    9e2e:	08 95       	ret

00009e30 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    9e30:	83 e1       	ldi	r24, 0x13	; 19
    9e32:	99 e0       	ldi	r25, 0x09	; 9
    9e34:	0e 94 ad 43 	call	0x875a	; 0x875a <InitMusicPlayer>
	SetTileTable(logo_tileset);
    9e38:	83 e1       	ldi	r24, 0x13	; 19
    9e3a:	91 e0       	ldi	r25, 0x01	; 1
    9e3c:	0e 94 43 42 	call	0x8486	; 0x8486 <SetTileTable>

	/* Draw logo */
	ClearVram();
    9e40:	0e 94 28 42 	call	0x8450	; 0x8450 <ClearVram>
	WaitVsync(15U);
    9e44:	8f e0       	ldi	r24, 0x0F	; 15
    9e46:	90 e0       	ldi	r25, 0x00	; 0
    9e48:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    9e4c:	41 e0       	ldi	r20, 0x01	; 1
    9e4e:	6f ef       	ldi	r22, 0xFF	; 255
    9e50:	80 e0       	ldi	r24, 0x00	; 0
    9e52:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9e56:	4d ef       	ldi	r20, 0xFD	; 253
    9e58:	50 e0       	ldi	r21, 0x00	; 0
    9e5a:	6c e0       	ldi	r22, 0x0C	; 12
    9e5c:	8c e0       	ldi	r24, 0x0C	; 12
    9e5e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	WaitVsync(3);
    9e62:	83 e0       	ldi	r24, 0x03	; 3
    9e64:	90 e0       	ldi	r25, 0x00	; 0
    9e66:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    9e6a:	4c ee       	ldi	r20, 0xEC	; 236
    9e6c:	50 e0       	ldi	r21, 0x00	; 0
    9e6e:	6c e0       	ldi	r22, 0x0C	; 12
    9e70:	8c e0       	ldi	r24, 0x0C	; 12
    9e72:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	WaitVsync(2);
    9e76:	82 e0       	ldi	r24, 0x02	; 2
    9e78:	90 e0       	ldi	r25, 0x00	; 0
    9e7a:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    9e7e:	4d ef       	ldi	r20, 0xFD	; 253
    9e80:	50 e0       	ldi	r21, 0x00	; 0
    9e82:	6c e0       	ldi	r22, 0x0C	; 12
    9e84:	8c e0       	ldi	r24, 0x0C	; 12
    9e86:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    9e8a:	81 e4       	ldi	r24, 0x41	; 65
    9e8c:	90 e0       	ldi	r25, 0x00	; 0
    9e8e:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
	ClearVram();
    9e92:	0e 94 28 42 	call	0x8450	; 0x8450 <ClearVram>
	WaitVsync(20U);
    9e96:	84 e1       	ldi	r24, 0x14	; 20
    9e98:	90 e0       	ldi	r25, 0x00	; 0
    9e9a:	0c 94 01 4f 	jmp	0x9e02	; 0x9e02 <WaitVsync>

00009e9e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    9e9e:	80 93 21 09 	sts	0x0921, r24	; 0x800921 <fadeSpeed>
	currFadeFrame=0;
    9ea2:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <currFadeFrame>
	fadeActive=true;
    9ea6:	81 e0       	ldi	r24, 0x01	; 1
    9ea8:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <fadeActive>
		
	if(blocking){
    9eac:	66 23       	and	r22, r22
    9eae:	21 f0       	breq	.+8      	; 0x9eb8 <doFade+0x1a>
		while(fadeActive==true);
    9eb0:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <fadeActive>
    9eb4:	81 11       	cpse	r24, r1
    9eb6:	fc cf       	rjmp	.-8      	; 0x9eb0 <doFade+0x12>
    9eb8:	08 95       	ret

00009eba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    9eba:	81 11       	cpse	r24, r1
    9ebc:	03 c0       	rjmp	.+6      	; 0x9ec4 <FadeIn+0xa>
		DDRC=0xff;
    9ebe:	8f ef       	ldi	r24, 0xFF	; 255
    9ec0:	87 b9       	out	0x07, r24	; 7
		return;
    9ec2:	08 95       	ret
	}
	fadeStep=1;
    9ec4:	91 e0       	ldi	r25, 0x01	; 1
    9ec6:	90 93 25 09 	sts	0x0925, r25	; 0x800925 <fadeStep>
	fadeDir=1;
    9eca:	90 93 22 09 	sts	0x0922, r25	; 0x800922 <fadeDir>
	doFade(speed,blocking);
    9ece:	0c 94 4f 4f 	jmp	0x9e9e	; 0x9e9e <doFade>

00009ed2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    9ed2:	81 11       	cpse	r24, r1
    9ed4:	02 c0       	rjmp	.+4      	; 0x9eda <FadeOut+0x8>
		DDRC=0;
    9ed6:	17 b8       	out	0x07, r1	; 7
		return;
    9ed8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    9eda:	9c e0       	ldi	r25, 0x0C	; 12
    9edc:	90 93 25 09 	sts	0x0925, r25	; 0x800925 <fadeStep>
	fadeDir=-1;
    9ee0:	9f ef       	ldi	r25, 0xFF	; 255
    9ee2:	90 93 22 09 	sts	0x0922, r25	; 0x800922 <fadeDir>
	doFade(speed,blocking);
    9ee6:	0c 94 4f 4f 	jmp	0x9e9e	; 0x9e9e <doFade>

00009eea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    9eea:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <fadeActive>
    9eee:	88 23       	and	r24, r24
    9ef0:	01 f1       	breq	.+64     	; 0x9f32 <ProcessFading+0x48>
		if(currFadeFrame==0){
    9ef2:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <currFadeFrame>
    9ef6:	81 11       	cpse	r24, r1
    9ef8:	19 c0       	rjmp	.+50     	; 0x9f2c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    9efa:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <fadeSpeed>
    9efe:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    9f02:	e0 91 25 09 	lds	r30, 0x0925	; 0x800925 <fadeStep>
    9f06:	f0 e0       	ldi	r31, 0x00	; 0
    9f08:	e1 52       	subi	r30, 0x21	; 33
    9f0a:	ff 4f       	sbci	r31, 0xFF	; 255
    9f0c:	e4 91       	lpm	r30, Z
    9f0e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    9f10:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <fadeStep>
    9f14:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeDir>
    9f18:	89 0f       	add	r24, r25
    9f1a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    9f1e:	88 23       	and	r24, r24
    9f20:	11 f0       	breq	.+4      	; 0x9f26 <ProcessFading+0x3c>
    9f22:	8d 30       	cpi	r24, 0x0D	; 13
    9f24:	31 f4       	brne	.+12     	; 0x9f32 <ProcessFading+0x48>
				fadeActive=false;
    9f26:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <fadeActive>
    9f2a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    9f2c:	81 50       	subi	r24, 0x01	; 1
    9f2e:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <currFadeFrame>
    9f32:	08 95       	ret

00009f34 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    9f34:	0e 94 75 4f 	call	0x9eea	; 0x9eea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    9f38:	0c 94 00 4d 	jmp	0x9a00	; 0x9a00 <ProcessSprites>

00009f3c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    9f3c:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    9f40:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    9f44:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    9f48:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    9f4c:	01 96       	adiw	r24, 0x01	; 1
    9f4e:	a1 1d       	adc	r26, r1
    9f50:	b1 1d       	adc	r27, r1
    9f52:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <time>
    9f56:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <time+0x1>
    9f5a:	a0 93 ef 09 	sts	0x09EF, r26	; 0x8009ef <time+0x2>
    9f5e:	b0 93 f0 09 	sts	0x09F0, r27	; 0x8009f0 <time+0x3>
    9f62:	08 95       	ret

00009f64 <drawplayer>:
return;
  
}

void drawplayer()
{
    9f64:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,0);
    9f66:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9f6a:	82 37       	cpi	r24, 0x72	; 114
    9f6c:	49 f4       	brne	.+18     	; 0x9f80 <drawplayer+0x1c>
    9f6e:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    9f72:	81 11       	cpse	r24, r1
    9f74:	05 c0       	rjmp	.+10     	; 0x9f80 <drawplayer+0x1c>
    9f76:	40 e0       	ldi	r20, 0x00	; 0
    9f78:	63 e2       	ldi	r22, 0x23	; 35
    9f7a:	77 e4       	ldi	r23, 0x47	; 71
    9f7c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,1);
    9f80:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9f84:	8c 36       	cpi	r24, 0x6C	; 108
    9f86:	49 f4       	brne	.+18     	; 0x9f9a <drawplayer+0x36>
    9f88:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    9f8c:	81 11       	cpse	r24, r1
    9f8e:	05 c0       	rjmp	.+10     	; 0x9f9a <drawplayer+0x36>
    9f90:	41 e0       	ldi	r20, 0x01	; 1
    9f92:	63 e2       	ldi	r22, 0x23	; 35
    9f94:	77 e4       	ldi	r23, 0x47	; 71
    9f96:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,0);
    9f9a:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9f9e:	82 37       	cpi	r24, 0x72	; 114
    9fa0:	59 f4       	brne	.+22     	; 0x9fb8 <drawplayer+0x54>
    9fa2:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    9fa6:	81 50       	subi	r24, 0x01	; 1
    9fa8:	88 30       	cpi	r24, 0x08	; 8
    9faa:	30 f4       	brcc	.+12     	; 0x9fb8 <drawplayer+0x54>
    9fac:	40 e0       	ldi	r20, 0x00	; 0
    9fae:	63 e2       	ldi	r22, 0x23	; 35
    9fb0:	77 e4       	ldi	r23, 0x47	; 71
    9fb2:	80 e0       	ldi	r24, 0x00	; 0
    9fb4:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,0);    
    9fb8:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9fbc:	82 37       	cpi	r24, 0x72	; 114
    9fbe:	59 f4       	brne	.+22     	; 0x9fd6 <drawplayer+0x72>
    9fc0:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    9fc4:	89 50       	subi	r24, 0x09	; 9
    9fc6:	88 30       	cpi	r24, 0x08	; 8
    9fc8:	30 f4       	brcc	.+12     	; 0x9fd6 <drawplayer+0x72>
    9fca:	40 e0       	ldi	r20, 0x00	; 0
    9fcc:	6d e1       	ldi	r22, 0x1D	; 29
    9fce:	77 e4       	ldi	r23, 0x47	; 71
    9fd0:	80 e0       	ldi	r24, 0x00	; 0
    9fd2:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,0);  
    9fd6:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9fda:	82 37       	cpi	r24, 0x72	; 114
    9fdc:	59 f4       	brne	.+22     	; 0x9ff4 <drawplayer+0x90>
    9fde:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    9fe2:	81 51       	subi	r24, 0x11	; 17
    9fe4:	88 30       	cpi	r24, 0x08	; 8
    9fe6:	30 f4       	brcc	.+12     	; 0x9ff4 <drawplayer+0x90>
    9fe8:	40 e0       	ldi	r20, 0x00	; 0
    9fea:	67 e1       	ldi	r22, 0x17	; 23
    9fec:	77 e4       	ldi	r23, 0x47	; 71
    9fee:	80 e0       	ldi	r24, 0x00	; 0
    9ff0:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,1);
    9ff4:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    9ff8:	8c 36       	cpi	r24, 0x6C	; 108
    9ffa:	59 f4       	brne	.+22     	; 0xa012 <drawplayer+0xae>
    9ffc:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    a000:	81 50       	subi	r24, 0x01	; 1
    a002:	88 30       	cpi	r24, 0x08	; 8
    a004:	30 f4       	brcc	.+12     	; 0xa012 <drawplayer+0xae>
    a006:	41 e0       	ldi	r20, 0x01	; 1
    a008:	63 e2       	ldi	r22, 0x23	; 35
    a00a:	77 e4       	ldi	r23, 0x47	; 71
    a00c:	80 e0       	ldi	r24, 0x00	; 0
    a00e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,1);    
    a012:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    a016:	8c 36       	cpi	r24, 0x6C	; 108
    a018:	59 f4       	brne	.+22     	; 0xa030 <drawplayer+0xcc>
    a01a:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    a01e:	89 50       	subi	r24, 0x09	; 9
    a020:	88 30       	cpi	r24, 0x08	; 8
    a022:	30 f4       	brcc	.+12     	; 0xa030 <drawplayer+0xcc>
    a024:	41 e0       	ldi	r20, 0x01	; 1
    a026:	6d e1       	ldi	r22, 0x1D	; 29
    a028:	77 e4       	ldi	r23, 0x47	; 71
    a02a:	80 e0       	ldi	r24, 0x00	; 0
    a02c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,1);  
    a030:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xe>
    a034:	8c 36       	cpi	r24, 0x6C	; 108
    a036:	59 f4       	brne	.+22     	; 0xa04e <drawplayer+0xea>
    a038:	80 91 7d 09 	lds	r24, 0x097D	; 0x80097d <player+0x1b>
    a03c:	81 51       	subi	r24, 0x11	; 17
    a03e:	88 30       	cpi	r24, 0x08	; 8
    a040:	30 f4       	brcc	.+12     	; 0xa04e <drawplayer+0xea>
    a042:	41 e0       	ldi	r20, 0x01	; 1
    a044:	67 e1       	ldi	r22, 0x17	; 23
    a046:	77 e4       	ldi	r23, 0x47	; 71
    a048:	80 e0       	ldi	r24, 0x00	; 0
    a04a:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a04e:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xa>
    a052:	88 23       	and	r24, r24
    a054:	31 f0       	breq	.+12     	; 0xa062 <drawplayer+0xfe>
{
   MapSprite2(0 ,pac0 ,0);
    a056:	40 e0       	ldi	r20, 0x00	; 0
    a058:	63 e2       	ldi	r22, 0x23	; 35
    a05a:	77 e4       	ldi	r23, 0x47	; 71
    a05c:	80 e0       	ldi	r24, 0x00	; 0
    a05e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    a062:	40 91 64 09 	lds	r20, 0x0964	; 0x800964 <player+0x2>
    a066:	45 51       	subi	r20, 0x15	; 21
    a068:	60 91 62 09 	lds	r22, 0x0962	; 0x800962 <player>
    a06c:	67 50       	subi	r22, 0x07	; 7
    a06e:	02 e0       	ldi	r16, 0x02	; 2
    a070:	22 e0       	ldi	r18, 0x02	; 2
    a072:	80 e0       	ldi	r24, 0x00	; 0
    a074:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>



aniframe++;
    a078:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
    a07c:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    a07e:	85 31       	cpi	r24, 0x15	; 21
    a080:	18 f4       	brcc	.+6      	; 0xa088 <drawplayer+0x124>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);



aniframe++;
    a082:	80 93 70 0a 	sts	0x0A70, r24	; 0x800a70 <aniframe>
    a086:	02 c0       	rjmp	.+4      	; 0xa08c <drawplayer+0x128>
if ( aniframe > 20 ) aniframe = 0;     
    a088:	10 92 70 0a 	sts	0x0A70, r1	; 0x800a70 <aniframe>


}
    a08c:	0f 91       	pop	r16
    a08e:	08 95       	ret

0000a090 <drawplayer2>:
void drawplayer2()
{
    a090:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,0);
    a092:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a096:	82 37       	cpi	r24, 0x72	; 114
    a098:	51 f4       	brne	.+20     	; 0xa0ae <drawplayer2+0x1e>
    a09a:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a09e:	81 11       	cpse	r24, r1
    a0a0:	06 c0       	rjmp	.+12     	; 0xa0ae <drawplayer2+0x1e>
    a0a2:	40 e0       	ldi	r20, 0x00	; 0
    a0a4:	65 e0       	ldi	r22, 0x05	; 5
    a0a6:	77 e4       	ldi	r23, 0x47	; 71
    a0a8:	8a e0       	ldi	r24, 0x0A	; 10
    a0aa:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,1);
    a0ae:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a0b2:	8c 36       	cpi	r24, 0x6C	; 108
    a0b4:	51 f4       	brne	.+20     	; 0xa0ca <drawplayer2+0x3a>
    a0b6:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a0ba:	81 11       	cpse	r24, r1
    a0bc:	06 c0       	rjmp	.+12     	; 0xa0ca <drawplayer2+0x3a>
    a0be:	41 e0       	ldi	r20, 0x01	; 1
    a0c0:	65 e0       	ldi	r22, 0x05	; 5
    a0c2:	77 e4       	ldi	r23, 0x47	; 71
    a0c4:	8a e0       	ldi	r24, 0x0A	; 10
    a0c6:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,0);
    a0ca:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a0ce:	82 37       	cpi	r24, 0x72	; 114
    a0d0:	59 f4       	brne	.+22     	; 0xa0e8 <drawplayer2+0x58>
    a0d2:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a0d6:	81 50       	subi	r24, 0x01	; 1
    a0d8:	88 30       	cpi	r24, 0x08	; 8
    a0da:	30 f4       	brcc	.+12     	; 0xa0e8 <drawplayer2+0x58>
    a0dc:	40 e0       	ldi	r20, 0x00	; 0
    a0de:	65 e0       	ldi	r22, 0x05	; 5
    a0e0:	77 e4       	ldi	r23, 0x47	; 71
    a0e2:	8a e0       	ldi	r24, 0x0A	; 10
    a0e4:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,0);    
    a0e8:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a0ec:	82 37       	cpi	r24, 0x72	; 114
    a0ee:	59 f4       	brne	.+22     	; 0xa106 <drawplayer2+0x76>
    a0f0:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a0f4:	89 50       	subi	r24, 0x09	; 9
    a0f6:	88 30       	cpi	r24, 0x08	; 8
    a0f8:	30 f4       	brcc	.+12     	; 0xa106 <drawplayer2+0x76>
    a0fa:	40 e0       	ldi	r20, 0x00	; 0
    a0fc:	6f ef       	ldi	r22, 0xFF	; 255
    a0fe:	76 e4       	ldi	r23, 0x46	; 70
    a100:	8a e0       	ldi	r24, 0x0A	; 10
    a102:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,0);  
    a106:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a10a:	82 37       	cpi	r24, 0x72	; 114
    a10c:	59 f4       	brne	.+22     	; 0xa124 <drawplayer2+0x94>
    a10e:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a112:	81 51       	subi	r24, 0x11	; 17
    a114:	88 30       	cpi	r24, 0x08	; 8
    a116:	30 f4       	brcc	.+12     	; 0xa124 <drawplayer2+0x94>
    a118:	40 e0       	ldi	r20, 0x00	; 0
    a11a:	65 e0       	ldi	r22, 0x05	; 5
    a11c:	77 e4       	ldi	r23, 0x47	; 71
    a11e:	8a e0       	ldi	r24, 0x0A	; 10
    a120:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,1);
    a124:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a128:	8c 36       	cpi	r24, 0x6C	; 108
    a12a:	59 f4       	brne	.+22     	; 0xa142 <drawplayer2+0xb2>
    a12c:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a130:	81 50       	subi	r24, 0x01	; 1
    a132:	88 30       	cpi	r24, 0x08	; 8
    a134:	30 f4       	brcc	.+12     	; 0xa142 <drawplayer2+0xb2>
    a136:	41 e0       	ldi	r20, 0x01	; 1
    a138:	65 e0       	ldi	r22, 0x05	; 5
    a13a:	77 e4       	ldi	r23, 0x47	; 71
    a13c:	8a e0       	ldi	r24, 0x0A	; 10
    a13e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,1);    
    a142:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a146:	8c 36       	cpi	r24, 0x6C	; 108
    a148:	59 f4       	brne	.+22     	; 0xa160 <drawplayer2+0xd0>
    a14a:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a14e:	89 50       	subi	r24, 0x09	; 9
    a150:	88 30       	cpi	r24, 0x08	; 8
    a152:	30 f4       	brcc	.+12     	; 0xa160 <drawplayer2+0xd0>
    a154:	41 e0       	ldi	r20, 0x01	; 1
    a156:	6f ef       	ldi	r22, 0xFF	; 255
    a158:	76 e4       	ldi	r23, 0x46	; 70
    a15a:	8a e0       	ldi	r24, 0x0A	; 10
    a15c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,1);  
    a160:	80 91 00 0a 	lds	r24, 0x0A00	; 0x800a00 <player2+0xe>
    a164:	8c 36       	cpi	r24, 0x6C	; 108
    a166:	59 f4       	brne	.+22     	; 0xa17e <drawplayer2+0xee>
    a168:	80 91 0d 0a 	lds	r24, 0x0A0D	; 0x800a0d <player2+0x1b>
    a16c:	81 51       	subi	r24, 0x11	; 17
    a16e:	88 30       	cpi	r24, 0x08	; 8
    a170:	30 f4       	brcc	.+12     	; 0xa17e <drawplayer2+0xee>
    a172:	41 e0       	ldi	r20, 0x01	; 1
    a174:	65 e0       	ldi	r22, 0x05	; 5
    a176:	77 e4       	ldi	r23, 0x47	; 71
    a178:	8a e0       	ldi	r24, 0x0A	; 10
    a17a:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a17e:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xa>
    a182:	88 23       	and	r24, r24
    a184:	31 f0       	breq	.+12     	; 0xa192 <drawplayer2+0x102>
{
   MapSprite2(10 ,run0 ,0);
    a186:	40 e0       	ldi	r20, 0x00	; 0
    a188:	65 e0       	ldi	r22, 0x05	; 5
    a18a:	77 e4       	ldi	r23, 0x47	; 71
    a18c:	8a e0       	ldi	r24, 0x0A	; 10
    a18e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
}
MoveSprite(10 ,player2.x -7 ,player2.y - 21  ,2 ,2);
    a192:	40 91 f4 09 	lds	r20, 0x09F4	; 0x8009f4 <player2+0x2>
    a196:	45 51       	subi	r20, 0x15	; 21
    a198:	60 91 f2 09 	lds	r22, 0x09F2	; 0x8009f2 <player2>
    a19c:	67 50       	subi	r22, 0x07	; 7
    a19e:	02 e0       	ldi	r16, 0x02	; 2
    a1a0:	22 e0       	ldi	r18, 0x02	; 2
    a1a2:	8a e0       	ldi	r24, 0x0A	; 10
    a1a4:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

//aniframe++;
//if ( aniframe > 20 ) aniframe = 0;     


}
    a1a8:	0f 91       	pop	r16
    a1aa:	08 95       	ret

0000a1ac <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    a1ac:	ef 92       	push	r14
    a1ae:	ff 92       	push	r15
    a1b0:	1f 93       	push	r17
    a1b2:	cf 93       	push	r28
    a1b4:	df 93       	push	r29
    a1b6:	cd b7       	in	r28, 0x3d	; 61
    a1b8:	de b7       	in	r29, 0x3e	; 62
    a1ba:	2a 97       	sbiw	r28, 0x0a	; 10
    a1bc:	0f b6       	in	r0, 0x3f	; 63
    a1be:	f8 94       	cli
    a1c0:	de bf       	out	0x3e, r29	; 62
    a1c2:	0f be       	out	0x3f, r0	; 63
    a1c4:	cd bf       	out	0x3d, r28	; 61
    a1c6:	18 2f       	mov	r17, r24
    a1c8:	fa 01       	movw	r30, r20
    a1ca:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    a1cc:	90 e2       	ldi	r25, 0x20	; 32
    a1ce:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    a1d0:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    a1d2:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    a1d4:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    a1d6:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    a1d8:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    a1da:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    a1dc:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    a1de:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    a1e0:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    a1e2:	4a e0       	ldi	r20, 0x0A	; 10
    a1e4:	be 01       	movw	r22, r28
    a1e6:	6f 5f       	subi	r22, 0xFF	; 255
    a1e8:	7f 4f       	sbci	r23, 0xFF	; 255
    a1ea:	cf 01       	movw	r24, r30
    a1ec:	0e 94 61 6a 	call	0xd4c2	; 0xd4c2 <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a1f0:	10 92 6f 0a 	sts	0x0A6F, r1	; 0x800a6f <lx+0x1>
    a1f4:	10 92 6e 0a 	sts	0x0A6E, r1	; 0x800a6e <lx>
    a1f8:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a1fc:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a200:	86 30       	cpi	r24, 0x06	; 6
    a202:	91 05       	cpc	r25, r1
    a204:	0c f0       	brlt	.+2      	; 0xa208 <printtileint+0x5c>
    a206:	f8 c0       	rjmp	.+496    	; 0xa3f8 <printtileint+0x24c>
    a208:	8e 15       	cp	r24, r14
    a20a:	9f 05       	cpc	r25, r15
    a20c:	0c f0       	brlt	.+2      	; 0xa210 <printtileint+0x64>
    a20e:	f4 c0       	rjmp	.+488    	; 0xa3f8 <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, nb ); 
    a210:	41 ea       	ldi	r20, 0xA1	; 161
    a212:	58 e7       	ldi	r21, 0x78	; 120
    a214:	60 e2       	ldi	r22, 0x20	; 32
    a216:	81 0f       	add	r24, r17
    a218:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,VRAM_TILES_V, n0 );  
    a21c:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a220:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a224:	e1 e0       	ldi	r30, 0x01	; 1
    a226:	f0 e0       	ldi	r31, 0x00	; 0
    a228:	ec 0f       	add	r30, r28
    a22a:	fd 1f       	adc	r31, r29
    a22c:	e8 0f       	add	r30, r24
    a22e:	f9 1f       	adc	r31, r25
    a230:	20 81       	ld	r18, Z
    a232:	20 33       	cpi	r18, 0x30	; 48
    a234:	31 f4       	brne	.+12     	; 0xa242 <printtileint+0x96>
    a236:	4e e9       	ldi	r20, 0x9E	; 158
    a238:	58 e7       	ldi	r21, 0x78	; 120
    a23a:	60 e2       	ldi	r22, 0x20	; 32
    a23c:	81 0f       	add	r24, r17
    a23e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,VRAM_TILES_V, n1 ); 
    a242:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a246:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a24a:	e1 e0       	ldi	r30, 0x01	; 1
    a24c:	f0 e0       	ldi	r31, 0x00	; 0
    a24e:	ec 0f       	add	r30, r28
    a250:	fd 1f       	adc	r31, r29
    a252:	e8 0f       	add	r30, r24
    a254:	f9 1f       	adc	r31, r25
    a256:	20 81       	ld	r18, Z
    a258:	21 33       	cpi	r18, 0x31	; 49
    a25a:	31 f4       	brne	.+12     	; 0xa268 <printtileint+0xbc>
    a25c:	4b e9       	ldi	r20, 0x9B	; 155
    a25e:	58 e7       	ldi	r21, 0x78	; 120
    a260:	60 e2       	ldi	r22, 0x20	; 32
    a262:	81 0f       	add	r24, r17
    a264:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,VRAM_TILES_V, n2 ); 
    a268:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a26c:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a270:	e1 e0       	ldi	r30, 0x01	; 1
    a272:	f0 e0       	ldi	r31, 0x00	; 0
    a274:	ec 0f       	add	r30, r28
    a276:	fd 1f       	adc	r31, r29
    a278:	e8 0f       	add	r30, r24
    a27a:	f9 1f       	adc	r31, r25
    a27c:	20 81       	ld	r18, Z
    a27e:	22 33       	cpi	r18, 0x32	; 50
    a280:	31 f4       	brne	.+12     	; 0xa28e <printtileint+0xe2>
    a282:	48 e9       	ldi	r20, 0x98	; 152
    a284:	58 e7       	ldi	r21, 0x78	; 120
    a286:	60 e2       	ldi	r22, 0x20	; 32
    a288:	81 0f       	add	r24, r17
    a28a:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,VRAM_TILES_V, n3 ); 
    a28e:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a292:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a296:	e1 e0       	ldi	r30, 0x01	; 1
    a298:	f0 e0       	ldi	r31, 0x00	; 0
    a29a:	ec 0f       	add	r30, r28
    a29c:	fd 1f       	adc	r31, r29
    a29e:	e8 0f       	add	r30, r24
    a2a0:	f9 1f       	adc	r31, r25
    a2a2:	20 81       	ld	r18, Z
    a2a4:	23 33       	cpi	r18, 0x33	; 51
    a2a6:	31 f4       	brne	.+12     	; 0xa2b4 <printtileint+0x108>
    a2a8:	45 e9       	ldi	r20, 0x95	; 149
    a2aa:	58 e7       	ldi	r21, 0x78	; 120
    a2ac:	60 e2       	ldi	r22, 0x20	; 32
    a2ae:	81 0f       	add	r24, r17
    a2b0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,VRAM_TILES_V, n4); 
    a2b4:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a2b8:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a2bc:	e1 e0       	ldi	r30, 0x01	; 1
    a2be:	f0 e0       	ldi	r31, 0x00	; 0
    a2c0:	ec 0f       	add	r30, r28
    a2c2:	fd 1f       	adc	r31, r29
    a2c4:	e8 0f       	add	r30, r24
    a2c6:	f9 1f       	adc	r31, r25
    a2c8:	20 81       	ld	r18, Z
    a2ca:	24 33       	cpi	r18, 0x34	; 52
    a2cc:	31 f4       	brne	.+12     	; 0xa2da <printtileint+0x12e>
    a2ce:	42 e9       	ldi	r20, 0x92	; 146
    a2d0:	58 e7       	ldi	r21, 0x78	; 120
    a2d2:	60 e2       	ldi	r22, 0x20	; 32
    a2d4:	81 0f       	add	r24, r17
    a2d6:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,VRAM_TILES_V, n5 ); 
    a2da:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a2de:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a2e2:	e1 e0       	ldi	r30, 0x01	; 1
    a2e4:	f0 e0       	ldi	r31, 0x00	; 0
    a2e6:	ec 0f       	add	r30, r28
    a2e8:	fd 1f       	adc	r31, r29
    a2ea:	e8 0f       	add	r30, r24
    a2ec:	f9 1f       	adc	r31, r25
    a2ee:	20 81       	ld	r18, Z
    a2f0:	25 33       	cpi	r18, 0x35	; 53
    a2f2:	31 f4       	brne	.+12     	; 0xa300 <printtileint+0x154>
    a2f4:	4f e8       	ldi	r20, 0x8F	; 143
    a2f6:	58 e7       	ldi	r21, 0x78	; 120
    a2f8:	60 e2       	ldi	r22, 0x20	; 32
    a2fa:	81 0f       	add	r24, r17
    a2fc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,VRAM_TILES_V, n6 ); 
    a300:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a304:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a308:	e1 e0       	ldi	r30, 0x01	; 1
    a30a:	f0 e0       	ldi	r31, 0x00	; 0
    a30c:	ec 0f       	add	r30, r28
    a30e:	fd 1f       	adc	r31, r29
    a310:	e8 0f       	add	r30, r24
    a312:	f9 1f       	adc	r31, r25
    a314:	20 81       	ld	r18, Z
    a316:	26 33       	cpi	r18, 0x36	; 54
    a318:	31 f4       	brne	.+12     	; 0xa326 <printtileint+0x17a>
    a31a:	4c e8       	ldi	r20, 0x8C	; 140
    a31c:	58 e7       	ldi	r21, 0x78	; 120
    a31e:	60 e2       	ldi	r22, 0x20	; 32
    a320:	81 0f       	add	r24, r17
    a322:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,VRAM_TILES_V, n7 ); 
    a326:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a32a:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a32e:	e1 e0       	ldi	r30, 0x01	; 1
    a330:	f0 e0       	ldi	r31, 0x00	; 0
    a332:	ec 0f       	add	r30, r28
    a334:	fd 1f       	adc	r31, r29
    a336:	e8 0f       	add	r30, r24
    a338:	f9 1f       	adc	r31, r25
    a33a:	20 81       	ld	r18, Z
    a33c:	27 33       	cpi	r18, 0x37	; 55
    a33e:	31 f4       	brne	.+12     	; 0xa34c <printtileint+0x1a0>
    a340:	49 e8       	ldi	r20, 0x89	; 137
    a342:	58 e7       	ldi	r21, 0x78	; 120
    a344:	60 e2       	ldi	r22, 0x20	; 32
    a346:	81 0f       	add	r24, r17
    a348:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,VRAM_TILES_V, n8 ); 
    a34c:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a350:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a354:	e1 e0       	ldi	r30, 0x01	; 1
    a356:	f0 e0       	ldi	r31, 0x00	; 0
    a358:	ec 0f       	add	r30, r28
    a35a:	fd 1f       	adc	r31, r29
    a35c:	e8 0f       	add	r30, r24
    a35e:	f9 1f       	adc	r31, r25
    a360:	20 81       	ld	r18, Z
    a362:	28 33       	cpi	r18, 0x38	; 56
    a364:	31 f4       	brne	.+12     	; 0xa372 <printtileint+0x1c6>
    a366:	46 e8       	ldi	r20, 0x86	; 134
    a368:	58 e7       	ldi	r21, 0x78	; 120
    a36a:	60 e2       	ldi	r22, 0x20	; 32
    a36c:	81 0f       	add	r24, r17
    a36e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,VRAM_TILES_V, n9 );
    a372:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a376:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a37a:	e1 e0       	ldi	r30, 0x01	; 1
    a37c:	f0 e0       	ldi	r31, 0x00	; 0
    a37e:	ec 0f       	add	r30, r28
    a380:	fd 1f       	adc	r31, r29
    a382:	e8 0f       	add	r30, r24
    a384:	f9 1f       	adc	r31, r25
    a386:	20 81       	ld	r18, Z
    a388:	29 33       	cpi	r18, 0x39	; 57
    a38a:	31 f4       	brne	.+12     	; 0xa398 <printtileint+0x1ec>
    a38c:	43 e8       	ldi	r20, 0x83	; 131
    a38e:	58 e7       	ldi	r21, 0x78	; 120
    a390:	60 e2       	ldi	r22, 0x20	; 32
    a392:	81 0f       	add	r24, r17
    a394:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,VRAM_TILES_V, nm );    
    a398:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a39c:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a3a0:	e1 e0       	ldi	r30, 0x01	; 1
    a3a2:	f0 e0       	ldi	r31, 0x00	; 0
    a3a4:	ec 0f       	add	r30, r28
    a3a6:	fd 1f       	adc	r31, r29
    a3a8:	e8 0f       	add	r30, r24
    a3aa:	f9 1f       	adc	r31, r25
    a3ac:	20 81       	ld	r18, Z
    a3ae:	2d 32       	cpi	r18, 0x2D	; 45
    a3b0:	31 f4       	brne	.+12     	; 0xa3be <printtileint+0x212>
    a3b2:	40 e8       	ldi	r20, 0x80	; 128
    a3b4:	58 e7       	ldi	r21, 0x78	; 120
    a3b6:	60 e2       	ldi	r22, 0x20	; 32
    a3b8:	81 0f       	add	r24, r17
    a3ba:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    a3be:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a3c2:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a3c6:	e1 e0       	ldi	r30, 0x01	; 1
    a3c8:	f0 e0       	ldi	r31, 0x00	; 0
    a3ca:	ec 0f       	add	r30, r28
    a3cc:	fd 1f       	adc	r31, r29
    a3ce:	e8 0f       	add	r30, r24
    a3d0:	f9 1f       	adc	r31, r25
    a3d2:	20 81       	ld	r18, Z
    a3d4:	20 32       	cpi	r18, 0x20	; 32
    a3d6:	31 f4       	brne	.+12     	; 0xa3e4 <printtileint+0x238>
    a3d8:	41 ea       	ldi	r20, 0xA1	; 161
    a3da:	58 e7       	ldi	r21, 0x78	; 120
    a3dc:	60 e2       	ldi	r22, 0x20	; 32
    a3de:	81 0f       	add	r24, r17
    a3e0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a3e4:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a3e8:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a3ec:	01 96       	adiw	r24, 0x01	; 1
    a3ee:	90 93 6f 0a 	sts	0x0A6F, r25	; 0x800a6f <lx+0x1>
    a3f2:	80 93 6e 0a 	sts	0x0A6E, r24	; 0x800a6e <lx>
    a3f6:	00 cf       	rjmp	.-512    	; 0xa1f8 <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    

};
    
}
    a3f8:	2a 96       	adiw	r28, 0x0a	; 10
    a3fa:	0f b6       	in	r0, 0x3f	; 63
    a3fc:	f8 94       	cli
    a3fe:	de bf       	out	0x3e, r29	; 62
    a400:	0f be       	out	0x3f, r0	; 63
    a402:	cd bf       	out	0x3d, r28	; 61
    a404:	df 91       	pop	r29
    a406:	cf 91       	pop	r28
    a408:	1f 91       	pop	r17
    a40a:	ff 90       	pop	r15
    a40c:	ef 90       	pop	r14
    a40e:	08 95       	ret

0000a410 <initlevel>:

void initlevel()
{
    a410:	ef e1       	ldi	r30, 0x1F	; 31
    a412:	fa e0       	ldi	r31, 0x0A	; 10
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    a414:	80 e0       	ldi	r24, 0x00	; 0
    a416:	90 e0       	ldi	r25, 0x00	; 0
    a418:	11 92       	st	Z+, r1
    a41a:	11 92       	st	Z+, r1
    a41c:	01 96       	adiw	r24, 0x01	; 1
    a41e:	89 31       	cpi	r24, 0x19	; 25
    a420:	91 05       	cpc	r25, r1
    a422:	d1 f7       	brne	.-12     	; 0xa418 <initlevel+0x8>
    a424:	e6 e2       	ldi	r30, 0x26	; 38
    a426:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    a428:	80 e0       	ldi	r24, 0x00	; 0
    a42a:	90 e0       	ldi	r25, 0x00	; 0
    a42c:	11 82       	std	Z+1, r1	; 0x01
    a42e:	10 82       	st	Z, r1
    a430:	12 82       	std	Z+2, r1	; 0x02
    a432:	13 82       	std	Z+3, r1	; 0x03
    a434:	01 96       	adiw	r24, 0x01	; 1
    a436:	34 96       	adiw	r30, 0x04	; 4
    a438:	8c 30       	cpi	r24, 0x0C	; 12
    a43a:	91 05       	cpc	r25, r1
    a43c:	b9 f7       	brne	.-18     	; 0xa42c <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    a43e:	10 92 6f 0a 	sts	0x0A6F, r1	; 0x800a6f <lx+0x1>
    a442:	10 92 6e 0a 	sts	0x0A6E, r1	; 0x800a6e <lx>
    a446:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a44a:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a44e:	80 97       	sbiw	r24, 0x20	; 32
    a450:	64 f5       	brge	.+88     	; 0xa4aa <initlevel+0x9a>
     		{
                for (  ly = 0; ly < 28; ly++ )
    a452:	10 92 80 09 	sts	0x0980, r1	; 0x800980 <ly+0x1>
    a456:	10 92 7f 09 	sts	0x097F, r1	; 0x80097f <ly>
    a45a:	60 91 7f 09 	lds	r22, 0x097F	; 0x80097f <ly>
    a45e:	70 91 80 09 	lds	r23, 0x0980	; 0x800980 <ly+0x1>
    a462:	6c 31       	cpi	r22, 0x1C	; 28
    a464:	71 05       	cpc	r23, r1
    a466:	bc f4       	brge	.+46     	; 0xa496 <initlevel+0x86>
                {
                    if(level == 5)
    a468:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    a46c:	85 30       	cpi	r24, 0x05	; 5
    a46e:	19 f4       	brne	.+6      	; 0xa476 <initlevel+0x66>
                    {
          	         DrawMap2(lx ,ly ,black);
    a470:	43 e1       	ldi	r20, 0x13	; 19
    a472:	59 e7       	ldi	r21, 0x79	; 121
    a474:	02 c0       	rjmp	.+4      	; 0xa47a <initlevel+0x6a>
                    }
                    else{
                      DrawMap2(lx ,ly ,blue);  
    a476:	45 e2       	ldi	r20, 0x25	; 37
    a478:	59 e7       	ldi	r21, 0x79	; 121
    a47a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a47e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    a482:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <ly>
    a486:	90 91 80 09 	lds	r25, 0x0980	; 0x800980 <ly+0x1>
    a48a:	01 96       	adiw	r24, 0x01	; 1
    a48c:	90 93 80 09 	sts	0x0980, r25	; 0x800980 <ly+0x1>
    a490:	80 93 7f 09 	sts	0x097F, r24	; 0x80097f <ly>
    a494:	e2 cf       	rjmp	.-60     	; 0xa45a <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    a496:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    a49a:	90 91 6f 0a 	lds	r25, 0x0A6F	; 0x800a6f <lx+0x1>
    a49e:	01 96       	adiw	r24, 0x01	; 1
    a4a0:	90 93 6f 0a 	sts	0x0A6F, r25	; 0x800a6f <lx+0x1>
    a4a4:	80 93 6e 0a 	sts	0x0A6E, r24	; 0x800a6e <lx>
    a4a8:	ce cf       	rjmp	.-100    	; 0xa446 <initlevel+0x36>
                    else{
                      DrawMap2(lx ,ly ,blue);  
                    }
                }
     		}
}
    a4aa:	08 95       	ret

0000a4ac <makeWater>:
    }

}
void makeWater(int x, int y, int z){
    //DrawMap2(x ,y  ,water0);
    waterxs[waterspwncnt] = x;
    a4ac:	e0 91 98 08 	lds	r30, 0x0898	; 0x800898 <waterspwncnt>
    a4b0:	f0 91 99 08 	lds	r31, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a4b4:	9f 01       	movw	r18, r30
    a4b6:	22 0f       	add	r18, r18
    a4b8:	33 1f       	adc	r19, r19
    a4ba:	d9 01       	movw	r26, r18
    a4bc:	a0 53       	subi	r26, 0x30	; 48
    a4be:	b6 4f       	sbci	r27, 0xF6	; 246
    a4c0:	8d 93       	st	X+, r24
    a4c2:	9c 93       	st	X, r25
    waterys[waterspwncnt] = y;
    a4c4:	d9 01       	movw	r26, r18
    a4c6:	ad 58       	subi	r26, 0x8D	; 141
    a4c8:	b5 4f       	sbci	r27, 0xF5	; 245
    a4ca:	6d 93       	st	X+, r22
    a4cc:	7c 93       	st	X, r23
    waterscrolls[waterspwncnt] = z;
    a4ce:	d9 01       	movw	r26, r18
    a4d0:	af 57       	subi	r26, 0x7F	; 127
    a4d2:	b6 4f       	sbci	r27, 0xF6	; 246
    a4d4:	4d 93       	st	X+, r20
    a4d6:	5c 93       	st	X, r21

    //waterxs[0] = x;
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
    a4d8:	31 96       	adiw	r30, 0x01	; 1
    a4da:	f0 93 99 08 	sts	0x0899, r31	; 0x800899 <waterspwncnt+0x1>
    a4de:	e0 93 98 08 	sts	0x0898, r30	; 0x800898 <waterspwncnt>
    a4e2:	08 95       	ret

0000a4e4 <updateWater>:
}
void updateWater(){
    a4e4:	8f 92       	push	r8
    a4e6:	9f 92       	push	r9
    a4e8:	af 92       	push	r10
    a4ea:	bf 92       	push	r11
    a4ec:	cf 92       	push	r12
    a4ee:	df 92       	push	r13
    a4f0:	ef 92       	push	r14
    a4f2:	ff 92       	push	r15
    a4f4:	0f 93       	push	r16
    a4f6:	1f 93       	push	r17
    a4f8:	cf 93       	push	r28
    a4fa:	df 93       	push	r29
    a4fc:	00 ed       	ldi	r16, 0xD0	; 208
    a4fe:	19 e0       	ldi	r17, 0x09	; 9
    a500:	83 e7       	ldi	r24, 0x73	; 115
    a502:	e8 2e       	mov	r14, r24
    a504:	8a e0       	ldi	r24, 0x0A	; 10
    a506:	f8 2e       	mov	r15, r24
    a508:	91 e8       	ldi	r25, 0x81	; 129
    a50a:	a9 2e       	mov	r10, r25
    a50c:	99 e0       	ldi	r25, 0x09	; 9
    a50e:	b9 2e       	mov	r11, r25
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a510:	c1 2c       	mov	r12, r1
    a512:	d1 2c       	mov	r13, r1
        int x = waterxs[i];
        int y = waterys[i];
        //if(destX - x >= 0)
        if(waterscrolls[i] <= scrolltiles - 15)
        {
            waterxs[i] = 40;
    a514:	28 e2       	ldi	r18, 0x28	; 40
    a516:	82 2e       	mov	r8, r18
    a518:	91 2c       	mov	r9, r1
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a51a:	80 91 98 08 	lds	r24, 0x0898	; 0x800898 <waterspwncnt>
    a51e:	90 91 99 08 	lds	r25, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a522:	c8 16       	cp	r12, r24
    a524:	d9 06       	cpc	r13, r25
    a526:	0c f0       	brlt	.+2      	; 0xa52a <updateWater+0x46>
    a528:	56 c0       	rjmp	.+172    	; 0xa5d6 <updateWater+0xf2>
    {
        int x = waterxs[i];
    a52a:	f8 01       	movw	r30, r16
    a52c:	c0 81       	ld	r28, Z
        int y = waterys[i];
    a52e:	f7 01       	movw	r30, r14
    a530:	d0 81       	ld	r29, Z
        //if(destX - x >= 0)
        if(waterscrolls[i] <= scrolltiles - 15)
    a532:	f5 01       	movw	r30, r10
    a534:	21 91       	ld	r18, Z+
    a536:	31 91       	ld	r19, Z+
    a538:	5f 01       	movw	r10, r30
    a53a:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    a53e:	90 e0       	ldi	r25, 0x00	; 0
    a540:	0e 97       	sbiw	r24, 0x0e	; 14
    a542:	28 17       	cp	r18, r24
    a544:	39 07       	cpc	r19, r25
    a546:	54 f4       	brge	.+20     	; 0xa55c <updateWater+0x78>
        {
            waterxs[i] = 40;
    a548:	f8 01       	movw	r30, r16
    a54a:	91 82       	std	Z+1, r9	; 0x01
    a54c:	80 82       	st	Z, r8
            waterys[i] = 40;
    a54e:	f7 01       	movw	r30, r14
    a550:	91 82       	std	Z+1, r9	; 0x01
    a552:	80 82       	st	Z, r8
            waterspwncnt = 0;
    a554:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    a558:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
        }
if(level == 5)
    a55c:	90 91 ba 09 	lds	r25, 0x09BA	; 0x8009ba <level>
    a560:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
    a564:	95 30       	cpi	r25, 0x05	; 5
    a566:	81 f4       	brne	.+32     	; 0xa588 <updateWater+0xa4>
{
    if (aniframe <= 10)
    a568:	8b 30       	cpi	r24, 0x0B	; 11
    a56a:	30 f4       	brcc	.+12     	; 0xa578 <updateWater+0x94>
    {
        DrawMap2(x ,y,fire1);
    a56c:	4f e1       	ldi	r20, 0x1F	; 31
    a56e:	59 e7       	ldi	r21, 0x79	; 121
    a570:	6d 2f       	mov	r22, r29
    a572:	8c 2f       	mov	r24, r28
    a574:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    } 
            if (aniframe > 7 && aniframe <= 14 )   
    a578:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
    a57c:	88 50       	subi	r24, 0x08	; 8
    a57e:	87 30       	cpi	r24, 0x07	; 7
    a580:	08 f5       	brcc	.+66     	; 0xa5c4 <updateWater+0xe0>
    {
        DrawMap2(x ,y,fire2);
    a582:	49 e1       	ldi	r20, 0x19	; 25
    a584:	59 e7       	ldi	r21, 0x79	; 121
    a586:	1a c0       	rjmp	.+52     	; 0xa5bc <updateWater+0xd8>
    } 
}
else{
    if (aniframe <= 7)
    a588:	88 30       	cpi	r24, 0x08	; 8
    a58a:	30 f4       	brcc	.+12     	; 0xa598 <updateWater+0xb4>
    {
        DrawMap2(x ,y,water3);
    a58c:	40 eb       	ldi	r20, 0xB0	; 176
    a58e:	58 e7       	ldi	r21, 0x78	; 120
    a590:	6d 2f       	mov	r22, r29
    a592:	8c 2f       	mov	r24, r28
    a594:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    } 
            if (aniframe > 7 && aniframe <= 14 )   
    a598:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
    a59c:	88 50       	subi	r24, 0x08	; 8
    a59e:	87 30       	cpi	r24, 0x07	; 7
    a5a0:	30 f4       	brcc	.+12     	; 0xa5ae <updateWater+0xca>
    {
        DrawMap2(x ,y,water1);
    a5a2:	4c eb       	ldi	r20, 0xBC	; 188
    a5a4:	58 e7       	ldi	r21, 0x78	; 120
    a5a6:	6d 2f       	mov	r22, r29
    a5a8:	8c 2f       	mov	r24, r28
    a5aa:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    } 
    if (aniframe > 14 && aniframe <= 20)
    a5ae:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
    a5b2:	8f 50       	subi	r24, 0x0F	; 15
    a5b4:	86 30       	cpi	r24, 0x06	; 6
    a5b6:	30 f4       	brcc	.+12     	; 0xa5c4 <updateWater+0xe0>
    {
        DrawMap2(x ,y,water2);
    a5b8:	46 eb       	ldi	r20, 0xB6	; 182
    a5ba:	58 e7       	ldi	r21, 0x78	; 120
    a5bc:	6d 2f       	mov	r22, r29
    a5be:	8c 2f       	mov	r24, r28
    a5c0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a5c4:	ff ef       	ldi	r31, 0xFF	; 255
    a5c6:	cf 1a       	sub	r12, r31
    a5c8:	df 0a       	sbc	r13, r31
    a5ca:	0e 5f       	subi	r16, 0xFE	; 254
    a5cc:	1f 4f       	sbci	r17, 0xFF	; 255
    a5ce:	82 e0       	ldi	r24, 0x02	; 2
    a5d0:	e8 0e       	add	r14, r24
    a5d2:	f1 1c       	adc	r15, r1
    a5d4:	a2 cf       	rjmp	.-188    	; 0xa51a <updateWater+0x36>
//if (aniframe > 15 && aniframe <= 20){
 //   DrawMap2(x ,y,water3);
//}
    }
    
}
    a5d6:	df 91       	pop	r29
    a5d8:	cf 91       	pop	r28
    a5da:	1f 91       	pop	r17
    a5dc:	0f 91       	pop	r16
    a5de:	ff 90       	pop	r15
    a5e0:	ef 90       	pop	r14
    a5e2:	df 90       	pop	r13
    a5e4:	cf 90       	pop	r12
    a5e6:	bf 90       	pop	r11
    a5e8:	af 90       	pop	r10
    a5ea:	9f 90       	pop	r9
    a5ec:	8f 90       	pop	r8
    a5ee:	08 95       	ret

0000a5f0 <makeBanana2>:
    destX=0;
}
}

void makeBanana2(int x, int y,int z)
{
    a5f0:	ef 92       	push	r14
    a5f2:	ff 92       	push	r15
    a5f4:	0f 93       	push	r16
    a5f6:	1f 93       	push	r17
    a5f8:	cf 93       	push	r28
    a5fa:	df 93       	push	r29
    a5fc:	8a 01       	movw	r16, r20
	int lx;
	int ly;
	lx = x + Levelx;
    a5fe:	20 91 6c 0a 	lds	r18, 0x0A6C	; 0x800a6c <Levelx>
    a602:	82 0f       	add	r24, r18
    a604:	91 1d       	adc	r25, r1
	ly = y;
	lx = lx >> 4;
	ly = ly >> 4;  
    a606:	7b 01       	movw	r14, r22
    a608:	54 e0       	ldi	r21, 0x04	; 4
    a60a:	f5 94       	asr	r15
    a60c:	e7 94       	ror	r14
    a60e:	5a 95       	dec	r21
    a610:	e1 f7       	brne	.-8      	; 0xa60a <makeBanana2+0x1a>
	lx = lx * 2 + destX;
    a612:	64 e0       	ldi	r22, 0x04	; 4
    a614:	95 95       	asr	r25
    a616:	87 95       	ror	r24
    a618:	6a 95       	dec	r22
    a61a:	e1 f7       	brne	.-8      	; 0xa614 <makeBanana2+0x24>
    a61c:	88 0f       	add	r24, r24
    a61e:	99 1f       	adc	r25, r25
    a620:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <destX>
    a624:	82 0f       	add	r24, r18
    a626:	91 1d       	adc	r25, r1
	if (lx >= 32 ) lx = lx - 32;
    a628:	80 32       	cpi	r24, 0x20	; 32
    a62a:	91 05       	cpc	r25, r1
    a62c:	0c f0       	brlt	.+2      	; 0xa630 <makeBanana2+0x40>
    a62e:	80 97       	sbiw	r24, 0x20	; 32
    lx = lx - 2;
    a630:	ec 01       	movw	r28, r24
    a632:	22 97       	sbiw	r28, 0x02	; 2
    ly = (ly * 2) - 2;
    a634:	81 e0       	ldi	r24, 0x01	; 1
    a636:	e8 1a       	sub	r14, r24
    a638:	f1 08       	sbc	r15, r1
    a63a:	ee 0c       	add	r14, r14
    a63c:	ff 1c       	adc	r15, r15
	DrawMap2(  lx ,  ly  ,banana );
    a63e:	4c e2       	ldi	r20, 0x2C	; 44
    a640:	59 e7       	ldi	r21, 0x79	; 121
    a642:	6e 2d       	mov	r22, r14
    a644:	8c 2f       	mov	r24, r28
    a646:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    bananax = lx;
    a64a:	d0 93 1c 0a 	sts	0x0A1C, r29	; 0x800a1c <bananax+0x1>
    a64e:	c0 93 1b 0a 	sts	0x0A1B, r28	; 0x800a1b <bananax>
	bananay = ly;
    a652:	f0 92 a1 09 	sts	0x09A1, r15	; 0x8009a1 <bananay+0x1>
    a656:	e0 92 a0 09 	sts	0x09A0, r14	; 0x8009a0 <bananay>
    //UZEMHEX='\n';
	bananaxs[banspwncnt] = bananax;
    a65a:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a65e:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a662:	c9 01       	movw	r24, r18
    a664:	88 0f       	add	r24, r24
    a666:	99 1f       	adc	r25, r25
    a668:	fc 01       	movw	r30, r24
    a66a:	ec 55       	subi	r30, 0x5C	; 92
    a66c:	f6 4f       	sbci	r31, 0xF6	; 246
    a66e:	d1 83       	std	Z+1, r29	; 0x01
    a670:	c0 83       	st	Z, r28
	bananays[banspwncnt] = bananay;
    a672:	fc 01       	movw	r30, r24
    a674:	e4 54       	subi	r30, 0x44	; 68
    a676:	f6 4f       	sbci	r31, 0xF6	; 246
    a678:	f1 82       	std	Z+1, r15	; 0x01
    a67a:	e0 82       	st	Z, r14
    bananascrolls[banspwncnt] = z;
    a67c:	fc 01       	movw	r30, r24
    a67e:	ec 5a       	subi	r30, 0xAC	; 172
    a680:	f5 4f       	sbci	r31, 0xF5	; 245
    a682:	11 83       	std	Z+1, r17	; 0x01
    a684:	00 83       	st	Z, r16
    //UZEMHEX='\n';
	banspwncnt = banspwncnt + 1;
    a686:	2f 5f       	subi	r18, 0xFF	; 255
    a688:	3f 4f       	sbci	r19, 0xFF	; 255
    a68a:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a68e:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
    a692:	df 91       	pop	r29
    a694:	cf 91       	pop	r28
    a696:	1f 91       	pop	r17
    a698:	0f 91       	pop	r16
    a69a:	ff 90       	pop	r15
    a69c:	ef 90       	pop	r14
    a69e:	08 95       	ret

0000a6a0 <checkBanana>:
int checkBanana(int x,int y,int z)
{
    a6a0:	4f 92       	push	r4
    a6a2:	5f 92       	push	r5
    a6a4:	6f 92       	push	r6
    a6a6:	7f 92       	push	r7
    a6a8:	8f 92       	push	r8
    a6aa:	9f 92       	push	r9
    a6ac:	af 92       	push	r10
    a6ae:	bf 92       	push	r11
    a6b0:	cf 92       	push	r12
    a6b2:	df 92       	push	r13
    a6b4:	ef 92       	push	r14
    a6b6:	ff 92       	push	r15
    a6b8:	0f 93       	push	r16
    a6ba:	1f 93       	push	r17
    a6bc:	cf 93       	push	r28
    a6be:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    a6c0:	20 91 6c 0a 	lds	r18, 0x0A6C	; 0x800a6c <Levelx>
    a6c4:	82 0f       	add	r24, r18
    a6c6:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    a6c8:	5b 01       	movw	r10, r22
    a6ca:	54 e0       	ldi	r21, 0x04	; 4
    a6cc:	b5 94       	asr	r11
    a6ce:	a7 94       	ror	r10
    a6d0:	5a 95       	dec	r21
    a6d2:	e1 f7       	brne	.-8      	; 0xa6cc <checkBanana+0x2c>
lx = lx * 2 + destX;
    a6d4:	ec 01       	movw	r28, r24
    a6d6:	64 e0       	ldi	r22, 0x04	; 4
    a6d8:	d5 95       	asr	r29
    a6da:	c7 95       	ror	r28
    a6dc:	6a 95       	dec	r22
    a6de:	e1 f7       	brne	.-8      	; 0xa6d8 <checkBanana+0x38>
    a6e0:	cc 0f       	add	r28, r28
    a6e2:	dd 1f       	adc	r29, r29
    a6e4:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    a6e8:	c8 0f       	add	r28, r24
    a6ea:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    a6ec:	c0 32       	cpi	r28, 0x20	; 32
    a6ee:	d1 05       	cpc	r29, r1
    a6f0:	0c f0       	brlt	.+2      	; 0xa6f4 <checkBanana+0x54>
    a6f2:	a0 97       	sbiw	r28, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
    a6f4:	41 e0       	ldi	r20, 0x01	; 1
    a6f6:	a4 1a       	sub	r10, r20
    a6f8:	b1 08       	sbc	r11, r1
    a6fa:	aa 0c       	add	r10, r10
    a6fc:	bb 1c       	adc	r11, r11
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
{
    if(bananascrolls[i] <= scrolltiles - 10)
    a6fe:	60 90 8f 0a 	lds	r6, 0x0A8F	; 0x800a8f <scrolltiles>
    a702:	71 2c       	mov	r7, r1
    a704:	59 e0       	ldi	r21, 0x09	; 9
    a706:	65 1a       	sub	r6, r21
    a708:	71 08       	sbc	r7, r1
    a70a:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a70e:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a712:	4c eb       	ldi	r20, 0xBC	; 188
    a714:	44 2e       	mov	r4, r20
    a716:	49 e0       	ldi	r20, 0x09	; 9
    a718:	54 2e       	mov	r5, r20
    a71a:	a4 ea       	ldi	r26, 0xA4	; 164
    a71c:	b9 e0       	ldi	r27, 0x09	; 9
    a71e:	84 e5       	ldi	r24, 0x54	; 84
    a720:	9a e0       	ldi	r25, 0x0A	; 10
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a722:	00 e0       	ldi	r16, 0x00	; 0
    a724:	10 e0       	ldi	r17, 0x00	; 0
    a726:	02 17       	cp	r16, r18
    a728:	13 07       	cpc	r17, r19
    a72a:	0c f0       	brlt	.+2      	; 0xa72e <checkBanana+0x8e>
    a72c:	91 c0       	rjmp	.+290    	; 0xa850 <checkBanana+0x1b0>
{
    if(bananascrolls[i] <= scrolltiles - 10)
    a72e:	fc 01       	movw	r30, r24
    a730:	40 81       	ld	r20, Z
    a732:	51 81       	ldd	r21, Z+1	; 0x01
    a734:	46 15       	cp	r20, r6
    a736:	57 05       	cpc	r21, r7
    a738:	74 f5       	brge	.+92     	; 0xa796 <checkBanana+0xf6>
    {
        bananaxs[i] = 0;
    a73a:	11 96       	adiw	r26, 0x01	; 1
    a73c:	1c 92       	st	X, r1
    a73e:	1e 92       	st	-X, r1
        bananays[i] = 0;
    a740:	f2 01       	movw	r30, r4
    a742:	11 82       	std	Z+1, r1	; 0x01
    a744:	10 82       	st	Z, r1
        bananascrolls[i] = 0;
    a746:	fc 01       	movw	r30, r24
    a748:	11 82       	std	Z+1, r1	; 0x01
    a74a:	10 82       	st	Z, r1
    a74c:	a9 01       	movw	r20, r18
    a74e:	41 50       	subi	r20, 0x01	; 1
    a750:	51 09       	sbc	r21, r1
    a752:	6a 01       	movw	r12, r20
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    a754:	22 30       	cpi	r18, 0x02	; 2
    a756:	31 05       	cpc	r19, r1
    a758:	14 f4       	brge	.+4      	; 0xa75e <checkBanana+0xbe>
            bananaxs[j] = bananaxs[j + 1];
            bananays[j] = bananays[j + 1];
            bananascrolls[j] = bananascrolls[j+1];
            }
    }
    banspwncnt = banspwncnt - 1;
    a75a:	96 01       	movw	r18, r12
    a75c:	71 c0       	rjmp	.+226    	; 0xa840 <checkBanana+0x1a0>
    a75e:	7c 01       	movw	r14, r24
    a760:	b2 01       	movw	r22, r4
    a762:	ad 01       	movw	r20, r26
    a764:	98 01       	movw	r18, r16
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    a766:	2c 15       	cp	r18, r12
    a768:	3d 05       	cpc	r19, r13
    a76a:	bc f7       	brge	.-18     	; 0xa75a <checkBanana+0xba>
            {
            bananaxs[j] = bananaxs[j + 1];
    a76c:	2f 5f       	subi	r18, 0xFF	; 255
    a76e:	3f 4f       	sbci	r19, 0xFF	; 255
    a770:	fa 01       	movw	r30, r20
    a772:	82 80       	ldd	r8, Z+2	; 0x02
    a774:	93 80       	ldd	r9, Z+3	; 0x03
    a776:	81 92       	st	Z+, r8
    a778:	91 92       	st	Z+, r9
    a77a:	af 01       	movw	r20, r30
            bananays[j] = bananays[j + 1];
    a77c:	fb 01       	movw	r30, r22
    a77e:	82 80       	ldd	r8, Z+2	; 0x02
    a780:	93 80       	ldd	r9, Z+3	; 0x03
    a782:	81 92       	st	Z+, r8
    a784:	91 92       	st	Z+, r9
    a786:	bf 01       	movw	r22, r30
            bananascrolls[j] = bananascrolls[j+1];
    a788:	f7 01       	movw	r30, r14
    a78a:	82 80       	ldd	r8, Z+2	; 0x02
    a78c:	93 80       	ldd	r9, Z+3	; 0x03
    a78e:	81 92       	st	Z+, r8
    a790:	91 92       	st	Z+, r9
    a792:	7f 01       	movw	r14, r30
    a794:	e8 cf       	rjmp	.-48     	; 0xa766 <checkBanana+0xc6>
            }
    }
    banspwncnt = banspwncnt - 1;
    }
	else if(bananaxs[i] == lx && bananays[i] == ly)
    a796:	4d 91       	ld	r20, X+
    a798:	5c 91       	ld	r21, X
    a79a:	11 97       	sbiw	r26, 0x01	; 1
    a79c:	c4 17       	cp	r28, r20
    a79e:	d5 07       	cpc	r29, r21
    a7a0:	09 f0       	breq	.+2      	; 0xa7a4 <checkBanana+0x104>
    a7a2:	4e c0       	rjmp	.+156    	; 0xa840 <checkBanana+0x1a0>
    a7a4:	f2 01       	movw	r30, r4
    a7a6:	40 81       	ld	r20, Z
    a7a8:	51 81       	ldd	r21, Z+1	; 0x01
    a7aa:	a4 16       	cp	r10, r20
    a7ac:	b5 06       	cpc	r11, r21
    a7ae:	09 f0       	breq	.+2      	; 0xa7b2 <checkBanana+0x112>
    a7b0:	47 c0       	rjmp	.+142    	; 0xa840 <checkBanana+0x1a0>
    a7b2:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a7b6:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
	{ 
        DrawMap2(  lx    ,  ly,bigblue0 ); 
    a7ba:	44 e9       	ldi	r20, 0x94	; 148
    a7bc:	59 e7       	ldi	r21, 0x79	; 121
    a7be:	6a 2d       	mov	r22, r10
    a7c0:	8c 2f       	mov	r24, r28
    a7c2:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
	    DrawMap2(  lx    ,  ly + 1,banana2 );
    a7c6:	61 e0       	ldi	r22, 0x01	; 1
    a7c8:	6a 0d       	add	r22, r10
    a7ca:	48 e2       	ldi	r20, 0x28	; 40
    a7cc:	59 e7       	ldi	r21, 0x79	; 121
    a7ce:	8c 2f       	mov	r24, r28
    a7d0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        bananaxs[i] = 0;
    a7d4:	f8 01       	movw	r30, r16
    a7d6:	ee 0f       	add	r30, r30
    a7d8:	ff 1f       	adc	r31, r31
    a7da:	df 01       	movw	r26, r30
    a7dc:	ac 55       	subi	r26, 0x5C	; 92
    a7de:	b6 4f       	sbci	r27, 0xF6	; 246
    a7e0:	11 96       	adiw	r26, 0x01	; 1
    a7e2:	1c 92       	st	X, r1
    a7e4:	1e 92       	st	-X, r1
        bananays[i] = 0;
    a7e6:	ef 01       	movw	r28, r30
    a7e8:	c4 54       	subi	r28, 0x44	; 68
    a7ea:	d6 4f       	sbci	r29, 0xF6	; 246
    a7ec:	19 82       	std	Y+1, r1	; 0x01
    a7ee:	18 82       	st	Y, r1
        bananascrolls[i] = 0;
    a7f0:	ec 5a       	subi	r30, 0xAC	; 172
    a7f2:	f5 4f       	sbci	r31, 0xF5	; 245
    a7f4:	11 82       	std	Z+1, r1	; 0x01
    a7f6:	10 82       	st	Z, r1
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    a7f8:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a7fc:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a800:	c9 01       	movw	r24, r18
    a802:	01 97       	sbiw	r24, 0x01	; 1
    a804:	22 30       	cpi	r18, 0x02	; 2
    a806:	31 05       	cpc	r19, r1
    a808:	3c f4       	brge	.+14     	; 0xa818 <checkBanana+0x178>
    }
   // else{
        //bananaxs[i] = 900;
        //bananays[i] = 900;
    //}
	banspwncnt = banspwncnt - 1;
    a80a:	90 93 9b 08 	sts	0x089B, r25	; 0x80089b <banspwncnt+0x1>
    a80e:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <banspwncnt>
	return 1;
    a812:	81 e0       	ldi	r24, 0x01	; 1
    a814:	90 e0       	ldi	r25, 0x00	; 0
    a816:	22 c0       	rjmp	.+68     	; 0xa85c <checkBanana+0x1bc>
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    a818:	08 17       	cp	r16, r24
    a81a:	19 07       	cpc	r17, r25
    a81c:	b4 f7       	brge	.-20     	; 0xa80a <checkBanana+0x16a>
            {
            bananaxs[j] = bananaxs[j + 1];
    a81e:	0f 5f       	subi	r16, 0xFF	; 255
    a820:	1f 4f       	sbci	r17, 0xFF	; 255
    a822:	12 96       	adiw	r26, 0x02	; 2
    a824:	2d 91       	ld	r18, X+
    a826:	3c 91       	ld	r19, X
    a828:	13 97       	sbiw	r26, 0x03	; 3
    a82a:	2d 93       	st	X+, r18
    a82c:	3d 93       	st	X+, r19
            bananays[j] = bananays[j + 1];
    a82e:	2a 81       	ldd	r18, Y+2	; 0x02
    a830:	3b 81       	ldd	r19, Y+3	; 0x03
    a832:	29 93       	st	Y+, r18
    a834:	39 93       	st	Y+, r19
            bananascrolls[j] = bananascrolls[j+1];
    a836:	22 81       	ldd	r18, Z+2	; 0x02
    a838:	33 81       	ldd	r19, Z+3	; 0x03
    a83a:	21 93       	st	Z+, r18
    a83c:	31 93       	st	Z+, r19
    a83e:	ec cf       	rjmp	.-40     	; 0xa818 <checkBanana+0x178>
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    a840:	0f 5f       	subi	r16, 0xFF	; 255
    a842:	1f 4f       	sbci	r17, 0xFF	; 255
    a844:	f2 e0       	ldi	r31, 0x02	; 2
    a846:	4f 0e       	add	r4, r31
    a848:	51 1c       	adc	r5, r1
    a84a:	12 96       	adiw	r26, 0x02	; 2
    a84c:	02 96       	adiw	r24, 0x02	; 2
    a84e:	6b cf       	rjmp	.-298    	; 0xa726 <checkBanana+0x86>
    a850:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a854:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
	banspwncnt = banspwncnt - 1;
	return 1;
	}
}

return 0;
    a858:	80 e0       	ldi	r24, 0x00	; 0
    a85a:	90 e0       	ldi	r25, 0x00	; 0
	
}
    a85c:	df 91       	pop	r29
    a85e:	cf 91       	pop	r28
    a860:	1f 91       	pop	r17
    a862:	0f 91       	pop	r16
    a864:	ff 90       	pop	r15
    a866:	ef 90       	pop	r14
    a868:	df 90       	pop	r13
    a86a:	cf 90       	pop	r12
    a86c:	bf 90       	pop	r11
    a86e:	af 90       	pop	r10
    a870:	9f 90       	pop	r9
    a872:	8f 90       	pop	r8
    a874:	7f 90       	pop	r7
    a876:	6f 90       	pop	r6
    a878:	5f 90       	pop	r5
    a87a:	4f 90       	pop	r4
    a87c:	08 95       	ret

0000a87e <printheadline>:
if (bl > 0 && bl <= 20 ) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    a87e:	4a e7       	ldi	r20, 0x7A	; 122
    a880:	58 e7       	ldi	r21, 0x78	; 120
    a882:	60 e2       	ldi	r22, 0x20	; 32
    a884:	80 e0       	ldi	r24, 0x00	; 0
    a886:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 4 ,0,score,4);
    a88a:	40 91 a2 09 	lds	r20, 0x09A2	; 0x8009a2 <score>
    a88e:	50 91 a3 09 	lds	r21, 0x09A3	; 0x8009a3 <score+0x1>
    a892:	24 e0       	ldi	r18, 0x04	; 4
    a894:	30 e0       	ldi	r19, 0x00	; 0
    a896:	60 e0       	ldi	r22, 0x00	; 0
    a898:	70 e0       	ldi	r23, 0x00	; 0
    a89a:	84 e0       	ldi	r24, 0x04	; 4
    a89c:	90 e0       	ldi	r25, 0x00	; 0
    a89e:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    a8a2:	4d e5       	ldi	r20, 0x5D	; 93
    a8a4:	58 e7       	ldi	r21, 0x78	; 120
    a8a6:	60 e2       	ldi	r22, 0x20	; 32
    a8a8:	8b e0       	ldi	r24, 0x0B	; 11
    a8aa:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 14 ,0,lives,1);  
    a8ae:	40 91 0e 0a 	lds	r20, 0x0A0E	; 0x800a0e <lives>
    a8b2:	50 e0       	ldi	r21, 0x00	; 0
    a8b4:	21 e0       	ldi	r18, 0x01	; 1
    a8b6:	30 e0       	ldi	r19, 0x00	; 0
    a8b8:	60 e0       	ldi	r22, 0x00	; 0
    a8ba:	70 e0       	ldi	r23, 0x00	; 0
    a8bc:	8e e0       	ldi	r24, 0x0E	; 14
    a8be:	90 e0       	ldi	r25, 0x00	; 0
    a8c0:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
DrawMap2(16,VRAM_TILES_V, level0 ); 
    a8c4:	4e e6       	ldi	r20, 0x6E	; 110
    a8c6:	58 e7       	ldi	r21, 0x78	; 120
    a8c8:	60 e2       	ldi	r22, 0x20	; 32
    a8ca:	80 e1       	ldi	r24, 0x10	; 16
    a8cc:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 20 ,0, level,1);  
    a8d0:	40 91 ba 09 	lds	r20, 0x09BA	; 0x8009ba <level>
    a8d4:	50 e0       	ldi	r21, 0x00	; 0
    a8d6:	21 e0       	ldi	r18, 0x01	; 1
    a8d8:	30 e0       	ldi	r19, 0x00	; 0
    a8da:	60 e0       	ldi	r22, 0x00	; 0
    a8dc:	70 e0       	ldi	r23, 0x00	; 0
    a8de:	84 e1       	ldi	r24, 0x14	; 20
    a8e0:	90 e0       	ldi	r25, 0x00	; 0
    a8e2:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
DrawMap2(23,VRAM_TILES_V, time0 );
    a8e6:	48 e5       	ldi	r20, 0x58	; 88
    a8e8:	58 e7       	ldi	r21, 0x78	; 120
    a8ea:	60 e2       	ldi	r22, 0x20	; 32
    a8ec:	87 e1       	ldi	r24, 0x17	; 23
    a8ee:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    a8f2:	40 91 69 0a 	lds	r20, 0x0A69	; 0x800a69 <leveltime>
    a8f6:	50 e0       	ldi	r21, 0x00	; 0
    a8f8:	22 e0       	ldi	r18, 0x02	; 2
    a8fa:	30 e0       	ldi	r19, 0x00	; 0
    a8fc:	60 e0       	ldi	r22, 0x00	; 0
    a8fe:	70 e0       	ldi	r23, 0x00	; 0
    a900:	8a e1       	ldi	r24, 0x1A	; 26
    a902:	90 e0       	ldi	r25, 0x00	; 0
    a904:	0c 94 d6 50 	jmp	0xa1ac	; 0xa1ac <printtileint>

0000a908 <printheadlineintro>:
}
void printheadlineintro()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    a908:	4a e7       	ldi	r20, 0x7A	; 122
    a90a:	58 e7       	ldi	r21, 0x78	; 120
    a90c:	60 e2       	ldi	r22, 0x20	; 32
    a90e:	80 e0       	ldi	r24, 0x00	; 0
    a910:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
printtileint( 4 ,0,score,4);
    a914:	40 91 a2 09 	lds	r20, 0x09A2	; 0x8009a2 <score>
    a918:	50 91 a3 09 	lds	r21, 0x09A3	; 0x8009a3 <score+0x1>
    a91c:	24 e0       	ldi	r18, 0x04	; 4
    a91e:	30 e0       	ldi	r19, 0x00	; 0
    a920:	60 e0       	ldi	r22, 0x00	; 0
    a922:	70 e0       	ldi	r23, 0x00	; 0
    a924:	84 e0       	ldi	r24, 0x04	; 4
    a926:	90 e0       	ldi	r25, 0x00	; 0
    a928:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    a92c:	4d e5       	ldi	r20, 0x5D	; 93
    a92e:	58 e7       	ldi	r21, 0x78	; 120
    a930:	60 e2       	ldi	r22, 0x20	; 32
    a932:	8b e0       	ldi	r24, 0x0B	; 11
    a934:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>

DrawMap2(16,VRAM_TILES_V, level0 ); 
    a938:	4e e6       	ldi	r20, 0x6E	; 110
    a93a:	58 e7       	ldi	r21, 0x78	; 120
    a93c:	60 e2       	ldi	r22, 0x20	; 32
    a93e:	80 e1       	ldi	r24, 0x10	; 16
    a940:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
  
DrawMap2(23,VRAM_TILES_V, time0 );
    a944:	48 e5       	ldi	r20, 0x58	; 88
    a946:	58 e7       	ldi	r21, 0x78	; 120
    a948:	60 e2       	ldi	r22, 0x20	; 32
    a94a:	87 e1       	ldi	r24, 0x17	; 23
    a94c:	0c 94 c2 4e 	jmp	0x9d84	; 0x9d84 <DrawMap>

0000a950 <updatepoints>:

}
void updatepoints()
{
if (introplaying) return;
    a950:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    a954:	81 11       	cpse	r24, r1
    a956:	0c c0       	rjmp	.+24     	; 0xa970 <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    a958:	40 91 a2 09 	lds	r20, 0x09A2	; 0x8009a2 <score>
    a95c:	50 91 a3 09 	lds	r21, 0x09A3	; 0x8009a3 <score+0x1>
    a960:	24 e0       	ldi	r18, 0x04	; 4
    a962:	30 e0       	ldi	r19, 0x00	; 0
    a964:	60 e0       	ldi	r22, 0x00	; 0
    a966:	70 e0       	ldi	r23, 0x00	; 0
    a968:	84 e0       	ldi	r24, 0x04	; 4
    a96a:	90 e0       	ldi	r25, 0x00	; 0
    a96c:	0c 94 d6 50 	jmp	0xa1ac	; 0xa1ac <printtileint>
    a970:	08 95       	ret

0000a972 <checkcollide>:

return 0;
	
}
int checkcollide(int x, int y,int z)
{
    a972:	8f 92       	push	r8
    a974:	9f 92       	push	r9
    a976:	af 92       	push	r10
    a978:	bf 92       	push	r11
    a97a:	cf 92       	push	r12
    a97c:	df 92       	push	r13
    a97e:	ef 92       	push	r14
    a980:	ff 92       	push	r15
    a982:	0f 93       	push	r16
    a984:	1f 93       	push	r17
    a986:	cf 93       	push	r28
    a988:	df 93       	push	r29
    a98a:	6c 01       	movw	r12, r24
    a98c:	5b 01       	movw	r10, r22
    a98e:	4a 01       	movw	r8, r20
int lx;
int ly;
char bl;
lx = x + Levelx;
    a990:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    a994:	86 01       	movw	r16, r12
    a996:	08 0f       	add	r16, r24
    a998:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    a99a:	84 e0       	ldi	r24, 0x04	; 4
    a99c:	15 95       	asr	r17
    a99e:	07 95       	ror	r16
    a9a0:	8a 95       	dec	r24
    a9a2:	e1 f7       	brne	.-8      	; 0xa99c <checkcollide+0x2a>
ly = ly >> 4;  
    a9a4:	7b 01       	movw	r14, r22
    a9a6:	94 e0       	ldi	r25, 0x04	; 4
    a9a8:	f5 94       	asr	r15
    a9aa:	e7 94       	ror	r14
    a9ac:	9a 95       	dec	r25
    a9ae:	e1 f7       	brne	.-8      	; 0xa9a8 <checkcollide+0x36>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a9b0:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    a9b4:	81 11       	cpse	r24, r1
    a9b6:	0f c0       	rjmp	.+30     	; 0xa9d6 <checkcollide+0x64>
    a9b8:	9a e5       	ldi	r25, 0x5A	; 90
    a9ba:	9e 9d       	mul	r25, r14
    a9bc:	f0 01       	movw	r30, r0
    a9be:	9f 9d       	mul	r25, r15
    a9c0:	f0 0d       	add	r31, r0
    a9c2:	11 24       	eor	r1, r1
    a9c4:	e0 0f       	add	r30, r16
    a9c6:	f1 1f       	adc	r31, r17
    a9c8:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    a9cc:	e9 0f       	add	r30, r25
    a9ce:	f1 1d       	adc	r31, r1
    a9d0:	e1 58       	subi	r30, 0x81	; 129
    a9d2:	fa 4c       	sbci	r31, 0xCA	; 202
    a9d4:	98 c0       	rjmp	.+304    	; 0xab06 <checkcollide+0x194>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a9d6:	81 30       	cpi	r24, 0x01	; 1
    a9d8:	79 f4       	brne	.+30     	; 0xa9f8 <checkcollide+0x86>
    a9da:	9a e5       	ldi	r25, 0x5A	; 90
    a9dc:	9e 9d       	mul	r25, r14
    a9de:	f0 01       	movw	r30, r0
    a9e0:	9f 9d       	mul	r25, r15
    a9e2:	f0 0d       	add	r31, r0
    a9e4:	11 24       	eor	r1, r1
    a9e6:	e0 0f       	add	r30, r16
    a9e8:	f1 1f       	adc	r31, r17
    a9ea:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    a9ee:	e9 0f       	add	r30, r25
    a9f0:	f1 1d       	adc	r31, r1
    a9f2:	ed 56       	subi	r30, 0x6D	; 109
    a9f4:	ff 4c       	sbci	r31, 0xCF	; 207
    a9f6:	87 c0       	rjmp	.+270    	; 0xab06 <checkcollide+0x194>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    a9f8:	82 30       	cpi	r24, 0x02	; 2
    a9fa:	79 f4       	brne	.+30     	; 0xaa1a <checkcollide+0xa8>
    a9fc:	9a e5       	ldi	r25, 0x5A	; 90
    a9fe:	9e 9d       	mul	r25, r14
    aa00:	f0 01       	movw	r30, r0
    aa02:	9f 9d       	mul	r25, r15
    aa04:	f0 0d       	add	r31, r0
    aa06:	11 24       	eor	r1, r1
    aa08:	e0 0f       	add	r30, r16
    aa0a:	f1 1f       	adc	r31, r17
    aa0c:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aa10:	e9 0f       	add	r30, r25
    aa12:	f1 1d       	adc	r31, r1
    aa14:	e9 55       	subi	r30, 0x59	; 89
    aa16:	f4 4d       	sbci	r31, 0xD4	; 212
    aa18:	76 c0       	rjmp	.+236    	; 0xab06 <checkcollide+0x194>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa1a:	83 30       	cpi	r24, 0x03	; 3
    aa1c:	79 f4       	brne	.+30     	; 0xaa3c <checkcollide+0xca>
    aa1e:	9a e5       	ldi	r25, 0x5A	; 90
    aa20:	9e 9d       	mul	r25, r14
    aa22:	f0 01       	movw	r30, r0
    aa24:	9f 9d       	mul	r25, r15
    aa26:	f0 0d       	add	r31, r0
    aa28:	11 24       	eor	r1, r1
    aa2a:	e0 0f       	add	r30, r16
    aa2c:	f1 1f       	adc	r31, r17
    aa2e:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aa32:	e9 0f       	add	r30, r25
    aa34:	f1 1d       	adc	r31, r1
    aa36:	e5 54       	subi	r30, 0x45	; 69
    aa38:	f9 4d       	sbci	r31, 0xD9	; 217
    aa3a:	65 c0       	rjmp	.+202    	; 0xab06 <checkcollide+0x194>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa3c:	84 30       	cpi	r24, 0x04	; 4
    aa3e:	79 f4       	brne	.+30     	; 0xaa5e <checkcollide+0xec>
    aa40:	9a e5       	ldi	r25, 0x5A	; 90
    aa42:	9e 9d       	mul	r25, r14
    aa44:	f0 01       	movw	r30, r0
    aa46:	9f 9d       	mul	r25, r15
    aa48:	f0 0d       	add	r31, r0
    aa4a:	11 24       	eor	r1, r1
    aa4c:	e0 0f       	add	r30, r16
    aa4e:	f1 1f       	adc	r31, r17
    aa50:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aa54:	e9 0f       	add	r30, r25
    aa56:	f1 1d       	adc	r31, r1
    aa58:	e1 53       	subi	r30, 0x31	; 49
    aa5a:	fe 4d       	sbci	r31, 0xDE	; 222
    aa5c:	54 c0       	rjmp	.+168    	; 0xab06 <checkcollide+0x194>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa5e:	85 30       	cpi	r24, 0x05	; 5
    aa60:	79 f4       	brne	.+30     	; 0xaa80 <checkcollide+0x10e>
    aa62:	9a e5       	ldi	r25, 0x5A	; 90
    aa64:	9e 9d       	mul	r25, r14
    aa66:	f0 01       	movw	r30, r0
    aa68:	9f 9d       	mul	r25, r15
    aa6a:	f0 0d       	add	r31, r0
    aa6c:	11 24       	eor	r1, r1
    aa6e:	e0 0f       	add	r30, r16
    aa70:	f1 1f       	adc	r31, r17
    aa72:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aa76:	e9 0f       	add	r30, r25
    aa78:	f1 1d       	adc	r31, r1
    aa7a:	ed 51       	subi	r30, 0x1D	; 29
    aa7c:	f3 4e       	sbci	r31, 0xE3	; 227
    aa7e:	43 c0       	rjmp	.+134    	; 0xab06 <checkcollide+0x194>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aa80:	86 30       	cpi	r24, 0x06	; 6
    aa82:	79 f4       	brne	.+30     	; 0xaaa2 <checkcollide+0x130>
    aa84:	9a e5       	ldi	r25, 0x5A	; 90
    aa86:	9e 9d       	mul	r25, r14
    aa88:	f0 01       	movw	r30, r0
    aa8a:	9f 9d       	mul	r25, r15
    aa8c:	f0 0d       	add	r31, r0
    aa8e:	11 24       	eor	r1, r1
    aa90:	e0 0f       	add	r30, r16
    aa92:	f1 1f       	adc	r31, r17
    aa94:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aa98:	e9 0f       	add	r30, r25
    aa9a:	f1 1d       	adc	r31, r1
    aa9c:	e9 50       	subi	r30, 0x09	; 9
    aa9e:	f8 4e       	sbci	r31, 0xE8	; 232
    aaa0:	32 c0       	rjmp	.+100    	; 0xab06 <checkcollide+0x194>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aaa2:	87 30       	cpi	r24, 0x07	; 7
    aaa4:	79 f4       	brne	.+30     	; 0xaac4 <checkcollide+0x152>
    aaa6:	9a e5       	ldi	r25, 0x5A	; 90
    aaa8:	9e 9d       	mul	r25, r14
    aaaa:	f0 01       	movw	r30, r0
    aaac:	9f 9d       	mul	r25, r15
    aaae:	f0 0d       	add	r31, r0
    aab0:	11 24       	eor	r1, r1
    aab2:	e0 0f       	add	r30, r16
    aab4:	f1 1f       	adc	r31, r17
    aab6:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aaba:	e9 0f       	add	r30, r25
    aabc:	f1 1d       	adc	r31, r1
    aabe:	e5 5f       	subi	r30, 0xF5	; 245
    aac0:	fc 4e       	sbci	r31, 0xEC	; 236
    aac2:	21 c0       	rjmp	.+66     	; 0xab06 <checkcollide+0x194>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aac4:	88 30       	cpi	r24, 0x08	; 8
    aac6:	79 f4       	brne	.+30     	; 0xaae6 <checkcollide+0x174>
    aac8:	9a e5       	ldi	r25, 0x5A	; 90
    aaca:	9e 9d       	mul	r25, r14
    aacc:	f0 01       	movw	r30, r0
    aace:	9f 9d       	mul	r25, r15
    aad0:	f0 0d       	add	r31, r0
    aad2:	11 24       	eor	r1, r1
    aad4:	e0 0f       	add	r30, r16
    aad6:	f1 1f       	adc	r31, r17
    aad8:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aadc:	e9 0f       	add	r30, r25
    aade:	f1 1d       	adc	r31, r1
    aae0:	e1 5e       	subi	r30, 0xE1	; 225
    aae2:	f1 4f       	sbci	r31, 0xF1	; 241
    aae4:	10 c0       	rjmp	.+32     	; 0xab06 <checkcollide+0x194>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aae6:	89 30       	cpi	r24, 0x09	; 9
    aae8:	79 f4       	brne	.+30     	; 0xab08 <checkcollide+0x196>
    aaea:	9a e5       	ldi	r25, 0x5A	; 90
    aaec:	9e 9d       	mul	r25, r14
    aaee:	f0 01       	movw	r30, r0
    aaf0:	9f 9d       	mul	r25, r15
    aaf2:	f0 0d       	add	r31, r0
    aaf4:	11 24       	eor	r1, r1
    aaf6:	e0 0f       	add	r30, r16
    aaf8:	f1 1f       	adc	r31, r17
    aafa:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    aafe:	e9 0f       	add	r30, r25
    ab00:	f1 1d       	adc	r31, r1
    ab02:	ed 5c       	subi	r30, 0xCD	; 205
    ab04:	f6 4f       	sbci	r31, 0xF6	; 246
    ab06:	c4 91       	lpm	r28, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    ab08:	ca 31       	cpi	r28, 0x1A	; 26
    ab0a:	11 f0       	breq	.+4      	; 0xab10 <checkcollide+0x19e>
    ab0c:	cc 31       	cpi	r28, 0x1C	; 28
    ab0e:	19 f4       	brne	.+6      	; 0xab16 <checkcollide+0x1a4>
    ab10:	91 e0       	ldi	r25, 0x01	; 1
    ab12:	90 93 53 0a 	sts	0x0A53, r25	; 0x800a53 <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) { 
    ab16:	93 ee       	ldi	r25, 0xE3	; 227
    ab18:	9c 0f       	add	r25, r28
    ab1a:	92 30       	cpi	r25, 0x02	; 2
    ab1c:	20 f5       	brcc	.+72     	; 0xab66 <checkcollide+0x1f4>
    ab1e:	23 e0       	ldi	r18, 0x03	; 3
    ab20:	82 16       	cp	r8, r18
    ab22:	91 04       	cpc	r9, r1
    ab24:	09 f0       	breq	.+2      	; 0xab28 <checkcollide+0x1b6>
    ab26:	46 c0       	rjmp	.+140    	; 0xabb4 <checkcollide+0x242>
    ab28:	80 91 bb 09 	lds	r24, 0x09BB	; 0x8009bb <play>
    ab2c:	88 23       	and	r24, r24
    ab2e:	09 f4       	brne	.+2      	; 0xab32 <checkcollide+0x1c0>
    ab30:	41 c0       	rjmp	.+130    	; 0xabb4 <checkcollide+0x242>
    died = true;
    ab32:	81 e0       	ldi	r24, 0x01	; 1
    ab34:	80 93 6d 0a 	sts	0x0A6D, r24	; 0x800a6d <died>
    lives--;    
    ab38:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    ab3c:	81 50       	subi	r24, 0x01	; 1
    ab3e:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false; 
    ab42:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    ab46:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0;  
    ab4a:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    ab4e:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    ab52:	41 e0       	ldi	r20, 0x01	; 1
    ab54:	6f ef       	ldi	r22, 0xFF	; 255
    ab56:	89 e0       	ldi	r24, 0x09	; 9
    ab58:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240);     
    ab5c:	80 ef       	ldi	r24, 0xF0	; 240
    ab5e:	90 e0       	ldi	r25, 0x00	; 0
    ab60:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    ab64:	27 c0       	rjmp	.+78     	; 0xabb4 <checkcollide+0x242>
};
if (bl == 21 && level == 5 && play == true ) { 
    ab66:	c5 31       	cpi	r28, 0x15	; 21
    ab68:	11 f5       	brne	.+68     	; 0xabae <checkcollide+0x23c>
    ab6a:	85 30       	cpi	r24, 0x05	; 5
    ab6c:	09 f0       	breq	.+2      	; 0xab70 <checkcollide+0x1fe>
    ab6e:	fd c1       	rjmp	.+1018   	; 0xaf6a <checkcollide+0x5f8>
    ab70:	80 91 bb 09 	lds	r24, 0x09BB	; 0x8009bb <play>
    ab74:	88 23       	and	r24, r24
    ab76:	09 f4       	brne	.+2      	; 0xab7a <checkcollide+0x208>
    ab78:	f8 c1       	rjmp	.+1008   	; 0xaf6a <checkcollide+0x5f8>
    died = true;
    ab7a:	81 e0       	ldi	r24, 0x01	; 1
    ab7c:	80 93 6d 0a 	sts	0x0A6D, r24	; 0x800a6d <died>
    lives--;    
    ab80:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    ab84:	81 50       	subi	r24, 0x01	; 1
    ab86:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false; 
    ab8a:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    ab8e:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0;  
    ab92:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    ab96:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    ab9a:	41 e0       	ldi	r20, 0x01	; 1
    ab9c:	6f ef       	ldi	r22, 0xFF	; 255
    ab9e:	89 e0       	ldi	r24, 0x09	; 9
    aba0:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240);     
    aba4:	80 ef       	ldi	r24, 0xF0	; 240
    aba6:	90 e0       	ldi	r25, 0x00	; 0
    aba8:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    abac:	de c1       	rjmp	.+956    	; 0xaf6a <checkcollide+0x5f8>
};
    
    
if (bl == 41 && z == 1 ) { 
    abae:	c9 32       	cpi	r28, 0x29	; 41
    abb0:	09 f4       	brne	.+2      	; 0xabb4 <checkcollide+0x242>
    abb2:	68 c0       	rjmp	.+208    	; 0xac84 <checkcollide+0x312>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    abb4:	c3 30       	cpi	r28, 0x03	; 3
    abb6:	09 f0       	breq	.+2      	; 0xabba <checkcollide+0x248>
    abb8:	ce c0       	rjmp	.+412    	; 0xad56 <checkcollide+0x3e4>
    abba:	82 e0       	ldi	r24, 0x02	; 2
    abbc:	88 16       	cp	r8, r24
    abbe:	91 04       	cpc	r9, r1
    abc0:	09 f0       	breq	.+2      	; 0xabc4 <checkcollide+0x252>
    abc2:	d3 c1       	rjmp	.+934    	; 0xaf6a <checkcollide+0x5f8>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    abc4:	2a e5       	ldi	r18, 0x5A	; 90
    abc6:	2e 9d       	mul	r18, r14
    abc8:	c0 01       	movw	r24, r0
    abca:	2f 9d       	mul	r18, r15
    abcc:	90 0d       	add	r25, r0
    abce:	11 24       	eor	r1, r1
    abd0:	80 0f       	add	r24, r16
    abd2:	91 1f       	adc	r25, r17
    abd4:	20 91 8f 0a 	lds	r18, 0x0A8F	; 0x800a8f <scrolltiles>
    abd8:	82 0f       	add	r24, r18
    abda:	91 1d       	adc	r25, r1
    abdc:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <dp+0x1>
    abe0:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <dp>
    abe4:	ef e1       	ldi	r30, 0x1F	; 31
    abe6:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    abe8:	c1 2c       	mov	r12, r1
    abea:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    abec:	21 91       	ld	r18, Z+
    abee:	31 91       	ld	r19, Z+
    abf0:	82 17       	cp	r24, r18
    abf2:	93 07       	cpc	r25, r19
    abf4:	09 f4       	brne	.+2      	; 0xabf8 <checkcollide+0x286>
    abf6:	b9 c1       	rjmp	.+882    	; 0xaf6a <checkcollide+0x5f8>
    if (diamonds[xi] == 0 ) {
    abf8:	23 2b       	or	r18, r19
    abfa:	d9 f5       	brne	.+118    	; 0xac72 <checkcollide+0x300>
    score = score + 5 ;
    abfc:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <score>
    ac00:	90 91 a3 09 	lds	r25, 0x09A3	; 0x8009a3 <score+0x1>
    ac04:	05 96       	adiw	r24, 0x05	; 5
    ac06:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <score+0x1>
    ac0a:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <score>
    bonus++;
    ac0e:	80 91 51 0a 	lds	r24, 0x0A51	; 0x800a51 <bonus>
    ac12:	90 91 52 0a 	lds	r25, 0x0A52	; 0x800a52 <bonus+0x1>
    ac16:	01 96       	adiw	r24, 0x01	; 1
    ac18:	90 93 52 0a 	sts	0x0A52, r25	; 0x800a52 <bonus+0x1>
    ac1c:	80 93 51 0a 	sts	0x0A51, r24	; 0x800a51 <bonus>
    updatepoints();
    ac20:	0e 94 a8 54 	call	0xa950	; 0xa950 <updatepoints>
    TriggerFx(7,0xff,true);
    ac24:	41 e0       	ldi	r20, 0x01	; 1
    ac26:	6f ef       	ldi	r22, 0xFF	; 255
    ac28:	87 e0       	ldi	r24, 0x07	; 7
    ac2a:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    lx = lx * 2 + destX;
    ac2e:	c8 01       	movw	r24, r16
    ac30:	88 0f       	add	r24, r24
    ac32:	99 1f       	adc	r25, r25
    ac34:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <destX>
    ac38:	82 0f       	add	r24, r18
    ac3a:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    ac3c:	80 32       	cpi	r24, 0x20	; 32
    ac3e:	91 05       	cpc	r25, r1
    ac40:	0c f0       	brlt	.+2      	; 0xac44 <checkcollide+0x2d2>
    ac42:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    bananaCount = bananaCount + 1;
    ac44:	90 91 9c 08 	lds	r25, 0x089C	; 0x80089c <bananaCount>
    ac48:	9f 5f       	subi	r25, 0xFF	; 255
    ac4a:	90 93 9c 08 	sts	0x089C, r25	; 0x80089c <bananaCount>
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    ac4e:	6e 2d       	mov	r22, r14
    ac50:	66 0f       	add	r22, r22
    ac52:	4e e3       	ldi	r20, 0x3E	; 62
    ac54:	59 e7       	ldi	r21, 0x79	; 121
    ac56:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    diamonds[xi] = dp;
    ac5a:	f6 01       	movw	r30, r12
    ac5c:	ee 0f       	add	r30, r30
    ac5e:	ff 1f       	adc	r31, r31
    ac60:	e1 5e       	subi	r30, 0xE1	; 225
    ac62:	f5 4f       	sbci	r31, 0xF5	; 245
    ac64:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <dp>
    ac68:	90 91 1e 0a 	lds	r25, 0x0A1E	; 0x800a1e <dp+0x1>
    ac6c:	91 83       	std	Z+1, r25	; 0x01
    ac6e:	80 83       	st	Z, r24
    break;
    ac70:	7c c1       	rjmp	.+760    	; 0xaf6a <checkcollide+0x5f8>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    ac72:	2f ef       	ldi	r18, 0xFF	; 255
    ac74:	c2 1a       	sub	r12, r18
    ac76:	d2 0a       	sbc	r13, r18
    ac78:	29 e1       	ldi	r18, 0x19	; 25
    ac7a:	c2 16       	cp	r12, r18
    ac7c:	d1 04       	cpc	r13, r1
    ac7e:	09 f0       	breq	.+2      	; 0xac82 <checkcollide+0x310>
    ac80:	b5 cf       	rjmp	.-150    	; 0xabec <checkcollide+0x27a>
    ac82:	73 c1       	rjmp	.+742    	; 0xaf6a <checkcollide+0x5f8>
    TriggerFx(9,0xff,true);
    WaitVsync(240);     
};
    
    
if (bl == 41 && z == 1 ) { 
    ac84:	8a 94       	dec	r8
    ac86:	89 28       	or	r8, r9
    ac88:	09 f0       	breq	.+2      	; 0xac8c <checkcollide+0x31a>
    ac8a:	6f c1       	rjmp	.+734    	; 0xaf6a <checkcollide+0x5f8>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    ac8c:	2a e5       	ldi	r18, 0x5A	; 90
    ac8e:	2e 9d       	mul	r18, r14
    ac90:	c0 01       	movw	r24, r0
    ac92:	2f 9d       	mul	r18, r15
    ac94:	90 0d       	add	r25, r0
    ac96:	11 24       	eor	r1, r1
    ac98:	80 0f       	add	r24, r16
    ac9a:	91 1f       	adc	r25, r17
    ac9c:	20 91 8f 0a 	lds	r18, 0x0A8F	; 0x800a8f <scrolltiles>
    aca0:	82 0f       	add	r24, r18
    aca2:	91 1d       	adc	r25, r1
    aca4:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <dp+0x1>
    aca8:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <dp>
    acac:	ef e1       	ldi	r30, 0x1F	; 31
    acae:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    acb0:	c1 2c       	mov	r12, r1
    acb2:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    acb4:	21 91       	ld	r18, Z+
    acb6:	31 91       	ld	r19, Z+
    acb8:	82 17       	cp	r24, r18
    acba:	93 07       	cpc	r25, r19
    acbc:	09 f4       	brne	.+2      	; 0xacc0 <checkcollide+0x34e>
    acbe:	55 c1       	rjmp	.+682    	; 0xaf6a <checkcollide+0x5f8>
    if (diamonds[xi] == 0 ) {
    acc0:	23 2b       	or	r18, r19
    acc2:	09 f0       	breq	.+2      	; 0xacc6 <checkcollide+0x354>
    acc4:	3f c0       	rjmp	.+126    	; 0xad44 <checkcollide+0x3d2>
    score = score + 5 ;
    acc6:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <score>
    acca:	90 91 a3 09 	lds	r25, 0x09A3	; 0x8009a3 <score+0x1>
    acce:	05 96       	adiw	r24, 0x05	; 5
    acd0:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <score+0x1>
    acd4:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <score>
    bonus++;
    acd8:	80 91 51 0a 	lds	r24, 0x0A51	; 0x800a51 <bonus>
    acdc:	90 91 52 0a 	lds	r25, 0x0A52	; 0x800a52 <bonus+0x1>
    ace0:	01 96       	adiw	r24, 0x01	; 1
    ace2:	90 93 52 0a 	sts	0x0A52, r25	; 0x800a52 <bonus+0x1>
    ace6:	80 93 51 0a 	sts	0x0A51, r24	; 0x800a51 <bonus>
    updatepoints();
    acea:	0e 94 a8 54 	call	0xa950	; 0xa950 <updatepoints>
    TriggerFx(7,0xff,true);
    acee:	41 e0       	ldi	r20, 0x01	; 1
    acf0:	6f ef       	ldi	r22, 0xFF	; 255
    acf2:	87 e0       	ldi	r24, 0x07	; 7
    acf4:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
        
    lx = lx * 2 + destX;
    acf8:	00 0f       	add	r16, r16
    acfa:	11 1f       	adc	r17, r17
    acfc:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    ad00:	08 0f       	add	r16, r24
    ad02:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    ad04:	00 32       	cpi	r16, 0x20	; 32
    ad06:	11 05       	cpc	r17, r1
    ad08:	14 f0       	brlt	.+4      	; 0xad0e <checkcollide+0x39c>
    ad0a:	00 52       	subi	r16, 0x20	; 32
    ad0c:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    ad0e:	ee 0c       	add	r14, r14
    ad10:	41 ea       	ldi	r20, 0xA1	; 161
    ad12:	58 e7       	ldi	r21, 0x78	; 120
    ad14:	6e 2d       	mov	r22, r14
    ad16:	80 2f       	mov	r24, r16
    ad18:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    ad1c:	d1 e0       	ldi	r29, 0x01	; 1
    ad1e:	d0 0f       	add	r29, r16
    ad20:	41 ea       	ldi	r20, 0xA1	; 161
    ad22:	58 e7       	ldi	r21, 0x78	; 120
    ad24:	6e 2d       	mov	r22, r14
    ad26:	8d 2f       	mov	r24, r29
    ad28:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    ad2c:	e3 94       	inc	r14
    ad2e:	41 ea       	ldi	r20, 0xA1	; 161
    ad30:	58 e7       	ldi	r21, 0x78	; 120
    ad32:	6e 2d       	mov	r22, r14
    ad34:	80 2f       	mov	r24, r16
    ad36:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    ad3a:	41 ea       	ldi	r20, 0xA1	; 161
    ad3c:	58 e7       	ldi	r21, 0x78	; 120
    ad3e:	6e 2d       	mov	r22, r14
    ad40:	8d 2f       	mov	r24, r29
    ad42:	89 cf       	rjmp	.-238    	; 0xac56 <checkcollide+0x2e4>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    ad44:	2f ef       	ldi	r18, 0xFF	; 255
    ad46:	c2 1a       	sub	r12, r18
    ad48:	d2 0a       	sbc	r13, r18
    ad4a:	29 e1       	ldi	r18, 0x19	; 25
    ad4c:	c2 16       	cp	r12, r18
    ad4e:	d1 04       	cpc	r13, r1
    ad50:	09 f0       	breq	.+2      	; 0xad54 <checkcollide+0x3e2>
    ad52:	b0 cf       	rjmp	.-160    	; 0xacb4 <checkcollide+0x342>
    ad54:	0a c1       	rjmp	.+532    	; 0xaf6a <checkcollide+0x5f8>
    diamonds[xi] = dp;
    break;
    };
    };
}; 
if (bl == 9 )
    ad56:	c9 30       	cpi	r28, 0x09	; 9
    ad58:	79 f4       	brne	.+30     	; 0xad78 <checkcollide+0x406>
{
lx = x + Levelx;
    ad5a:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    ad5e:	c8 0e       	add	r12, r24
    ad60:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    ad62:	8f e0       	ldi	r24, 0x0F	; 15
    ad64:	c8 22       	and	r12, r24
    ad66:	dd 24       	eor	r13, r13
    ad68:	81 e0       	ldi	r24, 0x01	; 1
    ad6a:	90 e0       	ldi	r25, 0x00	; 0
    ad6c:	29 e0       	ldi	r18, 0x09	; 9
    ad6e:	c2 16       	cp	r12, r18
    ad70:	d1 04       	cpc	r13, r1
    ad72:	0c f4       	brge	.+2      	; 0xad76 <checkcollide+0x404>
    ad74:	01 c1       	rjmp	.+514    	; 0xaf78 <checkcollide+0x606>
    ad76:	ff c0       	rjmp	.+510    	; 0xaf76 <checkcollide+0x604>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    ad78:	ca 30       	cpi	r28, 0x0A	; 10
    ad7a:	79 f4       	brne	.+30     	; 0xad9a <checkcollide+0x428>
{
lx = x + Levelx;
    ad7c:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    ad80:	c8 0e       	add	r12, r24
    ad82:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    ad84:	8f e0       	ldi	r24, 0x0F	; 15
    ad86:	c8 22       	and	r12, r24
    ad88:	dd 24       	eor	r13, r13
    ad8a:	81 e0       	ldi	r24, 0x01	; 1
    ad8c:	90 e0       	ldi	r25, 0x00	; 0
    ad8e:	29 e0       	ldi	r18, 0x09	; 9
    ad90:	c2 16       	cp	r12, r18
    ad92:	d1 04       	cpc	r13, r1
    ad94:	0c f0       	brlt	.+2      	; 0xad98 <checkcollide+0x426>
    ad96:	f0 c0       	rjmp	.+480    	; 0xaf78 <checkcollide+0x606>
    ad98:	ee c0       	rjmp	.+476    	; 0xaf76 <checkcollide+0x604>
}
 

    
    
if (bl == 39 )
    ad9a:	c7 32       	cpi	r28, 0x27	; 39
    ad9c:	09 f0       	breq	.+2      	; 0xada0 <checkcollide+0x42e>
    ad9e:	e5 c0       	rjmp	.+458    	; 0xaf6a <checkcollide+0x5f8>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    ada0:	c7 01       	movw	r24, r14
    ada2:	f4 e0       	ldi	r31, 0x04	; 4
    ada4:	88 0f       	add	r24, r24
    ada6:	99 1f       	adc	r25, r25
    ada8:	fa 95       	dec	r31
    adaa:	e1 f7       	brne	.-8      	; 0xada4 <checkcollide+0x432>
ly = ly - lx;
        
if (ly < 5  ) 
    adac:	a8 1a       	sub	r10, r24
    adae:	b9 0a       	sbc	r11, r25
    adb0:	85 e0       	ldi	r24, 0x05	; 5
    adb2:	a8 16       	cp	r10, r24
    adb4:	b1 04       	cpc	r11, r1
    adb6:	0c f0       	brlt	.+2      	; 0xadba <checkcollide+0x448>
    adb8:	7d c0       	rjmp	.+250    	; 0xaeb4 <checkcollide+0x542>
{
lx = x + Levelx;
    adba:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    adbe:	c8 0e       	add	r12, r24
    adc0:	d1 1c       	adc	r13, r1
ly = y;
lx = lx >> 4;
    adc2:	86 01       	movw	r16, r12
    adc4:	e4 e0       	ldi	r30, 0x04	; 4
    adc6:	15 95       	asr	r17
    adc8:	07 95       	ror	r16
    adca:	ea 95       	dec	r30
    adcc:	e1 f7       	brne	.-8      	; 0xadc6 <checkcollide+0x454>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    adce:	2a e5       	ldi	r18, 0x5A	; 90
    add0:	2e 9d       	mul	r18, r14
    add2:	c0 01       	movw	r24, r0
    add4:	2f 9d       	mul	r18, r15
    add6:	90 0d       	add	r25, r0
    add8:	11 24       	eor	r1, r1
    adda:	80 0f       	add	r24, r16
    addc:	91 1f       	adc	r25, r17
    adde:	20 91 8f 0a 	lds	r18, 0x0A8F	; 0x800a8f <scrolltiles>
    ade2:	82 0f       	add	r24, r18
    ade4:	91 1d       	adc	r25, r1
    ade6:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <dp+0x1>
    adea:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <dp>
    adee:	e6 e2       	ldi	r30, 0x26	; 38
    adf0:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    adf2:	20 e0       	ldi	r18, 0x00	; 0
    adf4:	30 e0       	ldi	r19, 0x00	; 0
     {
     if (bridges[xi].id == dp)         
    adf6:	40 81       	ld	r20, Z
    adf8:	51 81       	ldd	r21, Z+1	; 0x01
    adfa:	84 17       	cp	r24, r20
    adfc:	95 07       	cpc	r25, r21
    adfe:	09 f0       	breq	.+2      	; 0xae02 <checkcollide+0x490>
    ae00:	9e c0       	rjmp	.+316    	; 0xaf3e <checkcollide+0x5cc>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    ae02:	c8 01       	movw	r24, r16
    ae04:	54 e0       	ldi	r21, 0x04	; 4
    ae06:	88 0f       	add	r24, r24
    ae08:	99 1f       	adc	r25, r25
    ae0a:	5a 95       	dec	r21
    ae0c:	e1 f7       	brne	.-8      	; 0xae06 <checkcollide+0x494>
    ae0e:	c8 1a       	sub	r12, r24
    ae10:	d9 0a       	sbc	r13, r25
    ae12:	90 91 1a 0a 	lds	r25, 0x0A1A	; 0x800a1a <destX>
    ae16:	e9 01       	movw	r28, r18
    ae18:	cc 0f       	add	r28, r28
    ae1a:	dd 1f       	adc	r29, r29
    ae1c:	cc 0f       	add	r28, r28
    ae1e:	dd 1f       	adc	r29, r29
    ae20:	00 0f       	add	r16, r16
    ae22:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    ae24:	fe 01       	movw	r30, r28
    ae26:	ea 5d       	subi	r30, 0xDA	; 218
    ae28:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    ae2a:	29 e0       	ldi	r18, 0x09	; 9
    ae2c:	c2 16       	cp	r12, r18
    ae2e:	d1 04       	cpc	r13, r1
    ae30:	0c f0       	brlt	.+2      	; 0xae34 <checkcollide+0x4c2>
    ae32:	43 c0       	rjmp	.+134    	; 0xaeba <checkcollide+0x548>
        {
        bridges[xi].r++;    
    ae34:	83 81       	ldd	r24, Z+3	; 0x03
    ae36:	21 e0       	ldi	r18, 0x01	; 1
    ae38:	28 0f       	add	r18, r24
    ae3a:	23 83       	std	Z+3, r18	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    ae3c:	09 0f       	add	r16, r25
    ae3e:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    ae40:	00 32       	cpi	r16, 0x20	; 32
    ae42:	11 05       	cpc	r17, r1
    ae44:	14 f0       	brlt	.+4      	; 0xae4a <checkcollide+0x4d8>
    ae46:	00 52       	subi	r16, 0x20	; 32
    ae48:	11 09       	sbc	r17, r1
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    ae4a:	88 30       	cpi	r24, 0x08	; 8
    ae4c:	38 f4       	brcc	.+14     	; 0xae5c <checkcollide+0x4ea>
    ae4e:	4a ea       	ldi	r20, 0xAA	; 170
    ae50:	58 e7       	ldi	r21, 0x78	; 120
    ae52:	6e 2d       	mov	r22, r14
    ae54:	66 0f       	add	r22, r22
    ae56:	80 2f       	mov	r24, r16
    ae58:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    ae5c:	fe 01       	movw	r30, r28
    ae5e:	ea 5d       	subi	r30, 0xDA	; 218
    ae60:	f6 4f       	sbci	r31, 0xF6	; 246
    ae62:	83 81       	ldd	r24, Z+3	; 0x03
    ae64:	89 50       	subi	r24, 0x09	; 9
    ae66:	88 30       	cpi	r24, 0x08	; 8
    ae68:	38 f4       	brcc	.+14     	; 0xae78 <checkcollide+0x506>
    ae6a:	47 ea       	ldi	r20, 0xA7	; 167
    ae6c:	58 e7       	ldi	r21, 0x78	; 120
    ae6e:	6e 2d       	mov	r22, r14
    ae70:	66 0f       	add	r22, r22
    ae72:	80 2f       	mov	r24, r16
    ae74:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    ae78:	fe 01       	movw	r30, r28
    ae7a:	ea 5d       	subi	r30, 0xDA	; 218
    ae7c:	f6 4f       	sbci	r31, 0xF6	; 246
    ae7e:	83 81       	ldd	r24, Z+3	; 0x03
    ae80:	81 51       	subi	r24, 0x11	; 17
    ae82:	87 30       	cpi	r24, 0x07	; 7
    ae84:	38 f4       	brcc	.+14     	; 0xae94 <checkcollide+0x522>
    ae86:	44 ea       	ldi	r20, 0xA4	; 164
    ae88:	58 e7       	ldi	r21, 0x78	; 120
    ae8a:	6e 2d       	mov	r22, r14
    ae8c:	66 0f       	add	r22, r22
    ae8e:	80 2f       	mov	r24, r16
    ae90:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};
    ae94:	fe 01       	movw	r30, r28
    ae96:	ea 5d       	subi	r30, 0xDA	; 218
    ae98:	f6 4f       	sbci	r31, 0xF6	; 246
    ae9a:	83 81       	ldd	r24, Z+3	; 0x03
    ae9c:	88 31       	cpi	r24, 0x18	; 24
    ae9e:	08 f4       	brcc	.+2      	; 0xaea2 <checkcollide+0x530>
    aea0:	5b c0       	rjmp	.+182    	; 0xaf58 <checkcollide+0x5e6>
    aea2:	88 e1       	ldi	r24, 0x18	; 24
    aea4:	83 83       	std	Z+3, r24	; 0x03
    aea6:	6e 2d       	mov	r22, r14
    aea8:	66 0f       	add	r22, r22
    aeaa:	41 ea       	ldi	r20, 0xA1	; 161
    aeac:	58 e7       	ldi	r21, 0x78	; 120
    aeae:	80 2f       	mov	r24, r16
    aeb0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    aeb4:	80 e0       	ldi	r24, 0x00	; 0
    aeb6:	90 e0       	ldi	r25, 0x00	; 0
    aeb8:	5f c0       	rjmp	.+190    	; 0xaf78 <checkcollide+0x606>
        }
        else
        {
        bridges[xi].l++;
    aeba:	82 81       	ldd	r24, Z+2	; 0x02
    aebc:	21 e0       	ldi	r18, 0x01	; 1
    aebe:	28 0f       	add	r18, r24
    aec0:	22 83       	std	Z+2, r18	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    aec2:	09 0f       	add	r16, r25
    aec4:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    aec6:	00 32       	cpi	r16, 0x20	; 32
    aec8:	11 05       	cpc	r17, r1
    aeca:	14 f0       	brlt	.+4      	; 0xaed0 <checkcollide+0x55e>
    aecc:	00 52       	subi	r16, 0x20	; 32
    aece:	11 09       	sbc	r17, r1
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    aed0:	88 30       	cpi	r24, 0x08	; 8
    aed2:	40 f4       	brcc	.+16     	; 0xaee4 <checkcollide+0x572>
    aed4:	4a ea       	ldi	r20, 0xAA	; 170
    aed6:	58 e7       	ldi	r21, 0x78	; 120
    aed8:	6e 2d       	mov	r22, r14
    aeda:	66 0f       	add	r22, r22
    aedc:	81 e0       	ldi	r24, 0x01	; 1
    aede:	80 0f       	add	r24, r16
    aee0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    aee4:	fe 01       	movw	r30, r28
    aee6:	ea 5d       	subi	r30, 0xDA	; 218
    aee8:	f6 4f       	sbci	r31, 0xF6	; 246
    aeea:	82 81       	ldd	r24, Z+2	; 0x02
    aeec:	89 50       	subi	r24, 0x09	; 9
    aeee:	88 30       	cpi	r24, 0x08	; 8
    aef0:	40 f4       	brcc	.+16     	; 0xaf02 <checkcollide+0x590>
    aef2:	47 ea       	ldi	r20, 0xA7	; 167
    aef4:	58 e7       	ldi	r21, 0x78	; 120
    aef6:	6e 2d       	mov	r22, r14
    aef8:	66 0f       	add	r22, r22
    aefa:	81 e0       	ldi	r24, 0x01	; 1
    aefc:	80 0f       	add	r24, r16
    aefe:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    af02:	fe 01       	movw	r30, r28
    af04:	ea 5d       	subi	r30, 0xDA	; 218
    af06:	f6 4f       	sbci	r31, 0xF6	; 246
    af08:	82 81       	ldd	r24, Z+2	; 0x02
    af0a:	81 51       	subi	r24, 0x11	; 17
    af0c:	87 30       	cpi	r24, 0x07	; 7
    af0e:	40 f4       	brcc	.+16     	; 0xaf20 <checkcollide+0x5ae>
    af10:	44 ea       	ldi	r20, 0xA4	; 164
    af12:	58 e7       	ldi	r21, 0x78	; 120
    af14:	6e 2d       	mov	r22, r14
    af16:	66 0f       	add	r22, r22
    af18:	81 e0       	ldi	r24, 0x01	; 1
    af1a:	80 0f       	add	r24, r16
    af1c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;}; 
    af20:	fe 01       	movw	r30, r28
    af22:	ea 5d       	subi	r30, 0xDA	; 218
    af24:	f6 4f       	sbci	r31, 0xF6	; 246
    af26:	82 81       	ldd	r24, Z+2	; 0x02
    af28:	88 31       	cpi	r24, 0x18	; 24
    af2a:	b0 f0       	brcs	.+44     	; 0xaf58 <checkcollide+0x5e6>
    af2c:	88 e1       	ldi	r24, 0x18	; 24
    af2e:	82 83       	std	Z+2, r24	; 0x02
    af30:	6e 2d       	mov	r22, r14
    af32:	66 0f       	add	r22, r22
    af34:	41 ea       	ldi	r20, 0xA1	; 161
    af36:	58 e7       	ldi	r21, 0x78	; 120
    af38:	81 e0       	ldi	r24, 0x01	; 1
    af3a:	80 0f       	add	r24, r16
    af3c:	b9 cf       	rjmp	.-142    	; 0xaeb0 <checkcollide+0x53e>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    af3e:	45 2b       	or	r20, r21
    af40:	69 f4       	brne	.+26     	; 0xaf5c <checkcollide+0x5ea>
    af42:	22 0f       	add	r18, r18
    af44:	33 1f       	adc	r19, r19
    af46:	22 0f       	add	r18, r18
    af48:	33 1f       	adc	r19, r19
    af4a:	f9 01       	movw	r30, r18
    af4c:	ea 5d       	subi	r30, 0xDA	; 218
    af4e:	f6 4f       	sbci	r31, 0xF6	; 246
    af50:	91 83       	std	Z+1, r25	; 0x01
    af52:	80 83       	st	Z, r24
    af54:	12 82       	std	Z+2, r1	; 0x02
    af56:	13 82       	std	Z+3, r1	; 0x03
    af58:	81 e0       	ldi	r24, 0x01	; 1
    af5a:	ad cf       	rjmp	.-166    	; 0xaeb6 <checkcollide+0x544>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    af5c:	2f 5f       	subi	r18, 0xFF	; 255
    af5e:	3f 4f       	sbci	r19, 0xFF	; 255
    af60:	34 96       	adiw	r30, 0x04	; 4
    af62:	2c 30       	cpi	r18, 0x0C	; 12
    af64:	31 05       	cpc	r19, r1
    af66:	09 f0       	breq	.+2      	; 0xaf6a <checkcollide+0x5f8>
    af68:	46 cf       	rjmp	.-372    	; 0xadf6 <checkcollide+0x484>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    af6a:	ef ef       	ldi	r30, 0xFF	; 255
    af6c:	ec 0f       	add	r30, r28
    af6e:	81 e0       	ldi	r24, 0x01	; 1
    af70:	90 e0       	ldi	r25, 0x00	; 0
    af72:	e4 31       	cpi	r30, 0x14	; 20
    af74:	08 f0       	brcs	.+2      	; 0xaf78 <checkcollide+0x606>
    af76:	80 e0       	ldi	r24, 0x00	; 0
}
    af78:	df 91       	pop	r29
    af7a:	cf 91       	pop	r28
    af7c:	1f 91       	pop	r17
    af7e:	0f 91       	pop	r16
    af80:	ff 90       	pop	r15
    af82:	ef 90       	pop	r14
    af84:	df 90       	pop	r13
    af86:	cf 90       	pop	r12
    af88:	bf 90       	pop	r11
    af8a:	af 90       	pop	r10
    af8c:	9f 90       	pop	r9
    af8e:	8f 90       	pop	r8
    af90:	08 95       	ret

0000af92 <moveplayer2>:
  
}

void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
    af92:	81 e0       	ldi	r24, 0x01	; 1
    af94:	0e 94 52 42 	call	0x84a4	; 0x84a4 <ReadJoypad>
if(player2.stuck)
    af98:	20 91 fc 09 	lds	r18, 0x09FC	; 0x8009fc <player2+0xa>
    af9c:	22 23       	and	r18, r18
    af9e:	a1 f0       	breq	.+40     	; 0xafc8 <moveplayer2+0x36>
{
player2.sCount = player2.sCount + 1;
    afa0:	20 91 fa 09 	lds	r18, 0x09FA	; 0x8009fa <player2+0x8>
    afa4:	30 91 fb 09 	lds	r19, 0x09FB	; 0x8009fb <player2+0x9>
    afa8:	2f 5f       	subi	r18, 0xFF	; 255
    afaa:	3f 4f       	sbci	r19, 0xFF	; 255
if(player2.sCount >= 100)
    afac:	24 36       	cpi	r18, 0x64	; 100
    afae:	31 05       	cpc	r19, r1
    afb0:	2c f4       	brge	.+10     	; 0xafbc <moveplayer2+0x2a>
void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
if(player2.stuck)
{
player2.sCount = player2.sCount + 1;
    afb2:	30 93 fb 09 	sts	0x09FB, r19	; 0x8009fb <player2+0x9>
    afb6:	20 93 fa 09 	sts	0x09FA, r18	; 0x8009fa <player2+0x8>
    afba:	06 c0       	rjmp	.+12     	; 0xafc8 <moveplayer2+0x36>
if(player2.sCount >= 100)
{
player2.sCount = 0;
    afbc:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <player2+0x9>
    afc0:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <player2+0x8>
player2.stuck = false;
    afc4:	10 92 fc 09 	sts	0x09FC, r1	; 0x8009fc <player2+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    afc8:	20 91 7e 09 	lds	r18, 0x097E	; 0x80097e <introplaying>
    afcc:	22 23       	and	r18, r18
    afce:	29 f0       	breq	.+10     	; 0xafda <moveplayer2+0x48>
    afd0:	83 ff       	sbrs	r24, 3
    afd2:	85 c0       	rjmp	.+266    	; 0xb0de <moveplayer2+0x14c>
    afd4:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <introplaying>
    afd8:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player2.stuck == false) { 
    afda:	86 ff       	sbrs	r24, 6
    afdc:	13 c0       	rjmp	.+38     	; 0xb004 <moveplayer2+0x72>
    afde:	20 91 fc 09 	lds	r18, 0x09FC	; 0x8009fc <player2+0xa>
    afe2:	21 11       	cpse	r18, r1
    afe4:	0f c0       	rjmp	.+30     	; 0xb004 <moveplayer2+0x72>
player2.direction = 'l';
    afe6:	2c e6       	ldi	r18, 0x6C	; 108
    afe8:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <player2+0xe>
player2.action = 'w';
    afec:	27 e7       	ldi	r18, 0x77	; 119
    afee:	20 93 ff 09 	sts	0x09FF, r18	; 0x8009ff <player2+0xd>
player2.facing = 1;
    aff2:	21 e0       	ldi	r18, 0x01	; 1
    aff4:	30 e0       	ldi	r19, 0x00	; 0
    aff6:	30 93 fe 09 	sts	0x09FE, r19	; 0x8009fe <player2+0xc>
    affa:	20 93 fd 09 	sts	0x09FD, r18	; 0x8009fd <player2+0xb>
player2.ximpulse = -1; 
    affe:	2f ef       	ldi	r18, 0xFF	; 255
    b000:	20 93 04 0a 	sts	0x0A04, r18	; 0x800a04 <player2+0x12>
};
if (joy&BTN_RIGHT && player2.stuck == false) {
    b004:	87 ff       	sbrs	r24, 7
    b006:	11 c0       	rjmp	.+34     	; 0xb02a <moveplayer2+0x98>
    b008:	20 91 fc 09 	lds	r18, 0x09FC	; 0x8009fc <player2+0xa>
    b00c:	21 11       	cpse	r18, r1
    b00e:	0d c0       	rjmp	.+26     	; 0xb02a <moveplayer2+0x98>
player2.direction = 'r';
    b010:	22 e7       	ldi	r18, 0x72	; 114
    b012:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <player2+0xe>
player2.action = 'w';
    b016:	27 e7       	ldi	r18, 0x77	; 119
    b018:	20 93 ff 09 	sts	0x09FF, r18	; 0x8009ff <player2+0xd>
player2.facing = 0;
    b01c:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <player2+0xc>
    b020:	10 92 fd 09 	sts	0x09FD, r1	; 0x8009fd <player2+0xb>
player2.ximpulse = 1; 
    b024:	21 e0       	ldi	r18, 0x01	; 1
    b026:	20 93 04 0a 	sts	0x0A04, r18	; 0x800a04 <player2+0x12>
};
if ( !(joy&BTN_A) ) {
    b02a:	ac 01       	movw	r20, r24
    b02c:	44 27       	eor	r20, r20
    b02e:	51 70       	andi	r21, 0x01	; 1
    b030:	90 fd       	sbrc	r25, 0
    b032:	09 c0       	rjmp	.+18     	; 0xb046 <moveplayer2+0xb4>
player2.yimpulse = 0;
    b034:	10 92 05 0a 	sts	0x0A05, r1	; 0x800a05 <player2+0x13>
player2.jumpreleased = true;
    b038:	21 e0       	ldi	r18, 0x01	; 1
    b03a:	20 93 07 0a 	sts	0x0A07, r18	; 0x800a07 <player2+0x15>
player2.jumping = false;
    b03e:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <player2+0x14>
player2.jumpcounter = 0;
    b042:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <player2+0x1a>
};

if ( !(joy&BTN_B) ) {
    b046:	80 fd       	sbrc	r24, 0
    b048:	03 c0       	rjmp	.+6      	; 0xb050 <moveplayer2+0xbe>
player2.bpressed = false;
    b04a:	10 92 08 0a 	sts	0x0A08, r1	; 0x800a08 <player2+0x16>
    b04e:	08 c0       	rjmp	.+16     	; 0xb060 <moveplayer2+0xce>
};
if ( joy&BTN_B && player2.touchground) {
    b050:	20 91 03 0a 	lds	r18, 0x0A03	; 0x800a03 <player2+0x11>
    b054:	22 23       	and	r18, r18
    b056:	21 f0       	breq	.+8      	; 0xb060 <moveplayer2+0xce>
	if(bananaCount > 0 && player2.bpressed == false)
    b058:	20 91 9c 08 	lds	r18, 0x089C	; 0x80089c <bananaCount>
    b05c:	21 11       	cpse	r18, r1
    b05e:	14 c2       	rjmp	.+1064   	; 0xb488 <moveplayer2+0x4f6>
	bananaCount = bananaCount - 1;
    player2.bananaBool = true;
	player2.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    b060:	81 fd       	sbrc	r24, 1
    b062:	03 c0       	rjmp	.+6      	; 0xb06a <moveplayer2+0xd8>
player2.ypressed = false;
    b064:	10 92 09 0a 	sts	0x0A09, r1	; 0x800a09 <player2+0x17>
    b068:	16 c0       	rjmp	.+44     	; 0xb096 <moveplayer2+0x104>
};
if ( joy&BTN_Y) {
	if(player2.mushroomCount > 0 && player2.ypressed == false)
    b06a:	80 91 f8 09 	lds	r24, 0x09F8	; 0x8009f8 <player2+0x6>
    b06e:	90 91 f9 09 	lds	r25, 0x09F9	; 0x8009f9 <player2+0x7>
    b072:	18 16       	cp	r1, r24
    b074:	19 06       	cpc	r1, r25
    b076:	7c f4       	brge	.+30     	; 0xb096 <moveplayer2+0x104>
    b078:	20 91 09 0a 	lds	r18, 0x0A09	; 0x800a09 <player2+0x17>
    b07c:	21 11       	cpse	r18, r1
    b07e:	0b c0       	rjmp	.+22     	; 0xb096 <moveplayer2+0x104>
	{
	player2.mushroomCount = player2.mushroomCount - 1;
    b080:	01 97       	sbiw	r24, 0x01	; 1
    b082:	90 93 f9 09 	sts	0x09F9, r25	; 0x8009f9 <player2+0x7>
    b086:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <player2+0x6>
	player2.ximpulse = 10;
    b08a:	8a e0       	ldi	r24, 0x0A	; 10
    b08c:	80 93 04 0a 	sts	0x0A04, r24	; 0x800a04 <player2+0x12>
	player2.ypressed = true;
    b090:	81 e0       	ldi	r24, 0x01	; 1
    b092:	80 93 09 0a 	sts	0x0A09, r24	; 0x800a09 <player2+0x17>
	};
}; 


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    b096:	45 2b       	or	r20, r21
    b098:	11 f1       	breq	.+68     	; 0xb0de <moveplayer2+0x14c>
    b09a:	80 91 03 0a 	lds	r24, 0x0A03	; 0x800a03 <player2+0x11>
    b09e:	88 23       	and	r24, r24
    b0a0:	f1 f0       	breq	.+60     	; 0xb0de <moveplayer2+0x14c>
    b0a2:	80 91 07 0a 	lds	r24, 0x0A07	; 0x800a07 <player2+0x15>
    b0a6:	88 23       	and	r24, r24
    b0a8:	d1 f0       	breq	.+52     	; 0xb0de <moveplayer2+0x14c>
    b0aa:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <player2+0xa>
    b0ae:	81 11       	cpse	r24, r1
    b0b0:	16 c0       	rjmp	.+44     	; 0xb0de <moveplayer2+0x14c>
player2.action = 'j';
    b0b2:	8a e6       	ldi	r24, 0x6A	; 106
    b0b4:	80 93 ff 09 	sts	0x09FF, r24	; 0x8009ff <player2+0xd>
player2.yimpulse = 0;
    b0b8:	10 92 05 0a 	sts	0x0A05, r1	; 0x800a05 <player2+0x13>
player2.jumping = true;
    b0bc:	81 e0       	ldi	r24, 0x01	; 1
    b0be:	80 93 06 0a 	sts	0x0A06, r24	; 0x800a06 <player2+0x14>
player2.touchground = false;
    b0c2:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <player2+0x11>
player2.jumpreleased = false;
    b0c6:	10 92 07 0a 	sts	0x0A07, r1	; 0x800a07 <player2+0x15>
player2.jumpcounter++ ; 
    b0ca:	80 91 0c 0a 	lds	r24, 0x0A0C	; 0x800a0c <player2+0x1a>
    b0ce:	8f 5f       	subi	r24, 0xFF	; 255
    b0d0:	80 93 0c 0a 	sts	0x0A0C, r24	; 0x800a0c <player2+0x1a>
TriggerFx(4,0xff,true);
    b0d4:	41 e0       	ldi	r20, 0x01	; 1
    b0d6:	6f ef       	ldi	r22, 0xFF	; 255
    b0d8:	84 e0       	ldi	r24, 0x04	; 4
    b0da:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
};
};

oldx = player2.x;
    b0de:	20 91 f2 09 	lds	r18, 0x09F2	; 0x8009f2 <player2>
    b0e2:	30 91 f3 09 	lds	r19, 0x09F3	; 0x8009f3 <player2+0x1>
    b0e6:	30 93 b9 09 	sts	0x09B9, r19	; 0x8009b9 <oldx+0x1>
    b0ea:	20 93 b8 09 	sts	0x09B8, r18	; 0x8009b8 <oldx>
oldy = player2.y;
    b0ee:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b0f2:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b0f6:	70 93 72 0a 	sts	0x0A72, r23	; 0x800a72 <oldy+0x1>
    b0fa:	60 93 71 0a 	sts	0x0A71, r22	; 0x800a71 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    b0fe:	80 91 0c 0a 	lds	r24, 0x0A0C	; 0x800a0c <player2+0x1a>
    b102:	9f ef       	ldi	r25, 0xFF	; 255
    b104:	98 0f       	add	r25, r24
    b106:	99 31       	cpi	r25, 0x19	; 25
    b108:	18 f4       	brcc	.+6      	; 0xb110 <moveplayer2+0x17e>
    b10a:	9c ef       	ldi	r25, 0xFC	; 252
    b10c:	90 93 05 0a 	sts	0x0A05, r25	; 0x800a05 <player2+0x13>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    b110:	96 ee       	ldi	r25, 0xE6	; 230
    b112:	98 0f       	add	r25, r24
    b114:	9b 30       	cpi	r25, 0x0B	; 11
    b116:	18 f4       	brcc	.+6      	; 0xb11e <moveplayer2+0x18c>
    b118:	9d ef       	ldi	r25, 0xFD	; 253
    b11a:	90 93 05 0a 	sts	0x0A05, r25	; 0x800a05 <player2+0x13>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    b11e:	9b ed       	ldi	r25, 0xDB	; 219
    b120:	98 0f       	add	r25, r24
    b122:	94 30       	cpi	r25, 0x04	; 4
    b124:	18 f4       	brcc	.+6      	; 0xb12c <moveplayer2+0x19a>
    b126:	9e ef       	ldi	r25, 0xFE	; 254
    b128:	90 93 05 0a 	sts	0x0A05, r25	; 0x800a05 <player2+0x13>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    b12c:	97 ed       	ldi	r25, 0xD7	; 215
    b12e:	98 0f       	add	r25, r24
    b130:	96 30       	cpi	r25, 0x06	; 6
    b132:	20 f4       	brcc	.+8      	; 0xb13c <moveplayer2+0x1aa>
    b134:	9f ef       	ldi	r25, 0xFF	; 255
    b136:	90 93 05 0a 	sts	0x0A05, r25	; 0x800a05 <player2+0x13>
    b13a:	02 c0       	rjmp	.+4      	; 0xb140 <moveplayer2+0x1ae>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    b13c:	88 23       	and	r24, r24
    b13e:	19 f0       	breq	.+6      	; 0xb146 <moveplayer2+0x1b4>
    b140:	8f 5f       	subi	r24, 0xFF	; 255
    b142:	80 93 0c 0a 	sts	0x0A0C, r24	; 0x800a0c <player2+0x1a>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    b146:	80 91 0c 0a 	lds	r24, 0x0A0C	; 0x800a0c <player2+0x1a>
    b14a:	8f 32       	cpi	r24, 0x2F	; 47
    b14c:	10 f0       	brcs	.+4      	; 0xb152 <moveplayer2+0x1c0>
    b14e:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <player2+0x1a>
player2.x = player2.x + player2.ximpulse;
    b152:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <player2+0x12>
    b156:	a9 01       	movw	r20, r18
    b158:	48 0f       	add	r20, r24
    b15a:	51 1d       	adc	r21, r1
    b15c:	87 fd       	sbrc	r24, 7
    b15e:	5a 95       	dec	r21
    b160:	ca 01       	movw	r24, r20
    b162:	50 93 f3 09 	sts	0x09F3, r21	; 0x8009f3 <player2+0x1>
    b166:	40 93 f2 09 	sts	0x09F2, r20	; 0x8009f2 <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    b16a:	40 91 05 0a 	lds	r20, 0x0A05	; 0x800a05 <player2+0x13>
    b16e:	64 0f       	add	r22, r20
    b170:	71 1d       	adc	r23, r1
    b172:	47 fd       	sbrc	r20, 7
    b174:	7a 95       	dec	r23
    b176:	6e 5f       	subi	r22, 0xFE	; 254
    b178:	7f 4f       	sbci	r23, 0xFF	; 255
    b17a:	70 93 f5 09 	sts	0x09F5, r23	; 0x8009f5 <player2+0x3>
    b17e:	60 93 f4 09 	sts	0x09F4, r22	; 0x8009f4 <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    b182:	28 17       	cp	r18, r24
    b184:	39 07       	cpc	r19, r25
    b186:	3c f4       	brge	.+14     	; 0xb196 <moveplayer2+0x204>
    b188:	20 91 0d 0a 	lds	r18, 0x0A0D	; 0x800a0d <player2+0x1b>
    b18c:	2f 5f       	subi	r18, 0xFF	; 255
    b18e:	20 93 0d 0a 	sts	0x0A0D, r18	; 0x800a0d <player2+0x1b>
    b192:	22 e7       	ldi	r18, 0x72	; 114
    b194:	09 c0       	rjmp	.+18     	; 0xb1a8 <moveplayer2+0x216>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    b196:	82 17       	cp	r24, r18
    b198:	93 07       	cpc	r25, r19
    b19a:	4c f4       	brge	.+18     	; 0xb1ae <moveplayer2+0x21c>
    b19c:	20 91 0d 0a 	lds	r18, 0x0A0D	; 0x800a0d <player2+0x1b>
    b1a0:	2f 5f       	subi	r18, 0xFF	; 255
    b1a2:	20 93 0d 0a 	sts	0x0A0D, r18	; 0x800a0d <player2+0x1b>
    b1a6:	2c e6       	ldi	r18, 0x6C	; 108
    b1a8:	20 93 00 0a 	sts	0x0A00, r18	; 0x800a00 <player2+0xe>
    b1ac:	05 c0       	rjmp	.+10     	; 0xb1b8 <moveplayer2+0x226>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    b1ae:	28 17       	cp	r18, r24
    b1b0:	39 07       	cpc	r19, r25
    b1b2:	11 f4       	brne	.+4      	; 0xb1b8 <moveplayer2+0x226>
    b1b4:	10 92 0d 0a 	sts	0x0A0D, r1	; 0x800a0d <player2+0x1b>
if (player2.aniframe > 0 ) player2.aniframe++;
    b1b8:	20 91 0d 0a 	lds	r18, 0x0A0D	; 0x800a0d <player2+0x1b>
    b1bc:	22 23       	and	r18, r18
    b1be:	19 f0       	breq	.+6      	; 0xb1c6 <moveplayer2+0x234>
    b1c0:	2f 5f       	subi	r18, 0xFF	; 255
    b1c2:	20 93 0d 0a 	sts	0x0A0D, r18	; 0x800a0d <player2+0x1b>
if (player2.aniframe>24) player2.aniframe = 1;
    b1c6:	20 91 0d 0a 	lds	r18, 0x0A0D	; 0x800a0d <player2+0x1b>
    b1ca:	29 31       	cpi	r18, 0x19	; 25
    b1cc:	18 f0       	brcs	.+6      	; 0xb1d4 <moveplayer2+0x242>
    b1ce:	21 e0       	ldi	r18, 0x01	; 1
    b1d0:	20 93 0d 0a 	sts	0x0A0D, r18	; 0x800a0d <player2+0x1b>
if(checkBanana(player2.x + 4, player2.y ,1) == 1)
    b1d4:	41 e0       	ldi	r20, 0x01	; 1
    b1d6:	50 e0       	ldi	r21, 0x00	; 0
    b1d8:	04 96       	adiw	r24, 0x04	; 4
    b1da:	0e 94 50 53 	call	0xa6a0	; 0xa6a0 <checkBanana>
    b1de:	01 97       	sbiw	r24, 0x01	; 1
    b1e0:	19 f4       	brne	.+6      	; 0xb1e8 <moveplayer2+0x256>
{
    player2.stuck = true;
    b1e2:	81 e0       	ldi	r24, 0x01	; 1
    b1e4:	80 93 fc 09 	sts	0x09FC, r24	; 0x8009fc <player2+0xa>
} 
if(player2.bananaBool == true)
    b1e8:	80 91 0a 0a 	lds	r24, 0x0A0A	; 0x800a0a <player2+0x18>
    b1ec:	88 23       	and	r24, r24
    b1ee:	81 f0       	breq	.+32     	; 0xb210 <moveplayer2+0x27e>
{
makeBanana2(player2.x + 4, player2.y,scrolltiles);
    b1f0:	40 91 8f 0a 	lds	r20, 0x0A8F	; 0x800a8f <scrolltiles>
    b1f4:	50 e0       	ldi	r21, 0x00	; 0
    b1f6:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b1fa:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b1fe:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b202:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b206:	04 96       	adiw	r24, 0x04	; 4
    b208:	0e 94 f8 52 	call	0xa5f0	; 0xa5f0 <makeBanana2>
player2.bananaBool = false;
    b20c:	10 92 0a 0a 	sts	0x0A0A, r1	; 0x800a0a <player2+0x18>
}
checkcollide( player2.x, player2.y - 4 ,1);
    b210:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b214:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b218:	64 50       	subi	r22, 0x04	; 4
    b21a:	71 09       	sbc	r23, r1
    b21c:	41 e0       	ldi	r20, 0x01	; 1
    b21e:	50 e0       	ldi	r21, 0x00	; 0
    b220:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b224:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b228:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3);
    b22c:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b230:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b234:	64 50       	subi	r22, 0x04	; 4
    b236:	71 09       	sbc	r23, r1
    b238:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b23c:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b240:	43 e0       	ldi	r20, 0x03	; 3
    b242:	50 e0       	ldi	r21, 0x00	; 0
    b244:	03 97       	sbiw	r24, 0x03	; 3
    b246:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3);
    b24a:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b24e:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b252:	64 50       	subi	r22, 0x04	; 4
    b254:	71 09       	sbc	r23, r1
    b256:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b25a:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b25e:	43 e0       	ldi	r20, 0x03	; 3
    b260:	50 e0       	ldi	r21, 0x00	; 0
    b262:	04 96       	adiw	r24, 0x04	; 4
    b264:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
    b268:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b26c:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b270:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    b274:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    b278:	68 17       	cp	r22, r24
    b27a:	79 07       	cpc	r23, r25
    b27c:	54 f4       	brge	.+20     	; 0xb292 <moveplayer2+0x300>
    b27e:	66 51       	subi	r22, 0x16	; 22
    b280:	71 09       	sbc	r23, r1
    b282:	42 e0       	ldi	r20, 0x02	; 2
    b284:	50 e0       	ldi	r21, 0x00	; 0
    b286:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b28a:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b28e:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    b292:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b296:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b29a:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    b29e:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    b2a2:	86 17       	cp	r24, r22
    b2a4:	97 07       	cpc	r25, r23
    b2a6:	8c f5       	brge	.+98     	; 0xb30a <moveplayer2+0x378>
    b2a8:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <player2+0x11>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    b2ac:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b2b0:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b2b4:	40 e0       	ldi	r20, 0x00	; 0
    b2b6:	50 e0       	ldi	r21, 0x00	; 0
    b2b8:	03 97       	sbiw	r24, 0x03	; 3
    b2ba:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b2be:	80 ff       	sbrs	r24, 0
    b2c0:	15 c0       	rjmp	.+42     	; 0xb2ec <moveplayer2+0x35a>
    b2c2:	80 91 f4 09 	lds	r24, 0x09F4	; 0x8009f4 <player2+0x2>
    b2c6:	90 91 f5 09 	lds	r25, 0x09F5	; 0x8009f5 <player2+0x3>
    b2ca:	97 fd       	sbrc	r25, 7
    b2cc:	0f 96       	adiw	r24, 0x0f	; 15
    b2ce:	80 7f       	andi	r24, 0xF0	; 240
    b2d0:	01 97       	sbiw	r24, 0x01	; 1
    b2d2:	90 93 f5 09 	sts	0x09F5, r25	; 0x8009f5 <player2+0x3>
    b2d6:	80 93 f4 09 	sts	0x09F4, r24	; 0x8009f4 <player2+0x2>
    b2da:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <player2+0x14>
    b2de:	81 e0       	ldi	r24, 0x01	; 1
    b2e0:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <player2+0x11>
    b2e4:	87 e7       	ldi	r24, 0x77	; 119
    b2e6:	80 93 ff 09 	sts	0x09FF, r24	; 0x8009ff <player2+0xd>
    b2ea:	0f c0       	rjmp	.+30     	; 0xb30a <moveplayer2+0x378>
    b2ec:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b2f0:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b2f4:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b2f8:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b2fc:	40 e0       	ldi	r20, 0x00	; 0
    b2fe:	50 e0       	ldi	r21, 0x00	; 0
    b300:	04 96       	adiw	r24, 0x04	; 4
    b302:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b306:	80 fd       	sbrc	r24, 0
    b308:	dc cf       	rjmp	.-72     	; 0xb2c2 <moveplayer2+0x330>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b30a:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b30e:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b312:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    b316:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    b31a:	68 17       	cp	r22, r24
    b31c:	79 07       	cpc	r23, r25
    b31e:	74 f5       	brge	.+92     	; 0xb37c <moveplayer2+0x3ea>
    b320:	65 51       	subi	r22, 0x15	; 21
    b322:	71 09       	sbc	r23, r1
    b324:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b328:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b32c:	40 e0       	ldi	r20, 0x00	; 0
    b32e:	50 e0       	ldi	r21, 0x00	; 0
    b330:	03 97       	sbiw	r24, 0x03	; 3
    b332:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b336:	80 ff       	sbrs	r24, 0
    b338:	10 c0       	rjmp	.+32     	; 0xb35a <moveplayer2+0x3c8>
    b33a:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    b33e:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    b342:	90 93 f5 09 	sts	0x09F5, r25	; 0x8009f5 <player2+0x3>
    b346:	80 93 f4 09 	sts	0x09F4, r24	; 0x8009f4 <player2+0x2>
    b34a:	10 92 0c 0a 	sts	0x0A0C, r1	; 0x800a0c <player2+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    b34e:	41 e0       	ldi	r20, 0x01	; 1
    b350:	6f ef       	ldi	r22, 0xFF	; 255
    b352:	85 e0       	ldi	r24, 0x05	; 5
    b354:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    b358:	11 c0       	rjmp	.+34     	; 0xb37c <moveplayer2+0x3ea>
checkcollide( player2.x +4, player2.y - 4 ,3);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b35a:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b35e:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b362:	65 51       	subi	r22, 0x15	; 21
    b364:	71 09       	sbc	r23, r1
    b366:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b36a:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b36e:	40 e0       	ldi	r20, 0x00	; 0
    b370:	50 e0       	ldi	r21, 0x00	; 0
    b372:	04 96       	adiw	r24, 0x04	; 4
    b374:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b378:	80 fd       	sbrc	r24, 0
    b37a:	df cf       	rjmp	.-66     	; 0xb33a <moveplayer2+0x3a8>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0 )&1)  player2.x = oldx;  
    b37c:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b380:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b384:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b388:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b38c:	28 17       	cp	r18, r24
    b38e:	39 07       	cpc	r19, r25
    b390:	3c f5       	brge	.+78     	; 0xb3e0 <moveplayer2+0x44e>
    b392:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b396:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b39a:	63 50       	subi	r22, 0x03	; 3
    b39c:	71 09       	sbc	r23, r1
    b39e:	40 e0       	ldi	r20, 0x00	; 0
    b3a0:	50 e0       	ldi	r21, 0x00	; 0
    b3a2:	05 96       	adiw	r24, 0x05	; 5
    b3a4:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b3a8:	80 ff       	sbrs	r24, 0
    b3aa:	09 c0       	rjmp	.+18     	; 0xb3be <moveplayer2+0x42c>
    b3ac:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <oldx>
    b3b0:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <oldx+0x1>
    b3b4:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    b3b8:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
    b3bc:	11 c0       	rjmp	.+34     	; 0xb3e0 <moveplayer2+0x44e>
    b3be:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b3c2:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b3c6:	64 51       	subi	r22, 0x14	; 20
    b3c8:	71 09       	sbc	r23, r1
    b3ca:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b3ce:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b3d2:	40 e0       	ldi	r20, 0x00	; 0
    b3d4:	50 e0       	ldi	r21, 0x00	; 0
    b3d6:	05 96       	adiw	r24, 0x05	; 5
    b3d8:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b3dc:	80 fd       	sbrc	r24, 0
    b3de:	e6 cf       	rjmp	.-52     	; 0xb3ac <moveplayer2+0x41a>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0 )&1)  player2.x = oldx; 
    b3e0:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b3e4:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b3e8:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b3ec:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b3f0:	82 17       	cp	r24, r18
    b3f2:	93 07       	cpc	r25, r19
    b3f4:	3c f5       	brge	.+78     	; 0xb444 <moveplayer2+0x4b2>
    b3f6:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b3fa:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b3fe:	63 50       	subi	r22, 0x03	; 3
    b400:	71 09       	sbc	r23, r1
    b402:	40 e0       	ldi	r20, 0x00	; 0
    b404:	50 e0       	ldi	r21, 0x00	; 0
    b406:	04 97       	sbiw	r24, 0x04	; 4
    b408:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b40c:	80 ff       	sbrs	r24, 0
    b40e:	09 c0       	rjmp	.+18     	; 0xb422 <moveplayer2+0x490>
    b410:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <oldx>
    b414:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <oldx+0x1>
    b418:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    b41c:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
    b420:	11 c0       	rjmp	.+34     	; 0xb444 <moveplayer2+0x4b2>
    b422:	60 91 f4 09 	lds	r22, 0x09F4	; 0x8009f4 <player2+0x2>
    b426:	70 91 f5 09 	lds	r23, 0x09F5	; 0x8009f5 <player2+0x3>
    b42a:	64 51       	subi	r22, 0x14	; 20
    b42c:	71 09       	sbc	r23, r1
    b42e:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b432:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b436:	40 e0       	ldi	r20, 0x00	; 0
    b438:	50 e0       	ldi	r21, 0x00	; 0
    b43a:	04 97       	sbiw	r24, 0x04	; 4
    b43c:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b440:	80 fd       	sbrc	r24, 0
    b442:	e6 cf       	rjmp	.-52     	; 0xb410 <moveplayer2+0x47e>
player2.ximpulse = 0;    
    b444:	10 92 04 0a 	sts	0x0A04, r1	; 0x800a04 <player2+0x12>
player2.yimpulse = 0;
    b448:	10 92 05 0a 	sts	0x0A05, r1	; 0x800a05 <player2+0x13>
if ( player2.x < 8 ) player2.x = player.x;   // Increase time penalty herer
    b44c:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b450:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b454:	08 97       	sbiw	r24, 0x08	; 8
    b456:	44 f4       	brge	.+16     	; 0xb468 <moveplayer2+0x4d6>
    b458:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    b45c:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    b460:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    b464:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
if ( player2.x > 232 ) player2.x = player.x;    
    b468:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    b46c:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    b470:	89 3e       	cpi	r24, 0xE9	; 233
    b472:	91 05       	cpc	r25, r1
    b474:	b4 f0       	brlt	.+44     	; 0xb4a2 <moveplayer2+0x510>
    b476:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    b47a:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    b47e:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    b482:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
    b486:	08 95       	ret

if ( !(joy&BTN_B) ) {
player2.bpressed = false;
};
if ( joy&BTN_B && player2.touchground) {
	if(bananaCount > 0 && player2.bpressed == false)
    b488:	30 91 08 0a 	lds	r19, 0x0A08	; 0x800a08 <player2+0x16>
    b48c:	31 11       	cpse	r19, r1
    b48e:	e8 cd       	rjmp	.-1072   	; 0xb060 <moveplayer2+0xce>
	{
	bananaCount = bananaCount - 1;
    b490:	21 50       	subi	r18, 0x01	; 1
    b492:	20 93 9c 08 	sts	0x089C, r18	; 0x80089c <bananaCount>
    player2.bananaBool = true;
    b496:	21 e0       	ldi	r18, 0x01	; 1
    b498:	20 93 0a 0a 	sts	0x0A0A, r18	; 0x800a0a <player2+0x18>
	player2.bpressed = true;
    b49c:	20 93 08 0a 	sts	0x0A08, r18	; 0x800a08 <player2+0x16>
    b4a0:	df cd       	rjmp	.-1090   	; 0xb060 <moveplayer2+0xce>
    b4a2:	08 95       	ret

0000b4a4 <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b4a4:	cf 93       	push	r28
    b4a6:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b4a8:	41 ea       	ldi	r20, 0xA1	; 161
    b4aa:	58 e7       	ldi	r21, 0x78	; 120
    b4ac:	60 e2       	ldi	r22, 0x20	; 32
    b4ae:	8c 2f       	mov	r24, r28
    b4b0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    b4b4:	cf 5f       	subi	r28, 0xFF	; 255
    b4b6:	c0 32       	cpi	r28, 0x20	; 32
    b4b8:	b9 f7       	brne	.-18     	; 0xb4a8 <setheadline+0x4>
}
    b4ba:	cf 91       	pop	r28
    b4bc:	08 95       	ret

0000b4be <drawmonster>:

void drawmonster()
{
    b4be:	0f 93       	push	r16
if (owl.onscreen)
    b4c0:	80 91 18 0a 	lds	r24, 0x0A18	; 0x800a18 <owl+0x9>
    b4c4:	88 23       	and	r24, r24
    b4c6:	09 f4       	brne	.+2      	; 0xb4ca <drawmonster+0xc>
    b4c8:	43 c0       	rjmp	.+134    	; 0xb550 <drawmonster+0x92>
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
    b4ca:	80 91 19 0a 	lds	r24, 0x0A19	; 0x800a19 <owl+0xa>
    b4ce:	81 11       	cpse	r24, r1
    b4d0:	0e c0       	rjmp	.+28     	; 0xb4ee <drawmonster+0x30>
    b4d2:	40 e0       	ldi	r20, 0x00	; 0
    b4d4:	6b e0       	ldi	r22, 0x0B	; 11
    b4d6:	77 e4       	ldi	r23, 0x47	; 71
    b4d8:	86 e0       	ldi	r24, 0x06	; 6
    b4da:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
    b4de:	02 e0       	ldi	r16, 0x02	; 2
    b4e0:	22 e0       	ldi	r18, 0x02	; 2
    b4e2:	40 91 11 0a 	lds	r20, 0x0A11	; 0x800a11 <owl+0x2>
    b4e6:	60 91 0f 0a 	lds	r22, 0x0A0F	; 0x800a0f <owl>
    b4ea:	86 e0       	ldi	r24, 0x06	; 6
    b4ec:	46 c0       	rjmp	.+140    	; 0xb57a <drawmonster+0xbc>
if (aniframe < 10 ) 
    b4ee:	90 91 70 0a 	lds	r25, 0x0A70	; 0x800a70 <aniframe>
    b4f2:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x19>
    b4f6:	9a 30       	cpi	r25, 0x0A	; 10
    b4f8:	90 f4       	brcc	.+36     	; 0xb51e <drawmonster+0x60>
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b4fa:	02 e0       	ldi	r16, 0x02	; 2
    b4fc:	22 e0       	ldi	r18, 0x02	; 2
    b4fe:	40 91 11 0a 	lds	r20, 0x0A11	; 0x800a11 <owl+0x2>
    b502:	60 91 0f 0a 	lds	r22, 0x0A0F	; 0x800a0f <owl>
if (owl.onscreen)
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
{
    if(player.killer == true)
    b506:	88 23       	and	r24, r24
    b508:	29 f0       	breq	.+10     	; 0xb514 <drawmonster+0x56>
    {
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b50a:	86 e0       	ldi	r24, 0x06	; 6
    b50c:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,0); 
    b510:	40 e0       	ldi	r20, 0x00	; 0
    b512:	12 c0       	rjmp	.+36     	; 0xb538 <drawmonster+0x7a>
    }
    else{
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b514:	86 e0       	ldi	r24, 0x06	; 6
    b516:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    b51a:	40 e0       	ldi	r20, 0x00	; 0
    b51c:	14 c0       	rjmp	.+40     	; 0xb546 <drawmonster+0x88>
    b51e:	60 91 0f 0a 	lds	r22, 0x0A0F	; 0x800a0f <owl>
}
else
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b522:	61 50       	subi	r22, 0x01	; 1
    b524:	02 e0       	ldi	r16, 0x02	; 2
    b526:	22 e0       	ldi	r18, 0x02	; 2
    b528:	40 91 11 0a 	lds	r20, 0x0A11	; 0x800a11 <owl+0x2>
    MapSprite2(owlIndex , owl0 ,0); 
    }
}
else
{
    if(player.killer == true)
    b52c:	88 23       	and	r24, r24
    b52e:	39 f0       	breq	.+14     	; 0xb53e <drawmonster+0x80>
    {
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b530:	86 e0       	ldi	r24, 0x06	; 6
    b532:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,1);
    b536:	41 e0       	ldi	r20, 0x01	; 1
    b538:	6b e0       	ldi	r22, 0x0B	; 11
    b53a:	77 e4       	ldi	r23, 0x47	; 71
    b53c:	06 c0       	rjmp	.+12     	; 0xb54a <drawmonster+0x8c>
    }
    else{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b53e:	86 e0       	ldi	r24, 0x06	; 6
    b540:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    b544:	41 e0       	ldi	r20, 0x01	; 1
    b546:	61 e1       	ldi	r22, 0x11	; 17
    b548:	77 e4       	ldi	r23, 0x47	; 71
    b54a:	86 e0       	ldi	r24, 0x06	; 6
    b54c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
    }
};
};
    
if (blob.onscreen)
    b550:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0x9>
    b554:	88 23       	and	r24, r24
    b556:	69 f1       	breq	.+90     	; 0xb5b2 <drawmonster+0xf4>
{
if (!blob.alive) { MapSprite2(blobIndex , blob1 ,0);  MoveSprite(blobIndex ,blob.x, blob.y  ,2 ,2);return;}; 
    b558:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <blob+0xa>
    b55c:	81 11       	cpse	r24, r1
    b55e:	10 c0       	rjmp	.+32     	; 0xb580 <drawmonster+0xc2>
    b560:	40 e0       	ldi	r20, 0x00	; 0
    b562:	63 ef       	ldi	r22, 0xF3	; 243
    b564:	76 e4       	ldi	r23, 0x46	; 70
    b566:	88 e0       	ldi	r24, 0x08	; 8
    b568:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
    b56c:	02 e0       	ldi	r16, 0x02	; 2
    b56e:	22 e0       	ldi	r18, 0x02	; 2
    b570:	40 91 59 09 	lds	r20, 0x0959	; 0x800959 <blob+0x2>
    b574:	60 91 57 09 	lds	r22, 0x0957	; 0x800957 <blob>
    b578:	88 e0       	ldi	r24, 0x08	; 8
    b57a:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    b57e:	19 c0       	rjmp	.+50     	; 0xb5b2 <drawmonster+0xf4>
if (aniframe < 10 ) 
    b580:	80 91 70 0a 	lds	r24, 0x0A70	; 0x800a70 <aniframe>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b584:	02 e0       	ldi	r16, 0x02	; 2
    b586:	22 e0       	ldi	r18, 0x02	; 2
    b588:	40 91 59 09 	lds	r20, 0x0959	; 0x800959 <blob+0x2>
    b58c:	60 91 57 09 	lds	r22, 0x0957	; 0x800957 <blob>
};
    
if (blob.onscreen)
{
if (!blob.alive) { MapSprite2(blobIndex , blob1 ,0);  MoveSprite(blobIndex ,blob.x, blob.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    b590:	8a 30       	cpi	r24, 0x0A	; 10
    b592:	28 f4       	brcc	.+10     	; 0xb59e <drawmonster+0xe0>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b594:	86 e0       	ldi	r24, 0x06	; 6
    b596:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,0); 
    b59a:	40 e0       	ldi	r20, 0x00	; 0
    b59c:	04 c0       	rjmp	.+8      	; 0xb5a6 <drawmonster+0xe8>
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    b59e:	86 e0       	ldi	r24, 0x06	; 6
    b5a0:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,1); 
    b5a4:	41 e0       	ldi	r20, 0x01	; 1
    b5a6:	69 ef       	ldi	r22, 0xF9	; 249
    b5a8:	76 e4       	ldi	r23, 0x46	; 70
    b5aa:	86 e0       	ldi	r24, 0x06	; 6
};
};    
   
}
    b5ac:	0f 91       	pop	r16
    MapSprite2(owlIndex ,blob0 ,0); 
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    MapSprite2(owlIndex ,blob0 ,1); 
    b5ae:	0c 94 48 4e 	jmp	0x9c90	; 0x9c90 <MapSprite2>
};
};    
   
}
    b5b2:	0f 91       	pop	r16
    b5b4:	08 95       	ret

0000b5b6 <movemonster>:

void movemonster()
{
    b5b6:	0f 93       	push	r16
if (owl.onscreen) 
    b5b8:	80 91 18 0a 	lds	r24, 0x0A18	; 0x800a18 <owl+0x9>
    b5bc:	88 23       	and	r24, r24
    b5be:	09 f4       	brne	.+2      	; 0xb5c2 <movemonster+0xc>
    b5c0:	c1 c0       	rjmp	.+386    	; 0xb744 <movemonster+0x18e>
{
 
    owl.x = owl.x2 >> 2;
    b5c2:	80 91 13 0a 	lds	r24, 0x0A13	; 0x800a13 <owl+0x4>
    b5c6:	90 91 14 0a 	lds	r25, 0x0A14	; 0x800a14 <owl+0x5>
    oldx = owl.x;
    b5ca:	9c 01       	movw	r18, r24
    b5cc:	35 95       	asr	r19
    b5ce:	27 95       	ror	r18
    b5d0:	35 95       	asr	r19
    b5d2:	27 95       	ror	r18
    b5d4:	30 93 b9 09 	sts	0x09B9, r19	; 0x8009b9 <oldx+0x1>
    b5d8:	20 93 b8 09 	sts	0x09B8, r18	; 0x8009b8 <oldx>
    oldy = owl.y; 
    b5dc:	20 91 11 0a 	lds	r18, 0x0A11	; 0x800a11 <owl+0x2>
    b5e0:	30 91 12 0a 	lds	r19, 0x0A12	; 0x800a12 <owl+0x3>
    b5e4:	30 93 72 0a 	sts	0x0A72, r19	; 0x800a72 <oldy+0x1>
    b5e8:	20 93 71 0a 	sts	0x0A71, r18	; 0x800a71 <oldy>
    oldx2 = owl.x2;
    b5ec:	90 93 6b 0a 	sts	0x0A6B, r25	; 0x800a6b <oldx2+0x1>
    b5f0:	80 93 6a 0a 	sts	0x0A6A, r24	; 0x800a6a <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    b5f4:	b9 01       	movw	r22, r18
    b5f6:	6e 5f       	subi	r22, 0xFE	; 254
    b5f8:	7f 4f       	sbci	r23, 0xFF	; 255
    b5fa:	40 91 17 0a 	lds	r20, 0x0A17	; 0x800a17 <owl+0x8>
    b5fe:	64 0f       	add	r22, r20
    b600:	71 1d       	adc	r23, r1
    b602:	47 fd       	sbrc	r20, 7
    b604:	7a 95       	dec	r23
    b606:	70 93 12 0a 	sts	0x0A12, r23	; 0x800a12 <owl+0x3>
    b60a:	60 93 11 0a 	sts	0x0A11, r22	; 0x800a11 <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    b60e:	40 91 16 0a 	lds	r20, 0x0A16	; 0x800a16 <owl+0x7>
    b612:	84 0f       	add	r24, r20
    b614:	91 1d       	adc	r25, r1
    b616:	47 fd       	sbrc	r20, 7
    b618:	9a 95       	dec	r25
    b61a:	90 93 14 0a 	sts	0x0A14, r25	; 0x800a14 <owl+0x5>
    b61e:	80 93 13 0a 	sts	0x0A13, r24	; 0x800a13 <owl+0x4>
    owl.x = owl.x2 >> 2;
    b622:	95 95       	asr	r25
    b624:	87 95       	ror	r24
    b626:	95 95       	asr	r25
    b628:	87 95       	ror	r24
    b62a:	90 93 10 0a 	sts	0x0A10, r25	; 0x800a10 <owl+0x1>
    b62e:	80 93 0f 0a 	sts	0x0A0F, r24	; 0x800a0f <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    b632:	26 17       	cp	r18, r22
    b634:	37 07       	cpc	r19, r23
    b636:	34 f5       	brge	.+76     	; 0xb684 <movemonster+0xce>
    b638:	60 5f       	subi	r22, 0xF0	; 240
    b63a:	7f 4f       	sbci	r23, 0xFF	; 255
    b63c:	40 e0       	ldi	r20, 0x00	; 0
    b63e:	50 e0       	ldi	r21, 0x00	; 0
    b640:	03 96       	adiw	r24, 0x03	; 3
    b642:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b646:	80 ff       	sbrs	r24, 0
    b648:	0c c0       	rjmp	.+24     	; 0xb662 <movemonster+0xac>
    b64a:	80 91 11 0a 	lds	r24, 0x0A11	; 0x800a11 <owl+0x2>
    b64e:	90 91 12 0a 	lds	r25, 0x0A12	; 0x800a12 <owl+0x3>
    b652:	97 fd       	sbrc	r25, 7
    b654:	0f 96       	adiw	r24, 0x0f	; 15
    b656:	80 7f       	andi	r24, 0xF0	; 240
    b658:	90 93 12 0a 	sts	0x0A12, r25	; 0x800a12 <owl+0x3>
    b65c:	80 93 11 0a 	sts	0x0A11, r24	; 0x800a11 <owl+0x2>
    b660:	11 c0       	rjmp	.+34     	; 0xb684 <movemonster+0xce>
    b662:	60 91 11 0a 	lds	r22, 0x0A11	; 0x800a11 <owl+0x2>
    b666:	70 91 12 0a 	lds	r23, 0x0A12	; 0x800a12 <owl+0x3>
    b66a:	60 5f       	subi	r22, 0xF0	; 240
    b66c:	7f 4f       	sbci	r23, 0xFF	; 255
    b66e:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    b672:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    b676:	40 e0       	ldi	r20, 0x00	; 0
    b678:	50 e0       	ldi	r21, 0x00	; 0
    b67a:	0c 96       	adiw	r24, 0x0c	; 12
    b67c:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b680:	80 fd       	sbrc	r24, 0
    b682:	e3 cf       	rjmp	.-58     	; 0xb64a <movemonster+0x94>
    if (owl.x > oldx ) if (checkcollide( owl.x + 12, owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    b684:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    b688:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    b68c:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b690:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b694:	28 17       	cp	r18, r24
    b696:	39 07       	cpc	r19, r25
    b698:	c4 f4       	brge	.+48     	; 0xb6ca <movemonster+0x114>
    b69a:	60 91 11 0a 	lds	r22, 0x0A11	; 0x800a11 <owl+0x2>
    b69e:	70 91 12 0a 	lds	r23, 0x0A12	; 0x800a12 <owl+0x3>
    b6a2:	68 5f       	subi	r22, 0xF8	; 248
    b6a4:	7f 4f       	sbci	r23, 0xFF	; 255
    b6a6:	40 e0       	ldi	r20, 0x00	; 0
    b6a8:	50 e0       	ldi	r21, 0x00	; 0
    b6aa:	0c 96       	adiw	r24, 0x0c	; 12
    b6ac:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b6b0:	80 ff       	sbrs	r24, 0
    b6b2:	0b c0       	rjmp	.+22     	; 0xb6ca <movemonster+0x114>
    b6b4:	80 91 6a 0a 	lds	r24, 0x0A6A	; 0x800a6a <oldx2>
    b6b8:	90 91 6b 0a 	lds	r25, 0x0A6B	; 0x800a6b <oldx2+0x1>
    b6bc:	90 93 14 0a 	sts	0x0A14, r25	; 0x800a14 <owl+0x5>
    b6c0:	80 93 13 0a 	sts	0x0A13, r24	; 0x800a13 <owl+0x4>
    b6c4:	8f ef       	ldi	r24, 0xFF	; 255
    b6c6:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <owl+0x7>
    if (owl.x < oldx ) if (checkcollide( owl.x + 2 , owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    b6ca:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    b6ce:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    b6d2:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b6d6:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b6da:	82 17       	cp	r24, r18
    b6dc:	93 07       	cpc	r25, r19
    b6de:	c4 f4       	brge	.+48     	; 0xb710 <movemonster+0x15a>
    b6e0:	60 91 11 0a 	lds	r22, 0x0A11	; 0x800a11 <owl+0x2>
    b6e4:	70 91 12 0a 	lds	r23, 0x0A12	; 0x800a12 <owl+0x3>
    b6e8:	68 5f       	subi	r22, 0xF8	; 248
    b6ea:	7f 4f       	sbci	r23, 0xFF	; 255
    b6ec:	40 e0       	ldi	r20, 0x00	; 0
    b6ee:	50 e0       	ldi	r21, 0x00	; 0
    b6f0:	02 96       	adiw	r24, 0x02	; 2
    b6f2:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b6f6:	80 ff       	sbrs	r24, 0
    b6f8:	0b c0       	rjmp	.+22     	; 0xb710 <movemonster+0x15a>
    b6fa:	80 91 6a 0a 	lds	r24, 0x0A6A	; 0x800a6a <oldx2>
    b6fe:	90 91 6b 0a 	lds	r25, 0x0A6B	; 0x800a6b <oldx2+0x1>
    b702:	90 93 14 0a 	sts	0x0A14, r25	; 0x800a14 <owl+0x5>
    b706:	80 93 13 0a 	sts	0x0A13, r24	; 0x800a13 <owl+0x4>
    b70a:	81 e0       	ldi	r24, 0x01	; 1
    b70c:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); owl.onscreen = false;};
    b710:	80 91 11 0a 	lds	r24, 0x0A11	; 0x800a11 <owl+0x2>
    b714:	90 91 12 0a 	lds	r25, 0x0A12	; 0x800a12 <owl+0x3>
    b718:	81 3f       	cpi	r24, 0xF1	; 241
    b71a:	91 05       	cpc	r25, r1
    b71c:	40 f4       	brcc	.+16     	; 0xb72e <movemonster+0x178>
    b71e:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    b722:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    b726:	40 96       	adiw	r24, 0x10	; 16
    b728:	81 30       	cpi	r24, 0x01	; 1
    b72a:	91 40       	sbci	r25, 0x01	; 1
    b72c:	58 f0       	brcs	.+22     	; 0xb744 <movemonster+0x18e>
    b72e:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <MonsteronScreen>
    b732:	02 e0       	ldi	r16, 0x02	; 2
    b734:	22 e0       	ldi	r18, 0x02	; 2
    b736:	4c ee       	ldi	r20, 0xEC	; 236
    b738:	6c ee       	ldi	r22, 0xEC	; 236
    b73a:	86 e0       	ldi	r24, 0x06	; 6
    b73c:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    b740:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <owl+0x9>
}
if (blob.onscreen) 
    b744:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0x9>
    b748:	88 23       	and	r24, r24
    b74a:	09 f4       	brne	.+2      	; 0xb74e <movemonster+0x198>
    b74c:	c2 c0       	rjmp	.+388    	; 0xb8d2 <movemonster+0x31c>
{
     
    blob.x = blob.x2 >> 2;
    b74e:	80 91 5b 09 	lds	r24, 0x095B	; 0x80095b <blob+0x4>
    b752:	90 91 5c 09 	lds	r25, 0x095C	; 0x80095c <blob+0x5>
    oldx = blob.x;
    b756:	9c 01       	movw	r18, r24
    b758:	35 95       	asr	r19
    b75a:	27 95       	ror	r18
    b75c:	35 95       	asr	r19
    b75e:	27 95       	ror	r18
    b760:	30 93 b9 09 	sts	0x09B9, r19	; 0x8009b9 <oldx+0x1>
    b764:	20 93 b8 09 	sts	0x09B8, r18	; 0x8009b8 <oldx>
    oldy = blob.y; 
    b768:	20 91 59 09 	lds	r18, 0x0959	; 0x800959 <blob+0x2>
    b76c:	30 91 5a 09 	lds	r19, 0x095A	; 0x80095a <blob+0x3>
    b770:	30 93 72 0a 	sts	0x0A72, r19	; 0x800a72 <oldy+0x1>
    b774:	20 93 71 0a 	sts	0x0A71, r18	; 0x800a71 <oldy>
    oldx2 = blob.x2;
    b778:	90 93 6b 0a 	sts	0x0A6B, r25	; 0x800a6b <oldx2+0x1>
    b77c:	80 93 6a 0a 	sts	0x0A6A, r24	; 0x800a6a <oldx2>
    blob.y = blob.y  + gravity + blob.yimpulse;
    b780:	b9 01       	movw	r22, r18
    b782:	6e 5f       	subi	r22, 0xFE	; 254
    b784:	7f 4f       	sbci	r23, 0xFF	; 255
    b786:	40 91 5f 09 	lds	r20, 0x095F	; 0x80095f <blob+0x8>
    b78a:	64 0f       	add	r22, r20
    b78c:	71 1d       	adc	r23, r1
    b78e:	47 fd       	sbrc	r20, 7
    b790:	7a 95       	dec	r23
    b792:	70 93 5a 09 	sts	0x095A, r23	; 0x80095a <blob+0x3>
    b796:	60 93 59 09 	sts	0x0959, r22	; 0x800959 <blob+0x2>
    blob.x2 = blob.x2 + blob.ximpulse;
    b79a:	40 91 5e 09 	lds	r20, 0x095E	; 0x80095e <blob+0x7>
    b79e:	84 0f       	add	r24, r20
    b7a0:	91 1d       	adc	r25, r1
    b7a2:	47 fd       	sbrc	r20, 7
    b7a4:	9a 95       	dec	r25
    b7a6:	90 93 5c 09 	sts	0x095C, r25	; 0x80095c <blob+0x5>
    b7aa:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x4>
    blob.x = blob.x2 >> 2;
    b7ae:	95 95       	asr	r25
    b7b0:	87 95       	ror	r24
    b7b2:	95 95       	asr	r25
    b7b4:	87 95       	ror	r24
    b7b6:	90 93 58 09 	sts	0x0958, r25	; 0x800958 <blob+0x1>
    b7ba:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <blob>
    if (blob.y > oldy ) if (checkcollide( blob.x + 3 , blob.y + 16,     0 )&1 || checkcollide( blob.x + 12 , blob.y +16    ,0 )&1) { blob.y = ( blob.y / 16 ) * 16   ;};
    b7be:	26 17       	cp	r18, r22
    b7c0:	37 07       	cpc	r19, r23
    b7c2:	34 f5       	brge	.+76     	; 0xb810 <movemonster+0x25a>
    b7c4:	60 5f       	subi	r22, 0xF0	; 240
    b7c6:	7f 4f       	sbci	r23, 0xFF	; 255
    b7c8:	40 e0       	ldi	r20, 0x00	; 0
    b7ca:	50 e0       	ldi	r21, 0x00	; 0
    b7cc:	03 96       	adiw	r24, 0x03	; 3
    b7ce:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b7d2:	80 ff       	sbrs	r24, 0
    b7d4:	0c c0       	rjmp	.+24     	; 0xb7ee <movemonster+0x238>
    b7d6:	80 91 59 09 	lds	r24, 0x0959	; 0x800959 <blob+0x2>
    b7da:	90 91 5a 09 	lds	r25, 0x095A	; 0x80095a <blob+0x3>
    b7de:	97 fd       	sbrc	r25, 7
    b7e0:	0f 96       	adiw	r24, 0x0f	; 15
    b7e2:	80 7f       	andi	r24, 0xF0	; 240
    b7e4:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <blob+0x3>
    b7e8:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <blob+0x2>
    b7ec:	11 c0       	rjmp	.+34     	; 0xb810 <movemonster+0x25a>
    b7ee:	60 91 59 09 	lds	r22, 0x0959	; 0x800959 <blob+0x2>
    b7f2:	70 91 5a 09 	lds	r23, 0x095A	; 0x80095a <blob+0x3>
    b7f6:	60 5f       	subi	r22, 0xF0	; 240
    b7f8:	7f 4f       	sbci	r23, 0xFF	; 255
    b7fa:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    b7fe:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    b802:	40 e0       	ldi	r20, 0x00	; 0
    b804:	50 e0       	ldi	r21, 0x00	; 0
    b806:	0c 96       	adiw	r24, 0x0c	; 12
    b808:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b80c:	80 fd       	sbrc	r24, 0
    b80e:	e3 cf       	rjmp	.-58     	; 0xb7d6 <movemonster+0x220>
    if (blob.x > oldx ) if (!(checkcollide( blob.x + 17, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   -2;};
    b810:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    b814:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    b818:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b81c:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b820:	28 17       	cp	r18, r24
    b822:	39 07       	cpc	r19, r25
    b824:	c4 f4       	brge	.+48     	; 0xb856 <movemonster+0x2a0>
    b826:	60 91 59 09 	lds	r22, 0x0959	; 0x800959 <blob+0x2>
    b82a:	70 91 5a 09 	lds	r23, 0x095A	; 0x80095a <blob+0x3>
    b82e:	6f 5e       	subi	r22, 0xEF	; 239
    b830:	7f 4f       	sbci	r23, 0xFF	; 255
    b832:	40 e0       	ldi	r20, 0x00	; 0
    b834:	50 e0       	ldi	r21, 0x00	; 0
    b836:	41 96       	adiw	r24, 0x11	; 17
    b838:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b83c:	80 fd       	sbrc	r24, 0
    b83e:	0b c0       	rjmp	.+22     	; 0xb856 <movemonster+0x2a0>
    b840:	80 91 6a 0a 	lds	r24, 0x0A6A	; 0x800a6a <oldx2>
    b844:	90 91 6b 0a 	lds	r25, 0x0A6B	; 0x800a6b <oldx2+0x1>
    b848:	90 93 5c 09 	sts	0x095C, r25	; 0x80095c <blob+0x5>
    b84c:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x4>
    b850:	8e ef       	ldi	r24, 0xFE	; 254
    b852:	80 93 5e 09 	sts	0x095E, r24	; 0x80095e <blob+0x7>
    if (blob.x < oldx ) if (!(checkcollide( blob.x -  1, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   +2;};
    b856:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    b85a:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    b85e:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    b862:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    b866:	82 17       	cp	r24, r18
    b868:	93 07       	cpc	r25, r19
    b86a:	c4 f4       	brge	.+48     	; 0xb89c <movemonster+0x2e6>
    b86c:	60 91 59 09 	lds	r22, 0x0959	; 0x800959 <blob+0x2>
    b870:	70 91 5a 09 	lds	r23, 0x095A	; 0x80095a <blob+0x3>
    b874:	6f 5e       	subi	r22, 0xEF	; 239
    b876:	7f 4f       	sbci	r23, 0xFF	; 255
    b878:	40 e0       	ldi	r20, 0x00	; 0
    b87a:	50 e0       	ldi	r21, 0x00	; 0
    b87c:	01 97       	sbiw	r24, 0x01	; 1
    b87e:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    b882:	80 fd       	sbrc	r24, 0
    b884:	0b c0       	rjmp	.+22     	; 0xb89c <movemonster+0x2e6>
    b886:	80 91 6a 0a 	lds	r24, 0x0A6A	; 0x800a6a <oldx2>
    b88a:	90 91 6b 0a 	lds	r25, 0x0A6B	; 0x800a6b <oldx2+0x1>
    b88e:	90 93 5c 09 	sts	0x095C, r25	; 0x80095c <blob+0x5>
    b892:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x4>
    b896:	82 e0       	ldi	r24, 0x02	; 2
    b898:	80 93 5e 09 	sts	0x095E, r24	; 0x80095e <blob+0x7>
    if (blob.y > 240 || blob.y < 0 || blob.x <= -16 || blob.x > 240 )  {MonsteronScreen = false; MoveSprite(owlIndex,-20,-20,2,2);blob.onscreen = false;};
    b89c:	80 91 59 09 	lds	r24, 0x0959	; 0x800959 <blob+0x2>
    b8a0:	90 91 5a 09 	lds	r25, 0x095A	; 0x80095a <blob+0x3>
    b8a4:	81 3f       	cpi	r24, 0xF1	; 241
    b8a6:	91 05       	cpc	r25, r1
    b8a8:	48 f4       	brcc	.+18     	; 0xb8bc <movemonster+0x306>
    b8aa:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    b8ae:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    b8b2:	0f 96       	adiw	r24, 0x0f	; 15
    b8b4:	8f 3f       	cpi	r24, 0xFF	; 255
    b8b6:	91 05       	cpc	r25, r1
    b8b8:	61 f0       	breq	.+24     	; 0xb8d2 <movemonster+0x31c>
    b8ba:	58 f0       	brcs	.+22     	; 0xb8d2 <movemonster+0x31c>
    b8bc:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <MonsteronScreen>
    b8c0:	02 e0       	ldi	r16, 0x02	; 2
    b8c2:	22 e0       	ldi	r18, 0x02	; 2
    b8c4:	4c ee       	ldi	r20, 0xEC	; 236
    b8c6:	6c ee       	ldi	r22, 0xEC	; 236
    b8c8:	86 e0       	ldi	r24, 0x06	; 6
    b8ca:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
    b8ce:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0x9>
}   

    
}
    b8d2:	0f 91       	pop	r16
    b8d4:	08 95       	ret

0000b8d6 <checkplayer>:
void checkplayer(int x,int y)
{
    if(x >= player2.x - 10 && x <= player2.x + 10 && y >= player2.y - 10 && y <= player2.y + 10)
    b8d6:	20 91 f2 09 	lds	r18, 0x09F2	; 0x8009f2 <player2>
    b8da:	30 91 f3 09 	lds	r19, 0x09F3	; 0x8009f3 <player2+0x1>
    b8de:	a9 01       	movw	r20, r18
    b8e0:	4a 50       	subi	r20, 0x0A	; 10
    b8e2:	51 09       	sbc	r21, r1
    b8e4:	84 17       	cp	r24, r20
    b8e6:	95 07       	cpc	r25, r21
    b8e8:	64 f1       	brlt	.+88     	; 0xb942 <checkplayer+0x6c>
    b8ea:	26 5f       	subi	r18, 0xF6	; 246
    b8ec:	3f 4f       	sbci	r19, 0xFF	; 255
    b8ee:	28 17       	cp	r18, r24
    b8f0:	39 07       	cpc	r19, r25
    b8f2:	3c f1       	brlt	.+78     	; 0xb942 <checkplayer+0x6c>
    b8f4:	80 91 f4 09 	lds	r24, 0x09F4	; 0x8009f4 <player2+0x2>
    b8f8:	90 91 f5 09 	lds	r25, 0x09F5	; 0x8009f5 <player2+0x3>
    b8fc:	9c 01       	movw	r18, r24
    b8fe:	2a 50       	subi	r18, 0x0A	; 10
    b900:	31 09       	sbc	r19, r1
    b902:	62 17       	cp	r22, r18
    b904:	73 07       	cpc	r23, r19
    b906:	ec f0       	brlt	.+58     	; 0xb942 <checkplayer+0x6c>
    b908:	0a 96       	adiw	r24, 0x0a	; 10
    b90a:	86 17       	cp	r24, r22
    b90c:	97 07       	cpc	r25, r23
    b90e:	cc f0       	brlt	.+50     	; 0xb942 <checkplayer+0x6c>
    {   
    died = true;
    b910:	81 e0       	ldi	r24, 0x01	; 1
    b912:	80 93 6d 0a 	sts	0x0A6D, r24	; 0x800a6d <died>
    lives--;    
    b916:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    b91a:	81 50       	subi	r24, 0x01	; 1
    b91c:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false; 
    b920:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    b924:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0; 
    b928:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    b92c:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    b930:	41 e0       	ldi	r20, 0x01	; 1
    b932:	6f ef       	ldi	r22, 0xFF	; 255
    b934:	89 e0       	ldi	r24, 0x09	; 9
    b936:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240); 
    b93a:	80 ef       	ldi	r24, 0xF0	; 240
    b93c:	90 e0       	ldi	r25, 0x00	; 0
    b93e:	0c 94 01 4f 	jmp	0x9e02	; 0x9e02 <WaitVsync>
    b942:	08 95       	ret

0000b944 <checkmonster>:
    }
}
void checkmonster(int x, int y,int z)
{
    b944:	ef 92       	push	r14
    b946:	ff 92       	push	r15
    b948:	0f 93       	push	r16
    b94a:	1f 93       	push	r17
    b94c:	cf 93       	push	r28
    b94e:	df 93       	push	r29
if (!MonsteronScreen) return;
    b950:	20 91 f1 09 	lds	r18, 0x09F1	; 0x8009f1 <MonsteronScreen>
    b954:	22 23       	and	r18, r18
    b956:	09 f4       	brne	.+2      	; 0xb95a <checkmonster+0x16>
    b958:	c3 c0       	rjmp	.+390    	; 0xbae0 <checkmonster+0x19c>
    b95a:	7a 01       	movw	r14, r20
    b95c:	eb 01       	movw	r28, r22
    b95e:	8c 01       	movw	r16, r24

if   (owl.onscreen && owl.alive)
    b960:	80 91 18 0a 	lds	r24, 0x0A18	; 0x800a18 <owl+0x9>
    b964:	88 23       	and	r24, r24
    b966:	09 f4       	brne	.+2      	; 0xb96a <checkmonster+0x26>
    b968:	55 c0       	rjmp	.+170    	; 0xba14 <checkmonster+0xd0>
    b96a:	80 91 19 0a 	lds	r24, 0x0A19	; 0x800a19 <owl+0xa>
    b96e:	88 23       	and	r24, r24
    b970:	09 f4       	brne	.+2      	; 0xb974 <checkmonster+0x30>
    b972:	50 c0       	rjmp	.+160    	; 0xba14 <checkmonster+0xd0>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    b974:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    b978:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    b97c:	9c 01       	movw	r18, r24
    b97e:	2d 5f       	subi	r18, 0xFD	; 253
    b980:	3f 4f       	sbci	r19, 0xFF	; 255
    b982:	20 17       	cp	r18, r16
    b984:	31 07       	cpc	r19, r17
    b986:	0c f0       	brlt	.+2      	; 0xb98a <checkmonster+0x46>
    b988:	45 c0       	rjmp	.+138    	; 0xba14 <checkmonster+0xd0>
    b98a:	0b 96       	adiw	r24, 0x0b	; 11
    b98c:	80 17       	cp	r24, r16
    b98e:	91 07       	cpc	r25, r17
    b990:	0c f4       	brge	.+2      	; 0xb994 <checkmonster+0x50>
    b992:	40 c0       	rjmp	.+128    	; 0xba14 <checkmonster+0xd0>
    b994:	80 91 11 0a 	lds	r24, 0x0A11	; 0x800a11 <owl+0x2>
    b998:	90 91 12 0a 	lds	r25, 0x0A12	; 0x800a12 <owl+0x3>
    b99c:	9c 01       	movw	r18, r24
    b99e:	2d 5f       	subi	r18, 0xFD	; 253
    b9a0:	3f 4f       	sbci	r19, 0xFF	; 255
    b9a2:	26 17       	cp	r18, r22
    b9a4:	37 07       	cpc	r19, r23
    b9a6:	b4 f5       	brge	.+108    	; 0xba14 <checkmonster+0xd0>
    b9a8:	0e 96       	adiw	r24, 0x0e	; 14
    b9aa:	86 17       	cp	r24, r22
    b9ac:	97 07       	cpc	r25, r23
    b9ae:	94 f1       	brlt	.+100    	; 0xba14 <checkmonster+0xd0>
   {
    if ( z== 0)
    b9b0:	45 2b       	or	r20, r21
    b9b2:	d1 f4       	brne	.+52     	; 0xb9e8 <checkmonster+0xa4>
    {
    died = true;
    b9b4:	81 e0       	ldi	r24, 0x01	; 1
    b9b6:	80 93 6d 0a 	sts	0x0A6D, r24	; 0x800a6d <died>
    lives--;    
    b9ba:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    b9be:	81 50       	subi	r24, 0x01	; 1
    b9c0:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false; 
    b9c4:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    b9c8:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0;  
    b9cc:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    b9d0:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    b9d4:	41 e0       	ldi	r20, 0x01	; 1
    b9d6:	6f ef       	ldi	r22, 0xFF	; 255
    b9d8:	89 e0       	ldi	r24, 0x09	; 9
    b9da:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240); 
    b9de:	80 ef       	ldi	r24, 0xF0	; 240
    b9e0:	90 e0       	ldi	r25, 0x00	; 0
    b9e2:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    b9e6:	16 c0       	rjmp	.+44     	; 0xba14 <checkmonster+0xd0>
    }
       else
       {
        owl.alive = false; 
    b9e8:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <owl+0xa>
        owl.ximpulse = 0;
    b9ec:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <owl+0x7>
        owl.yimpulse = 0; 
    b9f0:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <owl+0x8>
        score = score + 50;
    b9f4:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <score>
    b9f8:	90 91 a3 09 	lds	r25, 0x09A3	; 0x8009a3 <score+0x1>
    b9fc:	c2 96       	adiw	r24, 0x32	; 50
    b9fe:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <score+0x1>
    ba02:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <score>
        updatepoints();
    ba06:	0e 94 a8 54 	call	0xa950	; 0xa950 <updatepoints>
        TriggerFx(8,0xff,true);
    ba0a:	41 e0       	ldi	r20, 0x01	; 1
    ba0c:	6f ef       	ldi	r22, 0xFF	; 255
    ba0e:	88 e0       	ldi	r24, 0x08	; 8
    ba10:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
       };
   };     
   };
    
 if   (blob.onscreen && blob.alive)
    ba14:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0x9>
    ba18:	88 23       	and	r24, r24
    ba1a:	09 f4       	brne	.+2      	; 0xba1e <checkmonster+0xda>
    ba1c:	61 c0       	rjmp	.+194    	; 0xbae0 <checkmonster+0x19c>
    ba1e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <blob+0xa>
    ba22:	88 23       	and	r24, r24
    ba24:	09 f4       	brne	.+2      	; 0xba28 <checkmonster+0xe4>
    ba26:	5c c0       	rjmp	.+184    	; 0xbae0 <checkmonster+0x19c>
                    {
   if ( x >= blob.x +3 && x<= blob.x + 12 && y > blob.y+1 &&  y  < blob.y + 13 )
    ba28:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    ba2c:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    ba30:	9c 01       	movw	r18, r24
    ba32:	2e 5f       	subi	r18, 0xFE	; 254
    ba34:	3f 4f       	sbci	r19, 0xFF	; 255
    ba36:	20 17       	cp	r18, r16
    ba38:	31 07       	cpc	r19, r17
    ba3a:	0c f0       	brlt	.+2      	; 0xba3e <checkmonster+0xfa>
    ba3c:	51 c0       	rjmp	.+162    	; 0xbae0 <checkmonster+0x19c>
    ba3e:	0c 96       	adiw	r24, 0x0c	; 12
    ba40:	80 17       	cp	r24, r16
    ba42:	91 07       	cpc	r25, r17
    ba44:	0c f4       	brge	.+2      	; 0xba48 <checkmonster+0x104>
    ba46:	4c c0       	rjmp	.+152    	; 0xbae0 <checkmonster+0x19c>
    ba48:	80 91 59 09 	lds	r24, 0x0959	; 0x800959 <blob+0x2>
    ba4c:	90 91 5a 09 	lds	r25, 0x095A	; 0x80095a <blob+0x3>
    ba50:	9c 01       	movw	r18, r24
    ba52:	2f 5f       	subi	r18, 0xFF	; 255
    ba54:	3f 4f       	sbci	r19, 0xFF	; 255
    ba56:	2c 17       	cp	r18, r28
    ba58:	3d 07       	cpc	r19, r29
    ba5a:	0c f0       	brlt	.+2      	; 0xba5e <checkmonster+0x11a>
    ba5c:	41 c0       	rjmp	.+130    	; 0xbae0 <checkmonster+0x19c>
    ba5e:	0c 96       	adiw	r24, 0x0c	; 12
    ba60:	8c 17       	cp	r24, r28
    ba62:	9d 07       	cpc	r25, r29
    ba64:	ec f1       	brlt	.+122    	; 0xbae0 <checkmonster+0x19c>
   {
      if ( z== 0)
    ba66:	ef 28       	or	r14, r15
    ba68:	f9 f4       	brne	.+62     	; 0xbaa8 <checkmonster+0x164>
    {
     died = true;
    ba6a:	81 e0       	ldi	r24, 0x01	; 1
    ba6c:	80 93 6d 0a 	sts	0x0A6D, r24	; 0x800a6d <died>
    lives--;    
    ba70:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    ba74:	81 50       	subi	r24, 0x01	; 1
    ba76:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false;
    ba7a:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    ba7e:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0; 
    ba82:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    ba86:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    ba8a:	41 e0       	ldi	r20, 0x01	; 1
    ba8c:	6f ef       	ldi	r22, 0xFF	; 255
    ba8e:	89 e0       	ldi	r24, 0x09	; 9
    ba90:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240); 
    ba94:	80 ef       	ldi	r24, 0xF0	; 240
    ba96:	90 e0       	ldi	r25, 0x00	; 0
       
    
    
    

}
    ba98:	df 91       	pop	r29
    ba9a:	cf 91       	pop	r28
    ba9c:	1f 91       	pop	r17
    ba9e:	0f 91       	pop	r16
    baa0:	ff 90       	pop	r15
    baa2:	ef 90       	pop	r14
    lives--;    
    isplaying = false;
    play = false;
    bonus = 0; 
    TriggerFx(9,0xff,true);
    WaitVsync(240); 
    baa4:	0c 94 01 4f 	jmp	0x9e02	; 0x9e02 <WaitVsync>
      }
    else
       {
        blob.alive = false;  
    baa8:	10 92 61 09 	sts	0x0961, r1	; 0x800961 <blob+0xa>
        blob.ximpulse = 0;
    baac:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <blob+0x7>
        blob.yimpulse = 0;
    bab0:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x8>
        score = score + 50;
    bab4:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <score>
    bab8:	90 91 a3 09 	lds	r25, 0x09A3	; 0x8009a3 <score+0x1>
    babc:	c2 96       	adiw	r24, 0x32	; 50
    babe:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <score+0x1>
    bac2:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <score>
        updatepoints();
    bac6:	0e 94 a8 54 	call	0xa950	; 0xa950 <updatepoints>
        TriggerFx(8,0xff,true);
    baca:	41 e0       	ldi	r20, 0x01	; 1
    bacc:	6f ef       	ldi	r22, 0xFF	; 255
    bace:	88 e0       	ldi	r24, 0x08	; 8
       
    
    
    

}
    bad0:	df 91       	pop	r29
    bad2:	cf 91       	pop	r28
    bad4:	1f 91       	pop	r17
    bad6:	0f 91       	pop	r16
    bad8:	ff 90       	pop	r15
    bada:	ef 90       	pop	r14
        blob.alive = false;  
        blob.ximpulse = 0;
        blob.yimpulse = 0;
        score = score + 50;
        updatepoints();
        TriggerFx(8,0xff,true);
    badc:	0c 94 a5 44 	jmp	0x894a	; 0x894a <TriggerFx>
       
    
    
    

}
    bae0:	df 91       	pop	r29
    bae2:	cf 91       	pop	r28
    bae4:	1f 91       	pop	r17
    bae6:	0f 91       	pop	r16
    bae8:	ff 90       	pop	r15
    baea:	ef 90       	pop	r14
    baec:	08 95       	ret

0000baee <moveplayer>:
bool exitgame;
bool play;

void moveplayer()
{
if(player.killer == true)
    baee:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x19>
    baf2:	88 23       	and	r24, r24
    baf4:	19 f0       	breq	.+6      	; 0xbafc <moveplayer+0xe>
{
    player.speed = 2;
    baf6:	82 e0       	ldi	r24, 0x02	; 2
    baf8:	90 e0       	ldi	r25, 0x00	; 0
    bafa:	02 c0       	rjmp	.+4      	; 0xbb00 <moveplayer+0x12>
}
else{
    player.speed = 1;
    bafc:	81 e0       	ldi	r24, 0x01	; 1
    bafe:	90 e0       	ldi	r25, 0x00	; 0
    bb00:	90 93 67 09 	sts	0x0967, r25	; 0x800967 <player+0x5>
    bb04:	80 93 66 09 	sts	0x0966, r24	; 0x800966 <player+0x4>
}
player.mushroomCount = 10;
    bb08:	8a e0       	ldi	r24, 0x0A	; 10
    bb0a:	90 e0       	ldi	r25, 0x00	; 0
    bb0c:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x7>
    bb10:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <player+0x6>
unsigned int joy=ReadJoypad(0);
    bb14:	80 e0       	ldi	r24, 0x00	; 0
    bb16:	0e 94 52 42 	call	0x84a4	; 0x84a4 <ReadJoypad>
if(player.stuck)
    bb1a:	20 91 6c 09 	lds	r18, 0x096C	; 0x80096c <player+0xa>
    bb1e:	22 23       	and	r18, r18
    bb20:	a1 f0       	breq	.+40     	; 0xbb4a <moveplayer+0x5c>
{
player.sCount = player.sCount + 1;
    bb22:	20 91 6a 09 	lds	r18, 0x096A	; 0x80096a <player+0x8>
    bb26:	30 91 6b 09 	lds	r19, 0x096B	; 0x80096b <player+0x9>
    bb2a:	2f 5f       	subi	r18, 0xFF	; 255
    bb2c:	3f 4f       	sbci	r19, 0xFF	; 255
if(player.sCount >= 100)
    bb2e:	24 36       	cpi	r18, 0x64	; 100
    bb30:	31 05       	cpc	r19, r1
    bb32:	2c f4       	brge	.+10     	; 0xbb3e <moveplayer+0x50>
}
player.mushroomCount = 10;
unsigned int joy=ReadJoypad(0);
if(player.stuck)
{
player.sCount = player.sCount + 1;
    bb34:	30 93 6b 09 	sts	0x096B, r19	; 0x80096b <player+0x9>
    bb38:	20 93 6a 09 	sts	0x096A, r18	; 0x80096a <player+0x8>
    bb3c:	06 c0       	rjmp	.+12     	; 0xbb4a <moveplayer+0x5c>
if(player.sCount >= 100)
{
player.sCount = 0;
    bb3e:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x9>
    bb42:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x8>
player.stuck = false;
    bb46:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    bb4a:	20 91 7e 09 	lds	r18, 0x097E	; 0x80097e <introplaying>
    bb4e:	22 23       	and	r18, r18
    bb50:	29 f0       	breq	.+10     	; 0xbb5c <moveplayer+0x6e>
    bb52:	83 ff       	sbrs	r24, 3
    bb54:	8f c0       	rjmp	.+286    	; 0xbc74 <moveplayer+0x186>
    bb56:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <introplaying>
    bb5a:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player.stuck == false) { 
    bb5c:	86 ff       	sbrs	r24, 6
    bb5e:	15 c0       	rjmp	.+42     	; 0xbb8a <moveplayer+0x9c>
    bb60:	20 91 6c 09 	lds	r18, 0x096C	; 0x80096c <player+0xa>
    bb64:	21 11       	cpse	r18, r1
    bb66:	11 c0       	rjmp	.+34     	; 0xbb8a <moveplayer+0x9c>
player.direction = 'l';
    bb68:	2c e6       	ldi	r18, 0x6C	; 108
    bb6a:	20 93 70 09 	sts	0x0970, r18	; 0x800970 <player+0xe>
player.action = 'w';
    bb6e:	27 e7       	ldi	r18, 0x77	; 119
    bb70:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xd>
player.facing = 1;
    bb74:	21 e0       	ldi	r18, 0x01	; 1
    bb76:	30 e0       	ldi	r19, 0x00	; 0
    bb78:	30 93 6e 09 	sts	0x096E, r19	; 0x80096e <player+0xc>
    bb7c:	20 93 6d 09 	sts	0x096D, r18	; 0x80096d <player+0xb>
player.ximpulse = -player.speed; 
    bb80:	20 91 66 09 	lds	r18, 0x0966	; 0x800966 <player+0x4>
    bb84:	21 95       	neg	r18
    bb86:	20 93 74 09 	sts	0x0974, r18	; 0x800974 <player+0x12>
};
if (joy&BTN_RIGHT && player.stuck == false) {
    bb8a:	87 ff       	sbrs	r24, 7
    bb8c:	12 c0       	rjmp	.+36     	; 0xbbb2 <moveplayer+0xc4>
    bb8e:	20 91 6c 09 	lds	r18, 0x096C	; 0x80096c <player+0xa>
    bb92:	21 11       	cpse	r18, r1
    bb94:	0e c0       	rjmp	.+28     	; 0xbbb2 <moveplayer+0xc4>
player.direction = 'r';
    bb96:	22 e7       	ldi	r18, 0x72	; 114
    bb98:	20 93 70 09 	sts	0x0970, r18	; 0x800970 <player+0xe>
player.action = 'w';
    bb9c:	27 e7       	ldi	r18, 0x77	; 119
    bb9e:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xd>
player.facing = 0;
    bba2:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xc>
    bba6:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xb>
player.ximpulse = player.speed; 
    bbaa:	20 91 66 09 	lds	r18, 0x0966	; 0x800966 <player+0x4>
    bbae:	20 93 74 09 	sts	0x0974, r18	; 0x800974 <player+0x12>

};
if ( !(joy&BTN_A) ) {
    bbb2:	ac 01       	movw	r20, r24
    bbb4:	44 27       	eor	r20, r20
    bbb6:	51 70       	andi	r21, 0x01	; 1
    bbb8:	90 fd       	sbrc	r25, 0
    bbba:	09 c0       	rjmp	.+18     	; 0xbbce <moveplayer+0xe0>
player.yimpulse = 0;
    bbbc:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x13>
player.jumpreleased = true;
    bbc0:	21 e0       	ldi	r18, 0x01	; 1
    bbc2:	20 93 77 09 	sts	0x0977, r18	; 0x800977 <player+0x15>
player.jumping = false;
    bbc6:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x14>
player.jumpcounter = 0;
    bbca:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x1a>
};
if ( !(joy&BTN_B) ) {
    bbce:	80 fd       	sbrc	r24, 0
    bbd0:	03 c0       	rjmp	.+6      	; 0xbbd8 <moveplayer+0xea>
player.bpressed = false;
    bbd2:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <player+0x16>
    bbd6:	12 c0       	rjmp	.+36     	; 0xbbfc <moveplayer+0x10e>
};
if ( joy&BTN_B && player.touchground) {
    bbd8:	20 91 73 09 	lds	r18, 0x0973	; 0x800973 <player+0x11>
    bbdc:	22 23       	and	r18, r18
    bbde:	71 f0       	breq	.+28     	; 0xbbfc <moveplayer+0x10e>
	if(player.bpressed == false) // check count here
    bbe0:	20 91 78 09 	lds	r18, 0x0978	; 0x800978 <player+0x16>
    bbe4:	21 11       	cpse	r18, r1
    bbe6:	0a c0       	rjmp	.+20     	; 0xbbfc <moveplayer+0x10e>
	{
	bananaCount = bananaCount - 1;
    bbe8:	20 91 9c 08 	lds	r18, 0x089C	; 0x80089c <bananaCount>
    bbec:	21 50       	subi	r18, 0x01	; 1
    bbee:	20 93 9c 08 	sts	0x089C, r18	; 0x80089c <bananaCount>
    player.killer = true;
    bbf2:	21 e0       	ldi	r18, 0x01	; 1
    bbf4:	20 93 7b 09 	sts	0x097B, r18	; 0x80097b <player+0x19>
	player.bpressed = true;
    bbf8:	20 93 78 09 	sts	0x0978, r18	; 0x800978 <player+0x16>
	};
};  
if ( !(joy&BTN_Y) ) {
    bbfc:	81 fd       	sbrc	r24, 1
    bbfe:	03 c0       	rjmp	.+6      	; 0xbc06 <moveplayer+0x118>
player.ypressed = false;
    bc00:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <player+0x17>
    bc04:	13 c0       	rjmp	.+38     	; 0xbc2c <moveplayer+0x13e>
};
if ( joy&BTN_Y) {
	if(player.mushroomCount > 0 && player.ypressed == false)
    bc06:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x6>
    bc0a:	90 91 69 09 	lds	r25, 0x0969	; 0x800969 <player+0x7>
    bc0e:	18 16       	cp	r1, r24
    bc10:	19 06       	cpc	r1, r25
    bc12:	64 f4       	brge	.+24     	; 0xbc2c <moveplayer+0x13e>
    bc14:	20 91 79 09 	lds	r18, 0x0979	; 0x800979 <player+0x17>
    bc18:	21 11       	cpse	r18, r1
    bc1a:	08 c0       	rjmp	.+16     	; 0xbc2c <moveplayer+0x13e>
	{
	player.mushroomCount = player.mushroomCount - 1;
    bc1c:	01 97       	sbiw	r24, 0x01	; 1
    bc1e:	90 93 69 09 	sts	0x0969, r25	; 0x800969 <player+0x7>
    bc22:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <player+0x6>
	//player.speed = 10;
	player.ypressed = true;
    bc26:	81 e0       	ldi	r24, 0x01	; 1
    bc28:	80 93 79 09 	sts	0x0979, r24	; 0x800979 <player+0x17>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    bc2c:	45 2b       	or	r20, r21
    bc2e:	11 f1       	breq	.+68     	; 0xbc74 <moveplayer+0x186>
    bc30:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <player+0x11>
    bc34:	88 23       	and	r24, r24
    bc36:	f1 f0       	breq	.+60     	; 0xbc74 <moveplayer+0x186>
    bc38:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <player+0x15>
    bc3c:	88 23       	and	r24, r24
    bc3e:	d1 f0       	breq	.+52     	; 0xbc74 <moveplayer+0x186>
    bc40:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xa>
    bc44:	81 11       	cpse	r24, r1
    bc46:	16 c0       	rjmp	.+44     	; 0xbc74 <moveplayer+0x186>
player.action = 'j';
    bc48:	8a e6       	ldi	r24, 0x6A	; 106
    bc4a:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <player+0xd>
player.yimpulse = 0;
    bc4e:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x13>
player.jumping = true;
    bc52:	81 e0       	ldi	r24, 0x01	; 1
    bc54:	80 93 76 09 	sts	0x0976, r24	; 0x800976 <player+0x14>
player.touchground = false;
    bc58:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x11>
player.jumpreleased = false;
    bc5c:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x15>
player.jumpcounter++ ; 
    bc60:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1a>
    bc64:	8f 5f       	subi	r24, 0xFF	; 255
    bc66:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x1a>
TriggerFx(4,0xff,true);
    bc6a:	41 e0       	ldi	r20, 0x01	; 1
    bc6c:	6f ef       	ldi	r22, 0xFF	; 255
    bc6e:	84 e0       	ldi	r24, 0x04	; 4
    bc70:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
};
};

oldx = player.x;
    bc74:	20 91 62 09 	lds	r18, 0x0962	; 0x800962 <player>
    bc78:	30 91 63 09 	lds	r19, 0x0963	; 0x800963 <player+0x1>
    bc7c:	30 93 b9 09 	sts	0x09B9, r19	; 0x8009b9 <oldx+0x1>
    bc80:	20 93 b8 09 	sts	0x09B8, r18	; 0x8009b8 <oldx>
oldy = player.y;
    bc84:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bc88:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bc8c:	70 93 72 0a 	sts	0x0A72, r23	; 0x800a72 <oldy+0x1>
    bc90:	60 93 71 0a 	sts	0x0A71, r22	; 0x800a71 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    bc94:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1a>
    bc98:	9f ef       	ldi	r25, 0xFF	; 255
    bc9a:	98 0f       	add	r25, r24
    bc9c:	99 31       	cpi	r25, 0x19	; 25
    bc9e:	18 f4       	brcc	.+6      	; 0xbca6 <moveplayer+0x1b8>
    bca0:	9c ef       	ldi	r25, 0xFC	; 252
    bca2:	90 93 75 09 	sts	0x0975, r25	; 0x800975 <player+0x13>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    bca6:	96 ee       	ldi	r25, 0xE6	; 230
    bca8:	98 0f       	add	r25, r24
    bcaa:	9b 30       	cpi	r25, 0x0B	; 11
    bcac:	18 f4       	brcc	.+6      	; 0xbcb4 <moveplayer+0x1c6>
    bcae:	9d ef       	ldi	r25, 0xFD	; 253
    bcb0:	90 93 75 09 	sts	0x0975, r25	; 0x800975 <player+0x13>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    bcb4:	9b ed       	ldi	r25, 0xDB	; 219
    bcb6:	98 0f       	add	r25, r24
    bcb8:	94 30       	cpi	r25, 0x04	; 4
    bcba:	18 f4       	brcc	.+6      	; 0xbcc2 <moveplayer+0x1d4>
    bcbc:	9e ef       	ldi	r25, 0xFE	; 254
    bcbe:	90 93 75 09 	sts	0x0975, r25	; 0x800975 <player+0x13>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    bcc2:	97 ed       	ldi	r25, 0xD7	; 215
    bcc4:	98 0f       	add	r25, r24
    bcc6:	96 30       	cpi	r25, 0x06	; 6
    bcc8:	20 f4       	brcc	.+8      	; 0xbcd2 <moveplayer+0x1e4>
    bcca:	9f ef       	ldi	r25, 0xFF	; 255
    bccc:	90 93 75 09 	sts	0x0975, r25	; 0x800975 <player+0x13>
    bcd0:	02 c0       	rjmp	.+4      	; 0xbcd6 <moveplayer+0x1e8>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    bcd2:	88 23       	and	r24, r24
    bcd4:	19 f0       	breq	.+6      	; 0xbcdc <moveplayer+0x1ee>
    bcd6:	8f 5f       	subi	r24, 0xFF	; 255
    bcd8:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x1a>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    bcdc:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1a>
    bce0:	8f 32       	cpi	r24, 0x2F	; 47
    bce2:	10 f0       	brcs	.+4      	; 0xbce8 <moveplayer+0x1fa>
    bce4:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x1a>
player.x = player.x + player.ximpulse;
    bce8:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x12>
    bcec:	a9 01       	movw	r20, r18
    bcee:	48 0f       	add	r20, r24
    bcf0:	51 1d       	adc	r21, r1
    bcf2:	87 fd       	sbrc	r24, 7
    bcf4:	5a 95       	dec	r21
    bcf6:	ca 01       	movw	r24, r20
    bcf8:	50 93 63 09 	sts	0x0963, r21	; 0x800963 <player+0x1>
    bcfc:	40 93 62 09 	sts	0x0962, r20	; 0x800962 <player>
player.y = player.y + player.yimpulse + gravity ;
    bd00:	40 91 75 09 	lds	r20, 0x0975	; 0x800975 <player+0x13>
    bd04:	64 0f       	add	r22, r20
    bd06:	71 1d       	adc	r23, r1
    bd08:	47 fd       	sbrc	r20, 7
    bd0a:	7a 95       	dec	r23
    bd0c:	6e 5f       	subi	r22, 0xFE	; 254
    bd0e:	7f 4f       	sbci	r23, 0xFF	; 255
    bd10:	70 93 65 09 	sts	0x0965, r23	; 0x800965 <player+0x3>
    bd14:	60 93 64 09 	sts	0x0964, r22	; 0x800964 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    bd18:	28 17       	cp	r18, r24
    bd1a:	39 07       	cpc	r19, r25
    bd1c:	3c f4       	brge	.+14     	; 0xbd2c <moveplayer+0x23e>
    bd1e:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1b>
    bd22:	2f 5f       	subi	r18, 0xFF	; 255
    bd24:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1b>
    bd28:	22 e7       	ldi	r18, 0x72	; 114
    bd2a:	09 c0       	rjmp	.+18     	; 0xbd3e <moveplayer+0x250>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    bd2c:	82 17       	cp	r24, r18
    bd2e:	93 07       	cpc	r25, r19
    bd30:	4c f4       	brge	.+18     	; 0xbd44 <moveplayer+0x256>
    bd32:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1b>
    bd36:	2f 5f       	subi	r18, 0xFF	; 255
    bd38:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1b>
    bd3c:	2c e6       	ldi	r18, 0x6C	; 108
    bd3e:	20 93 70 09 	sts	0x0970, r18	; 0x800970 <player+0xe>
    bd42:	05 c0       	rjmp	.+10     	; 0xbd4e <moveplayer+0x260>
if (player.x == oldx  ) { player.aniframe = 0;};
    bd44:	28 17       	cp	r18, r24
    bd46:	39 07       	cpc	r19, r25
    bd48:	11 f4       	brne	.+4      	; 0xbd4e <moveplayer+0x260>
    bd4a:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <player+0x1b>
if (player.aniframe > 0 ) player.aniframe++;
    bd4e:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1b>
    bd52:	22 23       	and	r18, r18
    bd54:	19 f0       	breq	.+6      	; 0xbd5c <moveplayer+0x26e>
    bd56:	2f 5f       	subi	r18, 0xFF	; 255
    bd58:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1b>
if (player.aniframe>24) player.aniframe = 1;
    bd5c:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1b>
    bd60:	29 31       	cpi	r18, 0x19	; 25
    bd62:	18 f0       	brcs	.+6      	; 0xbd6a <moveplayer+0x27c>
    bd64:	21 e0       	ldi	r18, 0x01	; 1
    bd66:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1b>
if(checkBanana(player.x + 4, player.y ,1) == 1)
    bd6a:	41 e0       	ldi	r20, 0x01	; 1
    bd6c:	50 e0       	ldi	r21, 0x00	; 0
    bd6e:	04 96       	adiw	r24, 0x04	; 4
    bd70:	0e 94 50 53 	call	0xa6a0	; 0xa6a0 <checkBanana>
    bd74:	01 97       	sbiw	r24, 0x01	; 1
    bd76:	19 f4       	brne	.+6      	; 0xbd7e <moveplayer+0x290>
{
    player.stuck = true;
    bd78:	81 e0       	ldi	r24, 0x01	; 1
    bd7a:	80 93 6c 09 	sts	0x096C, r24	; 0x80096c <player+0xa>
} 
if(player.bananaBool == true)
    bd7e:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <player+0x18>
    bd82:	88 23       	and	r24, r24
    bd84:	79 f0       	breq	.+30     	; 0xbda4 <moveplayer+0x2b6>
{
makeBanana2(player.x + 4, player.y,1);
    bd86:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bd8a:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bd8e:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bd92:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bd96:	41 e0       	ldi	r20, 0x01	; 1
    bd98:	50 e0       	ldi	r21, 0x00	; 0
    bd9a:	04 96       	adiw	r24, 0x04	; 4
    bd9c:	0e 94 f8 52 	call	0xa5f0	; 0xa5f0 <makeBanana2>
player.bananaBool = false;
    bda0:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <player+0x18>
}
checkcollide( player.x, player.y - 4 ,1);
    bda4:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bda8:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bdac:	64 50       	subi	r22, 0x04	; 4
    bdae:	71 09       	sbc	r23, r1
    bdb0:	41 e0       	ldi	r20, 0x01	; 1
    bdb2:	50 e0       	ldi	r21, 0x00	; 0
    bdb4:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bdb8:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bdbc:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3);
    bdc0:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bdc4:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bdc8:	64 50       	subi	r22, 0x04	; 4
    bdca:	71 09       	sbc	r23, r1
    bdcc:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bdd0:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bdd4:	43 e0       	ldi	r20, 0x03	; 3
    bdd6:	50 e0       	ldi	r21, 0x00	; 0
    bdd8:	03 97       	sbiw	r24, 0x03	; 3
    bdda:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3);
    bdde:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bde2:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bde6:	64 50       	subi	r22, 0x04	; 4
    bde8:	71 09       	sbc	r23, r1
    bdea:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bdee:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bdf2:	43 e0       	ldi	r20, 0x03	; 3
    bdf4:	50 e0       	ldi	r21, 0x00	; 0
    bdf6:	04 96       	adiw	r24, 0x04	; 4
    bdf8:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
    bdfc:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    be00:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    be04:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    be08:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    be0c:	68 17       	cp	r22, r24
    be0e:	79 07       	cpc	r23, r25
    be10:	54 f4       	brge	.+20     	; 0xbe26 <moveplayer+0x338>
    be12:	66 51       	subi	r22, 0x16	; 22
    be14:	71 09       	sbc	r23, r1
    be16:	42 e0       	ldi	r20, 0x02	; 2
    be18:	50 e0       	ldi	r21, 0x00	; 0
    be1a:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    be1e:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    be22:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    be26:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    be2a:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    be2e:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    be32:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    be36:	86 17       	cp	r24, r22
    be38:	97 07       	cpc	r25, r23
    be3a:	8c f5       	brge	.+98     	; 0xbe9e <moveplayer+0x3b0>
    be3c:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x11>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    be40:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    be44:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    be48:	40 e0       	ldi	r20, 0x00	; 0
    be4a:	50 e0       	ldi	r21, 0x00	; 0
    be4c:	03 97       	sbiw	r24, 0x03	; 3
    be4e:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    be52:	80 ff       	sbrs	r24, 0
    be54:	15 c0       	rjmp	.+42     	; 0xbe80 <moveplayer+0x392>
    be56:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x2>
    be5a:	90 91 65 09 	lds	r25, 0x0965	; 0x800965 <player+0x3>
    be5e:	97 fd       	sbrc	r25, 7
    be60:	0f 96       	adiw	r24, 0x0f	; 15
    be62:	80 7f       	andi	r24, 0xF0	; 240
    be64:	01 97       	sbiw	r24, 0x01	; 1
    be66:	90 93 65 09 	sts	0x0965, r25	; 0x800965 <player+0x3>
    be6a:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <player+0x2>
    be6e:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x14>
    be72:	81 e0       	ldi	r24, 0x01	; 1
    be74:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <player+0x11>
    be78:	87 e7       	ldi	r24, 0x77	; 119
    be7a:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <player+0xd>
    be7e:	0f c0       	rjmp	.+30     	; 0xbe9e <moveplayer+0x3b0>
    be80:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    be84:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    be88:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    be8c:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    be90:	40 e0       	ldi	r20, 0x00	; 0
    be92:	50 e0       	ldi	r21, 0x00	; 0
    be94:	04 96       	adiw	r24, 0x04	; 4
    be96:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    be9a:	80 fd       	sbrc	r24, 0
    be9c:	dc cf       	rjmp	.-72     	; 0xbe56 <moveplayer+0x368>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    be9e:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bea2:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bea6:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    beaa:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    beae:	68 17       	cp	r22, r24
    beb0:	79 07       	cpc	r23, r25
    beb2:	74 f5       	brge	.+92     	; 0xbf10 <moveplayer+0x422>
    beb4:	65 51       	subi	r22, 0x15	; 21
    beb6:	71 09       	sbc	r23, r1
    beb8:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bebc:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bec0:	40 e0       	ldi	r20, 0x00	; 0
    bec2:	50 e0       	ldi	r21, 0x00	; 0
    bec4:	03 97       	sbiw	r24, 0x03	; 3
    bec6:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    beca:	80 ff       	sbrs	r24, 0
    becc:	10 c0       	rjmp	.+32     	; 0xbeee <moveplayer+0x400>
    bece:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <oldy>
    bed2:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <oldy+0x1>
    bed6:	90 93 65 09 	sts	0x0965, r25	; 0x800965 <player+0x3>
    beda:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <player+0x2>
    bede:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    bee2:	41 e0       	ldi	r20, 0x01	; 1
    bee4:	6f ef       	ldi	r22, 0xFF	; 255
    bee6:	85 e0       	ldi	r24, 0x05	; 5
    bee8:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    beec:	11 c0       	rjmp	.+34     	; 0xbf10 <moveplayer+0x422>
checkcollide( player.x +4, player.y - 4 ,3);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    beee:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bef2:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bef6:	65 51       	subi	r22, 0x15	; 21
    bef8:	71 09       	sbc	r23, r1
    befa:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    befe:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bf02:	40 e0       	ldi	r20, 0x00	; 0
    bf04:	50 e0       	ldi	r21, 0x00	; 0
    bf06:	04 96       	adiw	r24, 0x04	; 4
    bf08:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    bf0c:	80 fd       	sbrc	r24, 0
    bf0e:	df cf       	rjmp	.-66     	; 0xbece <moveplayer+0x3e0>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
    bf10:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bf14:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bf18:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    bf1c:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    bf20:	28 17       	cp	r18, r24
    bf22:	39 07       	cpc	r19, r25
    bf24:	3c f5       	brge	.+78     	; 0xbf74 <moveplayer+0x486>
    bf26:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bf2a:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bf2e:	63 50       	subi	r22, 0x03	; 3
    bf30:	71 09       	sbc	r23, r1
    bf32:	40 e0       	ldi	r20, 0x00	; 0
    bf34:	50 e0       	ldi	r21, 0x00	; 0
    bf36:	05 96       	adiw	r24, 0x05	; 5
    bf38:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    bf3c:	80 ff       	sbrs	r24, 0
    bf3e:	09 c0       	rjmp	.+18     	; 0xbf52 <moveplayer+0x464>
    bf40:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <oldx>
    bf44:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <oldx+0x1>
    bf48:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    bf4c:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
    bf50:	11 c0       	rjmp	.+34     	; 0xbf74 <moveplayer+0x486>
    bf52:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bf56:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bf5a:	64 51       	subi	r22, 0x14	; 20
    bf5c:	71 09       	sbc	r23, r1
    bf5e:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bf62:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bf66:	40 e0       	ldi	r20, 0x00	; 0
    bf68:	50 e0       	ldi	r21, 0x00	; 0
    bf6a:	05 96       	adiw	r24, 0x05	; 5
    bf6c:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    bf70:	80 fd       	sbrc	r24, 0
    bf72:	e6 cf       	rjmp	.-52     	; 0xbf40 <moveplayer+0x452>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
    bf74:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bf78:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bf7c:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <oldx>
    bf80:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <oldx+0x1>
    bf84:	82 17       	cp	r24, r18
    bf86:	93 07       	cpc	r25, r19
    bf88:	3c f5       	brge	.+78     	; 0xbfd8 <moveplayer+0x4ea>
    bf8a:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bf8e:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bf92:	63 50       	subi	r22, 0x03	; 3
    bf94:	71 09       	sbc	r23, r1
    bf96:	40 e0       	ldi	r20, 0x00	; 0
    bf98:	50 e0       	ldi	r21, 0x00	; 0
    bf9a:	04 97       	sbiw	r24, 0x04	; 4
    bf9c:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    bfa0:	80 ff       	sbrs	r24, 0
    bfa2:	09 c0       	rjmp	.+18     	; 0xbfb6 <moveplayer+0x4c8>
    bfa4:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <oldx>
    bfa8:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <oldx+0x1>
    bfac:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    bfb0:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
    bfb4:	11 c0       	rjmp	.+34     	; 0xbfd8 <moveplayer+0x4ea>
    bfb6:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bfba:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    bfbe:	64 51       	subi	r22, 0x14	; 20
    bfc0:	71 09       	sbc	r23, r1
    bfc2:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bfc6:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bfca:	40 e0       	ldi	r20, 0x00	; 0
    bfcc:	50 e0       	ldi	r21, 0x00	; 0
    bfce:	04 97       	sbiw	r24, 0x04	; 4
    bfd0:	0e 94 b9 54 	call	0xa972	; 0xa972 <checkcollide>
    bfd4:	80 fd       	sbrc	r24, 0
    bfd6:	e6 cf       	rjmp	.-52     	; 0xbfa4 <moveplayer+0x4b6>
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    bfd8:	20 91 7b 09 	lds	r18, 0x097B	; 0x80097b <player+0x19>
    bfdc:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    bfe0:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    bfe4:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    bfe8:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
{
checkmonster(player.x +4, player.y -3,1 );
    bfec:	63 50       	subi	r22, 0x03	; 3
    bfee:	71 09       	sbc	r23, r1
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    bff0:	22 23       	and	r18, r18
    bff2:	d9 f1       	breq	.+118    	; 0xc06a <moveplayer+0x57c>
{
checkmonster(player.x +4, player.y -3,1 );
    bff4:	41 e0       	ldi	r20, 0x01	; 1
    bff6:	50 e0       	ldi	r21, 0x00	; 0
    bff8:	04 96       	adiw	r24, 0x04	; 4
    bffa:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
checkmonster(player.x +4, player.y -19,1 );
    bffe:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c002:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c006:	63 51       	subi	r22, 0x13	; 19
    c008:	71 09       	sbc	r23, r1
    c00a:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c00e:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c012:	41 e0       	ldi	r20, 0x01	; 1
    c014:	50 e0       	ldi	r21, 0x00	; 0
    c016:	04 96       	adiw	r24, 0x04	; 4
    c018:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
checkmonster(player.x -3, player.y -3 ,1);
    c01c:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c020:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c024:	63 50       	subi	r22, 0x03	; 3
    c026:	71 09       	sbc	r23, r1
    c028:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c02c:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c030:	41 e0       	ldi	r20, 0x01	; 1
    c032:	50 e0       	ldi	r21, 0x00	; 0
    c034:	03 97       	sbiw	r24, 0x03	; 3
    c036:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
checkmonster(player.x -3, player.y -19 ,1);  
    c03a:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c03e:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c042:	63 51       	subi	r22, 0x13	; 19
    c044:	71 09       	sbc	r23, r1
    c046:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c04a:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c04e:	41 e0       	ldi	r20, 0x01	; 1
    c050:	50 e0       	ldi	r21, 0x00	; 0
    c052:	03 97       	sbiw	r24, 0x03	; 3
    c054:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
checkmonster(player.x , player.y -22 ,1);
    c058:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c05c:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c060:	66 51       	subi	r22, 0x16	; 22
    c062:	71 09       	sbc	r23, r1
    c064:	41 e0       	ldi	r20, 0x01	; 1
    c066:	50 e0       	ldi	r21, 0x00	; 0
    c068:	3a c0       	rjmp	.+116    	; 0xc0de <moveplayer+0x5f0>
checkplayer(player.x,player.y);
}
else{
    checkmonster(player.x +4, player.y -3,0 );
    c06a:	40 e0       	ldi	r20, 0x00	; 0
    c06c:	50 e0       	ldi	r21, 0x00	; 0
    c06e:	04 96       	adiw	r24, 0x04	; 4
    c070:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
    checkmonster(player.x +4, player.y -19,0 );
    c074:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c078:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c07c:	63 51       	subi	r22, 0x13	; 19
    c07e:	71 09       	sbc	r23, r1
    c080:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c084:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c088:	40 e0       	ldi	r20, 0x00	; 0
    c08a:	50 e0       	ldi	r21, 0x00	; 0
    c08c:	04 96       	adiw	r24, 0x04	; 4
    c08e:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
    checkmonster(player.x -3, player.y -3 ,0);
    c092:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c096:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c09a:	63 50       	subi	r22, 0x03	; 3
    c09c:	71 09       	sbc	r23, r1
    c09e:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c0a2:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c0a6:	40 e0       	ldi	r20, 0x00	; 0
    c0a8:	50 e0       	ldi	r21, 0x00	; 0
    c0aa:	03 97       	sbiw	r24, 0x03	; 3
    c0ac:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
    checkmonster(player.x -3, player.y -19 ,0);  
    c0b0:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c0b4:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c0b8:	63 51       	subi	r22, 0x13	; 19
    c0ba:	71 09       	sbc	r23, r1
    c0bc:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c0c0:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c0c4:	40 e0       	ldi	r20, 0x00	; 0
    c0c6:	50 e0       	ldi	r21, 0x00	; 0
    c0c8:	03 97       	sbiw	r24, 0x03	; 3
    c0ca:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
    checkmonster(player.x , player.y -22 ,0);
    c0ce:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c0d2:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c0d6:	66 51       	subi	r22, 0x16	; 22
    c0d8:	71 09       	sbc	r23, r1
    c0da:	40 e0       	ldi	r20, 0x00	; 0
    c0dc:	50 e0       	ldi	r21, 0x00	; 0
    c0de:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c0e2:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c0e6:	0e 94 a2 5c 	call	0xb944	; 0xb944 <checkmonster>
    checkplayer(player.x,player.y);
    c0ea:	60 91 64 09 	lds	r22, 0x0964	; 0x800964 <player+0x2>
    c0ee:	70 91 65 09 	lds	r23, 0x0965	; 0x800965 <player+0x3>
    c0f2:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c0f6:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c0fa:	0e 94 6b 5c 	call	0xb8d6	; 0xb8d6 <checkplayer>
}
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
player.ximpulse = 0;    
    c0fe:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x12>
player.yimpulse = 0;
    c102:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x13>
if ( player.x < 8 ) player.x = player2.x - 30;   // Increase time penalty herer
    c106:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c10a:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c10e:	08 97       	sbiw	r24, 0x08	; 8
    c110:	4c f4       	brge	.+18     	; 0xc124 <moveplayer+0x636>
    c112:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    c116:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    c11a:	4e 97       	sbiw	r24, 0x1e	; 30
    c11c:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    c120:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
if ( player.x > 232 ) player.x = player2.x - 30;    
    c124:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c128:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c12c:	89 3e       	cpi	r24, 0xE9	; 233
    c12e:	91 05       	cpc	r25, r1
    c130:	54 f0       	brlt	.+20     	; 0xc146 <moveplayer+0x658>
    c132:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    c136:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    c13a:	4e 97       	sbiw	r24, 0x1e	; 30
    c13c:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    c140:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
    c144:	08 95       	ret
    c146:	08 95       	ret

0000c148 <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    c148:	20 91 18 0a 	lds	r18, 0x0A18	; 0x800a18 <owl+0x9>
    c14c:	22 23       	and	r18, r18
    c14e:	79 f0       	breq	.+30     	; 0xc16e <scrollmonster+0x26>
    c150:	40 91 13 0a 	lds	r20, 0x0A13	; 0x800a13 <owl+0x4>
    c154:	50 91 14 0a 	lds	r21, 0x0A14	; 0x800a14 <owl+0x5>
    c158:	9c 01       	movw	r18, r24
    c15a:	22 0f       	add	r18, r18
    c15c:	33 1f       	adc	r19, r19
    c15e:	22 0f       	add	r18, r18
    c160:	33 1f       	adc	r19, r19
    c162:	24 0f       	add	r18, r20
    c164:	35 1f       	adc	r19, r21
    c166:	30 93 14 0a 	sts	0x0A14, r19	; 0x800a14 <owl+0x5>
    c16a:	20 93 13 0a 	sts	0x0A13, r18	; 0x800a13 <owl+0x4>
if (blob.onscreen) blob.x2 =  blob.x2 + ( x << 2 );
    c16e:	20 91 60 09 	lds	r18, 0x0960	; 0x800960 <blob+0x9>
    c172:	22 23       	and	r18, r18
    c174:	71 f0       	breq	.+28     	; 0xc192 <scrollmonster+0x4a>
    c176:	88 0f       	add	r24, r24
    c178:	99 1f       	adc	r25, r25
    c17a:	88 0f       	add	r24, r24
    c17c:	99 1f       	adc	r25, r25
    c17e:	20 91 5b 09 	lds	r18, 0x095B	; 0x80095b <blob+0x4>
    c182:	30 91 5c 09 	lds	r19, 0x095C	; 0x80095c <blob+0x5>
    c186:	82 0f       	add	r24, r18
    c188:	93 1f       	adc	r25, r19
    c18a:	90 93 5c 09 	sts	0x095C, r25	; 0x80095c <blob+0x5>
    c18e:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x4>
    c192:	08 95       	ret

0000c194 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    c194:	20 91 f1 09 	lds	r18, 0x09F1	; 0x8009f1 <MonsteronScreen>
    c198:	21 11       	cpse	r18, r1
    c19a:	38 c0       	rjmp	.+112    	; 0xc20c <setowl+0x78>
if ( owl.onscreen == true ) return;    
    c19c:	20 91 18 0a 	lds	r18, 0x0A18	; 0x800a18 <owl+0x9>
    c1a0:	21 11       	cpse	r18, r1
    c1a2:	34 c0       	rjmp	.+104    	; 0xc20c <setowl+0x78>
owl.x = x * 8;
    c1a4:	33 e0       	ldi	r19, 0x03	; 3
    c1a6:	88 0f       	add	r24, r24
    c1a8:	99 1f       	adc	r25, r25
    c1aa:	3a 95       	dec	r19
    c1ac:	e1 f7       	brne	.-8      	; 0xc1a6 <setowl+0x12>
    c1ae:	90 93 10 0a 	sts	0x0A10, r25	; 0x800a10 <owl+0x1>
    c1b2:	80 93 0f 0a 	sts	0x0A0F, r24	; 0x800a0f <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    c1b6:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    c1ba:	88 23       	and	r24, r24
    c1bc:	31 f0       	breq	.+12     	; 0xc1ca <setowl+0x36>
    c1be:	80 ef       	ldi	r24, 0xF0	; 240
    c1c0:	90 e0       	ldi	r25, 0x00	; 0
    c1c2:	90 93 10 0a 	sts	0x0A10, r25	; 0x800a10 <owl+0x1>
    c1c6:	80 93 0f 0a 	sts	0x0A0F, r24	; 0x800a0f <owl>
owl.y = y * 8;     
    c1ca:	83 e0       	ldi	r24, 0x03	; 3
    c1cc:	66 0f       	add	r22, r22
    c1ce:	77 1f       	adc	r23, r23
    c1d0:	8a 95       	dec	r24
    c1d2:	e1 f7       	brne	.-8      	; 0xc1cc <setowl+0x38>
    c1d4:	70 93 12 0a 	sts	0x0A12, r23	; 0x800a12 <owl+0x3>
    c1d8:	60 93 11 0a 	sts	0x0A11, r22	; 0x800a11 <owl+0x2>
owl.x2 = owl.x << 2;        
    c1dc:	80 91 0f 0a 	lds	r24, 0x0A0F	; 0x800a0f <owl>
    c1e0:	90 91 10 0a 	lds	r25, 0x0A10	; 0x800a10 <owl+0x1>
    c1e4:	88 0f       	add	r24, r24
    c1e6:	99 1f       	adc	r25, r25
    c1e8:	88 0f       	add	r24, r24
    c1ea:	99 1f       	adc	r25, r25
    c1ec:	90 93 14 0a 	sts	0x0A14, r25	; 0x800a14 <owl+0x5>
    c1f0:	80 93 13 0a 	sts	0x0A13, r24	; 0x800a13 <owl+0x4>
owl.ximpulse = -1;
    c1f4:	8f ef       	ldi	r24, 0xFF	; 255
    c1f6:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <owl+0x7>
owl.yimpulse = 0;    
    c1fa:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <owl+0x8>
owl.onscreen = true;
    c1fe:	81 e0       	ldi	r24, 0x01	; 1
    c200:	80 93 18 0a 	sts	0x0A18, r24	; 0x800a18 <owl+0x9>
owl.alive = true; 
    c204:	80 93 19 0a 	sts	0x0A19, r24	; 0x800a19 <owl+0xa>
MonsteronScreen = true;     
    c208:	80 93 f1 09 	sts	0x09F1, r24	; 0x8009f1 <MonsteronScreen>
    c20c:	08 95       	ret

0000c20e <setblob>:
}

void setblob(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    c20e:	20 91 f1 09 	lds	r18, 0x09F1	; 0x8009f1 <MonsteronScreen>
    c212:	21 11       	cpse	r18, r1
    c214:	38 c0       	rjmp	.+112    	; 0xc286 <setblob+0x78>
if ( blob.onscreen == true ) return;    
    c216:	20 91 60 09 	lds	r18, 0x0960	; 0x800960 <blob+0x9>
    c21a:	21 11       	cpse	r18, r1
    c21c:	34 c0       	rjmp	.+104    	; 0xc286 <setblob+0x78>
blob.x = x * 8;
    c21e:	33 e0       	ldi	r19, 0x03	; 3
    c220:	88 0f       	add	r24, r24
    c222:	99 1f       	adc	r25, r25
    c224:	3a 95       	dec	r19
    c226:	e1 f7       	brne	.-8      	; 0xc220 <setblob+0x12>
    c228:	90 93 58 09 	sts	0x0958, r25	; 0x800958 <blob+0x1>
    c22c:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <blob>
if (scrolltiles > 0 )  blob.x = 15 * 16;
    c230:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    c234:	88 23       	and	r24, r24
    c236:	31 f0       	breq	.+12     	; 0xc244 <setblob+0x36>
    c238:	80 ef       	ldi	r24, 0xF0	; 240
    c23a:	90 e0       	ldi	r25, 0x00	; 0
    c23c:	90 93 58 09 	sts	0x0958, r25	; 0x800958 <blob+0x1>
    c240:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <blob>
blob.y = y * 8;     
    c244:	83 e0       	ldi	r24, 0x03	; 3
    c246:	66 0f       	add	r22, r22
    c248:	77 1f       	adc	r23, r23
    c24a:	8a 95       	dec	r24
    c24c:	e1 f7       	brne	.-8      	; 0xc246 <setblob+0x38>
    c24e:	70 93 5a 09 	sts	0x095A, r23	; 0x80095a <blob+0x3>
    c252:	60 93 59 09 	sts	0x0959, r22	; 0x800959 <blob+0x2>
blob.x2 = blob.x << 2;        
    c256:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <blob>
    c25a:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <blob+0x1>
    c25e:	88 0f       	add	r24, r24
    c260:	99 1f       	adc	r25, r25
    c262:	88 0f       	add	r24, r24
    c264:	99 1f       	adc	r25, r25
    c266:	90 93 5c 09 	sts	0x095C, r25	; 0x80095c <blob+0x5>
    c26a:	80 93 5b 09 	sts	0x095B, r24	; 0x80095b <blob+0x4>
blob.ximpulse = -2;
    c26e:	8e ef       	ldi	r24, 0xFE	; 254
    c270:	80 93 5e 09 	sts	0x095E, r24	; 0x80095e <blob+0x7>
blob.yimpulse = 0;    
    c274:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x8>
blob.onscreen = true;
    c278:	81 e0       	ldi	r24, 0x01	; 1
    c27a:	80 93 60 09 	sts	0x0960, r24	; 0x800960 <blob+0x9>
blob.alive = true;   
    c27e:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <blob+0xa>
MonsteronScreen = true;    
    c282:	80 93 f1 09 	sts	0x09F1, r24	; 0x8009f1 <MonsteronScreen>
    c286:	08 95       	ret

0000c288 <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    c288:	6f 92       	push	r6
    c28a:	7f 92       	push	r7
    c28c:	8f 92       	push	r8
    c28e:	bf 92       	push	r11
    c290:	cf 92       	push	r12
    c292:	df 92       	push	r13
    c294:	ef 92       	push	r14
    c296:	ff 92       	push	r15
    c298:	0f 93       	push	r16
    c29a:	1f 93       	push	r17
    c29c:	cf 93       	push	r28
    c29e:	df 93       	push	r29
int ly;
char bl;
lx = Levelx;
lx = lx >> 4;

player.stuck = false;
    c2a0:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xa>
player2.stuck = false;
    c2a4:	10 92 fc 09 	sts	0x09FC, r1	; 0x8009fc <player2+0xa>
player.sCount =0;
    c2a8:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0x9>
    c2ac:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x8>
player2.sCount =0;
    c2b0:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <player2+0x9>
    c2b4:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <player2+0x8>
    c2b8:	01 e0       	ldi	r16, 0x01	; 1
    c2ba:	e1 2c       	mov	r14, r1
    c2bc:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c2be:	c1 2c       	mov	r12, r1
    c2c0:	d1 2c       	mov	r13, r1
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    c2c2:	be 2c       	mov	r11, r14
    c2c4:	36 01       	movw	r6, r12
    c2c6:	c0 e0       	ldi	r28, 0x00	; 0
    c2c8:	d0 e0       	ldi	r29, 0x00	; 0
for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
//if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi+(Levelx)]));
if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    c2ca:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    c2ce:	81 11       	cpse	r24, r1
    c2d0:	04 c0       	rjmp	.+8      	; 0xc2da <drawlevel+0x52>
    c2d2:	f3 01       	movw	r30, r6
    c2d4:	e1 58       	subi	r30, 0x81	; 129
    c2d6:	fa 4c       	sbci	r31, 0xCA	; 202
    c2d8:	35 c0       	rjmp	.+106    	; 0xc344 <drawlevel+0xbc>
if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    c2da:	81 30       	cpi	r24, 0x01	; 1
    c2dc:	21 f4       	brne	.+8      	; 0xc2e6 <drawlevel+0x5e>
    c2de:	f3 01       	movw	r30, r6
    c2e0:	ed 56       	subi	r30, 0x6D	; 109
    c2e2:	ff 4c       	sbci	r31, 0xCF	; 207
    c2e4:	2f c0       	rjmp	.+94     	; 0xc344 <drawlevel+0xbc>
if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    c2e6:	82 30       	cpi	r24, 0x02	; 2
    c2e8:	21 f4       	brne	.+8      	; 0xc2f2 <drawlevel+0x6a>
    c2ea:	f3 01       	movw	r30, r6
    c2ec:	e9 55       	subi	r30, 0x59	; 89
    c2ee:	f4 4d       	sbci	r31, 0xD4	; 212
    c2f0:	29 c0       	rjmp	.+82     	; 0xc344 <drawlevel+0xbc>
if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    c2f2:	83 30       	cpi	r24, 0x03	; 3
    c2f4:	21 f4       	brne	.+8      	; 0xc2fe <drawlevel+0x76>
    c2f6:	f3 01       	movw	r30, r6
    c2f8:	e5 54       	subi	r30, 0x45	; 69
    c2fa:	f9 4d       	sbci	r31, 0xD9	; 217
    c2fc:	23 c0       	rjmp	.+70     	; 0xc344 <drawlevel+0xbc>
if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    c2fe:	84 30       	cpi	r24, 0x04	; 4
    c300:	21 f4       	brne	.+8      	; 0xc30a <drawlevel+0x82>
    c302:	f3 01       	movw	r30, r6
    c304:	e1 53       	subi	r30, 0x31	; 49
    c306:	fe 4d       	sbci	r31, 0xDE	; 222
    c308:	1d c0       	rjmp	.+58     	; 0xc344 <drawlevel+0xbc>
if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    c30a:	85 30       	cpi	r24, 0x05	; 5
    c30c:	21 f4       	brne	.+8      	; 0xc316 <drawlevel+0x8e>
    c30e:	f3 01       	movw	r30, r6
    c310:	ed 51       	subi	r30, 0x1D	; 29
    c312:	f3 4e       	sbci	r31, 0xE3	; 227
    c314:	17 c0       	rjmp	.+46     	; 0xc344 <drawlevel+0xbc>
if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    c316:	86 30       	cpi	r24, 0x06	; 6
    c318:	21 f4       	brne	.+8      	; 0xc322 <drawlevel+0x9a>
    c31a:	f3 01       	movw	r30, r6
    c31c:	e9 50       	subi	r30, 0x09	; 9
    c31e:	f8 4e       	sbci	r31, 0xE8	; 232
    c320:	11 c0       	rjmp	.+34     	; 0xc344 <drawlevel+0xbc>
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    c322:	87 30       	cpi	r24, 0x07	; 7
    c324:	21 f4       	brne	.+8      	; 0xc32e <drawlevel+0xa6>
    c326:	f3 01       	movw	r30, r6
    c328:	e5 5f       	subi	r30, 0xF5	; 245
    c32a:	fc 4e       	sbci	r31, 0xEC	; 236
    c32c:	0b c0       	rjmp	.+22     	; 0xc344 <drawlevel+0xbc>
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    c32e:	88 30       	cpi	r24, 0x08	; 8
    c330:	21 f4       	brne	.+8      	; 0xc33a <drawlevel+0xb2>
    c332:	f3 01       	movw	r30, r6
    c334:	e1 5e       	subi	r30, 0xE1	; 225
    c336:	f1 4f       	sbci	r31, 0xF1	; 241
    c338:	05 c0       	rjmp	.+10     	; 0xc344 <drawlevel+0xbc>
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    c33a:	89 30       	cpi	r24, 0x09	; 9
    c33c:	21 f4       	brne	.+8      	; 0xc346 <drawlevel+0xbe>
    c33e:	f3 01       	movw	r30, r6
    c340:	ed 5c       	subi	r30, 0xCD	; 205
    c342:	f6 4f       	sbci	r31, 0xF6	; 246
    c344:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c346:	11 30       	cpi	r17, 0x01	; 1
    c348:	19 f4       	brne	.+6      	; 0xc350 <drawlevel+0xc8>
    c34a:	40 e8       	ldi	r20, 0x80	; 128
    c34c:	59 e7       	ldi	r21, 0x79	; 121
    c34e:	25 c0       	rjmp	.+74     	; 0xc39a <drawlevel+0x112>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    c350:	12 30       	cpi	r17, 0x02	; 2
    c352:	19 f4       	brne	.+6      	; 0xc35a <drawlevel+0xd2>
    c354:	4e e8       	ldi	r20, 0x8E	; 142
    c356:	59 e7       	ldi	r21, 0x79	; 121
    c358:	20 c0       	rjmp	.+64     	; 0xc39a <drawlevel+0x112>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    c35a:	13 30       	cpi	r17, 0x03	; 3
    c35c:	19 f4       	brne	.+6      	; 0xc364 <drawlevel+0xdc>
    c35e:	48 e8       	ldi	r20, 0x88	; 136
    c360:	59 e7       	ldi	r21, 0x79	; 121
    c362:	1b c0       	rjmp	.+54     	; 0xc39a <drawlevel+0x112>
    if ( c == 4 ) {
    c364:	14 30       	cpi	r17, 0x04	; 4
    c366:	29 f4       	brne	.+10     	; 0xc372 <drawlevel+0xea>
        if(level == 5)
    c368:	85 30       	cpi	r24, 0x05	; 5
    c36a:	81 f0       	breq	.+32     	; 0xc38c <drawlevel+0x104>
        {
            DrawMap2(destx  ,yi *2  ,blackblock);
        }
        else{
            DrawMap2(destx  ,yi *2  ,block2);
    c36c:	4e e3       	ldi	r20, 0x3E	; 62
    c36e:	59 e7       	ldi	r21, 0x79	; 121
    c370:	14 c0       	rjmp	.+40     	; 0xc39a <drawlevel+0x112>
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    c372:	15 30       	cpi	r17, 0x05	; 5
    c374:	19 f4       	brne	.+6      	; 0xc37c <drawlevel+0xf4>
    c376:	48 e7       	ldi	r20, 0x78	; 120
    c378:	59 e7       	ldi	r21, 0x79	; 121
    c37a:	0f c0       	rjmp	.+30     	; 0xc39a <drawlevel+0x112>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    c37c:	16 30       	cpi	r17, 0x06	; 6
    c37e:	49 f4       	brne	.+18     	; 0xc392 <drawlevel+0x10a>
    c380:	40 e7       	ldi	r20, 0x70	; 112
    c382:	59 e7       	ldi	r21, 0x79	; 121
    c384:	0a c0       	rjmp	.+20     	; 0xc39a <drawlevel+0x112>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    c386:	12 32       	cpi	r17, 0x22	; 34
    c388:	09 f0       	breq	.+2      	; 0xc38c <drawlevel+0x104>
    c38a:	69 c0       	rjmp	.+210    	; 0xc45e <drawlevel+0x1d6>
    c38c:	4a e0       	ldi	r20, 0x0A	; 10
    c38e:	59 e7       	ldi	r21, 0x79	; 121
    c390:	04 c0       	rjmp	.+8      	; 0xc39a <drawlevel+0x112>
            DrawMap2(destx  ,yi *2  ,block2);
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    c392:	17 30       	cpi	r17, 0x07	; 7
    c394:	39 f5       	brne	.+78     	; 0xc3e4 <drawlevel+0x15c>
    c396:	48 e3       	ldi	r20, 0x38	; 56
    c398:	59 e7       	ldi	r21, 0x79	; 121
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    if ( c == 50 ) setowl(destx,  yi *2);    
    if ( c == 51 ) setblob(destx, yi *2);  
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    c39a:	6c 2f       	mov	r22, r28
    c39c:	8b 2d       	mov	r24, r11
    c39e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c3a2:	22 96       	adiw	r28, 0x02	; 2
    c3a4:	8a e5       	ldi	r24, 0x5A	; 90
    c3a6:	68 0e       	add	r6, r24
    c3a8:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    c3aa:	cc 31       	cpi	r28, 0x1C	; 28
    c3ac:	d1 05       	cpc	r29, r1
    c3ae:	09 f0       	breq	.+2      	; 0xc3b2 <drawlevel+0x12a>
    c3b0:	8c cf       	rjmp	.-232    	; 0xc2ca <drawlevel+0x42>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c3b2:	8f ef       	ldi	r24, 0xFF	; 255
    c3b4:	c8 1a       	sub	r12, r24
    c3b6:	d8 0a       	sbc	r13, r24
    c3b8:	82 e0       	ldi	r24, 0x02	; 2
    c3ba:	e8 0e       	add	r14, r24
    c3bc:	f1 1c       	adc	r15, r1
    c3be:	0e 5f       	subi	r16, 0xFE	; 254
    c3c0:	80 e2       	ldi	r24, 0x20	; 32
    c3c2:	e8 16       	cp	r14, r24
    c3c4:	f1 04       	cpc	r15, r1
    c3c6:	09 f0       	breq	.+2      	; 0xc3ca <drawlevel+0x142>
    c3c8:	7c cf       	rjmp	.-264    	; 0xc2c2 <drawlevel+0x3a>
    if ( c == 51 ) setblob(destx, yi *2);  
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    }
    }

}
    c3ca:	df 91       	pop	r29
    c3cc:	cf 91       	pop	r28
    c3ce:	1f 91       	pop	r17
    c3d0:	0f 91       	pop	r16
    c3d2:	ff 90       	pop	r15
    c3d4:	ef 90       	pop	r14
    c3d6:	df 90       	pop	r13
    c3d8:	cf 90       	pop	r12
    c3da:	bf 90       	pop	r11
    c3dc:	8f 90       	pop	r8
    c3de:	7f 90       	pop	r7
    c3e0:	6f 90       	pop	r6
    c3e2:	08 95       	ret
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    c3e4:	18 30       	cpi	r17, 0x08	; 8
    c3e6:	19 f4       	brne	.+6      	; 0xc3ee <drawlevel+0x166>
    c3e8:	48 e6       	ldi	r20, 0x68	; 104
    c3ea:	59 e7       	ldi	r21, 0x79	; 121
    c3ec:	d6 cf       	rjmp	.-84     	; 0xc39a <drawlevel+0x112>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    c3ee:	19 30       	cpi	r17, 0x09	; 9
    c3f0:	19 f4       	brne	.+6      	; 0xc3f8 <drawlevel+0x170>
    c3f2:	42 e6       	ldi	r20, 0x62	; 98
    c3f4:	59 e7       	ldi	r21, 0x79	; 121
    c3f6:	d1 cf       	rjmp	.-94     	; 0xc39a <drawlevel+0x112>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    c3f8:	1a 30       	cpi	r17, 0x0A	; 10
    c3fa:	19 f4       	brne	.+6      	; 0xc402 <drawlevel+0x17a>
    c3fc:	4c e5       	ldi	r20, 0x5C	; 92
    c3fe:	59 e7       	ldi	r21, 0x79	; 121
    c400:	cc cf       	rjmp	.-104    	; 0xc39a <drawlevel+0x112>
    if ( c == 11 ) DrawMap2(destx ,yi *2  ,tube0);
    c402:	1b 30       	cpi	r17, 0x0B	; 11
    c404:	19 f4       	brne	.+6      	; 0xc40c <drawlevel+0x184>
    c406:	46 ee       	ldi	r20, 0xE6	; 230
    c408:	58 e7       	ldi	r21, 0x78	; 120
    c40a:	c7 cf       	rjmp	.-114    	; 0xc39a <drawlevel+0x112>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,tube1);
    c40c:	1c 30       	cpi	r17, 0x0C	; 12
    c40e:	19 f4       	brne	.+6      	; 0xc416 <drawlevel+0x18e>
    c410:	40 ee       	ldi	r20, 0xE0	; 224
    c412:	58 e7       	ldi	r21, 0x78	; 120
    c414:	c2 cf       	rjmp	.-124    	; 0xc39a <drawlevel+0x112>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,tube2);
    c416:	1d 30       	cpi	r17, 0x0D	; 13
    c418:	19 f4       	brne	.+6      	; 0xc420 <drawlevel+0x198>
    c41a:	4a ed       	ldi	r20, 0xDA	; 218
    c41c:	58 e7       	ldi	r21, 0x78	; 120
    c41e:	bd cf       	rjmp	.-134    	; 0xc39a <drawlevel+0x112>
    if ( c == 14 ) DrawMap2(destx ,yi *2  ,tube3);
    c420:	1e 30       	cpi	r17, 0x0E	; 14
    c422:	19 f4       	brne	.+6      	; 0xc42a <drawlevel+0x1a2>
    c424:	44 ed       	ldi	r20, 0xD4	; 212
    c426:	58 e7       	ldi	r21, 0x78	; 120
    c428:	b8 cf       	rjmp	.-144    	; 0xc39a <drawlevel+0x112>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    c42a:	1f 30       	cpi	r17, 0x0F	; 15
    c42c:	19 f4       	brne	.+6      	; 0xc434 <drawlevel+0x1ac>
    c42e:	4e ec       	ldi	r20, 0xCE	; 206
    c430:	58 e7       	ldi	r21, 0x78	; 120
    c432:	b3 cf       	rjmp	.-154    	; 0xc39a <drawlevel+0x112>
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    c434:	10 31       	cpi	r17, 0x10	; 16
    c436:	19 f4       	brne	.+6      	; 0xc43e <drawlevel+0x1b6>
    c438:	48 ec       	ldi	r20, 0xC8	; 200
    c43a:	58 e7       	ldi	r21, 0x78	; 120
    c43c:	ae cf       	rjmp	.-164    	; 0xc39a <drawlevel+0x112>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    c43e:	1f 31       	cpi	r17, 0x1F	; 31
    c440:	19 f4       	brne	.+6      	; 0xc448 <drawlevel+0x1c0>
    c442:	4f e1       	ldi	r20, 0x1F	; 31
    c444:	59 e7       	ldi	r21, 0x79	; 121
    c446:	a9 cf       	rjmp	.-174    	; 0xc39a <drawlevel+0x112>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    c448:	10 32       	cpi	r17, 0x20	; 32
    c44a:	19 f4       	brne	.+6      	; 0xc452 <drawlevel+0x1ca>
    c44c:	49 e1       	ldi	r20, 0x19	; 25
    c44e:	59 e7       	ldi	r21, 0x79	; 121
    c450:	a4 cf       	rjmp	.-184    	; 0xc39a <drawlevel+0x112>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    c452:	11 32       	cpi	r17, 0x21	; 33
    c454:	09 f0       	breq	.+2      	; 0xc458 <drawlevel+0x1d0>
    c456:	97 cf       	rjmp	.-210    	; 0xc386 <drawlevel+0xfe>
    c458:	43 e1       	ldi	r20, 0x13	; 19
    c45a:	59 e7       	ldi	r21, 0x79	; 121
    c45c:	9e cf       	rjmp	.-196    	; 0xc39a <drawlevel+0x112>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    c45e:	13 32       	cpi	r17, 0x23	; 35
    c460:	c9 f1       	breq	.+114    	; 0xc4d4 <drawlevel+0x24c>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    c462:	14 32       	cpi	r17, 0x24	; 36
    c464:	19 f4       	brne	.+6      	; 0xc46c <drawlevel+0x1e4>
    c466:	48 ef       	ldi	r20, 0xF8	; 248
    c468:	58 e7       	ldi	r21, 0x78	; 120
    c46a:	97 cf       	rjmp	.-210    	; 0xc39a <drawlevel+0x112>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    c46c:	15 32       	cpi	r17, 0x25	; 37
    c46e:	19 f4       	brne	.+6      	; 0xc476 <drawlevel+0x1ee>
    c470:	42 ef       	ldi	r20, 0xF2	; 242
    c472:	58 e7       	ldi	r21, 0x78	; 120
    c474:	92 cf       	rjmp	.-220    	; 0xc39a <drawlevel+0x112>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    c476:	16 32       	cpi	r17, 0x26	; 38
    c478:	19 f4       	brne	.+6      	; 0xc480 <drawlevel+0x1f8>
    c47a:	4c ee       	ldi	r20, 0xEC	; 236
    c47c:	58 e7       	ldi	r21, 0x78	; 120
    c47e:	8d cf       	rjmp	.-230    	; 0xc39a <drawlevel+0x112>
    if ( c == 39 ) {DrawMap2(destx ,yi *2 ,bridge0);DrawMap2(destx +1 ,yi *2  ,bridge0);DrawMap2(destx  ,yi *2 +1 ,nb);DrawMap2(destx +1 ,yi *2 +1 ,nb);};
    c480:	17 32       	cpi	r17, 0x27	; 39
    c482:	c1 f4       	brne	.+48     	; 0xc4b4 <drawlevel+0x22c>
    c484:	4d ea       	ldi	r20, 0xAD	; 173
    c486:	58 e7       	ldi	r21, 0x78	; 120
    c488:	6c 2f       	mov	r22, r28
    c48a:	8b 2d       	mov	r24, r11
    c48c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c490:	4d ea       	ldi	r20, 0xAD	; 173
    c492:	58 e7       	ldi	r21, 0x78	; 120
    c494:	6c 2f       	mov	r22, r28
    c496:	80 2f       	mov	r24, r16
    c498:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c49c:	41 ea       	ldi	r20, 0xA1	; 161
    c49e:	58 e7       	ldi	r21, 0x78	; 120
    c4a0:	8c 2e       	mov	r8, r28
    c4a2:	83 94       	inc	r8
    c4a4:	68 2d       	mov	r22, r8
    c4a6:	8b 2d       	mov	r24, r11
    c4a8:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c4ac:	41 ea       	ldi	r20, 0xA1	; 161
    c4ae:	58 e7       	ldi	r21, 0x78	; 120
    c4b0:	68 2d       	mov	r22, r8
    c4b2:	3d c0       	rjmp	.+122    	; 0xc52e <drawlevel+0x2a6>
    if ( c == 21 ) {makeWater(destx,yi *2,scrolltiles);}
    c4b4:	15 31       	cpi	r17, 0x15	; 21
    c4b6:	41 f4       	brne	.+16     	; 0xc4c8 <drawlevel+0x240>
    c4b8:	40 91 8f 0a 	lds	r20, 0x0A8F	; 0x800a8f <scrolltiles>
    c4bc:	50 e0       	ldi	r21, 0x00	; 0
    c4be:	be 01       	movw	r22, r28
    c4c0:	c7 01       	movw	r24, r14
    c4c2:	0e 94 56 52 	call	0xa4ac	; 0xa4ac <makeWater>
    c4c6:	6d cf       	rjmp	.-294    	; 0xc3a2 <drawlevel+0x11a>

if ( c == 22 ) DrawMap2(destx ,yi *2  ,cloud0);
    c4c8:	16 31       	cpi	r17, 0x16	; 22
    c4ca:	21 f0       	breq	.+8      	; 0xc4d4 <drawlevel+0x24c>
if ( c == 23 ) DrawMap2(destx ,yi *2  ,cloud0);
    c4cc:	17 31       	cpi	r17, 0x17	; 23
    c4ce:	11 f0       	breq	.+4      	; 0xc4d4 <drawlevel+0x24c>
if ( c == 24 ) DrawMap2(destx ,yi *2  ,cloud0);
    c4d0:	18 31       	cpi	r17, 0x18	; 24
    c4d2:	19 f4       	brne	.+6      	; 0xc4da <drawlevel+0x252>
    c4d4:	4e ef       	ldi	r20, 0xFE	; 254
    c4d6:	58 e7       	ldi	r21, 0x78	; 120
    c4d8:	60 cf       	rjmp	.-320    	; 0xc39a <drawlevel+0x112>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    c4da:	19 31       	cpi	r17, 0x19	; 25
    c4dc:	19 f4       	brne	.+6      	; 0xc4e4 <drawlevel+0x25c>
    c4de:	46 e5       	ldi	r20, 0x56	; 86
    c4e0:	59 e7       	ldi	r21, 0x79	; 121
    c4e2:	5b cf       	rjmp	.-330    	; 0xc39a <drawlevel+0x112>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    c4e4:	1a 31       	cpi	r17, 0x1A	; 26
    c4e6:	19 f4       	brne	.+6      	; 0xc4ee <drawlevel+0x266>
    c4e8:	40 e5       	ldi	r20, 0x50	; 80
    c4ea:	59 e7       	ldi	r21, 0x79	; 121
    c4ec:	56 cf       	rjmp	.-340    	; 0xc39a <drawlevel+0x112>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    c4ee:	1b 31       	cpi	r17, 0x1B	; 27
    c4f0:	19 f4       	brne	.+6      	; 0xc4f8 <drawlevel+0x270>
    c4f2:	4a e4       	ldi	r20, 0x4A	; 74
    c4f4:	59 e7       	ldi	r21, 0x79	; 121
    c4f6:	51 cf       	rjmp	.-350    	; 0xc39a <drawlevel+0x112>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    c4f8:	1c 31       	cpi	r17, 0x1C	; 28
    c4fa:	19 f4       	brne	.+6      	; 0xc502 <drawlevel+0x27a>
    c4fc:	44 e4       	ldi	r20, 0x44	; 68
    c4fe:	59 e7       	ldi	r21, 0x79	; 121
    c500:	4c cf       	rjmp	.-360    	; 0xc39a <drawlevel+0x112>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    c502:	1d 31       	cpi	r17, 0x1D	; 29
    c504:	49 f4       	brne	.+18     	; 0xc518 <drawlevel+0x290>
    c506:	4d e2       	ldi	r20, 0x2D	; 45
    c508:	58 e7       	ldi	r21, 0x78	; 120
    c50a:	6c 2f       	mov	r22, r28
    c50c:	8b 2d       	mov	r24, r11
    c50e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c512:	4d e2       	ldi	r20, 0x2D	; 45
    c514:	58 e7       	ldi	r21, 0x78	; 120
    c516:	0a c0       	rjmp	.+20     	; 0xc52c <drawlevel+0x2a4>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    c518:	1e 31       	cpi	r17, 0x1E	; 30
    c51a:	59 f4       	brne	.+22     	; 0xc532 <drawlevel+0x2aa>
    c51c:	49 e2       	ldi	r20, 0x29	; 41
    c51e:	58 e7       	ldi	r21, 0x78	; 120
    c520:	6c 2f       	mov	r22, r28
    c522:	8b 2d       	mov	r24, r11
    c524:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c528:	49 e2       	ldi	r20, 0x29	; 41
    c52a:	58 e7       	ldi	r21, 0x78	; 120
    c52c:	6c 2f       	mov	r22, r28
    c52e:	80 2f       	mov	r24, r16
    c530:	36 cf       	rjmp	.-404    	; 0xc39e <drawlevel+0x116>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    c532:	19 32       	cpi	r17, 0x29	; 41
    c534:	19 f4       	brne	.+6      	; 0xc53c <drawlevel+0x2b4>
    c536:	42 e3       	ldi	r20, 0x32	; 50
    c538:	59 e7       	ldi	r21, 0x79	; 121
    c53a:	2f cf       	rjmp	.-418    	; 0xc39a <drawlevel+0x112>
    if ( c == 50 ) setowl(destx,  yi *2);    
    c53c:	12 33       	cpi	r17, 0x32	; 50
    c53e:	29 f4       	brne	.+10     	; 0xc54a <drawlevel+0x2c2>
    c540:	be 01       	movw	r22, r28
    c542:	c7 01       	movw	r24, r14
    c544:	0e 94 ca 60 	call	0xc194	; 0xc194 <setowl>
    c548:	2c cf       	rjmp	.-424    	; 0xc3a2 <drawlevel+0x11a>
    if ( c == 51 ) setblob(destx, yi *2);  
    c54a:	13 33       	cpi	r17, 0x33	; 51
    c54c:	29 f4       	brne	.+10     	; 0xc558 <drawlevel+0x2d0>
    c54e:	be 01       	movw	r22, r28
    c550:	c7 01       	movw	r24, r14
    c552:	0e 94 07 61 	call	0xc20e	; 0xc20e <setblob>
    c556:	25 cf       	rjmp	.-438    	; 0xc3a2 <drawlevel+0x11a>
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    c558:	1e 33       	cpi	r17, 0x3E	; 62
    c55a:	09 f0       	breq	.+2      	; 0xc55e <drawlevel+0x2d6>
    c55c:	22 cf       	rjmp	.-444    	; 0xc3a2 <drawlevel+0x11a>
    c55e:	44 e0       	ldi	r20, 0x04	; 4
    c560:	59 e7       	ldi	r21, 0x79	; 121
    c562:	1b cf       	rjmp	.-458    	; 0xc39a <drawlevel+0x112>

0000c564 <updatelevel>:
//}
    }
    
}
void updatelevel()
{
    c564:	cf 92       	push	r12
    c566:	df 92       	push	r13
    c568:	ef 92       	push	r14
    c56a:	ff 92       	push	r15
    c56c:	1f 93       	push	r17
    c56e:	cf 93       	push	r28
    c570:	df 93       	push	r29
    c572:	c0 e0       	ldi	r28, 0x00	; 0
    c574:	d0 e0       	ldi	r29, 0x00	; 0
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c576:	c1 2c       	mov	r12, r1
    c578:	d1 2c       	mov	r13, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    c57a:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    c57e:	81 11       	cpse	r24, r1
    c580:	08 c0       	rjmp	.+16     	; 0xc592 <updatelevel+0x2e>
    c582:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c586:	fe 01       	movw	r30, r28
    c588:	e9 0f       	add	r30, r25
    c58a:	f1 1d       	adc	r31, r1
    c58c:	e1 57       	subi	r30, 0x71	; 113
    c58e:	fa 4c       	sbci	r31, 0xCA	; 202
    c590:	59 c0       	rjmp	.+178    	; 0xc644 <updatelevel+0xe0>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    c592:	81 30       	cpi	r24, 0x01	; 1
    c594:	41 f4       	brne	.+16     	; 0xc5a6 <updatelevel+0x42>
    c596:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c59a:	fe 01       	movw	r30, r28
    c59c:	e9 0f       	add	r30, r25
    c59e:	f1 1d       	adc	r31, r1
    c5a0:	ed 55       	subi	r30, 0x5D	; 93
    c5a2:	ff 4c       	sbci	r31, 0xCF	; 207
    c5a4:	4f c0       	rjmp	.+158    	; 0xc644 <updatelevel+0xe0>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    c5a6:	82 30       	cpi	r24, 0x02	; 2
    c5a8:	41 f4       	brne	.+16     	; 0xc5ba <updatelevel+0x56>
    c5aa:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c5ae:	fe 01       	movw	r30, r28
    c5b0:	e9 0f       	add	r30, r25
    c5b2:	f1 1d       	adc	r31, r1
    c5b4:	e9 54       	subi	r30, 0x49	; 73
    c5b6:	f4 4d       	sbci	r31, 0xD4	; 212
    c5b8:	45 c0       	rjmp	.+138    	; 0xc644 <updatelevel+0xe0>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    c5ba:	83 30       	cpi	r24, 0x03	; 3
    c5bc:	41 f4       	brne	.+16     	; 0xc5ce <updatelevel+0x6a>
    c5be:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c5c2:	fe 01       	movw	r30, r28
    c5c4:	e9 0f       	add	r30, r25
    c5c6:	f1 1d       	adc	r31, r1
    c5c8:	e5 53       	subi	r30, 0x35	; 53
    c5ca:	f9 4d       	sbci	r31, 0xD9	; 217
    c5cc:	3b c0       	rjmp	.+118    	; 0xc644 <updatelevel+0xe0>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    c5ce:	84 30       	cpi	r24, 0x04	; 4
    c5d0:	41 f4       	brne	.+16     	; 0xc5e2 <updatelevel+0x7e>
    c5d2:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c5d6:	fe 01       	movw	r30, r28
    c5d8:	e9 0f       	add	r30, r25
    c5da:	f1 1d       	adc	r31, r1
    c5dc:	e1 52       	subi	r30, 0x21	; 33
    c5de:	fe 4d       	sbci	r31, 0xDE	; 222
    c5e0:	31 c0       	rjmp	.+98     	; 0xc644 <updatelevel+0xe0>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    c5e2:	85 30       	cpi	r24, 0x05	; 5
    c5e4:	41 f4       	brne	.+16     	; 0xc5f6 <updatelevel+0x92>
    c5e6:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c5ea:	fe 01       	movw	r30, r28
    c5ec:	e9 0f       	add	r30, r25
    c5ee:	f1 1d       	adc	r31, r1
    c5f0:	ed 50       	subi	r30, 0x0D	; 13
    c5f2:	f3 4e       	sbci	r31, 0xE3	; 227
    c5f4:	27 c0       	rjmp	.+78     	; 0xc644 <updatelevel+0xe0>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    c5f6:	86 30       	cpi	r24, 0x06	; 6
    c5f8:	41 f4       	brne	.+16     	; 0xc60a <updatelevel+0xa6>
    c5fa:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c5fe:	fe 01       	movw	r30, r28
    c600:	e9 0f       	add	r30, r25
    c602:	f1 1d       	adc	r31, r1
    c604:	e9 5f       	subi	r30, 0xF9	; 249
    c606:	f7 4e       	sbci	r31, 0xE7	; 231
    c608:	1d c0       	rjmp	.+58     	; 0xc644 <updatelevel+0xe0>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    c60a:	87 30       	cpi	r24, 0x07	; 7
    c60c:	41 f4       	brne	.+16     	; 0xc61e <updatelevel+0xba>
    c60e:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c612:	fe 01       	movw	r30, r28
    c614:	e9 0f       	add	r30, r25
    c616:	f1 1d       	adc	r31, r1
    c618:	e5 5e       	subi	r30, 0xE5	; 229
    c61a:	fc 4e       	sbci	r31, 0xEC	; 236
    c61c:	13 c0       	rjmp	.+38     	; 0xc644 <updatelevel+0xe0>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    c61e:	88 30       	cpi	r24, 0x08	; 8
    c620:	41 f4       	brne	.+16     	; 0xc632 <updatelevel+0xce>
    c622:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c626:	fe 01       	movw	r30, r28
    c628:	e9 0f       	add	r30, r25
    c62a:	f1 1d       	adc	r31, r1
    c62c:	e1 5d       	subi	r30, 0xD1	; 209
    c62e:	f1 4f       	sbci	r31, 0xF1	; 241
    c630:	09 c0       	rjmp	.+18     	; 0xc644 <updatelevel+0xe0>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    c632:	89 30       	cpi	r24, 0x09	; 9
    c634:	41 f4       	brne	.+16     	; 0xc646 <updatelevel+0xe2>
    c636:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <scrolltiles>
    c63a:	fe 01       	movw	r30, r28
    c63c:	e9 0f       	add	r30, r25
    c63e:	f1 1d       	adc	r31, r1
    c640:	ed 5b       	subi	r30, 0xBD	; 189
    c642:	f6 4f       	sbci	r31, 0xF6	; 246
    c644:	14 91       	lpm	r17, Z
    xi = yi << 1;
    c646:	76 01       	movw	r14, r12
    c648:	ee 0c       	add	r14, r14
    c64a:	ff 1c       	adc	r15, r15
    if ( c == 0 ) {
    c64c:	11 11       	cpse	r17, r1
    c64e:	1c c0       	rjmp	.+56     	; 0xc688 <updatelevel+0x124>
        if(level == 5)
    c650:	85 30       	cpi	r24, 0x05	; 5
    c652:	19 f4       	brne	.+6      	; 0xc65a <updatelevel+0xf6>
        {
        DrawMap2(destX,xi  ,black);
    c654:	43 e1       	ldi	r20, 0x13	; 19
    c656:	59 e7       	ldi	r21, 0x79	; 121
    c658:	02 c0       	rjmp	.+4      	; 0xc65e <updatelevel+0xfa>
        }
        else{
        DrawMap2(destX,xi  ,bigblue0); 
    c65a:	44 e9       	ldi	r20, 0x94	; 148
    c65c:	59 e7       	ldi	r21, 0x79	; 121
    c65e:	6e 2d       	mov	r22, r14
    c660:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c664:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
        }
    }
    if ( c == 0 && yi == 12 ) {
    c668:	8c e0       	ldi	r24, 0x0C	; 12
    c66a:	c8 16       	cp	r12, r24
    c66c:	d1 04       	cpc	r13, r1
    c66e:	f9 f4       	brne	.+62     	; 0xc6ae <updatelevel+0x14a>
        if(level == 5)
    c670:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    c674:	61 e0       	ldi	r22, 0x01	; 1
    c676:	6e 0d       	add	r22, r14
    c678:	85 30       	cpi	r24, 0x05	; 5
    c67a:	19 f4       	brne	.+6      	; 0xc682 <updatelevel+0x11e>
        {
        DrawMap2(destX,xi + 1,black);
    c67c:	43 e1       	ldi	r20, 0x13	; 19
    c67e:	59 e7       	ldi	r21, 0x79	; 121
    c680:	12 c0       	rjmp	.+36     	; 0xc6a6 <updatelevel+0x142>
        }
        else{
        DrawMap2(destX,xi + 1,bigblue0); 
    c682:	44 e9       	ldi	r20, 0x94	; 148
    c684:	59 e7       	ldi	r21, 0x79	; 121
    c686:	0f c0       	rjmp	.+30     	; 0xc6a6 <updatelevel+0x142>
        }  
    } 
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    c688:	11 30       	cpi	r17, 0x01	; 1
    c68a:	19 f4       	brne	.+6      	; 0xc692 <updatelevel+0x12e>
    c68c:	40 e8       	ldi	r20, 0x80	; 128
    c68e:	59 e7       	ldi	r21, 0x79	; 121
    c690:	09 c0       	rjmp	.+18     	; 0xc6a4 <updatelevel+0x140>
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    c692:	12 30       	cpi	r17, 0x02	; 2
    c694:	19 f4       	brne	.+6      	; 0xc69c <updatelevel+0x138>
    c696:	4e e8       	ldi	r20, 0x8E	; 142
    c698:	59 e7       	ldi	r21, 0x79	; 121
    c69a:	04 c0       	rjmp	.+8      	; 0xc6a4 <updatelevel+0x140>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    c69c:	13 30       	cpi	r17, 0x03	; 3
    c69e:	e1 f4       	brne	.+56     	; 0xc6d8 <updatelevel+0x174>
    c6a0:	48 e8       	ldi	r20, 0x88	; 136
    c6a2:	59 e7       	ldi	r21, 0x79	; 121
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    c6a4:	6e 2d       	mov	r22, r14
    c6a6:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c6aa:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
{
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c6ae:	8f ef       	ldi	r24, 0xFF	; 255
    c6b0:	c8 1a       	sub	r12, r24
    c6b2:	d8 0a       	sbc	r13, r24
    c6b4:	c6 5a       	subi	r28, 0xA6	; 166
    c6b6:	df 4f       	sbci	r29, 0xFF	; 255
    c6b8:	8d e0       	ldi	r24, 0x0D	; 13
    c6ba:	c8 16       	cp	r12, r24
    c6bc:	d1 04       	cpc	r13, r1
    c6be:	09 f0       	breq	.+2      	; 0xc6c2 <updatelevel+0x15e>
    c6c0:	5c cf       	rjmp	.-328    	; 0xc57a <updatelevel+0x16>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c6c2:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c6c6:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32){
    c6c8:	80 32       	cpi	r24, 0x20	; 32
    c6ca:	18 f4       	brcc	.+6      	; 0xc6d2 <updatelevel+0x16e>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c6cc:	80 93 1a 0a 	sts	0x0A1A, r24	; 0x800a1a <destX>
    c6d0:	f7 c0       	rjmp	.+494    	; 0xc8c0 <updatelevel+0x35c>
if(destX>=32){
    destX=0;
    c6d2:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <destX>
}
}
    c6d6:	f4 c0       	rjmp	.+488    	; 0xc8c0 <updatelevel+0x35c>
        }  
    } 
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) {
    c6d8:	14 30       	cpi	r17, 0x04	; 4
    c6da:	29 f4       	brne	.+10     	; 0xc6e6 <updatelevel+0x182>
        if(level == 5)
    c6dc:	85 30       	cpi	r24, 0x05	; 5
    c6de:	81 f0       	breq	.+32     	; 0xc700 <updatelevel+0x19c>
        {
        DrawMap2(destX,xi  ,blackblock);
        }
        else{
        DrawMap2(destX,xi  ,block2); 
    c6e0:	4e e3       	ldi	r20, 0x3E	; 62
    c6e2:	59 e7       	ldi	r21, 0x79	; 121
    c6e4:	df cf       	rjmp	.-66     	; 0xc6a4 <updatelevel+0x140>
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    c6e6:	15 30       	cpi	r17, 0x05	; 5
    c6e8:	19 f4       	brne	.+6      	; 0xc6f0 <updatelevel+0x18c>
    c6ea:	48 e7       	ldi	r20, 0x78	; 120
    c6ec:	59 e7       	ldi	r21, 0x79	; 121
    c6ee:	da cf       	rjmp	.-76     	; 0xc6a4 <updatelevel+0x140>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    c6f0:	16 30       	cpi	r17, 0x06	; 6
    c6f2:	49 f4       	brne	.+18     	; 0xc706 <updatelevel+0x1a2>
    c6f4:	40 e7       	ldi	r20, 0x70	; 112
    c6f6:	59 e7       	ldi	r21, 0x79	; 121
    c6f8:	d5 cf       	rjmp	.-86     	; 0xc6a4 <updatelevel+0x140>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    c6fa:	12 32       	cpi	r17, 0x22	; 34
    c6fc:	09 f0       	breq	.+2      	; 0xc700 <updatelevel+0x19c>
    c6fe:	45 c0       	rjmp	.+138    	; 0xc78a <updatelevel+0x226>
    c700:	4a e0       	ldi	r20, 0x0A	; 10
    c702:	59 e7       	ldi	r21, 0x79	; 121
    c704:	cf cf       	rjmp	.-98     	; 0xc6a4 <updatelevel+0x140>
        DrawMap2(destX,xi  ,block2); 
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    c706:	17 30       	cpi	r17, 0x07	; 7
    c708:	19 f4       	brne	.+6      	; 0xc710 <updatelevel+0x1ac>
    c70a:	48 e3       	ldi	r20, 0x38	; 56
    c70c:	59 e7       	ldi	r21, 0x79	; 121
    c70e:	ca cf       	rjmp	.-108    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    c710:	18 30       	cpi	r17, 0x08	; 8
    c712:	19 f4       	brne	.+6      	; 0xc71a <updatelevel+0x1b6>
    c714:	48 e6       	ldi	r20, 0x68	; 104
    c716:	59 e7       	ldi	r21, 0x79	; 121
    c718:	c5 cf       	rjmp	.-118    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    c71a:	19 30       	cpi	r17, 0x09	; 9
    c71c:	19 f4       	brne	.+6      	; 0xc724 <updatelevel+0x1c0>
    c71e:	42 e6       	ldi	r20, 0x62	; 98
    c720:	59 e7       	ldi	r21, 0x79	; 121
    c722:	c0 cf       	rjmp	.-128    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    c724:	1a 30       	cpi	r17, 0x0A	; 10
    c726:	19 f4       	brne	.+6      	; 0xc72e <updatelevel+0x1ca>
    c728:	4c e5       	ldi	r20, 0x5C	; 92
    c72a:	59 e7       	ldi	r21, 0x79	; 121
    c72c:	bb cf       	rjmp	.-138    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 11 ) DrawMap2(destX ,xi  ,tube0);
    c72e:	1b 30       	cpi	r17, 0x0B	; 11
    c730:	19 f4       	brne	.+6      	; 0xc738 <updatelevel+0x1d4>
    c732:	46 ee       	ldi	r20, 0xE6	; 230
    c734:	58 e7       	ldi	r21, 0x78	; 120
    c736:	b6 cf       	rjmp	.-148    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 12 ) DrawMap2(destX ,xi  ,tube1);
    c738:	1c 30       	cpi	r17, 0x0C	; 12
    c73a:	19 f4       	brne	.+6      	; 0xc742 <updatelevel+0x1de>
    c73c:	40 ee       	ldi	r20, 0xE0	; 224
    c73e:	58 e7       	ldi	r21, 0x78	; 120
    c740:	b1 cf       	rjmp	.-158    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 13 ) DrawMap2(destX ,xi  ,tube2);
    c742:	1d 30       	cpi	r17, 0x0D	; 13
    c744:	19 f4       	brne	.+6      	; 0xc74c <updatelevel+0x1e8>
    c746:	4a ed       	ldi	r20, 0xDA	; 218
    c748:	58 e7       	ldi	r21, 0x78	; 120
    c74a:	ac cf       	rjmp	.-168    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 14 ) DrawMap2(destX ,xi  ,tube3);
    c74c:	1e 30       	cpi	r17, 0x0E	; 14
    c74e:	19 f4       	brne	.+6      	; 0xc756 <updatelevel+0x1f2>
    c750:	44 ed       	ldi	r20, 0xD4	; 212
    c752:	58 e7       	ldi	r21, 0x78	; 120
    c754:	a7 cf       	rjmp	.-178    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    c756:	1f 30       	cpi	r17, 0x0F	; 15
    c758:	19 f4       	brne	.+6      	; 0xc760 <updatelevel+0x1fc>
    c75a:	4e ec       	ldi	r20, 0xCE	; 206
    c75c:	58 e7       	ldi	r21, 0x78	; 120
    c75e:	a2 cf       	rjmp	.-188    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    c760:	10 31       	cpi	r17, 0x10	; 16
    c762:	19 f4       	brne	.+6      	; 0xc76a <updatelevel+0x206>
    c764:	48 ec       	ldi	r20, 0xC8	; 200
    c766:	58 e7       	ldi	r21, 0x78	; 120
    c768:	9d cf       	rjmp	.-198    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    c76a:	1f 31       	cpi	r17, 0x1F	; 31
    c76c:	19 f4       	brne	.+6      	; 0xc774 <updatelevel+0x210>
    c76e:	4f e1       	ldi	r20, 0x1F	; 31
    c770:	59 e7       	ldi	r21, 0x79	; 121
    c772:	98 cf       	rjmp	.-208    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    c774:	10 32       	cpi	r17, 0x20	; 32
    c776:	19 f4       	brne	.+6      	; 0xc77e <updatelevel+0x21a>
    c778:	49 e1       	ldi	r20, 0x19	; 25
    c77a:	59 e7       	ldi	r21, 0x79	; 121
    c77c:	93 cf       	rjmp	.-218    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    c77e:	11 32       	cpi	r17, 0x21	; 33
    c780:	09 f0       	breq	.+2      	; 0xc784 <updatelevel+0x220>
    c782:	bb cf       	rjmp	.-138    	; 0xc6fa <updatelevel+0x196>
    c784:	43 e1       	ldi	r20, 0x13	; 19
    c786:	59 e7       	ldi	r21, 0x79	; 121
    c788:	8d cf       	rjmp	.-230    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    c78a:	13 32       	cpi	r17, 0x23	; 35
    c78c:	19 f4       	brne	.+6      	; 0xc794 <updatelevel+0x230>
    c78e:	4e ef       	ldi	r20, 0xFE	; 254
    c790:	58 e7       	ldi	r21, 0x78	; 120
    c792:	88 cf       	rjmp	.-240    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    c794:	14 32       	cpi	r17, 0x24	; 36
    c796:	19 f4       	brne	.+6      	; 0xc79e <updatelevel+0x23a>
    c798:	48 ef       	ldi	r20, 0xF8	; 248
    c79a:	58 e7       	ldi	r21, 0x78	; 120
    c79c:	83 cf       	rjmp	.-250    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    c79e:	15 32       	cpi	r17, 0x25	; 37
    c7a0:	19 f4       	brne	.+6      	; 0xc7a8 <updatelevel+0x244>
    c7a2:	42 ef       	ldi	r20, 0xF2	; 242
    c7a4:	58 e7       	ldi	r21, 0x78	; 120
    c7a6:	7e cf       	rjmp	.-260    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    c7a8:	16 32       	cpi	r17, 0x26	; 38
    c7aa:	19 f4       	brne	.+6      	; 0xc7b2 <updatelevel+0x24e>
    c7ac:	4c ee       	ldi	r20, 0xEC	; 236
    c7ae:	58 e7       	ldi	r21, 0x78	; 120
    c7b0:	79 cf       	rjmp	.-270    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 39 ) {DrawMap2(destX,xi  ,bridge0);DrawMap2(destX +1 ,xi,bridge0);DrawMap2(destX  ,xi + 1 ,nb);DrawMap2(destX +1 ,xi + 1 ,nb);};
    c7b2:	17 32       	cpi	r17, 0x27	; 39
    c7b4:	e1 f4       	brne	.+56     	; 0xc7ee <updatelevel+0x28a>
    c7b6:	4d ea       	ldi	r20, 0xAD	; 173
    c7b8:	58 e7       	ldi	r21, 0x78	; 120
    c7ba:	6e 2d       	mov	r22, r14
    c7bc:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c7c0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c7c4:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c7c8:	4d ea       	ldi	r20, 0xAD	; 173
    c7ca:	58 e7       	ldi	r21, 0x78	; 120
    c7cc:	6e 2d       	mov	r22, r14
    c7ce:	8f 5f       	subi	r24, 0xFF	; 255
    c7d0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c7d4:	e3 94       	inc	r14
    c7d6:	41 ea       	ldi	r20, 0xA1	; 161
    c7d8:	58 e7       	ldi	r21, 0x78	; 120
    c7da:	6e 2d       	mov	r22, r14
    c7dc:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c7e0:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c7e4:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c7e8:	41 ea       	ldi	r20, 0xA1	; 161
    c7ea:	58 e7       	ldi	r21, 0x78	; 120
    c7ec:	3b c0       	rjmp	.+118    	; 0xc864 <updatelevel+0x300>
    if ( c == 21 ) {
    c7ee:	15 31       	cpi	r17, 0x15	; 21
    c7f0:	51 f4       	brne	.+20     	; 0xc806 <updatelevel+0x2a2>
        makeWater(destX,xi,scrolltiles);
    c7f2:	40 91 8f 0a 	lds	r20, 0x0A8F	; 0x800a8f <scrolltiles>
    c7f6:	50 e0       	ldi	r21, 0x00	; 0
    c7f8:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c7fc:	b7 01       	movw	r22, r14
    c7fe:	90 e0       	ldi	r25, 0x00	; 0
    c800:	0e 94 56 52 	call	0xa4ac	; 0xa4ac <makeWater>
    c804:	54 cf       	rjmp	.-344    	; 0xc6ae <updatelevel+0x14a>
    }
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    c806:	19 31       	cpi	r17, 0x19	; 25
    c808:	19 f4       	brne	.+6      	; 0xc810 <updatelevel+0x2ac>
    c80a:	46 e5       	ldi	r20, 0x56	; 86
    c80c:	59 e7       	ldi	r21, 0x79	; 121
    c80e:	4a cf       	rjmp	.-364    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    c810:	1a 31       	cpi	r17, 0x1A	; 26
    c812:	19 f4       	brne	.+6      	; 0xc81a <updatelevel+0x2b6>
    c814:	40 e5       	ldi	r20, 0x50	; 80
    c816:	59 e7       	ldi	r21, 0x79	; 121
    c818:	45 cf       	rjmp	.-374    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    c81a:	1b 31       	cpi	r17, 0x1B	; 27
    c81c:	19 f4       	brne	.+6      	; 0xc824 <updatelevel+0x2c0>
    c81e:	4a e4       	ldi	r20, 0x4A	; 74
    c820:	59 e7       	ldi	r21, 0x79	; 121
    c822:	40 cf       	rjmp	.-384    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    c824:	1c 31       	cpi	r17, 0x1C	; 28
    c826:	19 f4       	brne	.+6      	; 0xc82e <updatelevel+0x2ca>
    c828:	44 e4       	ldi	r20, 0x44	; 68
    c82a:	59 e7       	ldi	r21, 0x79	; 121
    c82c:	3b cf       	rjmp	.-394    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    c82e:	1d 31       	cpi	r17, 0x1D	; 29
    c830:	61 f4       	brne	.+24     	; 0xc84a <updatelevel+0x2e6>
    c832:	4d e2       	ldi	r20, 0x2D	; 45
    c834:	58 e7       	ldi	r21, 0x78	; 120
    c836:	6e 2d       	mov	r22, r14
    c838:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c83c:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c840:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c844:	4d e2       	ldi	r20, 0x2D	; 45
    c846:	58 e7       	ldi	r21, 0x78	; 120
    c848:	0d c0       	rjmp	.+26     	; 0xc864 <updatelevel+0x300>
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    c84a:	1e 31       	cpi	r17, 0x1E	; 30
    c84c:	71 f4       	brne	.+28     	; 0xc86a <updatelevel+0x306>
    c84e:	49 e2       	ldi	r20, 0x29	; 41
    c850:	58 e7       	ldi	r21, 0x78	; 120
    c852:	6e 2d       	mov	r22, r14
    c854:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c858:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c85c:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c860:	49 e2       	ldi	r20, 0x29	; 41
    c862:	58 e7       	ldi	r21, 0x78	; 120
    c864:	6e 2d       	mov	r22, r14
    c866:	8f 5f       	subi	r24, 0xFF	; 255
    c868:	20 cf       	rjmp	.-448    	; 0xc6aa <updatelevel+0x146>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    c86a:	19 32       	cpi	r17, 0x29	; 41
    c86c:	19 f4       	brne	.+6      	; 0xc874 <updatelevel+0x310>
    c86e:	42 e3       	ldi	r20, 0x32	; 50
    c870:	59 e7       	ldi	r21, 0x79	; 121
    c872:	18 cf       	rjmp	.-464    	; 0xc6a4 <updatelevel+0x140>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    c874:	12 33       	cpi	r17, 0x32	; 50
    c876:	71 f4       	brne	.+28     	; 0xc894 <updatelevel+0x330>
    c878:	44 e9       	ldi	r20, 0x94	; 148
    c87a:	59 e7       	ldi	r21, 0x79	; 121
    c87c:	6e 2d       	mov	r22, r14
    c87e:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c882:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c886:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c88a:	b7 01       	movw	r22, r14
    c88c:	90 e0       	ldi	r25, 0x00	; 0
    c88e:	0e 94 ca 60 	call	0xc194	; 0xc194 <setowl>
    c892:	0d cf       	rjmp	.-486    	; 0xc6ae <updatelevel+0x14a>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    c894:	13 33       	cpi	r17, 0x33	; 51
    c896:	71 f4       	brne	.+28     	; 0xc8b4 <updatelevel+0x350>
    c898:	44 e9       	ldi	r20, 0x94	; 148
    c89a:	59 e7       	ldi	r21, 0x79	; 121
    c89c:	6e 2d       	mov	r22, r14
    c89e:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c8a2:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    c8a6:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    c8aa:	b7 01       	movw	r22, r14
    c8ac:	90 e0       	ldi	r25, 0x00	; 0
    c8ae:	0e 94 07 61 	call	0xc20e	; 0xc20e <setblob>
    c8b2:	fd ce       	rjmp	.-518    	; 0xc6ae <updatelevel+0x14a>
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    c8b4:	1e 33       	cpi	r17, 0x3E	; 62
    c8b6:	09 f0       	breq	.+2      	; 0xc8ba <updatelevel+0x356>
    c8b8:	fa ce       	rjmp	.-524    	; 0xc6ae <updatelevel+0x14a>
    c8ba:	44 e0       	ldi	r20, 0x04	; 4
    c8bc:	59 e7       	ldi	r21, 0x79	; 121
    c8be:	f2 ce       	rjmp	.-540    	; 0xc6a4 <updatelevel+0x140>
    
destX = destX + 2;
if(destX>=32){
    destX=0;
}
}
    c8c0:	df 91       	pop	r29
    c8c2:	cf 91       	pop	r28
    c8c4:	1f 91       	pop	r17
    c8c6:	ff 90       	pop	r15
    c8c8:	ef 90       	pop	r14
    c8ca:	df 90       	pop	r13
    c8cc:	cf 90       	pop	r12
    c8ce:	08 95       	ret

0000c8d0 <initmonster>:
MonsteronScreen = true;    
}

void initmonster()
{
owl.onscreen = false;   
    c8d0:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <owl+0x9>
blob.onscreen = false;   
    c8d4:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0x9>
MonsteronScreen = false;
    c8d8:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <MonsteronScreen>
    c8dc:	08 95       	ret

0000c8de <movelevel>:
}

void movelevel()
{
if (player2.x >= 150 && (scrolltiles + 15 <= levelwidth ) || player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    c8de:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    c8e2:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    c8e6:	86 39       	cpi	r24, 0x96	; 150
    c8e8:	91 05       	cpc	r25, r1
    c8ea:	3c f4       	brge	.+14     	; 0xc8fa <movelevel+0x1c>
    c8ec:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c8f0:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c8f4:	86 39       	cpi	r24, 0x96	; 150
    c8f6:	91 05       	cpc	r25, r1
    c8f8:	dc f1       	brlt	.+118    	; 0xc970 <movelevel+0x92>
    c8fa:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    c8fe:	90 e0       	ldi	r25, 0x00	; 0
    c900:	8c 34       	cpi	r24, 0x4C	; 76
    c902:	91 05       	cpc	r25, r1
    c904:	ac f5       	brge	.+106    	; 0xc970 <movelevel+0x92>
Scroll(1 ,0);   
    c906:	60 e0       	ldi	r22, 0x00	; 0
    c908:	81 e0       	ldi	r24, 0x01	; 1
    c90a:	0e 94 2e 4e 	call	0x9c5c	; 0x9c5c <Scroll>
Levelx  = Levelx + 1;
    c90e:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    c912:	8f 5f       	subi	r24, 0xFF	; 255
    c914:	80 93 6c 0a 	sts	0x0A6C, r24	; 0x800a6c <Levelx>
player.x = player.x - 1;
    c918:	80 91 62 09 	lds	r24, 0x0962	; 0x800962 <player>
    c91c:	90 91 63 09 	lds	r25, 0x0963	; 0x800963 <player+0x1>
    c920:	01 97       	sbiw	r24, 0x01	; 1
    c922:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    c926:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
player2.x = player2.x -1;  
    c92a:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    c92e:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    c932:	01 97       	sbiw	r24, 0x01	; 1
    c934:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    c938:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
levMovedCnt = levMovedCnt + 1;
    c93c:	80 91 9e 09 	lds	r24, 0x099E	; 0x80099e <levMovedCnt>
    c940:	90 91 9f 09 	lds	r25, 0x099F	; 0x80099f <levMovedCnt+0x1>
    c944:	01 96       	adiw	r24, 0x01	; 1
    c946:	90 93 9f 09 	sts	0x099F, r25	; 0x80099f <levMovedCnt+0x1>
    c94a:	80 93 9e 09 	sts	0x099E, r24	; 0x80099e <levMovedCnt>


scrollmonster(-1);
    c94e:	8f ef       	ldi	r24, 0xFF	; 255
    c950:	9f ef       	ldi	r25, 0xFF	; 255
    c952:	0e 94 a4 60 	call	0xc148	; 0xc148 <scrollmonster>
if ( Levelx >= 16 )
    c956:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    c95a:	80 31       	cpi	r24, 0x10	; 16
    c95c:	48 f0       	brcs	.+18     	; 0xc970 <movelevel+0x92>
{
updatelevel();
    c95e:	0e 94 b2 62 	call	0xc564	; 0xc564 <updatelevel>
scrolltiles++; 
    c962:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    c966:	8f 5f       	subi	r24, 0xFF	; 255
    c968:	80 93 8f 0a 	sts	0x0A8F, r24	; 0x800a8f <scrolltiles>
Levelx = 0;    
    c96c:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
    c970:	08 95       	ret

0000c972 <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    c972:	cf 92       	push	r12
    c974:	df 92       	push	r13
    c976:	ef 92       	push	r14
    c978:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    c97a:	2c e3       	ldi	r18, 0x3C	; 60
    c97c:	30 e0       	ldi	r19, 0x00	; 0
    c97e:	40 e0       	ldi	r20, 0x00	; 0
    c980:	50 e0       	ldi	r21, 0x00	; 0
    c982:	0e 94 3f 6a 	call	0xd47e	; 0xd47e <__udivmodsi4>
    tmp = 99 - tmp ;
    c986:	83 e6       	ldi	r24, 0x63	; 99
    c988:	c8 2e       	mov	r12, r24
    c98a:	d1 2c       	mov	r13, r1
    c98c:	e1 2c       	mov	r14, r1
    c98e:	f1 2c       	mov	r15, r1
    c990:	c2 1a       	sub	r12, r18
    c992:	d3 0a       	sbc	r13, r19
    c994:	e4 0a       	sbc	r14, r20
    c996:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    c998:	40 91 69 0a 	lds	r20, 0x0A69	; 0x800a69 <leveltime>
    c99c:	84 2f       	mov	r24, r20
    c99e:	90 e0       	ldi	r25, 0x00	; 0
    c9a0:	a0 e0       	ldi	r26, 0x00	; 0
    c9a2:	b0 e0       	ldi	r27, 0x00	; 0
    c9a4:	c8 16       	cp	r12, r24
    c9a6:	d9 06       	cpc	r13, r25
    c9a8:	ea 06       	cpc	r14, r26
    c9aa:	fb 06       	cpc	r15, r27
    c9ac:	10 f0       	brcs	.+4      	; 0xc9b2 <updatetime+0x40>
    c9ae:	41 11       	cpse	r20, r1
    c9b0:	09 c0       	rjmp	.+18     	; 0xc9c4 <updatetime+0x52>
    c9b2:	50 e0       	ldi	r21, 0x00	; 0
    c9b4:	22 e0       	ldi	r18, 0x02	; 2
    c9b6:	30 e0       	ldi	r19, 0x00	; 0
    c9b8:	60 e0       	ldi	r22, 0x00	; 0
    c9ba:	70 e0       	ldi	r23, 0x00	; 0
    c9bc:	8a e1       	ldi	r24, 0x1A	; 26
    c9be:	90 e0       	ldi	r25, 0x00	; 0
    c9c0:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
    leveltime = tmp;
    c9c4:	c0 92 69 0a 	sts	0x0A69, r12	; 0x800a69 <leveltime>
    if (leveltime == 0 ) timeisup = true;
    c9c8:	c1 10       	cpse	r12, r1
    c9ca:	03 c0       	rjmp	.+6      	; 0xc9d2 <updatetime+0x60>
    c9cc:	81 e0       	ldi	r24, 0x01	; 1
    c9ce:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <timeisup>
    
}
    c9d2:	ff 90       	pop	r15
    c9d4:	ef 90       	pop	r14
    c9d6:	df 90       	pop	r13
    c9d8:	cf 90       	pop	r12
    c9da:	08 95       	ret

0000c9dc <playintro>:

void playintro()
{
    c9dc:	0f 93       	push	r16
    c9de:	cf 93       	push	r28
    c9e0:	df 93       	push	r29

introplaying = true;
    c9e2:	c1 e0       	ldi	r28, 0x01	; 1
    c9e4:	c0 93 7e 09 	sts	0x097E, r28	; 0x80097e <introplaying>
waterspwncnt = 0;
    c9e8:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    c9ec:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    c9f0:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    c9f4:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
Levelx = 0;
    c9f8:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
scrolltiles = 0;
    c9fc:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
player2.speed = 1;
    ca00:	21 e0       	ldi	r18, 0x01	; 1
    ca02:	30 e0       	ldi	r19, 0x00	; 0
    ca04:	30 93 f7 09 	sts	0x09F7, r19	; 0x8009f7 <player2+0x5>
    ca08:	20 93 f6 09 	sts	0x09F6, r18	; 0x8009f6 <player2+0x4>
player2.x = 38;
    ca0c:	86 e2       	ldi	r24, 0x26	; 38
    ca0e:	90 e0       	ldi	r25, 0x00	; 0
    ca10:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    ca14:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
player2.y = 191;
    ca18:	8f eb       	ldi	r24, 0xBF	; 191
    ca1a:	90 e0       	ldi	r25, 0x00	; 0
    ca1c:	90 93 f5 09 	sts	0x09F5, r25	; 0x8009f5 <player2+0x3>
    ca20:	80 93 f4 09 	sts	0x09F4, r24	; 0x8009f4 <player2+0x2>
player2.touchground = true;
    ca24:	c0 93 03 0a 	sts	0x0A03, r28	; 0x800a03 <player2+0x11>
player2.jumping = false;
    ca28:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <player2+0x14>
player2.jumpreleased = true;
    ca2c:	c0 93 07 0a 	sts	0x0A07, r28	; 0x800a07 <player2+0x15>
player.speed = 1;
    ca30:	30 93 67 09 	sts	0x0967, r19	; 0x800967 <player+0x5>
    ca34:	20 93 66 09 	sts	0x0966, r18	; 0x800966 <player+0x4>
player.x = 8;
    ca38:	28 e0       	ldi	r18, 0x08	; 8
    ca3a:	30 e0       	ldi	r19, 0x00	; 0
    ca3c:	30 93 63 09 	sts	0x0963, r19	; 0x800963 <player+0x1>
    ca40:	20 93 62 09 	sts	0x0962, r18	; 0x800962 <player>
player.y = 191;
    ca44:	90 93 65 09 	sts	0x0965, r25	; 0x800965 <player+0x3>
    ca48:	80 93 64 09 	sts	0x0964, r24	; 0x800964 <player+0x2>
player.touchground = true;
    ca4c:	c0 93 73 09 	sts	0x0973, r28	; 0x800973 <player+0x11>
player.jumping = false;
    ca50:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x14>
player.jumpreleased = true;
    ca54:	c0 93 77 09 	sts	0x0977, r28	; 0x800977 <player+0x15>
player.killer = false;
    ca58:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x19>
initlevel();
    ca5c:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
initmonster();
    ca60:	0e 94 68 64 	call	0xc8d0	; 0xc8d0 <initmonster>
setheadline();    
    ca64:	0e 94 52 5a 	call	0xb4a4	; 0xb4a4 <setheadline>
drawlevel(Levelx);
    ca68:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    ca6c:	90 e0       	ldi	r25, 0x00	; 0
    ca6e:	0e 94 44 61 	call	0xc288	; 0xc288 <drawlevel>
setheadline();
    ca72:	0e 94 52 5a 	call	0xb4a4	; 0xb4a4 <setheadline>
MapSprite2(0 ,pac0 ,0);
    ca76:	40 e0       	ldi	r20, 0x00	; 0
    ca78:	63 e2       	ldi	r22, 0x23	; 35
    ca7a:	77 e4       	ldi	r23, 0x47	; 71
    ca7c:	80 e0       	ldi	r24, 0x00	; 0
    ca7e:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(spriteInd ,run0,0);
    ca82:	40 e0       	ldi	r20, 0x00	; 0
    ca84:	65 e0       	ldi	r22, 0x05	; 5
    ca86:	77 e4       	ldi	r23, 0x47	; 71
    ca88:	8a e0       	ldi	r24, 0x0A	; 10
    ca8a:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    ca8e:	40 e0       	ldi	r20, 0x00	; 0
    ca90:	61 e1       	ldi	r22, 0x11	; 17
    ca92:	77 e4       	ldi	r23, 0x47	; 71
    ca94:	86 e0       	ldi	r24, 0x06	; 6
    ca96:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
score = 0;
    ca9a:	10 92 a3 09 	sts	0x09A3, r1	; 0x8009a3 <score+0x1>
    ca9e:	10 92 a2 09 	sts	0x09A2, r1	; 0x8009a2 <score>
leveltime = 99;
    caa2:	83 e6       	ldi	r24, 0x63	; 99
    caa4:	80 93 69 0a 	sts	0x0A69, r24	; 0x800a69 <leveltime>
time = 0;
    caa8:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    caac:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    cab0:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    cab4:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
lives = 3;    
    cab8:	83 e0       	ldi	r24, 0x03	; 3
    caba:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
level = 0;
    cabe:	10 92 ba 09 	sts	0x09BA, r1	; 0x8009ba <level>
bonus = 0;
    cac2:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    cac6:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
scrolltiles = 0;
    caca:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
Screen.scrollX = 0;
    cace:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
destX = 0;
    cad2:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <destX>
Levelx = 0;
    cad6:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
setheadline();
    cada:	0e 94 52 5a 	call	0xb4a4	; 0xb4a4 <setheadline>
printheadlineintro();
    cade:	0e 94 84 54 	call	0xa908	; 0xa908 <printheadlineintro>
player.direction = 'r';
    cae2:	92 e7       	ldi	r25, 0x72	; 114
    cae4:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <player+0xe>
player.action = 'w';
    cae8:	87 e7       	ldi	r24, 0x77	; 119
    caea:	80 93 6f 09 	sts	0x096F, r24	; 0x80096f <player+0xd>
player.facing = 0;
    caee:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xc>
    caf2:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xb>
player.ximpulse = 1; 
    caf6:	c0 93 74 09 	sts	0x0974, r28	; 0x800974 <player+0x12>
player2.direction = 'r';
    cafa:	90 93 00 0a 	sts	0x0A00, r25	; 0x800a00 <player2+0xe>
player2.action = 'w';
    cafe:	80 93 ff 09 	sts	0x09FF, r24	; 0x8009ff <player2+0xd>
player2.facing = 0;
    cb02:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <player2+0xc>
    cb06:	10 92 fd 09 	sts	0x09FD, r1	; 0x8009fd <player2+0xb>
player2.ximpulse = 1; 
    cb0a:	c0 93 04 0a 	sts	0x0A04, r28	; 0x800a04 <player2+0x12>
FadeIn(1, true);
    cb0e:	61 e0       	ldi	r22, 0x01	; 1
    cb10:	81 e0       	ldi	r24, 0x01	; 1
    cb12:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 38 && Levelx == 10 ) )
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    cb16:	da e6       	ldi	r29, 0x6A	; 106
player2.direction = 'r';
player2.action = 'w';
player2.facing = 0;
player2.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    cb18:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    cb1c:	88 23       	and	r24, r24
    cb1e:	09 f4       	brne	.+2      	; 0xcb22 <playintro+0x146>
    cb20:	1f c1       	rjmp	.+574    	; 0xcd60 <playintro+0x384>
{
moveplayer();  
    cb22:	0e 94 77 5d 	call	0xbaee	; 0xbaee <moveplayer>
moveplayer2();
    cb26:	0e 94 c9 57 	call	0xaf92	; 0xaf92 <moveplayer2>
movemonster(); 
    cb2a:	0e 94 db 5a 	call	0xb5b6	; 0xb5b6 <movemonster>
WaitVsync(1); 
    cb2e:	81 e0       	ldi	r24, 0x01	; 1
    cb30:	90 e0       	ldi	r25, 0x00	; 0
    cb32:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
drawmonster();       
    cb36:	0e 94 5f 5a 	call	0xb4be	; 0xb4be <drawmonster>
movelevel();
    cb3a:	0e 94 6f 64 	call	0xc8de	; 0xc8de <movelevel>
drawplayer();
    cb3e:	0e 94 b2 4f 	call	0x9f64	; 0x9f64 <drawplayer>
drawplayer2();   
    cb42:	0e 94 48 50 	call	0xa090	; 0xa090 <drawplayer2>
//drawlevel(Levelx);  
updateWater(); 
    cb46:	0e 94 72 52 	call	0xa4e4	; 0xa4e4 <updateWater>
  



player.ximpulse = 1;
    cb4a:	c0 93 74 09 	sts	0x0974, r28	; 0x800974 <player+0x12>
player2.ximpulse = 1;
    cb4e:	c0 93 04 0a 	sts	0x0A04, r28	; 0x800a04 <player2+0x12>
if ( time <= 210 && introplaying ){
    cb52:	40 91 ed 09 	lds	r20, 0x09ED	; 0x8009ed <time>
    cb56:	50 91 ee 09 	lds	r21, 0x09EE	; 0x8009ee <time+0x1>
    cb5a:	60 91 ef 09 	lds	r22, 0x09EF	; 0x8009ef <time+0x2>
    cb5e:	70 91 f0 09 	lds	r23, 0x09F0	; 0x8009f0 <time+0x3>
    cb62:	43 3d       	cpi	r20, 0xD3	; 211
    cb64:	51 05       	cpc	r21, r1
    cb66:	61 05       	cpc	r22, r1
    cb68:	71 05       	cpc	r23, r1
    cb6a:	40 f4       	brcc	.+16     	; 0xcb7c <playintro+0x1a0>
    cb6c:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    cb70:	88 23       	and	r24, r24
    cb72:	21 f0       	breq	.+8      	; 0xcb7c <playintro+0x1a0>
    player.ximpulse = 0; 
    cb74:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x12>
    player2.ximpulse = 0;
    cb78:	10 92 04 0a 	sts	0x0A04, r1	; 0x800a04 <player2+0x12>
};
    lx = 12 + destX;
    cb7c:	80 91 1a 0a 	lds	r24, 0x0A1A	; 0x800a1a <destX>
    cb80:	90 e0       	ldi	r25, 0x00	; 0
    cb82:	9c 01       	movw	r18, r24
    cb84:	24 5f       	subi	r18, 0xF4	; 244
    cb86:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    cb88:	20 32       	cpi	r18, 0x20	; 32
    cb8a:	31 05       	cpc	r19, r1
    cb8c:	2c f4       	brge	.+10     	; 0xcb98 <playintro+0x1bc>
player2.ximpulse = 1;
if ( time <= 210 && introplaying ){
    player.ximpulse = 0; 
    player2.ximpulse = 0;
};
    lx = 12 + destX;
    cb8e:	30 93 6f 0a 	sts	0x0A6F, r19	; 0x800a6f <lx+0x1>
    cb92:	20 93 6e 0a 	sts	0x0A6E, r18	; 0x800a6e <lx>
    cb96:	05 c0       	rjmp	.+10     	; 0xcba2 <playintro+0x1c6>
    if (lx >= 32 ) lx = lx - 32;
    cb98:	44 97       	sbiw	r24, 0x14	; 20
    cb9a:	90 93 6f 0a 	sts	0x0A6F, r25	; 0x800a6f <lx+0x1>
    cb9e:	80 93 6e 0a 	sts	0x0A6E, r24	; 0x800a6e <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    cba2:	4c 33       	cpi	r20, 0x3C	; 60
    cba4:	51 05       	cpc	r21, r1
    cba6:	61 05       	cpc	r22, r1
    cba8:	71 05       	cpc	r23, r1
    cbaa:	29 f0       	breq	.+10     	; 0xcbb6 <playintro+0x1da>
    cbac:	40 3f       	cpi	r20, 0xF0	; 240
    cbae:	51 05       	cpc	r21, r1
    cbb0:	61 05       	cpc	r22, r1
    cbb2:	71 05       	cpc	r23, r1
    cbb4:	59 f4       	brne	.+22     	; 0xcbcc <playintro+0x1f0>
    cbb6:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    cbba:	88 23       	and	r24, r24
    cbbc:	39 f0       	breq	.+14     	; 0xcbcc <playintro+0x1f0>
    cbbe:	4e e4       	ldi	r20, 0x4E	; 78
    cbc0:	58 e7       	ldi	r21, 0x78	; 120
    cbc2:	62 e1       	ldi	r22, 0x12	; 18
    cbc4:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cbc8:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    cbcc:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    cbd0:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    cbd4:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    cbd8:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    cbdc:	86 39       	cpi	r24, 0x96	; 150
    cbde:	91 05       	cpc	r25, r1
    cbe0:	a1 05       	cpc	r26, r1
    cbe2:	b1 05       	cpc	r27, r1
    cbe4:	31 f0       	breq	.+12     	; 0xcbf2 <playintro+0x216>
    cbe6:	8a 34       	cpi	r24, 0x4A	; 74
    cbe8:	91 40       	sbci	r25, 0x01	; 1
    cbea:	a1 05       	cpc	r26, r1
    cbec:	b1 05       	cpc	r27, r1
    cbee:	09 f0       	breq	.+2      	; 0xcbf2 <playintro+0x216>
    cbf0:	44 c0       	rjmp	.+136    	; 0xcc7a <playintro+0x29e>
    cbf2:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    cbf6:	88 23       	and	r24, r24
    cbf8:	09 f4       	brne	.+2      	; 0xcbfc <playintro+0x220>
    cbfa:	3f c0       	rjmp	.+126    	; 0xcc7a <playintro+0x29e>
    DrawMap2(  lx,  18 ,nb );   
    cbfc:	41 ea       	ldi	r20, 0xA1	; 161
    cbfe:	58 e7       	ldi	r21, 0x78	; 120
    cc00:	62 e1       	ldi	r22, 0x12	; 18
    cc02:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc06:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    cc0a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc0e:	41 ea       	ldi	r20, 0xA1	; 161
    cc10:	58 e7       	ldi	r21, 0x78	; 120
    cc12:	62 e1       	ldi	r22, 0x12	; 18
    cc14:	8f 5f       	subi	r24, 0xFF	; 255
    cc16:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    cc1a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc1e:	41 ea       	ldi	r20, 0xA1	; 161
    cc20:	58 e7       	ldi	r21, 0x78	; 120
    cc22:	62 e1       	ldi	r22, 0x12	; 18
    cc24:	8e 5f       	subi	r24, 0xFE	; 254
    cc26:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    cc2a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc2e:	41 ea       	ldi	r20, 0xA1	; 161
    cc30:	58 e7       	ldi	r21, 0x78	; 120
    cc32:	62 e1       	ldi	r22, 0x12	; 18
    cc34:	8d 5f       	subi	r24, 0xFD	; 253
    cc36:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    cc3a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc3e:	41 ea       	ldi	r20, 0xA1	; 161
    cc40:	58 e7       	ldi	r21, 0x78	; 120
    cc42:	62 e1       	ldi	r22, 0x12	; 18
    cc44:	8c 5f       	subi	r24, 0xFC	; 252
    cc46:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    cc4a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc4e:	41 ea       	ldi	r20, 0xA1	; 161
    cc50:	58 e7       	ldi	r21, 0x78	; 120
    cc52:	62 e1       	ldi	r22, 0x12	; 18
    cc54:	8b 5f       	subi	r24, 0xFB	; 251
    cc56:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    cc5a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc5e:	41 ea       	ldi	r20, 0xA1	; 161
    cc60:	58 e7       	ldi	r21, 0x78	; 120
    cc62:	62 e1       	ldi	r22, 0x12	; 18
    cc64:	8a 5f       	subi	r24, 0xFA	; 250
    cc66:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    cc6a:	80 91 6e 0a 	lds	r24, 0x0A6E	; 0x800a6e <lx>
    cc6e:	41 ea       	ldi	r20, 0xA1	; 161
    cc70:	58 e7       	ldi	r21, 0x78	; 120
    cc72:	62 e1       	ldi	r22, 0x12	; 18
    cc74:	89 5f       	subi	r24, 0xF9	; 249
    cc76:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
    
};


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 38 && Levelx == 10 ) )
    cc7a:	20 91 62 09 	lds	r18, 0x0962	; 0x800962 <player>
    cc7e:	30 91 63 09 	lds	r19, 0x0963	; 0x800963 <player+0x1>
    cc82:	27 37       	cpi	r18, 0x77	; 119
    cc84:	31 05       	cpc	r19, r1
    cc86:	21 f5       	brne	.+72     	; 0xccd0 <playintro+0x2f4>
    cc88:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    cc8c:	80 31       	cpi	r24, 0x10	; 16
    cc8e:	29 f4       	brne	.+10     	; 0xcc9a <playintro+0x2be>
    cc90:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    cc94:	82 30       	cpi	r24, 0x02	; 2
    cc96:	e1 f4       	brne	.+56     	; 0xccd0 <playintro+0x2f4>
    cc98:	0c c0       	rjmp	.+24     	; 0xccb2 <playintro+0x2d6>
    cc9a:	89 31       	cpi	r24, 0x19	; 25
    cc9c:	31 f0       	breq	.+12     	; 0xccaa <playintro+0x2ce>
    cc9e:	82 32       	cpi	r24, 0x22	; 34
    cca0:	21 f0       	breq	.+8      	; 0xccaa <playintro+0x2ce>
    cca2:	8c 32       	cpi	r24, 0x2C	; 44
    cca4:	11 f0       	breq	.+4      	; 0xccaa <playintro+0x2ce>
    cca6:	86 32       	cpi	r24, 0x26	; 38
    cca8:	99 f4       	brne	.+38     	; 0xccd0 <playintro+0x2f4>
    ccaa:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    ccae:	8a 30       	cpi	r24, 0x0A	; 10
    ccb0:	79 f4       	brne	.+30     	; 0xccd0 <playintro+0x2f4>
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    ccb2:	d0 93 6f 09 	sts	0x096F, r29	; 0x80096f <player+0xd>
player.yimpulse = 0;
    ccb6:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x13>
player.jumping = true;
    ccba:	c0 93 76 09 	sts	0x0976, r28	; 0x800976 <player+0x14>
player.touchground = false;
    ccbe:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x11>
player.jumpreleased = false;
    ccc2:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x15>
player.jumpcounter++ ; 
    ccc6:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1a>
    ccca:	8f 5f       	subi	r24, 0xFF	; 255
    cccc:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <player+0x1a>
};
if  (( player2.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player2.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player2.x == 149 && scrolltiles == 42 && Levelx == 10 ))
    ccd0:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <player2>
    ccd4:	90 91 f3 09 	lds	r25, 0x09F3	; 0x8009f3 <player2+0x1>
    ccd8:	85 39       	cpi	r24, 0x95	; 149
    ccda:	91 05       	cpc	r25, r1
    ccdc:	d9 f4       	brne	.+54     	; 0xcd14 <playintro+0x338>
    ccde:	80 91 8f 0a 	lds	r24, 0x0A8F	; 0x800a8f <scrolltiles>
    cce2:	87 31       	cpi	r24, 0x17	; 23
    cce4:	21 f0       	breq	.+8      	; 0xccee <playintro+0x312>
    cce6:	80 32       	cpi	r24, 0x20	; 32
    cce8:	11 f0       	breq	.+4      	; 0xccee <playintro+0x312>
    ccea:	8a 32       	cpi	r24, 0x2A	; 42
    ccec:	99 f4       	brne	.+38     	; 0xcd14 <playintro+0x338>
    ccee:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    ccf2:	8a 30       	cpi	r24, 0x0A	; 10
    ccf4:	79 f4       	brne	.+30     	; 0xcd14 <playintro+0x338>
{
player2.action = 'j';
    ccf6:	d0 93 ff 09 	sts	0x09FF, r29	; 0x8009ff <player2+0xd>
player2.yimpulse = 0;
    ccfa:	10 92 05 0a 	sts	0x0A05, r1	; 0x800a05 <player2+0x13>
player2.jumping = true;
    ccfe:	c0 93 06 0a 	sts	0x0A06, r28	; 0x800a06 <player2+0x14>
player2.touchground = false;
    cd02:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <player2+0x11>
player2.jumpreleased = false;
    cd06:	10 92 07 0a 	sts	0x0A07, r1	; 0x800a07 <player2+0x15>
player2.jumpcounter++ ; 
    cd0a:	80 91 0c 0a 	lds	r24, 0x0A0C	; 0x800a0c <player2+0x1a>
    cd0e:	8f 5f       	subi	r24, 0xFF	; 255
    cd10:	80 93 0c 0a 	sts	0x0A0C, r24	; 0x800a0c <player2+0x1a>
}  
if ( player.x  == 160 ) time = 0;   
    cd14:	20 3a       	cpi	r18, 0xA0	; 160
    cd16:	31 05       	cpc	r19, r1
    cd18:	49 f4       	brne	.+18     	; 0xcd2c <playintro+0x350>
    cd1a:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    cd1e:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    cd22:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    cd26:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
    cd2a:	f6 ce       	rjmp	.-532    	; 0xcb18 <playintro+0x13c>
if ( player.x >= 206 ) {
    cd2c:	2e 3c       	cpi	r18, 0xCE	; 206
    cd2e:	31 05       	cpc	r19, r1
    cd30:	2c f0       	brlt	.+10     	; 0xcd3c <playintro+0x360>
player.ximpulse = 0; 
    cd32:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x12>
player2.ximpulse = 0;
    cd36:	10 92 04 0a 	sts	0x0A04, r1	; 0x800a04 <player2+0x12>
    cd3a:	04 c0       	rjmp	.+8      	; 0xcd44 <playintro+0x368>
};
if ( player.x >= 180 && time > 420 ) { 
    cd3c:	24 3b       	cpi	r18, 0xB4	; 180
    cd3e:	31 05       	cpc	r19, r1
    cd40:	0c f4       	brge	.+2      	; 0xcd44 <playintro+0x368>
    cd42:	ea ce       	rjmp	.-556    	; 0xcb18 <playintro+0x13c>
    cd44:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    cd48:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    cd4c:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    cd50:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    cd54:	85 3a       	cpi	r24, 0xA5	; 165
    cd56:	91 40       	sbci	r25, 0x01	; 1
    cd58:	a1 05       	cpc	r26, r1
    cd5a:	b1 05       	cpc	r27, r1
    cd5c:	08 f4       	brcc	.+2      	; 0xcd60 <playintro+0x384>
    cd5e:	dc ce       	rjmp	.-584    	; 0xcb18 <playintro+0x13c>
                                 
                                      break; };
};

FadeOut(5,true); 
    cd60:	61 e0       	ldi	r22, 0x01	; 1
    cd62:	85 e0       	ldi	r24, 0x05	; 5
    cd64:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
player.x = 8;
    cd68:	88 e0       	ldi	r24, 0x08	; 8
    cd6a:	90 e0       	ldi	r25, 0x00	; 0
    cd6c:	90 93 63 09 	sts	0x0963, r25	; 0x800963 <player+0x1>
    cd70:	80 93 62 09 	sts	0x0962, r24	; 0x800962 <player>
player.y = 191;
    cd74:	cf eb       	ldi	r28, 0xBF	; 191
    cd76:	d0 e0       	ldi	r29, 0x00	; 0
    cd78:	d0 93 65 09 	sts	0x0965, r29	; 0x800965 <player+0x3>
    cd7c:	c0 93 64 09 	sts	0x0964, r28	; 0x800964 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    cd80:	02 e0       	ldi	r16, 0x02	; 2
    cd82:	22 e0       	ldi	r18, 0x02	; 2
    cd84:	4a ea       	ldi	r20, 0xAA	; 170
    cd86:	61 e0       	ldi	r22, 0x01	; 1
    cd88:	80 e0       	ldi	r24, 0x00	; 0
    cd8a:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

player2.x = 38;
    cd8e:	86 e2       	ldi	r24, 0x26	; 38
    cd90:	90 e0       	ldi	r25, 0x00	; 0
    cd92:	90 93 f3 09 	sts	0x09F3, r25	; 0x8009f3 <player2+0x1>
    cd96:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <player2>
player2.y = 191;
    cd9a:	d0 93 f5 09 	sts	0x09F5, r29	; 0x8009f5 <player2+0x3>
    cd9e:	c0 93 f4 09 	sts	0x09F4, r28	; 0x8009f4 <player2+0x2>
MoveSprite(spriteInd ,player2.x -7 ,player2.y - 21  ,2 ,2);
    cda2:	22 e0       	ldi	r18, 0x02	; 2
    cda4:	4a ea       	ldi	r20, 0xAA	; 170
    cda6:	6f e1       	ldi	r22, 0x1F	; 31
    cda8:	8a e0       	ldi	r24, 0x0A	; 10
    cdaa:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>

}
    cdae:	df 91       	pop	r29
    cdb0:	cf 91       	pop	r28
    cdb2:	0f 91       	pop	r16
    cdb4:	08 95       	ret

0000cdb6 <showgetready>:

void showgetready()
{
    cdb6:	0f 93       	push	r16
FadeOut(0, true);
    cdb8:	61 e0       	ldi	r22, 0x01	; 1
    cdba:	80 e0       	ldi	r24, 0x00	; 0
    cdbc:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    cdc0:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cdc4:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
printheadline();
    cdc8:	0e 94 3f 54 	call	0xa87e	; 0xa87e <printheadline>
printtileint( 26 ,0,99,2); 
    cdcc:	22 e0       	ldi	r18, 0x02	; 2
    cdce:	30 e0       	ldi	r19, 0x00	; 0
    cdd0:	43 e6       	ldi	r20, 0x63	; 99
    cdd2:	50 e0       	ldi	r21, 0x00	; 0
    cdd4:	60 e0       	ldi	r22, 0x00	; 0
    cdd6:	70 e0       	ldi	r23, 0x00	; 0
    cdd8:	8a e1       	ldi	r24, 0x1A	; 26
    cdda:	90 e0       	ldi	r25, 0x00	; 0
    cddc:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cde0:	02 e0       	ldi	r16, 0x02	; 2
    cde2:	22 e0       	ldi	r18, 0x02	; 2
    cde4:	4c ee       	ldi	r20, 0xEC	; 236
    cde6:	6c ee       	ldi	r22, 0xEC	; 236
    cde8:	80 e0       	ldi	r24, 0x00	; 0
    cdea:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20 ,2 ,2);
    cdee:	22 e0       	ldi	r18, 0x02	; 2
    cdf0:	4c ee       	ldi	r20, 0xEC	; 236
    cdf2:	6e ec       	ldi	r22, 0xCE	; 206
    cdf4:	8a e0       	ldi	r24, 0x0A	; 10
    cdf6:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cdfa:	22 e0       	ldi	r18, 0x02	; 2
    cdfc:	4c ee       	ldi	r20, 0xEC	; 236
    cdfe:	6c ee       	ldi	r22, 0xEC	; 236
    ce00:	86 e0       	ldi	r24, 0x06	; 6
    ce02:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    ce06:	42 e6       	ldi	r20, 0x62	; 98
    ce08:	58 e7       	ldi	r21, 0x78	; 120
    ce0a:	6a e0       	ldi	r22, 0x0A	; 10
    ce0c:	8b e0       	ldi	r24, 0x0B	; 11
    ce0e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    ce12:	81 e0       	ldi	r24, 0x01	; 1
    ce14:	90 e0       	ldi	r25, 0x00	; 0
    ce16:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    ce1a:	61 e0       	ldi	r22, 0x01	; 1
    ce1c:	80 e0       	ldi	r24, 0x00	; 0
    ce1e:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    ce22:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    ce26:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    ce2a:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    ce2e:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
while ( time < 240 )
    ce32:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    ce36:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    ce3a:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    ce3e:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    ce42:	80 3f       	cpi	r24, 0xF0	; 240
    ce44:	91 05       	cpc	r25, r1
    ce46:	a1 05       	cpc	r26, r1
    ce48:	b1 05       	cpc	r27, r1
    ce4a:	80 f4       	brcc	.+32     	; 0xce6c <showgetready+0xb6>
{ time++;    
    ce4c:	01 96       	adiw	r24, 0x01	; 1
    ce4e:	a1 1d       	adc	r26, r1
    ce50:	b1 1d       	adc	r27, r1
    ce52:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <time>
    ce56:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <time+0x1>
    ce5a:	a0 93 ef 09 	sts	0x09EF, r26	; 0x8009ef <time+0x2>
    ce5e:	b0 93 f0 09 	sts	0x09F0, r27	; 0x8009f0 <time+0x3>
WaitVsync(1);    
    ce62:	81 e0       	ldi	r24, 0x01	; 1
    ce64:	90 e0       	ldi	r25, 0x00	; 0
    ce66:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    ce6a:	e3 cf       	rjmp	.-58     	; 0xce32 <showgetready+0x7c>
};
 FadeOut(0, true);    
    ce6c:	61 e0       	ldi	r22, 0x01	; 1
    ce6e:	80 e0       	ldi	r24, 0x00	; 0
};
    ce70:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    ce72:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000ce76 <showgameover>:
};

void showgameover()
{
    ce76:	0f 93       	push	r16
    
FadeOut(0, true);
    ce78:	61 e0       	ldi	r22, 0x01	; 1
    ce7a:	80 e0       	ldi	r24, 0x00	; 0
    ce7c:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    ce80:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    ce84:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    ce88:	02 e0       	ldi	r16, 0x02	; 2
    ce8a:	22 e0       	ldi	r18, 0x02	; 2
    ce8c:	4c ee       	ldi	r20, 0xEC	; 236
    ce8e:	6c ee       	ldi	r22, 0xEC	; 236
    ce90:	80 e0       	ldi	r24, 0x00	; 0
    ce92:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    ce96:	22 e0       	ldi	r18, 0x02	; 2
    ce98:	4c ee       	ldi	r20, 0xEC	; 236
    ce9a:	6c ee       	ldi	r22, 0xEC	; 236
    ce9c:	86 e0       	ldi	r24, 0x06	; 6
    ce9e:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    cea2:	22 e0       	ldi	r18, 0x02	; 2
    cea4:	4c ee       	ldi	r20, 0xEC	; 236
    cea6:	6e ec       	ldi	r22, 0xCE	; 206
    cea8:	8a e0       	ldi	r24, 0x0A	; 10
    ceaa:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    ceae:	45 e4       	ldi	r20, 0x45	; 69
    ceb0:	58 e7       	ldi	r21, 0x78	; 120
    ceb2:	6a e0       	ldi	r22, 0x0A	; 10
    ceb4:	8b e0       	ldi	r24, 0x0B	; 11
    ceb6:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    ceba:	81 e0       	ldi	r24, 0x01	; 1
    cebc:	90 e0       	ldi	r25, 0x00	; 0
    cebe:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    cec2:	61 e0       	ldi	r22, 0x01	; 1
    cec4:	80 e0       	ldi	r24, 0x00	; 0
    cec6:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    ceca:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    cece:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    ced2:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    ced6:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
while ( time < 240 )
    ceda:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    cede:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    cee2:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    cee6:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    ceea:	80 3f       	cpi	r24, 0xF0	; 240
    ceec:	91 05       	cpc	r25, r1
    ceee:	a1 05       	cpc	r26, r1
    cef0:	b1 05       	cpc	r27, r1
    cef2:	80 f4       	brcc	.+32     	; 0xcf14 <showgameover+0x9e>
{ time++;    
    cef4:	01 96       	adiw	r24, 0x01	; 1
    cef6:	a1 1d       	adc	r26, r1
    cef8:	b1 1d       	adc	r27, r1
    cefa:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <time>
    cefe:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <time+0x1>
    cf02:	a0 93 ef 09 	sts	0x09EF, r26	; 0x8009ef <time+0x2>
    cf06:	b0 93 f0 09 	sts	0x09F0, r27	; 0x8009f0 <time+0x3>
WaitVsync(1);    
    cf0a:	81 e0       	ldi	r24, 0x01	; 1
    cf0c:	90 e0       	ldi	r25, 0x00	; 0
    cf0e:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    cf12:	e3 cf       	rjmp	.-58     	; 0xceda <showgameover+0x64>
};
 FadeOut(0, true);    
    cf14:	61 e0       	ldi	r22, 0x01	; 1
    cf16:	80 e0       	ldi	r24, 0x00	; 0
};
    cf18:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    cf1a:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000cf1e <showtimesup>:
};
void showtimesup()
{
    cf1e:	0f 93       	push	r16
FadeOut(0, true);
    cf20:	61 e0       	ldi	r22, 0x01	; 1
    cf22:	80 e0       	ldi	r24, 0x00	; 0
    cf24:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    cf28:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cf2c:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cf30:	02 e0       	ldi	r16, 0x02	; 2
    cf32:	22 e0       	ldi	r18, 0x02	; 2
    cf34:	4c ee       	ldi	r20, 0xEC	; 236
    cf36:	6c ee       	ldi	r22, 0xEC	; 236
    cf38:	80 e0       	ldi	r24, 0x00	; 0
    cf3a:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cf3e:	22 e0       	ldi	r18, 0x02	; 2
    cf40:	4c ee       	ldi	r20, 0xEC	; 236
    cf42:	6c ee       	ldi	r22, 0xEC	; 236
    cf44:	86 e0       	ldi	r24, 0x06	; 6
    cf46:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    cf4a:	22 e0       	ldi	r18, 0x02	; 2
    cf4c:	4c ee       	ldi	r20, 0xEC	; 236
    cf4e:	6e ec       	ldi	r22, 0xCE	; 206
    cf50:	8a e0       	ldi	r24, 0x0A	; 10
    cf52:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    cf56:	4d e3       	ldi	r20, 0x3D	; 61
    cf58:	58 e7       	ldi	r21, 0x78	; 120
    cf5a:	6a e0       	ldi	r22, 0x0A	; 10
    cf5c:	8b e0       	ldi	r24, 0x0B	; 11
    cf5e:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
WaitVsync(1);  
    cf62:	81 e0       	ldi	r24, 0x01	; 1
    cf64:	90 e0       	ldi	r25, 0x00	; 0
    cf66:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
FadeIn(0, true);
    cf6a:	61 e0       	ldi	r22, 0x01	; 1
    cf6c:	80 e0       	ldi	r24, 0x00	; 0
    cf6e:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    cf72:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    cf76:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    cf7a:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    cf7e:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
while ( time < 240 )
    cf82:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    cf86:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    cf8a:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    cf8e:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    cf92:	80 3f       	cpi	r24, 0xF0	; 240
    cf94:	91 05       	cpc	r25, r1
    cf96:	a1 05       	cpc	r26, r1
    cf98:	b1 05       	cpc	r27, r1
    cf9a:	80 f4       	brcc	.+32     	; 0xcfbc <showtimesup+0x9e>
{ time++;    
    cf9c:	01 96       	adiw	r24, 0x01	; 1
    cf9e:	a1 1d       	adc	r26, r1
    cfa0:	b1 1d       	adc	r27, r1
    cfa2:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <time>
    cfa6:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <time+0x1>
    cfaa:	a0 93 ef 09 	sts	0x09EF, r26	; 0x8009ef <time+0x2>
    cfae:	b0 93 f0 09 	sts	0x09F0, r27	; 0x8009f0 <time+0x3>
WaitVsync(1);    
    cfb2:	81 e0       	ldi	r24, 0x01	; 1
    cfb4:	90 e0       	ldi	r25, 0x00	; 0
    cfb6:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    cfba:	e3 cf       	rjmp	.-58     	; 0xcf82 <showtimesup+0x64>
};
 FadeOut(0, true);    
    cfbc:	61 e0       	ldi	r22, 0x01	; 1
    cfbe:	80 e0       	ldi	r24, 0x00	; 0
};
    cfc0:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    cfc2:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000cfc6 <showcongratulation>:
};
void showcongratulation()
{
    cfc6:	0f 93       	push	r16
FadeOut(0, true);
    cfc8:	61 e0       	ldi	r22, 0x01	; 1
    cfca:	80 e0       	ldi	r24, 0x00	; 0
    cfcc:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
Screen.scrollX = 0;
    cfd0:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    cfd4:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    cfd8:	02 e0       	ldi	r16, 0x02	; 2
    cfda:	22 e0       	ldi	r18, 0x02	; 2
    cfdc:	4c ee       	ldi	r20, 0xEC	; 236
    cfde:	6c ee       	ldi	r22, 0xEC	; 236
    cfe0:	80 e0       	ldi	r24, 0x00	; 0
    cfe2:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    cfe6:	22 e0       	ldi	r18, 0x02	; 2
    cfe8:	4c ee       	ldi	r20, 0xEC	; 236
    cfea:	6c ee       	ldi	r22, 0xEC	; 236
    cfec:	86 e0       	ldi	r24, 0x06	; 6
    cfee:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    cff2:	22 e0       	ldi	r18, 0x02	; 2
    cff4:	4c ee       	ldi	r20, 0xEC	; 236
    cff6:	6e ec       	ldi	r22, 0xCE	; 206
    cff8:	8a e0       	ldi	r24, 0x0A	; 10
    cffa:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    cffe:	41 e3       	ldi	r20, 0x31	; 49
    d000:	58 e7       	ldi	r21, 0x78	; 120
    d002:	6a e0       	ldi	r22, 0x0A	; 10
    d004:	89 e0       	ldi	r24, 0x09	; 9
    d006:	0e 94 c2 4e 	call	0x9d84	; 0x9d84 <DrawMap>
FadeIn(0, true);
    d00a:	61 e0       	ldi	r22, 0x01	; 1
    d00c:	80 e0       	ldi	r24, 0x00	; 0
    d00e:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>
time = 0;
    d012:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    d016:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    d01a:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    d01e:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
while ( time < 480 )
    d022:	80 91 ed 09 	lds	r24, 0x09ED	; 0x8009ed <time>
    d026:	90 91 ee 09 	lds	r25, 0x09EE	; 0x8009ee <time+0x1>
    d02a:	a0 91 ef 09 	lds	r26, 0x09EF	; 0x8009ef <time+0x2>
    d02e:	b0 91 f0 09 	lds	r27, 0x09F0	; 0x8009f0 <time+0x3>
    d032:	80 3e       	cpi	r24, 0xE0	; 224
    d034:	21 e0       	ldi	r18, 0x01	; 1
    d036:	92 07       	cpc	r25, r18
    d038:	a1 05       	cpc	r26, r1
    d03a:	b1 05       	cpc	r27, r1
    d03c:	80 f4       	brcc	.+32     	; 0xd05e <showcongratulation+0x98>
{ time++;    
    d03e:	01 96       	adiw	r24, 0x01	; 1
    d040:	a1 1d       	adc	r26, r1
    d042:	b1 1d       	adc	r27, r1
    d044:	80 93 ed 09 	sts	0x09ED, r24	; 0x8009ed <time>
    d048:	90 93 ee 09 	sts	0x09EE, r25	; 0x8009ee <time+0x1>
    d04c:	a0 93 ef 09 	sts	0x09EF, r26	; 0x8009ef <time+0x2>
    d050:	b0 93 f0 09 	sts	0x09F0, r27	; 0x8009f0 <time+0x3>
WaitVsync(1);    
    d054:	81 e0       	ldi	r24, 0x01	; 1
    d056:	90 e0       	ldi	r25, 0x00	; 0
    d058:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    d05c:	e2 cf       	rjmp	.-60     	; 0xd022 <showcongratulation+0x5c>
};
 FadeOut(0, true);    
    d05e:	61 e0       	ldi	r22, 0x01	; 1
    d060:	80 e0       	ldi	r24, 0x00	; 0
};
    d062:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d064:	0c 94 69 4f 	jmp	0x9ed2	; 0x9ed2 <FadeOut>

0000d068 <main>:
};
int main(){ 
ClearVram();    
    d068:	0e 94 28 42 	call	0x8450	; 0x8450 <ClearVram>
FadeOut(0, true);
    d06c:	61 e0       	ldi	r22, 0x01	; 1
    d06e:	80 e0       	ldi	r24, 0x00	; 0
    d070:	0e 94 69 4f 	call	0x9ed2	; 0x9ed2 <FadeOut>
SetTileTable(uMTiles);
    d074:	89 e2       	ldi	r24, 0x29	; 41
    d076:	97 e4       	ldi	r25, 0x47	; 71
    d078:	0e 94 43 42 	call	0x8486	; 0x8486 <SetTileTable>
SetSpritesTileTable(uMSprites);
    d07c:	83 e3       	ldi	r24, 0x33	; 51
    d07e:	90 e4       	ldi	r25, 0x40	; 64
    d080:	0e 94 23 42 	call	0x8446	; 0x8446 <SetSpritesTileTable>
InitMusicPlayer(patches);
    d084:	84 ec       	ldi	r24, 0xC4	; 196
    d086:	9e e3       	ldi	r25, 0x3E	; 62
    d088:	0e 94 ad 43 	call	0x875a	; 0x875a <InitMusicPlayer>
Screen.scrollY=0;  
    d08c:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    d090:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    d094:	8e e9       	ldi	r24, 0x9E	; 158
    d096:	9f e4       	ldi	r25, 0x4F	; 79
    d098:	0e 94 7d 42 	call	0x84fa	; 0x84fa <SetUserPostVsyncCallback>
waterspwncnt = 0;
banspwncnt = 0;
introplaying = true; 
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    d09c:	98 e0       	ldi	r25, 0x08	; 8
    d09e:	e9 2e       	mov	r14, r25
    d0a0:	f1 2c       	mov	r15, r1
player.y = 191;
    d0a2:	cf eb       	ldi	r28, 0xBF	; 191
    d0a4:	d0 e0       	ldi	r29, 0x00	; 0
player2.x = 38;
    d0a6:	26 e2       	ldi	r18, 0x26	; 38
    d0a8:	c2 2e       	mov	r12, r18
    d0aa:	d1 2c       	mov	r13, r1
timeisup = false;    
Levelx = 0;
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
    d0ac:	aa 24       	eor	r10, r10
    d0ae:	a3 94       	inc	r10
    d0b0:	b1 2c       	mov	r11, r1
player2.x = 38;
    d0b2:	46 e2       	ldi	r20, 0x26	; 38
    d0b4:	44 2e       	mov	r4, r20
    d0b6:	51 2c       	mov	r5, r1
player2.y = 191;
    d0b8:	5f eb       	ldi	r21, 0xBF	; 191
    d0ba:	85 2e       	mov	r8, r21
    d0bc:	91 2c       	mov	r9, r1
player.speed = 1;
player.x = 8;
    d0be:	68 e0       	ldi	r22, 0x08	; 8
    d0c0:	66 2e       	mov	r6, r22
    d0c2:	71 2c       	mov	r7, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
waterspwncnt = 0;
    d0c4:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d0c8:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d0cc:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d0d0:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
introplaying = true; 
    d0d4:	81 e0       	ldi	r24, 0x01	; 1
    d0d6:	80 93 7e 09 	sts	0x097E, r24	; 0x80097e <introplaying>
Levelx = 0;
    d0da:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
scrolltiles = 0;
    d0de:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
player.x = 8;
    d0e2:	f0 92 63 09 	sts	0x0963, r15	; 0x800963 <player+0x1>
    d0e6:	e0 92 62 09 	sts	0x0962, r14	; 0x800962 <player>
player.y = 191;
    d0ea:	d0 93 65 09 	sts	0x0965, r29	; 0x800965 <player+0x3>
    d0ee:	c0 93 64 09 	sts	0x0964, r28	; 0x800964 <player+0x2>
player2.x = 38;
    d0f2:	d0 92 f3 09 	sts	0x09F3, r13	; 0x8009f3 <player2+0x1>
    d0f6:	c0 92 f2 09 	sts	0x09F2, r12	; 0x8009f2 <player2>
player2.y = 191;
    d0fa:	d0 93 f5 09 	sts	0x09F5, r29	; 0x8009f5 <player2+0x3>
    d0fe:	c0 93 f4 09 	sts	0x09F4, r28	; 0x8009f4 <player2+0x2>
destX = 0;
    d102:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <destX>
level = 0;
    d106:	10 92 ba 09 	sts	0x09BA, r1	; 0x8009ba <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d10a:	02 e0       	ldi	r16, 0x02	; 2
    d10c:	22 e0       	ldi	r18, 0x02	; 2
    d10e:	4c ee       	ldi	r20, 0xEC	; 236
    d110:	6c ee       	ldi	r22, 0xEC	; 236
    d112:	86 e0       	ldi	r24, 0x06	; 6
    d114:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2);  
    d118:	22 e0       	ldi	r18, 0x02	; 2
    d11a:	4c ee       	ldi	r20, 0xEC	; 236
    d11c:	6c ee       	ldi	r22, 0xEC	; 236
    d11e:	80 e0       	ldi	r24, 0x00	; 0
    d120:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);
    d124:	22 e0       	ldi	r18, 0x02	; 2
    d126:	4c ee       	ldi	r20, 0xEC	; 236
    d128:	6e ec       	ldi	r22, 0xCE	; 206
    d12a:	8a e0       	ldi	r24, 0x0A	; 10
    d12c:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
while(introplaying) playintro();
    d130:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <introplaying>
    d134:	88 23       	and	r24, r24
    d136:	19 f0       	breq	.+6      	; 0xd13e <main+0xd6>
    d138:	0e 94 ee 64 	call	0xc9dc	; 0xc9dc <playintro>
    d13c:	f9 cf       	rjmp	.-14     	; 0xd130 <main+0xc8>
    
score = 0;
    d13e:	10 92 a3 09 	sts	0x09A3, r1	; 0x8009a3 <score+0x1>
    d142:	10 92 a2 09 	sts	0x09A2, r1	; 0x8009a2 <score>
lives = 3; 
    d146:	83 e0       	ldi	r24, 0x03	; 3
    d148:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
level = startlevel;
    d14c:	85 e0       	ldi	r24, 0x05	; 5
    d14e:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <level>
isplaying = true;
    d152:	81 e0       	ldi	r24, 0x01	; 1
    d154:	80 93 68 0a 	sts	0x0A68, r24	; 0x800a68 <isplaying>
exitgame = false;
    d158:	10 92 ec 09 	sts	0x09EC, r1	; 0x8009ec <exitgame>
Levelx = 0;
    d15c:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
scrolltiles = 0;
    d160:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
player.x = 8;
    d164:	f0 92 63 09 	sts	0x0963, r15	; 0x800963 <player+0x1>
    d168:	e0 92 62 09 	sts	0x0962, r14	; 0x800962 <player>
player.y = 191;
    d16c:	d0 93 65 09 	sts	0x0965, r29	; 0x800965 <player+0x3>
    d170:	c0 93 64 09 	sts	0x0964, r28	; 0x800964 <player+0x2>
player2.x = 38;
    d174:	d0 92 f3 09 	sts	0x09F3, r13	; 0x8009f3 <player2+0x1>
    d178:	c0 92 f2 09 	sts	0x09F2, r12	; 0x8009f2 <player2>
player2.y = 191;
    d17c:	d0 93 f5 09 	sts	0x09F5, r29	; 0x8009f5 <player2+0x3>
    d180:	c0 93 f4 09 	sts	0x09F4, r28	; 0x8009f4 <player2+0x2>
waterspwncnt = 0;
    d184:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d188:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d18c:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d190:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
destX = 0;
    d194:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <destX>
score = 0;
StartSong(midisong);
    d198:	8b e6       	ldi	r24, 0x6B	; 107
    d19a:	9a e3       	ldi	r25, 0x3A	; 58
    d19c:	0e 94 c8 43 	call	0x8790	; 0x8790 <StartSong>
while (lives > 0 )
{
isplaying = true;
    d1a0:	33 24       	eor	r3, r3
    d1a2:	33 94       	inc	r3
waterspwncnt = 0;
banspwncnt = 0;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    d1a4:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    d1a8:	88 23       	and	r24, r24
    d1aa:	09 f4       	brne	.+2      	; 0xd1ae <main+0x146>
    d1ac:	3d c1       	rjmp	.+634    	; 0xd428 <main+0x3c0>
{
isplaying = true;
    d1ae:	30 92 68 0a 	sts	0x0A68, r3	; 0x800a68 <isplaying>
while (isplaying)
{

showgetready();
isplaying = true;
    d1b2:	11 e0       	ldi	r17, 0x01	; 1
MapSprite2(spriteInd ,run0 ,0);
MapSprite2(owlIndex ,owl0 ,0);   
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
MoveSprite(0 , - 20 , -20 ,2 ,2); 
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);    
leveltime = 99;
    d1b4:	83 e6       	ldi	r24, 0x63	; 99
    d1b6:	28 2e       	mov	r2, r24
score = 0;
StartSong(midisong);
while (lives > 0 )
{
isplaying = true;
while (isplaying)
    d1b8:	80 91 68 0a 	lds	r24, 0x0A68	; 0x800a68 <isplaying>
    d1bc:	88 23       	and	r24, r24
    d1be:	91 f3       	breq	.-28     	; 0xd1a4 <main+0x13c>
{

showgetready();
    d1c0:	0e 94 db 66 	call	0xcdb6	; 0xcdb6 <showgetready>
isplaying = true;
    d1c4:	10 93 68 0a 	sts	0x0A68, r17	; 0x800a68 <isplaying>
finished = false;
    d1c8:	10 92 53 0a 	sts	0x0A53, r1	; 0x800a53 <finished>
died = false;
    d1cc:	10 92 6d 0a 	sts	0x0A6D, r1	; 0x800a6d <died>
timeisup = false;    
    d1d0:	10 92 56 09 	sts	0x0956, r1	; 0x800956 <timeisup>
Levelx = 0;
    d1d4:	10 92 6c 0a 	sts	0x0A6C, r1	; 0x800a6c <Levelx>
waterspwncnt = 0;
    d1d8:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d1dc:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d1e0:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d1e4:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
scrolltiles = 0;
    d1e8:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
player2.speed = 1;
    d1ec:	b0 92 f7 09 	sts	0x09F7, r11	; 0x8009f7 <player2+0x5>
    d1f0:	a0 92 f6 09 	sts	0x09F6, r10	; 0x8009f6 <player2+0x4>
player2.x = 38;
    d1f4:	50 92 f3 09 	sts	0x09F3, r5	; 0x8009f3 <player2+0x1>
    d1f8:	40 92 f2 09 	sts	0x09F2, r4	; 0x8009f2 <player2>
player2.y = 191;
    d1fc:	90 92 f5 09 	sts	0x09F5, r9	; 0x8009f5 <player2+0x3>
    d200:	80 92 f4 09 	sts	0x09F4, r8	; 0x8009f4 <player2+0x2>
player.speed = 1;
    d204:	b0 92 67 09 	sts	0x0967, r11	; 0x800967 <player+0x5>
    d208:	a0 92 66 09 	sts	0x0966, r10	; 0x800966 <player+0x4>
player.x = 8;
    d20c:	70 92 63 09 	sts	0x0963, r7	; 0x800963 <player+0x1>
    d210:	60 92 62 09 	sts	0x0962, r6	; 0x800962 <player>
player.y = 191;
    d214:	90 92 65 09 	sts	0x0965, r9	; 0x800965 <player+0x3>
    d218:	80 92 64 09 	sts	0x0964, r8	; 0x800964 <player+0x2>
destX = 0;
    d21c:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <destX>
player2.touchground = true;
    d220:	10 93 03 0a 	sts	0x0A03, r17	; 0x800a03 <player2+0x11>
player2.jumping = false;
    d224:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <player2+0x14>
player2.jumpreleased = true;
    d228:	10 93 07 0a 	sts	0x0A07, r17	; 0x800a07 <player2+0x15>
player.touchground = true;
    d22c:	10 93 73 09 	sts	0x0973, r17	; 0x800973 <player+0x11>
player.jumping = false;
    d230:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x14>
player.jumpreleased = true;
    d234:	10 93 77 09 	sts	0x0977, r17	; 0x800977 <player+0x15>
player.killer = false;
    d238:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x19>
initlevel();
    d23c:	0e 94 08 52 	call	0xa410	; 0xa410 <initlevel>
initmonster();
    d240:	0e 94 68 64 	call	0xc8d0	; 0xc8d0 <initmonster>
MapSprite2(0 ,pac0 ,0);
    d244:	40 e0       	ldi	r20, 0x00	; 0
    d246:	63 e2       	ldi	r22, 0x23	; 35
    d248:	77 e4       	ldi	r23, 0x47	; 71
    d24a:	80 e0       	ldi	r24, 0x00	; 0
    d24c:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(spriteInd ,run0 ,0);
    d250:	40 e0       	ldi	r20, 0x00	; 0
    d252:	65 e0       	ldi	r22, 0x05	; 5
    d254:	77 e4       	ldi	r23, 0x47	; 71
    d256:	8a e0       	ldi	r24, 0x0A	; 10
    d258:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    d25c:	40 e0       	ldi	r20, 0x00	; 0
    d25e:	61 e1       	ldi	r22, 0x11	; 17
    d260:	77 e4       	ldi	r23, 0x47	; 71
    d262:	86 e0       	ldi	r24, 0x06	; 6
    d264:	0e 94 48 4e 	call	0x9c90	; 0x9c90 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d268:	02 e0       	ldi	r16, 0x02	; 2
    d26a:	22 e0       	ldi	r18, 0x02	; 2
    d26c:	4c ee       	ldi	r20, 0xEC	; 236
    d26e:	6c ee       	ldi	r22, 0xEC	; 236
    d270:	86 e0       	ldi	r24, 0x06	; 6
    d272:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2); 
    d276:	22 e0       	ldi	r18, 0x02	; 2
    d278:	4c ee       	ldi	r20, 0xEC	; 236
    d27a:	6c ee       	ldi	r22, 0xEC	; 236
    d27c:	80 e0       	ldi	r24, 0x00	; 0
    d27e:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);    
    d282:	22 e0       	ldi	r18, 0x02	; 2
    d284:	4c ee       	ldi	r20, 0xEC	; 236
    d286:	6e ec       	ldi	r22, 0xCE	; 206
    d288:	8a e0       	ldi	r24, 0x0A	; 10
    d28a:	0e 94 95 4e 	call	0x9d2a	; 0x9d2a <MoveSprite>
leveltime = 99;
    d28e:	20 92 69 0a 	sts	0x0A69, r2	; 0x800a69 <leveltime>
time = 0;
    d292:	10 92 ed 09 	sts	0x09ED, r1	; 0x8009ed <time>
    d296:	10 92 ee 09 	sts	0x09EE, r1	; 0x8009ee <time+0x1>
    d29a:	10 92 ef 09 	sts	0x09EF, r1	; 0x8009ef <time+0x2>
    d29e:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <time+0x3>
bonus = 0;
    d2a2:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    d2a6:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
scrolltiles = 0;
    d2aa:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <scrolltiles>
Screen.scrollX = 0;
    d2ae:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
setheadline();    
    d2b2:	0e 94 52 5a 	call	0xb4a4	; 0xb4a4 <setheadline>
drawlevel(Levelx);
    d2b6:	80 91 6c 0a 	lds	r24, 0x0A6C	; 0x800a6c <Levelx>
    d2ba:	90 e0       	ldi	r25, 0x00	; 0
    d2bc:	0e 94 44 61 	call	0xc288	; 0xc288 <drawlevel>
printheadline();   
    d2c0:	0e 94 3f 54 	call	0xa87e	; 0xa87e <printheadline>
FadeIn(1, true);   
    d2c4:	61 e0       	ldi	r22, 0x01	; 1
    d2c6:	81 e0       	ldi	r24, 0x01	; 1
    d2c8:	0e 94 5d 4f 	call	0x9eba	; 0x9eba <FadeIn>

play = true;
    d2cc:	10 93 bb 09 	sts	0x09BB, r17	; 0x8009bb <play>

while(play)
    d2d0:	80 91 bb 09 	lds	r24, 0x09BB	; 0x8009bb <play>
    d2d4:	88 23       	and	r24, r24
    d2d6:	09 f4       	brne	.+2      	; 0xd2da <main+0x272>
    d2d8:	91 c0       	rjmp	.+290    	; 0xd3fc <main+0x394>
{
    
moveplayer(); 
    d2da:	0e 94 77 5d 	call	0xbaee	; 0xbaee <moveplayer>
moveplayer2();
    d2de:	0e 94 c9 57 	call	0xaf92	; 0xaf92 <moveplayer2>
movemonster();
    d2e2:	0e 94 db 5a 	call	0xb5b6	; 0xb5b6 <movemonster>
WaitVsync(1); 
    d2e6:	81 e0       	ldi	r24, 0x01	; 1
    d2e8:	90 e0       	ldi	r25, 0x00	; 0
    d2ea:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
drawmonster();   
    d2ee:	0e 94 5f 5a 	call	0xb4be	; 0xb4be <drawmonster>
movelevel();
    d2f2:	0e 94 6f 64 	call	0xc8de	; 0xc8de <movelevel>
drawplayer(); 
    d2f6:	0e 94 b2 4f 	call	0x9f64	; 0x9f64 <drawplayer>
drawplayer2(); 
    d2fa:	0e 94 48 50 	call	0xa090	; 0xa090 <drawplayer2>
//drawlevel(Levelx);
updateWater();
    d2fe:	0e 94 72 52 	call	0xa4e4	; 0xa4e4 <updateWater>
//drawplayer();   

//movemonster();
//drawmonster();    

updatetime(time);
    d302:	60 91 ed 09 	lds	r22, 0x09ED	; 0x8009ed <time>
    d306:	70 91 ee 09 	lds	r23, 0x09EE	; 0x8009ee <time+0x1>
    d30a:	80 91 ef 09 	lds	r24, 0x09EF	; 0x8009ef <time+0x2>
    d30e:	90 91 f0 09 	lds	r25, 0x09F0	; 0x8009f0 <time+0x3>
    d312:	0e 94 b9 64 	call	0xc972	; 0xc972 <updatetime>
    if ( player.y > 240) 
    d316:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x2>
    d31a:	90 91 65 09 	lds	r25, 0x0965	; 0x800965 <player+0x3>
    d31e:	81 3f       	cpi	r24, 0xF1	; 241
    d320:	91 05       	cpc	r25, r1
    d322:	c4 f0       	brlt	.+48     	; 0xd354 <main+0x2ec>
    {
    died = true;
    d324:	10 93 6d 0a 	sts	0x0A6D, r17	; 0x800a6d <died>
    lives--;    
    d328:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    d32c:	81 50       	subi	r24, 0x01	; 1
    d32e:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    isplaying = false; 
    d332:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    d336:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    bonus = 0; 
    d33a:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    d33e:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    TriggerFx(9,0xff,true);
    d342:	41 e0       	ldi	r20, 0x01	; 1
    d344:	6f ef       	ldi	r22, 0xFF	; 255
    d346:	89 e0       	ldi	r24, 0x09	; 9
    d348:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240); 
    d34c:	80 ef       	ldi	r24, 0xF0	; 240
    d34e:	90 e0       	ldi	r25, 0x00	; 0
    d350:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>

    };
    if ( player2.y > 240) 
    d354:	80 91 f4 09 	lds	r24, 0x09F4	; 0x8009f4 <player2+0x2>
    d358:	90 91 f5 09 	lds	r25, 0x09F5	; 0x8009f5 <player2+0x3>
    d35c:	81 3f       	cpi	r24, 0xF1	; 241
    d35e:	91 05       	cpc	r25, r1
    d360:	44 f0       	brlt	.+16     	; 0xd372 <main+0x30a>
    {
    player2.y = player.y;
    d362:	80 91 64 09 	lds	r24, 0x0964	; 0x800964 <player+0x2>
    d366:	90 91 65 09 	lds	r25, 0x0965	; 0x800965 <player+0x3>
    d36a:	90 93 f5 09 	sts	0x09F5, r25	; 0x8009f5 <player2+0x3>
    d36e:	80 93 f4 09 	sts	0x09F4, r24	; 0x8009f4 <player2+0x2>
   // bonus = 0; 
   // TriggerFx(9,0xff,true);
   //WaitVsync(240); 
    };

    if (timeisup)
    d372:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <timeisup>
    d376:	88 23       	and	r24, r24
    d378:	19 f1       	breq	.+70     	; 0xd3c0 <main+0x358>
    {
    printtileint( 26 ,0,leveltime,2);
    d37a:	40 91 69 0a 	lds	r20, 0x0A69	; 0x800a69 <leveltime>
    d37e:	50 e0       	ldi	r21, 0x00	; 0
    d380:	22 e0       	ldi	r18, 0x02	; 2
    d382:	30 e0       	ldi	r19, 0x00	; 0
    d384:	60 e0       	ldi	r22, 0x00	; 0
    d386:	70 e0       	ldi	r23, 0x00	; 0
    d388:	8a e1       	ldi	r24, 0x1A	; 26
    d38a:	90 e0       	ldi	r25, 0x00	; 0
    d38c:	0e 94 d6 50 	call	0xa1ac	; 0xa1ac <printtileint>
    TriggerFx(9,0xff,true);
    d390:	41 e0       	ldi	r20, 0x01	; 1
    d392:	6f ef       	ldi	r22, 0xFF	; 255
    d394:	89 e0       	ldi	r24, 0x09	; 9
    d396:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240);   
    d39a:	80 ef       	ldi	r24, 0xF0	; 240
    d39c:	90 e0       	ldi	r25, 0x00	; 0
    d39e:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    showtimesup();
    d3a2:	0e 94 8f 67 	call	0xcf1e	; 0xcf1e <showtimesup>
    lives--;    
    d3a6:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    d3aa:	81 50       	subi	r24, 0x01	; 1
    d3ac:	80 93 0e 0a 	sts	0x0A0E, r24	; 0x800a0e <lives>
    bonus = 0;  
    d3b0:	10 92 52 0a 	sts	0x0A52, r1	; 0x800a52 <bonus+0x1>
    d3b4:	10 92 51 0a 	sts	0x0A51, r1	; 0x800a51 <bonus>
    isplaying = false; 
    d3b8:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    d3bc:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    };
      if (finished)
    d3c0:	80 91 53 0a 	lds	r24, 0x0A53	; 0x800a53 <finished>
    d3c4:	88 23       	and	r24, r24
    d3c6:	09 f4       	brne	.+2      	; 0xd3ca <main+0x362>
    d3c8:	83 cf       	rjmp	.-250    	; 0xd2d0 <main+0x268>
    {
    TriggerFx(10,0xff,true);      
    d3ca:	41 e0       	ldi	r20, 0x01	; 1
    d3cc:	6f ef       	ldi	r22, 0xFF	; 255
    d3ce:	8a e0       	ldi	r24, 0x0A	; 10
    d3d0:	0e 94 a5 44 	call	0x894a	; 0x894a <TriggerFx>
    WaitVsync(240);   
    d3d4:	80 ef       	ldi	r24, 0xF0	; 240
    d3d6:	90 e0       	ldi	r25, 0x00	; 0
    d3d8:	0e 94 01 4f 	call	0x9e02	; 0x9e02 <WaitVsync>
    level++;    
    d3dc:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    d3e0:	8f 5f       	subi	r24, 0xFF	; 255
    d3e2:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <level>
    StartSong(midisong);
    d3e6:	8b e6       	ldi	r24, 0x6B	; 107
    d3e8:	9a e3       	ldi	r25, 0x3A	; 58
    d3ea:	0e 94 c8 43 	call	0x8790	; 0x8790 <StartSong>
    isplaying = false; 
    d3ee:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    d3f2:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    finished = false;
    d3f6:	10 92 53 0a 	sts	0x0A53, r1	; 0x800a53 <finished>
    d3fa:	6a cf       	rjmp	.-300    	; 0xd2d0 <main+0x268>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    d3fc:	80 91 0e 0a 	lds	r24, 0x0A0E	; 0x800a0e <lives>
    d400:	81 11       	cpse	r24, r1
    d402:	02 c0       	rjmp	.+4      	; 0xd408 <main+0x3a0>
    d404:	0e 94 3b 67 	call	0xce76	; 0xce76 <showgameover>

if  (level > maxlevel  ) 
    d408:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <level>
    d40c:	8a 30       	cpi	r24, 0x0A	; 10
    d40e:	08 f4       	brcc	.+2      	; 0xd412 <main+0x3aa>
    d410:	d3 ce       	rjmp	.-602    	; 0xd1b8 <main+0x150>
{   showcongratulation();
    d412:	0e 94 e3 67 	call	0xcfc6	; 0xcfc6 <showcongratulation>
    isplaying = false; 
    d416:	10 92 68 0a 	sts	0x0A68, r1	; 0x800a68 <isplaying>
    play = false;
    d41a:	10 92 bb 09 	sts	0x09BB, r1	; 0x8009bb <play>
    finished = false;
    d41e:	10 92 53 0a 	sts	0x0A53, r1	; 0x800a53 <finished>
    lives = 0;
    d422:	10 92 0e 0a 	sts	0x0A0E, r1	; 0x800a0e <lives>
    d426:	c8 ce       	rjmp	.-624    	; 0xd1b8 <main+0x150>
 
};
};
};
StopSong();
    d428:	0e 94 f1 43 	call	0x87e2	; 0x87e2 <StopSong>

    
};
    d42c:	4b ce       	rjmp	.-874    	; 0xd0c4 <main+0x5c>

0000d42e <__udivmodhi4>:
    d42e:	aa 1b       	sub	r26, r26
    d430:	bb 1b       	sub	r27, r27
    d432:	51 e1       	ldi	r21, 0x11	; 17
    d434:	07 c0       	rjmp	.+14     	; 0xd444 <__udivmodhi4_ep>

0000d436 <__udivmodhi4_loop>:
    d436:	aa 1f       	adc	r26, r26
    d438:	bb 1f       	adc	r27, r27
    d43a:	a6 17       	cp	r26, r22
    d43c:	b7 07       	cpc	r27, r23
    d43e:	10 f0       	brcs	.+4      	; 0xd444 <__udivmodhi4_ep>
    d440:	a6 1b       	sub	r26, r22
    d442:	b7 0b       	sbc	r27, r23

0000d444 <__udivmodhi4_ep>:
    d444:	88 1f       	adc	r24, r24
    d446:	99 1f       	adc	r25, r25
    d448:	5a 95       	dec	r21
    d44a:	a9 f7       	brne	.-22     	; 0xd436 <__udivmodhi4_loop>
    d44c:	80 95       	com	r24
    d44e:	90 95       	com	r25
    d450:	bc 01       	movw	r22, r24
    d452:	cd 01       	movw	r24, r26
    d454:	08 95       	ret

0000d456 <__divmodhi4>:
    d456:	97 fb       	bst	r25, 7
    d458:	07 2e       	mov	r0, r23
    d45a:	16 f4       	brtc	.+4      	; 0xd460 <__divmodhi4+0xa>
    d45c:	00 94       	com	r0
    d45e:	07 d0       	rcall	.+14     	; 0xd46e <__divmodhi4_neg1>
    d460:	77 fd       	sbrc	r23, 7
    d462:	09 d0       	rcall	.+18     	; 0xd476 <__divmodhi4_neg2>
    d464:	0e 94 17 6a 	call	0xd42e	; 0xd42e <__udivmodhi4>
    d468:	07 fc       	sbrc	r0, 7
    d46a:	05 d0       	rcall	.+10     	; 0xd476 <__divmodhi4_neg2>
    d46c:	3e f4       	brtc	.+14     	; 0xd47c <__divmodhi4_exit>

0000d46e <__divmodhi4_neg1>:
    d46e:	90 95       	com	r25
    d470:	81 95       	neg	r24
    d472:	9f 4f       	sbci	r25, 0xFF	; 255
    d474:	08 95       	ret

0000d476 <__divmodhi4_neg2>:
    d476:	70 95       	com	r23
    d478:	61 95       	neg	r22
    d47a:	7f 4f       	sbci	r23, 0xFF	; 255

0000d47c <__divmodhi4_exit>:
    d47c:	08 95       	ret

0000d47e <__udivmodsi4>:
    d47e:	a1 e2       	ldi	r26, 0x21	; 33
    d480:	1a 2e       	mov	r1, r26
    d482:	aa 1b       	sub	r26, r26
    d484:	bb 1b       	sub	r27, r27
    d486:	fd 01       	movw	r30, r26
    d488:	0d c0       	rjmp	.+26     	; 0xd4a4 <__udivmodsi4_ep>

0000d48a <__udivmodsi4_loop>:
    d48a:	aa 1f       	adc	r26, r26
    d48c:	bb 1f       	adc	r27, r27
    d48e:	ee 1f       	adc	r30, r30
    d490:	ff 1f       	adc	r31, r31
    d492:	a2 17       	cp	r26, r18
    d494:	b3 07       	cpc	r27, r19
    d496:	e4 07       	cpc	r30, r20
    d498:	f5 07       	cpc	r31, r21
    d49a:	20 f0       	brcs	.+8      	; 0xd4a4 <__udivmodsi4_ep>
    d49c:	a2 1b       	sub	r26, r18
    d49e:	b3 0b       	sbc	r27, r19
    d4a0:	e4 0b       	sbc	r30, r20
    d4a2:	f5 0b       	sbc	r31, r21

0000d4a4 <__udivmodsi4_ep>:
    d4a4:	66 1f       	adc	r22, r22
    d4a6:	77 1f       	adc	r23, r23
    d4a8:	88 1f       	adc	r24, r24
    d4aa:	99 1f       	adc	r25, r25
    d4ac:	1a 94       	dec	r1
    d4ae:	69 f7       	brne	.-38     	; 0xd48a <__udivmodsi4_loop>
    d4b0:	60 95       	com	r22
    d4b2:	70 95       	com	r23
    d4b4:	80 95       	com	r24
    d4b6:	90 95       	com	r25
    d4b8:	9b 01       	movw	r18, r22
    d4ba:	ac 01       	movw	r20, r24
    d4bc:	bd 01       	movw	r22, r26
    d4be:	cf 01       	movw	r24, r30
    d4c0:	08 95       	ret

0000d4c2 <__itoa_ncheck>:
    d4c2:	bb 27       	eor	r27, r27
    d4c4:	4a 30       	cpi	r20, 0x0A	; 10
    d4c6:	31 f4       	brne	.+12     	; 0xd4d4 <__itoa_ncheck+0x12>
    d4c8:	99 23       	and	r25, r25
    d4ca:	22 f4       	brpl	.+8      	; 0xd4d4 <__itoa_ncheck+0x12>
    d4cc:	bd e2       	ldi	r27, 0x2D	; 45
    d4ce:	90 95       	com	r25
    d4d0:	81 95       	neg	r24
    d4d2:	9f 4f       	sbci	r25, 0xFF	; 255
    d4d4:	0c 94 6d 6a 	jmp	0xd4da	; 0xd4da <__utoa_common>

0000d4d8 <__utoa_ncheck>:
    d4d8:	bb 27       	eor	r27, r27

0000d4da <__utoa_common>:
    d4da:	fb 01       	movw	r30, r22
    d4dc:	55 27       	eor	r21, r21
    d4de:	aa 27       	eor	r26, r26
    d4e0:	88 0f       	add	r24, r24
    d4e2:	99 1f       	adc	r25, r25
    d4e4:	aa 1f       	adc	r26, r26
    d4e6:	a4 17       	cp	r26, r20
    d4e8:	10 f0       	brcs	.+4      	; 0xd4ee <__utoa_common+0x14>
    d4ea:	a4 1b       	sub	r26, r20
    d4ec:	83 95       	inc	r24
    d4ee:	50 51       	subi	r21, 0x10	; 16
    d4f0:	b9 f7       	brne	.-18     	; 0xd4e0 <__utoa_common+0x6>
    d4f2:	a0 5d       	subi	r26, 0xD0	; 208
    d4f4:	aa 33       	cpi	r26, 0x3A	; 58
    d4f6:	08 f0       	brcs	.+2      	; 0xd4fa <__utoa_common+0x20>
    d4f8:	a9 5d       	subi	r26, 0xD9	; 217
    d4fa:	a1 93       	st	Z+, r26
    d4fc:	00 97       	sbiw	r24, 0x00	; 0
    d4fe:	79 f7       	brne	.-34     	; 0xd4de <__utoa_common+0x4>
    d500:	b1 11       	cpse	r27, r1
    d502:	b1 93       	st	Z+, r27
    d504:	11 92       	st	Z+, r1
    d506:	cb 01       	movw	r24, r22
    d508:	0c 94 86 6a 	jmp	0xd50c	; 0xd50c <strrev>

0000d50c <strrev>:
    d50c:	dc 01       	movw	r26, r24
    d50e:	fc 01       	movw	r30, r24
    d510:	67 2f       	mov	r22, r23
    d512:	71 91       	ld	r23, Z+
    d514:	77 23       	and	r23, r23
    d516:	e1 f7       	brne	.-8      	; 0xd510 <strrev+0x4>
    d518:	32 97       	sbiw	r30, 0x02	; 2
    d51a:	04 c0       	rjmp	.+8      	; 0xd524 <strrev+0x18>
    d51c:	7c 91       	ld	r23, X
    d51e:	6d 93       	st	X+, r22
    d520:	70 83       	st	Z, r23
    d522:	62 91       	ld	r22, -Z
    d524:	ae 17       	cp	r26, r30
    d526:	bf 07       	cpc	r27, r31
    d528:	c8 f3       	brcs	.-14     	; 0xd51c <strrev+0x10>
    d52a:	08 95       	ret

0000d52c <_exit>:
    d52c:	f8 94       	cli

0000d52e <__stop_program>:
    d52e:	ff cf       	rjmp	.-2      	; 0xd52e <__stop_program>
