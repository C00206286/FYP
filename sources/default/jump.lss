
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  0000d8a6  0000d9a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000d8a6  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000009c2  00800102  00800102  0000d9a8  2**1
                  ALLOC
  3 .noinit       0000043c  00800ac4  00800ac4  0000da00  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000de3c  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000de50  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004e0  00000000  00000000  0000de90  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007eab  00000000  00000000  0000e370  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013de  00000000  00000000  0001621b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00005cb0  00000000  00000000  000175f9  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000ca8  00000000  00000000  0001d2ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000015b5  00000000  00000000  0001df54  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000051fd  00000000  00000000  0001f509  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000538  00000000  00000000  00024708  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 04 3e 	jmp	0x7c08	; 0x7c08 <__ctors_end>
       4:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
       8:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
       c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      10:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      14:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      18:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      1c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      20:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      24:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      28:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      2c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      30:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      34:	0c 94 ba 41 	jmp	0x8374	; 0x8374 <__vector_13>
      38:	0c 94 f9 41 	jmp	0x83f2	; 0x83f2 <__vector_14>
      3c:	0c 94 25 3f 	jmp	0x7e4a	; 0x7e4a <__vector_15>
      40:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      44:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      48:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      4c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      50:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      54:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      58:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      5c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      60:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      64:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      68:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>
      6c:	0c 94 6f 3e 	jmp	0x7cde	; 0x7cde <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	38 44 3b 44 97 44 9b 44 a2 44 43 44 48 44 4d 44     8D;D.D.D.DCDHDMD
      d2:	aa 44 50 44 53 44 56 44 91 44 94 44 ba 44           .DPDSDVD.D.D.D

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     9bb:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     9d7:	04 04 04 04 04 04 00 00 00 00 00 00 00 00 00 00     ................
	...
     9ef:	00 00 15 00 00 00 00 00 00 00 00 00 00 15 00 00     ................
	...
     a13:	00 00 03 03 03 00 00 00 00 00 00 00 00 15 00 00     ................
	...
     a2f:	15 04 00 00 00 00 00 00 04 15 00 00 00 00 00 00     ................
	...
     a4b:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
     a67:	00 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a77:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a87:	00 00 04 04 00 15 00 00 15 00 04 04 00 00 00 00     ................
     a97:	2e 2e 2e 2e 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ad7:	00 29 29 00 00 00 00 00 00 00 00 00 00 04 00 29     .))............)
     ae7:	00 00 29 00 04 00 00 00 00 00 2e 19 1a 2e 00 00     ..).............
	...
     b0f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
     b1f:	00 00 00 00 04 04 04 00 00 00 00 00 00 00 00 00     ................
     b2f:	00 00 00 03 03 00 00 00 00 00 00 00 00 00 00 04     ................
     b3f:	00 00 00 00 00 00 04 00 00 00 00 00 2e 19 1a 2e     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 04 00 00 00 00 00     ..).............
	...
     b97:	00 04 00 04 00 00 04 00 04 00 00 00 00 00 2e 19     ................
     ba7:	1a 2e 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bc3:	29 00 00 00 00 00 00 00 04 00 00 00 00 04 04 04     )...............
     bd3:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bef:	00 00 00 04 00 00 04 04 00 00 04 00 00 00 00 00     ................
     bff:	2e 19 1a 2e 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
     c1b:	00 00 27 00 00 00 00 00 00 04 04 00 00 00 00 00     ..'.............
	...
     c4b:	00 04 00 00 00 00 00 00 04 00 00 00 00 00 2e 19     ................
     c5b:	1a 2e 00 00 00 00 00 00 00 00 00 04 04 00 00 29     ...............)
     c6b:	00 00 29 00 00 29 00 00 00 00 00 00 00 00 00 00     ..)..)..........
     c7b:	00 00 00 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     c8b:	00 00 04 00 00 00 00 00 00 00 00 00 00 27 27 00     .............''.
     c9b:	00 27 27 00 00 00 00 00 00 00 00 00 04 04 04 04     .''.............
     cab:	04 04 00 00 00 00 00 00 2e 19 1a 2e 00 00 00 00     ................
     cbb:	00 00 00 00 04 04 04 15 15 00 15 15 00 15 15 00     ................
     ccb:	15 15 00 00 00 1d 1d 1d 00 00 00 00 04 04 04 1d     ................
     cdb:	1d 1d 1d 00 00 00 00 00 00 00 1d 1d 04 1d 1d 00     ................
     ceb:	00 29 29 29 29 00 00 00 00 00 00 00 00 00 00 00     .))))...........
	...
     d0b:	00 00 2e 19 1a 2e 00 00 00 00 00 15 04 04 04 04     ................
     d1b:	04 3e 3e 04 3e 3e 04 3e 3e 04 3e 3e 04 04 04 04     .>>.>>.>>.>>....
     d2b:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
     d3b:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
     d4b:	04 15 15 15 15 15 15 15 04 04 04 04 04 04 04 00     ................
     d5b:	00 00 00 00 00 00 00 32 04 04 04 04 04 04 04 04     .......2........
     d6b:	04 04 04 04 04 04 04 3e 3e 3e 3e 3e 3e 3e 3e 3e     .......>>>>>>>>>
     d7b:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
     d8b:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
     d9b:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
     dab:	3e 3e 3e 3e 3e 3e 3e 3e 3e 04 04 04 04 04 04 04     >>>>>>>>>.......
     dbb:	04 04 3e 04 04 04 04 04 04 04 00 00 00 00 00 00     ..>.............
	...

00000e1f <level8>:
	...
     ecb:	15 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     edb:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ef3:	15 00 00 00 00 00 00 00 00 00 00 00 15 00 00 00     ................
	...
     f0b:	00 15 00 00 00 00 00 00 00 00 00 00 00 15 00 00     ................
	...
     f23:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     f33:	00 00 00 04 00 00 00 00 00 00 00 00 29 29 00 00     ............))..
	...
     f4b:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
     f63:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
     fff:	00 00 00 00 00 00 04 04 04 04 04 04 04 00 00 00     ................
	...
    101f:	04 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 04 04 04 04 00 00 00 04 00 00 00 00 00 00     ................
	...
    1077:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 15 04 00 00 00 00 00 00 00 00 00 00 15 00 00     ................
	...
    10cf:	04 00 00 00 00 00 15 00 00 00 32 00 00 00 00 00     ..........2.....
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 15 15     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 04 04 15 15 15     ....)...........
    10ff:	15 15 15 15 15 15 15 04 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 03 03 03 00 00 00 00 00     ................
    113b:	00 04 04 04 00 00 27 27 27 27 00 00 2e 2e 00 00     ......''''......
    114b:	00 00 29 00 00 00 00 15 04 3e 3e 3e 3e 3e 3e 3e     ..)......>>>>>>>
    115b:	3e 3e 3e 3e 3e 3e 04 00 00 00 00 00 00 00 00 00     >>>>>>..........
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
	...
    1193:	00 00 00 04 04 04 00 00 00 00 00 00 00 2e 19 1a     ................
    11a3:	00 00 00 00 29 00 00 00 00 04 04 3e 3e 3e 3e 3e     ....)......>>>>>
    11b3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 04 1d 00 00 15 15 00     >>>>>>>>>.......
    11c3:	00 15 15 04 15 15 04 04 04 15 15 04 1d 00 00 15     ................
    11d3:	00 00 00 00 00 15 00 00 00 15 04 00 04 00 04 00     ................
    11e3:	04 00 00 00 00 00 00 00 00 00 00 00 04 04 04 04     ................
    11f3:	00 00 00 00 00 00 00 2e 19 1a 00 00 00 00 00 04     ................
    1203:	04 04 04 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     ...>>>>>>>>>>>>>
    1213:	3e 3e 3e 3e 04 04 04 3e 3e 04 04 3e 3e 04 3e 3e     >>>>...>>..>>.>>
    1223:	3e 04 3e 3e 3e 04 04 04 04 3e 04 04 04 04 04 3e     >.>>>....>.....>
    1233:	04 04 04 3e 04 00 04 00 04 00 04 15 15 04 04 04     ...>............
    1243:	04 04 04 04 04 15 04 04 04 04 3e 3e 3e 3e 3e 3e     ..........>>>>>>
    1253:	3e 04 04 04 04 04 04 04 04 04 3e 3e 3e 3e 3e 3e     >.........>>>>>>
    1263:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    1273:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    1283:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    1293:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    12a3:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 00 00     >>>>>>>>>>>>>>..
	...

0000130b <level7>:
	...
    13c3:	15 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    13d3:	15 00 00 00 00 00 00 00 00 00 00 00 00 00 00 15     ................
	...
    13f7:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    141b:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    142b:	00 00 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    143b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1453:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1483:	03 00 00 00 00 00 00 00 00 03 03 03 00 00 00 00     ................
	...
    14b7:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14f3:	00 32 00 00 00 00 00 00 00 29 00 00 00 00 00 00     .2.......)......
	...
    1513:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    153f:	00 29 29 29 00 00 00 00 00 00 00 00 00 00 00 04     .)))............
    154f:	04 04 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    156b:	00 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    157b:	00 00 00 15 15 00 00 00 00 00 00 00 00 00 00 00     ................
    158b:	00 00 00 00 00 04 04 04 00 00 00 00 00 00 00 04     ................
    159b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    15ab:	04 27 27 27 27 27 27 27 27 27 27 04 00 00 00 00     .''''''''''.....
	...
    15c3:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    15d3:	00 00 00 00 00 2e 2e 00 00 00 00 00 00 00 00 00     ................
	...
    15ef:	00 00 15 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    15ff:	00 00 04 3e 3e 3e 04 00 00 00 00 00 00 00 00 00     ...>>>..........
    160f:	00 04 00 00 00 03 04 03 03 04 00 00 00 00 00 04     ................
    161f:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    162f:	00 00 2e 19 1a 2e 00 00 00 00 00 00 00 04 00 00     ................
    163f:	00 00 00 04 00 00 00 00 00 00 04 04 04 00 00 00     ................
	...
    165b:	04 3e 3e 3e 04 00 00 00 00 00 00 00 00 00 00 04     .>>>............
	...
    1677:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    1687:	00 00 00 00 2e 19 1a 2e 00 00 00 00 00 00 00 04     ................
    1697:	15 00 15 00 15 04 00 15 15 15 00 00 04 04 04 00     ................
    16a7:	00 00 00 00 00 15 00 15 00 00 00 00 00 00 04 3e     ...............>
    16b7:	3e 3e 04 00 00 00 00 00 00 00 00 00 00 04 1d 1d     >>..............
	...
    16cf:	00 1d 1d 04 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    16df:	00 29 00 00 00 00 2e 19 1a 2e 00 00 00 00 00 00     .)..............
    16ef:	00 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    16ff:	04 04 04 04 04 04 04 04 04 04 04 04 04 00 04 04     ................
    170f:	04 3e 3e 3e 04 15 15 15 15 15 15 15 15 15 15 04     .>>>............
    171f:	04 04 04 04 04 04 04 04 04 04 04 04 04 04 04 04     ................
    172f:	04 04 04 3e 04 3e 04 3e 04 04 04 3e 04 04 04 04     ...>.>.>...>....
    173f:	04 04 04 04 04 04 04 04 04 04 3e 3e 3e 3e 3e 3e     ..........>>>>>>
    174f:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    175f:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    176f:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    177f:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e     >>>>>>>>>>>>>>>>
    178f:	3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 3e 00 00     >>>>>>>>>>>>>>..
	...

000017f7 <level6>:
	...
    1857:	00 00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00     ..,-..,-...,-...
    1867:	00 00 00 00 00 00 2c 2d 2c 2d 00 00 00 00 00 00     ......,-,-......
    1877:	00 2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00     .,-.............
	...
    18b3:	2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 03 03 00 00     ,-..,-...,-.....
    18c3:	00 00 00 00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c     ....,-,-.......,
    18d3:	2d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     -...............
	...
    190b:	00 00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00     ..,-..,-...,-...
    191b:	00 00 00 00 00 00 2c 2d 2c 2d 00 00 00 00 00 00     ......,-,-......
    192b:	00 2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00     .,-.............
	...
    1967:	2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00 32 00     ,-..,-...,-...2.
    1977:	00 00 00 00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c     ....,-,-.......,
    1987:	2d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     -...............
	...
    19af:	00 2e 00 2e 00 00 00 2e 00 2e 00 00 00 00 00 00     ................
    19bf:	00 00 2c 2d 00 00 2c 2d 00 29 00 2c 2d 02 02 02     ..,-..,-.).,-...
    19cf:	02 00 00 00 00 00 2c 2d 2c 2d 00 03 03 03 03 03     ......,-,-......
    19df:	00 2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00     .,-.............
    19ef:	00 00 00 00 29 03 29 00 00 00 00 00 00 00 00 00     ....).).........
	...
    1a07:	00 00 00 2e 2e 2e 00 00 00 2e 2e 2e 00 00 00 00     ................
    1a17:	00 00 00 00 2c 2d 00 00 2c 2d 27 27 27 2c 2d 00     ....,-..,-''',-.
	...
    1a2f:	2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00 00     ,-,-.......,-...
	...
    1a53:	00 00 00 32 00 00 27 00 00 00 00 00 00 00 00 00     ...2..'.........
    1a63:	00 2e 2e 2e 2e 2e 2e 2e 2e 2e 00 00 00 00 00 00     ................
    1a73:	00 00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00     ..,-..,-...,-...
    1a83:	00 00 00 0c 0d 00 2c 2d 2c 2d 00 00 00 00 00 00     ......,-,-......
    1a93:	00 2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00     .,-.............
    1aa3:	00 00 00 00 29 29 29 00 00 00 00 00 0c 0d 00 00     ....))).........
    1ab3:	00 00 00 0c 0d 00 00 00 00 00 00 2e 2e 2e 2e 2e     ................
    1ac3:	2e 2e 2e 2e 00 00 00 00 00 00 00 00 2c 2d 27 27     ............,-''
    1ad3:	2c 2d 00 00 00 2c 2d 00 00 00 00 00 00 0c 0d 00     ,-...,-.........
    1ae3:	2c 2d 2c 2d 02 02 02 03 02 02 02 2c 2d 00 00 00     ,-,-.......,-...
	...
    1b07:	00 00 0c 0d 00 00 00 00 00 0c 0d 00 00 00 00 00     ................
    1b17:	00 2e 2e 2e 2e 1a 2e 2e 2e 2e 00 00 00 00 00 00     ................
    1b27:	29 00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00     ).,-..,-...,-...
    1b37:	00 00 00 0c 0d 00 2c 2d 2c 2d 00 00 00 00 00 00     ......,-,-......
    1b47:	00 2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00     .,-.............
    1b57:	00 00 00 03 29 03 29 03 00 00 00 02 0c 0d 00 00     ....).).........
    1b67:	00 00 00 0c 0d 00 00 00 00 00 00 2e 2e 2e 19 1a     ................
    1b77:	1a 2e 2e 2e 00 00 00 00 00 27 27 27 2c 2d 00 00     .........''',-..
    1b87:	2c 2d 00 00 00 2c 2d 00 00 00 00 00 00 0c 0d 00     ,-...,-.........
    1b97:	2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00 00     ,-,-.......,-...
    1ba7:	00 00 00 00 00 0c 0d 00 00 00 00 00 00 00 00 00     ................
    1bb7:	00 00 00 00 02 02 0c 0d 00 00 00 00 00 0c 0d 00     ................
    1bc7:	00 00 00 00 00 2e 2e 2e 19 1a 1a 2e 2e 2e 00 00     ................
    1bd7:	00 00 00 00 00 00 2a 2b 00 00 2a 2b 00 00 00 2a     ......*+..*+...*
    1be7:	2b 00 00 00 00 00 00 0c 0d 00 2a 2b 2a 2b 00 00     +.........*+*+..
    1bf7:	00 00 00 00 00 2a 2b 00 00 00 00 00 1e 1e 1e 0c     .....*+.........
    1c07:	0d 1e 1e 00 00 00 00 00 00 00 00 00 00 02 02 02     ................
    1c17:	0c 0d 00 00 00 00 00 0c 0d 1e 1e 1e 1e 29 29 2e     .............)).
    1c27:	2e 2e 19 1a 1a 2e 2e 2e 01 01 01 05 00 00 00 00     ................
    1c37:	06 05 00 00 06 05 00 00 00 06 05 00 00 00 00 00     ................
    1c47:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c57:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    1c67:	01 01 01 01 01 01 01 01 01 01 01 05 00 00 00 00     ................
    1c77:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c87:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1d43:	00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00 00     .,-..,-...,-....
    1d53:	00 00 2c 2d 00 00 03 00 00 2c 2d 00 00 00 00 00     ..,-.....,-.....
    1d63:	00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00     .,-,-.......,-..
	...
    1d83:	00 00 2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c     ..,-.....,-,-,-,
    1d93:	2d 00 00 00 00 00 00 00 00 00 00 2c 2d 00 00 2c     -..........,-..,
    1da3:	2d 00 00 00 2c 2d 00 00 00 00 00 00 2c 2d 00 00     -...,-......,-..
    1db3:	00 00 00 2c 2d 00 00 00 00 00 00 2c 2d 2c 2d 00     ...,-......,-,-.
    1dc3:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 00 00 00     ......,-........
	...
    1ddf:	2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c 2d 00     ,-.....,-,-,-,-.
	...
    1df7:	00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00 03     .,-..,-...,-....
    1e07:	00 00 2c 2d 00 00 00 00 00 2c 2d 00 00 00 00 00     ..,-.....,-.....
    1e17:	00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00     .,-,-.......,-..
	...
    1e37:	00 00 2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c     ..,-.....,-,-,-,
    1e47:	2d 00 00 00 00 00 00 00 00 00 00 2c 2d 00 00 2c     -..........,-..,
    1e57:	2d 00 00 00 2c 2d 00 00 00 00 00 00 2c 2d 27 27     -...,-......,-''
    1e67:	27 27 27 2c 2d 00 00 00 00 00 00 2c 2d 2c 2d 00     ''',-......,-,-.
    1e77:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 00 00 00     ......,-........
	...
    1e93:	2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c 2d 00     ,-.....,-,-,-,-.
	...
    1eab:	00 2c 2d 00 00 2c 2d 00 00 00 2c 2d 00 00 00 00     .,-..,-...,-....
    1ebb:	00 00 2c 2d 00 00 00 00 00 2c 2d 00 00 00 00 00     ..,-.....,-.....
    1ecb:	00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00     .,-,-.......,-..
	...
    1eeb:	00 00 2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c     ..,-.....,-,-,-,
    1efb:	2d 00 00 00 00 00 00 00 00 00 00 2c 2d 00 00 2c     -..........,-..,
    1f0b:	2d 0c 0d 00 2c 2d 27 27 27 27 27 27 2c 2d 00 00     -...,-'''''',-..
    1f1b:	00 00 00 2c 2d 00 00 00 00 00 00 2c 2d 2c 2d 00     ...,-......,-,-.
    1f2b:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 00 00 02     ......,-........
    1f3b:	02 02 03 02 02 03 02 02 00 00 00 00 2c 2d 00 00     ............,-..
    1f4b:	00 00 00 2c 2d 2c 2d 2c 2d 2c 2d 00 00 00 00 00     ...,-,-,-,-.....
    1f5b:	00 00 00 00 00 2c 2d 00 00 2c 2d 0c 0d 00 2c 2d     .....,-..,-...,-
    1f6b:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 2c 2d 00     ......,-.....,-.
    1f7b:	00 00 00 00 00 2c 2d 2c 2d 00 00 00 00 00 00 00     .....,-,-.......
    1f8b:	2c 2d 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ,-..............
    1f9b:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 2c 2d 2c     ......,-.....,-,
    1fab:	2d 2c 2d 2c 2d 00 00 00 00 00 00 00 00 00 00 2c     -,-,-..........,
    1fbb:	2d 0c 0d 2c 2d 0c 0d 00 2c 2d 00 00 00 00 00 00     -..,-...,-......
    1fcb:	2c 2d 00 00 00 00 00 2c 2d 00 00 00 00 00 00 2c     ,-.....,-......,
    1fdb:	2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00 00 00     -,-.......,-....
	...
    1ffb:	2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c 2d 00     ,-.....,-,-,-,-.
	...
    2013:	00 2c 2d 0c 0d 2c 2d 0c 0d 00 2c 2d 00 00 00 00     .,-..,-...,-....
    2023:	00 00 2c 2d 00 00 00 00 00 2c 2d 00 00 00 00 00     ..,-.....,-.....
    2033:	00 2c 2d 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00     .,-,-.......,-..
    2043:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2053:	00 00 2c 2d 00 00 00 00 00 2c 2d 2c 2d 2c 2d 2c     ..,-.....,-,-,-,
    2063:	2d 00 00 00 00 00 00 00 00 0c 0d 2c 2d 0c 0d 2c     -..........,-..,
    2073:	2d 0c 0d 00 2c 2d 00 00 00 00 00 00 2c 2d 00 00     -...,-......,-..
    2083:	00 00 00 2c 2d 00 00 00 00 00 00 2c 2d 2c 2d 00     ...,-......,-,-.
    2093:	00 00 00 00 00 00 0c 0d 00 00 00 00 00 00 00 02     ................
    20a3:	02 02 02 02 02 02 02 02 00 00 00 00 2c 2d 00 00     ............,-..
    20b3:	00 00 00 2c 2d 2c 2d 2c 2d 2c 2d 00 19 1a 00 00     ...,-,-,-,-.....
    20c3:	00 00 00 0c 0d 2a 2b 0c 0d 2a 2b 0c 0d 00 2a 2b     .....*+..*+...*+
    20d3:	00 00 00 00 00 00 2a 2b 00 00 00 00 00 2a 2b 00     ......*+.....*+.
    20e3:	00 00 00 00 00 2a 2b 2a 2b 1e 1e 1e 00 00 00 00     .....*+*+.......
    20f3:	0c 0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2103:	00 00 00 00 1e 1e 2a 2b 1e 00 00 00 00 2a 2b 2a     ......*+.....*+*
    2113:	2b 2a 2b 2a 2b 00 1b 1c 01 01 01 01 01 01 01 01     +*+*+...........
    2123:	01 01 01 01 01 01 05 00 06 05 00 00 00 00 00 00     ................
    2133:	06 05 00 00 00 00 00 06 05 00 00 00 00 00 00 06     ................
    2143:	01 01 01 01 01 01 01 05 00 06 01 05 00 00 00 00     ................
	...
    215f:	00 00 06 01 01 01 01 01 05 00 00 06 01 01 01 01     ................
    216f:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000021cf <level4>:
	...
    222b:	2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 00 2c 2d 2c     ,-,-.,-,-,-..,-,
    223b:	2d 00 00 2c 2d 00 00 00 2c 2d 2c 2d 2c 2d 00 2c     -..,-...,-,-,-.,
    224b:	2d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 00 00 00 00     -.,-.,-.,-,-....
    225b:	00 00 00 00 00 00 2c 2d 00 2c 2d 2c 2d 00 00 2c     ......,-.,-,-..,
    226b:	2d 00 00 2c 2d 00 00 00 00 00 00 00 2c 2d 00 00     -..,-.......,-..
	...
    2283:	00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 00 2c     ..,-,-.,-,-,-..,
    2293:	2d 2c 2d 00 00 2c 2d 00 00 00 2c 2d 2c 2d 2c 2d     -,-..,-...,-,-,-
    22a3:	00 2c 2d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 00 00     .,-.,-.,-.,-,-..
	...
    22bb:	2c 2d 00 2c 2d 2c 2d 00 00 2c 2d 00 00 2c 2d 00     ,-.,-,-..,-..,-.
    22cb:	00 00 00 00 00 00 2c 2d 00 00 00 00 00 00 00 00     ......,-........
    22db:	00 00 00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00     ....,-,-.,-,-,-.
    22eb:	00 2c 2d 2c 2d 00 00 2c 2d 00 00 00 2c 2d 2c 2d     .,-,-..,-...,-,-
    22fb:	2c 2d 00 2c 2d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d     ,-.,-.,-.,-.,-,-
	...
    2313:	00 00 2c 2d 00 2c 2d 2c 2d 00 00 2c 2d 00 00 2c     ..,-.,-,-..,-..,
    2323:	2d 00 00 00 00 00 00 00 2c 2d 00 00 00 00 00 00     -.......,-......
    2333:	00 00 00 00 00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c     ......,-,-.,-,-,
    2343:	2d 00 00 2c 2d 2c 2d 00 00 2c 2d 00 00 00 2c 2d     -..,-,-..,-...,-
    2353:	2c 2d 2c 2d 00 2c 2d 00 2c 2d 00 2c 2d 00 2c 2d     ,-,-.,-.,-.,-.,-
    2363:	2c 2d 00 00 00 00 00 00 00 00 00 00 2c 2d 00 2c     ,-..........,-.,
    2373:	2d 2c 2d 00 00 2c 2d 00 00 2c 2d 00 00 00 00 00     -,-..,-..,-.....
    2383:	00 00 2c 2d 0c 0d 00 00 00 00 00 00 00 00 00 00     ..,-............
    2393:	2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 00 2c 2d 2c     ,-,-.,-,-,-..,-,
    23a3:	2d 00 00 2c 2d 00 00 00 2c 2d 2c 2d 2c 2d 00 2c     -..,-...,-,-,-.,
    23b3:	2d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 00 00 00 00     -.,-.,-.,-,-....
    23c3:	00 00 00 00 00 00 2c 2d 00 2c 2d 2c 2d 00 00 2c     ......,-.,-,-..,
    23d3:	2d 00 00 2c 2d 00 00 00 00 00 00 00 2c 2d 0c 0d     -..,-.......,-..
	...
    23eb:	00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 03 2c     ..,-,-.,-,-,-..,
    23fb:	2d 2c 2d 00 00 2c 2d 00 00 00 2c 2d 2c 2d 2c 2d     -,-..,-...,-,-,-
    240b:	00 2c 2d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 00 00     .,-.,-.,-.,-,-..
    241b:	00 02 02 02 02 00 00 00 2c 2d 00 2c 2d 2c 2d 00     ........,-.,-,-.
    242b:	00 2c 2d 00 00 2c 2d 00 00 00 00 00 00 00 2c 2d     .,-..,-.......,-
    243b:	0c 0d 00 00 00 00 00 00 00 00 00 00 2c 2d 2c 2d     ............,-,-
    244b:	00 2c 2d 2c 2d 2c 2d 00 00 2c 2d 2c 2d 00 00 2c     .,-,-,-..,-,-..,
    245b:	2d 00 00 00 2c 2d 2c 2d 2c 2d 00 2c 2d 00 2c 2d     -...,-,-,-.,-.,-
    246b:	00 2c 2d 00 2c 2d 2c 2d 00 00 00 00 00 00 00 00     .,-.,-,-........
    247b:	00 00 2c 2d 00 2c 2d 2c 2d 00 00 2c 2d 00 00 2c     ..,-.,-,-..,-..,
    248b:	2d 00 00 00 00 00 0c 0d 2c 2d 0c 0d 00 00 00 00     -.......,-......
    249b:	00 00 00 00 00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c     ......,-,-.,-,-,
    24ab:	2d 00 00 2c 2d 2c 2d 00 00 2c 2d 29 29 29 2c 2d     -..,-,-..,-))),-
    24bb:	2c 2d 2c 2d 00 0c 0d 00 2c 2d 00 2c 2d 00 2c 2d     ,-,-....,-.,-.,-
    24cb:	2c 2d 00 00 00 00 00 00 00 00 00 00 2c 2d 00 2c     ,-..........,-.,
    24db:	2d 2c 2d 00 00 2c 2d 00 00 2c 2d 00 00 00 00 00     -,-..,-..,-.....
    24eb:	0c 0d 2c 2d 0c 0d 00 00 00 00 04 00 00 00 00 00     ..,-............
    24fb:	2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 03 2c 2d 2c     ,-,-.,-,-,-..,-,
    250b:	2d 03 00 2c 2d 00 00 00 2c 2d 2c 2d 2c 2d 00 0c     -..,-...,-,-,-..
    251b:	0d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 03 03 03 02     ..,-.,-.,-,-....
    252b:	02 02 03 03 03 00 2c 2d 00 2c 2d 2c 2d 00 00 2c     ......,-.,-,-..,
    253b:	2d 00 00 2c 2d 0c 0d 00 00 00 0c 0d 2c 2d 0c 0d     -..,-.......,-..
	...
    2553:	00 00 2c 2d 2c 2d 00 2c 2d 2c 2d 2c 2d 00 00 2c     ..,-,-.,-,-,-..,
    2563:	2d 2c 2d 00 00 2c 2d 00 32 00 2c 2d 2c 2d 2c 2d     -,-..,-.2.,-,-,-
    2573:	00 0c 0d 00 2c 2d 00 2c 2d 00 2c 2d 2c 2d 00 00     ....,-.,-.,-,-..
	...
    258b:	2c 2d 00 2c 2d 2c 2d 00 00 2c 2d 0c 0d 2c 2d 0c     ,-.,-,-..,-..,-.
    259b:	0d 00 00 00 0c 0d 2c 2d 0c 0d 00 00 04 00 00 00     ......,-........
    25ab:	19 1a 00 00 2a 2b 2a 2b 00 2a 2b 2a 2b 2a 2b 00     ....*+*+.*+*+*+.
    25bb:	00 2a 2b 2a 2b 00 00 2a 2b 00 02 00 2a 2b 2a 2b     .*+*+..*+...*+*+
    25cb:	2a 2b 00 0c 0d 00 2a 2b 00 2a 2b 00 2a 2b 2a 2b     *+....*+.*+.*+*+
	...
    25e3:	00 00 2a 2b 00 2a 2b 2a 2b 0c 0d 2a 2b 0c 0d 2a     ..*+.*+*+..*+..*
    25f3:	2b 0c 0d 00 00 00 0c 0d 2a 2b 0c 0d 00 00 00 00     +.......*+......
    2603:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2613:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2623:	01 01 01 01 01 01 01 01 01 01 01 01 05 00 06 01     ................
    2633:	01 01 01 01 05 00 06 05 00 06 01 01 01 01 01 01     ................
    2643:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2653:	01 01 01 01 01 05 00 00 00 00 00 00 06 01 00 00     ................
	...

000026bb <level3>:
	...
    2717:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0c 0d 27 27 27 27 27 27 27 27 27     .......'''''''''
    29b7:	27 27 27 0c 0d 00 00 00 00 00 00 00 00 00 00 00     '''.............
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0c 0d 00 00 00 00 00 00 00     ................
    2a0f:	00 00 00 00 00 0c 0d 00 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0c 0d 00 00 00 00 00 00 00 00 00 00 00 00 0c     ................
    2a6f:	0d 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0c 0d 00 00 00 00 00 00 00 00 00 00 00     ................
    2ac7:	00 0c 0d 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 00 00 00 00 00 00 00 00 00 06     ................
    2b23:	05 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bff:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
    2c0f:	00 00 00 00 00 00 00 25 26 00 00 00 00 00 00 00     .......%&.......
    2c1f:	28 28 28 15 28 00 00 00 00 00 00 00 00 00 00 00     (((.(...........
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
    2c47:	00 00 00 00 00 15 00 00 00 00 00 00 25 26 00 00     ............%&..
    2c57:	00 00 00 00 00 25 26 00 00 00 00 00 00 23 24 00     .....%&......#$.
	...
    2c77:	00 00 28 28 28 15 28 00 00 00 00 00 00 00 00 00     ..(((.(.........
    2c87:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    2ca3:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
    2ccb:	00 00 00 00 00 00 00 28 28 28 28 15 28 00 00 00     .......((((.(...
    2cdb:	00 00 00 00 00 00 25 26 00 00 00 00 00 00 00 00     ......%&........
	...
    2cff:	00 15 00 00 00 00 00 00 00 00 00 00 23 24 00 00     ............#$..
	...
    2d2b:	00 28 28 28 28 15 28 00 00 00 00 00 00 00 00 00     .((((.(.........
	...
    2d57:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 25 26     ..............%&
	...
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
    2d83:	00 00 28 28 28 28 28 15 28 00 00 00 00 00 00 00     ..(((((.(.......
	...
    2db3:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	28 28 28 28 28 15 28 00 00 00 00 29 29 00 00 00     (((((.(....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
    2e0b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 28 28 28 28 04 28 15 28 00 00 00 00 02 02 00     .((((.(.(.......
	...
    2e67:	32 15 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     2...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 28 28 28 04 04     ...2.......(((..
    2e97:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 28 28 04     .............((.
    2eef:	04 04 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 15 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f43:	00 00 00 28 04 04 04 04 28 15 28 00 02 02 02 02     ...(....(.(.....
    2f53:	02 02 00 00 00 00 00 00 00 00 00 29 29 00 00 00     ...........))...
	...
    2f6f:	00 04 04 04 04 04 04 15 00 00 00 00 00 00 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f9b:	00 00 00 04 04 04 04 04 04 04 28 15 28 00 00 00     ..........(.(...
	...
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 15 00 00 00 00 00 00     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 15 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
	...
    30ef:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3117:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 23     ..(.(..........#
    3127:	24 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     $...............
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 28 15 28 00     %&..........(.(.
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3227:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    327f:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    32bb:	00 00 00 02 03 02 00 00 00 00 00 00 00 00 00 00     ................
	...
    32d3:	00 00 00 29 00 00 00 28 28 15 28 28 00 00 00 00     ...)...((.((....
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    3317:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    332f:	02 02 02 00 00 28 28 15 28 28 00 00 00 00 00 00     .....((.((......
    333f:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 04     ...2............
    334f:	04 00 00 00 00 00 29 00 00 00 00 00 00 00 00 00     ......).........
	...
    336f:	00 00 00 29 00 29 00 00 00 00 00 00 00 00 00 00     ...).)..........
	...
    338b:	00 00 00 28 28 15 28 28 00 00 00 00 00 00 00 00     ...((.((........
	...
    33a7:	04 04 04 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    33cb:	02 03 02 03 03 02 00 00 00 00 00 00 00 00 00 00     ................
	...
    33e7:	28 28 28 15 28 28 28 00 00 00 00 00 03 02 02 03     (((.(((.........
    33f7:	02 02 00 00 00 00 00 00 00 04 04 04 04 00 00 00     ................
    3407:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
	...
    343f:	00 00 28 28 28 15 28 28 28 00 00 00 00 00 00 00     ..(((.(((.......
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
	...
    346f:	19 1a 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    349b:	28 28 28 15 28 28 28 00 00 00 00 00 00 00 00 00     (((.(((.........
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	32 00 00 23 24 00 00 15 00 00 00 00 00 00 00 00     2..#$...........
	...
    35a3:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
	...
    35bb:	00 00 28 28 28 15 15 28 28 28 00 00 00 00 00 00     ..(((..(((......
    35cb:	00 00 00 00 23 24 00 00 00 00 00 00 00 00 00 00     ....#$..........
    35db:	00 00 00 00 04 04 04 00 00 25 26 00 00 15 00 00     .........%&.....
	...
    35fb:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
    360b:	00 23 24 00 00 00 00 00 00 00 00 00 28 28 28 15     .#$.........(((.
    361b:	15 28 28 28 00 00 00 00 00 00 00 00 00 00 25 26     .(((..........%&
	...
    3637:	00 00 04 00 00 04 00 04 00 00 04 15 04 00 00 00     ................
    3647:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    3657:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 25     (.(............%
    3667:	26 00 00 00 00 00 00 00 00 28 28 28 28 15 15 28     &........((((..(
    3677:	28 28 28 00 00 00 23 24 00 00 00 00 00 00 00 00     (((...#$........
    3687:	32 00 00 00 00 00 00 00 00 00 00 00 04 00 00 04     2...............
    3697:	00 04 00 00 04 15 04 04 00 00 00 04 00 00 00 00     ................
	...
    36af:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    36c7:	00 00 00 28 28 28 28 15 15 28 28 28 28 00 00 00     ...((((..((((...
    36d7:	25 26 00 00 00 00 00 00 03 03 03 00 23 24 00 00     %&..........#$..
    36e7:	00 00 00 00 00 00 04 00 04 00 00 04 00 00 04 15     ................
    36f7:	04 00 04 00 00 04 00 00 00 00 00 00 00 00 00 00     ................
    3707:	00 00 00 00 28 15 28 00 00 00 00 00 00 00 00 00     ....(.(.........
	...
    3723:	28 28 28 28 28 15 15 28 28 28 28 28 00 00 00 00     (((((..(((((....
	...
    373b:	00 00 25 26 00 00 00 00 00 00 00 00 04 04 00 00     ..%&............
    374b:	00 04 00 00 04 15 04 00 00 04 00 04 00 00 00 00     ................
    375b:	32 00 00 00 00 00 00 00 00 00 28 15 28 00 00 00     2.........(.(...
	...
    377b:	00 00 28 28 28 28 28 15 15 28 28 28 28 28 00 00     ..(((((..(((((..
	...
    379f:	00 00 04 00 04 00 00 04 00 00 04 15 04 00 00 00     ................
    37af:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    37bf:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    37cf:	00 00 00 00 00 00 00 28 28 28 28 28 28 15 15 28     .......((((((..(
    37df:	28 28 28 28 28 00 00 00 00 00 00 00 00 00 00 00     (((((...........
	...
    37fb:	04 00 00 04 00 04 04 04 04 15 04 00 00 00 00 04     ................
    380b:	00 00 03 00 00 00 00 00 00 00 00 00 03 00 28 15     ..............(.
    381b:	28 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     (...............
    382b:	00 00 00 00 00 28 28 28 28 28 28 15 15 28 28 28     .....((((((..(((
    383b:	28 28 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (((.............
	...
    385b:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3873:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    3883:	00 00 00 00 00 00 28 28 28 28 28 28 28 15 15 28     ......(((((((..(
    3893:	28 28 28 28 28 28 00 00 00 00 00 00 00 00 00 00     ((((((..........
	...
    38b7:	00 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    38c7:	00 00 00 00 00 00 28 15 28 00 00 00 00 00 00 00     ......(.(.......
	...
    38e3:	28 28 28 28 28 28 28 15 15 28 28 28 28 28 28 28     (((((((..(((((((
	...
    390f:	00 00 00 15 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    3927:	28 15 28 00 00 00 00 00 00 00 00 00 00 00 00 00     (.(.............
    3937:	00 00 00 00 00 00 28 28 28 28 28 28 28 15 15 28     ......(((((((..(
    3947:	28 28 28 28 28 28 00 00 00 00 00 00 00 00 00 00     ((((((..........
    3957:	00 00 00 00 19 1a 00 00 00 00 00 00 00 00 00 00     ................
    3967:	00 00 00 00 00 15 00 00 00 00 00 00 00 00 00 00     ................
	...
    397f:	00 00 28 15 28 00 00 00 00 00 00 00 00 00 00 00     ..(.(...........
	...
    3997:	28 28 28 28 28 28 28 15 15 28 28 28 28 28 28 28     (((((((..(((((((
    39a7:	29 29 29 29 00 00 00 00 00 00 00 00 00 00 1b 1c     ))))............
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4043:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4053:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 00 00 00     ..??????..???...
    4063:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    4073:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4083:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4093:	3f 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 3f 00 fe     ??????...?????..
    40a3:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f 00     ???????.???????.
    40b3:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    40c3:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    40d3:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    40e3:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f     .???????.???????
    40f3:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4103:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4113:	00 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 00 00 00 fe     .?????..????....
    4123:	3f 3f 00 00 fe fe fe fe 00 00 fe fe fe fe fe fe     ??..............
    4133:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4143:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4153:	fe 00 3f 3f 3f 3f 3f 00 fe 00 3f 3f 3f 3f 00 00     ..?????...????..
    4163:	00 3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00     .???????.??????.
    4173:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4183:	3f 3f 3f 3f 00 fe fe fe 00 3f 3f 00 fe fe fe fe     ????.....??.....
    4193:	00 3f 00 fe fe fe fe fe 3f 00 fe fe fe fe fe fe     .?......?.......
    41a3:	00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    41b3:	fe fe fe fe fe fe fe 07 fe fe fe fe fe 07 07 07     ................
    41c3:	fe fe fe fe 07 07 07 07 fe fe fe 07 07 07 07 07     ................
    41d3:	fe fe 07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0     ................
    41e3:	fe fe 07 07 ff ff e0 e0 fe 07 07 07 ff ff ff ff     ................
    41f3:	07 fe fe fe fe fe fe fe 07 07 07 fe fe fe fe fe     ................
    4203:	07 07 07 07 fe fe fe fe 07 07 07 07 07 fe fe fe     ................
    4213:	07 07 07 ff ff 07 fe fe 07 07 ff ff e0 e0 fe fe     ................
    4223:	07 07 ff ff e0 e0 fe fe 07 07 ff ff ff ff 07 fe     ................
    4233:	fe fe fe fe fe fe fe c9 fe fe fe fe fe c9 c9 c9     ................
    4243:	fe fe fe fe c9 c9 c9 c9 fe fe fe c9 c9 c9 c9 c9     ................
    4253:	fe fe c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9     ................
    4263:	fe fe c9 c9 c9 ff ff c9 fe c9 c9 c9 c9 ff ff c9     ................
    4273:	c9 fe fe fe fe fe fe fe c9 c9 c9 fe fe fe fe fe     ................
    4283:	c9 c9 c9 c9 fe fe fe fe c9 c9 c9 c9 c9 fe fe fe     ................
    4293:	c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 c9 c9 c9 fe fe     ................
    42a3:	c9 ff ff c9 c9 c9 fe fe c9 ff ff c9 c9 c9 c9 fe     ................
    42b3:	fe fe fe fe fe fe 2a 2a fe fe fe fe fe fe fe 2a     ......**.......*
    42c3:	fe fe fe 2a 2a 2a 2a 2a fe fe 05 2a 2a 2a 2a 2a     ...*****...*****
    42d3:	fe fe 05 07 07 07 2a 2a fe 05 07 07 07 07 07 07     ......**........
    42e3:	05 05 07 07 07 ff ff 07 05 05 07 07 ff ff e0 e0     ................
    42f3:	2a fe fe fe fe fe fe fe 2a fe fe fe fe fe fe fe     *.......*.......
    4303:	2a 2a 2a 2a 2a fe fe fe 2a 2a 2a 2a 2a 07 fe fe     *****...*****...
    4313:	2a 2a 07 07 07 07 fe fe 07 07 07 07 07 07 07 fe     **..............
    4323:	07 07 07 ff ff 07 07 07 07 07 ff ff e0 e0 07 07     ................
    4333:	fe fe fe fe fe fe 00 00 fe fe fe fe 00 00 3f 3f     ..............??
    4343:	fe fe fe 00 3f 3f 3f 3f fe fe 00 3f 3f 3f 3f 3f     ....????...?????
    4353:	fe 00 3f 3f 3f 3f 00 3f fe 00 3f 3f 3f 3f 3f 00     ..????.?..?????.
    4363:	00 3f 3f 3f 3f 3f 00 3f 00 3f 3f 3f 3f 3f 3f 3f     .?????.?.???????
    4373:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    4383:	3f 3f 3f 3f 00 fe fe fe 3f 3f 3f 3f 3f 00 fe fe     ????....?????...
    4393:	00 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 3f 00 fe     .?????..??????..
    43a3:	00 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 3f 00     .??????.???????.
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43f3:	00 3f 3f 3f 3f 3f 3f 00 00 3f 3f 3f 3f 3f 3f 3f     .??????..???????
    4403:	fe 00 3f 3f 3f 3f 3f 3f fe 00 3f 3f 3f 3f 3f 3f     ..??????..??????
    4413:	fe fe 00 3f 3f 3f 3f 3f fe fe fe 00 3f 3f 3f 3f     ...?????....????
    4423:	fe fe fe fe 00 00 3f 3f fe fe fe fe fe fe 00 00     ......??........
	...
    443b:	3f 3f 3f 3f 3f 3f 3f 00 3f 3f 3f 3f 3f 3f 00 fe     ???????.??????..
    444b:	3f 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 00 fe fe     ??????..?????...
    445b:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    446b:	00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    447b:	00 00 fe fe fe fe fe fe 3f 3f 00 00 fe fe fe fe     ........??......
    448b:	3f 3f 3f 3f 00 00 00 fe 3f 3f 3f 3f 3f 3f 00 fe     ????....??????..
    449b:	3f 3f 3f 3f 3f 00 fe fe 3f 3f 3f 00 00 fe fe fe     ?????...???.....
    44ab:	00 00 00 fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44bb:	00 fe fe fe fe fe fe fe 3f 00 fe fe fe fe fe fe     ........?.......
    44cb:	3f 3f 00 fe fe fe fe fe 3f 3f 3f 00 fe fe fe fe     ??......???.....
    44db:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    44eb:	00 00 fe fe fe fe fe fe fe 07 07 07 07 ff ff 07     ................
    44fb:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    450b:	fe 07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07     ................
    451b:	fe 07 07 07 07 07 07 07 fe 07 07 fe 07 07 07 fe     ................
    452b:	fe 07 fe fe fe 07 07 fe 07 07 07 ff ff 07 07 fe     ................
    453b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    454b:	07 07 07 07 07 07 07 fe 07 07 07 07 07 07 07 fe     ................
    455b:	07 07 07 07 07 07 07 fe fe 07 07 07 fe 07 07 fe     ................
    456b:	fe 07 07 fe fe fe 07 fe fe c9 c9 c9 c9 c9 c9 c9     ................
    457b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9     ................
    458b:	fe c9 c9 ff ff c9 c9 ff fe c9 ff c9 c9 ff ff c9     ................
    459b:	fe c9 c9 c9 c9 c9 c9 c9 fe c9 c9 fe c9 c9 c9 fe     ................
    45ab:	fe c9 fe fe fe c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45bb:	c9 c9 c9 c9 c9 c9 c9 fe c9 c9 c9 c9 c9 c9 c9 fe     ................
    45cb:	ff c9 c9 ff ff c9 c9 fe c9 ff ff c9 c9 ff c9 fe     ................
    45db:	c9 c9 c9 c9 c9 c9 c9 fe fe c9 c9 c9 fe c9 c9 fe     ................
    45eb:	fe c9 c9 fe fe fe c9 fe 05 05 07 07 ff ff e0 e0     ................
    45fb:	fe 05 05 07 ff ff ff ff fe fe 05 07 07 ff ff 07     ................
    460b:	fe fe 05 05 07 07 07 07 fe fe fe 05 05 07 07 ff     ................
    461b:	fe fe fe 05 05 05 07 07 fe fe fe fe fe fe 05 05     ................
    462b:	fe fe fe fe fe fe 05 05 07 07 ff ff e0 e0 07 07     ................
    463b:	07 07 ff ff ff ff 07 fe 07 07 07 ff ff 07 fe fe     ................
    464b:	07 07 07 07 07 07 fe fe ff ff 07 07 07 fe fe fe     ................
    465b:	07 07 07 07 07 fe fe fe 07 07 fe fe fe fe fe fe     ................
    466b:	05 07 fe fe fe fe fe fe 00 00 00 00 00 00 00 00     ................
    467b:	3f 34 34 3f 3f 3f 3f 00 3f 3f 34 3f 3f 3f 00 fe     ?44????.??4???..
    468b:	3f 3f 3f 3f 3f 3f 00 fe 3f 3f 3f 3f 3f 00 fe fe     ??????..?????...
    469b:	3f 3f 3f 3f 00 fe fe fe 3f 3f 00 00 fe fe fe fe     ????....??......
    46ab:	00 00 fe fe fe fe fe fe                             ........

000046b3 <blob1>:
    46b3:	02 02 08 09 15 16                                   ......

000046b9 <blob0>:
    46b9:	02 02 0c 0d 0f 19                                   ......

000046bf <run1>:
    46bf:	02 02 0a 0b 17 18                                   ......

000046c5 <run0>:
    46c5:	02 02 0a 0b 17 18                                   ......

000046cb <owl1>:
    46cb:	02 02 08 09 15 16                                   ......

000046d1 <owl0>:
    46d1:	02 02 06 07 13 14                                   ......

000046d7 <pac3>:
    46d7:	02 02 0c 0d 0f 19                                   ......

000046dd <pac2>:
    46dd:	02 02 04 05 0f 12                                   ......

000046e3 <pac1>:
    46e3:	02 02 02 03 0f 11                                   ......

000046e9 <pac0>:
    46e9:	02 02 00 01 0f 10                                   ......

000046ef <uMTiles>:
    46ef:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    46ff:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    470f:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    471f:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    472f:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    473f:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    474f:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    475f:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    476f:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    477f:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    478f:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    479f:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    47af:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    47bf:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    47cf:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    47df:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    47ef:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    47ff:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    480f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    481f:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    482f:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    483f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    484f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    485f:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    486f:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    487f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    488f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    489f:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    48af:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    48bf:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    48cf:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    48df:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
	...
    48fb:	00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    490b:	00 ff ff ff 00 00 00 00 ff 06 ff 06 00 00 00 00     ................
    491b:	ff ff 06 06 00 00 00 00 ff ff 06 06 00 00 00 00     ................
    492b:	ff ff 06 06 00 00 00 00 00 00 00 00 06 00 00 00     ................
    493b:	00 00 00 00 06 06 00 00 00 00 00 00 06 06 06 00     ................
    494b:	00 00 00 00 00 06 00 06 00 00 00 00 06 00 06 06     ................
    495b:	00 00 00 00 06 00 06 06 00 00 00 00 06 00 06 06     ................
    496b:	00 00 00 00 16 16 16 06 06 06 16 27 27 27 27 16     ...........''''.
    497b:	06 16 27 37 37 37 27 16 16 16 27 37 27 27 27 27     ..'777'...'7''''
    498b:	27 27 16 27 16 16 16 27 37 27 27 16 06 06 16 27     ''.'...'7''....'
    499b:	37 37 27 27 16 16 16 27 27 27 27 06 27 27 27 16     77''...''''.'''.
    49ab:	16 16 06 16 27 16 06 06 06 06 16 16 27 16 06 06     ....'.......'...
    49bb:	16 16 27 37 37 16 16 16 27 16 27 37 27 27 27 37     ..'77...'.'7'''7
    49cb:	37 27 27 27 16 16 27 27 37 27 16 06 27 16 16 27     7'''..''7'..'..'
    49db:	27 27 16 06 16 16 16 06 16 16 16 06 16 27 16 16     ''...........'..
    49eb:	06 16 27 27 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ..''............
    49fb:	e4 e4 e4 a4 e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4     ..........S.....
    4a0b:	5b 0b 0b 0a e4 e4 a4 65 65 65 5c 01 e4 e4 65 65     [......eee\...ee
    4a1b:	65 66 5c 02 e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a     ef\..........S..
    4a2b:	53 0b 0b 0b e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02     S...........]]\.
    4a3b:	6e 5d 5d 5d 0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b     n]]]........S...
    4a4b:	13 0b 0b 0a ae 65 65 65 65 65 5c 01 77 65 65 65     .....eeeee\.weee
    4a5b:	5b 13 09 00 1d 0b 0b 0a 00 00 00 00 13 0b 01 00     [...............
    4a6b:	00 00 00 00 66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02     ....fn]..nf.]]\.
    4a7b:	6e 5d 5d 5d 0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b     n]]]........S...
    4a8b:	13 0b 0b 0a ad 65 65 65 65 65 5c 01 00 00 09 53     .....eeeee\....S
    4a9b:	5c 66 5c 02 00 00 00 00 00 0a 0b 01 00 00 00 00     \f\.............
    4aab:	00 00 01 0b e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4     ................
    4abb:	e4 e4 e4 e4 0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b     ......S.....S...
    4acb:	9c e4 e4 e4 ae 65 65 65 65 e4 e4 e4 77 65 65 65     .....eeee...weee
    4adb:	65 a5 e4 e4 1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a     e...............
    4aeb:	53 0b 0b 9c 66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02     S...fn]..n].]]\.
    4afb:	6e 5d 54 00 0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b     n]T.........S...
    4b0b:	13 0b 0a 00 ad 65 65 65 65 65 53 00 77 66 65 65     .....eeeeeS.wfee
    4b1b:	65 66 52 00 1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a     efR.............
    4b2b:	53 0b 0a 00 00 00 00 00 00 00 00 00 00 00 00 00     S...............
	...
    4b6f:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    4b7f:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    4b8f:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    4b9f:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    4baf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bbf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bcf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bdf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    4bef:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4bff:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c0f:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    4c1f:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c2f:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    4c3f:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    4c4f:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    4c5f:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    4c6f:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    4c7f:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    4c8f:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    4c9f:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    4caf:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    4cbf:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    4ccf:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    4cdf:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    4cef:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    4cff:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    4d0f:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d1f:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    4d2f:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    4d3f:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d4f:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    4d5f:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    4d6f:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    4d7f:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    4d8f:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4d9f:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    4daf:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    4dbf:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    4dcf:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    4ddf:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    4def:	00 00 00 00 ff ff 06 06 00 00 00 00 ff ff 06 06     ................
    4dff:	00 00 00 00 ff 06 ff 06 00 00 00 00 06 06 06 ff     ................
    4e0f:	00 00 00 00 00 06 06 06 00 00 00 00 00 00 06 06     ................
    4e1f:	00 00 00 00 00 00 00 06 00 00 00 00 00 00 00 00     ................
    4e2f:	06 00 06 06 00 00 00 00 06 00 06 06 00 00 00 00     ................
    4e3f:	06 00 06 06 00 00 00 00 00 ff 00 06 00 00 00 00     ................
    4e4f:	06 06 06 00 00 00 00 00 06 06 00 00 00 00 00 00     ................
    4e5f:	06 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    4e6f:	37 37 27 16 06 06 06 16 37 27 27 16 16 16 06 16     77'.....7''.....
    4e7f:	27 27 06 16 27 16 06 16 16 16 27 37 37 16 06 06     ''..'.....'77...
    4e8f:	06 16 27 37 27 16 16 16 06 16 27 27 27 16 27 27     ..'7'.....'''.''
    4e9f:	06 16 16 16 16 27 37 37 06 06 06 06 16 27 27 37     .....'77.....''7
    4eaf:	27 37 27 16 06 16 27 37 27 37 27 16 06 16 27 27     '7'...'7'7'...''
    4ebf:	16 27 16 16 06 16 16 16 16 16 16 06 16 16 06 06     .'..............
    4ecf:	16 27 37 37 37 16 06 06 16 16 37 27 27 16 06 06     .'777.....7''...
    4edf:	27 16 27 27 16 16 06 06 27 06 16 16 16 06 06 06     '.''....'.......
    4eef:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    4eff:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    4f0f:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    4f1f:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    4f2f:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    4f73:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    4faf:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    4fbf:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    4fcf:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    4fdf:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    4fef:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    4fff:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    500f:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    501f:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    502f:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    503f:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    504f:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    505f:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
	...
    507b:	00 00 07 00 00 00 00 00 00 07 00 00 00 00 00 00     ................
	...
    5093:	00 00 00 2f 00 00 00 00 00 00 00 00 00 00 00 00     .../............
    50a3:	07 2f 00 00 00 00 00 00 00 07 00 00 00 00 00 00     ./..............
    50b3:	00 00 00 00 00 00 ff 00 00 2f 00 00 00 00 00 00     ........./......
    50c3:	ff 00 00 00 00 07 00 00 00 00 00 00 00 00 00 00     ................
    50d3:	00 00 2f 00 2f 00 00 2f 00 00 00 00 00 00 07 00     .././../........
    50e3:	00 00 00 2f 00 2f 07 00 00 00 07 00 00 00 07 00     ..././..........
    50f3:	00 00 00 00 00 07 00 00 00 00 00 00 00 00 07 00     ................
    5103:	00 00 00 00 2f 00 00 2f 00 00 07 00 00 00 00 00     ..../../........
    5113:	00 07 00 00 00 00 07 00 00 2f 07 00 00 07 07 00     ........./......
    5123:	00 2f 2f 07 00 07 2f 07 00 07 2f 2f 00 00 07 00     .//.../...//....
    5133:	00 00 07 00 00 07 00 00 00 00 2f 00 00 00 00 00     ........../.....
	...
    514f:	00 00 00 07 00 00 00 07 00 00 07 00 00 00 00 00     ................
    515f:	00 00 07 2f 00 00 00 00 07 00 2f 07 00 00 00 2f     .../....../..../
    516f:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    517f:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    518f:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    519f:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    51af:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    51bf:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    51cf:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    51df:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    51ef:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    51ff:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    520f:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    521f:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    522f:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    523f:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    524f:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    525f:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    526f:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    527f:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    528f:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    529f:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    52af:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    52bf:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    52cf:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    52df:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    52ef:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    52ff:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    530f:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    531f:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    532f:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    533f:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    534f:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    535f:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    536f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    537f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    538f:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    539f:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    53af:	e4 00 00 00 00 00 00 e4 00 00 ff 19 ff ad 00 00     ................
    53bf:	00 ff ff 19 ff ad ad 00 00 ff 1a 1a ad ad ad 19     ................
    53cf:	00 19 1a ad ad ad ad 19 00 ff ff ad ad 1a 1a 19     ................
    53df:	00 ff ad ad 19 19 ad ad 00 ad ad ad 19 ad ad 00     ................
    53ef:	e4 e4 00 00 00 00 00 e4 e4 00 00 ff ff 19 00 00     ................
    53ff:	00 00 ff ff ad 19 ad 00 00 00 ff ad 1a 1a ad 00     ................
    540f:	00 00 19 19 1a ad ad 00 00 00 ad ad ad ad 00 00     ................
    541f:	00 00 00 00 00 00 00 e4 00 19 ff 00 00 ff 00 00     ................
    542f:	e4 00 1d 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00     ................
    543f:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    544f:	00 1d 1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00     ................
    545f:	e4 00 00 00 00 00 00 1d 00 00 1d 1d 1d 1c 00 1d     ................
    546f:	1d 1d 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    547f:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 00 00     ................
    548f:	1d 1c 1c 1c 00 00 00 00 00 00 00 00 00 1d 1d 00     ................
    549f:	1d 1d 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 00 00 1d     ................
    54af:	00 1d 1d 1c 1c 1c 00 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    54bf:	1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    54cf:	1d 1c 1c 1c 1c 1c 1c 00 1c 1c 1c 1c 1c 1c 00 00     ................
    54df:	00 00 00 00 1c 00 00 1d 1d 1c 1c 00 00 00 1d 1c     ................
    54ef:	1d 1d 1d 1d 1c 1c 00 00 1d 1d 1d 1c 1c 1c 1c 00     ................
    54ff:	1d 1c 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 00 00     ................
    550f:	00 00 00 00 00 00 00 e4 00 1d 1d 1d 1d 1c 00 00     ................
    551f:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    552f:	00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00 1d     ................
    553f:	00 00 00 00 00 00 00 3f 00 00 00 00 00 00 3f 3f     .......?......??
    554f:	00 00 00 00 00 3f 3f 3f 00 00 00 00 00 3f 00 3f     .....???.....?.?
    555f:	00 00 00 00 00 3f 00 3f 00 00 00 00 00 3f 00 3f     .....?.?.....?.?
    556f:	1d 00 00 00 00 00 00 00 1d 00 00 00 00 00 00 00     ................
    557f:	3f 00 00 00 00 00 00 00 3f 3f 00 00 00 00 00 00     ?.......??......
    558f:	3f 3f 3f 00 00 00 00 00 3f 00 3f 00 00 00 00 00     ???.....?.?.....
    559f:	3f 00 3f 00 00 00 00 00 3f 00 3f 00 00 00 00 00     ?.?.....?.?.....
    55af:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    55bf:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    55cf:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    55df:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    55ef:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    55ff:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    560f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    561f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    562f:	00 00 00 00 07 00 00 00 00 00 00 07 2f 00 00 07     ............/...
    563f:	00 00 07 07 00 00 00 00 00 2f 07 07 00 00 00 07     ........./......
    564f:	00 07 07 07 07 00 00 07 00 00 2f ff 07 00 07 2f     ........../..../
    565f:	00 00 2f 2f ff 2f 07 ff 00 00 00 2f ff 07 07 ff     ..//./...../....
    566f:	07 07 00 00 00 07 07 00 2f 07 00 00 00 07 00 00     ......../.......
    567f:	2f 2f 07 00 07 07 00 00 2f 2f 07 2f 07 07 00 00     //......//./....
    568f:	2f ff 07 07 07 00 00 00 ff 07 07 07 2f 07 00 00     /.........../...
    569f:	2f 07 2f ff 2f 07 00 00 2f 07 ff ff 2f 00 00 00     /././.../.../...
    56af:	00 00 07 2f 07 07 ff 2f 07 00 00 07 2f 2f 2f ff     .../.../....///.
    56bf:	00 2f 00 07 2f 2f 2f ff 00 00 07 07 2f 2f ff ff     ./..///.....//..
    56cf:	00 00 07 ff 2f ff ff ff 07 00 07 2f ff ff ff 2f     ..../....../.../
    56df:	00 2f 00 07 ff ff 2f 2f 00 07 07 ff ff ff 2f 2f     ./....//......//
    56ef:	07 07 2f 07 07 00 00 00 2f 2f 2f 2f 07 00 00 00     ../.....////....
    56ff:	ff ff 2f 2f 07 00 00 00 ff ff 2f 2f 07 00 00 00     ..//......//....
    570f:	ff ff ff 2f 07 00 07 00 ff ff ff 2f 07 07 07 00     .../......./....
    571f:	2f 2f ff ff ff 2f 00 00 2f 2f 2f ff 2f 2f 07 00     //.../..///.//..
    572f:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    573f:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    574f:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    575f:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    576f:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    577f:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    578f:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    579f:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    57af:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    57bf:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    57cf:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    57df:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    57ef:	e4 e4 e4 e4 00 13 13 01 e4 e4 e4 e4 00 13 01 1c     ................
    57ff:	e4 e4 e4 e4 00 13 01 1c e4 e4 e4 e4 00 13 01 1c     ................
    580f:	e4 e4 e4 e4 00 13 01 1c e4 e4 e4 e4 00 13 13 01     ................
    581f:	e4 e4 e4 e4 00 13 13 13 e4 e4 e4 e4 00 13 13 13     ................
    582f:	1c 13 13 01 01 1c 13 1c 1c 13 13 01 1c 1c 13 1c     ................
    583f:	13 13 13 01 1c 13 13 1c 13 13 13 13 1c 13 13 1c     ................
    584f:	1c 13 13 13 13 13 13 01 1c 13 13 13 13 13 13 01     ................
    585f:	13 13 13 13 13 13 13 01 13 13 13 13 1c 13 13 01     ................
    586f:	1c 13 1c 01 01 13 13 1c 13 13 1c 1c 01 13 13 1c     ................
    587f:	13 13 13 1c 13 13 13 1c 1c 13 13 13 13 13 13 13     ................
    588f:	1c 13 13 13 13 13 13 13 1c 13 13 1c 01 13 13 13     ................
    589f:	1c 13 1c 1c 01 13 13 13 1c 13 1c 01 13 13 1c 13     ................
    58af:	01 13 13 00 e4 e4 e4 e4 01 01 13 00 e4 e4 e4 e4     ................
    58bf:	1c 01 13 00 e4 e4 e4 e4 1c 01 13 00 e4 e4 e4 e4     ................
    58cf:	1c 1c 13 00 e4 e4 e4 e4 13 1c 13 00 e4 e4 e4 e4     ................
    58df:	13 1c 13 00 e4 e4 e4 e4 13 13 13 00 e4 e4 e4 e4     ................
    58ef:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    58ff:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    590f:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    591f:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    592f:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    593f:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    594f:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    595f:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    596f:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    597f:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    598f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    599f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    59af:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    59bf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    59cf:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    59df:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    59ef:	00 00 ad ad 19 ad 00 00 e4 00 00 00 00 00 00 00     ................
    59ff:	e4 00 ff ff 19 ad ad ad 00 00 ff ad 19 1a ad ad     ................
    5a0f:	00 19 1a ad ad 1a ad ad 00 ff 1a ad ad 1a 19 00     ................
    5a1f:	00 00 1a 19 ad ad ad 00 e4 00 00 00 00 00 00 00     ................
    5a2f:	ff 1a 1a ad 00 ad 19 00 ad ad 1a ad 00 1a ad 00     ................
    5a3f:	00 ad 19 00 00 19 00 00 00 00 00 00 00 00 00 e4     ................
    5a4f:	00 00 ff 19 ff ad 00 00 00 ff 1a 1a ad ad ad 00     ................
    5a5f:	00 00 19 ad ad ad 00 00 e4 00 00 00 00 00 00 e4     ................
    5a6f:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    5a7f:	00 1d 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 1c 00     ................
    5a8f:	00 00 1c 1c 1c 1c 1c 00 e4 00 00 00 00 00 1c 00     ................
    5a9f:	00 00 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00 1d     ................
    5aaf:	1c 1c 1c 1c 1c 00 1d 1d 00 00 00 00 00 00 1d 1c     ................
    5abf:	1d 1d 1c 1c 00 1d 1d 1c 1d 1c 1c 1c 00 1d 1c 1c     ................
    5acf:	1c 00 00 00 00 00 00 1c 00 00 1d 1c 1c 1c 00 00     ................
    5adf:	00 1d 1d 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00     ................
    5aef:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1c 1c 1c     ................
    5aff:	1c 1c 1c 1c 00 00 00 00 1c 1c 1c 1c 00 00 1d 1c     ................
    5b0f:	1c 1c 1c 1c 00 1d 1d 1c 00 00 00 00 00 00 1c 1c     ................
    5b1f:	00 1d 1d 1c 1c 00 00 00 00 1d 1d 1c 1c 1c 00 1d     ................
    5b2f:	00 1d 1c 1c 1c 1c 1c 00 00 1c 1c 1c 1c 1c 1c 00     ................
    5b3f:	00 00 1c 1c 1c 1c 1c 00 1c 00 00 00 00 00 00 00     ................
    5b4f:	1d 00 00 1d 1c 1c 00 e4 00 00 1d 1d 1c 1c 00 00     ................
    5b5f:	00 1d 1d 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00     ................
    5b6f:	00 00 00 00 00 3f 3f 3f 00 00 00 00 00 3f 3f 3f     .....???.....???
    5b7f:	00 00 00 00 00 3f 3f 3f 00 00 00 00 00 3f 3f 3f     .....???.....???
    5b8f:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    5b9f:	00 00 3f 3f 3f 3f 00 00 00 00 00 00 00 00 00 00     ..????..........
    5baf:	3f 3f 3f 00 00 00 00 00 3f 3f 3f 00 00 00 00 00     ???.....???.....
    5bbf:	3f 3f 3f 00 00 00 00 00 3f 3f 3f 00 00 00 00 00     ???.....???.....
    5bcf:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    5bdf:	00 00 3f 3f 3f 3f 00 00 00 00 00 00 00 00 00 00     ..????..........
    5bef:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5bff:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    5c0f:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    5c1f:	e8 e8 e8 e8 e8 e8 9a 9a f5 f5 e8 f5 f5 f5 e8 e8     ................
    5c2f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5c3f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    5c4f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    5c5f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 f5 f5     ................
    5c6f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c7f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c8f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5c9f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5caf:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5cbf:	00 00 00 01 01 00 00 03 03 00 00 00 03 00 00 00     ................
    5ccf:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5cdf:	01 00 00 01 00 00 00 01 01 00 00 00 01 00 00 00     ................
    5cef:	ff ff ad 00 f6 ff ff ff ff ff ad 00 f6 ff ff ff     ................
    5cff:	00 00 00 01 01 00 00 01 01 00 00 00 ad 00 00 00     ................
    5d0f:	ad ff ff ff ff ff ad 00 ad ff ff ff ff ff ad 00     ................
    5d1f:	01 00 00 01 00 00 00 00 01 00 00 00 01 00 00 00     ................
    5d2f:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    5d3f:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    5d4f:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    5d5f:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5d6f:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    5d7f:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    5d8f:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    5d9f:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    5daf:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5dbf:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5dcf:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 1d 6e 0a     nn.]wwn.nn]nn.n.
    5ddf:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5def:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5dff:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5e0f:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    5e1f:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5e2f:	e4 e4 e4 e4 00 13 13 13 e4 e4 e4 e4 00 13 13 13     ................
    5e3f:	e4 e4 e4 e4 00 13 13 13 e4 e4 e4 e4 00 13 13 01     ................
    5e4f:	e4 e4 e4 e4 00 13 13 01 e4 e4 e4 e4 00 13 13 01     ................
    5e5f:	e4 e4 e4 e4 00 13 13 01 e4 e4 e4 e4 00 13 13 01     ................
    5e6f:	01 1c 13 13 1c 13 13 1c 01 1c 13 13 1c 1c 13 1c     ................
    5e7f:	01 1c 13 13 13 1c 13 1c 1c 1c 13 13 13 1c 13 1c     ................
    5e8f:	1c 1c 13 13 13 1c 13 01 1c 13 13 13 1c 1c 13 01     ................
    5e9f:	1c 13 13 01 1c 13 13 01 1c 13 13 01 1c 13 01 01     ................
    5eaf:	1c 13 1c 01 01 13 1c 1c 13 13 1c 1c 01 13 13 1c     ................
    5ebf:	13 13 13 1c 01 13 13 1c 1c 13 13 1c 13 13 1c 1c     ................
    5ecf:	1c 13 1c 1c 13 13 1c 01 1c 13 1c 01 13 13 1c 1c     ................
    5edf:	1c 13 1c 01 13 13 13 1c 1c 13 1c 01 13 13 13 1c     ................
    5eef:	01 13 13 00 e4 e4 e4 e4 01 13 13 00 e4 e4 e4 e4     ................
    5eff:	01 13 13 00 e4 e4 e4 e4 01 13 13 00 e4 e4 e4 e4     ................
    5f0f:	13 13 13 00 e4 e4 e4 e4 01 13 13 00 e4 e4 e4 e4     ................
    5f1f:	01 13 13 00 e4 e4 e4 e4 01 13 13 00 e4 e4 e4 e4     ................
    5f2f:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    5f3f:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    5f4f:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    5f5f:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    5f6f:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5f7f:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    5f8f:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    5f9f:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    5faf:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5fbf:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5fcf:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5fdf:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    5fef:	02 02 02 02 02 02 02 02 02 ff ff ad ad ad ad 02     ................
    5fff:	00 02 ff ff ad ad 02 00 00 00 02 ff ad 02 00 00     ................
    600f:	00 00 00 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    602f:	00 02 02 02 02 02 02 00 00 02 ff ad ad ad 02 00     ................
    603f:	00 00 02 ff ff 02 00 00 00 00 00 02 02 00 00 00     ................
	...
    606f:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 00 ff     ................
    607f:	e4 e4 e4 e4 e4 00 ff ff e4 e4 e4 e4 00 ff ff ff     ................
    608f:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 ff ff 3a 3a     .....:.:......::
    609f:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    60af:	00 e4 e4 e4 e4 e4 e4 e4 3a 00 e4 e4 e4 e4 e4 e4     ........:.......
    60bf:	3a 3a 00 e4 e4 e4 e4 e4 3a 3a 3a 00 e4 e4 e4 e4     ::......:::.....
    60cf:	00 3a 00 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     .:.:....:.::....
    60df:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    60ef:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    60ff:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    610f:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    611f:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    612f:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    613f:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    614f:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    615f:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    616f:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    617f:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    618f:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    619f:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    61af:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    61bf:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    61cf:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    61df:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    61ef:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    61ff:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    620f:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    621f:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    622f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    623f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    624f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    625f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    626f:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    627f:	00 00 00 01 01 00 00 01 00 00 00 00 01 00 00 00     ................
    628f:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    629f:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
    62af:	ff ff ad 01 ad ff ff ff ff ff ad 00 ad ff ff ff     ................
    62bf:	00 00 00 01 01 00 00 01 01 00 00 00 01 00 00 00     ................
    62cf:	ad ff ff ff ff ff ad 01 ad ff ff ff ff ff ad 00     ................
    62df:	01 ad ad ad ad ad 01 00 00 00 00 00 00 00 00 00     ................
	...
    62f7:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    6307:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    6317:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6327:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    6337:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6347:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6357:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6367:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    6377:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    6387:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6397:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63a7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    63b7:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63c7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63d7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63e7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 00 13 13 01     ................
    63f7:	e4 e4 e4 e4 00 13 01 01 e4 e4 e4 00 00 13 01 1c     ................
    6407:	e4 e4 e4 00 13 13 01 1c e4 e4 00 00 13 01 01 1c     ................
    6417:	e4 00 00 13 13 01 1c 1c 00 00 13 13 13 01 1c 01     ................
    6427:	00 13 13 13 13 01 1c 01 1c 13 13 01 1c 13 01 1c     ................
    6437:	1c 13 13 01 1c 13 13 1c 1c 13 13 13 1c 1c 13 1c     ................
    6447:	01 13 13 13 1c 1c 13 1c 01 13 13 1c 1c 13 13 1c     ................
    6457:	01 13 13 1c 13 13 13 1c 01 13 13 1c 13 13 1c 1c     ................
    6467:	13 13 1c 1c 13 13 1c 13 1c 13 1c 01 13 13 13 1c     ................
    6477:	13 13 1c 01 01 13 13 13 13 13 1c 1c 01 13 13 01     ................
    6487:	13 13 13 1c 13 13 13 01 13 13 13 1c 1c 13 13 01     ................
    6497:	13 1c 13 13 1c 1c 13 01 13 1c 1c 13 13 1c 1c 13     ................
    64a7:	13 13 1c 1c 13 13 13 13 1c 01 13 00 e4 e4 e4 e4     ................
    64b7:	1c 01 13 00 e4 e4 e4 e4 1c 01 13 00 00 e4 e4 e4     ................
    64c7:	1c 1c 01 13 00 e4 e4 e4 01 1c 01 13 00 00 e4 e4     ................
    64d7:	01 1c 01 13 13 00 00 e4 01 1c 1c 01 1c 1c 00 00     ................
    64e7:	01 01 1c 01 13 1c 1c 00 e4 e4 ad b6 f6 f6 f6 f6     ................
    64f7:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    6507:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6517:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6527:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6537:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    6547:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6557:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6567:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6577:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    6587:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6597:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    65a7:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    65b7:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    65c7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    65d7:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    65e7:	e4 e4 e4 e4 e4 e4 e4 e4 00 02 02 02 00 02 02 02     ................
    65f7:	00 02 ff 02 00 02 ad 02 00 00 02 00 00 00 02 00     ................
	...
    662f:	00 02 02 00 00 02 02 00 00 ad 00 00 00 ad 00 00     ................
	...
    666f:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    667f:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 3a 3a 3a ff     .....:.:....:::.
    668f:	e4 e4 e4 e4 00 3a 3a 3a e4 e4 e4 e4 e4 00 3a 3a     .....:::......::
    669f:	e4 e4 e4 e4 e4 e4 00 3a e4 e4 e4 e4 e4 e4 e4 00     .......:........
    66af:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    66bf:	3a 00 3a 3a 00 e4 e4 e4 00 ff 00 3a 00 e4 e4 e4     :.::.......:....
    66cf:	3a 3a 3a 00 e4 e4 e4 e4 3a 3a 00 e4 e4 e4 e4 e4     :::.....::......
    66df:	3a 00 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     :...............
    66ef:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    66ff:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    670f:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    671f:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    672f:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    673f:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    674f:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    675f:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    676f:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    677f:	e8 e8 9a 9a 9a 9a 9a 9a e8 e8 e8 e8 e8 e8 9a 9a     ................
    678f:	9a 9a e8 f5 f5 f5 e8 e8 9a 9a 9a 9a 9a 9a f5 f5     ................
    679f:	e8 e8 f5 9a 9a 9a 9a 9a f5 f5 e8 e8 e8 e8 f5 f5     ................
    67af:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    67bf:	9a 9a 9a 9a 9a 9a e8 e8 9a 9a e8 e8 e8 e8 e8 e8     ................
    67cf:	e8 e8 f5 f5 f5 e8 9a 9a f5 f5 9a 9a 9a 9a 9a 9a     ................
    67df:	9a 9a 9a 9a 9a f5 e8 e8 f5 f5 e8 e8 e8 e8 f5 f5     ................
    67ef:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    67ff:	9a 9a 9a 9a 9a 9a f5 f5 e8 e8 9a 9a 9a 9a 9a 9a     ................
    680f:	e8 e8 e8 e8 e8 e8 9a 9a 9a 9a e8 f5 f5 f5 e8 e8     ................
    681f:	f5 f5 9a 9a 9a 9a f5 f5 e8 e8 f5 f5 f5 f5 f5 f5     ................
    682f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    683f:	f5 f5 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a 9a e8 e8     ................
    684f:	9a 9a e8 e8 e8 e8 e8 e8 e8 e8 f5 f5 f5 e8 9a 9a     ................
    685f:	f5 f5 9a 9a 9a 9a f5 f5 f5 f5 f5 f5 f5 f5 e8 e8     ................
    686f:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    687f:	00 ff 00 00 ff ff 00 00 00 ff 00 ff 00 ff 00 00     ................
    688f:	00 ff ff 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    689f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    68af:	00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00 00     ................
    68bf:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    68cf:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    68df:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    68ef:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    68ff:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
    690f:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    691f:	00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    692f:	00 ff ff ff ff ff 00 00 00 00 00 00 ff 00 00 00     ................
    693f:	00 00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00     ................
    694f:	00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    695f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    696f:	00 00 00 00 ff 00 00 00 00 00 00 ff ff 00 00 00     ................
    697f:	00 00 ff 00 ff 00 00 00 00 ff 00 00 ff 00 00 00     ................
    698f:	00 ff ff ff ff ff 00 00 00 00 00 00 ff 00 00 00     ................
    699f:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    69af:	00 ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 00     ................
    69bf:	00 ff ff ff ff 00 00 00 00 00 00 00 00 ff 00 00     ................
    69cf:	00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    69df:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    69ef:	00 00 00 ff ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    69ff:	00 ff 00 00 00 00 00 00 00 ff ff ff ff 00 00 00     ................
    6a0f:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6a1f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6a2f:	00 ff ff ff ff ff 00 00 00 00 00 00 00 ff 00 00     ................
    6a3f:	00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00     ................
    6a4f:	00 00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00     ................
    6a5f:	00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6a6f:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    6a7f:	00 ff 00 00 00 ff 00 00 00 00 ff ff ff 00 00 00     ................
    6a8f:	00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6a9f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6aaf:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    6abf:	00 ff 00 00 00 ff 00 00 00 00 ff ff ff ff 00 00     ................
    6acf:	00 00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00     ................
    6adf:	00 00 ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    6b07:	00 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    6b2f:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 ff     ................
    6b3f:	00 ff 00 00 00 00 00 ff 00 00 ff ff ff 00 00 ff     ................
    6b4f:	00 00 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    6b5f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6b6f:	ff ff ff 00 00 00 ff ff 00 00 00 ff 00 ff 00 00     ................
    6b7f:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6b8f:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00 00     ................
    6b9f:	ff ff ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
    6baf:	ff 00 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff     ................
    6bbf:	00 ff 00 ff 00 00 00 ff 00 ff 00 ff ff ff ff 00     ................
    6bcf:	00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00 00 ff 00     ................
    6bdf:	ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    6bef:	00 ff ff ff ff 00 00 00 00 ff 00 00 00 00 00 00     ................
    6bff:	00 ff 00 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
    6c0f:	00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
    6c1f:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6c2f:	ff ff ff ff 00 00 00 ff ff 00 00 00 ff 00 ff 00     ................
    6c3f:	ff 00 00 00 ff 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    6c4f:	ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    6c5f:	ff ff ff ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    6c6f:	ff ff 00 00 ff ff 00 00 00 00 ff 00 ff ff 00 00     ................
    6c7f:	00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    6c8f:	00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00 00 ff     ................
    6c9f:	ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    6caf:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6cbf:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6ccf:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    6cdf:	ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6cef:	00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00 00     ................
    6cff:	ff 00 00 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
    6d0f:	00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00     ................
    6d1f:	00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    6d2f:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6d3f:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6d4f:	00 00 00 00 00 ff 00 00 00 00 00 00 00 ff 00 00     ................
    6d5f:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
    6d6f:	00 00 ff ff ff ff 00 ff 00 00 ff 00 00 00 00 ff     ................
    6d7f:	00 00 ff 00 00 00 00 ff 00 00 ff ff ff 00 00 00     ................
    6d8f:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6d9f:	ff 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6daf:	00 00 00 ff 00 ff ff ff 00 00 00 ff 00 ff 00 00     ................
    6dbf:	00 00 00 ff 00 ff 00 00 ff 00 ff 00 00 ff ff ff     ................
    6dcf:	ff 00 ff 00 00 ff 00 00 00 ff 00 00 00 ff 00 00     ................
    6ddf:	00 ff 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
    6def:	ff 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6dff:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6e0f:	00 00 ff 00 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    6e1f:	ff 00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    6e2f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6e3f:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    6e4f:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    6e5f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e6f:	e4 ff ff ff e4 e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    6e7f:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 ff ff e4 ff ff     ................
    6e8f:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6e9f:	e4 ff ff ff e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6eaf:	ff ff e4 ff ff ff ff ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6ebf:	e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    6ecf:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    6edf:	ff ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6eef:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6eff:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    6f0f:	e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 e4     ................
    6f1f:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f2f:	ff e4 e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4     ................
    6f3f:	e4 ff e4 ff e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    6f4f:	e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4     ................
    6f5f:	e4 ff e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6f6f:	e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff e4     ................
    6f7f:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    6f8f:	ff ff ff ff ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    6f9f:	ff e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    6faf:	ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    6fbf:	e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    6fcf:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    6fdf:	ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6fef:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    6fff:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    700f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    701f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    702f:	ff 00 00 00 00 ff 00 ff ff 00 00 00 00 ff 00 ff     ................
    703f:	ff 00 00 00 00 ff 00 ff ff 00 00 00 00 ff 00 00     ................
    704f:	ff 00 00 00 00 ff 00 00 ff 00 00 00 00 ff 00 00     ................
    705f:	ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    706f:	ff 00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00     ................
    707f:	00 00 ff 00 00 00 00 00 00 00 00 ff ff ff 00 00     ................
    708f:	00 00 00 00 00 00 ff 00 00 00 ff 00 00 00 ff 00     ................
    709f:	ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    70af:	00 ff ff ff ff ff 00 ff 00 00 00 ff 00 00 00 ff     ................
    70bf:	00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff     ................
    70cf:	00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff     ................
    70df:	00 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00     ................
    70ef:	00 ff 00 00 00 ff 00 ff 00 ff ff 00 ff ff 00 ff     ................
    70ff:	00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    710f:	00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff     ................
    711f:	00 ff 00 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
    712f:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    7147:	ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    715f:	ff ff ff 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    716f:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    717f:	e4 ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 ff     ................
    718f:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    719f:	e4 ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    71af:	ff ff ff e4 e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4     ................
    71bf:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff ff     ................
    71cf:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    71df:	e4 e4 e4 ff e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    71ef:	ff e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    71ff:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    720f:	e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    721f:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    722f:	e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    723f:	ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    724f:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    725f:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    726f:	e4 e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4     ................
    727f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    728f:	e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    729f:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    72af:	ff ff ff ff ff e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    72bf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    72cf:	e4 e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 ff e4 e4     ................
    72df:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    72ef:	e4 e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff     ................
    72ff:	ff e4 e4 ff e4 e4 e4 ff ff e4 e4 ff ff ff ff e4     ................
    730f:	ff ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff e4     ................
    731f:	e4 ff e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    732f:	e4 ff ff ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    733f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    734f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    735f:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
	...
    737f:	00 00 00 14 00 00 00 00 00 00 00 0f 00 00 00 00     ................
    738f:	00 00 00 0f 00 00 00 00 00 00 00 0f 00 00 00 00     ................
    739f:	00 00 0f 0f 0f 00 00 00 00 00 0f 0c 0f 00 00 00     ................
    73af:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73bf:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    73cf:	e4 f6 f6 e4 e4 e4 e4 e4 e4 ad ad f6 e4 e4 e4 e4     ................
    73df:	e4 ad a4 ad f6 e4 e4 e4 e4 ad a4 a4 ad f6 e4 e4     ................
    73ef:	e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    73ff:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4 ff     ................
    740f:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    741f:	e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    742f:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff e4 ff     ................
    743f:	e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 e4 e4     ................
    744f:	ff ff ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    745f:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    746f:	ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    747f:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff e4 e4 e4     ................
    748f:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    749f:	ff e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    74af:	e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff     ................
    74bf:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    74cf:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    74df:	e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    74ef:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    74ff:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    750f:	e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    751f:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    752f:	ff ff ff e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4     ................
    753f:	e4 e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff ff ff ff     ................
    754f:	e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff     ................
    755f:	ff ff ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    756f:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    757f:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    758f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    759f:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    75af:	ff ff ff ff ff e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    75bf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    75cf:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    75df:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    75ef:	ff e4 e4 e4 ff e4 ff ff ff ff e4 ff ff e4 ff e4     ................
    75ff:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    760f:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    761f:	ff e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    762f:	ff ff e4 ff e4 e4 ff ff e4 e4 e4 ff e4 ff e4 e4     ................
    763f:	e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff ff     ................
    764f:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    765f:	ff ff e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    766f:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    767f:	e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    768f:	e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    769f:	ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    76af:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    76bf:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    76cf:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    76df:	ff ff e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    76ef:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    76ff:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    770f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    771f:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    772f:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 ff 00 ff     ................
    773f:	00 ff 00 00 00 00 00 ff 00 ff 00 00 00 00 00 ff     ................
    774f:	00 ff 00 00 00 00 00 ff 00 ff 00 00 00 ff 00 ff     ................
    775f:	00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    776f:	ff ff ff 00 00 ff ff 00 00 00 00 ff 00 ff ff 00     ................
    777f:	00 00 00 ff 00 ff 00 ff 00 00 00 ff 00 ff 00 ff     ................
    778f:	00 00 00 ff 00 ff 00 00 00 00 00 ff 00 ff 00 00     ................
    779f:	ff ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    77af:	00 ff 00 00 ff ff ff 00 00 ff 00 ff 00 00 00 ff     ................
    77bf:	00 ff 00 ff 00 00 00 00 00 ff 00 ff 00 00 ff ff     ................
    77cf:	ff ff 00 ff 00 00 00 ff ff ff 00 ff 00 00 00 ff     ................
    77df:	00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00     ................
    77ef:	00 ff ff ff ff 00 00 00 00 ff 00 00 00 ff 00 00     ................
    77ff:	00 ff 00 00 00 ff 00 00 00 ff ff ff ff 00 00 00     ................
    780f:	00 ff 00 ff 00 00 00 ff 00 ff 00 00 ff 00 00 ff     ................
    781f:	00 ff 00 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
    782f:	00 ff 00 00 ff ff ff ff 00 ff 00 00 00 00 ff 00     ................
    783f:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    784f:	ff ff ff ff 00 00 ff 00 00 00 00 ff 00 00 ff 00     ................
    785f:	00 00 00 ff 00 00 ff 00 00 00 00 00 00 00 00 00     ................
    786f:	ff 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00     ................
    787f:	00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00     ................
    788f:	00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00     ................
    789f:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    78af:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 ff     ................
    78bf:	ff 00 00 00 00 00 ff 00 ff 00 00 00 00 00 ff 00     ................
    78cf:	ff 00 00 00 00 ff ff ff ff 00 00 00 00 ff 00 00     ................
    78df:	ff ff ff ff 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    78ef:	00 00 ff ff ff ff ff 00 00 00 00 00 ff 00 00 00     ................
    78ff:	ff 00 00 00 ff 00 00 00 ff 00 00 00 ff 00 00 00     ................
    790f:	ff ff 00 00 ff 00 00 00 00 ff 00 00 ff 00 00 00     ................
    791f:	00 ff 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    792f:	ff 00 00 ff ff ff 00 00 ff 00 ff 00 00 00 ff 00     ................
    793f:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    794f:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 00 00 ff 00     ................
    795f:	ff 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
    796f:	ff ff 00 00 ff 00 00 ff ff ff 00 00 ff 00 ff 00     ................
    797f:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 ff     ................
    798f:	ff 00 00 ff ff 00 00 00 ff 00 00 ff ff 00 ff 00     ................
    799f:	ff 00 00 00 ff 00 00 ff 00 00 00 00 00 00 00 00     ................
    79af:	ff ff 00 00 ff 00 00 00 00 00 ff 00 ff 00 00 00     ................
    79bf:	00 00 00 00 ff 00 00 00 ff ff 00 00 ff 00 00 00     ................
    79cf:	00 00 ff 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    79df:	ff ff 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    79ef:	00 00 0f 0c 0f 00 00 00 00 00 0f 0c 0f 00 00 00     ................
    79ff:	00 00 0f 0c 0f 0f 00 00 00 00 0f 0c 0c 0f 00 00     ................
    7a0f:	00 0f 0f 0c 0c 0f 0f 00 00 0f 0c 0c 0c 0c 0f 00     ................
    7a1f:	00 0f 0c 0c 0c 0c 0f 00 0f 0f 0c 0c 0c 0c 0f 0f     ................
    7a2f:	e4 ad a4 a4 a4 ad f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7a3f:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7a4f:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    7a5f:	e4 ad a4 a4 a4 a4 f6 e4 00 00 00 00 00 00 00 00     ................

00007a6f <spike1>:
    7a6f:	01 02 b3 cd                                         ....

00007a73 <spike0>:
    7a73:	01 02 b2 cc                                         ....

00007a77 <congra0>:
    7a77:	0b 01 c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb              .............

00007a84 <timeup0>:
    7a84:	06 01 bb bc bd be bf c0                             ........

00007a8c <over0>:
    7a8c:	07 01 b4 b5 b6 b7 b8 b9 ba                          .........

00007a95 <press0>:
    7a95:	08 01 aa ab ac ad ae af b0 b1                       ..........

00007a9f <time0>:
    7a9f:	03 01 a7 a8 a9                                      .....

00007aa4 <live0>:
    7aa4:	03 01 a5 9b a6                                      .....

00007aa9 <get0>:
    7aa9:	07 01 9e 9f a0 a1 a2 a3 a4                          .........

00007ab2 <x0>:
    7ab2:	01 01 9d                                            ...

00007ab5 <level0>:
    7ab5:	04 01 99 9a 9b 9c                                   ......

00007abb <bonus0>:
    7abb:	04 01 95 96 97 98                                   ......

00007ac1 <score0>:
    7ac1:	04 01 91 92 93 94                                   ......

00007ac7 <nm>:
    7ac7:	01 01 90                                            ...

00007aca <n9>:
    7aca:	01 01 8f                                            ...

00007acd <n8>:
    7acd:	01 01 8e                                            ...

00007ad0 <n7>:
    7ad0:	01 01 8d                                            ...

00007ad3 <n6>:
    7ad3:	01 01 8c                                            ...

00007ad6 <n5>:
    7ad6:	01 01 8b                                            ...

00007ad9 <n4>:
    7ad9:	01 01 8a                                            ...

00007adc <n3>:
    7adc:	01 01 89                                            ...

00007adf <n2>:
    7adf:	01 01 88                                            ...

00007ae2 <n1>:
    7ae2:	01 01 87                                            ...

00007ae5 <n0>:
    7ae5:	01 01 86                                            ...

00007ae8 <nb>:
    7ae8:	01 01 13                                            ...

00007aeb <tree1>:
    7aeb:	02 02 46 47 5f 60                                   ..FG_`

00007af1 <tree0>:
    7af1:	02 02 44 45 5d 5e                                   ..DE]^

00007af7 <trunk1>:
    7af7:	02 02 5f 60 76 77                                   .._`vw

00007afd <trunk0>:
    7afd:	02 02 5d 5e 74 75                                   ..]^tu

00007b03 <drkbridge3>:
    7b03:	01 01 7d                                            ..}

00007b06 <drkbridge2>:
    7b06:	01 01 7c                                            ..|

00007b09 <drkbridge1>:
    7b09:	01 01 65                                            ..e

00007b0c <drkbridge0>:
    7b0c:	01 01 64                                            ..d

00007b0f <bridge3>:
    7b0f:	01 01 73                                            ..s

00007b12 <bridge2>:
    7b12:	01 01 72                                            ..r

00007b15 <bridge1>:
    7b15:	01 01 71                                            ..q

00007b18 <bridge0>:
    7b18:	01 01 70                                            ..p

00007b1b <water3>:
    7b1b:	02 02 6c 6d 84 85                                   ..lm..

00007b21 <water2>:
    7b21:	02 02 6a 6b 82 83                                   ..jk..

00007b27 <water1>:
    7b27:	02 02 3b 3c 54 55                                   ..;<TU

00007b2d <banana2>:
    7b2d:	02 02 39 3a 52 53                                   ..9:RS

00007b33 <tube5>:
    7b33:	02 02 64 65 7c 7d                                   ..de|}

00007b39 <tube4>:
    7b39:	02 02 33 34 4c 4d                                   ..34LM

00007b3f <groundblock1>:
    7b3f:	02 02 37 38 50 51                                   ..78PQ

00007b45 <groundblock0>:
    7b45:	02 02 35 36 4e 4f                                   ..56NO

00007b4b <moss>:
    7b4b:	02 02 33 34 4c 4d                                   ..34LM

00007b51 <cloud3>:
    7b51:	02 02 62 63 7a 7b                                   ..bcz{

00007b57 <cloud2>:
    7b57:	02 02 61 56 78 79                                   ..aVxy

00007b5d <cloud1>:
    7b5d:	02 02 32 13 4a 4b                                   ..2.JK

00007b63 <cloud0>:
    7b63:	02 02 30 31 48 49                                   ..01HI

00007b69 <fireground>:
    7b69:	02 02 0a 0b 1e 1f                                   ......

00007b6f <blackblock>:
    7b6f:	02 02 57 58 6e 6f                                   ..WXno

00007b75 <lilblack>:
    7b75:	01 01 11                                            ...

00007b78 <white>:
    7b78:	02 02 56 56 56 56                                   ..VVVV

00007b7e <black>:
    7b7e:	02 02 11 11 11 11                                   ......

00007b84 <fire2>:
    7b84:	02 02 28 29 3f 40                                   ..()?@

00007b8a <fire1>:
    7b8a:	02 02 26 27 3d 3e                                   ..&'=>

00007b90 <blue>:
    7b90:	01 01 13                                            ...

00007b93 <banana>:
    7b93:	02 02 68 69 80 81                                   ..hi..

00007b99 <diamond1>:
    7b99:	02 02 08 09 1c 1d                                   ......

00007b9f <diamond0>:
    7b9f:	02 02 66 67 7e 7f                                   ..fg~.

00007ba5 <block3>:
    7ba5:	02 02 43 43 5b 5c                                   ..CC[\

00007bab <block2>:
    7bab:	02 02 41 42 59 5a                                   ..ABYZ

00007bb1 <door3>:
    7bb1:	02 02 11 12 11 25                                   .....%

00007bb7 <door2>:
    7bb7:	02 02 10 11 24 11                                   ....$.

00007bbd <door1>:
    7bbd:	02 02 0e 0f 22 23                                   ...."#

00007bc3 <door0>:
    7bc3:	02 02 0c 0d 20 21                                   .... !

00007bc9 <block5>:
    7bc9:	02 02 0a 0b 1e 1f                                   ......

00007bcf <block4>:
    7bcf:	02 02 08 09 1c 1d                                   ......

00007bd5 <ground3>:
    7bd5:	02 03 07 06 1b 1a 2e 2d                             .......-

00007bdd <ground2>:
    7bdd:	02 03 07 05 1b 19 2e 2f                             ......./

00007be5 <ground1>:
    7be5:	02 03 04 06 18 1a 2c 2d                             ......,-

00007bed <ground>:
    7bed:	02 03 04 05 18 19 2a 2b                             ......*+

00007bf5 <block1>:
    7bf5:	02 02 02 03 16 17                                   ......

00007bfb <block0>:
    7bfb:	02 02 00 01 14 15                                   ......

00007c01 <bigblue0>:
    7c01:	02 02 13 13 13 13 00                                .......

00007c08 <__ctors_end>:
    7c08:	11 24       	eor	r1, r1
    7c0a:	1f be       	out	0x3f, r1	; 63
    7c0c:	cf ef       	ldi	r28, 0xFF	; 255
    7c0e:	d0 e1       	ldi	r29, 0x10	; 16
    7c10:	de bf       	out	0x3e, r29	; 62
    7c12:	cd bf       	out	0x3d, r28	; 61

00007c14 <__do_copy_data>:
    7c14:	11 e0       	ldi	r17, 0x01	; 1
    7c16:	a0 e0       	ldi	r26, 0x00	; 0
    7c18:	b1 e0       	ldi	r27, 0x01	; 1
    7c1a:	e6 ea       	ldi	r30, 0xA6	; 166
    7c1c:	f8 ed       	ldi	r31, 0xD8	; 216
    7c1e:	02 c0       	rjmp	.+4      	; 0x7c24 <__do_copy_data+0x10>
    7c20:	05 90       	lpm	r0, Z+
    7c22:	0d 92       	st	X+, r0
    7c24:	a2 30       	cpi	r26, 0x02	; 2
    7c26:	b1 07       	cpc	r27, r17
    7c28:	d9 f7       	brne	.-10     	; 0x7c20 <__do_copy_data+0xc>

00007c2a <__do_clear_bss>:
    7c2a:	2a e0       	ldi	r18, 0x0A	; 10
    7c2c:	a2 e0       	ldi	r26, 0x02	; 2
    7c2e:	b1 e0       	ldi	r27, 0x01	; 1
    7c30:	01 c0       	rjmp	.+2      	; 0x7c34 <.do_clear_bss_start>

00007c32 <.do_clear_bss_loop>:
    7c32:	1d 92       	st	X+, r1

00007c34 <.do_clear_bss_start>:
    7c34:	a4 3c       	cpi	r26, 0xC4	; 196
    7c36:	b2 07       	cpc	r27, r18
    7c38:	e1 f7       	brne	.-8      	; 0x7c32 <.do_clear_bss_loop>

00007c3a <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    7c3a:	14 be       	out	0x34, r1	; 52
    7c3c:	0f b6       	in	r0, 0x3f	; 63
    7c3e:	f8 94       	cli
    7c40:	a8 95       	wdr
    7c42:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7c46:	88 61       	ori	r24, 0x18	; 24
    7c48:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7c4c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    7c50:	0f be       	out	0x3f, r0	; 63

00007c52 <Initialize>:
    7c52:	f8 94       	cli
    7c54:	80 e7       	ldi	r24, 0x70	; 112
    7c56:	90 e0       	ldi	r25, 0x00	; 0
    7c58:	42 ea       	ldi	r20, 0xA2	; 162
    7c5a:	50 e0       	ldi	r21, 0x00	; 0
    7c5c:	fc 01       	movw	r30, r24
    7c5e:	25 91       	lpm	r18, Z+
    7c60:	34 91       	lpm	r19, Z
    7c62:	f9 01       	movw	r30, r18
    7c64:	ff 27       	eor	r31, r31
    7c66:	30 83       	st	Z, r19
    7c68:	02 96       	adiw	r24, 0x02	; 2
    7c6a:	48 17       	cp	r20, r24
    7c6c:	59 07       	cpc	r21, r25
    7c6e:	b1 f7       	brne	.-20     	; 0x7c5c <Initialize+0xa>
    7c70:	0e 94 21 44 	call	0x8842	; 0x8842 <isEepromFormatted>
    7c74:	81 11       	cpse	r24, r1
    7c76:	02 c0       	rjmp	.+4      	; 0x7c7c <Initialize+0x2a>
    7c78:	0e 94 ff 43 	call	0x87fe	; 0x87fe <FormatEeprom>
    7c7c:	81 e0       	ldi	r24, 0x01	; 1
    7c7e:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
    7c82:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_barrel_hi>
    7c86:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    7c8a:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <mixer>
    7c8e:	10 92 7c 08 	sts	0x087C, r1	; 0x80087c <tr2_vol>
    7c92:	10 92 82 08 	sts	0x0882, r1	; 0x800882 <tr3_vol>
    7c96:	10 92 88 08 	sts	0x0888, r1	; 0x800888 <tr4_vol>
    7c9a:	10 92 8e 08 	sts	0x088E, r1	; 0x80088e <tr5_vol>
    7c9e:	10 92 60 08 	sts	0x0860, r1	; 0x800860 <sync_phase>
    7ca2:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_flags>
    7ca6:	92 e1       	ldi	r25, 0x12	; 18
    7ca8:	90 93 61 08 	sts	0x0861, r25	; 0x800861 <sync_pulse>
    7cac:	90 ee       	ldi	r25, 0xE0	; 224
    7cae:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <render_lines_count>
    7cb2:	98 e1       	ldi	r25, 0x18	; 24
    7cb4:	90 93 67 08 	sts	0x0867, r25	; 0x800867 <first_render_line>
    7cb8:	10 92 6c 08 	sts	0x086C, r1	; 0x80086c <joypad1_status_hi+0x1>
    7cbc:	10 92 6b 08 	sts	0x086B, r1	; 0x80086b <joypad1_status_hi>
    7cc0:	10 92 70 08 	sts	0x0870, r1	; 0x800870 <joypad2_status_hi+0x1>
    7cc4:	10 92 6f 08 	sts	0x086F, r1	; 0x80086f <joypad2_status_hi>
    7cc8:	80 93 75 08 	sts	0x0875, r24	; 0x800875 <sound_enabled>
    7ccc:	0e 94 ae 4f 	call	0x9f5c	; 0x9f5c <InitializeVideoMode>
    7cd0:	78 94       	sei
    7cd2:	0e 94 18 50 	call	0xa030	; 0xa030 <DisplayLogo>
    7cd6:	0e 94 d0 69 	call	0xd3a0	; 0xd3a0 <main>
    7cda:	0c 94 51 6c 	jmp	0xd8a2	; 0xd8a2 <_exit>

00007cde <__bad_interrupt>:
    7cde:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00007ce2 <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    7ce2:	03 e8       	ldi	r16, 0x83	; 131
    7ce4:	0a 95       	dec	r16
    7ce6:	f1 f7       	brne	.-4      	; 0x7ce4 <sub_video_mode3+0x2>
    7ce8:	00 c0       	rjmp	.+0      	; 0x7cea <sub_video_mode3+0x8>
    7cea:	00 91 4c 08 	lds	r16, 0x084C	; 0x80084c <user_ram_tiles_c>
    7cee:	ea ef       	ldi	r30, 0xFA	; 250
    7cf0:	f7 e0       	ldi	r31, 0x07	; 7
    7cf2:	23 e0       	ldi	r18, 0x03	; 3
    7cf4:	02 9f       	mul	r16, r18
    7cf6:	e0 0d       	add	r30, r0
    7cf8:	f1 1d       	adc	r31, r1
    7cfa:	20 91 4b 08 	lds	r18, 0x084B	; 0x80084b <free_tile_index>
    7cfe:	3c e3       	ldi	r19, 0x3C	; 60
    7d00:	32 1b       	sub	r19, r18
    7d02:	30 0f       	add	r19, r16
    7d04:	20 17       	cp	r18, r16
    7d06:	51 f0       	breq	.+20     	; 0x7d1c <no_ramtiles>
    7d08:	00 00       	nop
	...

00007d0c <upd_loop>:
    7d0c:	a1 91       	ld	r26, Z+
    7d0e:	b1 91       	ld	r27, Z+
    7d10:	1c 91       	ld	r17, X
    7d12:	11 93       	st	Z+, r17
    7d14:	0c 93       	st	X, r16
    7d16:	03 95       	inc	r16
    7d18:	02 17       	cp	r16, r18
    7d1a:	c0 f3       	brcs	.-16     	; 0x7d0c <upd_loop>

00007d1c <no_ramtiles>:
    7d1c:	13 e0       	ldi	r17, 0x03	; 3
    7d1e:	1a 95       	dec	r17
    7d20:	f1 f7       	brne	.-4      	; 0x7d1e <no_ramtiles+0x2>
    7d22:	00 c0       	rjmp	.+0      	; 0x7d24 <no_ramtiles+0x8>
    7d24:	3a 95       	dec	r19
    7d26:	d1 f7       	brne	.-12     	; 0x7d1c <no_ramtiles>
    7d28:	c0 e0       	ldi	r28, 0x00	; 0
    7d2a:	db e0       	ldi	r29, 0x0B	; 11
    7d2c:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    7d30:	92 2f       	mov	r25, r18
    7d32:	28 7f       	andi	r18, 0xF8	; 248
    7d34:	c2 0f       	add	r28, r18
    7d36:	6e 01       	movw	r12, r28
    7d38:	00 91 5d 08 	lds	r16, 0x085D	; 0x80085d <screen_scrollY>
    7d3c:	60 2f       	mov	r22, r16
    7d3e:	06 95       	lsr	r16
    7d40:	06 95       	lsr	r16
    7d42:	06 95       	lsr	r16
    7d44:	10 91 5e 08 	lds	r17, 0x085E	; 0x80085e <screen_scrollHeight>
    7d48:	10 1b       	sub	r17, r16
    7d4a:	f1 2e       	mov	r15, r17
    7d4c:	10 2f       	mov	r17, r16
    7d4e:	06 95       	lsr	r16
    7d50:	06 95       	lsr	r16
    7d52:	06 95       	lsr	r16
    7d54:	d0 0f       	add	r29, r16
    7d56:	17 70       	andi	r17, 0x07	; 7
    7d58:	c1 0f       	add	r28, r17
    7d5a:	67 70       	andi	r22, 0x07	; 7
    7d5c:	40 91 5a 08 	lds	r20, 0x085A	; 0x80085a <overlay_tile_table>
    7d60:	50 91 5b 08 	lds	r21, 0x085B	; 0x80085b <overlay_tile_table+0x1>
    7d64:	60 90 56 08 	lds	r6, 0x0856	; 0x800856 <tile_table_lo>
    7d68:	70 90 57 08 	lds	r7, 0x0857	; 0x800857 <tile_table_hi>
    7d6c:	d3 01       	movw	r26, r6
    7d6e:	5e 01       	movw	r10, r28
    7d70:	76 2f       	mov	r23, r22
    7d72:	8f 2d       	mov	r24, r15
    7d74:	99 2e       	mov	r9, r25
    7d76:	00 91 5e 08 	lds	r16, 0x085E	; 0x80085e <screen_scrollHeight>
    7d7a:	20 2f       	mov	r18, r16
    7d7c:	06 95       	lsr	r16
    7d7e:	06 95       	lsr	r16
    7d80:	06 95       	lsr	r16
    7d82:	03 95       	inc	r16
    7d84:	27 70       	andi	r18, 0x07	; 7
    7d86:	30 91 59 08 	lds	r19, 0x0859	; 0x800859 <Screen>
    7d8a:	30 30       	cpi	r19, 0x00	; 0
    7d8c:	0f b6       	in	r0, 0x3f	; 63
    7d8e:	01 fe       	sbrs	r0, 1
    7d90:	66 27       	eor	r22, r22
    7d92:	01 fe       	sbrs	r0, 1
    7d94:	c2 2f       	mov	r28, r18
    7d96:	01 fe       	sbrs	r0, 1
    7d98:	d0 2f       	mov	r29, r16
    7d9a:	01 fe       	sbrs	r0, 1
    7d9c:	8f ef       	ldi	r24, 0xFF	; 255
    7d9e:	01 fe       	sbrs	r0, 1
    7da0:	99 24       	eor	r9, r9
    7da2:	01 fe       	sbrs	r0, 1
    7da4:	da 01       	movw	r26, r20
    7da6:	80 90 68 08 	lds	r8, 0x0868	; 0x800868 <render_lines_count>
    7daa:	07 e0       	ldi	r16, 0x07	; 7
    7dac:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7db0:	01 e0       	ldi	r16, 0x01	; 1
    7db2:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7db6:	01 e0       	ldi	r16, 0x01	; 1
    7db8:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00007dbc <next_tile_line>:
    7dbc:	08 e0       	ldi	r16, 0x08	; 8
    7dbe:	60 9f       	mul	r22, r16
    7dc0:	8d 01       	movw	r16, r26
    7dc2:	00 5c       	subi	r16, 0xC0	; 192
    7dc4:	16 40       	sbci	r17, 0x06	; 6
    7dc6:	00 0d       	add	r16, r0
    7dc8:	11 1d       	adc	r17, r1
    7dca:	18 01       	movw	r2, r16
    7dcc:	0a e3       	ldi	r16, 0x3A	; 58
    7dce:	11 e0       	ldi	r17, 0x01	; 1
    7dd0:	00 0d       	add	r16, r0
    7dd2:	11 1d       	adc	r17, r1
    7dd4:	28 01       	movw	r4, r16
    7dd6:	00 e4       	ldi	r16, 0x40	; 64
    7dd8:	e0 2e       	mov	r14, r16
    7dda:	03 e9       	ldi	r16, 0x93	; 147
    7ddc:	1a ef       	ldi	r17, 0xFA	; 250
    7dde:	cf 93       	push	r28
    7de0:	df 93       	push	r29
    7de2:	58 81       	ld	r21, Y
    7de4:	c8 5f       	subi	r28, 0xF8	; 248
    7de6:	48 81       	ld	r20, Y
    7de8:	c8 5f       	subi	r28, 0xF8	; 248
    7dea:	a5 d3       	rcall	.+1866   	; 0x8536 <hsync_pulse>
    7dec:	2c e0       	ldi	r18, 0x0C	; 12
    7dee:	2a 95       	dec	r18
    7df0:	f1 f7       	brne	.-4      	; 0x7dee <next_tile_line+0x32>
    7df2:	20 e1       	ldi	r18, 0x10	; 16
    7df4:	2a 95       	dec	r18
    7df6:	f1 f7       	brne	.-4      	; 0x7df4 <next_tile_line+0x38>
    7df8:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7dfc:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7e00:	78 94       	sei
    7e02:	00 27       	eor	r16, r16
    7e04:	5e 9d       	mul	r21, r14
    7e06:	5b 31       	cpi	r21, 0x1B	; 27
    7e08:	f1 01       	movw	r30, r2
    7e0a:	08 f4       	brcc	.+2      	; 0x7e0e <next_tile_line+0x52>
    7e0c:	f2 01       	movw	r30, r4
    7e0e:	00 1f       	adc	r16, r16
    7e10:	e0 0d       	add	r30, r0
    7e12:	f1 1d       	adc	r31, r1
    7e14:	29 2d       	mov	r18, r9
    7e16:	27 70       	andi	r18, 0x07	; 7
    7e18:	11 24       	eor	r1, r1
    7e1a:	e2 0f       	add	r30, r18
    7e1c:	f1 1d       	adc	r31, r1
    7e1e:	4e 9d       	mul	r20, r14
    7e20:	4b 31       	cpi	r20, 0x1B	; 27
    7e22:	a1 01       	movw	r20, r2
    7e24:	08 f4       	brcc	.+2      	; 0x7e28 <next_tile_line+0x6c>
    7e26:	a2 01       	movw	r20, r4
    7e28:	00 1f       	adc	r16, r16
    7e2a:	40 0d       	add	r20, r0
    7e2c:	51 1d       	adc	r21, r1
    7e2e:	1a e1       	ldi	r17, 0x1A	; 26
    7e30:	01 9f       	mul	r16, r17
    7e32:	00 2d       	mov	r16, r0
    7e34:	13 e0       	ldi	r17, 0x03	; 3
    7e36:	21 9f       	mul	r18, r17
    7e38:	11 27       	eor	r17, r17
    7e3a:	02 59       	subi	r16, 0x92	; 146
    7e3c:	10 4c       	sbci	r17, 0xC0	; 192
    7e3e:	00 0e       	add	r0, r16
    7e40:	11 1e       	adc	r1, r17
    7e42:	11 27       	eor	r17, r17
    7e44:	0f 92       	push	r0
    7e46:	1f 92       	push	r1
    7e48:	08 95       	ret

00007e4a <__vector_15>:
    7e4a:	18 b9       	out	0x08, r17	; 8
    7e4c:	0f 90       	pop	r0
    7e4e:	0f 90       	pop	r0
    7e50:	df 91       	pop	r29
    7e52:	cf 91       	pop	r28
    7e54:	03 e1       	ldi	r16, 0x13	; 19
    7e56:	0a 95       	dec	r16
    7e58:	f1 f7       	brne	.-4      	; 0x7e56 <__vector_15+0xc>
    7e5a:	00 c0       	rjmp	.+0      	; 0x7e5c <__vector_15+0x12>
    7e5c:	63 95       	inc	r22
    7e5e:	8a 94       	dec	r8
    7e60:	f9 f0       	breq	.+62     	; 0x7ea0 <text_frame_end>
    7e62:	68 30       	cpi	r22, 0x08	; 8
    7e64:	29 f0       	breq	.+10     	; 0x7e70 <next_tile_row>
    7e66:	07 e0       	ldi	r16, 0x07	; 7
    7e68:	0a 95       	dec	r16
    7e6a:	f1 f7       	brne	.-4      	; 0x7e68 <__vector_15+0x1e>
    7e6c:	00 c0       	rjmp	.+0      	; 0x7e6e <__vector_15+0x24>
    7e6e:	a6 cf       	rjmp	.-180    	; 0x7dbc <next_tile_line>

00007e70 <next_tile_row>:
    7e70:	66 27       	eor	r22, r22
    7e72:	0c 2f       	mov	r16, r28
    7e74:	07 70       	andi	r16, 0x07	; 7
    7e76:	07 30       	cpi	r16, 0x07	; 7
    7e78:	11 f0       	breq	.+4      	; 0x7e7e <next_tile_row+0xe>
    7e7a:	c3 95       	inc	r28
    7e7c:	02 c0       	rjmp	.+4      	; 0x7e82 <next_tile_row+0x12>
    7e7e:	c8 7f       	andi	r28, 0xF8	; 248
    7e80:	d3 95       	inc	r29
    7e82:	8a 95       	dec	r24
    7e84:	09 f4       	brne	.+2      	; 0x7e88 <next_tile_row+0x18>
    7e86:	e6 01       	movw	r28, r12
    7e88:	3a 95       	dec	r19
    7e8a:	09 f4       	brne	.+2      	; 0x7e8e <next_tile_row+0x1e>
    7e8c:	67 2f       	mov	r22, r23
    7e8e:	09 f4       	brne	.+2      	; 0x7e92 <next_tile_row+0x22>
    7e90:	e5 01       	movw	r28, r10
    7e92:	09 f4       	brne	.+2      	; 0x7e96 <next_tile_row+0x26>
    7e94:	8f 2d       	mov	r24, r15
    7e96:	09 f4       	brne	.+2      	; 0x7e9a <next_tile_row+0x2a>
    7e98:	99 2e       	mov	r9, r25
    7e9a:	09 f4       	brne	.+2      	; 0x7e9e <next_tile_row+0x2e>
    7e9c:	d3 01       	movw	r26, r6
    7e9e:	8e cf       	rjmp	.-228    	; 0x7dbc <next_tile_line>

00007ea0 <text_frame_end>:
    7ea0:	20 e1       	ldi	r18, 0x10	; 16
    7ea2:	2a 95       	dec	r18
    7ea4:	f1 f7       	brne	.-4      	; 0x7ea2 <text_frame_end+0x2>
    7ea6:	00 e0       	ldi	r16, 0x00	; 0
    7ea8:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    7eac:	0c e2       	ldi	r16, 0x2C	; 44
    7eae:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    7eb2:	41 d3       	rcall	.+1666   	; 0x8536 <hsync_pulse>
    7eb4:	11 24       	eor	r1, r1
    7eb6:	0e 94 40 41 	call	0x8280	; 0x8280 <RestoreBackground>
    7eba:	e0 91 62 08 	lds	r30, 0x0862	; 0x800862 <sync_flags>
    7ebe:	42 e0       	ldi	r20, 0x02	; 2
    7ec0:	e1 60       	ori	r30, 0x01	; 1
    7ec2:	e4 27       	eor	r30, r20
    7ec4:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_flags>
    7ec8:	07 e0       	ldi	r16, 0x07	; 7
    7eca:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    7ece:	09 e0       	ldi	r16, 0x09	; 9
    7ed0:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    7ed4:	02 e0       	ldi	r16, 0x02	; 2
    7ed6:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    7eda:	08 95       	ret

00007edc <romrom_e>:
    7edc:	00 c0       	rjmp	.+0      	; 0x7ede <romrom_e+0x2>
    7ede:	05 91       	lpm	r16, Z+
    7ee0:	08 b9       	out	0x08, r16	; 8
    7ee2:	00 c0       	rjmp	.+0      	; 0x7ee4 <romrom_e+0x8>
    7ee4:	05 91       	lpm	r16, Z+
    7ee6:	08 b9       	out	0x08, r16	; 8
    7ee8:	00 c0       	rjmp	.+0      	; 0x7eea <romrom_e+0xe>
    7eea:	05 91       	lpm	r16, Z+
    7eec:	08 b9       	out	0x08, r16	; 8
    7eee:	00 c0       	rjmp	.+0      	; 0x7ef0 <romrom_e+0x14>
    7ef0:	05 91       	lpm	r16, Z+
    7ef2:	08 b9       	out	0x08, r16	; 8
    7ef4:	00 c0       	rjmp	.+0      	; 0x7ef6 <romrom_e+0x1a>
    7ef6:	05 91       	lpm	r16, Z+
    7ef8:	08 b9       	out	0x08, r16	; 8
    7efa:	00 c0       	rjmp	.+0      	; 0x7efc <romrom_e+0x20>
    7efc:	05 91       	lpm	r16, Z+
    7efe:	08 b9       	out	0x08, r16	; 8
    7f00:	00 c0       	rjmp	.+0      	; 0x7f02 <romrom_e+0x26>
    7f02:	05 91       	lpm	r16, Z+
    7f04:	08 b9       	out	0x08, r16	; 8
    7f06:	00 00       	nop
    7f08:	05 91       	lpm	r16, Z+
    7f0a:	fa 01       	movw	r30, r20
    7f0c:	08 b9       	out	0x08, r16	; 8
    7f0e:	56 c0       	rjmp	.+172    	; 0x7fbc <romloop_px0>

00007f10 <romram_e>:
    7f10:	00 c0       	rjmp	.+0      	; 0x7f12 <romram_e+0x2>
    7f12:	05 91       	lpm	r16, Z+
    7f14:	08 b9       	out	0x08, r16	; 8
    7f16:	00 c0       	rjmp	.+0      	; 0x7f18 <romram_e+0x8>
    7f18:	05 91       	lpm	r16, Z+
    7f1a:	08 b9       	out	0x08, r16	; 8
    7f1c:	00 c0       	rjmp	.+0      	; 0x7f1e <romram_e+0xe>
    7f1e:	05 91       	lpm	r16, Z+
    7f20:	08 b9       	out	0x08, r16	; 8
    7f22:	00 c0       	rjmp	.+0      	; 0x7f24 <romram_e+0x14>
    7f24:	05 91       	lpm	r16, Z+
    7f26:	08 b9       	out	0x08, r16	; 8
    7f28:	00 c0       	rjmp	.+0      	; 0x7f2a <romram_e+0x1a>
    7f2a:	05 91       	lpm	r16, Z+
    7f2c:	08 b9       	out	0x08, r16	; 8
    7f2e:	00 c0       	rjmp	.+0      	; 0x7f30 <romram_e+0x20>
    7f30:	05 91       	lpm	r16, Z+
    7f32:	08 b9       	out	0x08, r16	; 8
    7f34:	00 c0       	rjmp	.+0      	; 0x7f36 <romram_e+0x26>
    7f36:	05 91       	lpm	r16, Z+
    7f38:	08 b9       	out	0x08, r16	; 8
    7f3a:	00 00       	nop
    7f3c:	05 91       	lpm	r16, Z+
    7f3e:	fa 01       	movw	r30, r20
    7f40:	08 b9       	out	0x08, r16	; 8
    7f42:	59 c0       	rjmp	.+178    	; 0x7ff6 <ramloop_px0>

00007f44 <ramrom_e>:
    7f44:	04 91       	lpm	r16, Z
    7f46:	01 91       	ld	r16, Z+
    7f48:	08 b9       	out	0x08, r16	; 8
    7f4a:	04 91       	lpm	r16, Z
    7f4c:	01 91       	ld	r16, Z+
    7f4e:	08 b9       	out	0x08, r16	; 8
    7f50:	04 91       	lpm	r16, Z
    7f52:	01 91       	ld	r16, Z+
    7f54:	08 b9       	out	0x08, r16	; 8
    7f56:	04 91       	lpm	r16, Z
    7f58:	01 91       	ld	r16, Z+
    7f5a:	08 b9       	out	0x08, r16	; 8
    7f5c:	04 91       	lpm	r16, Z
    7f5e:	01 91       	ld	r16, Z+
    7f60:	08 b9       	out	0x08, r16	; 8
    7f62:	04 91       	lpm	r16, Z
    7f64:	01 91       	ld	r16, Z+
    7f66:	08 b9       	out	0x08, r16	; 8
    7f68:	04 91       	lpm	r16, Z
    7f6a:	01 91       	ld	r16, Z+
    7f6c:	08 b9       	out	0x08, r16	; 8
    7f6e:	00 c0       	rjmp	.+0      	; 0x7f70 <ramrom_e+0x2c>
    7f70:	01 91       	ld	r16, Z+
    7f72:	fa 01       	movw	r30, r20
    7f74:	08 b9       	out	0x08, r16	; 8
    7f76:	22 c0       	rjmp	.+68     	; 0x7fbc <romloop_px0>

00007f78 <ramram_e>:
    7f78:	04 91       	lpm	r16, Z
    7f7a:	01 91       	ld	r16, Z+
    7f7c:	08 b9       	out	0x08, r16	; 8
    7f7e:	04 91       	lpm	r16, Z
    7f80:	01 91       	ld	r16, Z+
    7f82:	08 b9       	out	0x08, r16	; 8
    7f84:	04 91       	lpm	r16, Z
    7f86:	01 91       	ld	r16, Z+
    7f88:	08 b9       	out	0x08, r16	; 8
    7f8a:	04 91       	lpm	r16, Z
    7f8c:	01 91       	ld	r16, Z+
    7f8e:	08 b9       	out	0x08, r16	; 8
    7f90:	04 91       	lpm	r16, Z
    7f92:	01 91       	ld	r16, Z+
    7f94:	08 b9       	out	0x08, r16	; 8
    7f96:	04 91       	lpm	r16, Z
    7f98:	01 91       	ld	r16, Z+
    7f9a:	08 b9       	out	0x08, r16	; 8
    7f9c:	04 91       	lpm	r16, Z
    7f9e:	01 91       	ld	r16, Z+
    7fa0:	08 b9       	out	0x08, r16	; 8
    7fa2:	00 c0       	rjmp	.+0      	; 0x7fa4 <ramram_e+0x2c>
    7fa4:	01 91       	ld	r16, Z+
    7fa6:	fa 01       	movw	r30, r20
    7fa8:	08 b9       	out	0x08, r16	; 8
    7faa:	25 c0       	rjmp	.+74     	; 0x7ff6 <ramloop_px0>

00007fac <romloop>:
    7fac:	05 91       	lpm	r16, Z+
    7fae:	08 b9       	out	0x08, r16	; 8
    7fb0:	02 0c       	add	r0, r2
    7fb2:	00 00       	nop
    7fb4:	05 91       	lpm	r16, Z+
    7fb6:	08 b9       	out	0x08, r16	; 8
    7fb8:	13 1c       	adc	r1, r3
    7fba:	f0 01       	movw	r30, r0

00007fbc <romloop_px0>:
    7fbc:	05 91       	lpm	r16, Z+
    7fbe:	08 b9       	out	0x08, r16	; 8
    7fc0:	00 c0       	rjmp	.+0      	; 0x7fc2 <romloop_px0+0x6>
    7fc2:	05 91       	lpm	r16, Z+
    7fc4:	08 b9       	out	0x08, r16	; 8
    7fc6:	48 81       	ld	r20, Y
    7fc8:	05 91       	lpm	r16, Z+
    7fca:	08 b9       	out	0x08, r16	; 8
    7fcc:	c8 5f       	subi	r28, 0xF8	; 248
    7fce:	00 00       	nop
    7fd0:	05 91       	lpm	r16, Z+
    7fd2:	08 b9       	out	0x08, r16	; 8
    7fd4:	4e 9d       	mul	r20, r14
    7fd6:	05 91       	lpm	r16, Z+
    7fd8:	08 b9       	out	0x08, r16	; 8
    7fda:	4b 31       	cpi	r20, 0x1B	; 27
    7fdc:	00 00       	nop
    7fde:	05 91       	lpm	r16, Z+
    7fe0:	08 b9       	out	0x08, r16	; 8
    7fe2:	20 f7       	brcc	.-56     	; 0x7fac <romloop>
    7fe4:	00 00       	nop
    7fe6:	05 91       	lpm	r16, Z+
    7fe8:	08 b9       	out	0x08, r16	; 8
    7fea:	04 0c       	add	r0, r4
    7fec:	00 00       	nop
    7fee:	05 91       	lpm	r16, Z+
    7ff0:	08 b9       	out	0x08, r16	; 8
    7ff2:	15 1c       	adc	r1, r5
    7ff4:	f0 01       	movw	r30, r0

00007ff6 <ramloop_px0>:
    7ff6:	00 00       	nop
    7ff8:	01 91       	ld	r16, Z+
    7ffa:	08 b9       	out	0x08, r16	; 8
    7ffc:	48 81       	ld	r20, Y
    7ffe:	00 00       	nop
    8000:	01 91       	ld	r16, Z+
    8002:	08 b9       	out	0x08, r16	; 8
    8004:	c8 5f       	subi	r28, 0xF8	; 248
    8006:	4e 9d       	mul	r20, r14
    8008:	01 91       	ld	r16, Z+
    800a:	08 b9       	out	0x08, r16	; 8
    800c:	04 91       	lpm	r16, Z
    800e:	01 91       	ld	r16, Z+
    8010:	08 b9       	out	0x08, r16	; 8
    8012:	04 91       	lpm	r16, Z
    8014:	01 91       	ld	r16, Z+
    8016:	08 b9       	out	0x08, r16	; 8
    8018:	4b 31       	cpi	r20, 0x1B	; 27
    801a:	00 c0       	rjmp	.+0      	; 0x801c <ramloop_px0+0x26>
    801c:	01 91       	ld	r16, Z+
    801e:	08 b9       	out	0x08, r16	; 8
    8020:	50 f4       	brcc	.+20     	; 0x8036 <ramloop_tr>
    8022:	00 00       	nop
    8024:	04 0c       	add	r0, r4
    8026:	01 91       	ld	r16, Z+
    8028:	08 b9       	out	0x08, r16	; 8
    802a:	15 1c       	adc	r1, r5
    802c:	00 00       	nop
    802e:	01 91       	ld	r16, Z+
    8030:	f0 01       	movw	r30, r0
    8032:	08 b9       	out	0x08, r16	; 8
    8034:	e0 cf       	rjmp	.-64     	; 0x7ff6 <ramloop_px0>

00008036 <ramloop_tr>:
    8036:	02 0c       	add	r0, r2
    8038:	01 91       	ld	r16, Z+
    803a:	08 b9       	out	0x08, r16	; 8
    803c:	13 1c       	adc	r1, r3
    803e:	00 00       	nop
    8040:	01 91       	ld	r16, Z+
    8042:	f0 01       	movw	r30, r0
    8044:	08 b9       	out	0x08, r16	; 8
    8046:	ba cf       	rjmp	.-140    	; 0x7fbc <romloop_px0>

00008048 <CopyFlashTile>:
    8048:	20 e4       	ldi	r18, 0x40	; 64
    804a:	e0 91 56 08 	lds	r30, 0x0856	; 0x800856 <tile_table_lo>
    804e:	f0 91 57 08 	lds	r31, 0x0857	; 0x800857 <tile_table_hi>
    8052:	82 9f       	mul	r24, r18
    8054:	e0 0d       	add	r30, r0
    8056:	f1 1d       	adc	r31, r1
    8058:	aa e3       	ldi	r26, 0x3A	; 58
    805a:	b1 e0       	ldi	r27, 0x01	; 1
    805c:	62 9f       	mul	r22, r18
    805e:	a0 0d       	add	r26, r0
    8060:	b1 1d       	adc	r27, r1
    8062:	15 90       	lpm	r1, Z+
    8064:	1d 92       	st	X+, r1
    8066:	15 90       	lpm	r1, Z+
    8068:	1d 92       	st	X+, r1
    806a:	15 90       	lpm	r1, Z+
    806c:	1d 92       	st	X+, r1
    806e:	15 90       	lpm	r1, Z+
    8070:	1d 92       	st	X+, r1
    8072:	15 90       	lpm	r1, Z+
    8074:	1d 92       	st	X+, r1
    8076:	15 90       	lpm	r1, Z+
    8078:	1d 92       	st	X+, r1
    807a:	15 90       	lpm	r1, Z+
    807c:	1d 92       	st	X+, r1
    807e:	15 90       	lpm	r1, Z+
    8080:	1d 92       	st	X+, r1
    8082:	15 90       	lpm	r1, Z+
    8084:	1d 92       	st	X+, r1
    8086:	15 90       	lpm	r1, Z+
    8088:	1d 92       	st	X+, r1
    808a:	15 90       	lpm	r1, Z+
    808c:	1d 92       	st	X+, r1
    808e:	15 90       	lpm	r1, Z+
    8090:	1d 92       	st	X+, r1
    8092:	15 90       	lpm	r1, Z+
    8094:	1d 92       	st	X+, r1
    8096:	15 90       	lpm	r1, Z+
    8098:	1d 92       	st	X+, r1
    809a:	15 90       	lpm	r1, Z+
    809c:	1d 92       	st	X+, r1
    809e:	15 90       	lpm	r1, Z+
    80a0:	1d 92       	st	X+, r1
    80a2:	15 90       	lpm	r1, Z+
    80a4:	1d 92       	st	X+, r1
    80a6:	15 90       	lpm	r1, Z+
    80a8:	1d 92       	st	X+, r1
    80aa:	15 90       	lpm	r1, Z+
    80ac:	1d 92       	st	X+, r1
    80ae:	15 90       	lpm	r1, Z+
    80b0:	1d 92       	st	X+, r1
    80b2:	15 90       	lpm	r1, Z+
    80b4:	1d 92       	st	X+, r1
    80b6:	15 90       	lpm	r1, Z+
    80b8:	1d 92       	st	X+, r1
    80ba:	15 90       	lpm	r1, Z+
    80bc:	1d 92       	st	X+, r1
    80be:	15 90       	lpm	r1, Z+
    80c0:	1d 92       	st	X+, r1
    80c2:	15 90       	lpm	r1, Z+
    80c4:	1d 92       	st	X+, r1
    80c6:	15 90       	lpm	r1, Z+
    80c8:	1d 92       	st	X+, r1
    80ca:	15 90       	lpm	r1, Z+
    80cc:	1d 92       	st	X+, r1
    80ce:	15 90       	lpm	r1, Z+
    80d0:	1d 92       	st	X+, r1
    80d2:	15 90       	lpm	r1, Z+
    80d4:	1d 92       	st	X+, r1
    80d6:	15 90       	lpm	r1, Z+
    80d8:	1d 92       	st	X+, r1
    80da:	15 90       	lpm	r1, Z+
    80dc:	1d 92       	st	X+, r1
    80de:	15 90       	lpm	r1, Z+
    80e0:	1d 92       	st	X+, r1
    80e2:	15 90       	lpm	r1, Z+
    80e4:	1d 92       	st	X+, r1
    80e6:	15 90       	lpm	r1, Z+
    80e8:	1d 92       	st	X+, r1
    80ea:	15 90       	lpm	r1, Z+
    80ec:	1d 92       	st	X+, r1
    80ee:	15 90       	lpm	r1, Z+
    80f0:	1d 92       	st	X+, r1
    80f2:	15 90       	lpm	r1, Z+
    80f4:	1d 92       	st	X+, r1
    80f6:	15 90       	lpm	r1, Z+
    80f8:	1d 92       	st	X+, r1
    80fa:	15 90       	lpm	r1, Z+
    80fc:	1d 92       	st	X+, r1
    80fe:	15 90       	lpm	r1, Z+
    8100:	1d 92       	st	X+, r1
    8102:	15 90       	lpm	r1, Z+
    8104:	1d 92       	st	X+, r1
    8106:	15 90       	lpm	r1, Z+
    8108:	1d 92       	st	X+, r1
    810a:	15 90       	lpm	r1, Z+
    810c:	1d 92       	st	X+, r1
    810e:	15 90       	lpm	r1, Z+
    8110:	1d 92       	st	X+, r1
    8112:	15 90       	lpm	r1, Z+
    8114:	1d 92       	st	X+, r1
    8116:	15 90       	lpm	r1, Z+
    8118:	1d 92       	st	X+, r1
    811a:	15 90       	lpm	r1, Z+
    811c:	1d 92       	st	X+, r1
    811e:	15 90       	lpm	r1, Z+
    8120:	1d 92       	st	X+, r1
    8122:	15 90       	lpm	r1, Z+
    8124:	1d 92       	st	X+, r1
    8126:	15 90       	lpm	r1, Z+
    8128:	1d 92       	st	X+, r1
    812a:	15 90       	lpm	r1, Z+
    812c:	1d 92       	st	X+, r1
    812e:	15 90       	lpm	r1, Z+
    8130:	1d 92       	st	X+, r1
    8132:	15 90       	lpm	r1, Z+
    8134:	1d 92       	st	X+, r1
    8136:	15 90       	lpm	r1, Z+
    8138:	1d 92       	st	X+, r1
    813a:	15 90       	lpm	r1, Z+
    813c:	1d 92       	st	X+, r1
    813e:	15 90       	lpm	r1, Z+
    8140:	1d 92       	st	X+, r1
    8142:	15 90       	lpm	r1, Z+
    8144:	1d 92       	st	X+, r1
    8146:	15 90       	lpm	r1, Z+
    8148:	1d 92       	st	X+, r1
    814a:	15 90       	lpm	r1, Z+
    814c:	1d 92       	st	X+, r1
    814e:	15 90       	lpm	r1, Z+
    8150:	1d 92       	st	X+, r1
    8152:	15 90       	lpm	r1, Z+
    8154:	1d 92       	st	X+, r1
    8156:	15 90       	lpm	r1, Z+
    8158:	1d 92       	st	X+, r1
    815a:	15 90       	lpm	r1, Z+
    815c:	1d 92       	st	X+, r1
    815e:	15 90       	lpm	r1, Z+
    8160:	1d 92       	st	X+, r1
    8162:	11 24       	eor	r1, r1
    8164:	08 95       	ret

00008166 <CopyRamTile>:
    8166:	20 e4       	ldi	r18, 0x40	; 64
    8168:	ea e3       	ldi	r30, 0x3A	; 58
    816a:	f1 e0       	ldi	r31, 0x01	; 1
    816c:	82 9f       	mul	r24, r18
    816e:	e0 0d       	add	r30, r0
    8170:	f1 1d       	adc	r31, r1
    8172:	aa e3       	ldi	r26, 0x3A	; 58
    8174:	b1 e0       	ldi	r27, 0x01	; 1
    8176:	62 9f       	mul	r22, r18
    8178:	a0 0d       	add	r26, r0
    817a:	b1 1d       	adc	r27, r1
    817c:	11 90       	ld	r1, Z+
    817e:	1d 92       	st	X+, r1
    8180:	11 90       	ld	r1, Z+
    8182:	1d 92       	st	X+, r1
    8184:	11 90       	ld	r1, Z+
    8186:	1d 92       	st	X+, r1
    8188:	11 90       	ld	r1, Z+
    818a:	1d 92       	st	X+, r1
    818c:	11 90       	ld	r1, Z+
    818e:	1d 92       	st	X+, r1
    8190:	11 90       	ld	r1, Z+
    8192:	1d 92       	st	X+, r1
    8194:	11 90       	ld	r1, Z+
    8196:	1d 92       	st	X+, r1
    8198:	11 90       	ld	r1, Z+
    819a:	1d 92       	st	X+, r1
    819c:	11 90       	ld	r1, Z+
    819e:	1d 92       	st	X+, r1
    81a0:	11 90       	ld	r1, Z+
    81a2:	1d 92       	st	X+, r1
    81a4:	11 90       	ld	r1, Z+
    81a6:	1d 92       	st	X+, r1
    81a8:	11 90       	ld	r1, Z+
    81aa:	1d 92       	st	X+, r1
    81ac:	11 90       	ld	r1, Z+
    81ae:	1d 92       	st	X+, r1
    81b0:	11 90       	ld	r1, Z+
    81b2:	1d 92       	st	X+, r1
    81b4:	11 90       	ld	r1, Z+
    81b6:	1d 92       	st	X+, r1
    81b8:	11 90       	ld	r1, Z+
    81ba:	1d 92       	st	X+, r1
    81bc:	11 90       	ld	r1, Z+
    81be:	1d 92       	st	X+, r1
    81c0:	11 90       	ld	r1, Z+
    81c2:	1d 92       	st	X+, r1
    81c4:	11 90       	ld	r1, Z+
    81c6:	1d 92       	st	X+, r1
    81c8:	11 90       	ld	r1, Z+
    81ca:	1d 92       	st	X+, r1
    81cc:	11 90       	ld	r1, Z+
    81ce:	1d 92       	st	X+, r1
    81d0:	11 90       	ld	r1, Z+
    81d2:	1d 92       	st	X+, r1
    81d4:	11 90       	ld	r1, Z+
    81d6:	1d 92       	st	X+, r1
    81d8:	11 90       	ld	r1, Z+
    81da:	1d 92       	st	X+, r1
    81dc:	11 90       	ld	r1, Z+
    81de:	1d 92       	st	X+, r1
    81e0:	11 90       	ld	r1, Z+
    81e2:	1d 92       	st	X+, r1
    81e4:	11 90       	ld	r1, Z+
    81e6:	1d 92       	st	X+, r1
    81e8:	11 90       	ld	r1, Z+
    81ea:	1d 92       	st	X+, r1
    81ec:	11 90       	ld	r1, Z+
    81ee:	1d 92       	st	X+, r1
    81f0:	11 90       	ld	r1, Z+
    81f2:	1d 92       	st	X+, r1
    81f4:	11 90       	ld	r1, Z+
    81f6:	1d 92       	st	X+, r1
    81f8:	11 90       	ld	r1, Z+
    81fa:	1d 92       	st	X+, r1
    81fc:	11 90       	ld	r1, Z+
    81fe:	1d 92       	st	X+, r1
    8200:	11 90       	ld	r1, Z+
    8202:	1d 92       	st	X+, r1
    8204:	11 90       	ld	r1, Z+
    8206:	1d 92       	st	X+, r1
    8208:	11 90       	ld	r1, Z+
    820a:	1d 92       	st	X+, r1
    820c:	11 90       	ld	r1, Z+
    820e:	1d 92       	st	X+, r1
    8210:	11 90       	ld	r1, Z+
    8212:	1d 92       	st	X+, r1
    8214:	11 90       	ld	r1, Z+
    8216:	1d 92       	st	X+, r1
    8218:	11 90       	ld	r1, Z+
    821a:	1d 92       	st	X+, r1
    821c:	11 90       	ld	r1, Z+
    821e:	1d 92       	st	X+, r1
    8220:	11 90       	ld	r1, Z+
    8222:	1d 92       	st	X+, r1
    8224:	11 90       	ld	r1, Z+
    8226:	1d 92       	st	X+, r1
    8228:	11 90       	ld	r1, Z+
    822a:	1d 92       	st	X+, r1
    822c:	11 90       	ld	r1, Z+
    822e:	1d 92       	st	X+, r1
    8230:	11 90       	ld	r1, Z+
    8232:	1d 92       	st	X+, r1
    8234:	11 90       	ld	r1, Z+
    8236:	1d 92       	st	X+, r1
    8238:	11 90       	ld	r1, Z+
    823a:	1d 92       	st	X+, r1
    823c:	11 90       	ld	r1, Z+
    823e:	1d 92       	st	X+, r1
    8240:	11 90       	ld	r1, Z+
    8242:	1d 92       	st	X+, r1
    8244:	11 90       	ld	r1, Z+
    8246:	1d 92       	st	X+, r1
    8248:	11 90       	ld	r1, Z+
    824a:	1d 92       	st	X+, r1
    824c:	11 90       	ld	r1, Z+
    824e:	1d 92       	st	X+, r1
    8250:	11 90       	ld	r1, Z+
    8252:	1d 92       	st	X+, r1
    8254:	11 90       	ld	r1, Z+
    8256:	1d 92       	st	X+, r1
    8258:	11 90       	ld	r1, Z+
    825a:	1d 92       	st	X+, r1
    825c:	11 90       	ld	r1, Z+
    825e:	1d 92       	st	X+, r1
    8260:	11 90       	ld	r1, Z+
    8262:	1d 92       	st	X+, r1
    8264:	11 90       	ld	r1, Z+
    8266:	1d 92       	st	X+, r1
    8268:	11 90       	ld	r1, Z+
    826a:	1d 92       	st	X+, r1
    826c:	11 90       	ld	r1, Z+
    826e:	1d 92       	st	X+, r1
    8270:	11 90       	ld	r1, Z+
    8272:	1d 92       	st	X+, r1
    8274:	11 90       	ld	r1, Z+
    8276:	1d 92       	st	X+, r1
    8278:	11 90       	ld	r1, Z+
    827a:	1d 92       	st	X+, r1
    827c:	11 24       	eor	r1, r1
    827e:	08 95       	ret

00008280 <RestoreBackground>:
    8280:	e0 91 4c 08 	lds	r30, 0x084C	; 0x80084c <user_ram_tiles_c>
    8284:	8e 2f       	mov	r24, r30
    8286:	ee 0f       	add	r30, r30
    8288:	e8 0f       	add	r30, r24
    828a:	ff 27       	eor	r31, r31
    828c:	e6 50       	subi	r30, 0x06	; 6
    828e:	f8 4f       	sbci	r31, 0xF8	; 248
    8290:	00 90 4b 08 	lds	r0, 0x084B	; 0x80084b <free_tile_index>
    8294:	80 19       	sub	r24, r0
    8296:	30 f4       	brcc	.+12     	; 0x82a4 <rbg_exit>

00008298 <rbg_loop>:
    8298:	a1 91       	ld	r26, Z+
    829a:	b1 91       	ld	r27, Z+
    829c:	01 90       	ld	r0, Z+
    829e:	0c 92       	st	X, r0
    82a0:	83 95       	inc	r24
    82a2:	d1 f7       	brne	.-12     	; 0x8298 <rbg_loop>

000082a4 <rbg_exit>:
    82a4:	08 95       	ret

000082a6 <BlitSpritePart>:
    82a6:	98 e0       	ldi	r25, 0x08	; 8
    82a8:	79 9f       	mul	r23, r25
    82aa:	a1 2d       	mov	r26, r1
    82ac:	bb 27       	eor	r27, r27
    82ae:	a2 5b       	subi	r26, 0xB2	; 178
    82b0:	b7 4f       	sbci	r27, 0xF7	; 247
    82b2:	ed 91       	ld	r30, X+
    82b4:	fd 91       	ld	r31, X+

000082b6 <bsp_send>:
    82b6:	90 e4       	ldi	r25, 0x40	; 64
    82b8:	69 9f       	mul	r22, r25
    82ba:	e0 0d       	add	r30, r0
    82bc:	f1 1d       	adc	r31, r1
    82be:	89 9f       	mul	r24, r25
    82c0:	d0 01       	movw	r26, r0
    82c2:	a6 5c       	subi	r26, 0xC6	; 198
    82c4:	be 4f       	sbci	r27, 0xFE	; 254
    82c6:	90 e0       	ldi	r25, 0x00	; 0
    82c8:	40 fd       	sbrc	r20, 0
    82ca:	09 c0       	rjmp	.+18     	; 0x82de <x_2nd_tile>
    82cc:	82 2f       	mov	r24, r18
    82ce:	48 e0       	ldi	r20, 0x08	; 8
    82d0:	42 1b       	sub	r20, r18
    82d2:	70 ff       	sbrs	r23, 0
    82d4:	0a c0       	rjmp	.+20     	; 0x82ea <x_1st_tile_nxf>
    82d6:	17 96       	adiw	r26, 0x07	; 7

000082d8 <x_2nd_tile_nxf>:
    82d8:	e8 0f       	add	r30, r24
    82da:	f9 1f       	adc	r31, r25
    82dc:	08 c0       	rjmp	.+16     	; 0x82ee <x_check_end>

000082de <x_2nd_tile>:
    82de:	88 e0       	ldi	r24, 0x08	; 8
    82e0:	82 1b       	sub	r24, r18
    82e2:	42 2f       	mov	r20, r18
    82e4:	70 ff       	sbrs	r23, 0
    82e6:	f8 cf       	rjmp	.-16     	; 0x82d8 <x_2nd_tile_nxf>
    82e8:	11 97       	sbiw	r26, 0x01	; 1

000082ea <x_1st_tile_nxf>:
    82ea:	a2 0f       	add	r26, r18
    82ec:	b9 1f       	adc	r27, r25

000082ee <x_check_end>:
    82ee:	68 e0       	ldi	r22, 0x08	; 8
    82f0:	28 e0       	ldi	r18, 0x08	; 8
    82f2:	23 1b       	sub	r18, r19
    82f4:	50 fd       	sbrc	r21, 0
    82f6:	09 c0       	rjmp	.+18     	; 0x830a <y_2nd_tile>
    82f8:	63 9f       	mul	r22, r19
    82fa:	a0 0d       	add	r26, r0
    82fc:	b1 1d       	adc	r27, r1
    82fe:	71 fd       	sbrc	r23, 1
    8300:	e8 5c       	subi	r30, 0xC8	; 200
    8302:	71 fd       	sbrc	r23, 1
    8304:	ff 4f       	sbci	r31, 0xFF	; 255
    8306:	12 2e       	mov	r1, r18
    8308:	08 c0       	rjmp	.+16     	; 0x831a <y_check_end>

0000830a <y_2nd_tile>:
    830a:	13 2e       	mov	r1, r19
    830c:	1a 94       	dec	r1
    830e:	71 ff       	sbrs	r23, 1
    8310:	12 2e       	mov	r1, r18
    8312:	61 9d       	mul	r22, r1
    8314:	e0 0d       	add	r30, r0
    8316:	f1 1d       	adc	r31, r1
    8318:	13 2e       	mov	r1, r19

0000831a <y_check_end>:
    831a:	71 fd       	sbrc	r23, 1
    831c:	40 97       	sbiw	r24, 0x10	; 16
    831e:	70 fd       	sbrc	r23, 0
    8320:	05 c0       	rjmp	.+10     	; 0x832c <x_diff_xf>
    8322:	57 ef       	ldi	r21, 0xF7	; 247
    8324:	54 0f       	add	r21, r20
    8326:	70 e0       	ldi	r23, 0x00	; 0
    8328:	61 e0       	ldi	r22, 0x01	; 1
    832a:	04 c0       	rjmp	.+8      	; 0x8334 <x_diff_end>

0000832c <x_diff_xf>:
    832c:	59 ef       	ldi	r21, 0xF9	; 249
    832e:	54 1b       	sub	r21, r20
    8330:	7f ef       	ldi	r23, 0xFF	; 255
    8332:	6f ef       	ldi	r22, 0xFF	; 255

00008334 <x_diff_end>:
    8334:	3e ef       	ldi	r19, 0xFE	; 254
    8336:	04 2e       	mov	r0, r20
    8338:	46 95       	lsr	r20
    833a:	30 f4       	brcc	.+12     	; 0x8348 <x_loop1>
    833c:	61 f0       	breq	.+24     	; 0x8356 <x_loopx>

0000833e <x_loop0>:
    833e:	25 91       	lpm	r18, Z+
    8340:	23 13       	cpse	r18, r19
    8342:	2c 93       	st	X, r18
    8344:	a6 0f       	add	r26, r22
    8346:	b7 1f       	adc	r27, r23

00008348 <x_loop1>:
    8348:	25 91       	lpm	r18, Z+
    834a:	23 13       	cpse	r18, r19
    834c:	2c 93       	st	X, r18
    834e:	a6 0f       	add	r26, r22
    8350:	b7 1f       	adc	r27, r23
    8352:	41 50       	subi	r20, 0x01	; 1
    8354:	a1 f7       	brne	.-24     	; 0x833e <x_loop0>

00008356 <x_loopx>:
    8356:	25 91       	lpm	r18, Z+
    8358:	23 13       	cpse	r18, r19
    835a:	2c 93       	st	X, r18
    835c:	1a 94       	dec	r1
    835e:	49 f0       	breq	.+18     	; 0x8372 <loop_e>
    8360:	e8 0f       	add	r30, r24
    8362:	f9 1f       	adc	r31, r25
    8364:	a5 1b       	sub	r26, r21
    8366:	bf 4f       	sbci	r27, 0xFF	; 255
    8368:	40 2d       	mov	r20, r0
    836a:	46 95       	lsr	r20
    836c:	68 f7       	brcc	.-38     	; 0x8348 <x_loop1>
    836e:	39 f7       	brne	.-50     	; 0x833e <x_loop0>
    8370:	f2 cf       	rjmp	.-28     	; 0x8356 <x_loopx>

00008372 <loop_e>:
    8372:	08 95       	ret

00008374 <__vector_13>:
    8374:	0f 92       	push	r0
    8376:	1f 92       	push	r1
    8378:	ef 93       	push	r30
    837a:	ff 93       	push	r31
    837c:	ff b7       	in	r31, 0x3f	; 63
    837e:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8382:	ff 93       	push	r31
    8384:	e2 fd       	sbrc	r30, 2
    8386:	04 c0       	rjmp	.+8      	; 0x8390 <__vector_13+0x1c>
    8388:	e1 fd       	sbrc	r30, 1
    838a:	02 c0       	rjmp	.+4      	; 0x8390 <__vector_13+0x1c>
    838c:	00 00       	nop
    838e:	00 c0       	rjmp	.+0      	; 0x8390 <__vector_13+0x1c>
    8390:	e0 ff       	sbrs	r30, 0
    8392:	00 c0       	rjmp	.+0      	; 0x8394 <__vector_13+0x20>
    8394:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8398:	ea 95       	dec	r30
    839a:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    839e:	f0 91 60 08 	lds	r31, 0x0860	; 0x800860 <sync_phase>
    83a2:	f0 fd       	sbrc	r31, 0
    83a4:	51 c0       	rjmp	.+162    	; 0x8448 <sync_hsync>
    83a6:	ec 30       	cpi	r30, 0x0C	; 12
    83a8:	98 f0       	brcs	.+38     	; 0x83d0 <sync_eq>
    83aa:	f3 e0       	ldi	r31, 0x03	; 3
    83ac:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    83b0:	fd e8       	ldi	r31, 0x8D	; 141
    83b2:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    83b6:	e0 fb       	bst	r30, 0
    83b8:	28 98       	cbi	0x05, 0	; 5
    83ba:	26 f4       	brtc	.+8      	; 0x83c4 <sync_pre_eq_no_sound_update>
    83bc:	e1 e0       	ldi	r30, 0x01	; 1
    83be:	0e 94 ac 42 	call	0x8558	; 0x8558 <update_sound>
    83c2:	b2 c0       	rjmp	.+356    	; 0x8528 <sync_end>

000083c4 <sync_pre_eq_no_sound_update>:
    83c4:	e5 e1       	ldi	r30, 0x15	; 21
    83c6:	ea 95       	dec	r30
    83c8:	f1 f7       	brne	.-4      	; 0x83c6 <sync_pre_eq_no_sound_update+0x2>
    83ca:	00 00       	nop
    83cc:	28 9a       	sbi	0x05, 0	; 5
    83ce:	ac c0       	rjmp	.+344    	; 0x8528 <sync_end>

000083d0 <sync_eq>:
    83d0:	e6 30       	cpi	r30, 0x06	; 6
    83d2:	08 f1       	brcs	.+66     	; 0x8416 <sync_post_eq>
    83d4:	00 c0       	rjmp	.+0      	; 0x83d6 <sync_eq+0x6>
    83d6:	00 c0       	rjmp	.+0      	; 0x83d8 <sync_eq+0x8>
    83d8:	28 98       	cbi	0x05, 0	; 5
    83da:	e0 fb       	bst	r30, 0
    83dc:	e4 e0       	ldi	r30, 0x04	; 4
    83de:	16 f4       	brtc	.+4      	; 0x83e4 <sync_eq_skip>
    83e0:	0e 94 ac 42 	call	0x8558	; 0x8558 <update_sound>

000083e4 <sync_eq_skip>:
    83e4:	e4 e0       	ldi	r30, 0x04	; 4
    83e6:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    83ea:	e6 e0       	ldi	r30, 0x06	; 6
    83ec:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    83f0:	9b c0       	rjmp	.+310    	; 0x8528 <sync_end>

000083f2 <__vector_14>:
    83f2:	ef 93       	push	r30
    83f4:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    83f8:	e2 fd       	sbrc	r30, 2
    83fa:	04 c0       	rjmp	.+8      	; 0x8404 <__vector_14+0x12>
    83fc:	e1 fd       	sbrc	r30, 1
    83fe:	02 c0       	rjmp	.+4      	; 0x8404 <__vector_14+0x12>
    8400:	00 00       	nop
    8402:	00 c0       	rjmp	.+0      	; 0x8404 <__vector_14+0x12>
    8404:	e0 ff       	sbrs	r30, 0
    8406:	00 c0       	rjmp	.+0      	; 0x8408 <__vector_14+0x16>
    8408:	e2 e0       	ldi	r30, 0x02	; 2
    840a:	00 00       	nop
    840c:	28 9a       	sbi	0x05, 0	; 5
    840e:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8412:	ef 91       	pop	r30
    8414:	18 95       	reti

00008416 <sync_post_eq>:
    8416:	00 c0       	rjmp	.+0      	; 0x8418 <sync_post_eq+0x2>
    8418:	e0 fb       	bst	r30, 0
    841a:	28 98       	cbi	0x05, 0	; 5
    841c:	26 f4       	brtc	.+8      	; 0x8426 <sync_post_eq_no_sound_update>
    841e:	e1 e0       	ldi	r30, 0x01	; 1
    8420:	0e 94 ac 42 	call	0x8558	; 0x8558 <update_sound>
    8424:	05 c0       	rjmp	.+10     	; 0x8430 <sync_pre_eq_cont>

00008426 <sync_post_eq_no_sound_update>:
    8426:	e5 e1       	ldi	r30, 0x15	; 21
    8428:	ea 95       	dec	r30
    842a:	f1 f7       	brne	.-4      	; 0x8428 <sync_post_eq_no_sound_update+0x2>
    842c:	00 00       	nop
    842e:	28 9a       	sbi	0x05, 0	; 5

00008430 <sync_pre_eq_cont>:
    8430:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8434:	e0 30       	cpi	r30, 0x00	; 0
    8436:	09 f0       	breq	.+2      	; 0x843a <sync_pre_eq_cont+0xa>
    8438:	77 c0       	rjmp	.+238    	; 0x8528 <sync_end>
    843a:	ed ef       	ldi	r30, 0xFD	; 253
    843c:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    8440:	e1 e0       	ldi	r30, 0x01	; 1
    8442:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    8446:	70 c0       	rjmp	.+224    	; 0x8528 <sync_end>

00008448 <sync_hsync>:
    8448:	e7 e0       	ldi	r30, 0x07	; 7
    844a:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    844e:	eb e1       	ldi	r30, 0x1B	; 27
    8450:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8454:	00 c0       	rjmp	.+0      	; 0x8456 <sync_hsync+0xe>
    8456:	28 98       	cbi	0x05, 0	; 5
    8458:	e2 e0       	ldi	r30, 0x02	; 2
    845a:	00 c0       	rjmp	.+0      	; 0x845c <sync_hsync+0x14>
    845c:	0e 94 ac 42 	call	0x8558	; 0x8558 <update_sound>
    8460:	fd ef       	ldi	r31, 0xFD	; 253
    8462:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    8466:	f0 19       	sub	r31, r0
    8468:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    846c:	ef 17       	cp	r30, r31
    846e:	d8 f4       	brcc	.+54     	; 0x84a6 <no_render>
    8470:	fd ef       	ldi	r31, 0xFD	; 253
    8472:	00 90 67 08 	lds	r0, 0x0867	; 0x800867 <first_render_line>
    8476:	f0 19       	sub	r31, r0
    8478:	00 90 68 08 	lds	r0, 0x0868	; 0x800868 <render_lines_count>
    847c:	f0 19       	sub	r31, r0
    847e:	ef 17       	cp	r30, r31
    8480:	90 f0       	brcs	.+36     	; 0x84a6 <no_render>
    8482:	ed e1       	ldi	r30, 0x1D	; 29
    8484:	ff 27       	eor	r31, r31

00008486 <push_loop>:
    8486:	00 80       	ld	r0, Z
    8488:	0f 92       	push	r0
    848a:	ea 95       	dec	r30
    848c:	e1 f7       	brne	.-8      	; 0x8486 <push_loop>
    848e:	0d e0       	ldi	r16, 0x0D	; 13
    8490:	0a 95       	dec	r16
    8492:	f1 f7       	brne	.-4      	; 0x8490 <push_loop+0xa>
    8494:	00 c0       	rjmp	.+0      	; 0x8496 <push_loop+0x10>
    8496:	0e 94 71 3e 	call	0x7ce2	; 0x7ce2 <sub_video_mode3>
    849a:	e1 e0       	ldi	r30, 0x01	; 1
    849c:	ff 27       	eor	r31, r31

0000849e <pop_loop>:
    849e:	0f 90       	pop	r0
    84a0:	01 92       	st	Z+, r0
    84a2:	ee 31       	cpi	r30, 0x1E	; 30
    84a4:	e0 f3       	brcs	.-8      	; 0x849e <pop_loop>

000084a6 <no_render>:
    84a6:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    84aa:	e0 30       	cpi	r30, 0x00	; 0
    84ac:	09 f0       	breq	.+2      	; 0x84b0 <no_render+0xa>
    84ae:	3c c0       	rjmp	.+120    	; 0x8528 <sync_end>
    84b0:	2f 93       	push	r18
    84b2:	3f 93       	push	r19
    84b4:	4f 93       	push	r20
    84b6:	5f 93       	push	r21
    84b8:	6f 93       	push	r22
    84ba:	7f 93       	push	r23
    84bc:	8f 93       	push	r24
    84be:	9f 93       	push	r25
    84c0:	af 93       	push	r26
    84c2:	bf 93       	push	r27
    84c4:	78 94       	sei
    84c6:	11 24       	eor	r1, r1
    84c8:	ee 27       	eor	r30, r30
    84ca:	e0 93 60 08 	sts	0x0860, r30	; 0x800860 <sync_phase>
    84ce:	e2 e1       	ldi	r30, 0x12	; 18
    84d0:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    84d4:	80 91 71 08 	lds	r24, 0x0871	; 0x800871 <vsync_counter>
    84d8:	90 91 72 08 	lds	r25, 0x0872	; 0x800872 <vsync_counter+0x1>
    84dc:	01 96       	adiw	r24, 0x01	; 1
    84de:	80 93 71 08 	sts	0x0871, r24	; 0x800871 <vsync_counter>
    84e2:	90 93 72 08 	sts	0x0872, r25	; 0x800872 <vsync_counter+0x1>
    84e6:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <pre_vsync_user_callback>
    84ea:	f0 91 64 08 	lds	r31, 0x0864	; 0x800864 <pre_vsync_user_callback+0x1>
    84ee:	e1 15       	cp	r30, r1
    84f0:	f1 05       	cpc	r31, r1
    84f2:	09 f0       	breq	.+2      	; 0x84f6 <no_render+0x50>
    84f4:	09 95       	icall
    84f6:	0e 94 ef 43 	call	0x87de	; 0x87de <ReadControllers>
    84fa:	0e 94 9a 50 	call	0xa134	; 0xa134 <VideoModeVsync>
    84fe:	0e 94 a6 42 	call	0x854c	; 0x854c <process_music>
    8502:	11 24       	eor	r1, r1
    8504:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <post_vsync_user_callback>
    8508:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <post_vsync_user_callback+0x1>
    850c:	e1 15       	cp	r30, r1
    850e:	f1 05       	cpc	r31, r1
    8510:	09 f0       	breq	.+2      	; 0x8514 <no_render+0x6e>
    8512:	09 95       	icall
    8514:	bf 91       	pop	r27
    8516:	af 91       	pop	r26
    8518:	9f 91       	pop	r25
    851a:	8f 91       	pop	r24
    851c:	7f 91       	pop	r23
    851e:	6f 91       	pop	r22
    8520:	5f 91       	pop	r21
    8522:	4f 91       	pop	r20
    8524:	3f 91       	pop	r19
    8526:	2f 91       	pop	r18

00008528 <sync_end>:
    8528:	ef 91       	pop	r30
    852a:	ef bf       	out	0x3f, r30	; 63
    852c:	ff 91       	pop	r31
    852e:	ef 91       	pop	r30
    8530:	1f 90       	pop	r1
    8532:	0f 90       	pop	r0
    8534:	18 95       	reti

00008536 <hsync_pulse>:
    8536:	28 98       	cbi	0x05, 0	; 5
    8538:	e2 e0       	ldi	r30, 0x02	; 2
    853a:	00 c0       	rjmp	.+0      	; 0x853c <hsync_pulse+0x6>
    853c:	0e 94 ac 42 	call	0x8558	; 0x8558 <update_sound>
    8540:	e0 91 61 08 	lds	r30, 0x0861	; 0x800861 <sync_pulse>
    8544:	ea 95       	dec	r30
    8546:	e0 93 61 08 	sts	0x0861, r30	; 0x800861 <sync_pulse>
    854a:	08 95       	ret

0000854c <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    854c:	e0 91 75 08 	lds	r30, 0x0875	; 0x800875 <sound_enabled>
    8550:	e0 fd       	sbrc	r30, 0
    8552:	0e 94 64 46 	call	0x8cc8	; 0x8cc8 <ProcessMusic>
    8556:	08 95       	ret

00008558 <update_sound>:
    8558:	2f 93       	push	r18
    855a:	1f 93       	push	r17
    855c:	0f 93       	push	r16
    855e:	2e 2f       	mov	r18, r30
    8560:	10 91 79 08 	lds	r17, 0x0879	; 0x800879 <tr1_pos_frac>
    8564:	e0 91 7a 08 	lds	r30, 0x087A	; 0x80087a <tr1_pos_lo>
    8568:	f0 91 7b 08 	lds	r31, 0x087B	; 0x80087b <tr1_pos_hi>
    856c:	00 91 77 08 	lds	r16, 0x0877	; 0x800877 <tr1_step_lo>
    8570:	10 0f       	add	r17, r16
    8572:	00 91 78 08 	lds	r16, 0x0878	; 0x800878 <tr1_step_hi>
    8576:	e0 1f       	adc	r30, r16
    8578:	04 91       	lpm	r16, Z
    857a:	e0 93 7a 08 	sts	0x087A, r30	; 0x80087a <tr1_pos_lo>
    857e:	10 93 79 08 	sts	0x0879, r17	; 0x800879 <tr1_pos_frac>
    8582:	10 91 76 08 	lds	r17, 0x0876	; 0x800876 <mixer>
    8586:	01 03       	mulsu	r16, r17
    8588:	00 08       	sbc	r0, r0
    858a:	10 91 7f 08 	lds	r17, 0x087F	; 0x80087f <tr2_pos_frac>
    858e:	e0 91 80 08 	lds	r30, 0x0880	; 0x800880 <tr2_pos_lo>
    8592:	f0 91 81 08 	lds	r31, 0x0881	; 0x800881 <tr2_pos_hi>
    8596:	00 91 7d 08 	lds	r16, 0x087D	; 0x80087d <tr2_step_lo>
    859a:	10 0f       	add	r17, r16
    859c:	00 91 7e 08 	lds	r16, 0x087E	; 0x80087e <tr2_step_hi>
    85a0:	e0 1f       	adc	r30, r16
    85a2:	04 91       	lpm	r16, Z
    85a4:	e0 93 80 08 	sts	0x0880, r30	; 0x800880 <tr2_pos_lo>
    85a8:	10 93 7f 08 	sts	0x087F, r17	; 0x80087f <tr2_pos_frac>
    85ac:	f0 01       	movw	r30, r0
    85ae:	10 91 7c 08 	lds	r17, 0x087C	; 0x80087c <tr2_vol>
    85b2:	01 03       	mulsu	r16, r17
    85b4:	00 08       	sbc	r0, r0
    85b6:	1f 0e       	add	r1, r31
    85b8:	10 91 85 08 	lds	r17, 0x0885	; 0x800885 <tr3_pos_frac>
    85bc:	20 fd       	sbrc	r18, 0
    85be:	28 9a       	sbi	0x05, 0	; 5
    85c0:	0e 1e       	adc	r0, r30
    85c2:	e0 91 86 08 	lds	r30, 0x0886	; 0x800886 <tr3_pos_lo>
    85c6:	f0 91 87 08 	lds	r31, 0x0887	; 0x800887 <tr3_pos_hi>
    85ca:	00 91 83 08 	lds	r16, 0x0883	; 0x800883 <tr3_step_lo>
    85ce:	10 0f       	add	r17, r16
    85d0:	00 91 84 08 	lds	r16, 0x0884	; 0x800884 <tr3_step_hi>
    85d4:	e0 1f       	adc	r30, r16
    85d6:	04 91       	lpm	r16, Z
    85d8:	e0 93 86 08 	sts	0x0886, r30	; 0x800886 <tr3_pos_lo>
    85dc:	10 93 85 08 	sts	0x0885, r17	; 0x800885 <tr3_pos_frac>
    85e0:	f0 01       	movw	r30, r0
    85e2:	10 91 82 08 	lds	r17, 0x0882	; 0x800882 <tr3_vol>
    85e6:	01 03       	mulsu	r16, r17
    85e8:	00 08       	sbc	r0, r0
    85ea:	1f 0e       	add	r1, r31
    85ec:	0e 1e       	adc	r0, r30
    85ee:	00 91 8a 08 	lds	r16, 0x088A	; 0x80088a <tr4_barrel_lo>
    85f2:	10 91 8b 08 	lds	r17, 0x088B	; 0x80088b <tr4_barrel_hi>
    85f6:	f0 91 88 08 	lds	r31, 0x0888	; 0x800888 <tr4_vol>
    85fa:	f6 95       	lsr	r31
    85fc:	88 94       	clc
    85fe:	00 fd       	sbrc	r16, 0
    8600:	f1 95       	neg	r31
    8602:	ee 0b       	sbc	r30, r30
    8604:	1f 0e       	add	r1, r31
    8606:	0e 1e       	adc	r0, r30
    8608:	e0 91 8c 08 	lds	r30, 0x088C	; 0x80088c <tr4_divider>
    860c:	e2 50       	subi	r30, 0x02	; 2
    860e:	20 f0       	brcs	.+8      	; 0x8618 <ch4_shift>
    8610:	e4 91       	lpm	r30, Z
    8612:	e4 91       	lpm	r30, Z
    8614:	e4 91       	lpm	r30, Z
    8616:	0a c0       	rjmp	.+20     	; 0x862c <ch4_end>

00008618 <ch4_shift>:
    8618:	e0 2f       	mov	r30, r16
    861a:	16 95       	lsr	r17
    861c:	07 95       	ror	r16
    861e:	e0 27       	eor	r30, r16
    8620:	e0 fb       	bst	r30, 0
    8622:	16 f9       	bld	r17, 6
    8624:	e0 91 89 08 	lds	r30, 0x0889	; 0x800889 <tr4_params>
    8628:	e0 ff       	sbrs	r30, 0
    862a:	06 f9       	bld	r16, 6

0000862c <ch4_end>:
    862c:	00 93 8a 08 	sts	0x088A, r16	; 0x80088a <tr4_barrel_lo>
    8630:	10 93 8b 08 	sts	0x088B, r17	; 0x80088b <tr4_barrel_hi>
    8634:	e0 93 8c 08 	sts	0x088C, r30	; 0x80088c <tr4_divider>
    8638:	10 e0       	ldi	r17, 0x00	; 0
    863a:	e0 91 91 08 	lds	r30, 0x0891	; 0x800891 <tr5_pos_frac>
    863e:	f0 91 8f 08 	lds	r31, 0x088F	; 0x80088f <tr5_step_lo>
    8642:	21 fd       	sbrc	r18, 1
    8644:	28 9a       	sbi	0x05, 0	; 5
    8646:	ef 0f       	add	r30, r31
    8648:	e0 93 91 08 	sts	0x0891, r30	; 0x800891 <tr5_pos_frac>
    864c:	e0 91 92 08 	lds	r30, 0x0892	; 0x800892 <tr5_pos_lo>
    8650:	f0 91 93 08 	lds	r31, 0x0893	; 0x800893 <tr5_pos_hi>
    8654:	00 91 90 08 	lds	r16, 0x0890	; 0x800890 <tr5_step_hi>
    8658:	e0 1f       	adc	r30, r16
    865a:	f1 1f       	adc	r31, r17
    865c:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_end_lo>
    8660:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_end_hi>
    8664:	e0 17       	cp	r30, r16
    8666:	f1 07       	cpc	r31, r17
    8668:	18 f4       	brcc	.+6      	; 0x8670 <ch5_reset>
    866a:	04 91       	lpm	r16, Z
    866c:	00 c0       	rjmp	.+0      	; 0x866e <ch4_end+0x42>
    866e:	06 c0       	rjmp	.+12     	; 0x867c <ch5_nores>

00008670 <ch5_reset>:
    8670:	00 91 94 08 	lds	r16, 0x0894	; 0x800894 <tr5_loop_len_lo>
    8674:	10 91 95 08 	lds	r17, 0x0895	; 0x800895 <tr5_loop_len_hi>
    8678:	e0 1b       	sub	r30, r16
    867a:	f1 0b       	sbc	r31, r17

0000867c <ch5_nores>:
    867c:	e0 93 92 08 	sts	0x0892, r30	; 0x800892 <tr5_pos_lo>
    8680:	f0 93 93 08 	sts	0x0893, r31	; 0x800893 <tr5_pos_hi>
    8684:	04 91       	lpm	r16, Z
    8686:	f0 01       	movw	r30, r0
    8688:	10 91 8e 08 	lds	r17, 0x088E	; 0x80088e <tr5_vol>
    868c:	01 03       	mulsu	r16, r17
    868e:	00 08       	sbc	r0, r0
    8690:	1f 0e       	add	r1, r31
    8692:	0e 1e       	adc	r0, r30
    8694:	f0 01       	movw	r30, r0
    8696:	0f 91       	pop	r16
    8698:	1f 91       	pop	r17
    869a:	f0 58       	subi	r31, 0x80	; 128
    869c:	ef 4f       	sbci	r30, 0xFF	; 255
    869e:	1a f4       	brpl	.+6      	; 0x86a6 <ch5_nores+0x2a>
    86a0:	f0 e0       	ldi	r31, 0x00	; 0
    86a2:	00 00       	nop
    86a4:	03 c0       	rjmp	.+6      	; 0x86ac <ch5_nores+0x30>
    86a6:	e0 30       	cpi	r30, 0x00	; 0
    86a8:	09 f0       	breq	.+2      	; 0x86ac <ch5_nores+0x30>
    86aa:	ff ef       	ldi	r31, 0xFF	; 255
    86ac:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    86b0:	2f 91       	pop	r18
    86b2:	08 95       	ret

000086b4 <SetSpritesTileTable>:
    86b4:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <sprites_tile_banks>
    86b8:	90 93 4f 08 	sts	0x084F, r25	; 0x80084f <sprites_tile_banks+0x1>
    86bc:	08 95       	ret

000086be <ClearVram>:
    86be:	e0 e2       	ldi	r30, 0x20	; 32
    86c0:	f4 e0       	ldi	r31, 0x04	; 4
    86c2:	a0 e0       	ldi	r26, 0x00	; 0
    86c4:	bb e0       	ldi	r27, 0x0B	; 11
    86c6:	6b e1       	ldi	r22, 0x1B	; 27

000086c8 <fill_vram_loop>:
    86c8:	6d 93       	st	X+, r22
    86ca:	31 97       	sbiw	r30, 0x01	; 1
    86cc:	e9 f7       	brne	.-6      	; 0x86c8 <fill_vram_loop>
    86ce:	11 24       	eor	r1, r1
    86d0:	08 95       	ret

000086d2 <SetTile>:
    86d2:	8f 71       	andi	r24, 0x1F	; 31
    86d4:	76 2f       	mov	r23, r22
    86d6:	66 95       	lsr	r22
    86d8:	66 95       	lsr	r22
    86da:	66 95       	lsr	r22
    86dc:	28 e0       	ldi	r18, 0x08	; 8
    86de:	82 9f       	mul	r24, r18
    86e0:	d0 01       	movw	r26, r0
    86e2:	a0 50       	subi	r26, 0x00	; 0
    86e4:	b5 4f       	sbci	r27, 0xF5	; 245
    86e6:	b6 0f       	add	r27, r22
    86e8:	77 70       	andi	r23, 0x07	; 7
    86ea:	a7 0f       	add	r26, r23
    86ec:	45 5e       	subi	r20, 0xE5	; 229
    86ee:	4c 93       	st	X, r20
    86f0:	11 24       	eor	r1, r1
    86f2:	08 95       	ret

000086f4 <SetTileTable>:
    86f4:	80 93 56 08 	sts	0x0856, r24	; 0x800856 <tile_table_lo>
    86f8:	90 93 57 08 	sts	0x0857, r25	; 0x800857 <tile_table_hi>
    86fc:	08 95       	ret

000086fe <GetVsyncFlag>:
    86fe:	80 91 62 08 	lds	r24, 0x0862	; 0x800862 <sync_flags>
    8702:	81 70       	andi	r24, 0x01	; 1
    8704:	08 95       	ret

00008706 <ClearVsyncFlag>:
    8706:	20 91 62 08 	lds	r18, 0x0862	; 0x800862 <sync_flags>
    870a:	2e 7f       	andi	r18, 0xFE	; 254
    870c:	20 93 62 08 	sts	0x0862, r18	; 0x800862 <sync_flags>
    8710:	08 95       	ret

00008712 <ReadJoypad>:
    8712:	88 23       	and	r24, r24
    8714:	29 f4       	brne	.+10     	; 0x8720 <rj_p2>
    8716:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    871a:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    871e:	08 95       	ret

00008720 <rj_p2>:
    8720:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    8724:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    8728:	08 95       	ret

0000872a <SoftReset>:
    872a:	e0 e6       	ldi	r30, 0x60	; 96
    872c:	f0 e0       	ldi	r31, 0x00	; 0
    872e:	80 81       	ld	r24, Z
    8730:	83 fd       	sbrc	r24, 3
    8732:	08 95       	ret
    8734:	88 e1       	ldi	r24, 0x18	; 24
    8736:	98 e0       	ldi	r25, 0x08	; 8
    8738:	f8 94       	cli
    873a:	80 83       	st	Z, r24
    873c:	90 83       	st	Z, r25
    873e:	78 94       	sei
    8740:	ff cf       	rjmp	.-2      	; 0x8740 <SoftReset+0x16>

00008742 <WriteEeprom>:
    8742:	f9 99       	sbic	0x1f, 1	; 31
    8744:	fe cf       	rjmp	.-4      	; 0x8742 <WriteEeprom>
    8746:	92 bd       	out	0x22, r25	; 34
    8748:	81 bd       	out	0x21, r24	; 33
    874a:	60 bd       	out	0x20, r22	; 32
    874c:	f8 94       	cli
    874e:	fa 9a       	sbi	0x1f, 2	; 31
    8750:	f9 9a       	sbi	0x1f, 1	; 31
    8752:	78 94       	sei
    8754:	08 95       	ret

00008756 <ReadEeprom>:
    8756:	f9 99       	sbic	0x1f, 1	; 31
    8758:	fe cf       	rjmp	.-4      	; 0x8756 <ReadEeprom>
    875a:	92 bd       	out	0x22, r25	; 34
    875c:	81 bd       	out	0x21, r24	; 33
    875e:	f8 94       	cli
    8760:	f8 9a       	sbi	0x1f, 0	; 31
    8762:	80 b5       	in	r24, 0x20	; 32
    8764:	78 94       	sei
    8766:	08 95       	ret

00008768 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    8768:	80 93 65 08 	sts	0x0865, r24	; 0x800865 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    876c:	90 93 66 08 	sts	0x0866, r25	; 0x800866 <post_vsync_user_callback+0x1>
	ret
    8770:	08 95       	ret

00008772 <ReadButtons>:
    8772:	12 9a       	sbi	0x02, 2	; 2
    8774:	c8 95       	lpm
    8776:	c8 95       	lpm
    8778:	c8 95       	lpm
    877a:	c8 95       	lpm
    877c:	12 98       	cbi	0x02, 2	; 2
    877e:	40 e1       	ldi	r20, 0x10	; 16
    8780:	80 e0       	ldi	r24, 0x00	; 0
    8782:	90 e0       	ldi	r25, 0x00	; 0
    8784:	20 e0       	ldi	r18, 0x00	; 0
    8786:	30 e0       	ldi	r19, 0x00	; 0
    8788:	36 95       	lsr	r19
    878a:	27 95       	ror	r18
    878c:	96 95       	lsr	r25
    878e:	87 95       	ror	r24
    8790:	c8 95       	lpm
    8792:	c8 95       	lpm
    8794:	c8 95       	lpm
    8796:	c8 95       	lpm
    8798:	13 98       	cbi	0x02, 3	; 2
    879a:	00 9b       	sbis	0x00, 0	; 0
    879c:	30 68       	ori	r19, 0x80	; 128
    879e:	01 9b       	sbis	0x00, 1	; 0
    87a0:	90 68       	ori	r25, 0x80	; 128
    87a2:	13 9a       	sbi	0x02, 3	; 2
    87a4:	c8 95       	lpm
    87a6:	c8 95       	lpm
    87a8:	c8 95       	lpm
    87aa:	c8 95       	lpm
    87ac:	41 50       	subi	r20, 0x01	; 1
    87ae:	61 f7       	brne	.-40     	; 0x8788 <ReadButtons+0x16>
    87b0:	30 93 6a 08 	sts	0x086A, r19	; 0x80086a <joypad1_status_lo+0x1>
    87b4:	20 93 69 08 	sts	0x0869, r18	; 0x800869 <joypad1_status_lo>
    87b8:	90 93 6e 08 	sts	0x086E, r25	; 0x80086e <joypad2_status_lo+0x1>
    87bc:	80 93 6d 08 	sts	0x086D, r24	; 0x80086d <joypad2_status_lo>
    87c0:	80 91 69 08 	lds	r24, 0x0869	; 0x800869 <joypad1_status_lo>
    87c4:	90 91 6a 08 	lds	r25, 0x086A	; 0x80086a <joypad1_status_lo+0x1>
    87c8:	0f 97       	sbiw	r24, 0x0f	; 15
    87ca:	31 f0       	breq	.+12     	; 0x87d8 <ReadButtons+0x66>
    87cc:	80 91 6d 08 	lds	r24, 0x086D	; 0x80086d <joypad2_status_lo>
    87d0:	90 91 6e 08 	lds	r25, 0x086E	; 0x80086e <joypad2_status_lo+0x1>
    87d4:	0f 97       	sbiw	r24, 0x0f	; 15
    87d6:	11 f4       	brne	.+4      	; 0x87dc <ReadButtons+0x6a>
    87d8:	0c 94 95 43 	jmp	0x872a	; 0x872a <SoftReset>
    87dc:	08 95       	ret

000087de <ReadControllers>:
    87de:	10 92 9c 08 	sts	0x089C, r1	; 0x80089c <joypadsConnectionStatus>
    87e2:	00 99       	sbic	0x00, 0	; 0
    87e4:	03 c0       	rjmp	.+6      	; 0x87ec <ReadControllers+0xe>
    87e6:	81 e0       	ldi	r24, 0x01	; 1
    87e8:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    87ec:	01 99       	sbic	0x00, 1	; 0
    87ee:	05 c0       	rjmp	.+10     	; 0x87fa <ReadControllers+0x1c>
    87f0:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <joypadsConnectionStatus>
    87f4:	82 60       	ori	r24, 0x02	; 2
    87f6:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    87fa:	0c 94 b9 43 	jmp	0x8772	; 0x8772 <ReadButtons>

000087fe <FormatEeprom>:
    87fe:	cf 93       	push	r28
    8800:	df 93       	push	r29
    8802:	c0 e0       	ldi	r28, 0x00	; 0
    8804:	d0 e0       	ldi	r29, 0x00	; 0
    8806:	fe 01       	movw	r30, r28
    8808:	ee 55       	subi	r30, 0x5E	; 94
    880a:	ff 4f       	sbci	r31, 0xFF	; 255
    880c:	64 91       	lpm	r22, Z
    880e:	ce 01       	movw	r24, r28
    8810:	0e 94 a1 43 	call	0x8742	; 0x8742 <WriteEeprom>
    8814:	21 96       	adiw	r28, 0x01	; 1
    8816:	c0 32       	cpi	r28, 0x20	; 32
    8818:	d1 05       	cpc	r29, r1
    881a:	a9 f7       	brne	.-22     	; 0x8806 <FormatEeprom+0x8>
    881c:	c0 e2       	ldi	r28, 0x20	; 32
    881e:	d0 e0       	ldi	r29, 0x00	; 0
    8820:	6f ef       	ldi	r22, 0xFF	; 255
    8822:	ce 01       	movw	r24, r28
    8824:	0e 94 a1 43 	call	0x8742	; 0x8742 <WriteEeprom>
    8828:	6f ef       	ldi	r22, 0xFF	; 255
    882a:	ce 01       	movw	r24, r28
    882c:	01 96       	adiw	r24, 0x01	; 1
    882e:	0e 94 a1 43 	call	0x8742	; 0x8742 <WriteEeprom>
    8832:	a0 96       	adiw	r28, 0x20	; 32
    8834:	c1 15       	cp	r28, r1
    8836:	88 e0       	ldi	r24, 0x08	; 8
    8838:	d8 07       	cpc	r29, r24
    883a:	91 f7       	brne	.-28     	; 0x8820 <FormatEeprom+0x22>
    883c:	df 91       	pop	r29
    883e:	cf 91       	pop	r28
    8840:	08 95       	ret

00008842 <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    8842:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    8844:	80 e0       	ldi	r24, 0x00	; 0
    8846:	90 e0       	ldi	r25, 0x00	; 0
    8848:	0e 94 ab 43 	call	0x8756	; 0x8756 <ReadEeprom>
    884c:	c8 2f       	mov	r28, r24
    884e:	81 e0       	ldi	r24, 0x01	; 1
    8850:	90 e0       	ldi	r25, 0x00	; 0
    8852:	0e 94 ab 43 	call	0x8756	; 0x8756 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    8856:	28 2f       	mov	r18, r24
    8858:	30 e0       	ldi	r19, 0x00	; 0
    885a:	32 2f       	mov	r19, r18
    885c:	22 27       	eor	r18, r18
    885e:	2c 0f       	add	r18, r28
    8860:	31 1d       	adc	r19, r1
    8862:	81 e0       	ldi	r24, 0x01	; 1
    8864:	2a 35       	cpi	r18, 0x5A	; 90
    8866:	35 45       	sbci	r19, 0x55	; 85
    8868:	09 f0       	breq	.+2      	; 0x886c <isEepromFormatted+0x2a>
    886a:	80 e0       	ldi	r24, 0x00	; 0
}
    886c:	cf 91       	pop	r28
    886e:	08 95       	ret

00008870 <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    8870:	fc 01       	movw	r30, r24
    8872:	67 87       	std	Z+15, r22	; 0x0f
    8874:	08 95       	ret

00008876 <PatchCommand01>:
    8876:	e6 e7       	ldi	r30, 0x76	; 118
    8878:	f8 e0       	ldi	r31, 0x08	; 8
    887a:	81 e0       	ldi	r24, 0x01	; 1
    887c:	91 e0       	ldi	r25, 0x01	; 1
    887e:	95 8b       	std	Z+21, r25	; 0x15
    8880:	84 8b       	std	Z+20, r24	; 0x14
    8882:	63 8b       	std	Z+19, r22	; 0x13
    8884:	08 95       	ret

00008886 <PatchCommand05>:
    8886:	fc 01       	movw	r30, r24
    8888:	90 81       	ld	r25, Z
    888a:	9f 75       	andi	r25, 0x5F	; 95
    888c:	90 83       	st	Z, r25
    888e:	08 95       	ret

00008890 <PatchCommand06>:
    8890:	fc 01       	movw	r30, r24
    8892:	90 81       	ld	r25, Z
    8894:	90 64       	ori	r25, 0x40	; 64
    8896:	90 83       	st	Z, r25
    8898:	08 95       	ret

0000889a <PatchCommand07>:
    889a:	fc 01       	movw	r30, r24
    889c:	66 87       	std	Z+14, r22	; 0x0e
    889e:	08 95       	ret

000088a0 <PatchCommand09>:
    88a0:	fc 01       	movw	r30, r24
    88a2:	62 87       	std	Z+10, r22	; 0x0a
    88a4:	08 95       	ret

000088a6 <PatchCommand10>:
    88a6:	fc 01       	movw	r30, r24
    88a8:	63 87       	std	Z+11, r22	; 0x0b
    88aa:	08 95       	ret

000088ac <PatchCommand11>:
    88ac:	cf 93       	push	r28
    88ae:	df 93       	push	r29
    88b0:	ec 01       	movw	r28, r24
    88b2:	26 2f       	mov	r18, r22
    88b4:	89 81       	ldd	r24, Y+1	; 0x01
    88b6:	90 e0       	ldi	r25, 0x00	; 0
    88b8:	fc 01       	movw	r30, r24
    88ba:	ee 0f       	add	r30, r30
    88bc:	ff 1f       	adc	r31, r31
    88be:	e8 51       	subi	r30, 0x18	; 24
    88c0:	ff 46       	sbci	r31, 0x6F	; 111
    88c2:	45 91       	lpm	r20, Z+
    88c4:	54 91       	lpm	r21, Z
    88c6:	fc 01       	movw	r30, r24
    88c8:	e6 0f       	add	r30, r22
    88ca:	f1 1d       	adc	r31, r1
    88cc:	67 fd       	sbrc	r22, 7
    88ce:	fa 95       	dec	r31
    88d0:	ee 0f       	add	r30, r30
    88d2:	ff 1f       	adc	r31, r31
    88d4:	e8 51       	subi	r30, 0x18	; 24
    88d6:	ff 46       	sbci	r31, 0x6F	; 111
    88d8:	85 91       	lpm	r24, Z+
    88da:	94 91       	lpm	r25, Z
    88dc:	84 1b       	sub	r24, r20
    88de:	95 0b       	sbc	r25, r21
    88e0:	68 85       	ldd	r22, Y+8	; 0x08
    88e2:	70 e0       	ldi	r23, 0x00	; 0
    88e4:	0e 94 e6 6b 	call	0xd7cc	; 0xd7cc <__divmodhi4>
    88e8:	61 15       	cp	r22, r1
    88ea:	71 05       	cpc	r23, r1
    88ec:	11 f4       	brne	.+4      	; 0x88f2 <PatchCommand11+0x46>
    88ee:	61 e0       	ldi	r22, 0x01	; 1
    88f0:	70 e0       	ldi	r23, 0x00	; 0
    88f2:	ea 81       	ldd	r30, Y+2	; 0x02
    88f4:	86 e0       	ldi	r24, 0x06	; 6
    88f6:	e8 9f       	mul	r30, r24
    88f8:	f0 01       	movw	r30, r0
    88fa:	11 24       	eor	r1, r1
    88fc:	ea 58       	subi	r30, 0x8A	; 138
    88fe:	f7 4f       	sbci	r31, 0xF7	; 247
    8900:	81 81       	ldd	r24, Z+1	; 0x01
    8902:	92 81       	ldd	r25, Z+2	; 0x02
    8904:	86 0f       	add	r24, r22
    8906:	97 1f       	adc	r25, r23
    8908:	92 83       	std	Z+2, r25	; 0x02
    890a:	81 83       	std	Z+1, r24	; 0x01
    890c:	7e 83       	std	Y+6, r23	; 0x06
    890e:	6d 83       	std	Y+5, r22	; 0x05
    8910:	88 81       	ld	r24, Y
    8912:	88 60       	ori	r24, 0x08	; 8
    8914:	88 83       	st	Y, r24
    8916:	89 81       	ldd	r24, Y+1	; 0x01
    8918:	28 0f       	add	r18, r24
    891a:	2f 83       	std	Y+7, r18	; 0x07
    891c:	df 91       	pop	r29
    891e:	cf 91       	pop	r28
    8920:	08 95       	ret

00008922 <PatchCommand12>:
    8922:	fc 01       	movw	r30, r24
    8924:	60 87       	std	Z+8, r22	; 0x08
    8926:	08 95       	ret

00008928 <PatchCommand13>:
    8928:	fc 01       	movw	r30, r24
    892a:	64 83       	std	Z+4, r22	; 0x04
    892c:	08 95       	ret

0000892e <PatchCommand02>:
    892e:	fc 01       	movw	r30, r24
    8930:	82 81       	ldd	r24, Z+2	; 0x02
    8932:	0c 94 57 48 	jmp	0x90ae	; 0x90ae <SetMixerWave>

00008936 <PatchCommand03>:
    8936:	fc 01       	movw	r30, r24
    8938:	91 81       	ldd	r25, Z+1	; 0x01
    893a:	69 0f       	add	r22, r25
    893c:	61 83       	std	Z+1, r22	; 0x01
    893e:	82 81       	ldd	r24, Z+2	; 0x02
    8940:	0c 94 40 48 	jmp	0x9080	; 0x9080 <SetMixerNote>

00008944 <PatchCommand04>:
    8944:	fc 01       	movw	r30, r24
    8946:	91 81       	ldd	r25, Z+1	; 0x01
    8948:	96 1b       	sub	r25, r22
    894a:	69 2f       	mov	r22, r25
    894c:	91 83       	std	Z+1, r25	; 0x01
    894e:	82 81       	ldd	r24, Z+2	; 0x02
    8950:	0c 94 40 48 	jmp	0x9080	; 0x9080 <SetMixerNote>

00008954 <PatchCommand08>:
    8954:	1f 93       	push	r17
    8956:	cf 93       	push	r28
    8958:	df 93       	push	r29
    895a:	ec 01       	movw	r28, r24
    895c:	16 2f       	mov	r17, r22
    895e:	8a 81       	ldd	r24, Y+2	; 0x02
    8960:	0e 94 40 48 	call	0x9080	; 0x9080 <SetMixerNote>
    8964:	19 83       	std	Y+1, r17	; 0x01
    8966:	88 81       	ld	r24, Y
    8968:	87 7f       	andi	r24, 0xF7	; 247
    896a:	88 83       	st	Y, r24
    896c:	df 91       	pop	r29
    896e:	cf 91       	pop	r28
    8970:	1f 91       	pop	r17
    8972:	08 95       	ret

00008974 <PatchCommand14>:
    8974:	dc 01       	movw	r26, r24
    8976:	14 96       	adiw	r26, 0x04	; 4
    8978:	8c 91       	ld	r24, X
    897a:	14 97       	sbiw	r26, 0x04	; 4
    897c:	88 23       	and	r24, r24
    897e:	19 f1       	breq	.+70     	; 0x89c6 <PatchCommand14+0x52>
    8980:	55 96       	adiw	r26, 0x15	; 21
    8982:	2d 91       	ld	r18, X+
    8984:	3c 91       	ld	r19, X
    8986:	56 97       	sbiw	r26, 0x16	; 22
    8988:	66 23       	and	r22, r22
    898a:	79 f0       	breq	.+30     	; 0x89aa <PatchCommand14+0x36>
    898c:	06 2e       	mov	r0, r22
    898e:	00 0c       	add	r0, r0
    8990:	77 0b       	sbc	r23, r23
    8992:	6f 5f       	subi	r22, 0xFF	; 255
    8994:	7f 4f       	sbci	r23, 0xFF	; 255
    8996:	ab 01       	movw	r20, r22
    8998:	44 0f       	add	r20, r20
    899a:	55 1f       	adc	r21, r21
    899c:	64 0f       	add	r22, r20
    899e:	75 1f       	adc	r23, r21
    89a0:	26 1b       	sub	r18, r22
    89a2:	37 0b       	sbc	r19, r23
    89a4:	09 c0       	rjmp	.+18     	; 0x89b8 <PatchCommand14+0x44>
    89a6:	ef 3f       	cpi	r30, 0xFF	; 255
    89a8:	39 f0       	breq	.+14     	; 0x89b8 <PatchCommand14+0x44>
    89aa:	23 50       	subi	r18, 0x03	; 3
    89ac:	31 09       	sbc	r19, r1
    89ae:	f9 01       	movw	r30, r18
    89b0:	32 97       	sbiw	r30, 0x02	; 2
    89b2:	e4 91       	lpm	r30, Z
    89b4:	ed 30       	cpi	r30, 0x0D	; 13
    89b6:	b9 f7       	brne	.-18     	; 0x89a6 <PatchCommand14+0x32>
    89b8:	56 96       	adiw	r26, 0x16	; 22
    89ba:	3c 93       	st	X, r19
    89bc:	2e 93       	st	-X, r18
    89be:	55 97       	sbiw	r26, 0x15	; 21
    89c0:	81 50       	subi	r24, 0x01	; 1
    89c2:	14 96       	adiw	r26, 0x04	; 4
    89c4:	8c 93       	st	X, r24
    89c6:	08 95       	ret

000089c8 <InitMusicPlayer>:
    89c8:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <patchPointers+0x1>
    89cc:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <patchPointers>
    89d0:	8f e6       	ldi	r24, 0x6F	; 111
    89d2:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <masterVolume>
    89d6:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    89da:	ef e9       	ldi	r30, 0x9F	; 159
    89dc:	f8 e0       	ldi	r31, 0x08	; 8
    89de:	80 e0       	ldi	r24, 0x00	; 0
    89e0:	90 e1       	ldi	r25, 0x10	; 16
    89e2:	3f ef       	ldi	r19, 0xFF	; 255
    89e4:	28 e1       	ldi	r18, 0x18	; 24
    89e6:	82 83       	std	Z+2, r24	; 0x02
    89e8:	90 83       	st	Z, r25
    89ea:	15 86       	std	Z+13, r1	; 0x0d
    89ec:	34 87       	std	Z+12, r19	; 0x0c
    89ee:	10 8a       	std	Z+16, r1	; 0x10
    89f0:	23 87       	std	Z+11, r18	; 0x0b
    89f2:	90 87       	std	Z+8, r25	; 0x08
    89f4:	8f 5f       	subi	r24, 0xFF	; 255
    89f6:	77 96       	adiw	r30, 0x17	; 23
    89f8:	85 30       	cpi	r24, 0x05	; 5
    89fa:	a9 f7       	brne	.-22     	; 0x89e6 <InitMusicPlayer+0x1e>
    89fc:	08 95       	ret

000089fe <StartSong>:
    89fe:	ef e9       	ldi	r30, 0x9F	; 159
    8a00:	f8 e0       	ldi	r31, 0x08	; 8
    8a02:	3f ef       	ldi	r19, 0xFF	; 255
    8a04:	20 81       	ld	r18, Z
    8a06:	2f 77       	andi	r18, 0x7F	; 127
    8a08:	20 83       	st	Z, r18
    8a0a:	33 83       	std	Z+3, r19	; 0x03
    8a0c:	77 96       	adiw	r30, 0x17	; 23
    8a0e:	29 e0       	ldi	r18, 0x09	; 9
    8a10:	e2 31       	cpi	r30, 0x12	; 18
    8a12:	f2 07       	cpc	r31, r18
    8a14:	b9 f7       	brne	.-18     	; 0x8a04 <StartSong+0x6>
    8a16:	01 96       	adiw	r24, 0x01	; 1
    8a18:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8a1c:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    8a20:	90 93 9e 08 	sts	0x089E, r25	; 0x80089e <songStart+0x1>
    8a24:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <songStart>
    8a28:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    8a2c:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    8a30:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <nextDeltaTime+0x1>
    8a34:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <nextDeltaTime>
    8a38:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    8a3c:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    8a40:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <songSpeed>
    8a44:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <lastStatus>
    8a48:	81 e0       	ldi	r24, 0x01	; 1
    8a4a:	80 93 74 08 	sts	0x0874, r24	; 0x800874 <playSong>
    8a4e:	08 95       	ret

00008a50 <StopSong>:
    8a50:	ef e9       	ldi	r30, 0x9F	; 159
    8a52:	f8 e0       	ldi	r31, 0x08	; 8
    8a54:	8a ef       	ldi	r24, 0xFA	; 250
    8a56:	87 87       	std	Z+15, r24	; 0x0f
    8a58:	86 a3       	std	Z+38, r24	; 0x26
    8a5a:	85 af       	std	Z+61, r24	; 0x3d
    8a5c:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <tracks+0x54>
    8a60:	80 93 0a 09 	sts	0x090A, r24	; 0x80090a <tracks+0x6b>
    8a64:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
    8a68:	08 95       	ret

00008a6a <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    8a6a:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    8a6c:	ed 91       	ld	r30, X+
    8a6e:	fc 91       	ld	r31, X
    8a70:	11 97       	sbiw	r26, 0x01	; 1
    8a72:	9f 01       	movw	r18, r30
    8a74:	2f 5f       	subi	r18, 0xFF	; 255
    8a76:	3f 4f       	sbci	r19, 0xFF	; 255
    8a78:	11 96       	adiw	r26, 0x01	; 1
    8a7a:	3c 93       	st	X, r19
    8a7c:	2e 93       	st	-X, r18
    8a7e:	e4 91       	lpm	r30, Z
    8a80:	e7 fd       	sbrc	r30, 7
    8a82:	03 c0       	rjmp	.+6      	; 0x8a8a <ReadVarLen+0x20>
    8a84:	8e 2f       	mov	r24, r30
    8a86:	90 e0       	ldi	r25, 0x00	; 0
    8a88:	08 95       	ret
    {
       value &= 0x7F;
    8a8a:	ef 77       	andi	r30, 0x7F	; 127
    8a8c:	8e 2f       	mov	r24, r30
    8a8e:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    8a90:	96 95       	lsr	r25
    8a92:	98 2f       	mov	r25, r24
    8a94:	88 27       	eor	r24, r24
    8a96:	97 95       	ror	r25
    8a98:	87 95       	ror	r24
    8a9a:	2f 5f       	subi	r18, 0xFF	; 255
    8a9c:	3f 4f       	sbci	r19, 0xFF	; 255
    8a9e:	f9 01       	movw	r30, r18
    8aa0:	31 97       	sbiw	r30, 0x01	; 1
    8aa2:	e4 91       	lpm	r30, Z
    8aa4:	4e 2f       	mov	r20, r30
    8aa6:	4f 77       	andi	r20, 0x7F	; 127
    8aa8:	84 0f       	add	r24, r20
    8aaa:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    8aac:	e7 fd       	sbrc	r30, 7
    8aae:	f0 cf       	rjmp	.-32     	; 0x8a90 <ReadVarLen+0x26>
    8ab0:	2d 93       	st	X+, r18
    8ab2:	3c 93       	st	X, r19
    }


    return value;
}
    8ab4:	08 95       	ret

00008ab6 <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    8ab6:	ff 92       	push	r15
    8ab8:	0f 93       	push	r16
    8aba:	1f 93       	push	r17
    8abc:	cf 93       	push	r28
    8abe:	df 93       	push	r29
    8ac0:	ec 01       	movw	r28, r24
    8ac2:	16 2f       	mov	r17, r22
    8ac4:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    8ac6:	88 81       	ld	r24, Y
    8ac8:	28 2f       	mov	r18, r24
    8aca:	20 78       	andi	r18, 0x80	; 128
    8acc:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    8ace:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    8ad0:	9f ef       	ldi	r25, 0xFF	; 255
    8ad2:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    8ad4:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    8ad6:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    8ad8:	87 7b       	andi	r24, 0xB7	; 183
    8ada:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    8adc:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    8ade:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    8ae0:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    8ae2:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    8ae4:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    8ae6:	8a 81       	ldd	r24, Y+2	; 0x02
    8ae8:	83 30       	cpi	r24, 0x03	; 3
    8aea:	69 f4       	brne	.+26     	; 0x8b06 <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    8aec:	21 11       	cpse	r18, r1
    8aee:	01 c0       	rjmp	.+2      	; 0x8af2 <TriggerCommon+0x3c>
    8af0:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    8af2:	81 e0       	ldi	r24, 0x01	; 1
    8af4:	91 e0       	ldi	r25, 0x01	; 1
    8af6:	90 93 8b 08 	sts	0x088B, r25	; 0x80088b <tr4_barrel_hi>
    8afa:	80 93 8a 08 	sts	0x088A, r24	; 0x80088a <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    8afe:	81 e0       	ldi	r24, 0x01	; 1
    8b00:	80 93 89 08 	sts	0x0889, r24	; 0x800889 <tr4_params>
    8b04:	36 c0       	rjmp	.+108    	; 0x8b72 <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    8b06:	84 30       	cpi	r24, 0x04	; 4
    8b08:	69 f5       	brne	.+90     	; 0x8b64 <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    8b0a:	10 92 91 08 	sts	0x0891, r1	; 0x800891 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    8b0e:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <patchPointers>
    8b12:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <patchPointers+0x1>
    8b16:	e9 e0       	ldi	r30, 0x09	; 9
    8b18:	6e 9f       	mul	r22, r30
    8b1a:	80 0d       	add	r24, r0
    8b1c:	91 1d       	adc	r25, r1
    8b1e:	11 24       	eor	r1, r1
    8b20:	fc 01       	movw	r30, r24
    8b22:	31 96       	adiw	r30, 0x01	; 1
    8b24:	45 91       	lpm	r20, Z+
    8b26:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    8b28:	50 93 93 08 	sts	0x0893, r21	; 0x800893 <tr5_pos_hi>
    8b2c:	40 93 92 08 	sts	0x0892, r20	; 0x800892 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    8b30:	9c 01       	movw	r18, r24
    8b32:	29 5f       	subi	r18, 0xF9	; 249
    8b34:	3f 4f       	sbci	r19, 0xFF	; 255
    8b36:	f9 01       	movw	r30, r18
    8b38:	65 91       	lpm	r22, Z+
    8b3a:	74 91       	lpm	r23, Z
    8b3c:	05 96       	adiw	r24, 0x05	; 5
    8b3e:	fc 01       	movw	r30, r24
    8b40:	85 91       	lpm	r24, Z+
    8b42:	94 91       	lpm	r25, Z
    8b44:	68 1b       	sub	r22, r24
    8b46:	79 0b       	sbc	r23, r25
    8b48:	70 93 95 08 	sts	0x0895, r23	; 0x800895 <tr5_loop_len_hi>
    8b4c:	60 93 94 08 	sts	0x0894, r22	; 0x800894 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    8b50:	f9 01       	movw	r30, r18
    8b52:	85 91       	lpm	r24, Z+
    8b54:	94 91       	lpm	r25, Z
    8b56:	48 0f       	add	r20, r24
    8b58:	59 1f       	adc	r21, r25
    8b5a:	50 93 97 08 	sts	0x0897, r21	; 0x800897 <tr5_loop_end_hi>
    8b5e:	40 93 96 08 	sts	0x0896, r20	; 0x800896 <tr5_loop_end_lo>
    8b62:	03 c0       	rjmp	.+6      	; 0x8b6a <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    8b64:	60 e0       	ldi	r22, 0x00	; 0
    8b66:	0e 94 57 48 	call	0x90ae	; 0x90ae <SetMixerWave>
			SetMixerNote(track->channel,note);
    8b6a:	60 2f       	mov	r22, r16
    8b6c:	8a 81       	ldd	r24, Y+2	; 0x02
    8b6e:	0e 94 40 48 	call	0x9080	; 0x9080 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    8b72:	ff 20       	and	r15, r15
    8b74:	11 f0       	breq	.+4      	; 0x8b7a <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    8b76:	19 8b       	std	Y+17, r17	; 0x11
    8b78:	01 c0       	rjmp	.+2      	; 0x8b7c <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    8b7a:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    8b7c:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    8b80:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    8b84:	29 e0       	ldi	r18, 0x09	; 9
    8b86:	12 9f       	mul	r17, r18
    8b88:	e0 0d       	add	r30, r0
    8b8a:	f1 1d       	adc	r31, r1
    8b8c:	11 24       	eor	r1, r1
    8b8e:	33 96       	adiw	r30, 0x03	; 3
    8b90:	85 91       	lpm	r24, Z+
    8b92:	94 91       	lpm	r25, Z
	if(pos==NULL){
    8b94:	00 97       	sbiw	r24, 0x00	; 0
    8b96:	19 f4       	brne	.+6      	; 0x8b9e <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    8b98:	1e 8a       	std	Y+22, r1	; 0x16
    8b9a:	1d 8a       	std	Y+21, r1	; 0x15
    8b9c:	07 c0       	rjmp	.+14     	; 0x8bac <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    8b9e:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    8ba0:	fc 01       	movw	r30, r24
    8ba2:	24 91       	lpm	r18, Z
    8ba4:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    8ba6:	01 96       	adiw	r24, 0x01	; 1
    8ba8:	9e 8b       	std	Y+22, r25	; 0x16
    8baa:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    8bac:	df 91       	pop	r29
    8bae:	cf 91       	pop	r28
    8bb0:	1f 91       	pop	r17
    8bb2:	0f 91       	pop	r16
    8bb4:	ff 90       	pop	r15
    8bb6:	08 95       	ret

00008bb8 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    8bb8:	cf 93       	push	r28
    8bba:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    8bbc:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    8bc0:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    8bc4:	99 e0       	ldi	r25, 0x09	; 9
    8bc6:	89 9f       	mul	r24, r25
    8bc8:	e0 0d       	add	r30, r0
    8bca:	f1 1d       	adc	r31, r1
    8bcc:	11 24       	eor	r1, r1
    8bce:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    8bd0:	e1 30       	cpi	r30, 0x01	; 1
    8bd2:	e9 f0       	breq	.+58     	; 0x8c0e <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    8bd4:	e2 30       	cpi	r30, 0x02	; 2
    8bd6:	e9 f0       	breq	.+58     	; 0x8c12 <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    8bd8:	90 91 b6 08 	lds	r25, 0x08B6	; 0x8008b6 <tracks+0x17>
    8bdc:	97 ff       	sbrs	r25, 7
    8bde:	1b c0       	rjmp	.+54     	; 0x8c16 <TriggerFx+0x5e>
    8be0:	90 91 c7 08 	lds	r25, 0x08C7	; 0x8008c7 <tracks+0x28>
    8be4:	89 13       	cpse	r24, r25
    8be6:	02 c0       	rjmp	.+4      	; 0x8bec <TriggerFx+0x34>
    8be8:	41 11       	cpse	r20, r1
    8bea:	15 c0       	rjmp	.+42     	; 0x8c16 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    8bec:	90 91 cd 08 	lds	r25, 0x08CD	; 0x8008cd <tracks+0x2e>
    8bf0:	97 ff       	sbrs	r25, 7
    8bf2:	13 c0       	rjmp	.+38     	; 0x8c1a <TriggerFx+0x62>
    8bf4:	90 91 de 08 	lds	r25, 0x08DE	; 0x8008de <tracks+0x3f>
    8bf8:	89 13       	cpse	r24, r25
    8bfa:	02 c0       	rjmp	.+4      	; 0x8c00 <TriggerFx+0x48>
    8bfc:	41 11       	cpse	r20, r1
    8bfe:	0d c0       	rjmp	.+26     	; 0x8c1a <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    8c00:	20 91 ca 08 	lds	r18, 0x08CA	; 0x8008ca <tracks+0x2b>
    8c04:	90 91 e1 08 	lds	r25, 0x08E1	; 0x8008e1 <tracks+0x42>
    8c08:	92 17       	cp	r25, r18
    8c0a:	38 f4       	brcc	.+14     	; 0x8c1a <TriggerFx+0x62>
    8c0c:	04 c0       	rjmp	.+8      	; 0x8c16 <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    8c0e:	c3 e0       	ldi	r28, 0x03	; 3
    8c10:	05 c0       	rjmp	.+10     	; 0x8c1c <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    8c12:	c4 e0       	ldi	r28, 0x04	; 4
    8c14:	03 c0       	rjmp	.+6      	; 0x8c1c <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    8c16:	c1 e0       	ldi	r28, 0x01	; 1
    8c18:	01 c0       	rjmp	.+2      	; 0x8c1c <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    8c1a:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    8c1c:	97 e1       	ldi	r25, 0x17	; 23
    8c1e:	c9 9f       	mul	r28, r25
    8c20:	e0 01       	movw	r28, r0
    8c22:	11 24       	eor	r1, r1
    8c24:	c1 56       	subi	r28, 0x61	; 97
    8c26:	d7 4f       	sbci	r29, 0xF7	; 247
    8c28:	90 e8       	ldi	r25, 0x80	; 128
    8c2a:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    8c2c:	1e 8a       	std	Y+22, r1	; 0x16
    8c2e:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    8c30:	20 e5       	ldi	r18, 0x50	; 80
    8c32:	46 2f       	mov	r20, r22
    8c34:	68 2f       	mov	r22, r24
    8c36:	ce 01       	movw	r24, r28
    8c38:	0e 94 5b 45 	call	0x8ab6	; 0x8ab6 <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    8c3c:	88 81       	ld	r24, Y
    8c3e:	80 62       	ori	r24, 0x20	; 32
    8c40:	88 83       	st	Y, r24
}
    8c42:	df 91       	pop	r29
    8c44:	cf 91       	pop	r28
    8c46:	08 95       	ret

00008c48 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    8c48:	cf 93       	push	r28
    8c4a:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    8c4c:	a8 2f       	mov	r26, r24
    8c4e:	b0 e0       	ldi	r27, 0x00	; 0
    8c50:	97 e1       	ldi	r25, 0x17	; 23
    8c52:	89 9f       	mul	r24, r25
    8c54:	f0 01       	movw	r30, r0
    8c56:	11 24       	eor	r1, r1
    8c58:	e1 56       	subi	r30, 0x61	; 97
    8c5a:	f7 4f       	sbci	r31, 0xF7	; 247
    8c5c:	80 81       	ld	r24, Z
    8c5e:	85 ff       	sbrs	r24, 5
    8c60:	02 c0       	rjmp	.+4      	; 0x8c66 <TriggerNote+0x1e>
    8c62:	87 fd       	sbrc	r24, 7
    8c64:	2e c0       	rjmp	.+92     	; 0x8cc2 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    8c66:	21 11       	cpse	r18, r1
    8c68:	18 c0       	rjmp	.+48     	; 0x8c9a <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    8c6a:	97 e1       	ldi	r25, 0x17	; 23
    8c6c:	9a 9f       	mul	r25, r26
    8c6e:	f0 01       	movw	r30, r0
    8c70:	9b 9f       	mul	r25, r27
    8c72:	f0 0d       	add	r31, r0
    8c74:	11 24       	eor	r1, r1
    8c76:	e1 56       	subi	r30, 0x61	; 97
    8c78:	f7 4f       	sbci	r31, 0xF7	; 247
    8c7a:	97 85       	ldd	r25, Z+15	; 0x0f
    8c7c:	91 11       	cpse	r25, r1
    8c7e:	02 c0       	rjmp	.+4      	; 0x8c84 <TriggerNote+0x3c>
    8c80:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    8c82:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    8c84:	97 e1       	ldi	r25, 0x17	; 23
    8c86:	9a 9f       	mul	r25, r26
    8c88:	f0 01       	movw	r30, r0
    8c8a:	9b 9f       	mul	r25, r27
    8c8c:	f0 0d       	add	r31, r0
    8c8e:	11 24       	eor	r1, r1
    8c90:	e1 56       	subi	r30, 0x61	; 97
    8c92:	f7 4f       	sbci	r31, 0xF7	; 247
    8c94:	8f 7b       	andi	r24, 0xBF	; 191
    8c96:	80 83       	st	Z, r24
    8c98:	14 c0       	rjmp	.+40     	; 0x8cc2 <TriggerNote+0x7a>
    8c9a:	82 2f       	mov	r24, r18
    8c9c:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8c9e:	97 e1       	ldi	r25, 0x17	; 23
    8ca0:	9a 9f       	mul	r25, r26
    8ca2:	e0 01       	movw	r28, r0
    8ca4:	9b 9f       	mul	r25, r27
    8ca6:	d0 0d       	add	r29, r0
    8ca8:	11 24       	eor	r1, r1
    8caa:	c1 56       	subi	r28, 0x61	; 97
    8cac:	d7 4f       	sbci	r29, 0xF7	; 247
    8cae:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    8cb0:	1e 8a       	std	Y+22, r1	; 0x16
    8cb2:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    8cb4:	48 2f       	mov	r20, r24
    8cb6:	ce 01       	movw	r24, r28
    8cb8:	0e 94 5b 45 	call	0x8ab6	; 0x8ab6 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    8cbc:	88 81       	ld	r24, Y
    8cbe:	80 62       	ori	r24, 0x20	; 32
    8cc0:	88 83       	st	Y, r24
		}

	}
}
    8cc2:	df 91       	pop	r29
    8cc4:	cf 91       	pop	r28
    8cc6:	08 95       	ret

00008cc8 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    8cc8:	ef 92       	push	r14
    8cca:	ff 92       	push	r15
    8ccc:	0f 93       	push	r16
    8cce:	1f 93       	push	r17
    8cd0:	cf 93       	push	r28
    8cd2:	df 93       	push	r29
    8cd4:	cf e9       	ldi	r28, 0x9F	; 159
    8cd6:	d8 e0       	ldi	r29, 0x08	; 8
    8cd8:	06 e7       	ldi	r16, 0x76	; 118
    8cda:	18 e0       	ldi	r17, 0x08	; 8
    8cdc:	98 01       	movw	r18, r16
    8cde:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    8ce0:	1f 96       	adiw	r26, 0x0f	; 15
    8ce2:	8c 91       	ld	r24, X
    8ce4:	1f 97       	sbiw	r26, 0x0f	; 15
    8ce6:	88 23       	and	r24, r24
    8ce8:	a9 f0       	breq	.+42     	; 0x8d14 <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    8cea:	1e 96       	adiw	r26, 0x0e	; 14
    8cec:	4c 91       	ld	r20, X
    8cee:	1e 97       	sbiw	r26, 0x0e	; 14
    8cf0:	08 2e       	mov	r0, r24
    8cf2:	00 0c       	add	r0, r0
    8cf4:	99 0b       	sbc	r25, r25
    8cf6:	84 0f       	add	r24, r20
    8cf8:	91 1d       	adc	r25, r1
    8cfa:	8f 3f       	cpi	r24, 0xFF	; 255
    8cfc:	91 05       	cpc	r25, r1
    8cfe:	19 f0       	breq	.+6      	; 0x8d06 <ProcessMusic+0x3e>
    8d00:	14 f0       	brlt	.+4      	; 0x8d06 <ProcessMusic+0x3e>
    8d02:	8f ef       	ldi	r24, 0xFF	; 255
    8d04:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    8d06:	97 ff       	sbrs	r25, 7
    8d08:	02 c0       	rjmp	.+4      	; 0x8d0e <ProcessMusic+0x46>
    8d0a:	80 e0       	ldi	r24, 0x00	; 0
    8d0c:	90 e0       	ldi	r25, 0x00	; 0
    8d0e:	1e 96       	adiw	r26, 0x0e	; 14
    8d10:	8c 93       	st	X, r24
    8d12:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    8d14:	6c 91       	ld	r22, X
    8d16:	63 ff       	sbrs	r22, 3
    8d18:	26 c0       	rjmp	.+76     	; 0x8d66 <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    8d1a:	15 96       	adiw	r26, 0x05	; 5
    8d1c:	4d 91       	ld	r20, X+
    8d1e:	5c 91       	ld	r21, X
    8d20:	16 97       	sbiw	r26, 0x06	; 6
    8d22:	f9 01       	movw	r30, r18
    8d24:	81 81       	ldd	r24, Z+1	; 0x01
    8d26:	92 81       	ldd	r25, Z+2	; 0x02
    8d28:	84 0f       	add	r24, r20
    8d2a:	95 1f       	adc	r25, r21
    8d2c:	92 83       	std	Z+2, r25	; 0x02
    8d2e:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    8d30:	17 96       	adiw	r26, 0x07	; 7
    8d32:	ec 91       	ld	r30, X
    8d34:	17 97       	sbiw	r26, 0x07	; 7
    8d36:	f0 e0       	ldi	r31, 0x00	; 0
    8d38:	ee 0f       	add	r30, r30
    8d3a:	ff 1f       	adc	r31, r31
    8d3c:	e8 51       	subi	r30, 0x18	; 24
    8d3e:	ff 46       	sbci	r31, 0x6F	; 111
    8d40:	e5 90       	lpm	r14, Z+
    8d42:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    8d44:	14 16       	cp	r1, r20
    8d46:	15 06       	cpc	r1, r21
    8d48:	24 f4       	brge	.+8      	; 0x8d52 <ProcessMusic+0x8a>
    8d4a:	8e 15       	cp	r24, r14
    8d4c:	9f 05       	cpc	r25, r15
    8d4e:	30 f4       	brcc	.+12     	; 0x8d5c <ProcessMusic+0x94>
    8d50:	0a c0       	rjmp	.+20     	; 0x8d66 <ProcessMusic+0x9e>
    8d52:	45 2b       	or	r20, r21
    8d54:	41 f0       	breq	.+16     	; 0x8d66 <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    8d56:	e8 16       	cp	r14, r24
    8d58:	f9 06       	cpc	r15, r25
    8d5a:	28 f0       	brcs	.+10     	; 0x8d66 <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    8d5c:	f9 01       	movw	r30, r18
    8d5e:	f2 82       	std	Z+2, r15	; 0x02
    8d60:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    8d62:	67 7f       	andi	r22, 0xF7	; 247
    8d64:	6c 93       	st	X, r22
    8d66:	57 96       	adiw	r26, 0x17	; 23
    8d68:	2a 5f       	subi	r18, 0xFA	; 250
    8d6a:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    8d6c:	f9 e0       	ldi	r31, 0x09	; 9
    8d6e:	a2 31       	cpi	r26, 0x12	; 18
    8d70:	bf 07       	cpc	r27, r31
    8d72:	09 f0       	breq	.+2      	; 0x8d76 <ProcessMusic+0xae>
    8d74:	b5 cf       	rjmp	.-150    	; 0x8ce0 <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    8d76:	80 91 74 08 	lds	r24, 0x0874	; 0x800874 <playSong>
    8d7a:	88 23       	and	r24, r24
    8d7c:	09 f4       	brne	.+2      	; 0x8d80 <ProcessMusic+0xb8>
    8d7e:	cc c0       	rjmp	.+408    	; 0x8f18 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    8d80:	87 e1       	ldi	r24, 0x17	; 23
    8d82:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    8d84:	80 91 12 09 	lds	r24, 0x0912	; 0x800912 <currDeltaTime>
    8d88:	90 91 13 09 	lds	r25, 0x0913	; 0x800913 <currDeltaTime+0x1>
    8d8c:	20 91 18 09 	lds	r18, 0x0918	; 0x800918 <nextDeltaTime>
    8d90:	30 91 19 09 	lds	r19, 0x0919	; 0x800919 <nextDeltaTime+0x1>
    8d94:	82 17       	cp	r24, r18
    8d96:	93 07       	cpc	r25, r19
    8d98:	09 f0       	breq	.+2      	; 0x8d9c <ProcessMusic+0xd4>
    8d9a:	b9 c0       	rjmp	.+370    	; 0x8f0e <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    8d9c:	20 91 1b 09 	lds	r18, 0x091B	; 0x80091b <songPos>
    8da0:	30 91 1c 09 	lds	r19, 0x091C	; 0x80091c <songPos+0x1>
    8da4:	b9 01       	movw	r22, r18
    8da6:	6f 5f       	subi	r22, 0xFF	; 255
    8da8:	7f 4f       	sbci	r23, 0xFF	; 255
    8daa:	70 93 1c 09 	sts	0x091C, r23	; 0x80091c <songPos+0x1>
    8dae:	60 93 1b 09 	sts	0x091B, r22	; 0x80091b <songPos>
    8db2:	f9 01       	movw	r30, r18
    8db4:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    8db6:	4f 3f       	cpi	r20, 0xFF	; 255
    8db8:	79 f5       	brne	.+94     	; 0x8e18 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    8dba:	a9 01       	movw	r20, r18
    8dbc:	4e 5f       	subi	r20, 0xFE	; 254
    8dbe:	5f 4f       	sbci	r21, 0xFF	; 255
    8dc0:	50 93 1c 09 	sts	0x091C, r21	; 0x80091c <songPos+0x1>
    8dc4:	40 93 1b 09 	sts	0x091B, r20	; 0x80091b <songPos>
    8dc8:	fb 01       	movw	r30, r22
    8dca:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    8dcc:	6f 32       	cpi	r22, 0x2F	; 47
    8dce:	19 f4       	brne	.+6      	; 0x8dd6 <ProcessMusic+0x10e>
						playSong=false;
    8dd0:	10 92 74 08 	sts	0x0874, r1	; 0x800874 <playSong>
						break;	
    8dd4:	9c c0       	rjmp	.+312    	; 0x8f0e <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    8dd6:	66 30       	cpi	r22, 0x06	; 6
    8dd8:	09 f0       	breq	.+2      	; 0x8ddc <ProcessMusic+0x114>
    8dda:	8c c0       	rjmp	.+280    	; 0x8ef4 <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    8ddc:	fa 01       	movw	r30, r20
    8dde:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    8de0:	c9 01       	movw	r24, r18
    8de2:	04 96       	adiw	r24, 0x04	; 4
    8de4:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8de8:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    8dec:	f9 01       	movw	r30, r18
    8dee:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    8df0:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    8df2:	e3 35       	cpi	r30, 0x53	; 83
    8df4:	29 f4       	brne	.+10     	; 0x8e00 <ProcessMusic+0x138>
							loopStart=songPos;
    8df6:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    8dfa:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    8dfe:	7a c0       	rjmp	.+244    	; 0x8ef4 <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    8e00:	e5 34       	cpi	r30, 0x45	; 69
    8e02:	09 f0       	breq	.+2      	; 0x8e06 <ProcessMusic+0x13e>
    8e04:	77 c0       	rjmp	.+238    	; 0x8ef4 <ProcessMusic+0x22c>
							songPos=loopStart;
    8e06:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <loopStart>
    8e0a:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <loopStart+0x1>
    8e0e:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    8e12:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    8e16:	6e c0       	rjmp	.+220    	; 0x8ef4 <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    8e18:	47 fd       	sbrc	r20, 7
    8e1a:	40 93 16 09 	sts	0x0916, r20	; 0x800916 <lastStatus>
					channel=lastStatus&0x0f;
    8e1e:	90 91 16 09 	lds	r25, 0x0916	; 0x800916 <lastStatus>
    8e22:	89 2f       	mov	r24, r25
    8e24:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    8e26:	47 ff       	sbrs	r20, 7
    8e28:	08 c0       	rjmp	.+16     	; 0x8e3a <ProcessMusic+0x172>
    8e2a:	2e 5f       	subi	r18, 0xFE	; 254
    8e2c:	3f 4f       	sbci	r19, 0xFF	; 255
    8e2e:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8e32:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8e36:	fb 01       	movw	r30, r22
    8e38:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    8e3a:	90 7f       	andi	r25, 0xF0	; 240
    8e3c:	90 3b       	cpi	r25, 0xB0	; 176
    8e3e:	e1 f0       	breq	.+56     	; 0x8e78 <ProcessMusic+0x1b0>
    8e40:	90 3c       	cpi	r25, 0xC0	; 192
    8e42:	09 f4       	brne	.+2      	; 0x8e46 <ProcessMusic+0x17e>
    8e44:	51 c0       	rjmp	.+162    	; 0x8ee8 <ProcessMusic+0x220>
    8e46:	90 39       	cpi	r25, 0x90	; 144
    8e48:	09 f0       	breq	.+2      	; 0x8e4c <ProcessMusic+0x184>
    8e4a:	54 c0       	rjmp	.+168    	; 0x8ef4 <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    8e4c:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    8e50:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    8e54:	9f 01       	movw	r18, r30
    8e56:	2f 5f       	subi	r18, 0xFF	; 255
    8e58:	3f 4f       	sbci	r19, 0xFF	; 255
    8e5a:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8e5e:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8e62:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    8e64:	22 0f       	add	r18, r18
    8e66:	f8 9e       	mul	r15, r24
    8e68:	f0 01       	movw	r30, r0
    8e6a:	11 24       	eor	r1, r1
    8e6c:	e1 56       	subi	r30, 0x61	; 97
    8e6e:	f7 4f       	sbci	r31, 0xF7	; 247
    8e70:	60 89       	ldd	r22, Z+16	; 0x10
    8e72:	0e 94 24 46 	call	0x8c48	; 0x8c48 <TriggerNote>
    8e76:	3e c0       	rjmp	.+124    	; 0x8ef4 <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    8e78:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    8e7c:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    8e80:	9f 01       	movw	r18, r30
    8e82:	2f 5f       	subi	r18, 0xFF	; 255
    8e84:	3f 4f       	sbci	r19, 0xFF	; 255
    8e86:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    8e8a:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    8e8e:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    8e90:	47 30       	cpi	r20, 0x07	; 7
    8e92:	49 f4       	brne	.+18     	; 0x8ea6 <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    8e94:	f8 9e       	mul	r15, r24
    8e96:	d0 01       	movw	r26, r0
    8e98:	11 24       	eor	r1, r1
    8e9a:	a1 56       	subi	r26, 0x61	; 97
    8e9c:	b7 4f       	sbci	r27, 0xF7	; 247
    8e9e:	ee 0f       	add	r30, r30
    8ea0:	1c 96       	adiw	r26, 0x0c	; 12
    8ea2:	ec 93       	st	X, r30
    8ea4:	27 c0       	rjmp	.+78     	; 0x8ef4 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    8ea6:	4b 30       	cpi	r20, 0x0B	; 11
    8ea8:	49 f4       	brne	.+18     	; 0x8ebc <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    8eaa:	f8 9e       	mul	r15, r24
    8eac:	d0 01       	movw	r26, r0
    8eae:	11 24       	eor	r1, r1
    8eb0:	a1 56       	subi	r26, 0x61	; 97
    8eb2:	b7 4f       	sbci	r27, 0xF7	; 247
    8eb4:	ee 0f       	add	r30, r30
    8eb6:	13 96       	adiw	r26, 0x03	; 3
    8eb8:	ec 93       	st	X, r30
    8eba:	1c c0       	rjmp	.+56     	; 0x8ef4 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    8ebc:	4c 35       	cpi	r20, 0x5C	; 92
    8ebe:	49 f4       	brne	.+18     	; 0x8ed2 <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    8ec0:	f8 9e       	mul	r15, r24
    8ec2:	d0 01       	movw	r26, r0
    8ec4:	11 24       	eor	r1, r1
    8ec6:	a1 56       	subi	r26, 0x61	; 97
    8ec8:	b7 4f       	sbci	r27, 0xF7	; 247
    8eca:	ee 0f       	add	r30, r30
    8ecc:	1a 96       	adiw	r26, 0x0a	; 10
    8ece:	ec 93       	st	X, r30
    8ed0:	11 c0       	rjmp	.+34     	; 0x8ef4 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    8ed2:	44 36       	cpi	r20, 0x64	; 100
    8ed4:	79 f4       	brne	.+30     	; 0x8ef4 <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    8ed6:	f8 9e       	mul	r15, r24
    8ed8:	d0 01       	movw	r26, r0
    8eda:	11 24       	eor	r1, r1
    8edc:	a1 56       	subi	r26, 0x61	; 97
    8ede:	b7 4f       	sbci	r27, 0xF7	; 247
    8ee0:	ee 0f       	add	r30, r30
    8ee2:	1b 96       	adiw	r26, 0x0b	; 11
    8ee4:	ec 93       	st	X, r30
    8ee6:	06 c0       	rjmp	.+12     	; 0x8ef4 <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    8ee8:	f8 9e       	mul	r15, r24
    8eea:	f0 01       	movw	r30, r0
    8eec:	11 24       	eor	r1, r1
    8eee:	e1 56       	subi	r30, 0x61	; 97
    8ef0:	f7 4f       	sbci	r31, 0xF7	; 247
    8ef2:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    8ef4:	8b e1       	ldi	r24, 0x1B	; 27
    8ef6:	99 e0       	ldi	r25, 0x09	; 9
    8ef8:	0e 94 35 45 	call	0x8a6a	; 0x8a6a <ReadVarLen>
    8efc:	90 93 19 09 	sts	0x0919, r25	; 0x800919 <nextDeltaTime+0x1>
    8f00:	80 93 18 09 	sts	0x0918, r24	; 0x800918 <nextDeltaTime>
				currDeltaTime=0;
    8f04:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    8f08:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    8f0c:	3b cf       	rjmp	.-394    	; 0x8d84 <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    8f0e:	01 96       	adiw	r24, 0x01	; 1
    8f10:	90 93 13 09 	sts	0x0913, r25	; 0x800913 <currDeltaTime+0x1>
    8f14:	80 93 12 09 	sts	0x0912, r24	; 0x800912 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    8f18:	ee 24       	eor	r14, r14
    8f1a:	ea 94       	dec	r14
    8f1c:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    8f1e:	88 81       	ld	r24, Y
    8f20:	85 ff       	sbrs	r24, 5
    8f22:	37 c0       	rjmp	.+110    	; 0x8f92 <ProcessMusic+0x2ca>
    8f24:	2d 89       	ldd	r18, Y+21	; 0x15
    8f26:	3e 89       	ldd	r19, Y+22	; 0x16
    8f28:	23 2b       	or	r18, r19
    8f2a:	09 f4       	brne	.+2      	; 0x8f2e <ProcessMusic+0x266>
    8f2c:	32 c0       	rjmp	.+100    	; 0x8f92 <ProcessMusic+0x2ca>
    8f2e:	86 fd       	sbrc	r24, 6
    8f30:	30 c0       	rjmp	.+96     	; 0x8f92 <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    8f32:	9b 89       	ldd	r25, Y+19	; 0x13
    8f34:	8a 89       	ldd	r24, Y+18	; 0x12
    8f36:	98 13       	cpse	r25, r24
    8f38:	2a c0       	rjmp	.+84     	; 0x8f8e <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    8f3a:	ed 89       	ldd	r30, Y+21	; 0x15
    8f3c:	fe 89       	ldd	r31, Y+22	; 0x16
    8f3e:	bf 01       	movw	r22, r30
    8f40:	6f 5f       	subi	r22, 0xFF	; 255
    8f42:	7f 4f       	sbci	r23, 0xFF	; 255
    8f44:	7e 8b       	std	Y+22, r23	; 0x16
    8f46:	6d 8b       	std	Y+21, r22	; 0x15
    8f48:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    8f4a:	8f 3f       	cpi	r24, 0xFF	; 255
    8f4c:	31 f4       	brne	.+12     	; 0x8f5a <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    8f4e:	88 81       	ld	r24, Y
    8f50:	8f 77       	andi	r24, 0x7F	; 127
    8f52:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    8f54:	1e 8a       	std	Y+22, r1	; 0x16
    8f56:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    8f58:	1a c0       	rjmp	.+52     	; 0x8f8e <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    8f5a:	32 96       	adiw	r30, 0x02	; 2
    8f5c:	fe 8b       	std	Y+22, r31	; 0x16
    8f5e:	ed 8b       	std	Y+21, r30	; 0x15
    8f60:	fb 01       	movw	r30, r22
    8f62:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    8f64:	e8 2f       	mov	r30, r24
    8f66:	f0 e0       	ldi	r31, 0x00	; 0
    8f68:	ee 0f       	add	r30, r30
    8f6a:	ff 1f       	adc	r31, r31
    8f6c:	ee 53       	subi	r30, 0x3E	; 62
    8f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    8f70:	25 91       	lpm	r18, Z+
    8f72:	34 91       	lpm	r19, Z
    8f74:	ce 01       	movw	r24, r28
    8f76:	f9 01       	movw	r30, r18
    8f78:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    8f7a:	ed 89       	ldd	r30, Y+21	; 0x15
    8f7c:	fe 89       	ldd	r31, Y+22	; 0x16
    8f7e:	cf 01       	movw	r24, r30
    8f80:	01 96       	adiw	r24, 0x01	; 1
    8f82:	9e 8b       	std	Y+22, r25	; 0x16
    8f84:	8d 8b       	std	Y+21, r24	; 0x15
    8f86:	e4 91       	lpm	r30, Z
    8f88:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    8f8a:	1b 8a       	std	Y+19, r1	; 0x13
    8f8c:	d2 cf       	rjmp	.-92     	; 0x8f32 <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    8f8e:	9f 5f       	subi	r25, 0xFF	; 255
    8f90:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    8f92:	98 81       	ld	r25, Y
    8f94:	95 ff       	sbrs	r25, 5
    8f96:	5e c0       	rjmp	.+188    	; 0x9054 <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    8f98:	8c 89       	ldd	r24, Y+20	; 0x14
    8f9a:	8f 3f       	cpi	r24, 0xFF	; 255
    8f9c:	11 f0       	breq	.+4      	; 0x8fa2 <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    8f9e:	8f 5f       	subi	r24, 0xFF	; 255
    8fa0:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    8fa2:	97 fd       	sbrc	r25, 7
    8fa4:	02 c0       	rjmp	.+4      	; 0x8faa <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    8fa6:	9c 85       	ldd	r25, Y+12	; 0x0c
    8fa8:	01 c0       	rjmp	.+2      	; 0x8fac <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    8faa:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    8fac:	8d 85       	ldd	r24, Y+13	; 0x0d
    8fae:	49 85       	ldd	r20, Y+9	; 0x09
    8fb0:	88 23       	and	r24, r24
    8fb2:	09 f4       	brne	.+2      	; 0x8fb6 <ProcessMusic+0x2ee>
    8fb4:	49 c0       	rjmp	.+146    	; 0x9048 <ProcessMusic+0x380>
    8fb6:	6e 85       	ldd	r22, Y+14	; 0x0e
    8fb8:	66 23       	and	r22, r22
    8fba:	09 f4       	brne	.+2      	; 0x8fbe <ProcessMusic+0x2f6>
    8fbc:	45 c0       	rjmp	.+138    	; 0x9048 <ProcessMusic+0x380>
    8fbe:	99 23       	and	r25, r25
    8fc0:	09 f4       	brne	.+2      	; 0x8fc4 <ProcessMusic+0x2fc>
    8fc2:	42 c0       	rjmp	.+132    	; 0x9048 <ProcessMusic+0x380>
    8fc4:	50 91 17 09 	lds	r21, 0x0917	; 0x800917 <masterVolume>
    8fc8:	55 23       	and	r21, r21
    8fca:	09 f4       	brne	.+2      	; 0x8fce <ProcessMusic+0x306>
    8fcc:	3d c0       	rjmp	.+122    	; 0x9048 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    8fce:	89 9f       	mul	r24, r25
    8fd0:	c0 01       	movw	r24, r0
    8fd2:	11 24       	eor	r1, r1
    8fd4:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    8fd6:	89 2f       	mov	r24, r25
    8fd8:	99 27       	eor	r25, r25
    8fda:	68 9f       	mul	r22, r24
    8fdc:	90 01       	movw	r18, r0
    8fde:	69 9f       	mul	r22, r25
    8fe0:	30 0d       	add	r19, r0
    8fe2:	11 24       	eor	r1, r1
    8fe4:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    8fe6:	23 2f       	mov	r18, r19
    8fe8:	33 27       	eor	r19, r19
    8fea:	6b 81       	ldd	r22, Y+3	; 0x03
    8fec:	62 9f       	mul	r22, r18
    8fee:	c0 01       	movw	r24, r0
    8ff0:	63 9f       	mul	r22, r19
    8ff2:	90 0d       	add	r25, r0
    8ff4:	11 24       	eor	r1, r1
    8ff6:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    8ff8:	89 2f       	mov	r24, r25
    8ffa:	99 27       	eor	r25, r25
    8ffc:	58 9f       	mul	r21, r24
    8ffe:	90 01       	movw	r18, r0
    9000:	59 9f       	mul	r21, r25
    9002:	30 0d       	add	r19, r0
    9004:	11 24       	eor	r1, r1
    9006:	33 95       	inc	r19
				uVol>>=8;
    9008:	23 2f       	mov	r18, r19
    900a:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    900c:	8a 85       	ldd	r24, Y+10	; 0x0a
    900e:	88 23       	and	r24, r24
    9010:	e9 f0       	breq	.+58     	; 0x904c <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    9012:	e4 2f       	mov	r30, r20
    9014:	f0 e0       	ldi	r31, 0x00	; 0
    9016:	e0 50       	subi	r30, 0x00	; 0
    9018:	fe 46       	sbci	r31, 0x6E	; 110
    901a:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    901c:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    901e:	8e 9f       	mul	r24, r30
    9020:	f0 01       	movw	r30, r0
    9022:	11 24       	eor	r1, r1
    9024:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    9026:	ef 2f       	mov	r30, r31
    9028:	ff 27       	eor	r31, r31
    902a:	b7 01       	movw	r22, r14
    902c:	6e 1b       	sub	r22, r30
    902e:	7f 0b       	sbc	r23, r31
    9030:	62 9f       	mul	r22, r18
    9032:	c0 01       	movw	r24, r0
    9034:	63 9f       	mul	r22, r19
    9036:	90 0d       	add	r25, r0
    9038:	72 9f       	mul	r23, r18
    903a:	90 0d       	add	r25, r0
    903c:	11 24       	eor	r1, r1
    903e:	9c 01       	movw	r18, r24
    9040:	33 95       	inc	r19
					uVol>>=8;
    9042:	23 2f       	mov	r18, r19
    9044:	33 27       	eor	r19, r19
    9046:	02 c0       	rjmp	.+4      	; 0x904c <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    9048:	20 e0       	ldi	r18, 0x00	; 0
    904a:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    904c:	8b 85       	ldd	r24, Y+11	; 0x0b
    904e:	48 0f       	add	r20, r24
    9050:	49 87       	std	Y+9, r20	; 0x09
    9052:	02 c0       	rjmp	.+4      	; 0x9058 <ProcessMusic+0x390>

		}else{
			uVol=0;
    9054:	20 e0       	ldi	r18, 0x00	; 0
    9056:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    9058:	f8 01       	movw	r30, r16
    905a:	20 83       	st	Z, r18
    905c:	67 96       	adiw	r28, 0x17	; 23
    905e:	0a 5f       	subi	r16, 0xFA	; 250
    9060:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    9062:	f9 e0       	ldi	r31, 0x09	; 9
    9064:	c2 31       	cpi	r28, 0x12	; 18
    9066:	df 07       	cpc	r29, r31
    9068:	09 f0       	breq	.+2      	; 0x906c <ProcessMusic+0x3a4>
    906a:	59 cf       	rjmp	.-334    	; 0x8f1e <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    906c:	df 91       	pop	r29
    906e:	cf 91       	pop	r28
    9070:	1f 91       	pop	r17
    9072:	0f 91       	pop	r16
    9074:	ff 90       	pop	r15
    9076:	ef 90       	pop	r14
    9078:	08 95       	ret

0000907a <SetMasterVolume>:
}



void SetMasterVolume(unsigned char vol){
	masterVolume=vol;
    907a:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <masterVolume>
    907e:	08 95       	ret

00009080 <SetMixerNote>:
    9080:	99 27       	eor	r25, r25
    9082:	77 27       	eor	r23, r23
    9084:	83 30       	cpi	r24, 0x03	; 3
    9086:	09 f4       	brne	.+2      	; 0x908a <set_note_waves>
    9088:	08 95       	ret

0000908a <set_note_waves>:
    908a:	e8 ee       	ldi	r30, 0xE8	; 232
    908c:	f0 e9       	ldi	r31, 0x90	; 144
    908e:	66 0f       	add	r22, r22
    9090:	77 1f       	adc	r23, r23
    9092:	e6 0f       	add	r30, r22
    9094:	f7 1f       	adc	r31, r23
    9096:	a5 91       	lpm	r26, Z+
    9098:	b4 91       	lpm	r27, Z
    909a:	e6 e7       	ldi	r30, 0x76	; 118
    909c:	f8 e0       	ldi	r31, 0x08	; 8
    909e:	26 e0       	ldi	r18, 0x06	; 6
    90a0:	28 9f       	mul	r18, r24
    90a2:	e0 0d       	add	r30, r0
    90a4:	f1 1d       	adc	r31, r1
    90a6:	a1 83       	std	Z+1, r26	; 0x01
    90a8:	b2 83       	std	Z+2, r27	; 0x02
    90aa:	11 24       	eor	r1, r1
    90ac:	08 95       	ret

000090ae <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    90ae:	99 27       	eor	r25, r25
	clr r23
    90b0:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    90b2:	e6 e7       	ldi	r30, 0x76	; 118
	ldi ZH,hi8(mixerStruct)
    90b4:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    90b6:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    90b8:	28 9f       	mul	r18, r24
	add ZL,r0
    90ba:	e0 0d       	add	r30, r0
	adc ZH,r1
    90bc:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    90be:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    90c0:	31 f4       	brne	.+12     	; 0x90ce <smw1>
	lds r22,tr4_params
    90c2:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	andi r22,0xfe;
    90c6:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    90c8:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw	
    90cc:	0b c0       	rjmp	.+22     	; 0x90e4 <esmw>

000090ce <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    90ce:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    90d0:	31 f4       	brne	.+12     	; 0x90de <smw2>
	lds r22,tr4_params
    90d2:	60 91 89 08 	lds	r22, 0x0889	; 0x800889 <tr4_params>
	ori r22,0xfe;
    90d6:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    90d8:	60 93 89 08 	sts	0x0889, r22	; 0x800889 <tr4_params>
	rjmp esmw
    90dc:	03 c0       	rjmp	.+6      	; 0x90e4 <esmw>

000090de <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    90de:	72 e9       	ldi	r23, 0x92	; 146
	add r23,r22
    90e0:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    90e2:	75 83       	std	Z+5, r23	; 0x05

000090e4 <esmw>:
#endif

esmw:
	clr r1	
    90e4:	11 24       	eor	r1, r1
	ret
    90e6:	08 95       	ret

000090e8 <steptable>:
    90e8:	22 00       	.word	0x0022	; ????
    90ea:	24 00       	.word	0x0024	; ????
    90ec:	26 00       	.word	0x0026	; ????
    90ee:	28 00       	.word	0x0028	; ????
    90f0:	2b 00       	.word	0x002b	; ????
    90f2:	2d 00       	.word	0x002d	; ????
    90f4:	30 00       	.word	0x0030	; ????
    90f6:	33 00       	.word	0x0033	; ????
    90f8:	36 00       	.word	0x0036	; ????
    90fa:	39 00       	.word	0x0039	; ????
    90fc:	3d 00       	.word	0x003d	; ????
    90fe:	40 00       	.word	0x0040	; ????
    9100:	44 00       	.word	0x0044	; ????
    9102:	48 00       	.word	0x0048	; ????
    9104:	4c 00       	.word	0x004c	; ????
    9106:	51 00       	.word	0x0051	; ????
    9108:	56 00       	.word	0x0056	; ????
    910a:	5b 00       	.word	0x005b	; ????
    910c:	60 00       	.word	0x0060	; ????
    910e:	66 00       	.word	0x0066	; ????
    9110:	6c 00       	.word	0x006c	; ????
    9112:	73 00       	.word	0x0073	; ????
    9114:	79 00       	.word	0x0079	; ????
    9116:	81 00       	.word	0x0081	; ????
    9118:	88 00       	.word	0x0088	; ????
    911a:	90 00       	.word	0x0090	; ????
    911c:	99 00       	.word	0x0099	; ????
    911e:	a2 00       	.word	0x00a2	; ????
    9120:	ac 00       	.word	0x00ac	; ????
    9122:	b6 00       	.word	0x00b6	; ????
    9124:	c1 00       	.word	0x00c1	; ????
    9126:	cc 00       	.word	0x00cc	; ????
    9128:	d8 00       	.word	0x00d8	; ????
    912a:	e5 00       	.word	0x00e5	; ????
    912c:	f3 00       	.word	0x00f3	; ????
    912e:	01 01       	movw	r0, r2
    9130:	10 01       	movw	r2, r0
    9132:	21 01       	movw	r4, r2
    9134:	32 01       	movw	r6, r4
    9136:	44 01       	movw	r8, r8
    9138:	57 01       	movw	r10, r14
    913a:	6c 01       	movw	r12, r24
    913c:	81 01       	movw	r16, r2
    913e:	98 01       	movw	r18, r16
    9140:	b0 01       	movw	r22, r0
    9142:	ca 01       	movw	r24, r20
    9144:	e5 01       	movw	r28, r10
    9146:	02 02       	muls	r16, r18
    9148:	21 02       	muls	r18, r17
    914a:	41 02       	muls	r20, r17
    914c:	64 02       	muls	r22, r20
    914e:	88 02       	muls	r24, r24
    9150:	ae 02       	muls	r26, r30
    9152:	d7 02       	muls	r29, r23
    9154:	03 03       	mulsu	r16, r19
    9156:	30 03       	mulsu	r19, r16
    9158:	61 03       	mulsu	r22, r17
    915a:	94 03       	fmuls	r17, r20
    915c:	cb 03       	fmulsu	r20, r19
    915e:	05 04       	cpc	r0, r5
    9160:	42 04       	cpc	r4, r2
    9162:	83 04       	cpc	r8, r3
    9164:	c7 04       	cpc	r12, r7
    9166:	10 05       	cpc	r17, r0
    9168:	5d 05       	cpc	r21, r13
    916a:	af 05       	cpc	r26, r15
    916c:	05 06       	cpc	r0, r21
    916e:	61 06       	cpc	r6, r17
    9170:	c2 06       	cpc	r12, r18
    9172:	29 07       	cpc	r18, r25
    9174:	96 07       	cpc	r25, r22
    9176:	09 08       	sbc	r0, r9
    9178:	83 08       	sbc	r8, r3
    917a:	05 09       	sbc	r16, r5
    917c:	8e 09       	sbc	r24, r14
    917e:	20 0a       	sbc	r2, r16
    9180:	ba 0a       	sbc	r11, r26
    9182:	5d 0b       	sbc	r21, r29
    9184:	0a 0c       	add	r0, r10
    9186:	c1 0c       	add	r12, r1
    9188:	84 0d       	add	r24, r4
    918a:	51 0e       	add	r5, r17
    918c:	2b 0f       	add	r18, r27
    918e:	12 10       	cpse	r1, r2
    9190:	07 11       	cpse	r16, r7
    9192:	0a 12       	cpse	r0, r26
    9194:	1d 13       	cpse	r17, r29
    9196:	40 14       	cp	r4, r0
    9198:	74 15       	cp	r23, r4
    919a:	ba 16       	cp	r11, r26
    919c:	14 18       	sub	r1, r4
    919e:	83 19       	sub	r24, r3
    91a0:	07 1b       	sub	r16, r23
    91a2:	a3 1c       	adc	r10, r3
    91a4:	57 1e       	adc	r5, r23
    91a6:	24 20       	and	r2, r4
    91a8:	0e 22       	and	r0, r30
    91aa:	14 24       	eor	r1, r4
    91ac:	39 26       	eor	r3, r25
    91ae:	7f 28       	or	r7, r15
    91b0:	e8 2a       	or	r14, r24
    91b2:	75 2d       	mov	r23, r5
    91b4:	29 30       	cpi	r18, 0x09	; 9
    91b6:	06 33       	cpi	r16, 0x36	; 54
    91b8:	0f 36       	cpi	r16, 0x6F	; 111
    91ba:	45 39       	cpi	r20, 0x95	; 149
    91bc:	ad 3c       	cpi	r26, 0xCD	; 205
    91be:	49 40       	sbci	r20, 0x09	; 9
    91c0:	1b 44       	sbci	r17, 0x4B	; 75
    91c2:	28 48       	sbci	r18, 0x88	; 136
    91c4:	73 4c       	sbci	r23, 0xC3	; 195
    91c6:	fe 50       	subi	r31, 0x0E	; 14
    91c8:	cf 55       	subi	r28, 0x5F	; 95
    91ca:	ea 5a       	subi	r30, 0xAA	; 170
    91cc:	51 60       	ori	r21, 0x01	; 1
    91ce:	0c 66       	ori	r16, 0x6C	; 108
    91d0:	1d 6c       	ori	r17, 0xCD	; 205
    91d2:	8b 72       	andi	r24, 0x2B	; 43
    91d4:	5a 79       	andi	r21, 0x9A	; 154
    91d6:	92 80       	ldd	r9, Z+2	; 0x02
    91d8:	37 88       	ldd	r3, Z+23	; 0x17
    91da:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x89e5>
    91de:	fd a1       	ldd	r31, Y+37	; 0x25
    91e0:	9f ab       	std	Y+55, r25	; 0x37
    91e2:	d3 b5       	in	r29, 0x23	; 35
    91e4:	a3 c0       	rjmp	.+326    	; 0x932c <waves+0x12c>
	...

00009200 <waves>:
    9200:	00 03       	mulsu	r16, r16
    9202:	06 09       	sbc	r16, r6
    9204:	0c 10       	cpse	r0, r12
    9206:	13 16       	cp	r1, r19
    9208:	19 1c       	adc	r1, r9
    920a:	1f 22       	and	r1, r31
    920c:	25 28       	or	r2, r5
    920e:	2b 2e       	mov	r2, r27
    9210:	31 33       	cpi	r19, 0x31	; 49
    9212:	36 39       	cpi	r19, 0x96	; 150
    9214:	3c 3f       	cpi	r19, 0xFC	; 252
    9216:	41 44       	sbci	r20, 0x41	; 65
    9218:	47 49       	sbci	r20, 0x97	; 151
    921a:	4c 4e       	sbci	r20, 0xEC	; 236
    921c:	51 53       	subi	r21, 0x31	; 49
    921e:	55 58       	subi	r21, 0x85	; 133
    9220:	5a 5c       	subi	r21, 0xCA	; 202
    9222:	5e 60       	ori	r21, 0x0E	; 14
    9224:	62 64       	ori	r22, 0x42	; 66
    9226:	66 68       	ori	r22, 0x86	; 134
    9228:	6a 6b       	ori	r22, 0xBA	; 186
    922a:	6d 6f       	ori	r22, 0xFD	; 253
    922c:	70 71       	andi	r23, 0x10	; 16
    922e:	73 74       	andi	r23, 0x43	; 67
    9230:	75 76       	andi	r23, 0x65	; 101
    9232:	78 79       	andi	r23, 0x98	; 152
    9234:	7a 7a       	andi	r23, 0xAA	; 170
    9236:	7b 7c       	andi	r23, 0xCB	; 203
    9238:	7d 7d       	andi	r23, 0xDD	; 221
    923a:	7e 7e       	andi	r23, 0xEE	; 238
    923c:	7e 7f       	andi	r23, 0xFE	; 254
    923e:	7f 7f       	andi	r23, 0xFF	; 255
    9240:	7f 7f       	andi	r23, 0xFF	; 255
    9242:	7f 7f       	andi	r23, 0xFF	; 255
    9244:	7e 7e       	andi	r23, 0xEE	; 238
    9246:	7e 7d       	andi	r23, 0xDE	; 222
    9248:	7d 7c       	andi	r23, 0xCD	; 205
    924a:	7b 7a       	andi	r23, 0xAB	; 171
    924c:	7a 79       	andi	r23, 0x9A	; 154
    924e:	78 76       	andi	r23, 0x68	; 104
    9250:	75 74       	andi	r23, 0x45	; 69
    9252:	73 71       	andi	r23, 0x13	; 19
    9254:	70 6f       	ori	r23, 0xF0	; 240
    9256:	6d 6b       	ori	r22, 0xBD	; 189
    9258:	6a 68       	ori	r22, 0x8A	; 138
    925a:	66 64       	ori	r22, 0x46	; 70
    925c:	62 60       	ori	r22, 0x02	; 2
    925e:	5e 5c       	subi	r21, 0xCE	; 206
    9260:	5a 58       	subi	r21, 0x8A	; 138
    9262:	55 53       	subi	r21, 0x35	; 53
    9264:	51 4e       	sbci	r21, 0xE1	; 225
    9266:	4c 49       	sbci	r20, 0x9C	; 156
    9268:	47 44       	sbci	r20, 0x47	; 71
    926a:	41 3f       	cpi	r20, 0xF1	; 241
    926c:	3c 39       	cpi	r19, 0x9C	; 156
    926e:	36 33       	cpi	r19, 0x36	; 54
    9270:	31 2e       	mov	r3, r17
    9272:	2b 28       	or	r2, r11
    9274:	25 22       	and	r2, r21
    9276:	1f 1c       	adc	r1, r15
    9278:	19 16       	cp	r1, r25
    927a:	13 10       	cpse	r1, r3
    927c:	0c 09       	sbc	r16, r12
    927e:	06 03       	mulsu	r16, r22
    9280:	00 fd       	sbrc	r16, 0
    9282:	fa f7       	brpl	.-2      	; 0x9282 <waves+0x82>
    9284:	f4 f0       	brlt	.+60     	; 0x92c2 <waves+0xc2>
    9286:	ed ea       	ldi	r30, 0xAD	; 173
    9288:	e7 e4       	ldi	r30, 0x47	; 71
    928a:	e1 de       	rcall	.-574    	; 0x904e <ProcessMusic+0x386>
    928c:	db d8       	rcall	.-3658   	; 0x8444 <sync_pre_eq_cont+0x14>
    928e:	d5 d2       	rcall	.+1450   	; 0x983a <waves+0x63a>
    9290:	cf cd       	rjmp	.-1122   	; 0x8e30 <ProcessMusic+0x168>
    9292:	ca c7       	rjmp	.+3988   	; 0xa228 <drawplayer+0xc4>
    9294:	c4 c1       	rjmp	.+904    	; 0x961e <waves+0x41e>
    9296:	bf bc       	out	0x2f, r11	; 47
    9298:	b9 b7       	in	r27, 0x39	; 57
    929a:	b4 b2       	in	r11, 0x14	; 20
    929c:	af ad       	ldd	r26, Y+63	; 0x3f
    929e:	ab a8       	ldd	r10, Y+51	; 0x33
    92a0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    92a2:	a2 a0       	ldd	r10, Z+34	; 0x22
    92a4:	9e 9c       	mul	r9, r14
    92a6:	9a 98       	cbi	0x13, 2	; 19
    92a8:	96 95       	lsr	r25
    92aa:	93 91       	.word	0x9193	; ????
    92ac:	90 8f       	std	Z+24, r25	; 0x18
    92ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    92b0:	8b 8a       	std	Y+19, r8	; 0x13
    92b2:	88 87       	std	Y+8, r24	; 0x08
    92b4:	86 86       	std	Z+14, r8	; 0x0e
    92b6:	85 84       	ldd	r8, Z+13	; 0x0d
    92b8:	83 83       	std	Z+3, r24	; 0x03
    92ba:	82 82       	std	Z+2, r8	; 0x02
    92bc:	82 81       	ldd	r24, Z+2	; 0x02
    92be:	81 81       	ldd	r24, Z+1	; 0x01
    92c0:	81 81       	ldd	r24, Z+1	; 0x01
    92c2:	81 81       	ldd	r24, Z+1	; 0x01
    92c4:	82 82       	std	Z+2, r8	; 0x02
    92c6:	82 83       	std	Z+2, r24	; 0x02
    92c8:	83 84       	ldd	r8, Z+11	; 0x0b
    92ca:	85 86       	std	Z+13, r8	; 0x0d
    92cc:	86 87       	std	Z+14, r24	; 0x0e
    92ce:	88 8a       	std	Y+16, r8	; 0x10
    92d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    92d2:	8d 8f       	std	Y+29, r24	; 0x1d
    92d4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8693>
    92d8:	96 98       	cbi	0x12, 6	; 18
    92da:	9a 9c       	mul	r9, r10
    92dc:	9e a0       	ldd	r9, Y+38	; 0x26
    92de:	a2 a4       	ldd	r10, Z+42	; 0x2a
    92e0:	a6 a8       	ldd	r10, Z+54	; 0x36
    92e2:	ab ad       	ldd	r26, Y+59	; 0x3b
    92e4:	af b2       	in	r10, 0x1f	; 31
    92e6:	b4 b7       	in	r27, 0x34	; 52
    92e8:	b9 bc       	out	0x29, r11	; 41
    92ea:	bf c1       	rjmp	.+894    	; 0x966a <waves+0x46a>
    92ec:	c4 c7       	rjmp	.+3976   	; 0xa276 <drawplayer+0x112>
    92ee:	ca cd       	rjmp	.-1132   	; 0x8e84 <ProcessMusic+0x1bc>
    92f0:	cf d2       	rcall	.+1438   	; 0x9890 <waves+0x690>
    92f2:	d5 d8       	rcall	.-3670   	; 0x849e <pop_loop>
    92f4:	db de       	rcall	.-586    	; 0x90ac <set_note_waves+0x22>
    92f6:	e1 e4       	ldi	r30, 0x41	; 65
    92f8:	e7 ea       	ldi	r30, 0xA7	; 167
    92fa:	ed f0       	brhs	.+58     	; 0x9336 <waves+0x136>
    92fc:	f4 f7       	brge	.-4      	; 0x92fa <waves+0xfa>
    92fe:	fa fd       	.word	0xfdfa	; ????
    9300:	80 81       	ld	r24, Z
    9302:	82 83       	std	Z+2, r24	; 0x02
    9304:	84 85       	ldd	r24, Z+12	; 0x0c
    9306:	86 87       	std	Z+14, r24	; 0x0e
    9308:	88 89       	ldd	r24, Y+16	; 0x10
    930a:	8a 8b       	std	Y+18, r24	; 0x12
    930c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    930e:	8e 8f       	std	Y+30, r24	; 0x1e
    9310:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8492>
    9314:	94 95       	.word	0x9594	; ????
    9316:	96 97       	sbiw	r26, 0x26	; 38
    9318:	98 99       	sbic	0x13, 0	; 19
    931a:	9a 9b       	sbis	0x13, 2	; 19
    931c:	9c 9d       	mul	r25, r12
    931e:	9e 9f       	mul	r25, r30
    9320:	a0 a1       	ldd	r26, Z+32	; 0x20
    9322:	a2 a3       	std	Z+34, r26	; 0x22
    9324:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9326:	a6 a7       	std	Z+46, r26	; 0x2e
    9328:	a8 a9       	ldd	r26, Y+48	; 0x30
    932a:	aa ab       	std	Y+50, r26	; 0x32
    932c:	ac ad       	ldd	r26, Y+60	; 0x3c
    932e:	ae af       	std	Y+62, r26	; 0x3e
    9330:	b0 b1       	in	r27, 0x00	; 0
    9332:	b2 b3       	in	r27, 0x12	; 18
    9334:	b4 b5       	in	r27, 0x24	; 36
    9336:	b6 b7       	in	r27, 0x36	; 54
    9338:	b8 b9       	out	0x08, r27	; 8
    933a:	ba bb       	out	0x1a, r27	; 26
    933c:	bc bd       	out	0x2c, r27	; 44
    933e:	be bf       	out	0x3e, r27	; 62
    9340:	c0 c1       	rjmp	.+896    	; 0x96c2 <waves+0x4c2>
    9342:	c2 c3       	rjmp	.+1924   	; 0x9ac8 <waves+0x8c8>
    9344:	c4 c5       	rjmp	.+2952   	; 0x9ece <MapSprite2+0x3e>
    9346:	c6 c7       	rjmp	.+3980   	; 0xa2d4 <drawplayer2+0x44>
    9348:	c8 c9       	rjmp	.-3184   	; 0x86da <SetTile+0x8>
    934a:	ca cb       	rjmp	.-2156   	; 0x8ae0 <TriggerCommon+0x2a>
    934c:	cc cd       	rjmp	.-1128   	; 0x8ee6 <ProcessMusic+0x21e>
    934e:	ce cf       	rjmp	.-100    	; 0x92ec <waves+0xec>
    9350:	d0 d1       	rcall	.+928    	; 0x96f2 <waves+0x4f2>
    9352:	d2 d3       	rcall	.+1956   	; 0x9af8 <waves+0x8f8>
    9354:	d4 d5       	rcall	.+2984   	; 0x9efe <MapSprite2+0x6e>
    9356:	d6 d7       	rcall	.+4012   	; 0xa304 <drawplayer2+0x74>
    9358:	d8 d9       	rcall	.-3152   	; 0x870a <ClearVsyncFlag+0x4>
    935a:	da db       	rcall	.-2124   	; 0x8b10 <TriggerCommon+0x5a>
    935c:	dc dd       	rcall	.-1096   	; 0x8f16 <ProcessMusic+0x24e>
    935e:	de df       	rcall	.-68     	; 0x931c <waves+0x11c>
    9360:	e0 e1       	ldi	r30, 0x10	; 16
    9362:	e2 e3       	ldi	r30, 0x32	; 50
    9364:	e4 e5       	ldi	r30, 0x54	; 84
    9366:	e6 e7       	ldi	r30, 0x76	; 118
    9368:	e8 e9       	ldi	r30, 0x98	; 152
    936a:	ea eb       	ldi	r30, 0xBA	; 186
    936c:	ec ed       	ldi	r30, 0xDC	; 220
    936e:	ee ef       	ldi	r30, 0xFE	; 254
    9370:	f0 f1       	brcs	.+124    	; 0x93ee <waves+0x1ee>
    9372:	f2 f3       	brmi	.-4      	; 0x9370 <waves+0x170>
    9374:	f4 f5       	brge	.+124    	; 0x93f2 <waves+0x1f2>
    9376:	f6 f7       	brtc	.-4      	; 0x9374 <waves+0x174>
    9378:	f8 f9       	.word	0xf9f8	; ????
    937a:	fa fb       	.word	0xfbfa	; ????
    937c:	fc fd       	.word	0xfdfc	; ????
    937e:	fe ff       	.word	0xfffe	; ????
    9380:	00 01       	movw	r0, r0
    9382:	02 03       	mulsu	r16, r18
    9384:	04 05       	cpc	r16, r4
    9386:	06 07       	cpc	r16, r22
    9388:	08 09       	sbc	r16, r8
    938a:	0a 0b       	sbc	r16, r26
    938c:	0c 0d       	add	r16, r12
    938e:	0e 0f       	add	r16, r30
    9390:	10 11       	cpse	r17, r0
    9392:	12 13       	cpse	r17, r18
    9394:	14 15       	cp	r17, r4
    9396:	16 17       	cp	r17, r22
    9398:	18 19       	sub	r17, r8
    939a:	1a 1b       	sub	r17, r26
    939c:	1c 1d       	adc	r17, r12
    939e:	1e 1f       	adc	r17, r30
    93a0:	20 21       	and	r18, r0
    93a2:	22 23       	and	r18, r18
    93a4:	24 25       	eor	r18, r4
    93a6:	26 27       	eor	r18, r22
    93a8:	28 29       	or	r18, r8
    93aa:	2a 2b       	or	r18, r26
    93ac:	2c 2d       	mov	r18, r12
    93ae:	2e 2f       	mov	r18, r30
    93b0:	30 31       	cpi	r19, 0x10	; 16
    93b2:	32 33       	cpi	r19, 0x32	; 50
    93b4:	34 35       	cpi	r19, 0x54	; 84
    93b6:	36 37       	cpi	r19, 0x76	; 118
    93b8:	38 39       	cpi	r19, 0x98	; 152
    93ba:	3a 3b       	cpi	r19, 0xBA	; 186
    93bc:	3c 3d       	cpi	r19, 0xDC	; 220
    93be:	3e 3f       	cpi	r19, 0xFE	; 254
    93c0:	40 41       	sbci	r20, 0x10	; 16
    93c2:	42 43       	sbci	r20, 0x32	; 50
    93c4:	44 45       	sbci	r20, 0x54	; 84
    93c6:	46 47       	sbci	r20, 0x76	; 118
    93c8:	48 49       	sbci	r20, 0x98	; 152
    93ca:	4a 4b       	sbci	r20, 0xBA	; 186
    93cc:	4c 4d       	sbci	r20, 0xDC	; 220
    93ce:	4e 4f       	sbci	r20, 0xFE	; 254
    93d0:	50 51       	subi	r21, 0x10	; 16
    93d2:	52 53       	subi	r21, 0x32	; 50
    93d4:	54 55       	subi	r21, 0x54	; 84
    93d6:	56 57       	subi	r21, 0x76	; 118
    93d8:	58 59       	subi	r21, 0x98	; 152
    93da:	5a 5b       	subi	r21, 0xBA	; 186
    93dc:	5c 5d       	subi	r21, 0xDC	; 220
    93de:	5e 5f       	subi	r21, 0xFE	; 254
    93e0:	60 61       	ori	r22, 0x10	; 16
    93e2:	62 63       	ori	r22, 0x32	; 50
    93e4:	64 65       	ori	r22, 0x54	; 84
    93e6:	66 67       	ori	r22, 0x76	; 118
    93e8:	68 69       	ori	r22, 0x98	; 152
    93ea:	6a 6b       	ori	r22, 0xBA	; 186
    93ec:	6c 6d       	ori	r22, 0xDC	; 220
    93ee:	6e 6f       	ori	r22, 0xFE	; 254
    93f0:	70 71       	andi	r23, 0x10	; 16
    93f2:	72 73       	andi	r23, 0x32	; 50
    93f4:	74 75       	andi	r23, 0x54	; 84
    93f6:	76 77       	andi	r23, 0x76	; 118
    93f8:	78 79       	andi	r23, 0x98	; 152
    93fa:	7a 7b       	andi	r23, 0xBA	; 186
    93fc:	7c 7d       	andi	r23, 0xDC	; 220
    93fe:	7e 7f       	andi	r23, 0xFE	; 254
    9400:	00 02       	muls	r16, r16
    9402:	04 06       	cpc	r0, r20
    9404:	08 0a       	sbc	r0, r24
    9406:	0c 0e       	add	r0, r28
    9408:	10 12       	cpse	r1, r16
    940a:	14 16       	cp	r1, r20
    940c:	18 1a       	sub	r1, r24
    940e:	1c 1e       	adc	r1, r28
    9410:	20 22       	and	r2, r16
    9412:	24 26       	eor	r2, r20
    9414:	28 2a       	or	r2, r24
    9416:	2c 2e       	mov	r2, r28
    9418:	30 32       	cpi	r19, 0x20	; 32
    941a:	34 36       	cpi	r19, 0x64	; 100
    941c:	38 3a       	cpi	r19, 0xA8	; 168
    941e:	3c 3e       	cpi	r19, 0xEC	; 236
    9420:	40 42       	sbci	r20, 0x20	; 32
    9422:	44 46       	sbci	r20, 0x64	; 100
    9424:	48 4a       	sbci	r20, 0xA8	; 168
    9426:	4c 4e       	sbci	r20, 0xEC	; 236
    9428:	50 52       	subi	r21, 0x20	; 32
    942a:	54 56       	subi	r21, 0x64	; 100
    942c:	58 5a       	subi	r21, 0xA8	; 168
    942e:	5c 5e       	subi	r21, 0xEC	; 236
    9430:	60 62       	ori	r22, 0x20	; 32
    9432:	64 66       	ori	r22, 0x64	; 100
    9434:	68 6a       	ori	r22, 0xA8	; 168
    9436:	6c 6e       	ori	r22, 0xEC	; 236
    9438:	70 72       	andi	r23, 0x20	; 32
    943a:	74 76       	andi	r23, 0x64	; 100
    943c:	78 7a       	andi	r23, 0xA8	; 168
    943e:	7c 7e       	andi	r23, 0xEC	; 236
    9440:	7f 7d       	andi	r23, 0xDF	; 223
    9442:	7b 79       	andi	r23, 0x9B	; 155
    9444:	77 75       	andi	r23, 0x57	; 87
    9446:	73 71       	andi	r23, 0x13	; 19
    9448:	6f 6d       	ori	r22, 0xDF	; 223
    944a:	6b 69       	ori	r22, 0x9B	; 155
    944c:	67 65       	ori	r22, 0x57	; 87
    944e:	63 61       	ori	r22, 0x13	; 19
    9450:	5f 5d       	subi	r21, 0xDF	; 223
    9452:	5b 59       	subi	r21, 0x9B	; 155
    9454:	57 55       	subi	r21, 0x57	; 87
    9456:	53 51       	subi	r21, 0x13	; 19
    9458:	4f 4d       	sbci	r20, 0xDF	; 223
    945a:	4b 49       	sbci	r20, 0x9B	; 155
    945c:	47 45       	sbci	r20, 0x57	; 87
    945e:	43 41       	sbci	r20, 0x13	; 19
    9460:	3f 3d       	cpi	r19, 0xDF	; 223
    9462:	3b 39       	cpi	r19, 0x9B	; 155
    9464:	37 35       	cpi	r19, 0x57	; 87
    9466:	33 31       	cpi	r19, 0x13	; 19
    9468:	2f 2d       	mov	r18, r15
    946a:	2b 29       	or	r18, r11
    946c:	27 25       	eor	r18, r7
    946e:	23 21       	and	r18, r3
    9470:	1f 1d       	adc	r17, r15
    9472:	1b 19       	sub	r17, r11
    9474:	17 15       	cp	r17, r7
    9476:	13 11       	cpse	r17, r3
    9478:	0f 0d       	add	r16, r15
    947a:	0b 09       	sbc	r16, r11
    947c:	07 05       	cpc	r16, r7
    947e:	03 01       	movw	r0, r6
    9480:	ff fd       	.word	0xfdff	; ????
    9482:	fb f9       	.word	0xf9fb	; ????
    9484:	f7 f5       	brid	.+124    	; 0x9502 <waves+0x302>
    9486:	f3 f1       	brvs	.+124    	; 0x9504 <waves+0x304>
    9488:	ef ed       	ldi	r30, 0xDF	; 223
    948a:	eb e9       	ldi	r30, 0x9B	; 155
    948c:	e7 e5       	ldi	r30, 0x57	; 87
    948e:	e3 e1       	ldi	r30, 0x13	; 19
    9490:	df dd       	rcall	.-1090   	; 0x9050 <ProcessMusic+0x388>
    9492:	db d9       	rcall	.-3146   	; 0x884a <isEepromFormatted+0x8>
    9494:	d7 d5       	rcall	.+2990   	; 0xa044 <DisplayLogo+0x14>
    9496:	d3 d1       	rcall	.+934    	; 0x983e <waves+0x63e>
    9498:	cf cd       	rjmp	.-1122   	; 0x9038 <ProcessMusic+0x370>
    949a:	cb c9       	rjmp	.-3178   	; 0x8832 <FormatEeprom+0x34>
    949c:	c7 c5       	rjmp	.+2958   	; 0xa02c <WaitVsync+0x2a>
    949e:	c3 c1       	rjmp	.+902    	; 0x9826 <waves+0x626>
    94a0:	bf bd       	out	0x2f, r27	; 47
    94a2:	bb b9       	out	0x0b, r27	; 11
    94a4:	b7 b5       	in	r27, 0x27	; 39
    94a6:	b3 b1       	in	r27, 0x03	; 3
    94a8:	af ad       	ldd	r26, Y+63	; 0x3f
    94aa:	ab a9       	ldd	r26, Y+51	; 0x33
    94ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    94ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    94b0:	9f 9d       	mul	r25, r15
    94b2:	9b 99       	sbic	0x13, 3	; 19
    94b4:	97 95       	ror	r25
    94b6:	93 91       	.word	0x9193	; ????
    94b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    94ba:	8b 89       	ldd	r24, Y+19	; 0x13
    94bc:	87 85       	ldd	r24, Z+15	; 0x0f
    94be:	83 81       	ldd	r24, Z+3	; 0x03
    94c0:	80 82       	st	Z, r8
    94c2:	84 86       	std	Z+12, r8	; 0x0c
    94c4:	88 8a       	std	Y+16, r8	; 0x10
    94c6:	8c 8e       	std	Y+28, r8	; 0x1c
    94c8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8794>
    94cc:	98 9a       	sbi	0x13, 0	; 19
    94ce:	9c 9e       	mul	r9, r28
    94d0:	a0 a2       	std	Z+32, r10	; 0x20
    94d2:	a4 a6       	std	Z+44, r10	; 0x2c
    94d4:	a8 aa       	std	Y+48, r10	; 0x30
    94d6:	ac ae       	std	Y+60, r10	; 0x3c
    94d8:	b0 b2       	in	r11, 0x10	; 16
    94da:	b4 b6       	in	r11, 0x34	; 52
    94dc:	b8 ba       	out	0x18, r11	; 24
    94de:	bc be       	out	0x3c, r11	; 60
    94e0:	c0 c2       	rjmp	.+1408   	; 0x9a62 <waves+0x862>
    94e2:	c4 c6       	rjmp	.+3464   	; 0xa26c <drawplayer+0x108>
    94e4:	c8 ca       	rjmp	.-2672   	; 0x8a76 <ReadVarLen+0xc>
    94e6:	cc ce       	rjmp	.-616    	; 0x9280 <waves+0x80>
    94e8:	d0 d2       	rcall	.+1440   	; 0x9a8a <waves+0x88a>
    94ea:	d4 d6       	rcall	.+3496   	; 0xa294 <drawplayer2+0x4>
    94ec:	d8 da       	rcall	.-2640   	; 0x8a9e <ReadVarLen+0x34>
    94ee:	dc de       	rcall	.-584    	; 0x92a8 <waves+0xa8>
    94f0:	e0 e2       	ldi	r30, 0x20	; 32
    94f2:	e4 e6       	ldi	r30, 0x64	; 100
    94f4:	e8 ea       	ldi	r30, 0xA8	; 168
    94f6:	ec ee       	ldi	r30, 0xEC	; 236
    94f8:	f0 f2       	brcs	.-68     	; 0x94b6 <waves+0x2b6>
    94fa:	f4 f6       	brge	.-68     	; 0x94b8 <waves+0x2b8>
    94fc:	f8 fa       	.word	0xfaf8	; ????
    94fe:	fc fe       	.word	0xfefc	; ????
    9500:	7f 7f       	andi	r23, 0xFF	; 255
    9502:	7f 7f       	andi	r23, 0xFF	; 255
    9504:	7f 7f       	andi	r23, 0xFF	; 255
    9506:	7f 7f       	andi	r23, 0xFF	; 255
    9508:	7f 7f       	andi	r23, 0xFF	; 255
    950a:	7f 7f       	andi	r23, 0xFF	; 255
    950c:	7f 7f       	andi	r23, 0xFF	; 255
    950e:	7f 7f       	andi	r23, 0xFF	; 255
    9510:	7f 7f       	andi	r23, 0xFF	; 255
    9512:	7f 7f       	andi	r23, 0xFF	; 255
    9514:	7f 7f       	andi	r23, 0xFF	; 255
    9516:	7f 7f       	andi	r23, 0xFF	; 255
    9518:	7f 7f       	andi	r23, 0xFF	; 255
    951a:	7f 7f       	andi	r23, 0xFF	; 255
    951c:	7f 7f       	andi	r23, 0xFF	; 255
    951e:	7f 7f       	andi	r23, 0xFF	; 255
    9520:	7f 7f       	andi	r23, 0xFF	; 255
    9522:	7f 7f       	andi	r23, 0xFF	; 255
    9524:	7f 7f       	andi	r23, 0xFF	; 255
    9526:	7f 7f       	andi	r23, 0xFF	; 255
    9528:	7f 7f       	andi	r23, 0xFF	; 255
    952a:	7f 7f       	andi	r23, 0xFF	; 255
    952c:	7f 7f       	andi	r23, 0xFF	; 255
    952e:	7f 7f       	andi	r23, 0xFF	; 255
    9530:	7f 7f       	andi	r23, 0xFF	; 255
    9532:	7f 7f       	andi	r23, 0xFF	; 255
    9534:	7f 7f       	andi	r23, 0xFF	; 255
    9536:	7f 7f       	andi	r23, 0xFF	; 255
    9538:	7f 7f       	andi	r23, 0xFF	; 255
    953a:	7f 7f       	andi	r23, 0xFF	; 255
    953c:	7f 7f       	andi	r23, 0xFF	; 255
    953e:	7f 7f       	andi	r23, 0xFF	; 255
    9540:	80 80       	ld	r8, Z
    9542:	80 80       	ld	r8, Z
    9544:	80 80       	ld	r8, Z
    9546:	80 80       	ld	r8, Z
    9548:	80 80       	ld	r8, Z
    954a:	80 80       	ld	r8, Z
    954c:	80 80       	ld	r8, Z
    954e:	80 80       	ld	r8, Z
    9550:	80 80       	ld	r8, Z
    9552:	80 80       	ld	r8, Z
    9554:	80 80       	ld	r8, Z
    9556:	80 80       	ld	r8, Z
    9558:	80 80       	ld	r8, Z
    955a:	80 80       	ld	r8, Z
    955c:	80 80       	ld	r8, Z
    955e:	80 80       	ld	r8, Z
    9560:	80 80       	ld	r8, Z
    9562:	80 80       	ld	r8, Z
    9564:	80 80       	ld	r8, Z
    9566:	80 80       	ld	r8, Z
    9568:	80 80       	ld	r8, Z
    956a:	80 80       	ld	r8, Z
    956c:	80 80       	ld	r8, Z
    956e:	80 80       	ld	r8, Z
    9570:	80 80       	ld	r8, Z
    9572:	80 80       	ld	r8, Z
    9574:	80 80       	ld	r8, Z
    9576:	80 80       	ld	r8, Z
    9578:	80 80       	ld	r8, Z
    957a:	80 80       	ld	r8, Z
    957c:	80 80       	ld	r8, Z
    957e:	80 80       	ld	r8, Z
    9580:	80 80       	ld	r8, Z
    9582:	80 80       	ld	r8, Z
    9584:	80 80       	ld	r8, Z
    9586:	80 80       	ld	r8, Z
    9588:	80 80       	ld	r8, Z
    958a:	80 80       	ld	r8, Z
    958c:	80 80       	ld	r8, Z
    958e:	80 80       	ld	r8, Z
    9590:	80 80       	ld	r8, Z
    9592:	80 80       	ld	r8, Z
    9594:	80 80       	ld	r8, Z
    9596:	80 80       	ld	r8, Z
    9598:	80 80       	ld	r8, Z
    959a:	80 80       	ld	r8, Z
    959c:	80 80       	ld	r8, Z
    959e:	80 80       	ld	r8, Z
    95a0:	80 80       	ld	r8, Z
    95a2:	80 80       	ld	r8, Z
    95a4:	80 80       	ld	r8, Z
    95a6:	80 80       	ld	r8, Z
    95a8:	80 80       	ld	r8, Z
    95aa:	80 80       	ld	r8, Z
    95ac:	80 80       	ld	r8, Z
    95ae:	80 80       	ld	r8, Z
    95b0:	80 80       	ld	r8, Z
    95b2:	80 80       	ld	r8, Z
    95b4:	80 80       	ld	r8, Z
    95b6:	80 80       	ld	r8, Z
    95b8:	80 80       	ld	r8, Z
    95ba:	80 80       	ld	r8, Z
    95bc:	80 80       	ld	r8, Z
    95be:	80 80       	ld	r8, Z
    95c0:	80 80       	ld	r8, Z
    95c2:	80 80       	ld	r8, Z
    95c4:	80 80       	ld	r8, Z
    95c6:	80 80       	ld	r8, Z
    95c8:	80 80       	ld	r8, Z
    95ca:	80 80       	ld	r8, Z
    95cc:	80 80       	ld	r8, Z
    95ce:	80 80       	ld	r8, Z
    95d0:	80 80       	ld	r8, Z
    95d2:	80 80       	ld	r8, Z
    95d4:	80 80       	ld	r8, Z
    95d6:	80 80       	ld	r8, Z
    95d8:	80 80       	ld	r8, Z
    95da:	80 80       	ld	r8, Z
    95dc:	80 80       	ld	r8, Z
    95de:	80 80       	ld	r8, Z
    95e0:	80 80       	ld	r8, Z
    95e2:	80 80       	ld	r8, Z
    95e4:	80 80       	ld	r8, Z
    95e6:	80 80       	ld	r8, Z
    95e8:	80 80       	ld	r8, Z
    95ea:	80 80       	ld	r8, Z
    95ec:	80 80       	ld	r8, Z
    95ee:	80 80       	ld	r8, Z
    95f0:	80 80       	ld	r8, Z
    95f2:	80 80       	ld	r8, Z
    95f4:	80 80       	ld	r8, Z
    95f6:	80 80       	ld	r8, Z
    95f8:	80 80       	ld	r8, Z
    95fa:	80 80       	ld	r8, Z
    95fc:	80 80       	ld	r8, Z
    95fe:	80 80       	ld	r8, Z
    9600:	7f 7f       	andi	r23, 0xFF	; 255
    9602:	7f 7f       	andi	r23, 0xFF	; 255
    9604:	7f 7f       	andi	r23, 0xFF	; 255
    9606:	7f 7f       	andi	r23, 0xFF	; 255
    9608:	7f 7f       	andi	r23, 0xFF	; 255
    960a:	7f 7f       	andi	r23, 0xFF	; 255
    960c:	7f 7f       	andi	r23, 0xFF	; 255
    960e:	7f 7f       	andi	r23, 0xFF	; 255
    9610:	7f 7f       	andi	r23, 0xFF	; 255
    9612:	7f 7f       	andi	r23, 0xFF	; 255
    9614:	7f 7f       	andi	r23, 0xFF	; 255
    9616:	7f 7f       	andi	r23, 0xFF	; 255
    9618:	7f 7f       	andi	r23, 0xFF	; 255
    961a:	7f 7f       	andi	r23, 0xFF	; 255
    961c:	7f 7f       	andi	r23, 0xFF	; 255
    961e:	7f 7f       	andi	r23, 0xFF	; 255
    9620:	7f 7f       	andi	r23, 0xFF	; 255
    9622:	7f 7f       	andi	r23, 0xFF	; 255
    9624:	7f 7f       	andi	r23, 0xFF	; 255
    9626:	7f 7f       	andi	r23, 0xFF	; 255
    9628:	7f 7f       	andi	r23, 0xFF	; 255
    962a:	7f 7f       	andi	r23, 0xFF	; 255
    962c:	7f 7f       	andi	r23, 0xFF	; 255
    962e:	7f 7f       	andi	r23, 0xFF	; 255
    9630:	7f 7f       	andi	r23, 0xFF	; 255
    9632:	7f 7f       	andi	r23, 0xFF	; 255
    9634:	7f 7f       	andi	r23, 0xFF	; 255
    9636:	7f 7f       	andi	r23, 0xFF	; 255
    9638:	7f 7f       	andi	r23, 0xFF	; 255
    963a:	7f 7f       	andi	r23, 0xFF	; 255
    963c:	7f 7f       	andi	r23, 0xFF	; 255
    963e:	7f 7f       	andi	r23, 0xFF	; 255
    9640:	7f 7f       	andi	r23, 0xFF	; 255
    9642:	7f 7f       	andi	r23, 0xFF	; 255
    9644:	7f 7f       	andi	r23, 0xFF	; 255
    9646:	7f 7f       	andi	r23, 0xFF	; 255
    9648:	7f 7f       	andi	r23, 0xFF	; 255
    964a:	7f 7f       	andi	r23, 0xFF	; 255
    964c:	7f 7f       	andi	r23, 0xFF	; 255
    964e:	7f 7f       	andi	r23, 0xFF	; 255
    9650:	7f 7f       	andi	r23, 0xFF	; 255
    9652:	7f 7f       	andi	r23, 0xFF	; 255
    9654:	7f 7f       	andi	r23, 0xFF	; 255
    9656:	7f 7f       	andi	r23, 0xFF	; 255
    9658:	7f 7f       	andi	r23, 0xFF	; 255
    965a:	7f 7f       	andi	r23, 0xFF	; 255
    965c:	7f 7f       	andi	r23, 0xFF	; 255
    965e:	7f 7f       	andi	r23, 0xFF	; 255
    9660:	7f 7f       	andi	r23, 0xFF	; 255
    9662:	7f 7f       	andi	r23, 0xFF	; 255
    9664:	7f 7f       	andi	r23, 0xFF	; 255
    9666:	7f 7f       	andi	r23, 0xFF	; 255
    9668:	7f 7f       	andi	r23, 0xFF	; 255
    966a:	7f 7f       	andi	r23, 0xFF	; 255
    966c:	7f 7f       	andi	r23, 0xFF	; 255
    966e:	7f 7f       	andi	r23, 0xFF	; 255
    9670:	7f 7f       	andi	r23, 0xFF	; 255
    9672:	7f 7f       	andi	r23, 0xFF	; 255
    9674:	7f 7f       	andi	r23, 0xFF	; 255
    9676:	7f 7f       	andi	r23, 0xFF	; 255
    9678:	7f 7f       	andi	r23, 0xFF	; 255
    967a:	7f 7f       	andi	r23, 0xFF	; 255
    967c:	7f 7f       	andi	r23, 0xFF	; 255
    967e:	7f 7f       	andi	r23, 0xFF	; 255
    9680:	80 80       	ld	r8, Z
    9682:	80 80       	ld	r8, Z
    9684:	80 80       	ld	r8, Z
    9686:	80 80       	ld	r8, Z
    9688:	80 80       	ld	r8, Z
    968a:	80 80       	ld	r8, Z
    968c:	80 80       	ld	r8, Z
    968e:	80 80       	ld	r8, Z
    9690:	80 80       	ld	r8, Z
    9692:	80 80       	ld	r8, Z
    9694:	80 80       	ld	r8, Z
    9696:	80 80       	ld	r8, Z
    9698:	80 80       	ld	r8, Z
    969a:	80 80       	ld	r8, Z
    969c:	80 80       	ld	r8, Z
    969e:	80 80       	ld	r8, Z
    96a0:	80 80       	ld	r8, Z
    96a2:	80 80       	ld	r8, Z
    96a4:	80 80       	ld	r8, Z
    96a6:	80 80       	ld	r8, Z
    96a8:	80 80       	ld	r8, Z
    96aa:	80 80       	ld	r8, Z
    96ac:	80 80       	ld	r8, Z
    96ae:	80 80       	ld	r8, Z
    96b0:	80 80       	ld	r8, Z
    96b2:	80 80       	ld	r8, Z
    96b4:	80 80       	ld	r8, Z
    96b6:	80 80       	ld	r8, Z
    96b8:	80 80       	ld	r8, Z
    96ba:	80 80       	ld	r8, Z
    96bc:	80 80       	ld	r8, Z
    96be:	80 80       	ld	r8, Z
    96c0:	80 80       	ld	r8, Z
    96c2:	80 80       	ld	r8, Z
    96c4:	80 80       	ld	r8, Z
    96c6:	80 80       	ld	r8, Z
    96c8:	80 80       	ld	r8, Z
    96ca:	80 80       	ld	r8, Z
    96cc:	80 80       	ld	r8, Z
    96ce:	80 80       	ld	r8, Z
    96d0:	80 80       	ld	r8, Z
    96d2:	80 80       	ld	r8, Z
    96d4:	80 80       	ld	r8, Z
    96d6:	80 80       	ld	r8, Z
    96d8:	80 80       	ld	r8, Z
    96da:	80 80       	ld	r8, Z
    96dc:	80 80       	ld	r8, Z
    96de:	80 80       	ld	r8, Z
    96e0:	80 80       	ld	r8, Z
    96e2:	80 80       	ld	r8, Z
    96e4:	80 80       	ld	r8, Z
    96e6:	80 80       	ld	r8, Z
    96e8:	80 80       	ld	r8, Z
    96ea:	80 80       	ld	r8, Z
    96ec:	80 80       	ld	r8, Z
    96ee:	80 80       	ld	r8, Z
    96f0:	80 80       	ld	r8, Z
    96f2:	80 80       	ld	r8, Z
    96f4:	80 80       	ld	r8, Z
    96f6:	80 80       	ld	r8, Z
    96f8:	80 80       	ld	r8, Z
    96fa:	80 80       	ld	r8, Z
    96fc:	80 80       	ld	r8, Z
    96fe:	80 80       	ld	r8, Z
    9700:	7f 7f       	andi	r23, 0xFF	; 255
    9702:	7f 7f       	andi	r23, 0xFF	; 255
    9704:	7f 7f       	andi	r23, 0xFF	; 255
    9706:	7f 7f       	andi	r23, 0xFF	; 255
    9708:	7f 7f       	andi	r23, 0xFF	; 255
    970a:	7f 7f       	andi	r23, 0xFF	; 255
    970c:	7f 7f       	andi	r23, 0xFF	; 255
    970e:	7f 7f       	andi	r23, 0xFF	; 255
    9710:	7f 7f       	andi	r23, 0xFF	; 255
    9712:	7f 7f       	andi	r23, 0xFF	; 255
    9714:	7f 7f       	andi	r23, 0xFF	; 255
    9716:	7f 7f       	andi	r23, 0xFF	; 255
    9718:	7f 7f       	andi	r23, 0xFF	; 255
    971a:	7f 7f       	andi	r23, 0xFF	; 255
    971c:	7f 7f       	andi	r23, 0xFF	; 255
    971e:	7f 7f       	andi	r23, 0xFF	; 255
    9720:	7f 7f       	andi	r23, 0xFF	; 255
    9722:	7f 7f       	andi	r23, 0xFF	; 255
    9724:	7f 7f       	andi	r23, 0xFF	; 255
    9726:	7f 7f       	andi	r23, 0xFF	; 255
    9728:	7f 7f       	andi	r23, 0xFF	; 255
    972a:	7f 7f       	andi	r23, 0xFF	; 255
    972c:	7f 7f       	andi	r23, 0xFF	; 255
    972e:	7f 7f       	andi	r23, 0xFF	; 255
    9730:	7f 7f       	andi	r23, 0xFF	; 255
    9732:	7f 7f       	andi	r23, 0xFF	; 255
    9734:	7f 7f       	andi	r23, 0xFF	; 255
    9736:	7f 7f       	andi	r23, 0xFF	; 255
    9738:	7f 7f       	andi	r23, 0xFF	; 255
    973a:	7f 7f       	andi	r23, 0xFF	; 255
    973c:	7f 7f       	andi	r23, 0xFF	; 255
    973e:	7f 7f       	andi	r23, 0xFF	; 255
    9740:	7f 7f       	andi	r23, 0xFF	; 255
    9742:	7f 7f       	andi	r23, 0xFF	; 255
    9744:	7f 7f       	andi	r23, 0xFF	; 255
    9746:	7f 7f       	andi	r23, 0xFF	; 255
    9748:	7f 7f       	andi	r23, 0xFF	; 255
    974a:	7f 7f       	andi	r23, 0xFF	; 255
    974c:	7f 7f       	andi	r23, 0xFF	; 255
    974e:	7f 7f       	andi	r23, 0xFF	; 255
    9750:	7f 7f       	andi	r23, 0xFF	; 255
    9752:	7f 7f       	andi	r23, 0xFF	; 255
    9754:	7f 7f       	andi	r23, 0xFF	; 255
    9756:	7f 7f       	andi	r23, 0xFF	; 255
    9758:	7f 7f       	andi	r23, 0xFF	; 255
    975a:	7f 7f       	andi	r23, 0xFF	; 255
    975c:	7f 7f       	andi	r23, 0xFF	; 255
    975e:	7f 7f       	andi	r23, 0xFF	; 255
    9760:	7f 7f       	andi	r23, 0xFF	; 255
    9762:	7f 7f       	andi	r23, 0xFF	; 255
    9764:	7f 7f       	andi	r23, 0xFF	; 255
    9766:	7f 7f       	andi	r23, 0xFF	; 255
    9768:	7f 7f       	andi	r23, 0xFF	; 255
    976a:	7f 7f       	andi	r23, 0xFF	; 255
    976c:	7f 7f       	andi	r23, 0xFF	; 255
    976e:	7f 7f       	andi	r23, 0xFF	; 255
    9770:	7f 7f       	andi	r23, 0xFF	; 255
    9772:	7f 7f       	andi	r23, 0xFF	; 255
    9774:	7f 7f       	andi	r23, 0xFF	; 255
    9776:	7f 7f       	andi	r23, 0xFF	; 255
    9778:	7f 7f       	andi	r23, 0xFF	; 255
    977a:	7f 7f       	andi	r23, 0xFF	; 255
    977c:	7f 7f       	andi	r23, 0xFF	; 255
    977e:	7f 7f       	andi	r23, 0xFF	; 255
    9780:	7f 7f       	andi	r23, 0xFF	; 255
    9782:	7f 7f       	andi	r23, 0xFF	; 255
    9784:	7f 7f       	andi	r23, 0xFF	; 255
    9786:	7f 7f       	andi	r23, 0xFF	; 255
    9788:	7f 7f       	andi	r23, 0xFF	; 255
    978a:	7f 7f       	andi	r23, 0xFF	; 255
    978c:	7f 7f       	andi	r23, 0xFF	; 255
    978e:	7f 7f       	andi	r23, 0xFF	; 255
    9790:	7f 7f       	andi	r23, 0xFF	; 255
    9792:	7f 7f       	andi	r23, 0xFF	; 255
    9794:	7f 7f       	andi	r23, 0xFF	; 255
    9796:	7f 7f       	andi	r23, 0xFF	; 255
    9798:	7f 7f       	andi	r23, 0xFF	; 255
    979a:	7f 7f       	andi	r23, 0xFF	; 255
    979c:	7f 7f       	andi	r23, 0xFF	; 255
    979e:	7f 7f       	andi	r23, 0xFF	; 255
    97a0:	7f 7f       	andi	r23, 0xFF	; 255
    97a2:	7f 7f       	andi	r23, 0xFF	; 255
    97a4:	7f 7f       	andi	r23, 0xFF	; 255
    97a6:	7f 7f       	andi	r23, 0xFF	; 255
    97a8:	7f 7f       	andi	r23, 0xFF	; 255
    97aa:	7f 7f       	andi	r23, 0xFF	; 255
    97ac:	7f 7f       	andi	r23, 0xFF	; 255
    97ae:	7f 7f       	andi	r23, 0xFF	; 255
    97b0:	7f 7f       	andi	r23, 0xFF	; 255
    97b2:	7f 7f       	andi	r23, 0xFF	; 255
    97b4:	7f 7f       	andi	r23, 0xFF	; 255
    97b6:	7f 7f       	andi	r23, 0xFF	; 255
    97b8:	7f 7f       	andi	r23, 0xFF	; 255
    97ba:	7f 7f       	andi	r23, 0xFF	; 255
    97bc:	7f 7f       	andi	r23, 0xFF	; 255
    97be:	7f 7f       	andi	r23, 0xFF	; 255
    97c0:	80 80       	ld	r8, Z
    97c2:	80 80       	ld	r8, Z
    97c4:	80 80       	ld	r8, Z
    97c6:	80 80       	ld	r8, Z
    97c8:	80 80       	ld	r8, Z
    97ca:	80 80       	ld	r8, Z
    97cc:	80 80       	ld	r8, Z
    97ce:	80 80       	ld	r8, Z
    97d0:	80 80       	ld	r8, Z
    97d2:	80 80       	ld	r8, Z
    97d4:	80 80       	ld	r8, Z
    97d6:	80 80       	ld	r8, Z
    97d8:	80 80       	ld	r8, Z
    97da:	80 80       	ld	r8, Z
    97dc:	80 80       	ld	r8, Z
    97de:	80 80       	ld	r8, Z
    97e0:	80 80       	ld	r8, Z
    97e2:	80 80       	ld	r8, Z
    97e4:	80 80       	ld	r8, Z
    97e6:	80 80       	ld	r8, Z
    97e8:	80 80       	ld	r8, Z
    97ea:	80 80       	ld	r8, Z
    97ec:	80 80       	ld	r8, Z
    97ee:	80 80       	ld	r8, Z
    97f0:	80 80       	ld	r8, Z
    97f2:	80 80       	ld	r8, Z
    97f4:	80 80       	ld	r8, Z
    97f6:	80 80       	ld	r8, Z
    97f8:	80 80       	ld	r8, Z
    97fa:	80 80       	ld	r8, Z
    97fc:	80 80       	ld	r8, Z
    97fe:	80 80       	ld	r8, Z
    9800:	03 09       	sbc	r16, r3
    9802:	13 1e       	adc	r1, r19
    9804:	28 31       	cpi	r18, 0x18	; 24
    9806:	3a 40       	sbci	r19, 0x0A	; 10
    9808:	46 4c       	sbci	r20, 0xC6	; 198
    980a:	50 54       	subi	r21, 0x40	; 64
    980c:	58 5b       	subi	r21, 0xB8	; 184
    980e:	5e 61       	ori	r21, 0x1E	; 30
    9810:	63 65       	ori	r22, 0x53	; 83
    9812:	67 69       	ori	r22, 0x97	; 151
    9814:	6b 6c       	ori	r22, 0xCB	; 203
    9816:	6e 6f       	ori	r22, 0xFE	; 254
    9818:	70 71       	andi	r23, 0x10	; 16
    981a:	72 73       	andi	r23, 0x32	; 50
    981c:	74 75       	andi	r23, 0x54	; 84
    981e:	76 77       	andi	r23, 0x76	; 118
    9820:	77 78       	andi	r23, 0x87	; 135
    9822:	79 79       	andi	r23, 0x99	; 153
    9824:	7a 7a       	andi	r23, 0xAA	; 170
    9826:	7b 7b       	andi	r23, 0xBB	; 187
    9828:	7c 7c       	andi	r23, 0xCC	; 204
    982a:	7c 7d       	andi	r23, 0xDC	; 220
    982c:	7d 7d       	andi	r23, 0xDD	; 221
    982e:	7e 7e       	andi	r23, 0xEE	; 238
    9830:	7e 7e       	andi	r23, 0xEE	; 238
    9832:	7f 7f       	andi	r23, 0xFF	; 255
    9834:	7f 7f       	andi	r23, 0xFF	; 255
    9836:	7f 7f       	andi	r23, 0xFF	; 255
    9838:	7f 7f       	andi	r23, 0xFF	; 255
    983a:	7f 7f       	andi	r23, 0xFF	; 255
    983c:	7f 7f       	andi	r23, 0xFF	; 255
    983e:	7f 7f       	andi	r23, 0xFF	; 255
    9840:	7f 7f       	andi	r23, 0xFF	; 255
    9842:	7f 7f       	andi	r23, 0xFF	; 255
    9844:	7f 7f       	andi	r23, 0xFF	; 255
    9846:	7f 7f       	andi	r23, 0xFF	; 255
    9848:	7f 7f       	andi	r23, 0xFF	; 255
    984a:	7f 7f       	andi	r23, 0xFF	; 255
    984c:	7f 7e       	andi	r23, 0xEF	; 239
    984e:	7e 7e       	andi	r23, 0xEE	; 238
    9850:	7e 7d       	andi	r23, 0xDE	; 222
    9852:	7d 7d       	andi	r23, 0xDD	; 221
    9854:	7c 7c       	andi	r23, 0xCC	; 204
    9856:	7c 7b       	andi	r23, 0xBC	; 188
    9858:	7b 7a       	andi	r23, 0xAB	; 171
    985a:	7a 79       	andi	r23, 0x9A	; 154
    985c:	79 78       	andi	r23, 0x89	; 137
    985e:	77 77       	andi	r23, 0x77	; 119
    9860:	76 75       	andi	r23, 0x56	; 86
    9862:	74 73       	andi	r23, 0x34	; 52
    9864:	72 71       	andi	r23, 0x12	; 18
    9866:	70 6f       	ori	r23, 0xF0	; 240
    9868:	6e 6c       	ori	r22, 0xCE	; 206
    986a:	6b 69       	ori	r22, 0x9B	; 155
    986c:	67 65       	ori	r22, 0x57	; 87
    986e:	63 61       	ori	r22, 0x13	; 19
    9870:	5e 5b       	subi	r21, 0xBE	; 190
    9872:	58 54       	subi	r21, 0x48	; 72
    9874:	50 4c       	sbci	r21, 0xC0	; 192
    9876:	46 40       	sbci	r20, 0x06	; 6
    9878:	3a 31       	cpi	r19, 0x1A	; 26
    987a:	28 1e       	adc	r2, r24
    987c:	13 09       	sbc	r17, r3
    987e:	03 00       	.word	0x0003	; ????
    9880:	c6 cc       	rjmp	.-1652   	; 0x920e <waves+0xe>
    9882:	d5 db       	rcall	.-2134   	; 0x902e <ProcessMusic+0x366>
    9884:	df e3       	ldi	r29, 0x3F	; 63
    9886:	e5 e7       	ldi	r30, 0x75	; 117
    9888:	e9 ea       	ldi	r30, 0xA9	; 169
    988a:	eb ec       	ldi	r30, 0xCB	; 203
    988c:	ed ee       	ldi	r30, 0xED	; 237
    988e:	ef ef       	ldi	r30, 0xFF	; 255
    9890:	f0 f0       	brcs	.+60     	; 0x98ce <waves+0x6ce>
    9892:	f0 f1       	brcs	.+124    	; 0x9910 <waves+0x710>
    9894:	f1 f1       	breq	.+124    	; 0x9912 <waves+0x712>
    9896:	f1 f2       	breq	.-68     	; 0x9854 <waves+0x654>
    9898:	f2 f2       	brmi	.-68     	; 0x9856 <waves+0x656>
    989a:	f2 f2       	brmi	.-68     	; 0x9858 <waves+0x658>
    989c:	f2 f2       	brmi	.-68     	; 0x985a <waves+0x65a>
    989e:	f2 f3       	brmi	.-4      	; 0x989c <waves+0x69c>
    98a0:	f3 f3       	brvs	.-4      	; 0x989e <waves+0x69e>
    98a2:	f3 f3       	brvs	.-4      	; 0x98a0 <waves+0x6a0>
    98a4:	f3 f3       	brvs	.-4      	; 0x98a2 <waves+0x6a2>
    98a6:	f3 f3       	brvs	.-4      	; 0x98a4 <waves+0x6a4>
    98a8:	f3 f3       	brvs	.-4      	; 0x98a6 <waves+0x6a6>
    98aa:	f3 f3       	brvs	.-4      	; 0x98a8 <waves+0x6a8>
    98ac:	f3 f3       	brvs	.-4      	; 0x98aa <waves+0x6aa>
    98ae:	f3 f3       	brvs	.-4      	; 0x98ac <waves+0x6ac>
    98b0:	f3 f3       	brvs	.-4      	; 0x98ae <waves+0x6ae>
    98b2:	f3 f3       	brvs	.-4      	; 0x98b0 <waves+0x6b0>
    98b4:	f3 f3       	brvs	.-4      	; 0x98b2 <waves+0x6b2>
    98b6:	f3 f3       	brvs	.-4      	; 0x98b4 <waves+0x6b4>
    98b8:	f3 f3       	brvs	.-4      	; 0x98b6 <waves+0x6b6>
    98ba:	f3 f3       	brvs	.-4      	; 0x98b8 <waves+0x6b8>
    98bc:	f3 f3       	brvs	.-4      	; 0x98ba <waves+0x6ba>
    98be:	f3 f3       	brvs	.-4      	; 0x98bc <waves+0x6bc>
    98c0:	f3 f3       	brvs	.-4      	; 0x98be <waves+0x6be>
    98c2:	f3 f3       	brvs	.-4      	; 0x98c0 <waves+0x6c0>
    98c4:	f3 f3       	brvs	.-4      	; 0x98c2 <waves+0x6c2>
    98c6:	f3 f3       	brvs	.-4      	; 0x98c4 <waves+0x6c4>
    98c8:	f3 f3       	brvs	.-4      	; 0x98c6 <waves+0x6c6>
    98ca:	f3 f3       	brvs	.-4      	; 0x98c8 <waves+0x6c8>
    98cc:	f3 f3       	brvs	.-4      	; 0x98ca <waves+0x6ca>
    98ce:	f3 f3       	brvs	.-4      	; 0x98cc <waves+0x6cc>
    98d0:	f3 f3       	brvs	.-4      	; 0x98ce <waves+0x6ce>
    98d2:	f3 f3       	brvs	.-4      	; 0x98d0 <waves+0x6d0>
    98d4:	f3 f3       	brvs	.-4      	; 0x98d2 <waves+0x6d2>
    98d6:	f3 f3       	brvs	.-4      	; 0x98d4 <waves+0x6d4>
    98d8:	f3 f3       	brvs	.-4      	; 0x98d6 <waves+0x6d6>
    98da:	f3 f3       	brvs	.-4      	; 0x98d8 <waves+0x6d8>
    98dc:	f3 f3       	brvs	.-4      	; 0x98da <waves+0x6da>
    98de:	f3 f3       	brvs	.-4      	; 0x98dc <waves+0x6dc>
    98e0:	f2 f2       	brmi	.-68     	; 0x989e <waves+0x69e>
    98e2:	f2 f2       	brmi	.-68     	; 0x98a0 <waves+0x6a0>
    98e4:	f2 f2       	brmi	.-68     	; 0x98a2 <waves+0x6a2>
    98e6:	f2 f2       	brmi	.-68     	; 0x98a4 <waves+0x6a4>
    98e8:	f1 f1       	breq	.+124    	; 0x9966 <waves+0x766>
    98ea:	f1 f1       	breq	.+124    	; 0x9968 <waves+0x768>
    98ec:	f0 f0       	brcs	.+60     	; 0x992a <waves+0x72a>
    98ee:	f0 ef       	ldi	r31, 0xF0	; 240
    98f0:	ef ee       	ldi	r30, 0xEF	; 239
    98f2:	ed ec       	ldi	r30, 0xCD	; 205
    98f4:	eb ea       	ldi	r30, 0xAB	; 171
    98f6:	e9 e7       	ldi	r30, 0x79	; 121
    98f8:	e5 e3       	ldi	r30, 0x35	; 53
    98fa:	df db       	rcall	.-2114   	; 0x90ba <SetMixerWave+0xc>
    98fc:	d5 cc       	rjmp	.-1622   	; 0x92a8 <waves+0xa8>
    98fe:	c6 00       	.word	0x00c6	; ????
    9900:	00 28       	or	r0, r0
    9902:	3d 42       	sbci	r19, 0x2D	; 45
    9904:	30 2d       	mov	r19, r0
    9906:	2c 2b       	or	r18, r28
    9908:	2c 2d       	mov	r18, r12
    990a:	2e 2f       	mov	r18, r30
    990c:	30 32       	cpi	r19, 0x20	; 32
    990e:	33 35       	cpi	r19, 0x53	; 83
    9910:	37 39       	cpi	r19, 0x97	; 151
    9912:	3b 3d       	cpi	r19, 0xDB	; 219
    9914:	3f 41       	sbci	r19, 0x1F	; 31
    9916:	43 45       	sbci	r20, 0x53	; 83
    9918:	48 4a       	sbci	r20, 0xA8	; 168
    991a:	4c 4e       	sbci	r20, 0xEC	; 236
    991c:	50 53       	subi	r21, 0x30	; 48
    991e:	55 57       	subi	r21, 0x75	; 117
    9920:	59 5b       	subi	r21, 0xB9	; 185
    9922:	5d 5f       	subi	r21, 0xFD	; 253
    9924:	61 63       	ori	r22, 0x31	; 49
    9926:	65 67       	ori	r22, 0x75	; 117
    9928:	69 6b       	ori	r22, 0xB9	; 185
    992a:	6c 6e       	ori	r22, 0xEC	; 236
    992c:	70 71       	andi	r23, 0x10	; 16
    992e:	73 74       	andi	r23, 0x43	; 67
    9930:	75 77       	andi	r23, 0x75	; 117
    9932:	78 79       	andi	r23, 0x98	; 152
    9934:	7a 7b       	andi	r23, 0xBA	; 186
    9936:	7c 7d       	andi	r23, 0xDC	; 220
    9938:	7d 7e       	andi	r23, 0xED	; 237
    993a:	7e 7f       	andi	r23, 0xFE	; 254
    993c:	7f 7f       	andi	r23, 0xFF	; 255
    993e:	7f 7f       	andi	r23, 0xFF	; 255
    9940:	7f 7f       	andi	r23, 0xFF	; 255
    9942:	7f 7f       	andi	r23, 0xFF	; 255
    9944:	7f 7f       	andi	r23, 0xFF	; 255
    9946:	7e 7e       	andi	r23, 0xEE	; 238
    9948:	7d 7d       	andi	r23, 0xDD	; 221
    994a:	7c 7b       	andi	r23, 0xBC	; 188
    994c:	7a 79       	andi	r23, 0x9A	; 154
    994e:	78 77       	andi	r23, 0x78	; 120
    9950:	75 74       	andi	r23, 0x45	; 69
    9952:	73 71       	andi	r23, 0x13	; 19
    9954:	70 6e       	ori	r23, 0xE0	; 224
    9956:	6c 6b       	ori	r22, 0xBC	; 188
    9958:	69 67       	ori	r22, 0x79	; 121
    995a:	65 63       	ori	r22, 0x35	; 53
    995c:	61 5f       	subi	r22, 0xF1	; 241
    995e:	5d 5b       	subi	r21, 0xBD	; 189
    9960:	59 57       	subi	r21, 0x79	; 121
    9962:	55 53       	subi	r21, 0x35	; 53
    9964:	50 4e       	sbci	r21, 0xE0	; 224
    9966:	4c 4a       	sbci	r20, 0xAC	; 172
    9968:	48 45       	sbci	r20, 0x58	; 88
    996a:	43 41       	sbci	r20, 0x13	; 19
    996c:	3f 3d       	cpi	r19, 0xDF	; 223
    996e:	3b 39       	cpi	r19, 0x9B	; 155
    9970:	37 35       	cpi	r19, 0x57	; 87
    9972:	33 32       	cpi	r19, 0x23	; 35
    9974:	30 2f       	mov	r19, r16
    9976:	2e 2d       	mov	r18, r14
    9978:	2c 2b       	or	r18, r28
    997a:	2c 2d       	mov	r18, r12
    997c:	30 42       	sbci	r19, 0x20	; 32
    997e:	3d 28       	or	r3, r13
    9980:	00 e9       	ldi	r16, 0x90	; 144
    9982:	e5 fe       	sbrs	r14, 5
    9984:	d4 d7       	rcall	.+4008   	; 0xa92e <makeBanana2+0x92>
    9986:	d7 d7       	rcall	.+4014   	; 0xa936 <makeBanana2+0x9a>
    9988:	d6 d4       	rcall	.+2476   	; 0xa336 <drawplayer2+0xa6>
    998a:	d2 d0       	rcall	.+420    	; 0x9b30 <waves+0x930>
    998c:	ce cc       	rjmp	.-1636   	; 0x932a <waves+0x12a>
    998e:	ca c8       	rjmp	.-3692   	; 0x8b24 <TriggerCommon+0x6e>
    9990:	c6 c3       	rjmp	.+1932   	; 0xa11e <ProcessFading+0x34>
    9992:	c1 bf       	out	0x31, r28	; 49
    9994:	bd ba       	out	0x1d, r11	; 29
    9996:	b8 b6       	in	r11, 0x38	; 56
    9998:	b4 b1       	in	r27, 0x04	; 4
    999a:	af ad       	ldd	r26, Y+63	; 0x3f
    999c:	ab a9       	ldd	r26, Y+51	; 0x33
    999e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    99a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    99a2:	9f 9e       	mul	r9, r31
    99a4:	9c 9a       	sbi	0x13, 4	; 19
    99a6:	99 97       	sbiw	r26, 0x29	; 41
    99a8:	95 94       	asr	r9
    99aa:	93 91       	.word	0x9193	; ????
    99ac:	90 8f       	std	Z+24, r25	; 0x18
    99ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    99b0:	8b 8a       	std	Y+19, r8	; 0x13
    99b2:	89 88       	ldd	r8, Y+17	; 0x11
    99b4:	88 87       	std	Y+8, r24	; 0x08
    99b6:	86 85       	ldd	r24, Z+14	; 0x0e
    99b8:	85 84       	ldd	r8, Z+13	; 0x0d
    99ba:	84 84       	ldd	r8, Z+12	; 0x0c
    99bc:	83 83       	std	Z+3, r24	; 0x03
    99be:	83 83       	std	Z+3, r24	; 0x03
    99c0:	83 83       	std	Z+3, r24	; 0x03
    99c2:	83 83       	std	Z+3, r24	; 0x03
    99c4:	83 84       	ldd	r8, Z+11	; 0x0b
    99c6:	84 84       	ldd	r8, Z+12	; 0x0c
    99c8:	85 85       	ldd	r24, Z+13	; 0x0d
    99ca:	86 87       	std	Z+14, r24	; 0x0e
    99cc:	88 88       	ldd	r8, Y+16	; 0x10
    99ce:	89 8a       	std	Y+17, r8	; 0x11
    99d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    99d2:	8d 8f       	std	Y+29, r24	; 0x1d
    99d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8593>
    99d8:	95 97       	sbiw	r26, 0x25	; 37
    99da:	99 9a       	sbi	0x13, 1	; 19
    99dc:	9c 9e       	mul	r9, r28
    99de:	9f a1       	ldd	r25, Y+39	; 0x27
    99e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    99e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    99e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    99e6:	af b1       	in	r26, 0x0f	; 15
    99e8:	b4 b6       	in	r11, 0x34	; 52
    99ea:	b8 ba       	out	0x18, r11	; 24
    99ec:	bd bf       	out	0x3d, r27	; 61
    99ee:	c1 c3       	rjmp	.+1922   	; 0xa172 <drawplayer+0xe>
    99f0:	c6 c8       	rjmp	.-3700   	; 0x8b7e <TriggerCommon+0xc8>
    99f2:	ca cc       	rjmp	.-1644   	; 0x9388 <waves+0x188>
    99f4:	ce d0       	rcall	.+412    	; 0x9b92 <waves+0x992>
    99f6:	d2 d4       	rcall	.+2468   	; 0xa39c <drawplayer2+0x10c>
    99f8:	d6 d7       	rcall	.+4012   	; 0xa9a6 <printheadline+0x4e>
    99fa:	d7 d7       	rcall	.+4014   	; 0xa9aa <printheadline+0x52>
    99fc:	d4 fe       	sbrs	r13, 4
    99fe:	e5 e9       	ldi	r30, 0x95	; 149
    9a00:	f9 f8       	.word	0xf8f9	; ????
    9a02:	f9 f5       	brne	.+126    	; 0x9a82 <waves+0x882>
    9a04:	eb e1       	ldi	r30, 0x1B	; 27
    9a06:	dd de       	rcall	.-582    	; 0x97c2 <waves+0x5c2>
    9a08:	e0 e2       	ldi	r30, 0x20	; 32
    9a0a:	e4 e5       	ldi	r30, 0x54	; 84
    9a0c:	e6 e5       	ldi	r30, 0x56	; 86
    9a0e:	e4 e2       	ldi	r30, 0x24	; 36
    9a10:	de d9       	rcall	.-3140   	; 0x8dce <ProcessMusic+0x106>
    9a12:	d2 ca       	rjmp	.-2652   	; 0x8fb8 <ProcessMusic+0x2f0>
    9a14:	c1 b7       	in	r28, 0x31	; 49
    9a16:	ac a2       	std	Y+36, r10	; 0x24
    9a18:	99 91       	ld	r25, Y+
    9a1a:	8a 86       	std	Y+10, r8	; 0x0a
    9a1c:	83 81       	ldd	r24, Z+3	; 0x03
    9a1e:	80 80       	ld	r8, Z
    9a20:	81 82       	std	Z+1, r8	; 0x01
    9a22:	83 85       	ldd	r24, Z+11	; 0x0b
    9a24:	86 88       	ldd	r8, Z+22	; 0x16
    9a26:	8a 8c       	ldd	r8, Y+26	; 0x1a
    9a28:	8d 8f       	std	Y+29, r24	; 0x1d
    9a2a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8693>
    9a2e:	96 97       	sbiw	r26, 0x26	; 38
    9a30:	98 99       	sbic	0x13, 0	; 19
    9a32:	9a 9b       	sbis	0x13, 2	; 19
    9a34:	9b 9c       	mul	r9, r11
    9a36:	9d 9d       	mul	r25, r13
    9a38:	9d 9e       	mul	r9, r29
    9a3a:	9e 9e       	mul	r9, r30
    9a3c:	9f 9f       	mul	r25, r31
    9a3e:	9f 9f       	mul	r25, r31
    9a40:	9f 9f       	mul	r25, r31
    9a42:	9f 9e       	mul	r9, r31
    9a44:	9e 9e       	mul	r9, r30
    9a46:	9d 9d       	mul	r25, r13
    9a48:	9d 9c       	mul	r9, r13
    9a4a:	9b 9b       	sbis	0x13, 3	; 19
    9a4c:	9a 99       	sbic	0x13, 2	; 19
    9a4e:	98 97       	sbiw	r26, 0x28	; 40
    9a50:	96 95       	lsr	r25
    9a52:	93 92       	.word	0x9293	; ????
    9a54:	90 8f       	std	Z+24, r25	; 0x18
    9a56:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9a58:	8a 88       	ldd	r8, Y+18	; 0x12
    9a5a:	86 85       	ldd	r24, Z+14	; 0x0e
    9a5c:	83 82       	std	Z+3, r8	; 0x03
    9a5e:	81 80       	ldd	r8, Z+1	; 0x01
    9a60:	80 81       	ld	r24, Z
    9a62:	83 86       	std	Z+11, r8	; 0x0b
    9a64:	8a 91       	ld	r24, -Y
    9a66:	99 a2       	std	Y+33, r9	; 0x21
    9a68:	ac b7       	in	r26, 0x3c	; 60
    9a6a:	c1 ca       	rjmp	.-2686   	; 0x8fee <ProcessMusic+0x326>
    9a6c:	d2 d9       	rcall	.-3164   	; 0x8e12 <ProcessMusic+0x14a>
    9a6e:	de e2       	ldi	r29, 0x2E	; 46
    9a70:	e4 e5       	ldi	r30, 0x54	; 84
    9a72:	e6 e5       	ldi	r30, 0x56	; 86
    9a74:	e4 e2       	ldi	r30, 0x24	; 36
    9a76:	e0 de       	rcall	.-576    	; 0x9838 <waves+0x638>
    9a78:	dd e1       	ldi	r29, 0x1D	; 29
    9a7a:	eb f5       	brvc	.+122    	; 0x9af6 <waves+0x8f6>
    9a7c:	f9 f8       	.word	0xf8f9	; ????
    9a7e:	f9 00       	.word	0x00f9	; ????
    9a80:	07 08       	sbc	r0, r7
    9a82:	07 0b       	sbc	r16, r23
    9a84:	15 1f       	adc	r17, r21
    9a86:	23 22       	and	r2, r19
    9a88:	20 1e       	adc	r2, r16
    9a8a:	1c 1b       	sub	r17, r28
    9a8c:	1a 1b       	sub	r17, r26
    9a8e:	1c 1e       	adc	r1, r28
    9a90:	22 27       	eor	r18, r18
    9a92:	2e 36       	cpi	r18, 0x6E	; 110
    9a94:	3f 49       	sbci	r19, 0x9F	; 159
    9a96:	54 5e       	subi	r21, 0xE4	; 228
    9a98:	67 6f       	ori	r22, 0xF7	; 247
    9a9a:	76 7a       	andi	r23, 0xA6	; 166
    9a9c:	7e 7f       	andi	r23, 0xFE	; 254
    9a9e:	7f 7f       	andi	r23, 0xFF	; 255
    9aa0:	7f 7e       	andi	r23, 0xEF	; 239
    9aa2:	7d 7b       	andi	r23, 0xBD	; 189
    9aa4:	7a 78       	andi	r23, 0x8A	; 138
    9aa6:	76 74       	andi	r23, 0x46	; 70
    9aa8:	73 71       	andi	r23, 0x13	; 19
    9aaa:	70 6e       	ori	r23, 0xE0	; 224
    9aac:	6d 6b       	ori	r22, 0xBD	; 189
    9aae:	6a 69       	ori	r22, 0x9A	; 154
    9ab0:	68 67       	ori	r22, 0x78	; 120
    9ab2:	66 65       	ori	r22, 0x56	; 86
    9ab4:	65 64       	ori	r22, 0x45	; 69
    9ab6:	64 63       	ori	r22, 0x34	; 52
    9ab8:	63 62       	ori	r22, 0x23	; 35
    9aba:	62 62       	ori	r22, 0x22	; 34
    9abc:	61 61       	ori	r22, 0x11	; 17
    9abe:	61 61       	ori	r22, 0x11	; 17
    9ac0:	61 61       	ori	r22, 0x11	; 17
    9ac2:	61 62       	ori	r22, 0x21	; 33
    9ac4:	62 62       	ori	r22, 0x22	; 34
    9ac6:	63 63       	ori	r22, 0x33	; 51
    9ac8:	63 64       	ori	r22, 0x43	; 67
    9aca:	65 65       	ori	r22, 0x55	; 85
    9acc:	66 67       	ori	r22, 0x76	; 118
    9ace:	68 69       	ori	r22, 0x98	; 152
    9ad0:	6a 6b       	ori	r22, 0xBA	; 186
    9ad2:	6d 6e       	ori	r22, 0xED	; 237
    9ad4:	70 71       	andi	r23, 0x10	; 16
    9ad6:	73 74       	andi	r23, 0x43	; 67
    9ad8:	76 78       	andi	r23, 0x86	; 134
    9ada:	7a 7b       	andi	r23, 0xBA	; 186
    9adc:	7d 7e       	andi	r23, 0xED	; 237
    9ade:	7f 7f       	andi	r23, 0xFF	; 255
    9ae0:	7f 7f       	andi	r23, 0xFF	; 255
    9ae2:	7e 7a       	andi	r23, 0xAE	; 174
    9ae4:	76 6f       	ori	r23, 0xF6	; 246
    9ae6:	67 5e       	subi	r22, 0xE7	; 231
    9ae8:	54 49       	sbci	r21, 0x94	; 148
    9aea:	3f 36       	cpi	r19, 0x6F	; 111
    9aec:	2e 27       	eor	r18, r30
    9aee:	22 1e       	adc	r2, r18
    9af0:	1c 1b       	sub	r17, r28
    9af2:	1a 1b       	sub	r17, r26
    9af4:	1c 1e       	adc	r1, r28
    9af6:	20 22       	and	r2, r16
    9af8:	23 1f       	adc	r18, r19
    9afa:	15 0b       	sbc	r17, r21
    9afc:	07 08       	sbc	r0, r7
    9afe:	07 00       	.word	0x0007	; ????
    9b00:	1f 31       	cpi	r17, 0x1F	; 31
    9b02:	3d 44       	sbci	r19, 0x4D	; 77
    9b04:	4e 53       	subi	r20, 0x3E	; 62
    9b06:	54 56       	subi	r21, 0x64	; 100
    9b08:	5a 5f       	subi	r21, 0xFA	; 250
    9b0a:	64 69       	ori	r22, 0x94	; 148
    9b0c:	6e 74       	andi	r22, 0x4E	; 78
    9b0e:	76 79       	andi	r23, 0x96	; 150
    9b10:	7c 7f       	andi	r23, 0xFC	; 252
    9b12:	7f 7f       	andi	r23, 0xFF	; 255
    9b14:	7f 7f       	andi	r23, 0xFF	; 255
    9b16:	7f 7f       	andi	r23, 0xFF	; 255
    9b18:	7f 7f       	andi	r23, 0xFF	; 255
    9b1a:	7f 7f       	andi	r23, 0xFF	; 255
    9b1c:	7f 7f       	andi	r23, 0xFF	; 255
    9b1e:	7f 7f       	andi	r23, 0xFF	; 255
    9b20:	7f 7f       	andi	r23, 0xFF	; 255
    9b22:	7f 7f       	andi	r23, 0xFF	; 255
    9b24:	7f 7f       	andi	r23, 0xFF	; 255
    9b26:	7f 7f       	andi	r23, 0xFF	; 255
    9b28:	7f 7f       	andi	r23, 0xFF	; 255
    9b2a:	7f 7f       	andi	r23, 0xFF	; 255
    9b2c:	7f 7f       	andi	r23, 0xFF	; 255
    9b2e:	7f 7f       	andi	r23, 0xFF	; 255
    9b30:	7f 7f       	andi	r23, 0xFF	; 255
    9b32:	7f 7f       	andi	r23, 0xFF	; 255
    9b34:	7f 7f       	andi	r23, 0xFF	; 255
    9b36:	7f 7f       	andi	r23, 0xFF	; 255
    9b38:	7f 7f       	andi	r23, 0xFF	; 255
    9b3a:	7f 7f       	andi	r23, 0xFF	; 255
    9b3c:	7f 7f       	andi	r23, 0xFF	; 255
    9b3e:	7f 7f       	andi	r23, 0xFF	; 255
    9b40:	7f 7f       	andi	r23, 0xFF	; 255
    9b42:	7f 7f       	andi	r23, 0xFF	; 255
    9b44:	7f 7f       	andi	r23, 0xFF	; 255
    9b46:	7f 7f       	andi	r23, 0xFF	; 255
    9b48:	7f 7f       	andi	r23, 0xFF	; 255
    9b4a:	7f 7f       	andi	r23, 0xFF	; 255
    9b4c:	7f 7f       	andi	r23, 0xFF	; 255
    9b4e:	7f 7f       	andi	r23, 0xFF	; 255
    9b50:	7f 7f       	andi	r23, 0xFF	; 255
    9b52:	7f 7f       	andi	r23, 0xFF	; 255
    9b54:	7f 7f       	andi	r23, 0xFF	; 255
    9b56:	7f 7f       	andi	r23, 0xFF	; 255
    9b58:	7f 7f       	andi	r23, 0xFF	; 255
    9b5a:	7f 7f       	andi	r23, 0xFF	; 255
    9b5c:	7f 7f       	andi	r23, 0xFF	; 255
    9b5e:	7f 7f       	andi	r23, 0xFF	; 255
    9b60:	7f 7f       	andi	r23, 0xFF	; 255
    9b62:	7f 7f       	andi	r23, 0xFF	; 255
    9b64:	7f 7f       	andi	r23, 0xFF	; 255
    9b66:	7f 7f       	andi	r23, 0xFF	; 255
    9b68:	7f 7f       	andi	r23, 0xFF	; 255
    9b6a:	7f 7f       	andi	r23, 0xFF	; 255
    9b6c:	7f 7f       	andi	r23, 0xFF	; 255
    9b6e:	7f 7f       	andi	r23, 0xFF	; 255
    9b70:	7f 7f       	andi	r23, 0xFF	; 255
    9b72:	7f 7f       	andi	r23, 0xFF	; 255
    9b74:	7f 7f       	andi	r23, 0xFF	; 255
    9b76:	7f 7f       	andi	r23, 0xFF	; 255
    9b78:	7f 7f       	andi	r23, 0xFF	; 255
    9b7a:	7f 7c       	andi	r23, 0xCF	; 207
    9b7c:	78 71       	andi	r23, 0x18	; 24
    9b7e:	68 4c       	sbci	r22, 0xC8	; 200
    9b80:	2c 1c       	adc	r2, r12
    9b82:	12 0c       	add	r1, r2
    9b84:	0a 0b       	sbc	r16, r26
    9b86:	0a 05       	cpc	r16, r10
    9b88:	fd f3       	brhs	.-2      	; 0x9b88 <waves+0x988>
    9b8a:	e9 df       	rcall	.-46     	; 0x9b5e <waves+0x95e>
    9b8c:	d4 ca       	rjmp	.-2648   	; 0x9136 <steptable+0x4e>
    9b8e:	c0 b7       	in	r28, 0x30	; 48
    9b90:	ae a6       	std	Y+46, r10	; 0x2e
    9b92:	9e 97       	sbiw	r26, 0x2e	; 46
    9b94:	91 8b       	std	Z+17, r25	; 0x11
    9b96:	86 85       	ldd	r24, Z+14	; 0x0e
    9b98:	82 80       	ldd	r8, Z+2	; 0x02
    9b9a:	80 80       	ld	r8, Z
    9b9c:	80 80       	ld	r8, Z
    9b9e:	80 80       	ld	r8, Z
    9ba0:	80 80       	ld	r8, Z
    9ba2:	80 80       	ld	r8, Z
    9ba4:	80 80       	ld	r8, Z
    9ba6:	80 80       	ld	r8, Z
    9ba8:	80 80       	ld	r8, Z
    9baa:	80 80       	ld	r8, Z
    9bac:	80 80       	ld	r8, Z
    9bae:	80 80       	ld	r8, Z
    9bb0:	80 80       	ld	r8, Z
    9bb2:	80 80       	ld	r8, Z
    9bb4:	80 80       	ld	r8, Z
    9bb6:	80 80       	ld	r8, Z
    9bb8:	80 80       	ld	r8, Z
    9bba:	80 80       	ld	r8, Z
    9bbc:	80 80       	ld	r8, Z
    9bbe:	80 80       	ld	r8, Z
    9bc0:	80 80       	ld	r8, Z
    9bc2:	80 80       	ld	r8, Z
    9bc4:	80 80       	ld	r8, Z
    9bc6:	80 80       	ld	r8, Z
    9bc8:	80 80       	ld	r8, Z
    9bca:	80 80       	ld	r8, Z
    9bcc:	80 80       	ld	r8, Z
    9bce:	80 80       	ld	r8, Z
    9bd0:	80 80       	ld	r8, Z
    9bd2:	80 80       	ld	r8, Z
    9bd4:	80 80       	ld	r8, Z
    9bd6:	80 80       	ld	r8, Z
    9bd8:	80 80       	ld	r8, Z
    9bda:	80 80       	ld	r8, Z
    9bdc:	80 80       	ld	r8, Z
    9bde:	80 80       	ld	r8, Z
    9be0:	80 80       	ld	r8, Z
    9be2:	80 80       	ld	r8, Z
    9be4:	80 80       	ld	r8, Z
    9be6:	80 80       	ld	r8, Z
    9be8:	80 80       	ld	r8, Z
    9bea:	80 80       	ld	r8, Z
    9bec:	80 80       	ld	r8, Z
    9bee:	80 80       	ld	r8, Z
    9bf0:	80 80       	ld	r8, Z
    9bf2:	80 80       	ld	r8, Z
    9bf4:	80 87       	std	Z+8, r24	; 0x08
    9bf6:	91 9d       	mul	r25, r1
    9bf8:	ac c4       	rjmp	.+2392   	; 0xa552 <printtileint+0x1a6>
    9bfa:	cb d4       	rcall	.+2454   	; 0xa592 <printtileint+0x1e6>
    9bfc:	dd f2       	brhs	.-74     	; 0x9bb4 <waves+0x9b4>
    9bfe:	fa fa       	.word	0xfafa	; ????

00009c00 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    9c00:	2f 92       	push	r2
    9c02:	3f 92       	push	r3
    9c04:	4f 92       	push	r4
    9c06:	5f 92       	push	r5
    9c08:	6f 92       	push	r6
    9c0a:	7f 92       	push	r7
    9c0c:	8f 92       	push	r8
    9c0e:	9f 92       	push	r9
    9c10:	af 92       	push	r10
    9c12:	bf 92       	push	r11
    9c14:	cf 92       	push	r12
    9c16:	df 92       	push	r13
    9c18:	ef 92       	push	r14
    9c1a:	ff 92       	push	r15
    9c1c:	0f 93       	push	r16
    9c1e:	1f 93       	push	r17
    9c20:	cf 93       	push	r28
    9c22:	df 93       	push	r29
    9c24:	00 d0       	rcall	.+0      	; 0x9c26 <ProcessSprites+0x26>
    9c26:	00 d0       	rcall	.+0      	; 0x9c28 <ProcessSprites+0x28>
    9c28:	00 d0       	rcall	.+0      	; 0x9c2a <ProcessSprites+0x2a>
    9c2a:	cd b7       	in	r28, 0x3d	; 61
    9c2c:	de b7       	in	r29, 0x3e	; 62
    9c2e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    9c32:	88 23       	and	r24, r24
    9c34:	09 f4       	brne	.+2      	; 0x9c38 <ProcessSprites+0x38>
    9c36:	f9 c0       	rjmp	.+498    	; 0x9e2a <ProcessSprites+0x22a>
    9c38:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <user_ram_tiles_c_tmp>
    9c3c:	80 93 4c 08 	sts	0x084C, r24	; 0x80084c <user_ram_tiles_c>
    9c40:	80 93 4b 08 	sts	0x084B, r24	; 0x80084b <free_tile_index>
    9c44:	02 e0       	ldi	r16, 0x02	; 2
    9c46:	11 e0       	ldi	r17, 0x01	; 1
    9c48:	f8 01       	movw	r30, r16
    9c4a:	f3 81       	ldd	r31, Z+3	; 0x03
    9c4c:	fb 83       	std	Y+3, r31	; 0x03
    9c4e:	f2 ff       	sbrs	r31, 2
    9c50:	20 c0       	rjmp	.+64     	; 0x9c92 <ProcessSprites+0x92>
    9c52:	0c 5f       	subi	r16, 0xFC	; 252
    9c54:	1f 4f       	sbci	r17, 0xFF	; 255
    9c56:	21 e0       	ldi	r18, 0x01	; 1
    9c58:	0a 33       	cpi	r16, 0x3A	; 58
    9c5a:	12 07       	cpc	r17, r18
    9c5c:	a9 f7       	brne	.-22     	; 0x9c48 <ProcessSprites+0x48>
    9c5e:	26 96       	adiw	r28, 0x06	; 6
    9c60:	0f b6       	in	r0, 0x3f	; 63
    9c62:	f8 94       	cli
    9c64:	de bf       	out	0x3e, r29	; 62
    9c66:	0f be       	out	0x3f, r0	; 63
    9c68:	cd bf       	out	0x3d, r28	; 61
    9c6a:	df 91       	pop	r29
    9c6c:	cf 91       	pop	r28
    9c6e:	1f 91       	pop	r17
    9c70:	0f 91       	pop	r16
    9c72:	ff 90       	pop	r15
    9c74:	ef 90       	pop	r14
    9c76:	df 90       	pop	r13
    9c78:	cf 90       	pop	r12
    9c7a:	bf 90       	pop	r11
    9c7c:	af 90       	pop	r10
    9c7e:	9f 90       	pop	r9
    9c80:	8f 90       	pop	r8
    9c82:	7f 90       	pop	r7
    9c84:	6f 90       	pop	r6
    9c86:	5f 90       	pop	r5
    9c88:	4f 90       	pop	r4
    9c8a:	3f 90       	pop	r3
    9c8c:	2f 90       	pop	r2
    9c8e:	0c 94 40 41 	jmp	0x8280	; 0x8280 <RestoreBackground>
    9c92:	f8 01       	movw	r30, r16
    9c94:	51 81       	ldd	r21, Z+1	; 0x01
    9c96:	40 81       	ld	r20, Z
    9c98:	20 91 5c 08 	lds	r18, 0x085C	; 0x80085c <screen_scrollX>
    9c9c:	24 0f       	add	r18, r20
    9c9e:	30 91 5d 08 	lds	r19, 0x085D	; 0x80085d <screen_scrollY>
    9ca2:	85 2f       	mov	r24, r21
    9ca4:	90 e0       	ldi	r25, 0x00	; 0
    9ca6:	83 0f       	add	r24, r19
    9ca8:	91 1d       	adc	r25, r1
    9caa:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollHeight>
    9cae:	33 0f       	add	r19, r19
    9cb0:	33 0f       	add	r19, r19
    9cb2:	33 0f       	add	r19, r19
    9cb4:	31 50       	subi	r19, 0x01	; 1
    9cb6:	35 17       	cp	r19, r21
    9cb8:	08 f4       	brcc	.+2      	; 0x9cbc <ProcessSprites+0xbc>
    9cba:	9a 95       	dec	r25
    9cbc:	32 2e       	mov	r3, r18
    9cbe:	36 94       	lsr	r3
    9cc0:	36 94       	lsr	r3
    9cc2:	36 94       	lsr	r3
    9cc4:	27 70       	andi	r18, 0x07	; 7
    9cc6:	19 f0       	breq	.+6      	; 0x9cce <ProcessSprites+0xce>
    9cc8:	f2 e0       	ldi	r31, 0x02	; 2
    9cca:	f9 83       	std	Y+1, r31	; 0x01
    9ccc:	02 c0       	rjmp	.+4      	; 0x9cd2 <ProcessSprites+0xd2>
    9cce:	31 e0       	ldi	r19, 0x01	; 1
    9cd0:	39 83       	std	Y+1, r19	; 0x01
    9cd2:	bc 01       	movw	r22, r24
    9cd4:	e3 e0       	ldi	r30, 0x03	; 3
    9cd6:	76 95       	lsr	r23
    9cd8:	67 95       	ror	r22
    9cda:	ea 95       	dec	r30
    9cdc:	e1 f7       	brne	.-8      	; 0x9cd6 <ProcessSprites+0xd6>
    9cde:	26 2e       	mov	r2, r22
    9ce0:	87 70       	andi	r24, 0x07	; 7
    9ce2:	19 f0       	breq	.+6      	; 0x9cea <ProcessSprites+0xea>
    9ce4:	62 e0       	ldi	r22, 0x02	; 2
    9ce6:	6a 83       	std	Y+2, r22	; 0x02
    9ce8:	02 c0       	rjmp	.+4      	; 0x9cee <ProcessSprites+0xee>
    9cea:	71 e0       	ldi	r23, 0x01	; 1
    9cec:	7a 83       	std	Y+2, r23	; 0x02
    9cee:	68 2e       	mov	r6, r24
    9cf0:	71 2c       	mov	r7, r1
    9cf2:	76 2c       	mov	r7, r6
    9cf4:	66 24       	eor	r6, r6
    9cf6:	62 0e       	add	r6, r18
    9cf8:	71 1c       	adc	r7, r1
    9cfa:	fb 81       	ldd	r31, Y+3	; 0x03
    9cfc:	ef 2f       	mov	r30, r31
    9cfe:	f0 e0       	ldi	r31, 0x00	; 0
    9d00:	7e 2f       	mov	r23, r30
    9d02:	66 27       	eor	r22, r22
    9d04:	f8 01       	movw	r30, r16
    9d06:	92 81       	ldd	r25, Z+2	; 0x02
    9d08:	69 0f       	add	r22, r25
    9d0a:	71 1d       	adc	r23, r1
    9d0c:	7e 83       	std	Y+6, r23	; 0x06
    9d0e:	6d 83       	std	Y+5, r22	; 0x05
    9d10:	c1 2c       	mov	r12, r1
    9d12:	d1 2c       	mov	r13, r1
    9d14:	97 e0       	ldi	r25, 0x07	; 7
    9d16:	95 0f       	add	r25, r21
    9d18:	98 1b       	sub	r25, r24
    9d1a:	9b 83       	std	Y+3, r25	; 0x03
    9d1c:	87 e0       	ldi	r24, 0x07	; 7
    9d1e:	84 0f       	add	r24, r20
    9d20:	82 1b       	sub	r24, r18
    9d22:	8c 83       	std	Y+4, r24	; 0x04
    9d24:	8c 2d       	mov	r24, r12
    9d26:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9d2a:	91 11       	cpse	r25, r1
    9d2c:	07 c0       	rjmp	.+14     	; 0x9d3c <ProcessSprites+0x13c>
    9d2e:	ff ef       	ldi	r31, 0xFF	; 255
    9d30:	cf 1a       	sub	r12, r31
    9d32:	df 0a       	sbc	r13, r31
    9d34:	2a 81       	ldd	r18, Y+2	; 0x02
    9d36:	c2 16       	cp	r12, r18
    9d38:	a8 f3       	brcs	.-22     	; 0x9d24 <ProcessSprites+0x124>
    9d3a:	8b cf       	rjmp	.-234    	; 0x9c52 <ProcessSprites+0x52>
    9d3c:	29 2f       	mov	r18, r25
    9d3e:	22 0f       	add	r18, r18
    9d40:	22 0f       	add	r18, r18
    9d42:	22 0f       	add	r18, r18
    9d44:	21 50       	subi	r18, 0x01	; 1
    9d46:	3b 81       	ldd	r19, Y+3	; 0x03
    9d48:	48 e0       	ldi	r20, 0x08	; 8
    9d4a:	c4 9e       	mul	r12, r20
    9d4c:	30 0d       	add	r19, r0
    9d4e:	11 24       	eor	r1, r1
    9d50:	32 17       	cp	r19, r18
    9d52:	68 f7       	brcc	.-38     	; 0x9d2e <ProcessSprites+0x12e>
    9d54:	82 0d       	add	r24, r2
    9d56:	89 17       	cp	r24, r25
    9d58:	10 f0       	brcs	.+4      	; 0x9d5e <ProcessSprites+0x15e>
    9d5a:	89 1b       	sub	r24, r25
    9d5c:	fc cf       	rjmp	.-8      	; 0x9d56 <ProcessSprites+0x156>
    9d5e:	e8 2e       	mov	r14, r24
    9d60:	e6 94       	lsr	r14
    9d62:	e6 94       	lsr	r14
    9d64:	e6 94       	lsr	r14
    9d66:	f1 2c       	mov	r15, r1
    9d68:	fe 2c       	mov	r15, r14
    9d6a:	ee 24       	eor	r14, r14
    9d6c:	87 70       	andi	r24, 0x07	; 7
    9d6e:	e8 0e       	add	r14, r24
    9d70:	f1 1c       	adc	r15, r1
    9d72:	9c 2c       	mov	r9, r12
    9d74:	88 24       	eor	r8, r8
    9d76:	41 2c       	mov	r4, r1
    9d78:	8c 81       	ldd	r24, Y+4	; 0x04
    9d7a:	68 e0       	ldi	r22, 0x08	; 8
    9d7c:	46 9e       	mul	r4, r22
    9d7e:	80 0d       	add	r24, r0
    9d80:	11 24       	eor	r1, r1
    9d82:	87 3e       	cpi	r24, 0xE7	; 231
    9d84:	08 f0       	brcs	.+2      	; 0x9d88 <ProcessSprites+0x188>
    9d86:	49 c0       	rjmp	.+146    	; 0x9e1a <ProcessSprites+0x21a>
    9d88:	83 2d       	mov	r24, r3
    9d8a:	84 0d       	add	r24, r4
    9d8c:	88 0f       	add	r24, r24
    9d8e:	88 0f       	add	r24, r24
    9d90:	88 0f       	add	r24, r24
    9d92:	f7 01       	movw	r30, r14
    9d94:	e8 0f       	add	r30, r24
    9d96:	f1 1d       	adc	r31, r1
    9d98:	9f 01       	movw	r18, r30
    9d9a:	20 50       	subi	r18, 0x00	; 0
    9d9c:	35 4f       	sbci	r19, 0xF5	; 245
    9d9e:	59 01       	movw	r10, r18
    9da0:	f9 01       	movw	r30, r18
    9da2:	50 80       	ld	r5, Z
    9da4:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9da8:	fa e1       	ldi	r31, 0x1A	; 26
    9daa:	f5 15       	cp	r31, r5
    9dac:	10 f0       	brcs	.+4      	; 0x9db2 <ProcessSprites+0x1b2>
    9dae:	58 16       	cp	r5, r24
    9db0:	48 f5       	brcc	.+82     	; 0x9e04 <ProcessSprites+0x204>
    9db2:	60 91 4b 08 	lds	r22, 0x084B	; 0x80084b <free_tile_index>
    9db6:	6b 31       	cpi	r22, 0x1B	; 27
    9db8:	10 f5       	brcc	.+68     	; 0x9dfe <ProcessSprites+0x1fe>
    9dba:	2a e1       	ldi	r18, 0x1A	; 26
    9dbc:	25 15       	cp	r18, r5
    9dbe:	28 f4       	brcc	.+10     	; 0x9dca <ProcessSprites+0x1ca>
    9dc0:	85 ee       	ldi	r24, 0xE5	; 229
    9dc2:	85 0d       	add	r24, r5
    9dc4:	0e 94 24 40 	call	0x8048	; 0x8048 <CopyFlashTile>
    9dc8:	05 c0       	rjmp	.+10     	; 0x9dd4 <ProcessSprites+0x1d4>
    9dca:	58 16       	cp	r5, r24
    9dcc:	18 f4       	brcc	.+6      	; 0x9dd4 <ProcessSprites+0x1d4>
    9dce:	85 2d       	mov	r24, r5
    9dd0:	0e 94 b3 40 	call	0x8166	; 0x8166 <CopyRamTile>
    9dd4:	80 91 4b 08 	lds	r24, 0x084B	; 0x80084b <free_tile_index>
    9dd8:	e8 2f       	mov	r30, r24
    9dda:	f0 e0       	ldi	r31, 0x00	; 0
    9ddc:	9f 01       	movw	r18, r30
    9dde:	22 0f       	add	r18, r18
    9de0:	33 1f       	adc	r19, r19
    9de2:	e2 0f       	add	r30, r18
    9de4:	f3 1f       	adc	r31, r19
    9de6:	e6 50       	subi	r30, 0x06	; 6
    9de8:	f8 4f       	sbci	r31, 0xF8	; 248
    9dea:	b1 82       	std	Z+1, r11	; 0x01
    9dec:	a0 82       	st	Z, r10
    9dee:	52 82       	std	Z+2, r5	; 0x02
    9df0:	f5 01       	movw	r30, r10
    9df2:	80 83       	st	Z, r24
    9df4:	91 e0       	ldi	r25, 0x01	; 1
    9df6:	98 0f       	add	r25, r24
    9df8:	90 93 4b 08 	sts	0x084B, r25	; 0x80084b <free_tile_index>
    9dfc:	58 2e       	mov	r5, r24
    9dfe:	fa e1       	ldi	r31, 0x1A	; 26
    9e00:	f5 15       	cp	r31, r5
    9e02:	58 f0       	brcs	.+22     	; 0x9e1a <ProcessSprites+0x21a>
    9e04:	80 91 4c 08 	lds	r24, 0x084C	; 0x80084c <user_ram_tiles_c>
    9e08:	58 16       	cp	r5, r24
    9e0a:	38 f0       	brcs	.+14     	; 0x9e1a <ProcessSprites+0x21a>
    9e0c:	93 01       	movw	r18, r6
    9e0e:	a4 01       	movw	r20, r8
    9e10:	6d 81       	ldd	r22, Y+5	; 0x05
    9e12:	7e 81       	ldd	r23, Y+6	; 0x06
    9e14:	85 2d       	mov	r24, r5
    9e16:	0e 94 53 41 	call	0x82a6	; 0x82a6 <BlitSpritePart>
    9e1a:	43 94       	inc	r4
    9e1c:	2f ef       	ldi	r18, 0xFF	; 255
    9e1e:	82 1a       	sub	r8, r18
    9e20:	92 0a       	sbc	r9, r18
    9e22:	39 81       	ldd	r19, Y+1	; 0x01
    9e24:	43 12       	cpse	r4, r19
    9e26:	a8 cf       	rjmp	.-176    	; 0x9d78 <ProcessSprites+0x178>
    9e28:	82 cf       	rjmp	.-252    	; 0x9d2e <ProcessSprites+0x12e>
    9e2a:	26 96       	adiw	r28, 0x06	; 6
    9e2c:	0f b6       	in	r0, 0x3f	; 63
    9e2e:	f8 94       	cli
    9e30:	de bf       	out	0x3e, r29	; 62
    9e32:	0f be       	out	0x3f, r0	; 63
    9e34:	cd bf       	out	0x3d, r28	; 61
    9e36:	df 91       	pop	r29
    9e38:	cf 91       	pop	r28
    9e3a:	1f 91       	pop	r17
    9e3c:	0f 91       	pop	r16
    9e3e:	ff 90       	pop	r15
    9e40:	ef 90       	pop	r14
    9e42:	df 90       	pop	r13
    9e44:	cf 90       	pop	r12
    9e46:	bf 90       	pop	r11
    9e48:	af 90       	pop	r10
    9e4a:	9f 90       	pop	r9
    9e4c:	8f 90       	pop	r8
    9e4e:	7f 90       	pop	r7
    9e50:	6f 90       	pop	r6
    9e52:	5f 90       	pop	r5
    9e54:	4f 90       	pop	r4
    9e56:	3f 90       	pop	r3
    9e58:	2f 90       	pop	r2
    9e5a:	08 95       	ret

00009e5c <Scroll>:
    9e5c:	90 91 5e 08 	lds	r25, 0x085E	; 0x80085e <screen_scrollHeight>
    9e60:	29 2f       	mov	r18, r25
    9e62:	22 0f       	add	r18, r18
    9e64:	22 0f       	add	r18, r18
    9e66:	22 0f       	add	r18, r18
    9e68:	90 91 5d 08 	lds	r25, 0x085D	; 0x80085d <screen_scrollY>
    9e6c:	96 0f       	add	r25, r22
    9e6e:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9e72:	30 91 5c 08 	lds	r19, 0x085C	; 0x80085c <screen_scrollX>
    9e76:	83 0f       	add	r24, r19
    9e78:	80 93 5c 08 	sts	0x085C, r24	; 0x80085c <screen_scrollX>
    9e7c:	92 17       	cp	r25, r18
    9e7e:	38 f0       	brcs	.+14     	; 0x9e8e <Scroll+0x32>
    9e80:	67 fd       	sbrc	r22, 7
    9e82:	02 c0       	rjmp	.+4      	; 0x9e88 <Scroll+0x2c>
    9e84:	92 1b       	sub	r25, r18
    9e86:	01 c0       	rjmp	.+2      	; 0x9e8a <Scroll+0x2e>
    9e88:	92 0f       	add	r25, r18
    9e8a:	90 93 5d 08 	sts	0x085D, r25	; 0x80085d <screen_scrollY>
    9e8e:	08 95       	ret

00009e90 <MapSprite2>:
    9e90:	df 92       	push	r13
    9e92:	ef 92       	push	r14
    9e94:	ff 92       	push	r15
    9e96:	0f 93       	push	r16
    9e98:	1f 93       	push	r17
    9e9a:	cf 93       	push	r28
    9e9c:	df 93       	push	r29
    9e9e:	fb 01       	movw	r30, r22
    9ea0:	14 91       	lpm	r17, Z
    9ea2:	31 96       	adiw	r30, 0x01	; 1
    9ea4:	54 91       	lpm	r21, Z
    9ea6:	2f ef       	ldi	r18, 0xFF	; 255
    9ea8:	21 0f       	add	r18, r17
    9eaa:	e4 2f       	mov	r30, r20
    9eac:	e1 70       	andi	r30, 0x01	; 1
    9eae:	40 ff       	sbrs	r20, 0
    9eb0:	03 c0       	rjmp	.+6      	; 0x9eb8 <MapSprite2+0x28>
    9eb2:	92 2f       	mov	r25, r18
    9eb4:	df ef       	ldi	r29, 0xFF	; 255
    9eb6:	02 c0       	rjmp	.+4      	; 0x9ebc <MapSprite2+0x2c>
    9eb8:	d1 e0       	ldi	r29, 0x01	; 1
    9eba:	90 e0       	ldi	r25, 0x00	; 0
    9ebc:	41 ff       	sbrs	r20, 1
    9ebe:	04 c0       	rjmp	.+8      	; 0x9ec8 <MapSprite2+0x38>
    9ec0:	3f ef       	ldi	r19, 0xFF	; 255
    9ec2:	35 0f       	add	r19, r21
    9ec4:	0f ef       	ldi	r16, 0xFF	; 255
    9ec6:	02 c0       	rjmp	.+4      	; 0x9ecc <MapSprite2+0x3c>
    9ec8:	01 e0       	ldi	r16, 0x01	; 1
    9eca:	30 e0       	ldi	r19, 0x00	; 0
    9ecc:	ee 23       	and	r30, r30
    9ece:	11 f0       	breq	.+4      	; 0x9ed4 <MapSprite2+0x44>
    9ed0:	e2 2e       	mov	r14, r18
    9ed2:	01 c0       	rjmp	.+2      	; 0x9ed6 <MapSprite2+0x46>
    9ed4:	e1 2c       	mov	r14, r1
    9ed6:	c0 e0       	ldi	r28, 0x00	; 0
    9ed8:	c5 17       	cp	r28, r21
    9eda:	f9 f0       	breq	.+62     	; 0x9f1a <MapSprite2+0x8a>
    9edc:	31 03       	mulsu	r19, r17
    9ede:	d0 01       	movw	r26, r0
    9ee0:	11 24       	eor	r1, r1
    9ee2:	d8 2e       	mov	r13, r24
    9ee4:	d1 0e       	add	r13, r17
    9ee6:	8d 15       	cp	r24, r13
    9ee8:	a1 f0       	breq	.+40     	; 0x9f12 <MapSprite2+0x82>
    9eea:	fd 01       	movw	r30, r26
    9eec:	e9 0f       	add	r30, r25
    9eee:	f1 1d       	adc	r31, r1
    9ef0:	97 fd       	sbrc	r25, 7
    9ef2:	fa 95       	dec	r31
    9ef4:	32 96       	adiw	r30, 0x02	; 2
    9ef6:	e6 0f       	add	r30, r22
    9ef8:	f7 1f       	adc	r31, r23
    9efa:	f4 90       	lpm	r15, Z
    9efc:	24 e0       	ldi	r18, 0x04	; 4
    9efe:	82 9f       	mul	r24, r18
    9f00:	f0 01       	movw	r30, r0
    9f02:	11 24       	eor	r1, r1
    9f04:	ee 5f       	subi	r30, 0xFE	; 254
    9f06:	fe 4f       	sbci	r31, 0xFE	; 254
    9f08:	f2 82       	std	Z+2, r15	; 0x02
    9f0a:	8f 5f       	subi	r24, 0xFF	; 255
    9f0c:	43 83       	std	Z+3, r20	; 0x03
    9f0e:	9d 0f       	add	r25, r29
    9f10:	ea cf       	rjmp	.-44     	; 0x9ee6 <MapSprite2+0x56>
    9f12:	30 0f       	add	r19, r16
    9f14:	cf 5f       	subi	r28, 0xFF	; 255
    9f16:	9e 2d       	mov	r25, r14
    9f18:	df cf       	rjmp	.-66     	; 0x9ed8 <MapSprite2+0x48>
    9f1a:	df 91       	pop	r29
    9f1c:	cf 91       	pop	r28
    9f1e:	1f 91       	pop	r17
    9f20:	0f 91       	pop	r16
    9f22:	ff 90       	pop	r15
    9f24:	ef 90       	pop	r14
    9f26:	df 90       	pop	r13
    9f28:	08 95       	ret

00009f2a <MoveSprite>:
    9f2a:	0f 93       	push	r16
    9f2c:	30 e0       	ldi	r19, 0x00	; 0
    9f2e:	30 17       	cp	r19, r16
    9f30:	99 f0       	breq	.+38     	; 0x9f58 <MoveSprite+0x2e>
    9f32:	58 2f       	mov	r21, r24
    9f34:	52 0f       	add	r21, r18
    9f36:	96 2f       	mov	r25, r22
    9f38:	85 17       	cp	r24, r21
    9f3a:	59 f0       	breq	.+22     	; 0x9f52 <MoveSprite+0x28>
    9f3c:	74 e0       	ldi	r23, 0x04	; 4
    9f3e:	87 9f       	mul	r24, r23
    9f40:	f0 01       	movw	r30, r0
    9f42:	11 24       	eor	r1, r1
    9f44:	ee 5f       	subi	r30, 0xFE	; 254
    9f46:	fe 4f       	sbci	r31, 0xFE	; 254
    9f48:	90 83       	st	Z, r25
    9f4a:	41 83       	std	Z+1, r20	; 0x01
    9f4c:	8f 5f       	subi	r24, 0xFF	; 255
    9f4e:	98 5f       	subi	r25, 0xF8	; 248
    9f50:	f3 cf       	rjmp	.-26     	; 0x9f38 <MoveSprite+0xe>
    9f52:	3f 5f       	subi	r19, 0xFF	; 255
    9f54:	48 5f       	subi	r20, 0xF8	; 248
    9f56:	eb cf       	rjmp	.-42     	; 0x9f2e <MoveSprite+0x4>
    9f58:	0f 91       	pop	r16
    9f5a:	08 95       	ret

00009f5c <InitializeVideoMode>:
    9f5c:	e2 e0       	ldi	r30, 0x02	; 2
    9f5e:	f1 e0       	ldi	r31, 0x01	; 1
    9f60:	80 ee       	ldi	r24, 0xE0	; 224
    9f62:	80 83       	st	Z, r24
    9f64:	81 83       	std	Z+1, r24	; 0x01
    9f66:	34 96       	adiw	r30, 0x04	; 4
    9f68:	91 e0       	ldi	r25, 0x01	; 1
    9f6a:	ea 33       	cpi	r30, 0x3A	; 58
    9f6c:	f9 07       	cpc	r31, r25
    9f6e:	c9 f7       	brne	.-14     	; 0x9f62 <InitializeVideoMode+0x6>
    9f70:	80 e2       	ldi	r24, 0x20	; 32
    9f72:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollHeight>
    9f76:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    9f7a:	10 92 4b 08 	sts	0x084B, r1	; 0x80084b <free_tile_index>
    9f7e:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <user_ram_tiles_c_tmp>
    9f82:	08 95       	ret

00009f84 <DrawMap>:
    9f84:	7f 92       	push	r7
    9f86:	8f 92       	push	r8
    9f88:	9f 92       	push	r9
    9f8a:	af 92       	push	r10
    9f8c:	bf 92       	push	r11
    9f8e:	cf 92       	push	r12
    9f90:	df 92       	push	r13
    9f92:	ef 92       	push	r14
    9f94:	ff 92       	push	r15
    9f96:	0f 93       	push	r16
    9f98:	1f 93       	push	r17
    9f9a:	cf 93       	push	r28
    9f9c:	df 93       	push	r29
    9f9e:	98 2e       	mov	r9, r24
    9fa0:	86 2e       	mov	r8, r22
    9fa2:	fa 01       	movw	r30, r20
    9fa4:	e4 90       	lpm	r14, Z
    9fa6:	31 96       	adiw	r30, 0x01	; 1
    9fa8:	f4 90       	lpm	r15, Z
    9faa:	ae 2c       	mov	r10, r14
    9fac:	b1 2c       	mov	r11, r1
    9fae:	ea 01       	movw	r28, r20
    9fb0:	22 96       	adiw	r28, 0x02	; 2
    9fb2:	10 e0       	ldi	r17, 0x00	; 0
    9fb4:	1f 15       	cp	r17, r15
    9fb6:	b9 f0       	breq	.+46     	; 0x9fe6 <DrawMap+0x62>
    9fb8:	6e 01       	movw	r12, r28
    9fba:	00 e0       	ldi	r16, 0x00	; 0
    9fbc:	71 2e       	mov	r7, r17
    9fbe:	78 0c       	add	r7, r8
    9fc0:	0e 15       	cp	r16, r14
    9fc2:	69 f0       	breq	.+26     	; 0x9fde <DrawMap+0x5a>
    9fc4:	f6 01       	movw	r30, r12
    9fc6:	44 91       	lpm	r20, Z
    9fc8:	50 e0       	ldi	r21, 0x00	; 0
    9fca:	67 2d       	mov	r22, r7
    9fcc:	80 2f       	mov	r24, r16
    9fce:	89 0d       	add	r24, r9
    9fd0:	0e 94 69 43 	call	0x86d2	; 0x86d2 <SetTile>
    9fd4:	0f 5f       	subi	r16, 0xFF	; 255
    9fd6:	ff ef       	ldi	r31, 0xFF	; 255
    9fd8:	cf 1a       	sub	r12, r31
    9fda:	df 0a       	sbc	r13, r31
    9fdc:	f1 cf       	rjmp	.-30     	; 0x9fc0 <DrawMap+0x3c>
    9fde:	1f 5f       	subi	r17, 0xFF	; 255
    9fe0:	ca 0d       	add	r28, r10
    9fe2:	db 1d       	adc	r29, r11
    9fe4:	e7 cf       	rjmp	.-50     	; 0x9fb4 <DrawMap+0x30>
    9fe6:	df 91       	pop	r29
    9fe8:	cf 91       	pop	r28
    9fea:	1f 91       	pop	r17
    9fec:	0f 91       	pop	r16
    9fee:	ff 90       	pop	r15
    9ff0:	ef 90       	pop	r14
    9ff2:	df 90       	pop	r13
    9ff4:	cf 90       	pop	r12
    9ff6:	bf 90       	pop	r11
    9ff8:	af 90       	pop	r10
    9ffa:	9f 90       	pop	r9
    9ffc:	8f 90       	pop	r8
    9ffe:	7f 90       	pop	r7
    a000:	08 95       	ret

0000a002 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    a002:	0f 93       	push	r16
    a004:	1f 93       	push	r17
    a006:	cf 93       	push	r28
    a008:	df 93       	push	r29
    a00a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a00c:	c0 e0       	ldi	r28, 0x00	; 0
    a00e:	d0 e0       	ldi	r29, 0x00	; 0
    a010:	c0 17       	cp	r28, r16
    a012:	d1 07       	cpc	r29, r17
    a014:	44 f4       	brge	.+16     	; 0xa026 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    a016:	0e 94 7f 43 	call	0x86fe	; 0x86fe <GetVsyncFlag>
    a01a:	88 23       	and	r24, r24
    a01c:	e1 f3       	breq	.-8      	; 0xa016 <WaitVsync+0x14>
		ClearVsyncFlag();		
    a01e:	0e 94 83 43 	call	0x8706	; 0x8706 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a022:	21 96       	adiw	r28, 0x01	; 1
    a024:	f5 cf       	rjmp	.-22     	; 0xa010 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    a026:	df 91       	pop	r29
    a028:	cf 91       	pop	r28
    a02a:	1f 91       	pop	r17
    a02c:	0f 91       	pop	r16
    a02e:	08 95       	ret

0000a030 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    a030:	83 e1       	ldi	r24, 0x13	; 19
    a032:	99 e0       	ldi	r25, 0x09	; 9
    a034:	0e 94 e4 44 	call	0x89c8	; 0x89c8 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    a038:	83 e1       	ldi	r24, 0x13	; 19
    a03a:	91 e0       	ldi	r25, 0x01	; 1
    a03c:	0e 94 7a 43 	call	0x86f4	; 0x86f4 <SetTileTable>

	/* Draw logo */
	ClearVram();
    a040:	0e 94 5f 43 	call	0x86be	; 0x86be <ClearVram>
	WaitVsync(15U);
    a044:	8f e0       	ldi	r24, 0x0F	; 15
    a046:	90 e0       	ldi	r25, 0x00	; 0
    a048:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    a04c:	41 e0       	ldi	r20, 0x01	; 1
    a04e:	6f ef       	ldi	r22, 0xFF	; 255
    a050:	80 e0       	ldi	r24, 0x00	; 0
    a052:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a056:	4d ef       	ldi	r20, 0xFD	; 253
    a058:	50 e0       	ldi	r21, 0x00	; 0
    a05a:	6c e0       	ldi	r22, 0x0C	; 12
    a05c:	8c e0       	ldi	r24, 0x0C	; 12
    a05e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
	WaitVsync(3);
    a062:	83 e0       	ldi	r24, 0x03	; 3
    a064:	90 e0       	ldi	r25, 0x00	; 0
    a066:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    a06a:	4c ee       	ldi	r20, 0xEC	; 236
    a06c:	50 e0       	ldi	r21, 0x00	; 0
    a06e:	6c e0       	ldi	r22, 0x0C	; 12
    a070:	8c e0       	ldi	r24, 0x0C	; 12
    a072:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
	WaitVsync(2);
    a076:	82 e0       	ldi	r24, 0x02	; 2
    a078:	90 e0       	ldi	r25, 0x00	; 0
    a07a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a07e:	4d ef       	ldi	r20, 0xFD	; 253
    a080:	50 e0       	ldi	r21, 0x00	; 0
    a082:	6c e0       	ldi	r22, 0x0C	; 12
    a084:	8c e0       	ldi	r24, 0x0C	; 12
    a086:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    a08a:	81 e4       	ldi	r24, 0x41	; 65
    a08c:	90 e0       	ldi	r25, 0x00	; 0
    a08e:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
	ClearVram();
    a092:	0e 94 5f 43 	call	0x86be	; 0x86be <ClearVram>
	WaitVsync(20U);
    a096:	84 e1       	ldi	r24, 0x14	; 20
    a098:	90 e0       	ldi	r25, 0x00	; 0
    a09a:	0c 94 01 50 	jmp	0xa002	; 0xa002 <WaitVsync>

0000a09e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    a09e:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <fadeSpeed>
	currFadeFrame=0;
    a0a2:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <currFadeFrame>
	fadeActive=true;
    a0a6:	81 e0       	ldi	r24, 0x01	; 1
    a0a8:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <fadeActive>
		
	if(blocking){
    a0ac:	66 23       	and	r22, r22
    a0ae:	21 f0       	breq	.+8      	; 0xa0b8 <doFade+0x1a>
		while(fadeActive==true);
    a0b0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    a0b4:	81 11       	cpse	r24, r1
    a0b6:	fc cf       	rjmp	.-8      	; 0xa0b0 <doFade+0x12>
    a0b8:	08 95       	ret

0000a0ba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    a0ba:	81 11       	cpse	r24, r1
    a0bc:	03 c0       	rjmp	.+6      	; 0xa0c4 <FadeIn+0xa>
		DDRC=0xff;
    a0be:	8f ef       	ldi	r24, 0xFF	; 255
    a0c0:	87 b9       	out	0x07, r24	; 7
		return;
    a0c2:	08 95       	ret
	}
	fadeStep=1;
    a0c4:	91 e0       	ldi	r25, 0x01	; 1
    a0c6:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=1;
    a0ca:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    a0ce:	0c 94 4f 50 	jmp	0xa09e	; 0xa09e <doFade>

0000a0d2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    a0d2:	81 11       	cpse	r24, r1
    a0d4:	02 c0       	rjmp	.+4      	; 0xa0da <FadeOut+0x8>
		DDRC=0;
    a0d6:	17 b8       	out	0x07, r1	; 7
		return;
    a0d8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    a0da:	9c e0       	ldi	r25, 0x0C	; 12
    a0dc:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=-1;
    a0e0:	9f ef       	ldi	r25, 0xFF	; 255
    a0e2:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    a0e6:	0c 94 4f 50 	jmp	0xa09e	; 0xa09e <doFade>

0000a0ea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    a0ea:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    a0ee:	88 23       	and	r24, r24
    a0f0:	01 f1       	breq	.+64     	; 0xa132 <ProcessFading+0x48>
		if(currFadeFrame==0){
    a0f2:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <currFadeFrame>
    a0f6:	81 11       	cpse	r24, r1
    a0f8:	19 c0       	rjmp	.+50     	; 0xa12c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    a0fa:	80 91 20 09 	lds	r24, 0x0920	; 0x800920 <fadeSpeed>
    a0fe:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    a102:	e0 91 24 09 	lds	r30, 0x0924	; 0x800924 <fadeStep>
    a106:	f0 e0       	ldi	r31, 0x00	; 0
    a108:	e1 52       	subi	r30, 0x21	; 33
    a10a:	ff 4f       	sbci	r31, 0xFF	; 255
    a10c:	e4 91       	lpm	r30, Z
    a10e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    a110:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <fadeStep>
    a114:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <fadeDir>
    a118:	89 0f       	add	r24, r25
    a11a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    a11e:	88 23       	and	r24, r24
    a120:	11 f0       	breq	.+4      	; 0xa126 <ProcessFading+0x3c>
    a122:	8d 30       	cpi	r24, 0x0D	; 13
    a124:	31 f4       	brne	.+12     	; 0xa132 <ProcessFading+0x48>
				fadeActive=false;
    a126:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <fadeActive>
    a12a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    a12c:	81 50       	subi	r24, 0x01	; 1
    a12e:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
    a132:	08 95       	ret

0000a134 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    a134:	0e 94 75 50 	call	0xa0ea	; 0xa0ea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    a138:	0c 94 00 4e 	jmp	0x9c00	; 0x9c00 <ProcessSprites>

0000a13c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    a13c:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    a140:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    a144:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    a148:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    a14c:	01 96       	adiw	r24, 0x01	; 1
    a14e:	a1 1d       	adc	r26, r1
    a150:	b1 1d       	adc	r27, r1
    a152:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <time>
    a156:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <time+0x1>
    a15a:	a0 93 18 0a 	sts	0x0A18, r26	; 0x800a18 <time+0x2>
    a15e:	b0 93 19 0a 	sts	0x0A19, r27	; 0x800a19 <time+0x3>
    a162:	08 95       	ret

0000a164 <drawplayer>:
return;
  
}

void drawplayer()
{
    a164:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,0);
    a166:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a16a:	82 37       	cpi	r24, 0x72	; 114
    a16c:	49 f4       	brne	.+18     	; 0xa180 <drawplayer+0x1c>
    a16e:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a172:	81 11       	cpse	r24, r1
    a174:	05 c0       	rjmp	.+10     	; 0xa180 <drawplayer+0x1c>
    a176:	40 e0       	ldi	r20, 0x00	; 0
    a178:	69 ee       	ldi	r22, 0xE9	; 233
    a17a:	76 e4       	ldi	r23, 0x46	; 70
    a17c:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,pac0 ,1);
    a180:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a184:	8c 36       	cpi	r24, 0x6C	; 108
    a186:	49 f4       	brne	.+18     	; 0xa19a <drawplayer+0x36>
    a188:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a18c:	81 11       	cpse	r24, r1
    a18e:	05 c0       	rjmp	.+10     	; 0xa19a <drawplayer+0x36>
    a190:	41 e0       	ldi	r20, 0x01	; 1
    a192:	69 ee       	ldi	r22, 0xE9	; 233
    a194:	76 e4       	ldi	r23, 0x46	; 70
    a196:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,0);
    a19a:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a19e:	82 37       	cpi	r24, 0x72	; 114
    a1a0:	59 f4       	brne	.+22     	; 0xa1b8 <drawplayer+0x54>
    a1a2:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a1a6:	81 50       	subi	r24, 0x01	; 1
    a1a8:	88 30       	cpi	r24, 0x08	; 8
    a1aa:	30 f4       	brcc	.+12     	; 0xa1b8 <drawplayer+0x54>
    a1ac:	40 e0       	ldi	r20, 0x00	; 0
    a1ae:	69 ee       	ldi	r22, 0xE9	; 233
    a1b0:	76 e4       	ldi	r23, 0x46	; 70
    a1b2:	80 e0       	ldi	r24, 0x00	; 0
    a1b4:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,0);    
    a1b8:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a1bc:	82 37       	cpi	r24, 0x72	; 114
    a1be:	59 f4       	brne	.+22     	; 0xa1d6 <drawplayer+0x72>
    a1c0:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a1c4:	89 50       	subi	r24, 0x09	; 9
    a1c6:	88 30       	cpi	r24, 0x08	; 8
    a1c8:	30 f4       	brcc	.+12     	; 0xa1d6 <drawplayer+0x72>
    a1ca:	40 e0       	ldi	r20, 0x00	; 0
    a1cc:	63 ee       	ldi	r22, 0xE3	; 227
    a1ce:	76 e4       	ldi	r23, 0x46	; 70
    a1d0:	80 e0       	ldi	r24, 0x00	; 0
    a1d2:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,0);  
    a1d6:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a1da:	82 37       	cpi	r24, 0x72	; 114
    a1dc:	59 f4       	brne	.+22     	; 0xa1f4 <drawplayer+0x90>
    a1de:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a1e2:	81 51       	subi	r24, 0x11	; 17
    a1e4:	88 30       	cpi	r24, 0x08	; 8
    a1e6:	30 f4       	brcc	.+12     	; 0xa1f4 <drawplayer+0x90>
    a1e8:	40 e0       	ldi	r20, 0x00	; 0
    a1ea:	6d ed       	ldi	r22, 0xDD	; 221
    a1ec:	76 e4       	ldi	r23, 0x46	; 70
    a1ee:	80 e0       	ldi	r24, 0x00	; 0
    a1f0:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,pac0 ,1);
    a1f4:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a1f8:	8c 36       	cpi	r24, 0x6C	; 108
    a1fa:	59 f4       	brne	.+22     	; 0xa212 <drawplayer+0xae>
    a1fc:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a200:	81 50       	subi	r24, 0x01	; 1
    a202:	88 30       	cpi	r24, 0x08	; 8
    a204:	30 f4       	brcc	.+12     	; 0xa212 <drawplayer+0xae>
    a206:	41 e0       	ldi	r20, 0x01	; 1
    a208:	69 ee       	ldi	r22, 0xE9	; 233
    a20a:	76 e4       	ldi	r23, 0x46	; 70
    a20c:	80 e0       	ldi	r24, 0x00	; 0
    a20e:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,pac1 ,1);    
    a212:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a216:	8c 36       	cpi	r24, 0x6C	; 108
    a218:	59 f4       	brne	.+22     	; 0xa230 <drawplayer+0xcc>
    a21a:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a21e:	89 50       	subi	r24, 0x09	; 9
    a220:	88 30       	cpi	r24, 0x08	; 8
    a222:	30 f4       	brcc	.+12     	; 0xa230 <drawplayer+0xcc>
    a224:	41 e0       	ldi	r20, 0x01	; 1
    a226:	63 ee       	ldi	r22, 0xE3	; 227
    a228:	76 e4       	ldi	r23, 0x46	; 70
    a22a:	80 e0       	ldi	r24, 0x00	; 0
    a22c:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,pac2 ,1);  
    a230:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    a234:	8c 36       	cpi	r24, 0x6C	; 108
    a236:	59 f4       	brne	.+22     	; 0xa24e <drawplayer+0xea>
    a238:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <player+0x1b>
    a23c:	81 51       	subi	r24, 0x11	; 17
    a23e:	88 30       	cpi	r24, 0x08	; 8
    a240:	30 f4       	brcc	.+12     	; 0xa24e <drawplayer+0xea>
    a242:	41 e0       	ldi	r20, 0x01	; 1
    a244:	6d ed       	ldi	r22, 0xDD	; 221
    a246:	76 e4       	ldi	r23, 0x46	; 70
    a248:	80 e0       	ldi	r24, 0x00	; 0
    a24a:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a24e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    a252:	88 23       	and	r24, r24
    a254:	31 f0       	breq	.+12     	; 0xa262 <drawplayer+0xfe>
{
   MapSprite2(0 ,pac3 ,0);
    a256:	40 e0       	ldi	r20, 0x00	; 0
    a258:	67 ed       	ldi	r22, 0xD7	; 215
    a25a:	76 e4       	ldi	r23, 0x46	; 70
    a25c:	80 e0       	ldi	r24, 0x00	; 0
    a25e:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    a262:	40 91 63 09 	lds	r20, 0x0963	; 0x800963 <player+0x2>
    a266:	45 51       	subi	r20, 0x15	; 21
    a268:	60 91 61 09 	lds	r22, 0x0961	; 0x800961 <player>
    a26c:	67 50       	subi	r22, 0x07	; 7
    a26e:	02 e0       	ldi	r16, 0x02	; 2
    a270:	22 e0       	ldi	r18, 0x02	; 2
    a272:	80 e0       	ldi	r24, 0x00	; 0
    a274:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>



aniframe++;
    a278:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a27c:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    a27e:	85 31       	cpi	r24, 0x15	; 21
    a280:	18 f4       	brcc	.+6      	; 0xa288 <drawplayer+0x124>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);



aniframe++;
    a282:	80 93 90 0a 	sts	0x0A90, r24	; 0x800a90 <aniframe>
    a286:	02 c0       	rjmp	.+4      	; 0xa28c <drawplayer+0x128>
if ( aniframe > 20 ) aniframe = 0;     
    a288:	10 92 90 0a 	sts	0x0A90, r1	; 0x800a90 <aniframe>


}
    a28c:	0f 91       	pop	r16
    a28e:	08 95       	ret

0000a290 <drawplayer2>:
void drawplayer2()
{
    a290:	0f 93       	push	r16
 
//if  ( player.jumping == false  )
//{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,0);
    a292:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a296:	82 37       	cpi	r24, 0x72	; 114
    a298:	51 f4       	brne	.+20     	; 0xa2ae <drawplayer2+0x1e>
    a29a:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a29e:	81 11       	cpse	r24, r1
    a2a0:	06 c0       	rjmp	.+12     	; 0xa2ae <drawplayer2+0x1e>
    a2a2:	40 e0       	ldi	r20, 0x00	; 0
    a2a4:	65 ec       	ldi	r22, 0xC5	; 197
    a2a6:	76 e4       	ldi	r23, 0x46	; 70
    a2a8:	8a e0       	ldi	r24, 0x0A	; 10
    a2aa:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(10 ,run0 ,1);
    a2ae:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a2b2:	8c 36       	cpi	r24, 0x6C	; 108
    a2b4:	51 f4       	brne	.+20     	; 0xa2ca <drawplayer2+0x3a>
    a2b6:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a2ba:	81 11       	cpse	r24, r1
    a2bc:	06 c0       	rjmp	.+12     	; 0xa2ca <drawplayer2+0x3a>
    a2be:	41 e0       	ldi	r20, 0x01	; 1
    a2c0:	65 ec       	ldi	r22, 0xC5	; 197
    a2c2:	76 e4       	ldi	r23, 0x46	; 70
    a2c4:	8a e0       	ldi	r24, 0x0A	; 10
    a2c6:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,0);
    a2ca:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a2ce:	82 37       	cpi	r24, 0x72	; 114
    a2d0:	59 f4       	brne	.+22     	; 0xa2e8 <drawplayer2+0x58>
    a2d2:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a2d6:	81 50       	subi	r24, 0x01	; 1
    a2d8:	88 30       	cpi	r24, 0x08	; 8
    a2da:	30 f4       	brcc	.+12     	; 0xa2e8 <drawplayer2+0x58>
    a2dc:	40 e0       	ldi	r20, 0x00	; 0
    a2de:	65 ec       	ldi	r22, 0xC5	; 197
    a2e0:	76 e4       	ldi	r23, 0x46	; 70
    a2e2:	8a e0       	ldi	r24, 0x0A	; 10
    a2e4:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,0);    
    a2e8:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a2ec:	82 37       	cpi	r24, 0x72	; 114
    a2ee:	59 f4       	brne	.+22     	; 0xa306 <drawplayer2+0x76>
    a2f0:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a2f4:	89 50       	subi	r24, 0x09	; 9
    a2f6:	88 30       	cpi	r24, 0x08	; 8
    a2f8:	30 f4       	brcc	.+12     	; 0xa306 <drawplayer2+0x76>
    a2fa:	40 e0       	ldi	r20, 0x00	; 0
    a2fc:	6f eb       	ldi	r22, 0xBF	; 191
    a2fe:	76 e4       	ldi	r23, 0x46	; 70
    a300:	8a e0       	ldi	r24, 0x0A	; 10
    a302:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,0);  
    a306:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a30a:	82 37       	cpi	r24, 0x72	; 114
    a30c:	59 f4       	brne	.+22     	; 0xa324 <drawplayer2+0x94>
    a30e:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a312:	81 51       	subi	r24, 0x11	; 17
    a314:	88 30       	cpi	r24, 0x08	; 8
    a316:	30 f4       	brcc	.+12     	; 0xa324 <drawplayer2+0x94>
    a318:	40 e0       	ldi	r20, 0x00	; 0
    a31a:	65 ec       	ldi	r22, 0xC5	; 197
    a31c:	76 e4       	ldi	r23, 0x46	; 70
    a31e:	8a e0       	ldi	r24, 0x0A	; 10
    a320:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(10 ,run0 ,1);
    a324:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a328:	8c 36       	cpi	r24, 0x6C	; 108
    a32a:	59 f4       	brne	.+22     	; 0xa342 <drawplayer2+0xb2>
    a32c:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a330:	81 50       	subi	r24, 0x01	; 1
    a332:	88 30       	cpi	r24, 0x08	; 8
    a334:	30 f4       	brcc	.+12     	; 0xa342 <drawplayer2+0xb2>
    a336:	41 e0       	ldi	r20, 0x01	; 1
    a338:	65 ec       	ldi	r22, 0xC5	; 197
    a33a:	76 e4       	ldi	r23, 0x46	; 70
    a33c:	8a e0       	ldi	r24, 0x0A	; 10
    a33e:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(10 ,run1 ,1);    
    a342:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a346:	8c 36       	cpi	r24, 0x6C	; 108
    a348:	59 f4       	brne	.+22     	; 0xa360 <drawplayer2+0xd0>
    a34a:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a34e:	89 50       	subi	r24, 0x09	; 9
    a350:	88 30       	cpi	r24, 0x08	; 8
    a352:	30 f4       	brcc	.+12     	; 0xa360 <drawplayer2+0xd0>
    a354:	41 e0       	ldi	r20, 0x01	; 1
    a356:	6f eb       	ldi	r22, 0xBF	; 191
    a358:	76 e4       	ldi	r23, 0x46	; 70
    a35a:	8a e0       	ldi	r24, 0x0A	; 10
    a35c:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(10 ,run0 ,1);  
    a360:	80 91 29 0a 	lds	r24, 0x0A29	; 0x800a29 <player2+0xe>
    a364:	8c 36       	cpi	r24, 0x6C	; 108
    a366:	59 f4       	brne	.+22     	; 0xa37e <drawplayer2+0xee>
    a368:	80 91 36 0a 	lds	r24, 0x0A36	; 0x800a36 <player2+0x1b>
    a36c:	81 51       	subi	r24, 0x11	; 17
    a36e:	88 30       	cpi	r24, 0x08	; 8
    a370:	30 f4       	brcc	.+12     	; 0xa37e <drawplayer2+0xee>
    a372:	41 e0       	ldi	r20, 0x01	; 1
    a374:	65 ec       	ldi	r22, 0xC5	; 197
    a376:	76 e4       	ldi	r23, 0x46	; 70
    a378:	8a e0       	ldi	r24, 0x0A	; 10
    a37a:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
//};

//if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,man3 ,0);   
//if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,man3 ,1); 
if(player.stuck == true)
    a37e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    a382:	88 23       	and	r24, r24
    a384:	31 f0       	breq	.+12     	; 0xa392 <drawplayer2+0x102>
{
   MapSprite2(10 ,run0 ,0);
    a386:	40 e0       	ldi	r20, 0x00	; 0
    a388:	65 ec       	ldi	r22, 0xC5	; 197
    a38a:	76 e4       	ldi	r23, 0x46	; 70
    a38c:	8a e0       	ldi	r24, 0x0A	; 10
    a38e:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
}
MoveSprite(10 ,player2.x -7 ,player2.y - 21  ,2 ,2);
    a392:	40 91 1d 0a 	lds	r20, 0x0A1D	; 0x800a1d <player2+0x2>
    a396:	45 51       	subi	r20, 0x15	; 21
    a398:	60 91 1b 0a 	lds	r22, 0x0A1B	; 0x800a1b <player2>
    a39c:	67 50       	subi	r22, 0x07	; 7
    a39e:	02 e0       	ldi	r16, 0x02	; 2
    a3a0:	22 e0       	ldi	r18, 0x02	; 2
    a3a2:	8a e0       	ldi	r24, 0x0A	; 10
    a3a4:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>

//aniframe++;
//if ( aniframe > 20 ) aniframe = 0;     


}
    a3a8:	0f 91       	pop	r16
    a3aa:	08 95       	ret

0000a3ac <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    a3ac:	ef 92       	push	r14
    a3ae:	ff 92       	push	r15
    a3b0:	0f 93       	push	r16
    a3b2:	1f 93       	push	r17
    a3b4:	cf 93       	push	r28
    a3b6:	df 93       	push	r29
    a3b8:	cd b7       	in	r28, 0x3d	; 61
    a3ba:	de b7       	in	r29, 0x3e	; 62
    a3bc:	2a 97       	sbiw	r28, 0x0a	; 10
    a3be:	0f b6       	in	r0, 0x3f	; 63
    a3c0:	f8 94       	cli
    a3c2:	de bf       	out	0x3e, r29	; 62
    a3c4:	0f be       	out	0x3f, r0	; 63
    a3c6:	cd bf       	out	0x3d, r28	; 61
    a3c8:	18 2f       	mov	r17, r24
    a3ca:	06 2f       	mov	r16, r22
    a3cc:	fa 01       	movw	r30, r20
    a3ce:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    a3d0:	90 e2       	ldi	r25, 0x20	; 32
    a3d2:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    a3d4:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    a3d6:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    a3d8:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    a3da:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    a3dc:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    a3de:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    a3e0:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    a3e2:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    a3e4:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    a3e6:	4a e0       	ldi	r20, 0x0A	; 10
    a3e8:	be 01       	movw	r22, r28
    a3ea:	6f 5f       	subi	r22, 0xFF	; 255
    a3ec:	7f 4f       	sbci	r23, 0xFF	; 255
    a3ee:	cf 01       	movw	r24, r30
    a3f0:	0e 94 1c 6c 	call	0xd838	; 0xd838 <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a3f4:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <lx+0x1>
    a3f8:	10 92 8e 0a 	sts	0x0A8E, r1	; 0x800a8e <lx>
    a3fc:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a400:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a404:	86 30       	cpi	r24, 0x06	; 6
    a406:	91 05       	cpc	r25, r1
    a408:	0c f0       	brlt	.+2      	; 0xa40c <printtileint+0x60>
    a40a:	f8 c0       	rjmp	.+496    	; 0xa5fc <printtileint+0x250>
    a40c:	8e 15       	cp	r24, r14
    a40e:	9f 05       	cpc	r25, r15
    a410:	0c f0       	brlt	.+2      	; 0xa414 <printtileint+0x68>
    a412:	f4 c0       	rjmp	.+488    	; 0xa5fc <printtileint+0x250>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, black ); 
    a414:	4e e7       	ldi	r20, 0x7E	; 126
    a416:	5b e7       	ldi	r21, 0x7B	; 123
    a418:	60 e2       	ldi	r22, 0x20	; 32
    a41a:	81 0f       	add	r24, r17
    a41c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,y, n0 );  
    a420:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a424:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a428:	e1 e0       	ldi	r30, 0x01	; 1
    a42a:	f0 e0       	ldi	r31, 0x00	; 0
    a42c:	ec 0f       	add	r30, r28
    a42e:	fd 1f       	adc	r31, r29
    a430:	e8 0f       	add	r30, r24
    a432:	f9 1f       	adc	r31, r25
    a434:	20 81       	ld	r18, Z
    a436:	20 33       	cpi	r18, 0x30	; 48
    a438:	31 f4       	brne	.+12     	; 0xa446 <printtileint+0x9a>
    a43a:	45 ee       	ldi	r20, 0xE5	; 229
    a43c:	5a e7       	ldi	r21, 0x7A	; 122
    a43e:	60 2f       	mov	r22, r16
    a440:	81 0f       	add	r24, r17
    a442:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,y, n1 ); 
    a446:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a44a:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a44e:	e1 e0       	ldi	r30, 0x01	; 1
    a450:	f0 e0       	ldi	r31, 0x00	; 0
    a452:	ec 0f       	add	r30, r28
    a454:	fd 1f       	adc	r31, r29
    a456:	e8 0f       	add	r30, r24
    a458:	f9 1f       	adc	r31, r25
    a45a:	20 81       	ld	r18, Z
    a45c:	21 33       	cpi	r18, 0x31	; 49
    a45e:	31 f4       	brne	.+12     	; 0xa46c <printtileint+0xc0>
    a460:	42 ee       	ldi	r20, 0xE2	; 226
    a462:	5a e7       	ldi	r21, 0x7A	; 122
    a464:	60 2f       	mov	r22, r16
    a466:	81 0f       	add	r24, r17
    a468:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,y, n2 ); 
    a46c:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a470:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a474:	e1 e0       	ldi	r30, 0x01	; 1
    a476:	f0 e0       	ldi	r31, 0x00	; 0
    a478:	ec 0f       	add	r30, r28
    a47a:	fd 1f       	adc	r31, r29
    a47c:	e8 0f       	add	r30, r24
    a47e:	f9 1f       	adc	r31, r25
    a480:	20 81       	ld	r18, Z
    a482:	22 33       	cpi	r18, 0x32	; 50
    a484:	31 f4       	brne	.+12     	; 0xa492 <printtileint+0xe6>
    a486:	4f ed       	ldi	r20, 0xDF	; 223
    a488:	5a e7       	ldi	r21, 0x7A	; 122
    a48a:	60 2f       	mov	r22, r16
    a48c:	81 0f       	add	r24, r17
    a48e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,y, n3 ); 
    a492:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a496:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a49a:	e1 e0       	ldi	r30, 0x01	; 1
    a49c:	f0 e0       	ldi	r31, 0x00	; 0
    a49e:	ec 0f       	add	r30, r28
    a4a0:	fd 1f       	adc	r31, r29
    a4a2:	e8 0f       	add	r30, r24
    a4a4:	f9 1f       	adc	r31, r25
    a4a6:	20 81       	ld	r18, Z
    a4a8:	23 33       	cpi	r18, 0x33	; 51
    a4aa:	31 f4       	brne	.+12     	; 0xa4b8 <printtileint+0x10c>
    a4ac:	4c ed       	ldi	r20, 0xDC	; 220
    a4ae:	5a e7       	ldi	r21, 0x7A	; 122
    a4b0:	60 2f       	mov	r22, r16
    a4b2:	81 0f       	add	r24, r17
    a4b4:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,y, n4); 
    a4b8:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a4bc:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a4c0:	e1 e0       	ldi	r30, 0x01	; 1
    a4c2:	f0 e0       	ldi	r31, 0x00	; 0
    a4c4:	ec 0f       	add	r30, r28
    a4c6:	fd 1f       	adc	r31, r29
    a4c8:	e8 0f       	add	r30, r24
    a4ca:	f9 1f       	adc	r31, r25
    a4cc:	20 81       	ld	r18, Z
    a4ce:	24 33       	cpi	r18, 0x34	; 52
    a4d0:	31 f4       	brne	.+12     	; 0xa4de <printtileint+0x132>
    a4d2:	49 ed       	ldi	r20, 0xD9	; 217
    a4d4:	5a e7       	ldi	r21, 0x7A	; 122
    a4d6:	60 2f       	mov	r22, r16
    a4d8:	81 0f       	add	r24, r17
    a4da:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,y, n5 ); 
    a4de:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a4e2:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a4e6:	e1 e0       	ldi	r30, 0x01	; 1
    a4e8:	f0 e0       	ldi	r31, 0x00	; 0
    a4ea:	ec 0f       	add	r30, r28
    a4ec:	fd 1f       	adc	r31, r29
    a4ee:	e8 0f       	add	r30, r24
    a4f0:	f9 1f       	adc	r31, r25
    a4f2:	20 81       	ld	r18, Z
    a4f4:	25 33       	cpi	r18, 0x35	; 53
    a4f6:	31 f4       	brne	.+12     	; 0xa504 <printtileint+0x158>
    a4f8:	46 ed       	ldi	r20, 0xD6	; 214
    a4fa:	5a e7       	ldi	r21, 0x7A	; 122
    a4fc:	60 2f       	mov	r22, r16
    a4fe:	81 0f       	add	r24, r17
    a500:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,y, n6 ); 
    a504:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a508:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a50c:	e1 e0       	ldi	r30, 0x01	; 1
    a50e:	f0 e0       	ldi	r31, 0x00	; 0
    a510:	ec 0f       	add	r30, r28
    a512:	fd 1f       	adc	r31, r29
    a514:	e8 0f       	add	r30, r24
    a516:	f9 1f       	adc	r31, r25
    a518:	20 81       	ld	r18, Z
    a51a:	26 33       	cpi	r18, 0x36	; 54
    a51c:	31 f4       	brne	.+12     	; 0xa52a <printtileint+0x17e>
    a51e:	43 ed       	ldi	r20, 0xD3	; 211
    a520:	5a e7       	ldi	r21, 0x7A	; 122
    a522:	60 2f       	mov	r22, r16
    a524:	81 0f       	add	r24, r17
    a526:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,y, n7 ); 
    a52a:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a52e:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a532:	e1 e0       	ldi	r30, 0x01	; 1
    a534:	f0 e0       	ldi	r31, 0x00	; 0
    a536:	ec 0f       	add	r30, r28
    a538:	fd 1f       	adc	r31, r29
    a53a:	e8 0f       	add	r30, r24
    a53c:	f9 1f       	adc	r31, r25
    a53e:	20 81       	ld	r18, Z
    a540:	27 33       	cpi	r18, 0x37	; 55
    a542:	31 f4       	brne	.+12     	; 0xa550 <printtileint+0x1a4>
    a544:	40 ed       	ldi	r20, 0xD0	; 208
    a546:	5a e7       	ldi	r21, 0x7A	; 122
    a548:	60 2f       	mov	r22, r16
    a54a:	81 0f       	add	r24, r17
    a54c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,y, n8 ); 
    a550:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a554:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a558:	e1 e0       	ldi	r30, 0x01	; 1
    a55a:	f0 e0       	ldi	r31, 0x00	; 0
    a55c:	ec 0f       	add	r30, r28
    a55e:	fd 1f       	adc	r31, r29
    a560:	e8 0f       	add	r30, r24
    a562:	f9 1f       	adc	r31, r25
    a564:	20 81       	ld	r18, Z
    a566:	28 33       	cpi	r18, 0x38	; 56
    a568:	31 f4       	brne	.+12     	; 0xa576 <printtileint+0x1ca>
    a56a:	4d ec       	ldi	r20, 0xCD	; 205
    a56c:	5a e7       	ldi	r21, 0x7A	; 122
    a56e:	60 2f       	mov	r22, r16
    a570:	81 0f       	add	r24, r17
    a572:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,y, n9 );
    a576:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a57a:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a57e:	e1 e0       	ldi	r30, 0x01	; 1
    a580:	f0 e0       	ldi	r31, 0x00	; 0
    a582:	ec 0f       	add	r30, r28
    a584:	fd 1f       	adc	r31, r29
    a586:	e8 0f       	add	r30, r24
    a588:	f9 1f       	adc	r31, r25
    a58a:	20 81       	ld	r18, Z
    a58c:	29 33       	cpi	r18, 0x39	; 57
    a58e:	31 f4       	brne	.+12     	; 0xa59c <printtileint+0x1f0>
    a590:	4a ec       	ldi	r20, 0xCA	; 202
    a592:	5a e7       	ldi	r21, 0x7A	; 122
    a594:	60 2f       	mov	r22, r16
    a596:	81 0f       	add	r24, r17
    a598:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,y, nm );    
    a59c:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a5a0:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a5a4:	e1 e0       	ldi	r30, 0x01	; 1
    a5a6:	f0 e0       	ldi	r31, 0x00	; 0
    a5a8:	ec 0f       	add	r30, r28
    a5aa:	fd 1f       	adc	r31, r29
    a5ac:	e8 0f       	add	r30, r24
    a5ae:	f9 1f       	adc	r31, r25
    a5b0:	20 81       	ld	r18, Z
    a5b2:	2d 32       	cpi	r18, 0x2D	; 45
    a5b4:	31 f4       	brne	.+12     	; 0xa5c2 <printtileint+0x216>
    a5b6:	47 ec       	ldi	r20, 0xC7	; 199
    a5b8:	5a e7       	ldi	r21, 0x7A	; 122
    a5ba:	60 2f       	mov	r22, r16
    a5bc:	81 0f       	add	r24, r17
    a5be:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,y, black ); 
    a5c2:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a5c6:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a5ca:	e1 e0       	ldi	r30, 0x01	; 1
    a5cc:	f0 e0       	ldi	r31, 0x00	; 0
    a5ce:	ec 0f       	add	r30, r28
    a5d0:	fd 1f       	adc	r31, r29
    a5d2:	e8 0f       	add	r30, r24
    a5d4:	f9 1f       	adc	r31, r25
    a5d6:	20 81       	ld	r18, Z
    a5d8:	20 32       	cpi	r18, 0x20	; 32
    a5da:	31 f4       	brne	.+12     	; 0xa5e8 <printtileint+0x23c>
    a5dc:	4e e7       	ldi	r20, 0x7E	; 126
    a5de:	5b e7       	ldi	r21, 0x7B	; 123
    a5e0:	60 2f       	mov	r22, r16
    a5e2:	81 0f       	add	r24, r17
    a5e4:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    a5e8:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a5ec:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a5f0:	01 96       	adiw	r24, 0x01	; 1
    a5f2:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    a5f6:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    a5fa:	00 cf       	rjmp	.-512    	; 0xa3fc <printtileint+0x50>
if (str[lx] == ' ' ) DrawMap2(lx + x,y, black ); 
    

};
    
}
    a5fc:	2a 96       	adiw	r28, 0x0a	; 10
    a5fe:	0f b6       	in	r0, 0x3f	; 63
    a600:	f8 94       	cli
    a602:	de bf       	out	0x3e, r29	; 62
    a604:	0f be       	out	0x3f, r0	; 63
    a606:	cd bf       	out	0x3d, r28	; 61
    a608:	df 91       	pop	r29
    a60a:	cf 91       	pop	r28
    a60c:	1f 91       	pop	r17
    a60e:	0f 91       	pop	r16
    a610:	ff 90       	pop	r15
    a612:	ef 90       	pop	r14
    a614:	08 95       	ret

0000a616 <initlevel>:

void initlevel()
{
    a616:	cf 93       	push	r28
    a618:	df 93       	push	r29
    a61a:	ef e3       	ldi	r30, 0x3F	; 63
    a61c:	fa e0       	ldi	r31, 0x0A	; 10
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    a61e:	80 e0       	ldi	r24, 0x00	; 0
    a620:	90 e0       	ldi	r25, 0x00	; 0
    a622:	11 92       	st	Z+, r1
    a624:	11 92       	st	Z+, r1
    a626:	01 96       	adiw	r24, 0x01	; 1
    a628:	89 31       	cpi	r24, 0x19	; 25
    a62a:	91 05       	cpc	r25, r1
    a62c:	d1 f7       	brne	.-12     	; 0xa622 <initlevel+0xc>
    a62e:	e5 e2       	ldi	r30, 0x25	; 37
    a630:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; };
    a632:	80 e0       	ldi	r24, 0x00	; 0
    a634:	90 e0       	ldi	r25, 0x00	; 0
    a636:	11 82       	std	Z+1, r1	; 0x01
    a638:	10 82       	st	Z, r1
    a63a:	12 82       	std	Z+2, r1	; 0x02
    a63c:	13 82       	std	Z+3, r1	; 0x03
    a63e:	01 96       	adiw	r24, 0x01	; 1
    a640:	34 96       	adiw	r30, 0x04	; 4
    a642:	8c 30       	cpi	r24, 0x0C	; 12
    a644:	91 05       	cpc	r25, r1
    a646:	b9 f7       	brne	.-18     	; 0xa636 <initlevel+0x20>
    a648:	c9 eb       	ldi	r28, 0xB9	; 185
    a64a:	d9 e0       	ldi	r29, 0x09	; 9
    a64c:	a4 e7       	ldi	r26, 0x74	; 116
    a64e:	ba e0       	ldi	r27, 0x0A	; 10
    a650:	e1 ed       	ldi	r30, 0xD1	; 209
    a652:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < 10; lx ++ ) {bananaxs[lx] = 0; bananascrolls[lx] = 0; bananays[lx] = 0; };
    a654:	80 e0       	ldi	r24, 0x00	; 0
    a656:	90 e0       	ldi	r25, 0x00	; 0
    a658:	19 92       	st	Y+, r1
    a65a:	19 92       	st	Y+, r1
    a65c:	1d 92       	st	X+, r1
    a65e:	1d 92       	st	X+, r1
    a660:	11 92       	st	Z+, r1
    a662:	11 92       	st	Z+, r1
    a664:	01 96       	adiw	r24, 0x01	; 1
    a666:	8a 30       	cpi	r24, 0x0A	; 10
    a668:	91 05       	cpc	r25, r1
    a66a:	b1 f7       	brne	.-20     	; 0xa658 <initlevel+0x42>
  banspwncnt = 0; 
    a66c:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    a670:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
    for (lx = 0; lx < 32; lx++)
    a674:	10 92 8f 0a 	sts	0x0A8F, r1	; 0x800a8f <lx+0x1>
    a678:	10 92 8e 0a 	sts	0x0A8E, r1	; 0x800a8e <lx>
    a67c:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a680:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a684:	80 97       	sbiw	r24, 0x20	; 32
    a686:	c4 f5       	brge	.+112    	; 0xa6f8 <initlevel+0xe2>
     		{
                for (  ly = 0; ly < 28; ly++ )
    a688:	10 92 81 09 	sts	0x0981, r1	; 0x800981 <ly+0x1>
    a68c:	10 92 80 09 	sts	0x0980, r1	; 0x800980 <ly>
    a690:	60 91 80 09 	lds	r22, 0x0980	; 0x800980 <ly>
    a694:	70 91 81 09 	lds	r23, 0x0981	; 0x800981 <ly+0x1>
    a698:	6c 31       	cpi	r22, 0x1C	; 28
    a69a:	71 05       	cpc	r23, r1
    a69c:	1c f5       	brge	.+70     	; 0xa6e4 <initlevel+0xce>
                {            
                    if(level >= 7)
    a69e:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    a6a2:	87 30       	cpi	r24, 0x07	; 7
    a6a4:	18 f0       	brcs	.+6      	; 0xa6ac <initlevel+0x96>
                    {
          	         DrawMap2(lx ,ly ,black);
    a6a6:	4e e7       	ldi	r20, 0x7E	; 126
    a6a8:	5b e7       	ldi	r21, 0x7B	; 123
    a6aa:	0e c0       	rjmp	.+28     	; 0xa6c8 <initlevel+0xb2>
                    }
                    else{
                      if(ly == 0  && level != 0 || ly == 1 && level != 0 || ly > 26)
    a6ac:	62 30       	cpi	r22, 0x02	; 2
    a6ae:	71 05       	cpc	r23, r1
    a6b0:	18 f4       	brcc	.+6      	; 0xa6b8 <initlevel+0xa2>
    a6b2:	81 11       	cpse	r24, r1
    a6b4:	04 c0       	rjmp	.+8      	; 0xa6be <initlevel+0xa8>
    a6b6:	06 c0       	rjmp	.+12     	; 0xa6c4 <initlevel+0xae>
    a6b8:	6b 31       	cpi	r22, 0x1B	; 27
    a6ba:	71 05       	cpc	r23, r1
    a6bc:	19 f4       	brne	.+6      	; 0xa6c4 <initlevel+0xae>
                      {
                            DrawMap2(lx ,ly ,lilblack);
    a6be:	45 e7       	ldi	r20, 0x75	; 117
    a6c0:	5b e7       	ldi	r21, 0x7B	; 123
    a6c2:	02 c0       	rjmp	.+4      	; 0xa6c8 <initlevel+0xb2>
                      }
                      else{
                          DrawMap2(lx ,ly ,blue);
    a6c4:	40 e9       	ldi	r20, 0x90	; 144
    a6c6:	5b e7       	ldi	r21, 0x7B	; 123
    a6c8:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a6cc:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; };
  for (lx = 0; lx < 10; lx ++ ) {bananaxs[lx] = 0; bananascrolls[lx] = 0; bananays[lx] = 0; };
  banspwncnt = 0; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    a6d0:	80 91 80 09 	lds	r24, 0x0980	; 0x800980 <ly>
    a6d4:	90 91 81 09 	lds	r25, 0x0981	; 0x800981 <ly+0x1>
    a6d8:	01 96       	adiw	r24, 0x01	; 1
    a6da:	90 93 81 09 	sts	0x0981, r25	; 0x800981 <ly+0x1>
    a6de:	80 93 80 09 	sts	0x0980, r24	; 0x800980 <ly>
    a6e2:	d6 cf       	rjmp	.-84     	; 0xa690 <initlevel+0x7a>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; };
  for (lx = 0; lx < 10; lx ++ ) {bananaxs[lx] = 0; bananascrolls[lx] = 0; bananays[lx] = 0; };
  banspwncnt = 0; 
    for (lx = 0; lx < 32; lx++)
    a6e4:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    a6e8:	90 91 8f 0a 	lds	r25, 0x0A8F	; 0x800a8f <lx+0x1>
    a6ec:	01 96       	adiw	r24, 0x01	; 1
    a6ee:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    a6f2:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    a6f6:	c2 cf       	rjmp	.-124    	; 0xa67c <initlevel+0x66>
                          DrawMap2(lx ,ly ,blue);
                      } 
                    }
                }
     		}
}
    a6f8:	df 91       	pop	r29
    a6fa:	cf 91       	pop	r28
    a6fc:	08 95       	ret

0000a6fe <makeWater>:
    }

}
void makeWater(int x, int y,int z){
    //DrawMap2(x ,y  ,water0);
    waterxs[waterspwncnt] = x;
    a6fe:	e0 91 98 08 	lds	r30, 0x0898	; 0x800898 <waterspwncnt>
    a702:	f0 91 99 08 	lds	r31, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a706:	9f 01       	movw	r18, r30
    a708:	22 0f       	add	r18, r18
    a70a:	33 1f       	adc	r19, r19
    a70c:	d9 01       	movw	r26, r18
    a70e:	ab 51       	subi	r26, 0x1B	; 27
    a710:	b6 4f       	sbci	r27, 0xF6	; 246
    a712:	8d 93       	st	X+, r24
    a714:	9c 93       	st	X, r25
    waterys[waterspwncnt] = y;
    a716:	d9 01       	movw	r26, r18
    a718:	ad 56       	subi	r26, 0x6D	; 109
    a71a:	b5 4f       	sbci	r27, 0xF5	; 245
    a71c:	6d 93       	st	X+, r22
    a71e:	7c 93       	st	X, r23
    waterscrolls[waterspwncnt] = z / 2;
    a720:	d9 01       	movw	r26, r18
    a722:	ae 57       	subi	r26, 0x7E	; 126
    a724:	b6 4f       	sbci	r27, 0xF6	; 246
    a726:	ca 01       	movw	r24, r20
    a728:	57 fd       	sbrc	r21, 7
    a72a:	01 96       	adiw	r24, 0x01	; 1
    a72c:	95 95       	asr	r25
    a72e:	87 95       	ror	r24
    a730:	8d 93       	st	X+, r24
    a732:	9c 93       	st	X, r25

    //waterxs[0] = x;
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
    a734:	31 96       	adiw	r30, 0x01	; 1
    a736:	f0 93 99 08 	sts	0x0899, r31	; 0x800899 <waterspwncnt+0x1>
    a73a:	e0 93 98 08 	sts	0x0898, r30	; 0x800898 <waterspwncnt>
    a73e:	08 95       	ret

0000a740 <updateWater>:
}
void updateWater(){
    a740:	6f 92       	push	r6
    a742:	7f 92       	push	r7
    a744:	8f 92       	push	r8
    a746:	9f 92       	push	r9
    a748:	af 92       	push	r10
    a74a:	bf 92       	push	r11
    a74c:	cf 92       	push	r12
    a74e:	df 92       	push	r13
    a750:	ef 92       	push	r14
    a752:	ff 92       	push	r15
    a754:	0f 93       	push	r16
    a756:	1f 93       	push	r17
    a758:	cf 93       	push	r28
    a75a:	df 93       	push	r29
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a75c:	92 e8       	ldi	r25, 0x82	; 130
    a75e:	c9 2e       	mov	r12, r25
    a760:	99 e0       	ldi	r25, 0x09	; 9
    a762:	d9 2e       	mov	r13, r25
    a764:	23 e9       	ldi	r18, 0x93	; 147
    a766:	e2 2e       	mov	r14, r18
    a768:	2a e0       	ldi	r18, 0x0A	; 10
    a76a:	f2 2e       	mov	r15, r18
    a76c:	05 ee       	ldi	r16, 0xE5	; 229
    a76e:	19 e0       	ldi	r17, 0x09	; 9
    a770:	a1 2c       	mov	r10, r1
    a772:	b1 2c       	mov	r11, r1
                waterscrolls[i] = waterscrolls[i+1];
              }
              
            }
            else{
                waterxs[i] = 40;
    a774:	38 e2       	ldi	r19, 0x28	; 40
    a776:	83 2e       	mov	r8, r19
    a778:	91 2c       	mov	r9, r1
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a77a:	40 91 98 08 	lds	r20, 0x0898	; 0x800898 <waterspwncnt>
    a77e:	50 91 99 08 	lds	r21, 0x0899	; 0x800899 <waterspwncnt+0x1>
    a782:	a4 16       	cp	r10, r20
    a784:	b5 06       	cpc	r11, r21
    a786:	0c f0       	brlt	.+2      	; 0xa78a <updateWater+0x4a>
    a788:	7a c0       	rjmp	.+244    	; 0xa87e <updateWater+0x13e>
    {
        int max = 0;
        int x = waterxs[i];
    a78a:	f8 01       	movw	r30, r16
    a78c:	c0 81       	ld	r28, Z
        int y = waterys[i];
    a78e:	f7 01       	movw	r30, r14
    a790:	d0 81       	ld	r29, Z
        if(waterscrolls[i] <= max)
    a792:	f6 01       	movw	r30, r12
    a794:	20 81       	ld	r18, Z
    a796:	31 81       	ldd	r19, Z+1	; 0x01
    a798:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    a79c:	12 16       	cp	r1, r18
    a79e:	13 06       	cpc	r1, r19
    a7a0:	b4 f1       	brlt	.+108    	; 0xa80e <updateWater+0xce>
        {
            if(level >= 6)
    a7a2:	86 30       	cpi	r24, 0x06	; 6
    a7a4:	38 f1       	brcs	.+78     	; 0xa7f4 <updateWater+0xb4>
            {
                waterspwncnt = waterspwncnt - 1;
    a7a6:	41 50       	subi	r20, 0x01	; 1
    a7a8:	51 09       	sbc	r21, r1
    a7aa:	50 93 99 08 	sts	0x0899, r21	; 0x800899 <waterspwncnt+0x1>
    a7ae:	40 93 98 08 	sts	0x0898, r20	; 0x800898 <waterspwncnt>
                for(int i = 0; i <= waterspwncnt - 1; i++)
    a7b2:	22 e8       	ldi	r18, 0x82	; 130
    a7b4:	39 e0       	ldi	r19, 0x09	; 9
    a7b6:	a3 e9       	ldi	r26, 0x93	; 147
    a7b8:	ba e0       	ldi	r27, 0x0A	; 10
    a7ba:	85 ee       	ldi	r24, 0xE5	; 229
    a7bc:	68 2e       	mov	r6, r24
    a7be:	89 e0       	ldi	r24, 0x09	; 9
    a7c0:	78 2e       	mov	r7, r24
    a7c2:	80 e0       	ldi	r24, 0x00	; 0
    a7c4:	90 e0       	ldi	r25, 0x00	; 0
    a7c6:	84 17       	cp	r24, r20
    a7c8:	95 07       	cpc	r25, r21
    a7ca:	1c f5       	brge	.+70     	; 0xa812 <updateWater+0xd2>
                {
                waterxs[i] = waterxs[i + 1];
    a7cc:	01 96       	adiw	r24, 0x01	; 1
    a7ce:	f3 01       	movw	r30, r6
    a7d0:	62 81       	ldd	r22, Z+2	; 0x02
    a7d2:	73 81       	ldd	r23, Z+3	; 0x03
    a7d4:	61 93       	st	Z+, r22
    a7d6:	71 93       	st	Z+, r23
    a7d8:	3f 01       	movw	r6, r30
                waterys[i] = waterys[i + 1];
    a7da:	12 96       	adiw	r26, 0x02	; 2
    a7dc:	6d 91       	ld	r22, X+
    a7de:	7c 91       	ld	r23, X
    a7e0:	13 97       	sbiw	r26, 0x03	; 3
    a7e2:	6d 93       	st	X+, r22
    a7e4:	7d 93       	st	X+, r23
                waterscrolls[i] = waterscrolls[i+1];
    a7e6:	f9 01       	movw	r30, r18
    a7e8:	62 81       	ldd	r22, Z+2	; 0x02
    a7ea:	73 81       	ldd	r23, Z+3	; 0x03
    a7ec:	61 93       	st	Z+, r22
    a7ee:	71 93       	st	Z+, r23
    a7f0:	9f 01       	movw	r18, r30
    a7f2:	e9 cf       	rjmp	.-46     	; 0xa7c6 <updateWater+0x86>
              }
              
            }
            else{
                waterxs[i] = 40;
    a7f4:	f8 01       	movw	r30, r16
    a7f6:	91 82       	std	Z+1, r9	; 0x01
    a7f8:	80 82       	st	Z, r8
                waterys[i] = 40;
    a7fa:	f7 01       	movw	r30, r14
    a7fc:	91 82       	std	Z+1, r9	; 0x01
    a7fe:	80 82       	st	Z, r8
                waterscrolls[i] = 40;
    a800:	f6 01       	movw	r30, r12
    a802:	91 82       	std	Z+1, r9	; 0x01
    a804:	80 82       	st	Z, r8
                waterspwncnt = 0;
    a806:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    a80a:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
            }
        }
if(level >= 6)
    a80e:	86 30       	cpi	r24, 0x06	; 6
    a810:	50 f0       	brcs	.+20     	; 0xa826 <updateWater+0xe6>
{
    if (aniframe <= 10)
    a812:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a816:	8b 30       	cpi	r24, 0x0B	; 11
    a818:	18 f4       	brcc	.+6      	; 0xa820 <updateWater+0xe0>
    {
        DrawMap2(x ,y,fire1);
    a81a:	4a e8       	ldi	r20, 0x8A	; 138
    a81c:	5b e7       	ldi	r21, 0x7B	; 123
    a81e:	1f c0       	rjmp	.+62     	; 0xa85e <updateWater+0x11e>
    } 
    else  
    {
        DrawMap2(x ,y,fire2);
    a820:	44 e8       	ldi	r20, 0x84	; 132
    a822:	5b e7       	ldi	r21, 0x7B	; 123
    a824:	1c c0       	rjmp	.+56     	; 0xa85e <updateWater+0x11e>
    } 
}
else{
    if (aniframe <= 7)
    a826:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a82a:	88 30       	cpi	r24, 0x08	; 8
    a82c:	30 f4       	brcc	.+12     	; 0xa83a <updateWater+0xfa>
    {
        DrawMap2(x ,y,water3);
    a82e:	4b e1       	ldi	r20, 0x1B	; 27
    a830:	5b e7       	ldi	r21, 0x7B	; 123
    a832:	6d 2f       	mov	r22, r29
    a834:	8c 2f       	mov	r24, r28
    a836:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    } 
            if (aniframe > 7 && aniframe <= 14 )   
    a83a:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a83e:	88 50       	subi	r24, 0x08	; 8
    a840:	87 30       	cpi	r24, 0x07	; 7
    a842:	30 f4       	brcc	.+12     	; 0xa850 <updateWater+0x110>
    {
        DrawMap2(x ,y,water1);
    a844:	47 e2       	ldi	r20, 0x27	; 39
    a846:	5b e7       	ldi	r21, 0x7B	; 123
    a848:	6d 2f       	mov	r22, r29
    a84a:	8c 2f       	mov	r24, r28
    a84c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    } 
    if (aniframe > 14 && aniframe <= 20)
    a850:	80 91 90 0a 	lds	r24, 0x0A90	; 0x800a90 <aniframe>
    a854:	8f 50       	subi	r24, 0x0F	; 15
    a856:	86 30       	cpi	r24, 0x06	; 6
    a858:	30 f4       	brcc	.+12     	; 0xa866 <updateWater+0x126>
    {
        DrawMap2(x ,y,water2);
    a85a:	41 e2       	ldi	r20, 0x21	; 33
    a85c:	5b e7       	ldi	r21, 0x7B	; 123
    a85e:	6d 2f       	mov	r22, r29
    a860:	8c 2f       	mov	r24, r28
    a862:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
	//waterys[0] = y;

    waterspwncnt = waterspwncnt + 1;
}
void updateWater(){
    for(int i = 0; i <= waterspwncnt - 1; i++)
    a866:	ff ef       	ldi	r31, 0xFF	; 255
    a868:	af 1a       	sub	r10, r31
    a86a:	bf 0a       	sbc	r11, r31
    a86c:	0e 5f       	subi	r16, 0xFE	; 254
    a86e:	1f 4f       	sbci	r17, 0xFF	; 255
    a870:	82 e0       	ldi	r24, 0x02	; 2
    a872:	e8 0e       	add	r14, r24
    a874:	f1 1c       	adc	r15, r1
    a876:	e2 e0       	ldi	r30, 0x02	; 2
    a878:	ce 0e       	add	r12, r30
    a87a:	d1 1c       	adc	r13, r1
    a87c:	7e cf       	rjmp	.-260    	; 0xa77a <updateWater+0x3a>
//if (aniframe > 15 && aniframe <= 20){
 //   DrawMap2(x ,y,water3);
//}
    }
    
}
    a87e:	df 91       	pop	r29
    a880:	cf 91       	pop	r28
    a882:	1f 91       	pop	r17
    a884:	0f 91       	pop	r16
    a886:	ff 90       	pop	r15
    a888:	ef 90       	pop	r14
    a88a:	df 90       	pop	r13
    a88c:	cf 90       	pop	r12
    a88e:	bf 90       	pop	r11
    a890:	af 90       	pop	r10
    a892:	9f 90       	pop	r9
    a894:	8f 90       	pop	r8
    a896:	7f 90       	pop	r7
    a898:	6f 90       	pop	r6
    a89a:	08 95       	ret

0000a89c <makeBanana2>:
    destX=0;
}
}

void makeBanana2(int x, int y,int z)
{
    a89c:	ef 92       	push	r14
    a89e:	ff 92       	push	r15
    a8a0:	0f 93       	push	r16
    a8a2:	1f 93       	push	r17
    a8a4:	cf 93       	push	r28
    a8a6:	df 93       	push	r29
    a8a8:	7a 01       	movw	r14, r20
	int lx;
	int ly;
	lx = x + Levelx;
    a8aa:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    a8ae:	82 0f       	add	r24, r18
    a8b0:	91 1d       	adc	r25, r1
	ly = y;
	lx = lx >> 4;
	ly = ly >> 4;  
    a8b2:	8b 01       	movw	r16, r22
    a8b4:	64 e0       	ldi	r22, 0x04	; 4
    a8b6:	15 95       	asr	r17
    a8b8:	07 95       	ror	r16
    a8ba:	6a 95       	dec	r22
    a8bc:	e1 f7       	brne	.-8      	; 0xa8b6 <makeBanana2+0x1a>
	lx = lx * 2 + destX;
    a8be:	ec 01       	movw	r28, r24
    a8c0:	74 e0       	ldi	r23, 0x04	; 4
    a8c2:	d5 95       	asr	r29
    a8c4:	c7 95       	ror	r28
    a8c6:	7a 95       	dec	r23
    a8c8:	e1 f7       	brne	.-8      	; 0xa8c2 <makeBanana2+0x26>
    a8ca:	cc 0f       	add	r28, r28
    a8cc:	dd 1f       	adc	r29, r29
    a8ce:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    a8d2:	c8 0f       	add	r28, r24
    a8d4:	d1 1d       	adc	r29, r1
	if (lx >= 32 ) lx = lx - 32;
    a8d6:	c0 32       	cpi	r28, 0x20	; 32
    a8d8:	d1 05       	cpc	r29, r1
    a8da:	0c f0       	brlt	.+2      	; 0xa8de <makeBanana2+0x42>
    a8dc:	a0 97       	sbiw	r28, 0x20	; 32
    lx = lx - 2;
    a8de:	22 97       	sbiw	r28, 0x02	; 2
    ly = (ly * 2) - 2;
    a8e0:	01 50       	subi	r16, 0x01	; 1
    a8e2:	11 09       	sbc	r17, r1
    a8e4:	00 0f       	add	r16, r16
    a8e6:	11 1f       	adc	r17, r17
    if(level >= 7)
    a8e8:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    a8ec:	87 30       	cpi	r24, 0x07	; 7
    a8ee:	18 f0       	brcs	.+6      	; 0xa8f6 <makeBanana2+0x5a>
    {
	DrawMap2(  lx ,  ly  ,banana2 );
    a8f0:	4d e2       	ldi	r20, 0x2D	; 45
    a8f2:	5b e7       	ldi	r21, 0x7B	; 123
    a8f4:	02 c0       	rjmp	.+4      	; 0xa8fa <makeBanana2+0x5e>
    }
    else{
    DrawMap2(  lx ,  ly  ,banana );   
    a8f6:	43 e9       	ldi	r20, 0x93	; 147
    a8f8:	5b e7       	ldi	r21, 0x7B	; 123
    a8fa:	60 2f       	mov	r22, r16
    a8fc:	8c 2f       	mov	r24, r28
    a8fe:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    }
    bananax = lx;
    a902:	d0 93 3c 0a 	sts	0x0A3C, r29	; 0x800a3c <bananax+0x1>
    a906:	c0 93 3b 0a 	sts	0x0A3B, r28	; 0x800a3b <bananax>
	bananay = ly;
    a90a:	10 93 b6 09 	sts	0x09B6, r17	; 0x8009b6 <bananay+0x1>
    a90e:	00 93 b5 09 	sts	0x09B5, r16	; 0x8009b5 <bananay>
    //UZEMHEX='\n';
	bananaxs[banspwncnt] = bananax;
    a912:	20 91 9a 08 	lds	r18, 0x089A	; 0x80089a <banspwncnt>
    a916:	30 91 9b 08 	lds	r19, 0x089B	; 0x80089b <banspwncnt+0x1>
    a91a:	c9 01       	movw	r24, r18
    a91c:	88 0f       	add	r24, r24
    a91e:	99 1f       	adc	r25, r25
    a920:	fc 01       	movw	r30, r24
    a922:	e7 54       	subi	r30, 0x47	; 71
    a924:	f6 4f       	sbci	r31, 0xF6	; 246
    a926:	d1 83       	std	Z+1, r29	; 0x01
    a928:	c0 83       	st	Z, r28
	bananays[banspwncnt] = bananay;
    a92a:	fc 01       	movw	r30, r24
    a92c:	ef 52       	subi	r30, 0x2F	; 47
    a92e:	f6 4f       	sbci	r31, 0xF6	; 246
    a930:	11 83       	std	Z+1, r17	; 0x01
    a932:	00 83       	st	Z, r16
    bananascrolls[banspwncnt] = z;
    a934:	fc 01       	movw	r30, r24
    a936:	ec 58       	subi	r30, 0x8C	; 140
    a938:	f5 4f       	sbci	r31, 0xF5	; 245
    a93a:	f1 82       	std	Z+1, r15	; 0x01
    a93c:	e0 82       	st	Z, r14
    //UZEMHEX='\n';
	banspwncnt = banspwncnt + 1;
    a93e:	2f 5f       	subi	r18, 0xFF	; 255
    a940:	3f 4f       	sbci	r19, 0xFF	; 255
    a942:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    a946:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
    a94a:	df 91       	pop	r29
    a94c:	cf 91       	pop	r28
    a94e:	1f 91       	pop	r17
    a950:	0f 91       	pop	r16
    a952:	ff 90       	pop	r15
    a954:	ef 90       	pop	r14
    a956:	08 95       	ret

0000a958 <printheadline>:
else return 0;
}

void printheadline()
{
DrawMap2(0,0, score0 );  
    a958:	41 ec       	ldi	r20, 0xC1	; 193
    a95a:	5a e7       	ldi	r21, 0x7A	; 122
    a95c:	60 e0       	ldi	r22, 0x00	; 0
    a95e:	80 e0       	ldi	r24, 0x00	; 0
    a960:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
printtileint( 4 ,0,score,4);
    a964:	40 91 b7 09 	lds	r20, 0x09B7	; 0x8009b7 <score>
    a968:	50 91 b8 09 	lds	r21, 0x09B8	; 0x8009b8 <score+0x1>
    a96c:	24 e0       	ldi	r18, 0x04	; 4
    a96e:	30 e0       	ldi	r19, 0x00	; 0
    a970:	60 e0       	ldi	r22, 0x00	; 0
    a972:	70 e0       	ldi	r23, 0x00	; 0
    a974:	84 e0       	ldi	r24, 0x04	; 4
    a976:	90 e0       	ldi	r25, 0x00	; 0
    a978:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,0, live0 ); 
    a97c:	44 ea       	ldi	r20, 0xA4	; 164
    a97e:	5a e7       	ldi	r21, 0x7A	; 122
    a980:	60 e0       	ldi	r22, 0x00	; 0
    a982:	8b e0       	ldi	r24, 0x0B	; 11
    a984:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
printtileint( 14 ,0,lives,2);  
    a988:	40 91 39 0a 	lds	r20, 0x0A39	; 0x800a39 <lives>
    a98c:	50 e0       	ldi	r21, 0x00	; 0
    a98e:	22 e0       	ldi	r18, 0x02	; 2
    a990:	30 e0       	ldi	r19, 0x00	; 0
    a992:	60 e0       	ldi	r22, 0x00	; 0
    a994:	70 e0       	ldi	r23, 0x00	; 0
    a996:	8e e0       	ldi	r24, 0x0E	; 14
    a998:	90 e0       	ldi	r25, 0x00	; 0
    a99a:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
DrawMap2(16,0, level0 ); 
    a99e:	45 eb       	ldi	r20, 0xB5	; 181
    a9a0:	5a e7       	ldi	r21, 0x7A	; 122
    a9a2:	60 e0       	ldi	r22, 0x00	; 0
    a9a4:	80 e1       	ldi	r24, 0x10	; 16
    a9a6:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
printtileint( 20 ,0, level,1);  
    a9aa:	40 91 cf 09 	lds	r20, 0x09CF	; 0x8009cf <level>
    a9ae:	50 e0       	ldi	r21, 0x00	; 0
    a9b0:	21 e0       	ldi	r18, 0x01	; 1
    a9b2:	30 e0       	ldi	r19, 0x00	; 0
    a9b4:	60 e0       	ldi	r22, 0x00	; 0
    a9b6:	70 e0       	ldi	r23, 0x00	; 0
    a9b8:	84 e1       	ldi	r24, 0x14	; 20
    a9ba:	90 e0       	ldi	r25, 0x00	; 0
    a9bc:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
DrawMap2(23,0, time0 );
    a9c0:	4f e9       	ldi	r20, 0x9F	; 159
    a9c2:	5a e7       	ldi	r21, 0x7A	; 122
    a9c4:	60 e0       	ldi	r22, 0x00	; 0
    a9c6:	87 e1       	ldi	r24, 0x17	; 23
    a9c8:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    a9cc:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    a9d0:	50 e0       	ldi	r21, 0x00	; 0
    a9d2:	22 e0       	ldi	r18, 0x02	; 2
    a9d4:	30 e0       	ldi	r19, 0x00	; 0
    a9d6:	60 e0       	ldi	r22, 0x00	; 0
    a9d8:	70 e0       	ldi	r23, 0x00	; 0
    a9da:	8a e1       	ldi	r24, 0x1A	; 26
    a9dc:	90 e0       	ldi	r25, 0x00	; 0
    a9de:	0c 94 d6 51 	jmp	0xa3ac	; 0xa3ac <printtileint>

0000a9e2 <updatepoints>:
}
void updatepoints()
{
if (introplaying) return;
    a9e2:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    a9e6:	81 11       	cpse	r24, r1
    a9e8:	0c c0       	rjmp	.+24     	; 0xaa02 <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    a9ea:	40 91 b7 09 	lds	r20, 0x09B7	; 0x8009b7 <score>
    a9ee:	50 91 b8 09 	lds	r21, 0x09B8	; 0x8009b8 <score+0x1>
    a9f2:	24 e0       	ldi	r18, 0x04	; 4
    a9f4:	30 e0       	ldi	r19, 0x00	; 0
    a9f6:	60 e0       	ldi	r22, 0x00	; 0
    a9f8:	70 e0       	ldi	r23, 0x00	; 0
    a9fa:	84 e0       	ldi	r24, 0x04	; 4
    a9fc:	90 e0       	ldi	r25, 0x00	; 0
    a9fe:	0c 94 d6 51 	jmp	0xa3ac	; 0xa3ac <printtileint>
    aa02:	08 95       	ret

0000aa04 <checkBanana>:
    //if(banspwncnt == 10){
     //   banspwncnt = 0;
    //}
}
int checkBanana(int x,int y,int z)
{
    aa04:	4f 92       	push	r4
    aa06:	5f 92       	push	r5
    aa08:	6f 92       	push	r6
    aa0a:	7f 92       	push	r7
    aa0c:	8f 92       	push	r8
    aa0e:	9f 92       	push	r9
    aa10:	af 92       	push	r10
    aa12:	bf 92       	push	r11
    aa14:	cf 92       	push	r12
    aa16:	df 92       	push	r13
    aa18:	ef 92       	push	r14
    aa1a:	ff 92       	push	r15
    aa1c:	0f 93       	push	r16
    aa1e:	1f 93       	push	r17
    aa20:	cf 93       	push	r28
    aa22:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    aa24:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    aa28:	82 0f       	add	r24, r18
    aa2a:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    aa2c:	44 e0       	ldi	r20, 0x04	; 4
    aa2e:	75 95       	asr	r23
    aa30:	67 95       	ror	r22
    aa32:	4a 95       	dec	r20
    aa34:	e1 f7       	brne	.-8      	; 0xaa2e <checkBanana+0x2a>
lx = lx * 2 + destX;
    aa36:	54 e0       	ldi	r21, 0x04	; 4
    aa38:	95 95       	asr	r25
    aa3a:	87 95       	ror	r24
    aa3c:	5a 95       	dec	r21
    aa3e:	e1 f7       	brne	.-8      	; 0xaa38 <checkBanana+0x34>
    aa40:	88 0f       	add	r24, r24
    aa42:	99 1f       	adc	r25, r25
    aa44:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    aa48:	82 0f       	add	r24, r18
    aa4a:	91 1d       	adc	r25, r1
if (lx >= 32 ) lx = lx - 32;
    aa4c:	80 32       	cpi	r24, 0x20	; 32
    aa4e:	91 05       	cpc	r25, r1
    aa50:	0c f0       	brlt	.+2      	; 0xaa54 <checkBanana+0x50>
    aa52:	80 97       	sbiw	r24, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
    aa54:	61 50       	subi	r22, 0x01	; 1
    aa56:	71 09       	sbc	r23, r1
    aa58:	66 0f       	add	r22, r22
    aa5a:	77 1f       	adc	r23, r23
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
{
    if(bananascrolls[i] <= scrolltiles - 10)
    aa5c:	60 90 c3 0a 	lds	r6, 0x0AC3	; 0x800ac3 <scrolltiles>
    aa60:	71 2c       	mov	r7, r1
    aa62:	29 e0       	ldi	r18, 0x09	; 9
    aa64:	62 1a       	sub	r6, r18
    aa66:	71 08       	sbc	r7, r1
    aa68:	40 91 9a 08 	lds	r20, 0x089A	; 0x80089a <banspwncnt>
    aa6c:	50 91 9b 08 	lds	r21, 0x089B	; 0x80089b <banspwncnt+0x1>
    aa70:	31 ed       	ldi	r19, 0xD1	; 209
    aa72:	43 2e       	mov	r4, r19
    aa74:	39 e0       	ldi	r19, 0x09	; 9
    aa76:	53 2e       	mov	r5, r19
    aa78:	a9 eb       	ldi	r26, 0xB9	; 185
    aa7a:	b9 e0       	ldi	r27, 0x09	; 9
    aa7c:	24 e7       	ldi	r18, 0x74	; 116
    aa7e:	3a e0       	ldi	r19, 0x0A	; 10
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    aa80:	c0 e0       	ldi	r28, 0x00	; 0
    aa82:	d0 e0       	ldi	r29, 0x00	; 0
    aa84:	c4 17       	cp	r28, r20
    aa86:	d5 07       	cpc	r29, r21
    aa88:	0c f0       	brlt	.+2      	; 0xaa8c <checkBanana+0x88>
    aa8a:	9f c0       	rjmp	.+318    	; 0xabca <checkBanana+0x1c6>
{
    if(bananascrolls[i] <= scrolltiles - 10)
    aa8c:	f9 01       	movw	r30, r18
    aa8e:	00 81       	ld	r16, Z
    aa90:	11 81       	ldd	r17, Z+1	; 0x01
    aa92:	06 15       	cp	r16, r6
    aa94:	17 05       	cpc	r17, r7
    aa96:	6c f5       	brge	.+90     	; 0xaaf2 <checkBanana+0xee>
    {
        bananaxs[i] = 0;
    aa98:	11 96       	adiw	r26, 0x01	; 1
    aa9a:	1c 92       	st	X, r1
    aa9c:	1e 92       	st	-X, r1
        bananays[i] = 0;
    aa9e:	f2 01       	movw	r30, r4
    aaa0:	11 82       	std	Z+1, r1	; 0x01
    aaa2:	10 82       	st	Z, r1
        bananascrolls[i] = 0;
    aaa4:	f9 01       	movw	r30, r18
    aaa6:	11 82       	std	Z+1, r1	; 0x01
    aaa8:	10 82       	st	Z, r1
    aaaa:	fa 01       	movw	r30, r20
    aaac:	31 97       	sbiw	r30, 0x01	; 1
    aaae:	5f 01       	movw	r10, r30
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    aab0:	42 30       	cpi	r20, 0x02	; 2
    aab2:	51 05       	cpc	r21, r1
    aab4:	14 f4       	brge	.+4      	; 0xaaba <checkBanana+0xb6>
            bananaxs[j] = bananaxs[j + 1];
            bananays[j] = bananays[j + 1];
            bananascrolls[j] = bananascrolls[j+1];
            }
    }
    banspwncnt = banspwncnt - 1;
    aab6:	a5 01       	movw	r20, r10
    aab8:	80 c0       	rjmp	.+256    	; 0xabba <checkBanana+0x1b6>
    aaba:	69 01       	movw	r12, r18
    aabc:	72 01       	movw	r14, r4
    aabe:	8d 01       	movw	r16, r26
    aac0:	ae 01       	movw	r20, r28
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
        if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    aac2:	4a 15       	cp	r20, r10
    aac4:	5b 05       	cpc	r21, r11
    aac6:	bc f7       	brge	.-18     	; 0xaab6 <checkBanana+0xb2>
            {
            bananaxs[j] = bananaxs[j + 1];
    aac8:	4f 5f       	subi	r20, 0xFF	; 255
    aaca:	5f 4f       	sbci	r21, 0xFF	; 255
    aacc:	f8 01       	movw	r30, r16
    aace:	82 80       	ldd	r8, Z+2	; 0x02
    aad0:	93 80       	ldd	r9, Z+3	; 0x03
    aad2:	81 92       	st	Z+, r8
    aad4:	91 92       	st	Z+, r9
    aad6:	8f 01       	movw	r16, r30
            bananays[j] = bananays[j + 1];
    aad8:	f7 01       	movw	r30, r14
    aada:	82 80       	ldd	r8, Z+2	; 0x02
    aadc:	93 80       	ldd	r9, Z+3	; 0x03
    aade:	81 92       	st	Z+, r8
    aae0:	91 92       	st	Z+, r9
    aae2:	7f 01       	movw	r14, r30
            bananascrolls[j] = bananascrolls[j+1];
    aae4:	f6 01       	movw	r30, r12
    aae6:	82 80       	ldd	r8, Z+2	; 0x02
    aae8:	93 80       	ldd	r9, Z+3	; 0x03
    aaea:	81 92       	st	Z+, r8
    aaec:	91 92       	st	Z+, r9
    aaee:	6f 01       	movw	r12, r30
    aaf0:	e8 cf       	rjmp	.-48     	; 0xaac2 <checkBanana+0xbe>
            }
    }
    banspwncnt = banspwncnt - 1;
    }
	else if(bananaxs[i] == lx && bananays[i] == ly)
    aaf2:	0d 91       	ld	r16, X+
    aaf4:	1c 91       	ld	r17, X
    aaf6:	11 97       	sbiw	r26, 0x01	; 1
    aaf8:	80 17       	cp	r24, r16
    aafa:	91 07       	cpc	r25, r17
    aafc:	09 f0       	breq	.+2      	; 0xab00 <checkBanana+0xfc>
    aafe:	5d c0       	rjmp	.+186    	; 0xabba <checkBanana+0x1b6>
    ab00:	f2 01       	movw	r30, r4
    ab02:	00 81       	ld	r16, Z
    ab04:	11 81       	ldd	r17, Z+1	; 0x01
    ab06:	60 17       	cp	r22, r16
    ab08:	71 07       	cpc	r23, r17
    ab0a:	09 f0       	breq	.+2      	; 0xab0e <checkBanana+0x10a>
    ab0c:	56 c0       	rjmp	.+172    	; 0xabba <checkBanana+0x1b6>
    ab0e:	50 93 9b 08 	sts	0x089B, r21	; 0x80089b <banspwncnt+0x1>
    ab12:	40 93 9a 08 	sts	0x089A, r20	; 0x80089a <banspwncnt>
	{ 
        if(level >= 7)
    ab16:	20 91 cf 09 	lds	r18, 0x09CF	; 0x8009cf <level>
    ab1a:	27 30       	cpi	r18, 0x07	; 7
    ab1c:	18 f0       	brcs	.+6      	; 0xab24 <checkBanana+0x120>
        {
            DrawMap2(  lx    ,  ly,black);
    ab1e:	4e e7       	ldi	r20, 0x7E	; 126
    ab20:	5b e7       	ldi	r21, 0x7B	; 123
    ab22:	02 c0       	rjmp	.+4      	; 0xab28 <checkBanana+0x124>
        }
        else{
            DrawMap2(  lx    ,  ly,bigblue0 ); 
    ab24:	41 e0       	ldi	r20, 0x01	; 1
    ab26:	5c e7       	ldi	r21, 0x7C	; 124
    ab28:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        }
	    //DrawMap2(  lx    ,  ly + 1,banana2 );
        bananaxs[i] = 0;
    ab2c:	fe 01       	movw	r30, r28
    ab2e:	ee 0f       	add	r30, r30
    ab30:	ff 1f       	adc	r31, r31
    ab32:	bf 01       	movw	r22, r30
    ab34:	67 54       	subi	r22, 0x47	; 71
    ab36:	76 4f       	sbci	r23, 0xF6	; 246
    ab38:	db 01       	movw	r26, r22
    ab3a:	1d 92       	st	X+, r1
    ab3c:	1c 92       	st	X, r1
        bananays[i] = 0;
    ab3e:	cf 01       	movw	r24, r30
    ab40:	8f 52       	subi	r24, 0x2F	; 47
    ab42:	96 4f       	sbci	r25, 0xF6	; 246
    ab44:	dc 01       	movw	r26, r24
    ab46:	1d 92       	st	X+, r1
    ab48:	1c 92       	st	X, r1
        bananascrolls[i] = 0;
    ab4a:	ec 58       	subi	r30, 0x8C	; 140
    ab4c:	f5 4f       	sbci	r31, 0xF5	; 245
    ab4e:	11 82       	std	Z+1, r1	; 0x01
    ab50:	10 82       	st	Z, r1
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    ab52:	40 91 9a 08 	lds	r20, 0x089A	; 0x80089a <banspwncnt>
    ab56:	50 91 9b 08 	lds	r21, 0x089B	; 0x80089b <banspwncnt+0x1>
    ab5a:	9a 01       	movw	r18, r20
    ab5c:	21 50       	subi	r18, 0x01	; 1
    ab5e:	31 09       	sbc	r19, r1
    ab60:	42 30       	cpi	r20, 0x02	; 2
    ab62:	51 05       	cpc	r21, r1
    ab64:	94 f4       	brge	.+36     	; 0xab8a <checkBanana+0x186>
    }
   // else{
        //bananaxs[i] = 900;
        //bananays[i] = 900;
    //}
	banspwncnt = banspwncnt - 1;
    ab66:	30 93 9b 08 	sts	0x089B, r19	; 0x80089b <banspwncnt+0x1>
    ab6a:	20 93 9a 08 	sts	0x089A, r18	; 0x80089a <banspwncnt>
    score = score + 5;
    ab6e:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <score>
    ab72:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <score+0x1>
    ab76:	05 96       	adiw	r24, 0x05	; 5
    ab78:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    ab7c:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
    updatepoints();
    ab80:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <updatepoints>
	return 1;
    ab84:	81 e0       	ldi	r24, 0x01	; 1
    ab86:	90 e0       	ldi	r25, 0x00	; 0
    ab88:	26 c0       	rjmp	.+76     	; 0xabd6 <checkBanana+0x1d2>
    ab8a:	db 01       	movw	r26, r22
    {
                for(int j = i; j < banspwncnt - 1; j++)
            {
            bananaxs[j] = bananaxs[j + 1];
            bananays[j] = bananays[j + 1];
            bananascrolls[j] = bananascrolls[j+1];
    ab8c:	bf 01       	movw	r22, r30
        bananaxs[i] = 0;
        bananays[i] = 0;
        bananascrolls[i] = 0;
    if(banspwncnt > 1) // only delete if it is not the only thing in the array.
    {
                for(int j = i; j < banspwncnt - 1; j++)
    ab8e:	c2 17       	cp	r28, r18
    ab90:	d3 07       	cpc	r29, r19
    ab92:	4c f7       	brge	.-46     	; 0xab66 <checkBanana+0x162>
            {
            bananaxs[j] = bananaxs[j + 1];
    ab94:	21 96       	adiw	r28, 0x01	; 1
    ab96:	12 96       	adiw	r26, 0x02	; 2
    ab98:	4d 91       	ld	r20, X+
    ab9a:	5c 91       	ld	r21, X
    ab9c:	13 97       	sbiw	r26, 0x03	; 3
    ab9e:	4d 93       	st	X+, r20
    aba0:	5d 93       	st	X+, r21
            bananays[j] = bananays[j + 1];
    aba2:	fc 01       	movw	r30, r24
    aba4:	42 81       	ldd	r20, Z+2	; 0x02
    aba6:	53 81       	ldd	r21, Z+3	; 0x03
    aba8:	41 93       	st	Z+, r20
    abaa:	51 93       	st	Z+, r21
    abac:	cf 01       	movw	r24, r30
            bananascrolls[j] = bananascrolls[j+1];
    abae:	fb 01       	movw	r30, r22
    abb0:	42 81       	ldd	r20, Z+2	; 0x02
    abb2:	53 81       	ldd	r21, Z+3	; 0x03
    abb4:	41 93       	st	Z+, r20
    abb6:	51 93       	st	Z+, r21
    abb8:	e9 cf       	rjmp	.-46     	; 0xab8c <checkBanana+0x188>
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
ly = (ly * 2) -2;
//DrawMap2(  lx    ,  ly,block0 );

for(int i = 0; i < banspwncnt; i++)
    abba:	21 96       	adiw	r28, 0x01	; 1
    abbc:	f2 e0       	ldi	r31, 0x02	; 2
    abbe:	4f 0e       	add	r4, r31
    abc0:	51 1c       	adc	r5, r1
    abc2:	12 96       	adiw	r26, 0x02	; 2
    abc4:	2e 5f       	subi	r18, 0xFE	; 254
    abc6:	3f 4f       	sbci	r19, 0xFF	; 255
    abc8:	5d cf       	rjmp	.-326    	; 0xaa84 <checkBanana+0x80>
    abca:	50 93 9b 08 	sts	0x089B, r21	; 0x80089b <banspwncnt+0x1>
    abce:	40 93 9a 08 	sts	0x089A, r20	; 0x80089a <banspwncnt>
    updatepoints();
	return 1;
	}
}

return 0;
    abd2:	80 e0       	ldi	r24, 0x00	; 0
    abd4:	90 e0       	ldi	r25, 0x00	; 0
	
}
    abd6:	df 91       	pop	r29
    abd8:	cf 91       	pop	r28
    abda:	1f 91       	pop	r17
    abdc:	0f 91       	pop	r16
    abde:	ff 90       	pop	r15
    abe0:	ef 90       	pop	r14
    abe2:	df 90       	pop	r13
    abe4:	cf 90       	pop	r12
    abe6:	bf 90       	pop	r11
    abe8:	af 90       	pop	r10
    abea:	9f 90       	pop	r9
    abec:	8f 90       	pop	r8
    abee:	7f 90       	pop	r7
    abf0:	6f 90       	pop	r6
    abf2:	5f 90       	pop	r5
    abf4:	4f 90       	pop	r4
    abf6:	08 95       	ret

0000abf8 <checkcollide>:
int checkcollide(int x, int y,int z,int playerNum)
{
    abf8:	7f 92       	push	r7
    abfa:	8f 92       	push	r8
    abfc:	9f 92       	push	r9
    abfe:	af 92       	push	r10
    ac00:	bf 92       	push	r11
    ac02:	cf 92       	push	r12
    ac04:	df 92       	push	r13
    ac06:	ef 92       	push	r14
    ac08:	ff 92       	push	r15
    ac0a:	0f 93       	push	r16
    ac0c:	1f 93       	push	r17
    ac0e:	cf 93       	push	r28
    ac10:	df 93       	push	r29
    ac12:	7c 01       	movw	r14, r24
    ac14:	5b 01       	movw	r10, r22
    ac16:	4a 01       	movw	r8, r20
    ac18:	69 01       	movw	r12, r18
int lx;
int ly;
char bl;
lx = x + Levelx;
    ac1a:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    ac1e:	87 01       	movw	r16, r14
    ac20:	08 0f       	add	r16, r24
    ac22:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    ac24:	84 e0       	ldi	r24, 0x04	; 4
    ac26:	15 95       	asr	r17
    ac28:	07 95       	ror	r16
    ac2a:	8a 95       	dec	r24
    ac2c:	e1 f7       	brne	.-8      	; 0xac26 <checkcollide+0x2e>
ly = ly >> 4;  
    ac2e:	eb 01       	movw	r28, r22
    ac30:	94 e0       	ldi	r25, 0x04	; 4
    ac32:	d5 95       	asr	r29
    ac34:	c7 95       	ror	r28
    ac36:	9a 95       	dec	r25
    ac38:	e1 f7       	brne	.-8      	; 0xac32 <checkcollide+0x3a>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ac3a:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    ac3e:	81 11       	cpse	r24, r1
    ac40:	0f c0       	rjmp	.+30     	; 0xac60 <checkcollide+0x68>
    ac42:	9a e5       	ldi	r25, 0x5A	; 90
    ac44:	9c 9f       	mul	r25, r28
    ac46:	f0 01       	movw	r30, r0
    ac48:	9d 9f       	mul	r25, r29
    ac4a:	f0 0d       	add	r31, r0
    ac4c:	11 24       	eor	r1, r1
    ac4e:	e0 0f       	add	r30, r16
    ac50:	f1 1f       	adc	r31, r17
    ac52:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ac56:	e9 0f       	add	r30, r25
    ac58:	f1 1d       	adc	r31, r1
    ac5a:	e1 58       	subi	r30, 0x81	; 129
    ac5c:	fa 4c       	sbci	r31, 0xCA	; 202
    ac5e:	98 c0       	rjmp	.+304    	; 0xad90 <checkcollide+0x198>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ac60:	81 30       	cpi	r24, 0x01	; 1
    ac62:	79 f4       	brne	.+30     	; 0xac82 <checkcollide+0x8a>
    ac64:	9a e5       	ldi	r25, 0x5A	; 90
    ac66:	9c 9f       	mul	r25, r28
    ac68:	f0 01       	movw	r30, r0
    ac6a:	9d 9f       	mul	r25, r29
    ac6c:	f0 0d       	add	r31, r0
    ac6e:	11 24       	eor	r1, r1
    ac70:	e0 0f       	add	r30, r16
    ac72:	f1 1f       	adc	r31, r17
    ac74:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ac78:	e9 0f       	add	r30, r25
    ac7a:	f1 1d       	adc	r31, r1
    ac7c:	ed 56       	subi	r30, 0x6D	; 109
    ac7e:	ff 4c       	sbci	r31, 0xCF	; 207
    ac80:	87 c0       	rjmp	.+270    	; 0xad90 <checkcollide+0x198>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ac82:	82 30       	cpi	r24, 0x02	; 2
    ac84:	79 f4       	brne	.+30     	; 0xaca4 <checkcollide+0xac>
    ac86:	9a e5       	ldi	r25, 0x5A	; 90
    ac88:	9c 9f       	mul	r25, r28
    ac8a:	f0 01       	movw	r30, r0
    ac8c:	9d 9f       	mul	r25, r29
    ac8e:	f0 0d       	add	r31, r0
    ac90:	11 24       	eor	r1, r1
    ac92:	e0 0f       	add	r30, r16
    ac94:	f1 1f       	adc	r31, r17
    ac96:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ac9a:	e9 0f       	add	r30, r25
    ac9c:	f1 1d       	adc	r31, r1
    ac9e:	e9 55       	subi	r30, 0x59	; 89
    aca0:	f4 4d       	sbci	r31, 0xD4	; 212
    aca2:	76 c0       	rjmp	.+236    	; 0xad90 <checkcollide+0x198>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    aca4:	83 30       	cpi	r24, 0x03	; 3
    aca6:	79 f4       	brne	.+30     	; 0xacc6 <checkcollide+0xce>
    aca8:	9a e5       	ldi	r25, 0x5A	; 90
    acaa:	9c 9f       	mul	r25, r28
    acac:	f0 01       	movw	r30, r0
    acae:	9d 9f       	mul	r25, r29
    acb0:	f0 0d       	add	r31, r0
    acb2:	11 24       	eor	r1, r1
    acb4:	e0 0f       	add	r30, r16
    acb6:	f1 1f       	adc	r31, r17
    acb8:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    acbc:	e9 0f       	add	r30, r25
    acbe:	f1 1d       	adc	r31, r1
    acc0:	e5 54       	subi	r30, 0x45	; 69
    acc2:	f9 4d       	sbci	r31, 0xD9	; 217
    acc4:	65 c0       	rjmp	.+202    	; 0xad90 <checkcollide+0x198>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    acc6:	84 30       	cpi	r24, 0x04	; 4
    acc8:	79 f4       	brne	.+30     	; 0xace8 <checkcollide+0xf0>
    acca:	9a e5       	ldi	r25, 0x5A	; 90
    accc:	9c 9f       	mul	r25, r28
    acce:	f0 01       	movw	r30, r0
    acd0:	9d 9f       	mul	r25, r29
    acd2:	f0 0d       	add	r31, r0
    acd4:	11 24       	eor	r1, r1
    acd6:	e0 0f       	add	r30, r16
    acd8:	f1 1f       	adc	r31, r17
    acda:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    acde:	e9 0f       	add	r30, r25
    ace0:	f1 1d       	adc	r31, r1
    ace2:	e1 53       	subi	r30, 0x31	; 49
    ace4:	fe 4d       	sbci	r31, 0xDE	; 222
    ace6:	54 c0       	rjmp	.+168    	; 0xad90 <checkcollide+0x198>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ace8:	85 30       	cpi	r24, 0x05	; 5
    acea:	79 f4       	brne	.+30     	; 0xad0a <checkcollide+0x112>
    acec:	9a e5       	ldi	r25, 0x5A	; 90
    acee:	9c 9f       	mul	r25, r28
    acf0:	f0 01       	movw	r30, r0
    acf2:	9d 9f       	mul	r25, r29
    acf4:	f0 0d       	add	r31, r0
    acf6:	11 24       	eor	r1, r1
    acf8:	e0 0f       	add	r30, r16
    acfa:	f1 1f       	adc	r31, r17
    acfc:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad00:	e9 0f       	add	r30, r25
    ad02:	f1 1d       	adc	r31, r1
    ad04:	ed 51       	subi	r30, 0x1D	; 29
    ad06:	f3 4e       	sbci	r31, 0xE3	; 227
    ad08:	43 c0       	rjmp	.+134    	; 0xad90 <checkcollide+0x198>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ad0a:	86 30       	cpi	r24, 0x06	; 6
    ad0c:	79 f4       	brne	.+30     	; 0xad2c <checkcollide+0x134>
    ad0e:	9a e5       	ldi	r25, 0x5A	; 90
    ad10:	9c 9f       	mul	r25, r28
    ad12:	f0 01       	movw	r30, r0
    ad14:	9d 9f       	mul	r25, r29
    ad16:	f0 0d       	add	r31, r0
    ad18:	11 24       	eor	r1, r1
    ad1a:	e0 0f       	add	r30, r16
    ad1c:	f1 1f       	adc	r31, r17
    ad1e:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad22:	e9 0f       	add	r30, r25
    ad24:	f1 1d       	adc	r31, r1
    ad26:	e9 50       	subi	r30, 0x09	; 9
    ad28:	f8 4e       	sbci	r31, 0xE8	; 232
    ad2a:	32 c0       	rjmp	.+100    	; 0xad90 <checkcollide+0x198>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ad2c:	87 30       	cpi	r24, 0x07	; 7
    ad2e:	79 f4       	brne	.+30     	; 0xad4e <checkcollide+0x156>
    ad30:	9a e5       	ldi	r25, 0x5A	; 90
    ad32:	9c 9f       	mul	r25, r28
    ad34:	f0 01       	movw	r30, r0
    ad36:	9d 9f       	mul	r25, r29
    ad38:	f0 0d       	add	r31, r0
    ad3a:	11 24       	eor	r1, r1
    ad3c:	e0 0f       	add	r30, r16
    ad3e:	f1 1f       	adc	r31, r17
    ad40:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad44:	e9 0f       	add	r30, r25
    ad46:	f1 1d       	adc	r31, r1
    ad48:	e5 5f       	subi	r30, 0xF5	; 245
    ad4a:	fc 4e       	sbci	r31, 0xEC	; 236
    ad4c:	21 c0       	rjmp	.+66     	; 0xad90 <checkcollide+0x198>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ad4e:	88 30       	cpi	r24, 0x08	; 8
    ad50:	79 f4       	brne	.+30     	; 0xad70 <checkcollide+0x178>
    ad52:	9a e5       	ldi	r25, 0x5A	; 90
    ad54:	9c 9f       	mul	r25, r28
    ad56:	f0 01       	movw	r30, r0
    ad58:	9d 9f       	mul	r25, r29
    ad5a:	f0 0d       	add	r31, r0
    ad5c:	11 24       	eor	r1, r1
    ad5e:	e0 0f       	add	r30, r16
    ad60:	f1 1f       	adc	r31, r17
    ad62:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad66:	e9 0f       	add	r30, r25
    ad68:	f1 1d       	adc	r31, r1
    ad6a:	e1 5e       	subi	r30, 0xE1	; 225
    ad6c:	f1 4f       	sbci	r31, 0xF1	; 241
    ad6e:	10 c0       	rjmp	.+32     	; 0xad90 <checkcollide+0x198>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    ad70:	89 30       	cpi	r24, 0x09	; 9
    ad72:	79 f4       	brne	.+30     	; 0xad92 <checkcollide+0x19a>
    ad74:	9a e5       	ldi	r25, 0x5A	; 90
    ad76:	9c 9f       	mul	r25, r28
    ad78:	f0 01       	movw	r30, r0
    ad7a:	9d 9f       	mul	r25, r29
    ad7c:	f0 0d       	add	r31, r0
    ad7e:	11 24       	eor	r1, r1
    ad80:	e0 0f       	add	r30, r16
    ad82:	f1 1f       	adc	r31, r17
    ad84:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    ad88:	e9 0f       	add	r30, r25
    ad8a:	f1 1d       	adc	r31, r1
    ad8c:	ed 5c       	subi	r30, 0xCD	; 205
    ad8e:	f6 4f       	sbci	r31, 0xF6	; 246
    ad90:	74 90       	lpm	r7, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    ad92:	2a e1       	ldi	r18, 0x1A	; 26
    ad94:	72 16       	cp	r7, r18
    ad96:	19 f0       	breq	.+6      	; 0xad9e <checkcollide+0x1a6>
    ad98:	9c e1       	ldi	r25, 0x1C	; 28
    ad9a:	79 12       	cpse	r7, r25
    ad9c:	03 c0       	rjmp	.+6      	; 0xada4 <checkcollide+0x1ac>
    ad9e:	91 e0       	ldi	r25, 0x01	; 1
    ada0:	90 93 73 0a 	sts	0x0A73, r25	; 0x800a73 <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) {
    ada4:	93 ee       	ldi	r25, 0xE3	; 227
    ada6:	97 0d       	add	r25, r7
    ada8:	92 30       	cpi	r25, 0x02	; 2
    adaa:	c0 f5       	brcc	.+112    	; 0xae1c <checkcollide+0x224>
    adac:	23 e0       	ldi	r18, 0x03	; 3
    adae:	82 16       	cp	r8, r18
    adb0:	91 04       	cpc	r9, r1
    adb2:	09 f0       	breq	.+2      	; 0xadb6 <checkcollide+0x1be>
    adb4:	7c c0       	rjmp	.+248    	; 0xaeae <checkcollide+0x2b6>
    adb6:	80 91 d0 09 	lds	r24, 0x09D0	; 0x8009d0 <play>
    adba:	88 23       	and	r24, r24
    adbc:	09 f4       	brne	.+2      	; 0xadc0 <checkcollide+0x1c8>
    adbe:	77 c0       	rjmp	.+238    	; 0xaeae <checkcollide+0x2b6>
    adc0:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    if(playerNum == 1)
    adc4:	91 e0       	ldi	r25, 0x01	; 1
    adc6:	c9 16       	cp	r12, r25
    adc8:	d1 04       	cpc	r13, r1
    adca:	81 f4       	brne	.+32     	; 0xadec <checkcollide+0x1f4>
    {
        lives++;
    adcc:	8f 5f       	subi	r24, 0xFF	; 255
    adce:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
        player.x = 30;
    add2:	8e e1       	ldi	r24, 0x1E	; 30
    add4:	90 e0       	ldi	r25, 0x00	; 0
    add6:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    adda:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
        player.y = 10;
    adde:	8a e0       	ldi	r24, 0x0A	; 10
    ade0:	90 e0       	ldi	r25, 0x00	; 0
    ade2:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    ade6:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    adea:	61 c0       	rjmp	.+194    	; 0xaeae <checkcollide+0x2b6>
    } 
    else{
    died = true;
    adec:	91 e0       	ldi	r25, 0x01	; 1
    adee:	90 93 8d 0a 	sts	0x0A8D, r25	; 0x800a8d <died>
    lives--;    
    adf2:	81 50       	subi	r24, 0x01	; 1
    adf4:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    isplaying = false; 
    adf8:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    adfc:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0;  
    ae00:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    ae04:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    ae08:	41 e0       	ldi	r20, 0x01	; 1
    ae0a:	6f ef       	ldi	r22, 0xFF	; 255
    ae0c:	89 e0       	ldi	r24, 0x09	; 9
    ae0e:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60);  
    ae12:	8c e3       	ldi	r24, 0x3C	; 60
    ae14:	90 e0       	ldi	r25, 0x00	; 0
    ae16:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    ae1a:	49 c0       	rjmp	.+146    	; 0xaeae <checkcollide+0x2b6>
    }   
};
if (bl == 21 && level >= 7 && play == true ) { 
    ae1c:	25 e1       	ldi	r18, 0x15	; 21
    ae1e:	72 12       	cpse	r7, r18
    ae20:	0e c0       	rjmp	.+28     	; 0xae3e <checkcollide+0x246>
    ae22:	87 30       	cpi	r24, 0x07	; 7
    ae24:	08 f4       	brcc	.+2      	; 0xae28 <checkcollide+0x230>
    ae26:	d2 c2       	rjmp	.+1444   	; 0xb3cc <checkcollide+0x7d4>
    ae28:	80 91 d0 09 	lds	r24, 0x09D0	; 0x8009d0 <play>
    ae2c:	88 23       	and	r24, r24
    ae2e:	09 f4       	brne	.+2      	; 0xae32 <checkcollide+0x23a>
    ae30:	cd c2       	rjmp	.+1434   	; 0xb3cc <checkcollide+0x7d4>
    ae32:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    if(playerNum == 1)
    ae36:	ca 94       	dec	r12
    ae38:	cd 28       	or	r12, r13
    ae3a:	09 f5       	brne	.+66     	; 0xae7e <checkcollide+0x286>
    ae3c:	10 c0       	rjmp	.+32     	; 0xae5e <checkcollide+0x266>
    bonus = 0;  
    TriggerFx(9,0xff,true);
    WaitVsync(60);   
    }  
};
if (bl == 64 && level >= 7 && play == true ) { 
    ae3e:	90 e4       	ldi	r25, 0x40	; 64
    ae40:	79 12       	cpse	r7, r25
    ae42:	35 c0       	rjmp	.+106    	; 0xaeae <checkcollide+0x2b6>
    ae44:	87 30       	cpi	r24, 0x07	; 7
    ae46:	08 f4       	brcc	.+2      	; 0xae4a <checkcollide+0x252>
    ae48:	c1 c2       	rjmp	.+1410   	; 0xb3cc <checkcollide+0x7d4>
    ae4a:	80 91 d0 09 	lds	r24, 0x09D0	; 0x8009d0 <play>
    ae4e:	88 23       	and	r24, r24
    ae50:	09 f4       	brne	.+2      	; 0xae54 <checkcollide+0x25c>
    ae52:	bc c2       	rjmp	.+1400   	; 0xb3cc <checkcollide+0x7d4>
    ae54:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    if(playerNum == 1)
    ae58:	ca 94       	dec	r12
    ae5a:	cd 28       	or	r12, r13
    ae5c:	81 f4       	brne	.+32     	; 0xae7e <checkcollide+0x286>
    {
        lives++;
    ae5e:	8f 5f       	subi	r24, 0xFF	; 255
    ae60:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
        player.x = 30;
    ae64:	8e e1       	ldi	r24, 0x1E	; 30
    ae66:	90 e0       	ldi	r25, 0x00	; 0
    ae68:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    ae6c:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
        player.y = 10;
    ae70:	8a e0       	ldi	r24, 0x0A	; 10
    ae72:	90 e0       	ldi	r25, 0x00	; 0
    ae74:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    ae78:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    ae7c:	a7 c2       	rjmp	.+1358   	; 0xb3cc <checkcollide+0x7d4>
    }
    else{
    died = true;
    ae7e:	91 e0       	ldi	r25, 0x01	; 1
    ae80:	90 93 8d 0a 	sts	0x0A8D, r25	; 0x800a8d <died>
    lives--;    
    ae84:	81 50       	subi	r24, 0x01	; 1
    ae86:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    isplaying = false; 
    ae8a:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    ae8e:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0;  
    ae92:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    ae96:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    ae9a:	41 e0       	ldi	r20, 0x01	; 1
    ae9c:	6f ef       	ldi	r22, 0xFF	; 255
    ae9e:	89 e0       	ldi	r24, 0x09	; 9
    aea0:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60);   
    aea4:	8c e3       	ldi	r24, 0x3C	; 60
    aea6:	90 e0       	ldi	r25, 0x00	; 0
    aea8:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    aeac:	8f c2       	rjmp	.+1310   	; 0xb3cc <checkcollide+0x7d4>
    }  
};
    
    
if (bl == 41 && z == 1 ) { 
    aeae:	89 e2       	ldi	r24, 0x29	; 41
    aeb0:	78 12       	cpse	r7, r24
    aeb2:	95 c0       	rjmp	.+298    	; 0xafde <checkcollide+0x3e6>
    aeb4:	8a 94       	dec	r8
    aeb6:	89 28       	or	r8, r9
    aeb8:	09 f0       	breq	.+2      	; 0xaebc <checkcollide+0x2c4>
    aeba:	88 c2       	rjmp	.+1296   	; 0xb3cc <checkcollide+0x7d4>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    aebc:	2a e5       	ldi	r18, 0x5A	; 90
    aebe:	2c 9f       	mul	r18, r28
    aec0:	c0 01       	movw	r24, r0
    aec2:	2d 9f       	mul	r18, r29
    aec4:	90 0d       	add	r25, r0
    aec6:	11 24       	eor	r1, r1
    aec8:	80 0f       	add	r24, r16
    aeca:	91 1f       	adc	r25, r17
    aecc:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    aed0:	82 0f       	add	r24, r18
    aed2:	91 1d       	adc	r25, r1
    aed4:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    aed8:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    aedc:	ef e3       	ldi	r30, 0x3F	; 63
    aede:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    aee0:	e1 2c       	mov	r14, r1
    aee2:	f1 2c       	mov	r15, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    aee4:	21 91       	ld	r18, Z+
    aee6:	31 91       	ld	r19, Z+
    aee8:	82 17       	cp	r24, r18
    aeea:	93 07       	cpc	r25, r19
    aeec:	09 f4       	brne	.+2      	; 0xaef0 <checkcollide+0x2f8>
    aeee:	6e c2       	rjmp	.+1244   	; 0xb3cc <checkcollide+0x7d4>
    if (diamonds[xi] == 0 ) {
    aef0:	23 2b       	or	r18, r19
    aef2:	09 f0       	breq	.+2      	; 0xaef6 <checkcollide+0x2fe>
    aef4:	6b c0       	rjmp	.+214    	; 0xafcc <checkcollide+0x3d4>
    bonus++;
    aef6:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <bonus>
    aefa:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <bonus+0x1>
    aefe:	01 96       	adiw	r24, 0x01	; 1
    af00:	90 93 72 0a 	sts	0x0A72, r25	; 0x800a72 <bonus+0x1>
    af04:	80 93 71 0a 	sts	0x0A71, r24	; 0x800a71 <bonus>
    TriggerFx(7,0xff,true);
    af08:	41 e0       	ldi	r20, 0x01	; 1
    af0a:	6f ef       	ldi	r22, 0xFF	; 255
    af0c:	87 e0       	ldi	r24, 0x07	; 7
    af0e:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
        
    lx = lx * 2 + destX;
    af12:	00 0f       	add	r16, r16
    af14:	11 1f       	adc	r17, r17
    af16:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    af1a:	08 0f       	add	r16, r24
    af1c:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    af1e:	00 32       	cpi	r16, 0x20	; 32
    af20:	11 05       	cpc	r17, r1
    af22:	14 f0       	brlt	.+4      	; 0xaf28 <checkcollide+0x330>
    af24:	00 52       	subi	r16, 0x20	; 32
    af26:	11 09       	sbc	r17, r1
    if(level >= 7)
    af28:	20 91 cf 09 	lds	r18, 0x09CF	; 0x8009cf <level>
    af2c:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <score>
    af30:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <score+0x1>
    af34:	cc 0f       	add	r28, r28
    af36:	d1 e0       	ldi	r29, 0x01	; 1
    af38:	d0 0f       	add	r29, r16
    af3a:	27 30       	cpi	r18, 0x07	; 7
    af3c:	d8 f0       	brcs	.+54     	; 0xaf74 <checkcollide+0x37c>
    {
    score = score + 20;
    af3e:	44 96       	adiw	r24, 0x14	; 20
    af40:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    af44:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
    DrawMap2(  lx    ,  ly *  2    ,lilblack );
    af48:	45 e7       	ldi	r20, 0x75	; 117
    af4a:	5b e7       	ldi	r21, 0x7B	; 123
    af4c:	6c 2f       	mov	r22, r28
    af4e:	80 2f       	mov	r24, r16
    af50:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,lilblack );
    af54:	45 e7       	ldi	r20, 0x75	; 117
    af56:	5b e7       	ldi	r21, 0x7B	; 123
    af58:	6c 2f       	mov	r22, r28
    af5a:	8d 2f       	mov	r24, r29
    af5c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,lilblack );
    af60:	cf 5f       	subi	r28, 0xFF	; 255
    af62:	45 e7       	ldi	r20, 0x75	; 117
    af64:	5b e7       	ldi	r21, 0x7B	; 123
    af66:	6c 2f       	mov	r22, r28
    af68:	80 2f       	mov	r24, r16
    af6a:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,lilblack );  
    af6e:	45 e7       	ldi	r20, 0x75	; 117
    af70:	5b e7       	ldi	r21, 0x7B	; 123
    af72:	1a c0       	rjmp	.+52     	; 0xafa8 <checkcollide+0x3b0>
    }
    else{
    score = score + 5 ;
    af74:	05 96       	adiw	r24, 0x05	; 5
    af76:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    af7a:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
    DrawMap2(  lx    ,  ly *  2    ,nb );
    af7e:	48 ee       	ldi	r20, 0xE8	; 232
    af80:	5a e7       	ldi	r21, 0x7A	; 122
    af82:	6c 2f       	mov	r22, r28
    af84:	80 2f       	mov	r24, r16
    af86:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    af8a:	48 ee       	ldi	r20, 0xE8	; 232
    af8c:	5a e7       	ldi	r21, 0x7A	; 122
    af8e:	6c 2f       	mov	r22, r28
    af90:	8d 2f       	mov	r24, r29
    af92:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    af96:	cf 5f       	subi	r28, 0xFF	; 255
    af98:	48 ee       	ldi	r20, 0xE8	; 232
    af9a:	5a e7       	ldi	r21, 0x7A	; 122
    af9c:	6c 2f       	mov	r22, r28
    af9e:	80 2f       	mov	r24, r16
    afa0:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );  
    afa4:	48 ee       	ldi	r20, 0xE8	; 232
    afa6:	5a e7       	ldi	r21, 0x7A	; 122
    afa8:	6c 2f       	mov	r22, r28
    afaa:	8d 2f       	mov	r24, r29
    afac:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    }      
    diamonds[xi] = dp;
    afb0:	f7 01       	movw	r30, r14
    afb2:	ee 0f       	add	r30, r30
    afb4:	ff 1f       	adc	r31, r31
    afb6:	e1 5c       	subi	r30, 0xC1	; 193
    afb8:	f5 4f       	sbci	r31, 0xF5	; 245
    afba:	80 91 3d 0a 	lds	r24, 0x0A3D	; 0x800a3d <dp>
    afbe:	90 91 3e 0a 	lds	r25, 0x0A3E	; 0x800a3e <dp+0x1>
    afc2:	91 83       	std	Z+1, r25	; 0x01
    afc4:	80 83       	st	Z, r24
    updatepoints();
    afc6:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <updatepoints>
    break;
    afca:	00 c2       	rjmp	.+1024   	; 0xb3cc <checkcollide+0x7d4>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    afcc:	2f ef       	ldi	r18, 0xFF	; 255
    afce:	e2 1a       	sub	r14, r18
    afd0:	f2 0a       	sbc	r15, r18
    afd2:	29 e1       	ldi	r18, 0x19	; 25
    afd4:	e2 16       	cp	r14, r18
    afd6:	f1 04       	cpc	r15, r1
    afd8:	09 f0       	breq	.+2      	; 0xafdc <checkcollide+0x3e4>
    afda:	84 cf       	rjmp	.-248    	; 0xaee4 <checkcollide+0x2ec>
    afdc:	f7 c1       	rjmp	.+1006   	; 0xb3cc <checkcollide+0x7d4>
    updatepoints();
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    afde:	23 e0       	ldi	r18, 0x03	; 3
    afe0:	72 12       	cpse	r7, r18
    afe2:	74 c0       	rjmp	.+232    	; 0xb0cc <checkcollide+0x4d4>
    afe4:	82 e0       	ldi	r24, 0x02	; 2
    afe6:	88 16       	cp	r8, r24
    afe8:	91 04       	cpc	r9, r1
    afea:	09 f0       	breq	.+2      	; 0xafee <checkcollide+0x3f6>
    afec:	ef c1       	rjmp	.+990    	; 0xb3cc <checkcollide+0x7d4>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    afee:	2a e5       	ldi	r18, 0x5A	; 90
    aff0:	2c 9f       	mul	r18, r28
    aff2:	c0 01       	movw	r24, r0
    aff4:	2d 9f       	mul	r18, r29
    aff6:	90 0d       	add	r25, r0
    aff8:	11 24       	eor	r1, r1
    affa:	80 0f       	add	r24, r16
    affc:	91 1f       	adc	r25, r17
    affe:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    b002:	82 0f       	add	r24, r18
    b004:	91 1d       	adc	r25, r1
    b006:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    b00a:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    b00e:	ef e3       	ldi	r30, 0x3F	; 63
    b010:	fa e0       	ldi	r31, 0x0A	; 10
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b012:	e1 2c       	mov	r14, r1
    b014:	f1 2c       	mov	r15, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b016:	21 91       	ld	r18, Z+
    b018:	31 91       	ld	r19, Z+
    b01a:	82 17       	cp	r24, r18
    b01c:	93 07       	cpc	r25, r19
    b01e:	09 f4       	brne	.+2      	; 0xb022 <checkcollide+0x42a>
    b020:	d5 c1       	rjmp	.+938    	; 0xb3cc <checkcollide+0x7d4>
    if (diamonds[xi] == 0 ) {
    b022:	23 2b       	or	r18, r19
    b024:	09 f0       	breq	.+2      	; 0xb028 <checkcollide+0x430>
    b026:	49 c0       	rjmp	.+146    	; 0xb0ba <checkcollide+0x4c2>
    score = score + 5 ;
    b028:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <score>
    b02c:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <score+0x1>
    b030:	05 96       	adiw	r24, 0x05	; 5
    b032:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    b036:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
    bonus++;
    b03a:	80 91 71 0a 	lds	r24, 0x0A71	; 0x800a71 <bonus>
    b03e:	90 91 72 0a 	lds	r25, 0x0A72	; 0x800a72 <bonus+0x1>
    b042:	01 96       	adiw	r24, 0x01	; 1
    b044:	90 93 72 0a 	sts	0x0A72, r25	; 0x800a72 <bonus+0x1>
    b048:	80 93 71 0a 	sts	0x0A71, r24	; 0x800a71 <bonus>
    updatepoints();
    b04c:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <updatepoints>
    TriggerFx(7,0xff,true);
    b050:	41 e0       	ldi	r20, 0x01	; 1
    b052:	6f ef       	ldi	r22, 0xFF	; 255
    b054:	87 e0       	ldi	r24, 0x07	; 7
    b056:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    lx = lx * 2 + destX;
    b05a:	c8 01       	movw	r24, r16
    b05c:	88 0f       	add	r24, r24
    b05e:	99 1f       	adc	r25, r25
    b060:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    b064:	82 0f       	add	r24, r18
    b066:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    b068:	80 32       	cpi	r24, 0x20	; 32
    b06a:	91 05       	cpc	r25, r1
    b06c:	0c f0       	brlt	.+2      	; 0xb070 <checkcollide+0x478>
    b06e:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    if(playerNum == 1)
    b070:	21 e0       	ldi	r18, 0x01	; 1
    b072:	c2 16       	cp	r12, r18
    b074:	d1 04       	cpc	r13, r1
    b076:	31 f4       	brne	.+12     	; 0xb084 <checkcollide+0x48c>
    {
        player.bananaCount = player.bananaCount + 1;
    b078:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1c>
    b07c:	2f 5f       	subi	r18, 0xFF	; 255
    b07e:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1c>
    b082:	09 c0       	rjmp	.+18     	; 0xb096 <checkcollide+0x49e>
    }
    else if(playerNum == 2)
    b084:	22 e0       	ldi	r18, 0x02	; 2
    b086:	c2 16       	cp	r12, r18
    b088:	d1 04       	cpc	r13, r1
    b08a:	29 f4       	brne	.+10     	; 0xb096 <checkcollide+0x49e>
    {
        player2.bananaCount = player2.bananaCount + 1;
    b08c:	20 91 37 0a 	lds	r18, 0x0A37	; 0x800a37 <player2+0x1c>
    b090:	2f 5f       	subi	r18, 0xFF	; 255
    b092:	20 93 37 0a 	sts	0x0A37, r18	; 0x800a37 <player2+0x1c>
    }
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    b096:	6c 2f       	mov	r22, r28
    b098:	66 0f       	add	r22, r22
    b09a:	4b ea       	ldi	r20, 0xAB	; 171
    b09c:	5b e7       	ldi	r21, 0x7B	; 123
    b09e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    diamonds[xi] = dp;
    b0a2:	f7 01       	movw	r30, r14
    b0a4:	ee 0f       	add	r30, r30
    b0a6:	ff 1f       	adc	r31, r31
    b0a8:	e1 5c       	subi	r30, 0xC1	; 193
    b0aa:	f5 4f       	sbci	r31, 0xF5	; 245
    b0ac:	80 91 3d 0a 	lds	r24, 0x0A3D	; 0x800a3d <dp>
    b0b0:	90 91 3e 0a 	lds	r25, 0x0A3E	; 0x800a3e <dp+0x1>
    b0b4:	91 83       	std	Z+1, r25	; 0x01
    b0b6:	80 83       	st	Z, r24
    break;
    b0b8:	89 c1       	rjmp	.+786    	; 0xb3cc <checkcollide+0x7d4>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b0ba:	2f ef       	ldi	r18, 0xFF	; 255
    b0bc:	e2 1a       	sub	r14, r18
    b0be:	f2 0a       	sbc	r15, r18
    b0c0:	29 e1       	ldi	r18, 0x19	; 25
    b0c2:	e2 16       	cp	r14, r18
    b0c4:	f1 04       	cpc	r15, r1
    b0c6:	09 f0       	breq	.+2      	; 0xb0ca <checkcollide+0x4d2>
    b0c8:	a6 cf       	rjmp	.-180    	; 0xb016 <checkcollide+0x41e>
    b0ca:	80 c1       	rjmp	.+768    	; 0xb3cc <checkcollide+0x7d4>
    diamonds[xi] = dp;
    break;
    };
    };
}; 
if (bl == 9 )
    b0cc:	89 e0       	ldi	r24, 0x09	; 9
    b0ce:	78 12       	cpse	r7, r24
    b0d0:	0f c0       	rjmp	.+30     	; 0xb0f0 <checkcollide+0x4f8>
{
lx = x + Levelx;
    b0d2:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    b0d6:	e8 0e       	add	r14, r24
    b0d8:	f1 1c       	adc	r15, r1
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) {
    return 1;
    b0da:	8f e0       	ldi	r24, 0x0F	; 15
    b0dc:	e8 22       	and	r14, r24
    b0de:	ff 24       	eor	r15, r15
    b0e0:	81 e0       	ldi	r24, 0x01	; 1
    b0e2:	90 e0       	ldi	r25, 0x00	; 0
    b0e4:	29 e0       	ldi	r18, 0x09	; 9
    b0e6:	e2 16       	cp	r14, r18
    b0e8:	f1 04       	cpc	r15, r1
    b0ea:	0c f4       	brge	.+2      	; 0xb0ee <checkcollide+0x4f6>
    b0ec:	76 c1       	rjmp	.+748    	; 0xb3da <checkcollide+0x7e2>
    b0ee:	74 c1       	rjmp	.+744    	; 0xb3d8 <checkcollide+0x7e0>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    b0f0:	9a e0       	ldi	r25, 0x0A	; 10
    b0f2:	79 12       	cpse	r7, r25
    b0f4:	0f c0       	rjmp	.+30     	; 0xb114 <checkcollide+0x51c>
{
lx = x + Levelx;
    b0f6:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    b0fa:	e8 0e       	add	r14, r24
    b0fc:	f1 1c       	adc	r15, r1
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) {
    return 1;
    b0fe:	8f e0       	ldi	r24, 0x0F	; 15
    b100:	e8 22       	and	r14, r24
    b102:	ff 24       	eor	r15, r15
    b104:	81 e0       	ldi	r24, 0x01	; 1
    b106:	90 e0       	ldi	r25, 0x00	; 0
    b108:	29 e0       	ldi	r18, 0x09	; 9
    b10a:	e2 16       	cp	r14, r18
    b10c:	f1 04       	cpc	r15, r1
    b10e:	0c f0       	brlt	.+2      	; 0xb112 <checkcollide+0x51a>
    b110:	64 c1       	rjmp	.+712    	; 0xb3da <checkcollide+0x7e2>
    b112:	62 c1       	rjmp	.+708    	; 0xb3d8 <checkcollide+0x7e0>
}
 

    
    
if (bl == 39 && playerNum != 0)
    b114:	87 e2       	ldi	r24, 0x27	; 39
    b116:	78 12       	cpse	r7, r24
    b118:	59 c1       	rjmp	.+690    	; 0xb3cc <checkcollide+0x7d4>
    b11a:	cd 28       	or	r12, r13
    b11c:	09 f4       	brne	.+2      	; 0xb120 <checkcollide+0x528>
    b11e:	56 c1       	rjmp	.+684    	; 0xb3cc <checkcollide+0x7d4>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    b120:	ce 01       	movw	r24, r28
    b122:	f4 e0       	ldi	r31, 0x04	; 4
    b124:	88 0f       	add	r24, r24
    b126:	99 1f       	adc	r25, r25
    b128:	fa 95       	dec	r31
    b12a:	e1 f7       	brne	.-8      	; 0xb124 <checkcollide+0x52c>
ly = ly - lx;
        
if (ly < 5  ) 
    b12c:	a8 1a       	sub	r10, r24
    b12e:	b9 0a       	sbc	r11, r25
    b130:	95 e0       	ldi	r25, 0x05	; 5
    b132:	a9 16       	cp	r10, r25
    b134:	b1 04       	cpc	r11, r1
    b136:	0c f0       	brlt	.+2      	; 0xb13a <checkcollide+0x542>
    b138:	80 c0       	rjmp	.+256    	; 0xb23a <checkcollide+0x642>
{
lx = x + Levelx;
    b13a:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    b13e:	e8 0e       	add	r14, r24
    b140:	f1 1c       	adc	r15, r1
ly = y;
lx = lx >> 4;
    b142:	87 01       	movw	r16, r14
    b144:	e4 e0       	ldi	r30, 0x04	; 4
    b146:	15 95       	asr	r17
    b148:	07 95       	ror	r16
    b14a:	ea 95       	dec	r30
    b14c:	e1 f7       	brne	.-8      	; 0xb146 <checkcollide+0x54e>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    b14e:	2a e5       	ldi	r18, 0x5A	; 90
    b150:	2c 9f       	mul	r18, r28
    b152:	c0 01       	movw	r24, r0
    b154:	2d 9f       	mul	r18, r29
    b156:	90 0d       	add	r25, r0
    b158:	11 24       	eor	r1, r1
    b15a:	80 0f       	add	r24, r16
    b15c:	91 1f       	adc	r25, r17
    b15e:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    b162:	82 0f       	add	r24, r18
    b164:	91 1d       	adc	r25, r1
    b166:	90 93 3e 0a 	sts	0x0A3E, r25	; 0x800a3e <dp+0x1>
    b16a:	80 93 3d 0a 	sts	0x0A3D, r24	; 0x800a3d <dp>
    b16e:	e5 e2       	ldi	r30, 0x25	; 37
    b170:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b172:	c1 2c       	mov	r12, r1
    b174:	d1 2c       	mov	r13, r1
     {
     if (bridges[xi].id == dp)         
    b176:	20 81       	ld	r18, Z
    b178:	31 81       	ldd	r19, Z+1	; 0x01
    b17a:	82 17       	cp	r24, r18
    b17c:	93 07       	cpc	r25, r19
    b17e:	09 f0       	breq	.+2      	; 0xb182 <checkcollide+0x58a>
    b180:	0c c1       	rjmp	.+536    	; 0xb39a <checkcollide+0x7a2>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b182:	c8 01       	movw	r24, r16
    b184:	54 e0       	ldi	r21, 0x04	; 4
    b186:	88 0f       	add	r24, r24
    b188:	99 1f       	adc	r25, r25
    b18a:	5a 95       	dec	r21
    b18c:	e1 f7       	brne	.-8      	; 0xb186 <checkcollide+0x58e>
    b18e:	e8 1a       	sub	r14, r24
    b190:	f9 0a       	sbc	r15, r25
    b192:	90 91 cf 09 	lds	r25, 0x09CF	; 0x8009cf <level>
    b196:	20 91 3a 0a 	lds	r18, 0x0A3A	; 0x800a3a <destX>
    b19a:	cc 0c       	add	r12, r12
    b19c:	dd 1c       	adc	r13, r13
    b19e:	cc 0c       	add	r12, r12
    b1a0:	dd 1c       	adc	r13, r13
    b1a2:	00 0f       	add	r16, r16
    b1a4:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    b1a6:	f6 01       	movw	r30, r12
    b1a8:	eb 5d       	subi	r30, 0xDB	; 219
    b1aa:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b1ac:	89 e0       	ldi	r24, 0x09	; 9
    b1ae:	e8 16       	cp	r14, r24
    b1b0:	f1 04       	cpc	r15, r1
    b1b2:	0c f0       	brlt	.+2      	; 0xb1b6 <checkcollide+0x5be>
    b1b4:	78 c0       	rjmp	.+240    	; 0xb2a6 <checkcollide+0x6ae>
        {
        bridges[xi].r++;    
    b1b6:	83 81       	ldd	r24, Z+3	; 0x03
    b1b8:	31 e0       	ldi	r19, 0x01	; 1
    b1ba:	38 0f       	add	r19, r24
    b1bc:	33 83       	std	Z+3, r19	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b1be:	02 0f       	add	r16, r18
    b1c0:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b1c2:	00 32       	cpi	r16, 0x20	; 32
    b1c4:	11 05       	cpc	r17, r1
    b1c6:	14 f0       	brlt	.+4      	; 0xb1cc <checkcollide+0x5d4>
    b1c8:	00 52       	subi	r16, 0x20	; 32
    b1ca:	11 09       	sbc	r17, r1
        if(level >= 7)
    b1cc:	97 30       	cpi	r25, 0x07	; 7
    b1ce:	c0 f1       	brcs	.+112    	; 0xb240 <checkcollide+0x648>
        {
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge1 );
    b1d0:	88 30       	cpi	r24, 0x08	; 8
    b1d2:	38 f4       	brcc	.+14     	; 0xb1e2 <checkcollide+0x5ea>
    b1d4:	49 e0       	ldi	r20, 0x09	; 9
    b1d6:	5b e7       	ldi	r21, 0x7B	; 123
    b1d8:	6c 2f       	mov	r22, r28
    b1da:	66 0f       	add	r22, r22
    b1dc:	80 2f       	mov	r24, r16
    b1de:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge2 ); 
    b1e2:	f6 01       	movw	r30, r12
    b1e4:	eb 5d       	subi	r30, 0xDB	; 219
    b1e6:	f6 4f       	sbci	r31, 0xF6	; 246
    b1e8:	83 81       	ldd	r24, Z+3	; 0x03
    b1ea:	89 50       	subi	r24, 0x09	; 9
    b1ec:	88 30       	cpi	r24, 0x08	; 8
    b1ee:	38 f4       	brcc	.+14     	; 0xb1fe <checkcollide+0x606>
    b1f0:	46 e0       	ldi	r20, 0x06	; 6
    b1f2:	5b e7       	ldi	r21, 0x7B	; 123
    b1f4:	6c 2f       	mov	r22, r28
    b1f6:	66 0f       	add	r22, r22
    b1f8:	80 2f       	mov	r24, r16
    b1fa:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,drkbridge3 );     
    b1fe:	f6 01       	movw	r30, r12
    b200:	eb 5d       	subi	r30, 0xDB	; 219
    b202:	f6 4f       	sbci	r31, 0xF6	; 246
    b204:	83 81       	ldd	r24, Z+3	; 0x03
    b206:	81 51       	subi	r24, 0x11	; 17
    b208:	87 30       	cpi	r24, 0x07	; 7
    b20a:	38 f4       	brcc	.+14     	; 0xb21a <checkcollide+0x622>
    b20c:	43 e0       	ldi	r20, 0x03	; 3
    b20e:	5b e7       	ldi	r21, 0x7B	; 123
    b210:	6c 2f       	mov	r22, r28
    b212:	66 0f       	add	r22, r22
    b214:	80 2f       	mov	r24, r16
    b216:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,lilblack ); return 0;};
    b21a:	f6 01       	movw	r30, r12
    b21c:	eb 5d       	subi	r30, 0xDB	; 219
    b21e:	f6 4f       	sbci	r31, 0xF6	; 246
    b220:	83 81       	ldd	r24, Z+3	; 0x03
    b222:	88 31       	cpi	r24, 0x18	; 24
    b224:	08 f4       	brcc	.+2      	; 0xb228 <checkcollide+0x630>
    b226:	c7 c0       	rjmp	.+398    	; 0xb3b6 <checkcollide+0x7be>
    b228:	88 e1       	ldi	r24, 0x18	; 24
    b22a:	83 83       	std	Z+3, r24	; 0x03
    b22c:	6c 2f       	mov	r22, r28
    b22e:	66 0f       	add	r22, r22
    b230:	45 e7       	ldi	r20, 0x75	; 117
    b232:	5b e7       	ldi	r21, 0x7B	; 123
    b234:	80 2f       	mov	r24, r16
    b236:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    b23a:	80 e0       	ldi	r24, 0x00	; 0
    b23c:	90 e0       	ldi	r25, 0x00	; 0
    b23e:	cd c0       	rjmp	.+410    	; 0xb3da <checkcollide+0x7e2>
        }
        else{
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    b240:	88 30       	cpi	r24, 0x08	; 8
    b242:	38 f4       	brcc	.+14     	; 0xb252 <checkcollide+0x65a>
    b244:	45 e1       	ldi	r20, 0x15	; 21
    b246:	5b e7       	ldi	r21, 0x7B	; 123
    b248:	6c 2f       	mov	r22, r28
    b24a:	66 0f       	add	r22, r22
    b24c:	80 2f       	mov	r24, r16
    b24e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    b252:	f6 01       	movw	r30, r12
    b254:	eb 5d       	subi	r30, 0xDB	; 219
    b256:	f6 4f       	sbci	r31, 0xF6	; 246
    b258:	83 81       	ldd	r24, Z+3	; 0x03
    b25a:	89 50       	subi	r24, 0x09	; 9
    b25c:	88 30       	cpi	r24, 0x08	; 8
    b25e:	38 f4       	brcc	.+14     	; 0xb26e <checkcollide+0x676>
    b260:	42 e1       	ldi	r20, 0x12	; 18
    b262:	5b e7       	ldi	r21, 0x7B	; 123
    b264:	6c 2f       	mov	r22, r28
    b266:	66 0f       	add	r22, r22
    b268:	80 2f       	mov	r24, r16
    b26a:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    b26e:	f6 01       	movw	r30, r12
    b270:	eb 5d       	subi	r30, 0xDB	; 219
    b272:	f6 4f       	sbci	r31, 0xF6	; 246
    b274:	83 81       	ldd	r24, Z+3	; 0x03
    b276:	81 51       	subi	r24, 0x11	; 17
    b278:	87 30       	cpi	r24, 0x07	; 7
    b27a:	38 f4       	brcc	.+14     	; 0xb28a <checkcollide+0x692>
    b27c:	4f e0       	ldi	r20, 0x0F	; 15
    b27e:	5b e7       	ldi	r21, 0x7B	; 123
    b280:	6c 2f       	mov	r22, r28
    b282:	66 0f       	add	r22, r22
    b284:	80 2f       	mov	r24, r16
    b286:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};  
    b28a:	f6 01       	movw	r30, r12
    b28c:	eb 5d       	subi	r30, 0xDB	; 219
    b28e:	f6 4f       	sbci	r31, 0xF6	; 246
    b290:	83 81       	ldd	r24, Z+3	; 0x03
    b292:	88 31       	cpi	r24, 0x18	; 24
    b294:	08 f4       	brcc	.+2      	; 0xb298 <checkcollide+0x6a0>
    b296:	8f c0       	rjmp	.+286    	; 0xb3b6 <checkcollide+0x7be>
    b298:	88 e1       	ldi	r24, 0x18	; 24
    b29a:	83 83       	std	Z+3, r24	; 0x03
    b29c:	6c 2f       	mov	r22, r28
    b29e:	66 0f       	add	r22, r22
    b2a0:	48 ee       	ldi	r20, 0xE8	; 232
    b2a2:	5a e7       	ldi	r21, 0x7A	; 122
    b2a4:	c7 cf       	rjmp	.-114    	; 0xb234 <checkcollide+0x63c>
        }
        }
        else
        {
        bridges[xi].l++;
    b2a6:	82 81       	ldd	r24, Z+2	; 0x02
    b2a8:	31 e0       	ldi	r19, 0x01	; 1
    b2aa:	38 0f       	add	r19, r24
    b2ac:	32 83       	std	Z+2, r19	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b2ae:	02 0f       	add	r16, r18
    b2b0:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b2b2:	00 32       	cpi	r16, 0x20	; 32
    b2b4:	11 05       	cpc	r17, r1
    b2b6:	14 f0       	brlt	.+4      	; 0xb2bc <checkcollide+0x6c4>
    b2b8:	00 52       	subi	r16, 0x20	; 32
    b2ba:	11 09       	sbc	r17, r1
        if(level >= 7)
    b2bc:	97 30       	cpi	r25, 0x07	; 7
    b2be:	b0 f1       	brcs	.+108    	; 0xb32c <checkcollide+0x734>
        {
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge1 );
    b2c0:	88 30       	cpi	r24, 0x08	; 8
    b2c2:	40 f4       	brcc	.+16     	; 0xb2d4 <checkcollide+0x6dc>
    b2c4:	49 e0       	ldi	r20, 0x09	; 9
    b2c6:	5b e7       	ldi	r21, 0x7B	; 123
    b2c8:	6c 2f       	mov	r22, r28
    b2ca:	66 0f       	add	r22, r22
    b2cc:	81 e0       	ldi	r24, 0x01	; 1
    b2ce:	80 0f       	add	r24, r16
    b2d0:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge2 ); 
    b2d4:	f6 01       	movw	r30, r12
    b2d6:	eb 5d       	subi	r30, 0xDB	; 219
    b2d8:	f6 4f       	sbci	r31, 0xF6	; 246
    b2da:	82 81       	ldd	r24, Z+2	; 0x02
    b2dc:	89 50       	subi	r24, 0x09	; 9
    b2de:	88 30       	cpi	r24, 0x08	; 8
    b2e0:	40 f4       	brcc	.+16     	; 0xb2f2 <checkcollide+0x6fa>
    b2e2:	46 e0       	ldi	r20, 0x06	; 6
    b2e4:	5b e7       	ldi	r21, 0x7B	; 123
    b2e6:	6c 2f       	mov	r22, r28
    b2e8:	66 0f       	add	r22, r22
    b2ea:	81 e0       	ldi	r24, 0x01	; 1
    b2ec:	80 0f       	add	r24, r16
    b2ee:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,drkbridge3 );      
    b2f2:	f6 01       	movw	r30, r12
    b2f4:	eb 5d       	subi	r30, 0xDB	; 219
    b2f6:	f6 4f       	sbci	r31, 0xF6	; 246
    b2f8:	82 81       	ldd	r24, Z+2	; 0x02
    b2fa:	81 51       	subi	r24, 0x11	; 17
    b2fc:	87 30       	cpi	r24, 0x07	; 7
    b2fe:	40 f4       	brcc	.+16     	; 0xb310 <checkcollide+0x718>
    b300:	43 e0       	ldi	r20, 0x03	; 3
    b302:	5b e7       	ldi	r21, 0x7B	; 123
    b304:	6c 2f       	mov	r22, r28
    b306:	66 0f       	add	r22, r22
    b308:	81 e0       	ldi	r24, 0x01	; 1
    b30a:	80 0f       	add	r24, r16
    b30c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,lilblack ); return 0;}; 
    b310:	f6 01       	movw	r30, r12
    b312:	eb 5d       	subi	r30, 0xDB	; 219
    b314:	f6 4f       	sbci	r31, 0xF6	; 246
    b316:	82 81       	ldd	r24, Z+2	; 0x02
    b318:	88 31       	cpi	r24, 0x18	; 24
    b31a:	08 f4       	brcc	.+2      	; 0xb31e <checkcollide+0x726>
    b31c:	4c c0       	rjmp	.+152    	; 0xb3b6 <checkcollide+0x7be>
    b31e:	88 e1       	ldi	r24, 0x18	; 24
    b320:	82 83       	std	Z+2, r24	; 0x02
    b322:	6c 2f       	mov	r22, r28
    b324:	66 0f       	add	r22, r22
    b326:	45 e7       	ldi	r20, 0x75	; 117
    b328:	5b e7       	ldi	r21, 0x7B	; 123
    b32a:	34 c0       	rjmp	.+104    	; 0xb394 <checkcollide+0x79c>
        }
        else{
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    b32c:	88 30       	cpi	r24, 0x08	; 8
    b32e:	40 f4       	brcc	.+16     	; 0xb340 <checkcollide+0x748>
    b330:	45 e1       	ldi	r20, 0x15	; 21
    b332:	5b e7       	ldi	r21, 0x7B	; 123
    b334:	6c 2f       	mov	r22, r28
    b336:	66 0f       	add	r22, r22
    b338:	81 e0       	ldi	r24, 0x01	; 1
    b33a:	80 0f       	add	r24, r16
    b33c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    b340:	f6 01       	movw	r30, r12
    b342:	eb 5d       	subi	r30, 0xDB	; 219
    b344:	f6 4f       	sbci	r31, 0xF6	; 246
    b346:	82 81       	ldd	r24, Z+2	; 0x02
    b348:	89 50       	subi	r24, 0x09	; 9
    b34a:	88 30       	cpi	r24, 0x08	; 8
    b34c:	40 f4       	brcc	.+16     	; 0xb35e <checkcollide+0x766>
    b34e:	42 e1       	ldi	r20, 0x12	; 18
    b350:	5b e7       	ldi	r21, 0x7B	; 123
    b352:	6c 2f       	mov	r22, r28
    b354:	66 0f       	add	r22, r22
    b356:	81 e0       	ldi	r24, 0x01	; 1
    b358:	80 0f       	add	r24, r16
    b35a:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    b35e:	f6 01       	movw	r30, r12
    b360:	eb 5d       	subi	r30, 0xDB	; 219
    b362:	f6 4f       	sbci	r31, 0xF6	; 246
    b364:	82 81       	ldd	r24, Z+2	; 0x02
    b366:	81 51       	subi	r24, 0x11	; 17
    b368:	87 30       	cpi	r24, 0x07	; 7
    b36a:	40 f4       	brcc	.+16     	; 0xb37c <checkcollide+0x784>
    b36c:	4f e0       	ldi	r20, 0x0F	; 15
    b36e:	5b e7       	ldi	r21, 0x7B	; 123
    b370:	6c 2f       	mov	r22, r28
    b372:	66 0f       	add	r22, r22
    b374:	81 e0       	ldi	r24, 0x01	; 1
    b376:	80 0f       	add	r24, r16
    b378:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;};  
    b37c:	f6 01       	movw	r30, r12
    b37e:	eb 5d       	subi	r30, 0xDB	; 219
    b380:	f6 4f       	sbci	r31, 0xF6	; 246
    b382:	82 81       	ldd	r24, Z+2	; 0x02
    b384:	88 31       	cpi	r24, 0x18	; 24
    b386:	b8 f0       	brcs	.+46     	; 0xb3b6 <checkcollide+0x7be>
    b388:	88 e1       	ldi	r24, 0x18	; 24
    b38a:	82 83       	std	Z+2, r24	; 0x02
    b38c:	6c 2f       	mov	r22, r28
    b38e:	66 0f       	add	r22, r22
    b390:	48 ee       	ldi	r20, 0xE8	; 232
    b392:	5a e7       	ldi	r21, 0x7A	; 122
    b394:	81 e0       	ldi	r24, 0x01	; 1
    b396:	80 0f       	add	r24, r16
    b398:	4e cf       	rjmp	.-356    	; 0xb236 <checkcollide+0x63e>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    b39a:	23 2b       	or	r18, r19
    b39c:	71 f4       	brne	.+28     	; 0xb3ba <checkcollide+0x7c2>
    b39e:	96 01       	movw	r18, r12
    b3a0:	22 0f       	add	r18, r18
    b3a2:	33 1f       	adc	r19, r19
    b3a4:	22 0f       	add	r18, r18
    b3a6:	33 1f       	adc	r19, r19
    b3a8:	f9 01       	movw	r30, r18
    b3aa:	eb 5d       	subi	r30, 0xDB	; 219
    b3ac:	f6 4f       	sbci	r31, 0xF6	; 246
    b3ae:	91 83       	std	Z+1, r25	; 0x01
    b3b0:	80 83       	st	Z, r24
    b3b2:	12 82       	std	Z+2, r1	; 0x02
    b3b4:	13 82       	std	Z+3, r1	; 0x03
    b3b6:	81 e0       	ldi	r24, 0x01	; 1
    b3b8:	41 cf       	rjmp	.-382    	; 0xb23c <checkcollide+0x644>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b3ba:	2f ef       	ldi	r18, 0xFF	; 255
    b3bc:	c2 1a       	sub	r12, r18
    b3be:	d2 0a       	sbc	r13, r18
    b3c0:	34 96       	adiw	r30, 0x04	; 4
    b3c2:	2c e0       	ldi	r18, 0x0C	; 12
    b3c4:	c2 16       	cp	r12, r18
    b3c6:	d1 04       	cpc	r13, r1
    b3c8:	09 f0       	breq	.+2      	; 0xb3cc <checkcollide+0x7d4>
    b3ca:	d5 ce       	rjmp	.-598    	; 0xb176 <checkcollide+0x57e>
} else return 0;  
}    

    
if (bl > 0 && bl <= 20) {
    return 1;
    b3cc:	ef ef       	ldi	r30, 0xFF	; 255
    b3ce:	e7 0d       	add	r30, r7
    b3d0:	81 e0       	ldi	r24, 0x01	; 1
    b3d2:	90 e0       	ldi	r25, 0x00	; 0
    b3d4:	e4 31       	cpi	r30, 0x14	; 20
    b3d6:	08 f0       	brcs	.+2      	; 0xb3da <checkcollide+0x7e2>
    b3d8:	80 e0       	ldi	r24, 0x00	; 0
}
else return 0;
}
    b3da:	df 91       	pop	r29
    b3dc:	cf 91       	pop	r28
    b3de:	1f 91       	pop	r17
    b3e0:	0f 91       	pop	r16
    b3e2:	ff 90       	pop	r15
    b3e4:	ef 90       	pop	r14
    b3e6:	df 90       	pop	r13
    b3e8:	cf 90       	pop	r12
    b3ea:	bf 90       	pop	r11
    b3ec:	af 90       	pop	r10
    b3ee:	9f 90       	pop	r9
    b3f0:	8f 90       	pop	r8
    b3f2:	7f 90       	pop	r7
    b3f4:	08 95       	ret

0000b3f6 <moveplayer2>:
  
}

void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
    b3f6:	81 e0       	ldi	r24, 0x01	; 1
    b3f8:	0e 94 89 43 	call	0x8712	; 0x8712 <ReadJoypad>
if(player2.stuck)
    b3fc:	20 91 25 0a 	lds	r18, 0x0A25	; 0x800a25 <player2+0xa>
    b400:	22 23       	and	r18, r18
    b402:	a1 f0       	breq	.+40     	; 0xb42c <moveplayer2+0x36>
{
player2.sCount = player2.sCount + 1;
    b404:	20 91 23 0a 	lds	r18, 0x0A23	; 0x800a23 <player2+0x8>
    b408:	30 91 24 0a 	lds	r19, 0x0A24	; 0x800a24 <player2+0x9>
    b40c:	2f 5f       	subi	r18, 0xFF	; 255
    b40e:	3f 4f       	sbci	r19, 0xFF	; 255
if(player2.sCount >= 100)
    b410:	24 36       	cpi	r18, 0x64	; 100
    b412:	31 05       	cpc	r19, r1
    b414:	2c f4       	brge	.+10     	; 0xb420 <moveplayer2+0x2a>
void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
if(player2.stuck)
{
player2.sCount = player2.sCount + 1;
    b416:	30 93 24 0a 	sts	0x0A24, r19	; 0x800a24 <player2+0x9>
    b41a:	20 93 23 0a 	sts	0x0A23, r18	; 0x800a23 <player2+0x8>
    b41e:	06 c0       	rjmp	.+12     	; 0xb42c <moveplayer2+0x36>
if(player2.sCount >= 100)
{
player2.sCount = 0;
    b420:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x9>
    b424:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x8>
player2.stuck = false;
    b428:	10 92 25 0a 	sts	0x0A25, r1	; 0x800a25 <player2+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    b42c:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <introplaying>
    b430:	22 23       	and	r18, r18
    b432:	29 f0       	breq	.+10     	; 0xb43e <moveplayer2+0x48>
    b434:	83 ff       	sbrs	r24, 3
    b436:	85 c0       	rjmp	.+266    	; 0xb542 <moveplayer2+0x14c>
    b438:	10 92 7f 09 	sts	0x097F, r1	; 0x80097f <introplaying>
    b43c:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT && player2.stuck == false) { 
    b43e:	86 ff       	sbrs	r24, 6
    b440:	13 c0       	rjmp	.+38     	; 0xb468 <moveplayer2+0x72>
    b442:	20 91 25 0a 	lds	r18, 0x0A25	; 0x800a25 <player2+0xa>
    b446:	21 11       	cpse	r18, r1
    b448:	0f c0       	rjmp	.+30     	; 0xb468 <moveplayer2+0x72>
player2.direction = 'l';
    b44a:	2c e6       	ldi	r18, 0x6C	; 108
    b44c:	20 93 29 0a 	sts	0x0A29, r18	; 0x800a29 <player2+0xe>
player2.action = 'w';
    b450:	27 e7       	ldi	r18, 0x77	; 119
    b452:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <player2+0xd>
player2.facing = 1;
    b456:	21 e0       	ldi	r18, 0x01	; 1
    b458:	30 e0       	ldi	r19, 0x00	; 0
    b45a:	30 93 27 0a 	sts	0x0A27, r19	; 0x800a27 <player2+0xc>
    b45e:	20 93 26 0a 	sts	0x0A26, r18	; 0x800a26 <player2+0xb>
player2.ximpulse = -1; 
    b462:	2f ef       	ldi	r18, 0xFF	; 255
    b464:	20 93 2d 0a 	sts	0x0A2D, r18	; 0x800a2d <player2+0x12>
};
if (joy&BTN_RIGHT && player2.stuck == false) {
    b468:	87 ff       	sbrs	r24, 7
    b46a:	11 c0       	rjmp	.+34     	; 0xb48e <moveplayer2+0x98>
    b46c:	20 91 25 0a 	lds	r18, 0x0A25	; 0x800a25 <player2+0xa>
    b470:	21 11       	cpse	r18, r1
    b472:	0d c0       	rjmp	.+26     	; 0xb48e <moveplayer2+0x98>
player2.direction = 'r';
    b474:	22 e7       	ldi	r18, 0x72	; 114
    b476:	20 93 29 0a 	sts	0x0A29, r18	; 0x800a29 <player2+0xe>
player2.action = 'w';
    b47a:	27 e7       	ldi	r18, 0x77	; 119
    b47c:	20 93 28 0a 	sts	0x0A28, r18	; 0x800a28 <player2+0xd>
player2.facing = 0;
    b480:	10 92 27 0a 	sts	0x0A27, r1	; 0x800a27 <player2+0xc>
    b484:	10 92 26 0a 	sts	0x0A26, r1	; 0x800a26 <player2+0xb>
player2.ximpulse = 1; 
    b488:	21 e0       	ldi	r18, 0x01	; 1
    b48a:	20 93 2d 0a 	sts	0x0A2D, r18	; 0x800a2d <player2+0x12>
};
if ( !(joy&BTN_A) ) {
    b48e:	ac 01       	movw	r20, r24
    b490:	44 27       	eor	r20, r20
    b492:	51 70       	andi	r21, 0x01	; 1
    b494:	90 fd       	sbrc	r25, 0
    b496:	09 c0       	rjmp	.+18     	; 0xb4aa <moveplayer2+0xb4>
player2.yimpulse = 0;
    b498:	10 92 2e 0a 	sts	0x0A2E, r1	; 0x800a2e <player2+0x13>
player2.jumpreleased = true;
    b49c:	21 e0       	ldi	r18, 0x01	; 1
    b49e:	20 93 30 0a 	sts	0x0A30, r18	; 0x800a30 <player2+0x15>
player2.jumping = false;
    b4a2:	10 92 2f 0a 	sts	0x0A2F, r1	; 0x800a2f <player2+0x14>
player2.jumpcounter = 0;
    b4a6:	10 92 35 0a 	sts	0x0A35, r1	; 0x800a35 <player2+0x1a>
};

if ( !(joy&BTN_B) ) {
    b4aa:	80 fd       	sbrc	r24, 0
    b4ac:	03 c0       	rjmp	.+6      	; 0xb4b4 <moveplayer2+0xbe>
player2.bpressed = false;
    b4ae:	10 92 31 0a 	sts	0x0A31, r1	; 0x800a31 <player2+0x16>
    b4b2:	08 c0       	rjmp	.+16     	; 0xb4c4 <moveplayer2+0xce>
};
if ( joy&BTN_B && player2.touchground) {
    b4b4:	20 91 2c 0a 	lds	r18, 0x0A2C	; 0x800a2c <player2+0x11>
    b4b8:	22 23       	and	r18, r18
    b4ba:	21 f0       	breq	.+8      	; 0xb4c4 <moveplayer2+0xce>
	if(player2.bananaCount > 0 && player2.bpressed == false)
    b4bc:	20 91 37 0a 	lds	r18, 0x0A37	; 0x800a37 <player2+0x1c>
    b4c0:	21 11       	cpse	r18, r1
    b4c2:	3d c2       	rjmp	.+1146   	; 0xb93e <moveplayer2+0x548>
	player2.bananaCount = player2.bananaCount - 1;
    player2.bananaBool = true;
	player2.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    b4c4:	81 fd       	sbrc	r24, 1
    b4c6:	03 c0       	rjmp	.+6      	; 0xb4ce <moveplayer2+0xd8>
player2.ypressed = false;
    b4c8:	10 92 32 0a 	sts	0x0A32, r1	; 0x800a32 <player2+0x17>
    b4cc:	16 c0       	rjmp	.+44     	; 0xb4fa <moveplayer2+0x104>
};
if ( joy&BTN_Y) {
	if(player2.mushroomCount > 0 && player2.ypressed == false)
    b4ce:	80 91 21 0a 	lds	r24, 0x0A21	; 0x800a21 <player2+0x6>
    b4d2:	90 91 22 0a 	lds	r25, 0x0A22	; 0x800a22 <player2+0x7>
    b4d6:	18 16       	cp	r1, r24
    b4d8:	19 06       	cpc	r1, r25
    b4da:	7c f4       	brge	.+30     	; 0xb4fa <moveplayer2+0x104>
    b4dc:	20 91 32 0a 	lds	r18, 0x0A32	; 0x800a32 <player2+0x17>
    b4e0:	21 11       	cpse	r18, r1
    b4e2:	0b c0       	rjmp	.+22     	; 0xb4fa <moveplayer2+0x104>
	{
	player2.mushroomCount = player2.mushroomCount - 1;
    b4e4:	01 97       	sbiw	r24, 0x01	; 1
    b4e6:	90 93 22 0a 	sts	0x0A22, r25	; 0x800a22 <player2+0x7>
    b4ea:	80 93 21 0a 	sts	0x0A21, r24	; 0x800a21 <player2+0x6>
	player2.ximpulse = 10;
    b4ee:	8a e0       	ldi	r24, 0x0A	; 10
    b4f0:	80 93 2d 0a 	sts	0x0A2D, r24	; 0x800a2d <player2+0x12>
	player2.ypressed = true;
    b4f4:	81 e0       	ldi	r24, 0x01	; 1
    b4f6:	80 93 32 0a 	sts	0x0A32, r24	; 0x800a32 <player2+0x17>
	};
}; 


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    b4fa:	45 2b       	or	r20, r21
    b4fc:	11 f1       	breq	.+68     	; 0xb542 <moveplayer2+0x14c>
    b4fe:	80 91 2c 0a 	lds	r24, 0x0A2C	; 0x800a2c <player2+0x11>
    b502:	88 23       	and	r24, r24
    b504:	f1 f0       	breq	.+60     	; 0xb542 <moveplayer2+0x14c>
    b506:	80 91 30 0a 	lds	r24, 0x0A30	; 0x800a30 <player2+0x15>
    b50a:	88 23       	and	r24, r24
    b50c:	d1 f0       	breq	.+52     	; 0xb542 <moveplayer2+0x14c>
    b50e:	80 91 25 0a 	lds	r24, 0x0A25	; 0x800a25 <player2+0xa>
    b512:	81 11       	cpse	r24, r1
    b514:	16 c0       	rjmp	.+44     	; 0xb542 <moveplayer2+0x14c>
player2.action = 'j';
    b516:	8a e6       	ldi	r24, 0x6A	; 106
    b518:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <player2+0xd>
player2.yimpulse = 0;
    b51c:	10 92 2e 0a 	sts	0x0A2E, r1	; 0x800a2e <player2+0x13>
player2.jumping = true;
    b520:	81 e0       	ldi	r24, 0x01	; 1
    b522:	80 93 2f 0a 	sts	0x0A2F, r24	; 0x800a2f <player2+0x14>
player2.touchground = false;
    b526:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <player2+0x11>
player2.jumpreleased = false;
    b52a:	10 92 30 0a 	sts	0x0A30, r1	; 0x800a30 <player2+0x15>
player2.jumpcounter++ ; 
    b52e:	80 91 35 0a 	lds	r24, 0x0A35	; 0x800a35 <player2+0x1a>
    b532:	8f 5f       	subi	r24, 0xFF	; 255
    b534:	80 93 35 0a 	sts	0x0A35, r24	; 0x800a35 <player2+0x1a>
TriggerFx(4,0xff,true);
    b538:	41 e0       	ldi	r20, 0x01	; 1
    b53a:	6f ef       	ldi	r22, 0xFF	; 255
    b53c:	84 e0       	ldi	r24, 0x04	; 4
    b53e:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
};
};

oldx = player2.x;
    b542:	20 91 1b 0a 	lds	r18, 0x0A1B	; 0x800a1b <player2>
    b546:	30 91 1c 0a 	lds	r19, 0x0A1C	; 0x800a1c <player2+0x1>
    b54a:	30 93 ce 09 	sts	0x09CE, r19	; 0x8009ce <oldx+0x1>
    b54e:	20 93 cd 09 	sts	0x09CD, r18	; 0x8009cd <oldx>
oldy = player2.y;
    b552:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b556:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b55a:	70 93 92 0a 	sts	0x0A92, r23	; 0x800a92 <oldy+0x1>
    b55e:	60 93 91 0a 	sts	0x0A91, r22	; 0x800a91 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    b562:	80 91 35 0a 	lds	r24, 0x0A35	; 0x800a35 <player2+0x1a>
    b566:	9f ef       	ldi	r25, 0xFF	; 255
    b568:	98 0f       	add	r25, r24
    b56a:	99 31       	cpi	r25, 0x19	; 25
    b56c:	18 f4       	brcc	.+6      	; 0xb574 <moveplayer2+0x17e>
    b56e:	9c ef       	ldi	r25, 0xFC	; 252
    b570:	90 93 2e 0a 	sts	0x0A2E, r25	; 0x800a2e <player2+0x13>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    b574:	96 ee       	ldi	r25, 0xE6	; 230
    b576:	98 0f       	add	r25, r24
    b578:	9b 30       	cpi	r25, 0x0B	; 11
    b57a:	18 f4       	brcc	.+6      	; 0xb582 <moveplayer2+0x18c>
    b57c:	9d ef       	ldi	r25, 0xFD	; 253
    b57e:	90 93 2e 0a 	sts	0x0A2E, r25	; 0x800a2e <player2+0x13>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    b582:	9b ed       	ldi	r25, 0xDB	; 219
    b584:	98 0f       	add	r25, r24
    b586:	94 30       	cpi	r25, 0x04	; 4
    b588:	18 f4       	brcc	.+6      	; 0xb590 <moveplayer2+0x19a>
    b58a:	9e ef       	ldi	r25, 0xFE	; 254
    b58c:	90 93 2e 0a 	sts	0x0A2E, r25	; 0x800a2e <player2+0x13>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    b590:	97 ed       	ldi	r25, 0xD7	; 215
    b592:	98 0f       	add	r25, r24
    b594:	96 30       	cpi	r25, 0x06	; 6
    b596:	20 f4       	brcc	.+8      	; 0xb5a0 <moveplayer2+0x1aa>
    b598:	9f ef       	ldi	r25, 0xFF	; 255
    b59a:	90 93 2e 0a 	sts	0x0A2E, r25	; 0x800a2e <player2+0x13>
    b59e:	02 c0       	rjmp	.+4      	; 0xb5a4 <moveplayer2+0x1ae>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    b5a0:	88 23       	and	r24, r24
    b5a2:	19 f0       	breq	.+6      	; 0xb5aa <moveplayer2+0x1b4>
    b5a4:	8f 5f       	subi	r24, 0xFF	; 255
    b5a6:	80 93 35 0a 	sts	0x0A35, r24	; 0x800a35 <player2+0x1a>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    b5aa:	80 91 35 0a 	lds	r24, 0x0A35	; 0x800a35 <player2+0x1a>
    b5ae:	8f 32       	cpi	r24, 0x2F	; 47
    b5b0:	10 f0       	brcs	.+4      	; 0xb5b6 <moveplayer2+0x1c0>
    b5b2:	10 92 35 0a 	sts	0x0A35, r1	; 0x800a35 <player2+0x1a>
player2.x = player2.x + player2.ximpulse;
    b5b6:	80 91 2d 0a 	lds	r24, 0x0A2D	; 0x800a2d <player2+0x12>
    b5ba:	a9 01       	movw	r20, r18
    b5bc:	48 0f       	add	r20, r24
    b5be:	51 1d       	adc	r21, r1
    b5c0:	87 fd       	sbrc	r24, 7
    b5c2:	5a 95       	dec	r21
    b5c4:	ca 01       	movw	r24, r20
    b5c6:	50 93 1c 0a 	sts	0x0A1C, r21	; 0x800a1c <player2+0x1>
    b5ca:	40 93 1b 0a 	sts	0x0A1B, r20	; 0x800a1b <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    b5ce:	40 91 2e 0a 	lds	r20, 0x0A2E	; 0x800a2e <player2+0x13>
    b5d2:	64 0f       	add	r22, r20
    b5d4:	71 1d       	adc	r23, r1
    b5d6:	47 fd       	sbrc	r20, 7
    b5d8:	7a 95       	dec	r23
    b5da:	6e 5f       	subi	r22, 0xFE	; 254
    b5dc:	7f 4f       	sbci	r23, 0xFF	; 255
    b5de:	70 93 1e 0a 	sts	0x0A1E, r23	; 0x800a1e <player2+0x3>
    b5e2:	60 93 1d 0a 	sts	0x0A1D, r22	; 0x800a1d <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    b5e6:	28 17       	cp	r18, r24
    b5e8:	39 07       	cpc	r19, r25
    b5ea:	3c f4       	brge	.+14     	; 0xb5fa <moveplayer2+0x204>
    b5ec:	20 91 36 0a 	lds	r18, 0x0A36	; 0x800a36 <player2+0x1b>
    b5f0:	2f 5f       	subi	r18, 0xFF	; 255
    b5f2:	20 93 36 0a 	sts	0x0A36, r18	; 0x800a36 <player2+0x1b>
    b5f6:	22 e7       	ldi	r18, 0x72	; 114
    b5f8:	09 c0       	rjmp	.+18     	; 0xb60c <moveplayer2+0x216>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    b5fa:	82 17       	cp	r24, r18
    b5fc:	93 07       	cpc	r25, r19
    b5fe:	4c f4       	brge	.+18     	; 0xb612 <moveplayer2+0x21c>
    b600:	20 91 36 0a 	lds	r18, 0x0A36	; 0x800a36 <player2+0x1b>
    b604:	2f 5f       	subi	r18, 0xFF	; 255
    b606:	20 93 36 0a 	sts	0x0A36, r18	; 0x800a36 <player2+0x1b>
    b60a:	2c e6       	ldi	r18, 0x6C	; 108
    b60c:	20 93 29 0a 	sts	0x0A29, r18	; 0x800a29 <player2+0xe>
    b610:	05 c0       	rjmp	.+10     	; 0xb61c <moveplayer2+0x226>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    b612:	28 17       	cp	r18, r24
    b614:	39 07       	cpc	r19, r25
    b616:	11 f4       	brne	.+4      	; 0xb61c <moveplayer2+0x226>
    b618:	10 92 36 0a 	sts	0x0A36, r1	; 0x800a36 <player2+0x1b>
if (player2.aniframe > 0 ) player2.aniframe++;
    b61c:	20 91 36 0a 	lds	r18, 0x0A36	; 0x800a36 <player2+0x1b>
    b620:	22 23       	and	r18, r18
    b622:	19 f0       	breq	.+6      	; 0xb62a <moveplayer2+0x234>
    b624:	2f 5f       	subi	r18, 0xFF	; 255
    b626:	20 93 36 0a 	sts	0x0A36, r18	; 0x800a36 <player2+0x1b>
if (player2.aniframe>24) player2.aniframe = 1;
    b62a:	20 91 36 0a 	lds	r18, 0x0A36	; 0x800a36 <player2+0x1b>
    b62e:	29 31       	cpi	r18, 0x19	; 25
    b630:	18 f0       	brcs	.+6      	; 0xb638 <moveplayer2+0x242>
    b632:	21 e0       	ldi	r18, 0x01	; 1
    b634:	20 93 36 0a 	sts	0x0A36, r18	; 0x800a36 <player2+0x1b>
if(checkBanana(player2.x + 4, player2.y ,1) == 1)
    b638:	41 e0       	ldi	r20, 0x01	; 1
    b63a:	50 e0       	ldi	r21, 0x00	; 0
    b63c:	04 96       	adiw	r24, 0x04	; 4
    b63e:	0e 94 02 55 	call	0xaa04	; 0xaa04 <checkBanana>
    b642:	01 97       	sbiw	r24, 0x01	; 1
    b644:	19 f4       	brne	.+6      	; 0xb64c <moveplayer2+0x256>
{
    player2.stuck = true;
    b646:	81 e0       	ldi	r24, 0x01	; 1
    b648:	80 93 25 0a 	sts	0x0A25, r24	; 0x800a25 <player2+0xa>
} 
if(player2.bananaBool == true)
    b64c:	80 91 33 0a 	lds	r24, 0x0A33	; 0x800a33 <player2+0x18>
    b650:	88 23       	and	r24, r24
    b652:	81 f0       	breq	.+32     	; 0xb674 <moveplayer2+0x27e>
{
makeBanana2(player2.x + 4, player2.y,scrolltiles);
    b654:	40 91 c3 0a 	lds	r20, 0x0AC3	; 0x800ac3 <scrolltiles>
    b658:	50 e0       	ldi	r21, 0x00	; 0
    b65a:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b65e:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b662:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b666:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b66a:	04 96       	adiw	r24, 0x04	; 4
    b66c:	0e 94 4e 54 	call	0xa89c	; 0xa89c <makeBanana2>
player2.bananaBool = false;
    b670:	10 92 33 0a 	sts	0x0A33, r1	; 0x800a33 <player2+0x18>
}
checkcollide( player2.x, player2.y - 4 ,1,2);
    b674:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b678:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b67c:	64 50       	subi	r22, 0x04	; 4
    b67e:	71 09       	sbc	r23, r1
    b680:	22 e0       	ldi	r18, 0x02	; 2
    b682:	30 e0       	ldi	r19, 0x00	; 0
    b684:	41 e0       	ldi	r20, 0x01	; 1
    b686:	50 e0       	ldi	r21, 0x00	; 0
    b688:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b68c:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b690:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3,2);
    b694:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b698:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b69c:	64 50       	subi	r22, 0x04	; 4
    b69e:	71 09       	sbc	r23, r1
    b6a0:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b6a4:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b6a8:	22 e0       	ldi	r18, 0x02	; 2
    b6aa:	30 e0       	ldi	r19, 0x00	; 0
    b6ac:	43 e0       	ldi	r20, 0x03	; 3
    b6ae:	50 e0       	ldi	r21, 0x00	; 0
    b6b0:	03 97       	sbiw	r24, 0x03	; 3
    b6b2:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3,2);
    b6b6:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b6ba:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b6be:	64 50       	subi	r22, 0x04	; 4
    b6c0:	71 09       	sbc	r23, r1
    b6c2:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b6c6:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b6ca:	22 e0       	ldi	r18, 0x02	; 2
    b6cc:	30 e0       	ldi	r19, 0x00	; 0
    b6ce:	43 e0       	ldi	r20, 0x03	; 3
    b6d0:	50 e0       	ldi	r21, 0x00	; 0
    b6d2:	04 96       	adiw	r24, 0x04	; 4
    b6d4:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2,2);
    b6d8:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b6dc:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b6e0:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b6e4:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b6e8:	68 17       	cp	r22, r24
    b6ea:	79 07       	cpc	r23, r25
    b6ec:	64 f4       	brge	.+24     	; 0xb706 <moveplayer2+0x310>
    b6ee:	66 51       	subi	r22, 0x16	; 22
    b6f0:	71 09       	sbc	r23, r1
    b6f2:	22 e0       	ldi	r18, 0x02	; 2
    b6f4:	30 e0       	ldi	r19, 0x00	; 0
    b6f6:	42 e0       	ldi	r20, 0x02	; 2
    b6f8:	50 e0       	ldi	r21, 0x00	; 0
    b6fa:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b6fe:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b702:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    b706:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b70a:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b70e:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b712:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b716:	86 17       	cp	r24, r22
    b718:	97 07       	cpc	r25, r23
    b71a:	ac f5       	brge	.+106    	; 0xb786 <moveplayer2+0x390>
    b71c:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <player2+0x11>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0,2 )&1 || checkcollide( player2.x + 4 , player2.y     ,0,2 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    b720:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b724:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b728:	22 e0       	ldi	r18, 0x02	; 2
    b72a:	30 e0       	ldi	r19, 0x00	; 0
    b72c:	40 e0       	ldi	r20, 0x00	; 0
    b72e:	50 e0       	ldi	r21, 0x00	; 0
    b730:	03 97       	sbiw	r24, 0x03	; 3
    b732:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b736:	80 ff       	sbrs	r24, 0
    b738:	15 c0       	rjmp	.+42     	; 0xb764 <moveplayer2+0x36e>
    b73a:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <player2+0x2>
    b73e:	90 91 1e 0a 	lds	r25, 0x0A1E	; 0x800a1e <player2+0x3>
    b742:	97 fd       	sbrc	r25, 7
    b744:	0f 96       	adiw	r24, 0x0f	; 15
    b746:	80 7f       	andi	r24, 0xF0	; 240
    b748:	01 97       	sbiw	r24, 0x01	; 1
    b74a:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <player2+0x3>
    b74e:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0x2>
    b752:	10 92 2f 0a 	sts	0x0A2F, r1	; 0x800a2f <player2+0x14>
    b756:	81 e0       	ldi	r24, 0x01	; 1
    b758:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <player2+0x11>
    b75c:	87 e7       	ldi	r24, 0x77	; 119
    b75e:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <player2+0xd>
    b762:	11 c0       	rjmp	.+34     	; 0xb786 <moveplayer2+0x390>
    b764:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b768:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b76c:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b770:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b774:	22 e0       	ldi	r18, 0x02	; 2
    b776:	30 e0       	ldi	r19, 0x00	; 0
    b778:	40 e0       	ldi	r20, 0x00	; 0
    b77a:	50 e0       	ldi	r21, 0x00	; 0
    b77c:	04 96       	adiw	r24, 0x04	; 4
    b77e:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b782:	80 fd       	sbrc	r24, 0
    b784:	da cf       	rjmp	.-76     	; 0xb73a <moveplayer2+0x344>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0,2 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0,2 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b786:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b78a:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b78e:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b792:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b796:	68 17       	cp	r22, r24
    b798:	79 07       	cpc	r23, r25
    b79a:	94 f5       	brge	.+100    	; 0xb800 <moveplayer2+0x40a>
    b79c:	65 51       	subi	r22, 0x15	; 21
    b79e:	71 09       	sbc	r23, r1
    b7a0:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b7a4:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b7a8:	22 e0       	ldi	r18, 0x02	; 2
    b7aa:	30 e0       	ldi	r19, 0x00	; 0
    b7ac:	40 e0       	ldi	r20, 0x00	; 0
    b7ae:	50 e0       	ldi	r21, 0x00	; 0
    b7b0:	03 97       	sbiw	r24, 0x03	; 3
    b7b2:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b7b6:	80 ff       	sbrs	r24, 0
    b7b8:	10 c0       	rjmp	.+32     	; 0xb7da <moveplayer2+0x3e4>
    b7ba:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    b7be:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    b7c2:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <player2+0x3>
    b7c6:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0x2>
    b7ca:	10 92 35 0a 	sts	0x0A35, r1	; 0x800a35 <player2+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    b7ce:	41 e0       	ldi	r20, 0x01	; 1
    b7d0:	6f ef       	ldi	r22, 0xFF	; 255
    b7d2:	85 e0       	ldi	r24, 0x05	; 5
    b7d4:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    b7d8:	13 c0       	rjmp	.+38     	; 0xb800 <moveplayer2+0x40a>
checkcollide( player2.x +4, player2.y - 4 ,3,2);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0,2 )&1 || checkcollide( player2.x + 4 , player2.y     ,0,2 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0,2 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0,2 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    b7da:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b7de:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b7e2:	65 51       	subi	r22, 0x15	; 21
    b7e4:	71 09       	sbc	r23, r1
    b7e6:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b7ea:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b7ee:	22 e0       	ldi	r18, 0x02	; 2
    b7f0:	30 e0       	ldi	r19, 0x00	; 0
    b7f2:	40 e0       	ldi	r20, 0x00	; 0
    b7f4:	50 e0       	ldi	r21, 0x00	; 0
    b7f6:	04 96       	adiw	r24, 0x04	; 4
    b7f8:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b7fc:	80 fd       	sbrc	r24, 0
    b7fe:	dd cf       	rjmp	.-70     	; 0xb7ba <moveplayer2+0x3c4>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0,2 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0,2 )&1)  player2.x = oldx;  
    b800:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b804:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b808:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    b80c:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    b810:	28 17       	cp	r18, r24
    b812:	39 07       	cpc	r19, r25
    b814:	5c f5       	brge	.+86     	; 0xb86c <moveplayer2+0x476>
    b816:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b81a:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b81e:	63 50       	subi	r22, 0x03	; 3
    b820:	71 09       	sbc	r23, r1
    b822:	22 e0       	ldi	r18, 0x02	; 2
    b824:	30 e0       	ldi	r19, 0x00	; 0
    b826:	40 e0       	ldi	r20, 0x00	; 0
    b828:	50 e0       	ldi	r21, 0x00	; 0
    b82a:	05 96       	adiw	r24, 0x05	; 5
    b82c:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b830:	80 ff       	sbrs	r24, 0
    b832:	09 c0       	rjmp	.+18     	; 0xb846 <moveplayer2+0x450>
    b834:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <oldx>
    b838:	90 91 ce 09 	lds	r25, 0x09CE	; 0x8009ce <oldx+0x1>
    b83c:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    b840:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
    b844:	13 c0       	rjmp	.+38     	; 0xb86c <moveplayer2+0x476>
    b846:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b84a:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b84e:	64 51       	subi	r22, 0x14	; 20
    b850:	71 09       	sbc	r23, r1
    b852:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b856:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b85a:	22 e0       	ldi	r18, 0x02	; 2
    b85c:	30 e0       	ldi	r19, 0x00	; 0
    b85e:	40 e0       	ldi	r20, 0x00	; 0
    b860:	50 e0       	ldi	r21, 0x00	; 0
    b862:	05 96       	adiw	r24, 0x05	; 5
    b864:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b868:	80 fd       	sbrc	r24, 0
    b86a:	e4 cf       	rjmp	.-56     	; 0xb834 <moveplayer2+0x43e>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0,2 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0,2 )&1)  player2.x = oldx; 
    b86c:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b870:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b874:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    b878:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    b87c:	82 17       	cp	r24, r18
    b87e:	93 07       	cpc	r25, r19
    b880:	5c f5       	brge	.+86     	; 0xb8d8 <moveplayer2+0x4e2>
    b882:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b886:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b88a:	63 50       	subi	r22, 0x03	; 3
    b88c:	71 09       	sbc	r23, r1
    b88e:	22 e0       	ldi	r18, 0x02	; 2
    b890:	30 e0       	ldi	r19, 0x00	; 0
    b892:	40 e0       	ldi	r20, 0x00	; 0
    b894:	50 e0       	ldi	r21, 0x00	; 0
    b896:	04 97       	sbiw	r24, 0x04	; 4
    b898:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b89c:	80 ff       	sbrs	r24, 0
    b89e:	09 c0       	rjmp	.+18     	; 0xb8b2 <moveplayer2+0x4bc>
    b8a0:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <oldx>
    b8a4:	90 91 ce 09 	lds	r25, 0x09CE	; 0x8009ce <oldx+0x1>
    b8a8:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    b8ac:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
    b8b0:	13 c0       	rjmp	.+38     	; 0xb8d8 <moveplayer2+0x4e2>
    b8b2:	60 91 1d 0a 	lds	r22, 0x0A1D	; 0x800a1d <player2+0x2>
    b8b6:	70 91 1e 0a 	lds	r23, 0x0A1E	; 0x800a1e <player2+0x3>
    b8ba:	64 51       	subi	r22, 0x14	; 20
    b8bc:	71 09       	sbc	r23, r1
    b8be:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b8c2:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b8c6:	22 e0       	ldi	r18, 0x02	; 2
    b8c8:	30 e0       	ldi	r19, 0x00	; 0
    b8ca:	40 e0       	ldi	r20, 0x00	; 0
    b8cc:	50 e0       	ldi	r21, 0x00	; 0
    b8ce:	04 97       	sbiw	r24, 0x04	; 4
    b8d0:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    b8d4:	80 fd       	sbrc	r24, 0
    b8d6:	e4 cf       	rjmp	.-56     	; 0xb8a0 <moveplayer2+0x4aa>
player2.ximpulse = 0;    
    b8d8:	10 92 2d 0a 	sts	0x0A2D, r1	; 0x800a2d <player2+0x12>
player2.yimpulse = 0;
    b8dc:	10 92 2e 0a 	sts	0x0A2E, r1	; 0x800a2e <player2+0x13>
if ( player2.x < 8 ) {
    b8e0:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b8e4:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b8e8:	08 97       	sbiw	r24, 0x08	; 8
    b8ea:	cc f4       	brge	.+50     	; 0xb91e <moveplayer2+0x528>
    died = true;
    b8ec:	81 e0       	ldi	r24, 0x01	; 1
    b8ee:	80 93 8d 0a 	sts	0x0A8D, r24	; 0x800a8d <died>
    lives--;    
    b8f2:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    b8f6:	81 50       	subi	r24, 0x01	; 1
    b8f8:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    isplaying = false; 
    b8fc:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    b900:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0;  
    b904:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    b908:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    b90c:	41 e0       	ldi	r20, 0x01	; 1
    b90e:	6f ef       	ldi	r22, 0xFF	; 255
    b910:	89 e0       	ldi	r24, 0x09	; 9
    b912:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60); 
    b916:	8c e3       	ldi	r24, 0x3C	; 60
    b918:	90 e0       	ldi	r25, 0x00	; 0
    b91a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
}
if ( player2.x > 232 ) player2.x = player.x;    
    b91e:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    b922:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    b926:	89 3e       	cpi	r24, 0xE9	; 233
    b928:	91 05       	cpc	r25, r1
    b92a:	b4 f0       	brlt	.+44     	; 0xb958 <moveplayer2+0x562>
    b92c:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    b930:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    b934:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    b938:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
    b93c:	08 95       	ret

if ( !(joy&BTN_B) ) {
player2.bpressed = false;
};
if ( joy&BTN_B && player2.touchground) {
	if(player2.bananaCount > 0 && player2.bpressed == false)
    b93e:	30 91 31 0a 	lds	r19, 0x0A31	; 0x800a31 <player2+0x16>
    b942:	31 11       	cpse	r19, r1
    b944:	bf cd       	rjmp	.-1154   	; 0xb4c4 <moveplayer2+0xce>
	{
	player2.bananaCount = player2.bananaCount - 1;
    b946:	21 50       	subi	r18, 0x01	; 1
    b948:	20 93 37 0a 	sts	0x0A37, r18	; 0x800a37 <player2+0x1c>
    player2.bananaBool = true;
    b94c:	21 e0       	ldi	r18, 0x01	; 1
    b94e:	20 93 33 0a 	sts	0x0A33, r18	; 0x800a33 <player2+0x18>
	player2.bpressed = true;
    b952:	20 93 31 0a 	sts	0x0A31, r18	; 0x800a31 <player2+0x16>
    b956:	b6 cd       	rjmp	.-1172   	; 0xb4c4 <moveplayer2+0xce>
    b958:	08 95       	ret

0000b95a <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b95a:	cf 93       	push	r28
    b95c:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b95e:	48 ee       	ldi	r20, 0xE8	; 232
    b960:	5a e7       	ldi	r21, 0x7A	; 122
    b962:	60 e2       	ldi	r22, 0x20	; 32
    b964:	8c 2f       	mov	r24, r28
    b966:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    b96a:	cf 5f       	subi	r28, 0xFF	; 255
    b96c:	c0 32       	cpi	r28, 0x20	; 32
    b96e:	b9 f7       	brne	.-18     	; 0xb95e <setheadline+0x4>
}
    b970:	cf 91       	pop	r28
    b972:	08 95       	ret

0000b974 <drawmonster>:

void drawmonster()
{
    b974:	0f 93       	push	r16
if (ghost.onscreen)
    b976:	80 91 5e 09 	lds	r24, 0x095E	; 0x80095e <ghost+0x9>
    b97a:	88 23       	and	r24, r24
    b97c:	09 f4       	brne	.+2      	; 0xb980 <drawmonster+0xc>
    b97e:	46 c0       	rjmp	.+140    	; 0xba0c <drawmonster+0x98>
{
if (!ghost.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , ghost.x, ghost.y  ,2 ,2);return;}; 
    b980:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <ghost+0xa>
    b984:	81 11       	cpse	r24, r1
    b986:	10 c0       	rjmp	.+32     	; 0xb9a8 <drawmonster+0x34>
    b988:	40 e0       	ldi	r20, 0x00	; 0
    b98a:	6b ec       	ldi	r22, 0xCB	; 203
    b98c:	76 e4       	ldi	r23, 0x46	; 70
    b98e:	86 e0       	ldi	r24, 0x06	; 6
    b990:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
    b994:	02 e0       	ldi	r16, 0x02	; 2
    b996:	22 e0       	ldi	r18, 0x02	; 2
    b998:	40 91 57 09 	lds	r20, 0x0957	; 0x800957 <ghost+0x2>
    b99c:	60 91 55 09 	lds	r22, 0x0955	; 0x800955 <ghost>
    b9a0:	86 e0       	ldi	r24, 0x06	; 6
    b9a2:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    b9a6:	32 c0       	rjmp	.+100    	; 0xba0c <drawmonster+0x98>
if (aniframe < 10 ) 
    b9a8:	90 91 90 0a 	lds	r25, 0x0A90	; 0x800a90 <aniframe>
    b9ac:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <player+0x19>
    b9b0:	9a 30       	cpi	r25, 0x0A	; 10
    b9b2:	90 f4       	brcc	.+36     	; 0xb9d8 <drawmonster+0x64>
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , ghost.x, ghost.y  ,2 ,2);
    b9b4:	02 e0       	ldi	r16, 0x02	; 2
    b9b6:	22 e0       	ldi	r18, 0x02	; 2
    b9b8:	40 91 57 09 	lds	r20, 0x0957	; 0x800957 <ghost+0x2>
    b9bc:	60 91 55 09 	lds	r22, 0x0955	; 0x800955 <ghost>
if (ghost.onscreen)
{
if (!ghost.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , ghost.x, ghost.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
{
    if(player.killer == true)
    b9c0:	88 23       	and	r24, r24
    b9c2:	29 f0       	breq	.+10     	; 0xb9ce <drawmonster+0x5a>
    {
    MoveSprite(owlIndex , ghost.x, ghost.y  ,2 ,2);
    b9c4:	86 e0       	ldi	r24, 0x06	; 6
    b9c6:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,0); 
    b9ca:	40 e0       	ldi	r20, 0x00	; 0
    b9cc:	12 c0       	rjmp	.+36     	; 0xb9f2 <drawmonster+0x7e>
    }
    else{
    MoveSprite(owlIndex , ghost.x, ghost.y  ,2 ,2);
    b9ce:	86 e0       	ldi	r24, 0x06	; 6
    b9d0:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    b9d4:	40 e0       	ldi	r20, 0x00	; 0
    b9d6:	14 c0       	rjmp	.+40     	; 0xba00 <drawmonster+0x8c>
    b9d8:	60 91 55 09 	lds	r22, 0x0955	; 0x800955 <ghost>
}
else
{
    if(player.killer == true)
    {
    MoveSprite(owlIndex , ghost.x -1 , ghost.y  ,2 ,2);
    b9dc:	61 50       	subi	r22, 0x01	; 1
    b9de:	02 e0       	ldi	r16, 0x02	; 2
    b9e0:	22 e0       	ldi	r18, 0x02	; 2
    b9e2:	40 91 57 09 	lds	r20, 0x0957	; 0x800957 <ghost+0x2>
    MapSprite2(owlIndex , owl0 ,0); 
    }
}
else
{
    if(player.killer == true)
    b9e6:	88 23       	and	r24, r24
    b9e8:	39 f0       	breq	.+14     	; 0xb9f8 <drawmonster+0x84>
    {
    MoveSprite(owlIndex , ghost.x -1 , ghost.y  ,2 ,2);
    b9ea:	86 e0       	ldi	r24, 0x06	; 6
    b9ec:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    MapSprite2(owlIndex , owl1 ,1);
    b9f0:	41 e0       	ldi	r20, 0x01	; 1
    b9f2:	6b ec       	ldi	r22, 0xCB	; 203
    b9f4:	76 e4       	ldi	r23, 0x46	; 70
    b9f6:	06 c0       	rjmp	.+12     	; 0xba04 <drawmonster+0x90>
    }
    else{
    MoveSprite(owlIndex , ghost.x -1 , ghost.y  ,2 ,2);
    b9f8:	86 e0       	ldi	r24, 0x06	; 6
    b9fa:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    b9fe:	41 e0       	ldi	r20, 0x01	; 1
    ba00:	61 ed       	ldi	r22, 0xD1	; 209
    ba02:	76 e4       	ldi	r23, 0x46	; 70
    ba04:	86 e0       	ldi	r24, 0x06	; 6
    }
};
}; 
   
}
    ba06:	0f 91       	pop	r16
    MoveSprite(owlIndex , ghost.x -1 , ghost.y  ,2 ,2);
    MapSprite2(owlIndex , owl1 ,1);
    }
    else{
    MoveSprite(owlIndex , ghost.x -1 , ghost.y  ,2 ,2);
    MapSprite2(owlIndex , owl0 ,1); 
    ba08:	0c 94 48 4f 	jmp	0x9e90	; 0x9e90 <MapSprite2>
    }
};
}; 
   
}
    ba0c:	0f 91       	pop	r16
    ba0e:	08 95       	ret

0000ba10 <movemonster>:

void movemonster()
{
    ba10:	0f 93       	push	r16
if (ghost.onscreen) 
    ba12:	80 91 5e 09 	lds	r24, 0x095E	; 0x80095e <ghost+0x9>
    ba16:	88 23       	and	r24, r24
    ba18:	09 f4       	brne	.+2      	; 0xba1c <movemonster+0xc>
    ba1a:	c9 c0       	rjmp	.+402    	; 0xbbae <movemonster+0x19e>
{
 
    ghost.x = ghost.x2 >> 2;
    ba1c:	80 91 59 09 	lds	r24, 0x0959	; 0x800959 <ghost+0x4>
    ba20:	90 91 5a 09 	lds	r25, 0x095A	; 0x80095a <ghost+0x5>
    oldx = ghost.x;
    ba24:	9c 01       	movw	r18, r24
    ba26:	35 95       	asr	r19
    ba28:	27 95       	ror	r18
    ba2a:	35 95       	asr	r19
    ba2c:	27 95       	ror	r18
    ba2e:	30 93 ce 09 	sts	0x09CE, r19	; 0x8009ce <oldx+0x1>
    ba32:	20 93 cd 09 	sts	0x09CD, r18	; 0x8009cd <oldx>
    oldy = ghost.y; 
    ba36:	20 91 57 09 	lds	r18, 0x0957	; 0x800957 <ghost+0x2>
    ba3a:	30 91 58 09 	lds	r19, 0x0958	; 0x800958 <ghost+0x3>
    ba3e:	30 93 92 0a 	sts	0x0A92, r19	; 0x800a92 <oldy+0x1>
    ba42:	20 93 91 0a 	sts	0x0A91, r18	; 0x800a91 <oldy>
    oldx2 = ghost.x2;
    ba46:	90 93 8b 0a 	sts	0x0A8B, r25	; 0x800a8b <oldx2+0x1>
    ba4a:	80 93 8a 0a 	sts	0x0A8A, r24	; 0x800a8a <oldx2>
    ghost.y = ghost.y  + gravity + ghost.yimpulse;
    ba4e:	b9 01       	movw	r22, r18
    ba50:	6e 5f       	subi	r22, 0xFE	; 254
    ba52:	7f 4f       	sbci	r23, 0xFF	; 255
    ba54:	40 91 5d 09 	lds	r20, 0x095D	; 0x80095d <ghost+0x8>
    ba58:	64 0f       	add	r22, r20
    ba5a:	71 1d       	adc	r23, r1
    ba5c:	47 fd       	sbrc	r20, 7
    ba5e:	7a 95       	dec	r23
    ba60:	70 93 58 09 	sts	0x0958, r23	; 0x800958 <ghost+0x3>
    ba64:	60 93 57 09 	sts	0x0957, r22	; 0x800957 <ghost+0x2>
    
    ghost.x2 = ghost.x2 + ghost.ximpulse;
    ba68:	40 91 5c 09 	lds	r20, 0x095C	; 0x80095c <ghost+0x7>
    ba6c:	84 0f       	add	r24, r20
    ba6e:	91 1d       	adc	r25, r1
    ba70:	47 fd       	sbrc	r20, 7
    ba72:	9a 95       	dec	r25
    ba74:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <ghost+0x5>
    ba78:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <ghost+0x4>
    ghost.x = ghost.x2 >> 2;
    ba7c:	95 95       	asr	r25
    ba7e:	87 95       	ror	r24
    ba80:	95 95       	asr	r25
    ba82:	87 95       	ror	r24
    ba84:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <ghost+0x1>
    ba88:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <ghost>
    if (ghost.y > oldy ) if (checkcollide( ghost.x + 3 , ghost.y + 16,     0,0 )&1 || checkcollide( ghost.x + 12 , ghost.y +16    ,0,0 )&1) { ghost.y = ( ghost.y / 16 ) * 16   ;};
    ba8c:	26 17       	cp	r18, r22
    ba8e:	37 07       	cpc	r19, r23
    ba90:	54 f5       	brge	.+84     	; 0xbae6 <movemonster+0xd6>
    ba92:	60 5f       	subi	r22, 0xF0	; 240
    ba94:	7f 4f       	sbci	r23, 0xFF	; 255
    ba96:	20 e0       	ldi	r18, 0x00	; 0
    ba98:	30 e0       	ldi	r19, 0x00	; 0
    ba9a:	40 e0       	ldi	r20, 0x00	; 0
    ba9c:	50 e0       	ldi	r21, 0x00	; 0
    ba9e:	03 96       	adiw	r24, 0x03	; 3
    baa0:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    baa4:	80 ff       	sbrs	r24, 0
    baa6:	0c c0       	rjmp	.+24     	; 0xbac0 <movemonster+0xb0>
    baa8:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <ghost+0x2>
    baac:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <ghost+0x3>
    bab0:	97 fd       	sbrc	r25, 7
    bab2:	0f 96       	adiw	r24, 0x0f	; 15
    bab4:	80 7f       	andi	r24, 0xF0	; 240
    bab6:	90 93 58 09 	sts	0x0958, r25	; 0x800958 <ghost+0x3>
    baba:	80 93 57 09 	sts	0x0957, r24	; 0x800957 <ghost+0x2>
    babe:	13 c0       	rjmp	.+38     	; 0xbae6 <movemonster+0xd6>
    bac0:	60 91 57 09 	lds	r22, 0x0957	; 0x800957 <ghost+0x2>
    bac4:	70 91 58 09 	lds	r23, 0x0958	; 0x800958 <ghost+0x3>
    bac8:	60 5f       	subi	r22, 0xF0	; 240
    baca:	7f 4f       	sbci	r23, 0xFF	; 255
    bacc:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <ghost>
    bad0:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <ghost+0x1>
    bad4:	20 e0       	ldi	r18, 0x00	; 0
    bad6:	30 e0       	ldi	r19, 0x00	; 0
    bad8:	40 e0       	ldi	r20, 0x00	; 0
    bada:	50 e0       	ldi	r21, 0x00	; 0
    badc:	0c 96       	adiw	r24, 0x0c	; 12
    bade:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    bae2:	80 fd       	sbrc	r24, 0
    bae4:	e1 cf       	rjmp	.-62     	; 0xbaa8 <movemonster+0x98>
    if (ghost.x > oldx ) if (!checkcollide( ghost.x + 17, ghost.y + 17 ,0,0 )&1 )  { ghost.x2 = oldx2; ghost.ximpulse =   -1;};
    bae6:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <ghost>
    baea:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <ghost+0x1>
    baee:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    baf2:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    baf6:	28 17       	cp	r18, r24
    baf8:	39 07       	cpc	r19, r25
    bafa:	d4 f4       	brge	.+52     	; 0xbb30 <movemonster+0x120>
    bafc:	60 91 57 09 	lds	r22, 0x0957	; 0x800957 <ghost+0x2>
    bb00:	70 91 58 09 	lds	r23, 0x0958	; 0x800958 <ghost+0x3>
    bb04:	6f 5e       	subi	r22, 0xEF	; 239
    bb06:	7f 4f       	sbci	r23, 0xFF	; 255
    bb08:	20 e0       	ldi	r18, 0x00	; 0
    bb0a:	30 e0       	ldi	r19, 0x00	; 0
    bb0c:	40 e0       	ldi	r20, 0x00	; 0
    bb0e:	50 e0       	ldi	r21, 0x00	; 0
    bb10:	41 96       	adiw	r24, 0x11	; 17
    bb12:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    bb16:	89 2b       	or	r24, r25
    bb18:	59 f4       	brne	.+22     	; 0xbb30 <movemonster+0x120>
    bb1a:	80 91 8a 0a 	lds	r24, 0x0A8A	; 0x800a8a <oldx2>
    bb1e:	90 91 8b 0a 	lds	r25, 0x0A8B	; 0x800a8b <oldx2+0x1>
    bb22:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <ghost+0x5>
    bb26:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <ghost+0x4>
    bb2a:	8f ef       	ldi	r24, 0xFF	; 255
    bb2c:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <ghost+0x7>
    if (ghost.x < oldx ) if (!checkcollide( ghost.x - 1 , ghost.y + 17,0,0 )&1 )  { ghost.x2 = oldx2; ghost.ximpulse =   +1;};
    bb30:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <ghost>
    bb34:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <ghost+0x1>
    bb38:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    bb3c:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    bb40:	82 17       	cp	r24, r18
    bb42:	93 07       	cpc	r25, r19
    bb44:	d4 f4       	brge	.+52     	; 0xbb7a <movemonster+0x16a>
    bb46:	60 91 57 09 	lds	r22, 0x0957	; 0x800957 <ghost+0x2>
    bb4a:	70 91 58 09 	lds	r23, 0x0958	; 0x800958 <ghost+0x3>
    bb4e:	6f 5e       	subi	r22, 0xEF	; 239
    bb50:	7f 4f       	sbci	r23, 0xFF	; 255
    bb52:	20 e0       	ldi	r18, 0x00	; 0
    bb54:	30 e0       	ldi	r19, 0x00	; 0
    bb56:	40 e0       	ldi	r20, 0x00	; 0
    bb58:	50 e0       	ldi	r21, 0x00	; 0
    bb5a:	01 97       	sbiw	r24, 0x01	; 1
    bb5c:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    bb60:	89 2b       	or	r24, r25
    bb62:	59 f4       	brne	.+22     	; 0xbb7a <movemonster+0x16a>
    bb64:	80 91 8a 0a 	lds	r24, 0x0A8A	; 0x800a8a <oldx2>
    bb68:	90 91 8b 0a 	lds	r25, 0x0A8B	; 0x800a8b <oldx2+0x1>
    bb6c:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <ghost+0x5>
    bb70:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <ghost+0x4>
    bb74:	81 e0       	ldi	r24, 0x01	; 1
    bb76:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <ghost+0x7>
    if (ghost.y > 240 || ghost.y < 0 || ghost.x < -16 || ghost.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); ghost.onscreen = false;};
    bb7a:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <ghost+0x2>
    bb7e:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <ghost+0x3>
    bb82:	81 3f       	cpi	r24, 0xF1	; 241
    bb84:	91 05       	cpc	r25, r1
    bb86:	40 f4       	brcc	.+16     	; 0xbb98 <movemonster+0x188>
    bb88:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <ghost>
    bb8c:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <ghost+0x1>
    bb90:	40 96       	adiw	r24, 0x10	; 16
    bb92:	81 30       	cpi	r24, 0x01	; 1
    bb94:	91 40       	sbci	r25, 0x01	; 1
    bb96:	58 f0       	brcs	.+22     	; 0xbbae <movemonster+0x19e>
    bb98:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <MonsteronScreen>
    bb9c:	02 e0       	ldi	r16, 0x02	; 2
    bb9e:	22 e0       	ldi	r18, 0x02	; 2
    bba0:	4c ee       	ldi	r20, 0xEC	; 236
    bba2:	6c ee       	ldi	r22, 0xEC	; 236
    bba4:	86 e0       	ldi	r24, 0x06	; 6
    bba6:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
    bbaa:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <ghost+0x9>
} 

    
}
    bbae:	0f 91       	pop	r16
    bbb0:	08 95       	ret

0000bbb2 <checkplayer>:
void checkplayer(int x,int y)
{
    if(x >= player2.x - 10 && x <= player2.x + 10 && y >= player2.y - 10 && y <= player2.y + 10)
    bbb2:	20 91 1b 0a 	lds	r18, 0x0A1B	; 0x800a1b <player2>
    bbb6:	30 91 1c 0a 	lds	r19, 0x0A1C	; 0x800a1c <player2+0x1>
    bbba:	a9 01       	movw	r20, r18
    bbbc:	4a 50       	subi	r20, 0x0A	; 10
    bbbe:	51 09       	sbc	r21, r1
    bbc0:	84 17       	cp	r24, r20
    bbc2:	95 07       	cpc	r25, r21
    bbc4:	64 f1       	brlt	.+88     	; 0xbc1e <checkplayer+0x6c>
    bbc6:	26 5f       	subi	r18, 0xF6	; 246
    bbc8:	3f 4f       	sbci	r19, 0xFF	; 255
    bbca:	28 17       	cp	r18, r24
    bbcc:	39 07       	cpc	r19, r25
    bbce:	3c f1       	brlt	.+78     	; 0xbc1e <checkplayer+0x6c>
    bbd0:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <player2+0x2>
    bbd4:	90 91 1e 0a 	lds	r25, 0x0A1E	; 0x800a1e <player2+0x3>
    bbd8:	9c 01       	movw	r18, r24
    bbda:	2a 50       	subi	r18, 0x0A	; 10
    bbdc:	31 09       	sbc	r19, r1
    bbde:	62 17       	cp	r22, r18
    bbe0:	73 07       	cpc	r23, r19
    bbe2:	ec f0       	brlt	.+58     	; 0xbc1e <checkplayer+0x6c>
    bbe4:	0a 96       	adiw	r24, 0x0a	; 10
    bbe6:	86 17       	cp	r24, r22
    bbe8:	97 07       	cpc	r25, r23
    bbea:	cc f0       	brlt	.+50     	; 0xbc1e <checkplayer+0x6c>
    {   
    died = true;
    bbec:	81 e0       	ldi	r24, 0x01	; 1
    bbee:	80 93 8d 0a 	sts	0x0A8D, r24	; 0x800a8d <died>
    lives--;    
    bbf2:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    bbf6:	81 50       	subi	r24, 0x01	; 1
    bbf8:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    isplaying = false; 
    bbfc:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    bc00:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0; 
    bc04:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    bc08:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    bc0c:	41 e0       	ldi	r20, 0x01	; 1
    bc0e:	6f ef       	ldi	r22, 0xFF	; 255
    bc10:	89 e0       	ldi	r24, 0x09	; 9
    bc12:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60); 
    bc16:	8c e3       	ldi	r24, 0x3C	; 60
    bc18:	90 e0       	ldi	r25, 0x00	; 0
    bc1a:	0c 94 01 50 	jmp	0xa002	; 0xa002 <WaitVsync>
    bc1e:	08 95       	ret

0000bc20 <checkmonster>:
    }
}
void checkmonster(int x, int y,int z)
{
if (!MonsteronScreen) return;
    bc20:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <MonsteronScreen>
    bc24:	22 23       	and	r18, r18
    bc26:	09 f4       	brne	.+2      	; 0xbc2a <checkmonster+0xa>
    bc28:	50 c0       	rjmp	.+160    	; 0xbcca <checkmonster+0xaa>

if   (ghost.onscreen && ghost.alive)
    bc2a:	20 91 5e 09 	lds	r18, 0x095E	; 0x80095e <ghost+0x9>
    bc2e:	22 23       	and	r18, r18
    bc30:	09 f4       	brne	.+2      	; 0xbc34 <checkmonster+0x14>
    bc32:	4b c0       	rjmp	.+150    	; 0xbcca <checkmonster+0xaa>
    bc34:	20 91 5f 09 	lds	r18, 0x095F	; 0x80095f <ghost+0xa>
    bc38:	22 23       	and	r18, r18
    bc3a:	09 f4       	brne	.+2      	; 0xbc3e <checkmonster+0x1e>
    bc3c:	46 c0       	rjmp	.+140    	; 0xbcca <checkmonster+0xaa>
                    {
   if ( x >= ghost.x +4 && x<= ghost.x + 11 && y > ghost.y+3 &&  y  < ghost.y + 15 )
    bc3e:	20 91 55 09 	lds	r18, 0x0955	; 0x800955 <ghost>
    bc42:	30 91 56 09 	lds	r19, 0x0956	; 0x800956 <ghost+0x1>
    bc46:	f9 01       	movw	r30, r18
    bc48:	33 96       	adiw	r30, 0x03	; 3
    bc4a:	e8 17       	cp	r30, r24
    bc4c:	f9 07       	cpc	r31, r25
    bc4e:	ec f5       	brge	.+122    	; 0xbcca <checkmonster+0xaa>
    bc50:	25 5f       	subi	r18, 0xF5	; 245
    bc52:	3f 4f       	sbci	r19, 0xFF	; 255
    bc54:	28 17       	cp	r18, r24
    bc56:	39 07       	cpc	r19, r25
    bc58:	c4 f1       	brlt	.+112    	; 0xbcca <checkmonster+0xaa>
    bc5a:	80 91 57 09 	lds	r24, 0x0957	; 0x800957 <ghost+0x2>
    bc5e:	90 91 58 09 	lds	r25, 0x0958	; 0x800958 <ghost+0x3>
    bc62:	9c 01       	movw	r18, r24
    bc64:	2d 5f       	subi	r18, 0xFD	; 253
    bc66:	3f 4f       	sbci	r19, 0xFF	; 255
    bc68:	26 17       	cp	r18, r22
    bc6a:	37 07       	cpc	r19, r23
    bc6c:	74 f5       	brge	.+92     	; 0xbcca <checkmonster+0xaa>
    bc6e:	0e 96       	adiw	r24, 0x0e	; 14
    bc70:	86 17       	cp	r24, r22
    bc72:	97 07       	cpc	r25, r23
    bc74:	54 f1       	brlt	.+84     	; 0xbcca <checkmonster+0xaa>
   {
    if ( z== 0)
    bc76:	45 2b       	or	r20, r21
    bc78:	91 f4       	brne	.+36     	; 0xbc9e <checkmonster+0x7e>
    {
        lives++;
    bc7a:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    bc7e:	8f 5f       	subi	r24, 0xFF	; 255
    bc80:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
        player.x = 30;
    bc84:	8e e1       	ldi	r24, 0x1E	; 30
    bc86:	90 e0       	ldi	r25, 0x00	; 0
    bc88:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    bc8c:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
        player.y = 10;
    bc90:	8a e0       	ldi	r24, 0x0A	; 10
    bc92:	90 e0       	ldi	r25, 0x00	; 0
    bc94:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    bc98:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    bc9c:	08 95       	ret
   // TriggerFx(9,0xff,true);
   // WaitVsync(60); 
    }
       else
       {
        ghost.alive = false; 
    bc9e:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <ghost+0xa>
        ghost.ximpulse = 0;
    bca2:	10 92 5c 09 	sts	0x095C, r1	; 0x80095c <ghost+0x7>
        ghost.yimpulse = 0; 
    bca6:	10 92 5d 09 	sts	0x095D, r1	; 0x80095d <ghost+0x8>
        score = score + 50;
    bcaa:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <score>
    bcae:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <score+0x1>
    bcb2:	c2 96       	adiw	r24, 0x32	; 50
    bcb4:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    bcb8:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
        updatepoints();
    bcbc:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <updatepoints>
        TriggerFx(8,0xff,true);
    bcc0:	41 e0       	ldi	r20, 0x01	; 1
    bcc2:	6f ef       	ldi	r22, 0xFF	; 255
    bcc4:	88 e0       	ldi	r24, 0x08	; 8
    bcc6:	0c 94 dc 45 	jmp	0x8bb8	; 0x8bb8 <TriggerFx>
    bcca:	08 95       	ret

0000bccc <moveplayer>:
bool exitgame;
bool play;

void moveplayer()
{
if(player.killer == true && player.killerCount < 100)
    bccc:	80 91 7a 09 	lds	r24, 0x097A	; 0x80097a <player+0x19>
    bcd0:	88 23       	and	r24, r24
    bcd2:	71 f0       	breq	.+28     	; 0xbcf0 <moveplayer+0x24>
    bcd4:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <player+0x1d>
    bcd8:	84 36       	cpi	r24, 0x64	; 100
    bcda:	50 f4       	brcc	.+20     	; 0xbcf0 <moveplayer+0x24>
{
    player.speed = 2;
    bcdc:	22 e0       	ldi	r18, 0x02	; 2
    bcde:	30 e0       	ldi	r19, 0x00	; 0
    bce0:	30 93 66 09 	sts	0x0966, r19	; 0x800966 <player+0x5>
    bce4:	20 93 65 09 	sts	0x0965, r18	; 0x800965 <player+0x4>
    player.killerCount = player.killerCount + 1;
    bce8:	8f 5f       	subi	r24, 0xFF	; 255
    bcea:	80 93 7e 09 	sts	0x097E, r24	; 0x80097e <player+0x1d>
    bcee:	0a c0       	rjmp	.+20     	; 0xbd04 <moveplayer+0x38>
}
else{
    player.speed = 1;
    bcf0:	81 e0       	ldi	r24, 0x01	; 1
    bcf2:	90 e0       	ldi	r25, 0x00	; 0
    bcf4:	90 93 66 09 	sts	0x0966, r25	; 0x800966 <player+0x5>
    bcf8:	80 93 65 09 	sts	0x0965, r24	; 0x800965 <player+0x4>
    player.killer = false;
    bcfc:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <player+0x19>
    player.killerCount = 0;
    bd00:	10 92 7e 09 	sts	0x097E, r1	; 0x80097e <player+0x1d>
}
player.mushroomCount = 10;
    bd04:	8a e0       	ldi	r24, 0x0A	; 10
    bd06:	90 e0       	ldi	r25, 0x00	; 0
    bd08:	90 93 68 09 	sts	0x0968, r25	; 0x800968 <player+0x7>
    bd0c:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
unsigned int joy=ReadJoypad(0);
    bd10:	80 e0       	ldi	r24, 0x00	; 0
    bd12:	0e 94 89 43 	call	0x8712	; 0x8712 <ReadJoypad>
if(player.stuck)
    bd16:	20 91 6b 09 	lds	r18, 0x096B	; 0x80096b <player+0xa>
    bd1a:	22 23       	and	r18, r18
    bd1c:	a1 f0       	breq	.+40     	; 0xbd46 <moveplayer+0x7a>
{
player.sCount = player.sCount + 1;
    bd1e:	20 91 69 09 	lds	r18, 0x0969	; 0x800969 <player+0x8>
    bd22:	30 91 6a 09 	lds	r19, 0x096A	; 0x80096a <player+0x9>
    bd26:	2f 5f       	subi	r18, 0xFF	; 255
    bd28:	3f 4f       	sbci	r19, 0xFF	; 255
if(player.sCount >= 100)
    bd2a:	24 36       	cpi	r18, 0x64	; 100
    bd2c:	31 05       	cpc	r19, r1
    bd2e:	2c f4       	brge	.+10     	; 0xbd3a <moveplayer+0x6e>
}
player.mushroomCount = 10;
unsigned int joy=ReadJoypad(0);
if(player.stuck)
{
player.sCount = player.sCount + 1;
    bd30:	30 93 6a 09 	sts	0x096A, r19	; 0x80096a <player+0x9>
    bd34:	20 93 69 09 	sts	0x0969, r18	; 0x800969 <player+0x8>
    bd38:	06 c0       	rjmp	.+12     	; 0xbd46 <moveplayer+0x7a>
if(player.sCount >= 100)
{
player.sCount = 0;
    bd3a:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x9>
    bd3e:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x8>
player.stuck = false;
    bd42:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xa>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    bd46:	20 91 7f 09 	lds	r18, 0x097F	; 0x80097f <introplaying>
    bd4a:	22 23       	and	r18, r18
    bd4c:	29 f0       	breq	.+10     	; 0xbd58 <moveplayer+0x8c>
    bd4e:	83 ff       	sbrs	r24, 3
    bd50:	b4 c0       	rjmp	.+360    	; 0xbeba <moveplayer+0x1ee>
    bd52:	10 92 7f 09 	sts	0x097F, r1	; 0x80097f <introplaying>
    bd56:	08 95       	ret
if (!introplaying)
{

if (joy&BTN_SR && joy&BTN_SL && joy&BTN_A) { 
    bd58:	93 ff       	sbrs	r25, 3
    bd5a:	2c c0       	rjmp	.+88     	; 0xbdb4 <moveplayer+0xe8>
    bd5c:	9c 01       	movw	r18, r24
    bd5e:	22 27       	eor	r18, r18
    bd60:	35 70       	andi	r19, 0x05	; 5
    bd62:	21 15       	cp	r18, r1
    bd64:	35 40       	sbci	r19, 0x05	; 5
    bd66:	81 f4       	brne	.+32     	; 0xbd88 <moveplayer+0xbc>
    died = true;
    bd68:	21 e0       	ldi	r18, 0x01	; 1
    bd6a:	20 93 8d 0a 	sts	0x0A8D, r18	; 0x800a8d <died>
    level++;    
    bd6e:	20 91 cf 09 	lds	r18, 0x09CF	; 0x8009cf <level>
    bd72:	2f 5f       	subi	r18, 0xFF	; 255
    bd74:	20 93 cf 09 	sts	0x09CF, r18	; 0x8009cf <level>
    isplaying = false; 
    bd78:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    bd7c:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0;  
    bd80:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    bd84:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    //TriggerFx(9,0xff,true);
    //WaitVsync(60);  
};
if (joy&BTN_SR && joy&BTN_SL && joy&BTN_Y) { 
    bd88:	9c 01       	movw	r18, r24
    bd8a:	22 70       	andi	r18, 0x02	; 2
    bd8c:	34 70       	andi	r19, 0x04	; 4
    bd8e:	22 30       	cpi	r18, 0x02	; 2
    bd90:	34 40       	sbci	r19, 0x04	; 4
    bd92:	81 f4       	brne	.+32     	; 0xbdb4 <moveplayer+0xe8>
    died = true;
    bd94:	21 e0       	ldi	r18, 0x01	; 1
    bd96:	20 93 8d 0a 	sts	0x0A8D, r18	; 0x800a8d <died>
    level--;    
    bd9a:	20 91 cf 09 	lds	r18, 0x09CF	; 0x8009cf <level>
    bd9e:	21 50       	subi	r18, 0x01	; 1
    bda0:	20 93 cf 09 	sts	0x09CF, r18	; 0x8009cf <level>
    isplaying = false; 
    bda4:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    bda8:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0;  
    bdac:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    bdb0:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    //TriggerFx(9,0xff,true);
    //WaitVsync(60);  
};
if (joy&BTN_LEFT && player.stuck == false) { 
    bdb4:	86 ff       	sbrs	r24, 6
    bdb6:	15 c0       	rjmp	.+42     	; 0xbde2 <moveplayer+0x116>
    bdb8:	20 91 6b 09 	lds	r18, 0x096B	; 0x80096b <player+0xa>
    bdbc:	21 11       	cpse	r18, r1
    bdbe:	11 c0       	rjmp	.+34     	; 0xbde2 <moveplayer+0x116>
player.direction = 'l';
    bdc0:	2c e6       	ldi	r18, 0x6C	; 108
    bdc2:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
player.action = 'w';
    bdc6:	27 e7       	ldi	r18, 0x77	; 119
    bdc8:	20 93 6e 09 	sts	0x096E, r18	; 0x80096e <player+0xd>
player.facing = 1;
    bdcc:	21 e0       	ldi	r18, 0x01	; 1
    bdce:	30 e0       	ldi	r19, 0x00	; 0
    bdd0:	30 93 6d 09 	sts	0x096D, r19	; 0x80096d <player+0xc>
    bdd4:	20 93 6c 09 	sts	0x096C, r18	; 0x80096c <player+0xb>
player.ximpulse = -player.speed; 
    bdd8:	20 91 65 09 	lds	r18, 0x0965	; 0x800965 <player+0x4>
    bddc:	21 95       	neg	r18
    bdde:	20 93 73 09 	sts	0x0973, r18	; 0x800973 <player+0x12>
};
if (joy&BTN_RIGHT && player.stuck == false) {
    bde2:	87 ff       	sbrs	r24, 7
    bde4:	12 c0       	rjmp	.+36     	; 0xbe0a <moveplayer+0x13e>
    bde6:	20 91 6b 09 	lds	r18, 0x096B	; 0x80096b <player+0xa>
    bdea:	21 11       	cpse	r18, r1
    bdec:	0e c0       	rjmp	.+28     	; 0xbe0a <moveplayer+0x13e>
player.direction = 'r';
    bdee:	22 e7       	ldi	r18, 0x72	; 114
    bdf0:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
player.action = 'w';
    bdf4:	27 e7       	ldi	r18, 0x77	; 119
    bdf6:	20 93 6e 09 	sts	0x096E, r18	; 0x80096e <player+0xd>
player.facing = 0;
    bdfa:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
    bdfe:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xb>
player.ximpulse = player.speed; 
    be02:	20 91 65 09 	lds	r18, 0x0965	; 0x800965 <player+0x4>
    be06:	20 93 73 09 	sts	0x0973, r18	; 0x800973 <player+0x12>

};
if ( !(joy&BTN_A) ) {
    be0a:	ac 01       	movw	r20, r24
    be0c:	44 27       	eor	r20, r20
    be0e:	51 70       	andi	r21, 0x01	; 1
    be10:	90 fd       	sbrc	r25, 0
    be12:	09 c0       	rjmp	.+18     	; 0xbe26 <moveplayer+0x15a>
player.yimpulse = 0;
    be14:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
player.jumpreleased = true;
    be18:	21 e0       	ldi	r18, 0x01	; 1
    be1a:	20 93 76 09 	sts	0x0976, r18	; 0x800976 <player+0x15>
player.jumping = false;
    be1e:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x14>
player.jumpcounter = 0;
    be22:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x1a>
};
if ( !(joy&BTN_B) ) {
    be26:	80 fd       	sbrc	r24, 0
    be28:	03 c0       	rjmp	.+6      	; 0xbe30 <moveplayer+0x164>
player.bpressed = false;
    be2a:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <player+0x16>
    be2e:	09 c0       	rjmp	.+18     	; 0xbe42 <moveplayer+0x176>
};
if ( joy&BTN_B && player.touchground) {
    be30:	20 91 72 09 	lds	r18, 0x0972	; 0x800972 <player+0x11>
    be34:	22 23       	and	r18, r18
    be36:	29 f0       	breq	.+10     	; 0xbe42 <moveplayer+0x176>
	if(player.bpressed == false && player.bananaCount > 0) // check count here
    be38:	20 91 77 09 	lds	r18, 0x0977	; 0x800977 <player+0x16>
    be3c:	22 23       	and	r18, r18
    be3e:	09 f4       	brne	.+2      	; 0xbe42 <moveplayer+0x176>
    be40:	ca c2       	rjmp	.+1428   	; 0xc3d6 <moveplayer+0x70a>
	player.bananaCount = player.bananaCount - 1;
    player.killer = true;
	player.bpressed = true;
	};
};  
if ( !(joy&BTN_Y) ) {
    be42:	81 fd       	sbrc	r24, 1
    be44:	03 c0       	rjmp	.+6      	; 0xbe4c <moveplayer+0x180>
player.ypressed = false;
    be46:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <player+0x17>
    be4a:	13 c0       	rjmp	.+38     	; 0xbe72 <moveplayer+0x1a6>
};
if ( joy&BTN_Y) {
	if(player.mushroomCount > 0 && player.ypressed == false)
    be4c:	80 91 67 09 	lds	r24, 0x0967	; 0x800967 <player+0x6>
    be50:	90 91 68 09 	lds	r25, 0x0968	; 0x800968 <player+0x7>
    be54:	18 16       	cp	r1, r24
    be56:	19 06       	cpc	r1, r25
    be58:	64 f4       	brge	.+24     	; 0xbe72 <moveplayer+0x1a6>
    be5a:	20 91 78 09 	lds	r18, 0x0978	; 0x800978 <player+0x17>
    be5e:	21 11       	cpse	r18, r1
    be60:	08 c0       	rjmp	.+16     	; 0xbe72 <moveplayer+0x1a6>
	{
	player.mushroomCount = player.mushroomCount - 1;
    be62:	01 97       	sbiw	r24, 0x01	; 1
    be64:	90 93 68 09 	sts	0x0968, r25	; 0x800968 <player+0x7>
    be68:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
	//player.speed = 10;
	player.ypressed = true;
    be6c:	81 e0       	ldi	r24, 0x01	; 1
    be6e:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <player+0x17>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    be72:	45 2b       	or	r20, r21
    be74:	11 f1       	breq	.+68     	; 0xbeba <moveplayer+0x1ee>
    be76:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <player+0x11>
    be7a:	88 23       	and	r24, r24
    be7c:	f1 f0       	breq	.+60     	; 0xbeba <moveplayer+0x1ee>
    be7e:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <player+0x15>
    be82:	88 23       	and	r24, r24
    be84:	d1 f0       	breq	.+52     	; 0xbeba <moveplayer+0x1ee>
    be86:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    be8a:	81 11       	cpse	r24, r1
    be8c:	16 c0       	rjmp	.+44     	; 0xbeba <moveplayer+0x1ee>
player.action = 'j';
    be8e:	8a e6       	ldi	r24, 0x6A	; 106
    be90:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <player+0xd>
player.yimpulse = 0;
    be94:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
player.jumping = true;
    be98:	81 e0       	ldi	r24, 0x01	; 1
    be9a:	80 93 75 09 	sts	0x0975, r24	; 0x800975 <player+0x14>
player.touchground = false;
    be9e:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x11>
player.jumpreleased = false;
    bea2:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x15>
player.jumpcounter++ ; 
    bea6:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x1a>
    beaa:	8f 5f       	subi	r24, 0xFF	; 255
    beac:	80 93 7b 09 	sts	0x097B, r24	; 0x80097b <player+0x1a>
TriggerFx(4,0xff,true);
    beb0:	41 e0       	ldi	r20, 0x01	; 1
    beb2:	6f ef       	ldi	r22, 0xFF	; 255
    beb4:	84 e0       	ldi	r24, 0x04	; 4
    beb6:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
};
};

oldx = player.x;
    beba:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <player>
    bebe:	30 91 62 09 	lds	r19, 0x0962	; 0x800962 <player+0x1>
    bec2:	30 93 ce 09 	sts	0x09CE, r19	; 0x8009ce <oldx+0x1>
    bec6:	20 93 cd 09 	sts	0x09CD, r18	; 0x8009cd <oldx>
oldy = player.y;
    beca:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bece:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bed2:	70 93 92 0a 	sts	0x0A92, r23	; 0x800a92 <oldy+0x1>
    bed6:	60 93 91 0a 	sts	0x0A91, r22	; 0x800a91 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    beda:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x1a>
    bede:	9f ef       	ldi	r25, 0xFF	; 255
    bee0:	98 0f       	add	r25, r24
    bee2:	99 31       	cpi	r25, 0x19	; 25
    bee4:	18 f4       	brcc	.+6      	; 0xbeec <moveplayer+0x220>
    bee6:	9c ef       	ldi	r25, 0xFC	; 252
    bee8:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <player+0x13>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    beec:	96 ee       	ldi	r25, 0xE6	; 230
    beee:	98 0f       	add	r25, r24
    bef0:	9b 30       	cpi	r25, 0x0B	; 11
    bef2:	18 f4       	brcc	.+6      	; 0xbefa <moveplayer+0x22e>
    bef4:	9d ef       	ldi	r25, 0xFD	; 253
    bef6:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <player+0x13>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    befa:	9b ed       	ldi	r25, 0xDB	; 219
    befc:	98 0f       	add	r25, r24
    befe:	94 30       	cpi	r25, 0x04	; 4
    bf00:	18 f4       	brcc	.+6      	; 0xbf08 <moveplayer+0x23c>
    bf02:	9e ef       	ldi	r25, 0xFE	; 254
    bf04:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <player+0x13>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    bf08:	97 ed       	ldi	r25, 0xD7	; 215
    bf0a:	98 0f       	add	r25, r24
    bf0c:	96 30       	cpi	r25, 0x06	; 6
    bf0e:	20 f4       	brcc	.+8      	; 0xbf18 <moveplayer+0x24c>
    bf10:	9f ef       	ldi	r25, 0xFF	; 255
    bf12:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <player+0x13>
    bf16:	02 c0       	rjmp	.+4      	; 0xbf1c <moveplayer+0x250>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    bf18:	88 23       	and	r24, r24
    bf1a:	19 f0       	breq	.+6      	; 0xbf22 <moveplayer+0x256>
    bf1c:	8f 5f       	subi	r24, 0xFF	; 255
    bf1e:	80 93 7b 09 	sts	0x097B, r24	; 0x80097b <player+0x1a>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    bf22:	80 91 7b 09 	lds	r24, 0x097B	; 0x80097b <player+0x1a>
    bf26:	8f 32       	cpi	r24, 0x2F	; 47
    bf28:	10 f0       	brcs	.+4      	; 0xbf2e <moveplayer+0x262>
    bf2a:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x1a>
player.x = player.x + player.ximpulse;
    bf2e:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <player+0x12>
    bf32:	a9 01       	movw	r20, r18
    bf34:	48 0f       	add	r20, r24
    bf36:	51 1d       	adc	r21, r1
    bf38:	87 fd       	sbrc	r24, 7
    bf3a:	5a 95       	dec	r21
    bf3c:	ca 01       	movw	r24, r20
    bf3e:	50 93 62 09 	sts	0x0962, r21	; 0x800962 <player+0x1>
    bf42:	40 93 61 09 	sts	0x0961, r20	; 0x800961 <player>
player.y = player.y + player.yimpulse + gravity ;
    bf46:	40 91 74 09 	lds	r20, 0x0974	; 0x800974 <player+0x13>
    bf4a:	64 0f       	add	r22, r20
    bf4c:	71 1d       	adc	r23, r1
    bf4e:	47 fd       	sbrc	r20, 7
    bf50:	7a 95       	dec	r23
    bf52:	6e 5f       	subi	r22, 0xFE	; 254
    bf54:	7f 4f       	sbci	r23, 0xFF	; 255
    bf56:	70 93 64 09 	sts	0x0964, r23	; 0x800964 <player+0x3>
    bf5a:	60 93 63 09 	sts	0x0963, r22	; 0x800963 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    bf5e:	28 17       	cp	r18, r24
    bf60:	39 07       	cpc	r19, r25
    bf62:	3c f4       	brge	.+14     	; 0xbf72 <moveplayer+0x2a6>
    bf64:	20 91 7c 09 	lds	r18, 0x097C	; 0x80097c <player+0x1b>
    bf68:	2f 5f       	subi	r18, 0xFF	; 255
    bf6a:	20 93 7c 09 	sts	0x097C, r18	; 0x80097c <player+0x1b>
    bf6e:	22 e7       	ldi	r18, 0x72	; 114
    bf70:	09 c0       	rjmp	.+18     	; 0xbf84 <moveplayer+0x2b8>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    bf72:	82 17       	cp	r24, r18
    bf74:	93 07       	cpc	r25, r19
    bf76:	4c f4       	brge	.+18     	; 0xbf8a <moveplayer+0x2be>
    bf78:	20 91 7c 09 	lds	r18, 0x097C	; 0x80097c <player+0x1b>
    bf7c:	2f 5f       	subi	r18, 0xFF	; 255
    bf7e:	20 93 7c 09 	sts	0x097C, r18	; 0x80097c <player+0x1b>
    bf82:	2c e6       	ldi	r18, 0x6C	; 108
    bf84:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
    bf88:	05 c0       	rjmp	.+10     	; 0xbf94 <moveplayer+0x2c8>
if (player.x == oldx  ) { player.aniframe = 0;};
    bf8a:	28 17       	cp	r18, r24
    bf8c:	39 07       	cpc	r19, r25
    bf8e:	11 f4       	brne	.+4      	; 0xbf94 <moveplayer+0x2c8>
    bf90:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <player+0x1b>
if (player.aniframe > 0 ) player.aniframe++;
    bf94:	20 91 7c 09 	lds	r18, 0x097C	; 0x80097c <player+0x1b>
    bf98:	22 23       	and	r18, r18
    bf9a:	19 f0       	breq	.+6      	; 0xbfa2 <moveplayer+0x2d6>
    bf9c:	2f 5f       	subi	r18, 0xFF	; 255
    bf9e:	20 93 7c 09 	sts	0x097C, r18	; 0x80097c <player+0x1b>
if (player.aniframe>24) player.aniframe = 1;
    bfa2:	20 91 7c 09 	lds	r18, 0x097C	; 0x80097c <player+0x1b>
    bfa6:	29 31       	cpi	r18, 0x19	; 25
    bfa8:	18 f0       	brcs	.+6      	; 0xbfb0 <moveplayer+0x2e4>
    bfaa:	21 e0       	ldi	r18, 0x01	; 1
    bfac:	20 93 7c 09 	sts	0x097C, r18	; 0x80097c <player+0x1b>
if(checkBanana(player.x + 4, player.y ,1) == 1)
    bfb0:	41 e0       	ldi	r20, 0x01	; 1
    bfb2:	50 e0       	ldi	r21, 0x00	; 0
    bfb4:	04 96       	adiw	r24, 0x04	; 4
    bfb6:	0e 94 02 55 	call	0xaa04	; 0xaa04 <checkBanana>
    bfba:	01 97       	sbiw	r24, 0x01	; 1
    bfbc:	41 f4       	brne	.+16     	; 0xbfce <moveplayer+0x302>
{
    player.stuck = true;
    bfbe:	81 e0       	ldi	r24, 0x01	; 1
    bfc0:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <player+0xa>
    TriggerFx(9,0xff,true);
    bfc4:	41 e0       	ldi	r20, 0x01	; 1
    bfc6:	6f ef       	ldi	r22, 0xFF	; 255
    bfc8:	89 e0       	ldi	r24, 0x09	; 9
    bfca:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
} 
if(player.bananaBool == true)
    bfce:	80 91 79 09 	lds	r24, 0x0979	; 0x800979 <player+0x18>
    bfd2:	88 23       	and	r24, r24
    bfd4:	79 f0       	breq	.+30     	; 0xbff4 <moveplayer+0x328>
{
makeBanana2(player.x + 4, player.y,1);
    bfd6:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bfda:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bfde:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bfe2:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bfe6:	41 e0       	ldi	r20, 0x01	; 1
    bfe8:	50 e0       	ldi	r21, 0x00	; 0
    bfea:	04 96       	adiw	r24, 0x04	; 4
    bfec:	0e 94 4e 54 	call	0xa89c	; 0xa89c <makeBanana2>
player.bananaBool = false;
    bff0:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <player+0x18>
}
checkcollide( player.x, player.y - 4 ,1,1);
    bff4:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bff8:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bffc:	64 50       	subi	r22, 0x04	; 4
    bffe:	71 09       	sbc	r23, r1
    c000:	21 e0       	ldi	r18, 0x01	; 1
    c002:	30 e0       	ldi	r19, 0x00	; 0
    c004:	41 e0       	ldi	r20, 0x01	; 1
    c006:	50 e0       	ldi	r21, 0x00	; 0
    c008:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c00c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c010:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3,1);
    c014:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c018:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c01c:	64 50       	subi	r22, 0x04	; 4
    c01e:	71 09       	sbc	r23, r1
    c020:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c024:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c028:	21 e0       	ldi	r18, 0x01	; 1
    c02a:	30 e0       	ldi	r19, 0x00	; 0
    c02c:	43 e0       	ldi	r20, 0x03	; 3
    c02e:	50 e0       	ldi	r21, 0x00	; 0
    c030:	03 97       	sbiw	r24, 0x03	; 3
    c032:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3,1);
    c036:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c03a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c03e:	64 50       	subi	r22, 0x04	; 4
    c040:	71 09       	sbc	r23, r1
    c042:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c046:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c04a:	21 e0       	ldi	r18, 0x01	; 1
    c04c:	30 e0       	ldi	r19, 0x00	; 0
    c04e:	43 e0       	ldi	r20, 0x03	; 3
    c050:	50 e0       	ldi	r21, 0x00	; 0
    c052:	04 96       	adiw	r24, 0x04	; 4
    c054:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2,1);
    c058:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c05c:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c060:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    c064:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    c068:	68 17       	cp	r22, r24
    c06a:	79 07       	cpc	r23, r25
    c06c:	64 f4       	brge	.+24     	; 0xc086 <moveplayer+0x3ba>
    c06e:	66 51       	subi	r22, 0x16	; 22
    c070:	71 09       	sbc	r23, r1
    c072:	21 e0       	ldi	r18, 0x01	; 1
    c074:	30 e0       	ldi	r19, 0x00	; 0
    c076:	42 e0       	ldi	r20, 0x02	; 2
    c078:	50 e0       	ldi	r21, 0x00	; 0
    c07a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c07e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c082:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    c086:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c08a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c08e:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    c092:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    c096:	86 17       	cp	r24, r22
    c098:	97 07       	cpc	r25, r23
    c09a:	ac f5       	brge	.+106    	; 0xc106 <moveplayer+0x43a>
    c09c:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x11>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0,1 )&1 || checkcollide( player.x + 4 , player.y     ,0,1 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    c0a0:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c0a4:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c0a8:	21 e0       	ldi	r18, 0x01	; 1
    c0aa:	30 e0       	ldi	r19, 0x00	; 0
    c0ac:	40 e0       	ldi	r20, 0x00	; 0
    c0ae:	50 e0       	ldi	r21, 0x00	; 0
    c0b0:	03 97       	sbiw	r24, 0x03	; 3
    c0b2:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c0b6:	80 ff       	sbrs	r24, 0
    c0b8:	15 c0       	rjmp	.+42     	; 0xc0e4 <moveplayer+0x418>
    c0ba:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    c0be:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    c0c2:	97 fd       	sbrc	r25, 7
    c0c4:	0f 96       	adiw	r24, 0x0f	; 15
    c0c6:	80 7f       	andi	r24, 0xF0	; 240
    c0c8:	01 97       	sbiw	r24, 0x01	; 1
    c0ca:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    c0ce:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    c0d2:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x14>
    c0d6:	81 e0       	ldi	r24, 0x01	; 1
    c0d8:	80 93 72 09 	sts	0x0972, r24	; 0x800972 <player+0x11>
    c0dc:	87 e7       	ldi	r24, 0x77	; 119
    c0de:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <player+0xd>
    c0e2:	11 c0       	rjmp	.+34     	; 0xc106 <moveplayer+0x43a>
    c0e4:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c0e8:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c0ec:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c0f0:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c0f4:	21 e0       	ldi	r18, 0x01	; 1
    c0f6:	30 e0       	ldi	r19, 0x00	; 0
    c0f8:	40 e0       	ldi	r20, 0x00	; 0
    c0fa:	50 e0       	ldi	r21, 0x00	; 0
    c0fc:	04 96       	adiw	r24, 0x04	; 4
    c0fe:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c102:	80 fd       	sbrc	r24, 0
    c104:	da cf       	rjmp	.-76     	; 0xc0ba <moveplayer+0x3ee>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0,1 )&1 || checkcollide( player.x + 4 , player.y - 21,0,1 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c106:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c10a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c10e:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    c112:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    c116:	68 17       	cp	r22, r24
    c118:	79 07       	cpc	r23, r25
    c11a:	94 f5       	brge	.+100    	; 0xc180 <moveplayer+0x4b4>
    c11c:	65 51       	subi	r22, 0x15	; 21
    c11e:	71 09       	sbc	r23, r1
    c120:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c124:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c128:	21 e0       	ldi	r18, 0x01	; 1
    c12a:	30 e0       	ldi	r19, 0x00	; 0
    c12c:	40 e0       	ldi	r20, 0x00	; 0
    c12e:	50 e0       	ldi	r21, 0x00	; 0
    c130:	03 97       	sbiw	r24, 0x03	; 3
    c132:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c136:	80 ff       	sbrs	r24, 0
    c138:	10 c0       	rjmp	.+32     	; 0xc15a <moveplayer+0x48e>
    c13a:	80 91 91 0a 	lds	r24, 0x0A91	; 0x800a91 <oldy>
    c13e:	90 91 92 0a 	lds	r25, 0x0A92	; 0x800a92 <oldy+0x1>
    c142:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    c146:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    c14a:	10 92 7b 09 	sts	0x097B, r1	; 0x80097b <player+0x1a>
                                                                                                                                  TriggerFx(5,0xff,true);
    c14e:	41 e0       	ldi	r20, 0x01	; 1
    c150:	6f ef       	ldi	r22, 0xFF	; 255
    c152:	85 e0       	ldi	r24, 0x05	; 5
    c154:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    c158:	13 c0       	rjmp	.+38     	; 0xc180 <moveplayer+0x4b4>
checkcollide( player.x +4, player.y - 4 ,3,1);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2,1);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0,1 )&1 || checkcollide( player.x + 4 , player.y     ,0,1 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0,1 )&1 || checkcollide( player.x + 4 , player.y - 21,0,1 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c15a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c15e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c162:	65 51       	subi	r22, 0x15	; 21
    c164:	71 09       	sbc	r23, r1
    c166:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c16a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c16e:	21 e0       	ldi	r18, 0x01	; 1
    c170:	30 e0       	ldi	r19, 0x00	; 0
    c172:	40 e0       	ldi	r20, 0x00	; 0
    c174:	50 e0       	ldi	r21, 0x00	; 0
    c176:	04 96       	adiw	r24, 0x04	; 4
    c178:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c17c:	80 fd       	sbrc	r24, 0
    c17e:	dd cf       	rjmp	.-70     	; 0xc13a <moveplayer+0x46e>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0,1 )&1 || checkcollide( player.x + 5 , player.y - 20,0,1 )&1)  player.x = oldx;  
    c180:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c184:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c188:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    c18c:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    c190:	28 17       	cp	r18, r24
    c192:	39 07       	cpc	r19, r25
    c194:	5c f5       	brge	.+86     	; 0xc1ec <moveplayer+0x520>
    c196:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c19a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c19e:	63 50       	subi	r22, 0x03	; 3
    c1a0:	71 09       	sbc	r23, r1
    c1a2:	21 e0       	ldi	r18, 0x01	; 1
    c1a4:	30 e0       	ldi	r19, 0x00	; 0
    c1a6:	40 e0       	ldi	r20, 0x00	; 0
    c1a8:	50 e0       	ldi	r21, 0x00	; 0
    c1aa:	05 96       	adiw	r24, 0x05	; 5
    c1ac:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c1b0:	80 ff       	sbrs	r24, 0
    c1b2:	09 c0       	rjmp	.+18     	; 0xc1c6 <moveplayer+0x4fa>
    c1b4:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <oldx>
    c1b8:	90 91 ce 09 	lds	r25, 0x09CE	; 0x8009ce <oldx+0x1>
    c1bc:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c1c0:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c1c4:	13 c0       	rjmp	.+38     	; 0xc1ec <moveplayer+0x520>
    c1c6:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c1ca:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c1ce:	64 51       	subi	r22, 0x14	; 20
    c1d0:	71 09       	sbc	r23, r1
    c1d2:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c1d6:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c1da:	21 e0       	ldi	r18, 0x01	; 1
    c1dc:	30 e0       	ldi	r19, 0x00	; 0
    c1de:	40 e0       	ldi	r20, 0x00	; 0
    c1e0:	50 e0       	ldi	r21, 0x00	; 0
    c1e2:	05 96       	adiw	r24, 0x05	; 5
    c1e4:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c1e8:	80 fd       	sbrc	r24, 0
    c1ea:	e4 cf       	rjmp	.-56     	; 0xc1b4 <moveplayer+0x4e8>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0,1 )&1 || checkcollide( player.x - 4 , player.y - 20,0,1 )&1)  player.x = oldx; 
    c1ec:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c1f0:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c1f4:	20 91 cd 09 	lds	r18, 0x09CD	; 0x8009cd <oldx>
    c1f8:	30 91 ce 09 	lds	r19, 0x09CE	; 0x8009ce <oldx+0x1>
    c1fc:	82 17       	cp	r24, r18
    c1fe:	93 07       	cpc	r25, r19
    c200:	5c f5       	brge	.+86     	; 0xc258 <moveplayer+0x58c>
    c202:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c206:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c20a:	63 50       	subi	r22, 0x03	; 3
    c20c:	71 09       	sbc	r23, r1
    c20e:	21 e0       	ldi	r18, 0x01	; 1
    c210:	30 e0       	ldi	r19, 0x00	; 0
    c212:	40 e0       	ldi	r20, 0x00	; 0
    c214:	50 e0       	ldi	r21, 0x00	; 0
    c216:	04 97       	sbiw	r24, 0x04	; 4
    c218:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c21c:	80 ff       	sbrs	r24, 0
    c21e:	09 c0       	rjmp	.+18     	; 0xc232 <moveplayer+0x566>
    c220:	80 91 cd 09 	lds	r24, 0x09CD	; 0x8009cd <oldx>
    c224:	90 91 ce 09 	lds	r25, 0x09CE	; 0x8009ce <oldx+0x1>
    c228:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c22c:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c230:	13 c0       	rjmp	.+38     	; 0xc258 <moveplayer+0x58c>
    c232:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c236:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c23a:	64 51       	subi	r22, 0x14	; 20
    c23c:	71 09       	sbc	r23, r1
    c23e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c242:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c246:	21 e0       	ldi	r18, 0x01	; 1
    c248:	30 e0       	ldi	r19, 0x00	; 0
    c24a:	40 e0       	ldi	r20, 0x00	; 0
    c24c:	50 e0       	ldi	r21, 0x00	; 0
    c24e:	04 97       	sbiw	r24, 0x04	; 4
    c250:	0e 94 fc 55 	call	0xabf8	; 0xabf8 <checkcollide>
    c254:	80 fd       	sbrc	r24, 0
    c256:	e4 cf       	rjmp	.-56     	; 0xc220 <moveplayer+0x554>
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    c258:	20 91 7a 09 	lds	r18, 0x097A	; 0x80097a <player+0x19>
    c25c:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c260:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c264:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c268:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
{
checkmonster(player.x +4, player.y -3,1 );
    c26c:	63 50       	subi	r22, 0x03	; 3
    c26e:	71 09       	sbc	r23, r1
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0,1 )&1 || checkcollide( player.x + 5 , player.y - 20,0,1 )&1)  player.x = oldx;  
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0,1 )&1 || checkcollide( player.x - 4 , player.y - 20,0,1 )&1)  player.x = oldx; 
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
//if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
if(player.killer == true)
    c270:	22 23       	and	r18, r18
    c272:	d9 f1       	breq	.+118    	; 0xc2ea <moveplayer+0x61e>
{
checkmonster(player.x +4, player.y -3,1 );
    c274:	41 e0       	ldi	r20, 0x01	; 1
    c276:	50 e0       	ldi	r21, 0x00	; 0
    c278:	04 96       	adiw	r24, 0x04	; 4
    c27a:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
checkmonster(player.x +4, player.y -19,1 );
    c27e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c282:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c286:	63 51       	subi	r22, 0x13	; 19
    c288:	71 09       	sbc	r23, r1
    c28a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c28e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c292:	41 e0       	ldi	r20, 0x01	; 1
    c294:	50 e0       	ldi	r21, 0x00	; 0
    c296:	04 96       	adiw	r24, 0x04	; 4
    c298:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
checkmonster(player.x -3, player.y -3 ,1);
    c29c:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c2a0:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c2a4:	63 50       	subi	r22, 0x03	; 3
    c2a6:	71 09       	sbc	r23, r1
    c2a8:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c2ac:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c2b0:	41 e0       	ldi	r20, 0x01	; 1
    c2b2:	50 e0       	ldi	r21, 0x00	; 0
    c2b4:	03 97       	sbiw	r24, 0x03	; 3
    c2b6:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
checkmonster(player.x -3, player.y -19 ,1);  
    c2ba:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c2be:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c2c2:	63 51       	subi	r22, 0x13	; 19
    c2c4:	71 09       	sbc	r23, r1
    c2c6:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c2ca:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c2ce:	41 e0       	ldi	r20, 0x01	; 1
    c2d0:	50 e0       	ldi	r21, 0x00	; 0
    c2d2:	03 97       	sbiw	r24, 0x03	; 3
    c2d4:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
checkmonster(player.x , player.y -22 ,1);
    c2d8:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c2dc:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c2e0:	66 51       	subi	r22, 0x16	; 22
    c2e2:	71 09       	sbc	r23, r1
    c2e4:	41 e0       	ldi	r20, 0x01	; 1
    c2e6:	50 e0       	ldi	r21, 0x00	; 0
    c2e8:	3a c0       	rjmp	.+116    	; 0xc35e <moveplayer+0x692>
checkplayer(player.x,player.y);
}
else{
    checkmonster(player.x +4, player.y -3,0 );
    c2ea:	40 e0       	ldi	r20, 0x00	; 0
    c2ec:	50 e0       	ldi	r21, 0x00	; 0
    c2ee:	04 96       	adiw	r24, 0x04	; 4
    c2f0:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
    checkmonster(player.x +4, player.y -19,0 );
    c2f4:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c2f8:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c2fc:	63 51       	subi	r22, 0x13	; 19
    c2fe:	71 09       	sbc	r23, r1
    c300:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c304:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c308:	40 e0       	ldi	r20, 0x00	; 0
    c30a:	50 e0       	ldi	r21, 0x00	; 0
    c30c:	04 96       	adiw	r24, 0x04	; 4
    c30e:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
    checkmonster(player.x -3, player.y -3 ,0);
    c312:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c316:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c31a:	63 50       	subi	r22, 0x03	; 3
    c31c:	71 09       	sbc	r23, r1
    c31e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c322:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c326:	40 e0       	ldi	r20, 0x00	; 0
    c328:	50 e0       	ldi	r21, 0x00	; 0
    c32a:	03 97       	sbiw	r24, 0x03	; 3
    c32c:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
    checkmonster(player.x -3, player.y -19 ,0);  
    c330:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c334:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c338:	63 51       	subi	r22, 0x13	; 19
    c33a:	71 09       	sbc	r23, r1
    c33c:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c340:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c344:	40 e0       	ldi	r20, 0x00	; 0
    c346:	50 e0       	ldi	r21, 0x00	; 0
    c348:	03 97       	sbiw	r24, 0x03	; 3
    c34a:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
    checkmonster(player.x , player.y -22 ,0);
    c34e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c352:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c356:	66 51       	subi	r22, 0x16	; 22
    c358:	71 09       	sbc	r23, r1
    c35a:	40 e0       	ldi	r20, 0x00	; 0
    c35c:	50 e0       	ldi	r21, 0x00	; 0
    c35e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c362:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c366:	0e 94 10 5e 	call	0xbc20	; 0xbc20 <checkmonster>
    checkplayer(player.x,player.y);
    c36a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c36e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c372:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c376:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c37a:	0e 94 d9 5d 	call	0xbbb2	; 0xbbb2 <checkplayer>
}
//if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
player.ximpulse = 0;    
    c37e:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x12>
player.yimpulse = 0;
    c382:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
if ( player.x < 8 ){ 
    c386:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c38a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c38e:	08 97       	sbiw	r24, 0x08	; 8
    c390:	8c f4       	brge	.+34     	; 0xc3b4 <moveplayer+0x6e8>
    lives++;
    c392:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    c396:	8f 5f       	subi	r24, 0xFF	; 255
    c398:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    player.x = 30;
    c39c:	8e e1       	ldi	r24, 0x1E	; 30
    c39e:	90 e0       	ldi	r25, 0x00	; 0
    c3a0:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c3a4:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    player.y = 10;
    c3a8:	8a e0       	ldi	r24, 0x0A	; 10
    c3aa:	90 e0       	ldi	r25, 0x00	; 0
    c3ac:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    c3b0:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
}
if ( player.x > 232 ) player.x = player2.x - 30;    
    c3b4:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c3b8:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c3bc:	89 3e       	cpi	r24, 0xE9	; 233
    c3be:	91 05       	cpc	r25, r1
    c3c0:	c4 f0       	brlt	.+48     	; 0xc3f2 <moveplayer+0x726>
    c3c2:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    c3c6:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    c3ca:	4e 97       	sbiw	r24, 0x1e	; 30
    c3cc:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c3d0:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c3d4:	08 95       	ret
};
if ( !(joy&BTN_B) ) {
player.bpressed = false;
};
if ( joy&BTN_B && player.touchground) {
	if(player.bpressed == false && player.bananaCount > 0) // check count here
    c3d6:	20 91 7d 09 	lds	r18, 0x097D	; 0x80097d <player+0x1c>
    c3da:	22 23       	and	r18, r18
    c3dc:	09 f4       	brne	.+2      	; 0xc3e0 <moveplayer+0x714>
    c3de:	31 cd       	rjmp	.-1438   	; 0xbe42 <moveplayer+0x176>
	{
	player.bananaCount = player.bananaCount - 1;
    c3e0:	21 50       	subi	r18, 0x01	; 1
    c3e2:	20 93 7d 09 	sts	0x097D, r18	; 0x80097d <player+0x1c>
    player.killer = true;
    c3e6:	21 e0       	ldi	r18, 0x01	; 1
    c3e8:	20 93 7a 09 	sts	0x097A, r18	; 0x80097a <player+0x19>
	player.bpressed = true;
    c3ec:	20 93 77 09 	sts	0x0977, r18	; 0x800977 <player+0x16>
    c3f0:	28 cd       	rjmp	.-1456   	; 0xbe42 <moveplayer+0x176>
    c3f2:	08 95       	ret

0000c3f4 <scrollmonster>:
}


void scrollmonster(int x)
{
if (ghost.onscreen) ghost.x2 =  ghost.x2 + ( x << 2 );
    c3f4:	20 91 5e 09 	lds	r18, 0x095E	; 0x80095e <ghost+0x9>
    c3f8:	22 23       	and	r18, r18
    c3fa:	71 f0       	breq	.+28     	; 0xc418 <scrollmonster+0x24>
    c3fc:	88 0f       	add	r24, r24
    c3fe:	99 1f       	adc	r25, r25
    c400:	88 0f       	add	r24, r24
    c402:	99 1f       	adc	r25, r25
    c404:	20 91 59 09 	lds	r18, 0x0959	; 0x800959 <ghost+0x4>
    c408:	30 91 5a 09 	lds	r19, 0x095A	; 0x80095a <ghost+0x5>
    c40c:	82 0f       	add	r24, r18
    c40e:	93 1f       	adc	r25, r19
    c410:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <ghost+0x5>
    c414:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <ghost+0x4>
    c418:	08 95       	ret

0000c41a <setghost>:
}

void setghost(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    c41a:	20 91 1a 0a 	lds	r18, 0x0A1A	; 0x800a1a <MonsteronScreen>
    c41e:	21 11       	cpse	r18, r1
    c420:	38 c0       	rjmp	.+112    	; 0xc492 <setghost+0x78>
if ( ghost.onscreen == true ) return;    
    c422:	20 91 5e 09 	lds	r18, 0x095E	; 0x80095e <ghost+0x9>
    c426:	21 11       	cpse	r18, r1
    c428:	34 c0       	rjmp	.+104    	; 0xc492 <setghost+0x78>
ghost.x = x * 8;
    c42a:	33 e0       	ldi	r19, 0x03	; 3
    c42c:	88 0f       	add	r24, r24
    c42e:	99 1f       	adc	r25, r25
    c430:	3a 95       	dec	r19
    c432:	e1 f7       	brne	.-8      	; 0xc42c <setghost+0x12>
    c434:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <ghost+0x1>
    c438:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <ghost>
if (scrolltiles > 0 )  ghost.x = 15 * 16;
    c43c:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    c440:	88 23       	and	r24, r24
    c442:	31 f0       	breq	.+12     	; 0xc450 <setghost+0x36>
    c444:	80 ef       	ldi	r24, 0xF0	; 240
    c446:	90 e0       	ldi	r25, 0x00	; 0
    c448:	90 93 56 09 	sts	0x0956, r25	; 0x800956 <ghost+0x1>
    c44c:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <ghost>
ghost.y = y * 8;     
    c450:	83 e0       	ldi	r24, 0x03	; 3
    c452:	66 0f       	add	r22, r22
    c454:	77 1f       	adc	r23, r23
    c456:	8a 95       	dec	r24
    c458:	e1 f7       	brne	.-8      	; 0xc452 <setghost+0x38>
    c45a:	70 93 58 09 	sts	0x0958, r23	; 0x800958 <ghost+0x3>
    c45e:	60 93 57 09 	sts	0x0957, r22	; 0x800957 <ghost+0x2>
ghost.x2 = ghost.x << 2;        
    c462:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <ghost>
    c466:	90 91 56 09 	lds	r25, 0x0956	; 0x800956 <ghost+0x1>
    c46a:	88 0f       	add	r24, r24
    c46c:	99 1f       	adc	r25, r25
    c46e:	88 0f       	add	r24, r24
    c470:	99 1f       	adc	r25, r25
    c472:	90 93 5a 09 	sts	0x095A, r25	; 0x80095a <ghost+0x5>
    c476:	80 93 59 09 	sts	0x0959, r24	; 0x800959 <ghost+0x4>
ghost.ximpulse = -1;
    c47a:	8f ef       	ldi	r24, 0xFF	; 255
    c47c:	80 93 5c 09 	sts	0x095C, r24	; 0x80095c <ghost+0x7>
ghost.yimpulse = 0;    
    c480:	10 92 5d 09 	sts	0x095D, r1	; 0x80095d <ghost+0x8>
ghost.onscreen = true;
    c484:	81 e0       	ldi	r24, 0x01	; 1
    c486:	80 93 5e 09 	sts	0x095E, r24	; 0x80095e <ghost+0x9>
ghost.alive = true; 
    c48a:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <ghost+0xa>
MonsteronScreen = true;     
    c48e:	80 93 1a 0a 	sts	0x0A1A, r24	; 0x800a1a <MonsteronScreen>
    c492:	08 95       	ret

0000c494 <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    c494:	6f 92       	push	r6
    c496:	7f 92       	push	r7
    c498:	8f 92       	push	r8
    c49a:	bf 92       	push	r11
    c49c:	cf 92       	push	r12
    c49e:	df 92       	push	r13
    c4a0:	ef 92       	push	r14
    c4a2:	ff 92       	push	r15
    c4a4:	0f 93       	push	r16
    c4a6:	1f 93       	push	r17
    c4a8:	cf 93       	push	r28
    c4aa:	df 93       	push	r29
int ly;
char bl;
lx = Levelx;
lx = lx >> 4;

player.stuck = false;
    c4ac:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xa>
player2.stuck = false;
    c4b0:	10 92 25 0a 	sts	0x0A25, r1	; 0x800a25 <player2+0xa>
player.sCount =0;
    c4b4:	10 92 6a 09 	sts	0x096A, r1	; 0x80096a <player+0x9>
    c4b8:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x8>
player2.sCount =0;
    c4bc:	10 92 24 0a 	sts	0x0A24, r1	; 0x800a24 <player2+0x9>
    c4c0:	10 92 23 0a 	sts	0x0A23, r1	; 0x800a23 <player2+0x8>
    c4c4:	01 e0       	ldi	r16, 0x01	; 1
    c4c6:	e1 2c       	mov	r14, r1
    c4c8:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c4ca:	c1 2c       	mov	r12, r1
    c4cc:	d1 2c       	mov	r13, r1
    if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    c4ce:	be 2c       	mov	r11, r14
    c4d0:	36 01       	movw	r6, r12
    c4d2:	c0 e0       	ldi	r28, 0x00	; 0
    c4d4:	d0 e0       	ldi	r29, 0x00	; 0
for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
//if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi+(Levelx)]));
    if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    c4d6:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c4da:	81 11       	cpse	r24, r1
    c4dc:	04 c0       	rjmp	.+8      	; 0xc4e6 <drawlevel+0x52>
    c4de:	f3 01       	movw	r30, r6
    c4e0:	e1 58       	subi	r30, 0x81	; 129
    c4e2:	fa 4c       	sbci	r31, 0xCA	; 202
    c4e4:	35 c0       	rjmp	.+106    	; 0xc550 <drawlevel+0xbc>
    if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    c4e6:	81 30       	cpi	r24, 0x01	; 1
    c4e8:	21 f4       	brne	.+8      	; 0xc4f2 <drawlevel+0x5e>
    c4ea:	f3 01       	movw	r30, r6
    c4ec:	ed 56       	subi	r30, 0x6D	; 109
    c4ee:	ff 4c       	sbci	r31, 0xCF	; 207
    c4f0:	2f c0       	rjmp	.+94     	; 0xc550 <drawlevel+0xbc>
    if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    c4f2:	82 30       	cpi	r24, 0x02	; 2
    c4f4:	21 f4       	brne	.+8      	; 0xc4fe <drawlevel+0x6a>
    c4f6:	f3 01       	movw	r30, r6
    c4f8:	e9 55       	subi	r30, 0x59	; 89
    c4fa:	f4 4d       	sbci	r31, 0xD4	; 212
    c4fc:	29 c0       	rjmp	.+82     	; 0xc550 <drawlevel+0xbc>
    if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    c4fe:	83 30       	cpi	r24, 0x03	; 3
    c500:	21 f4       	brne	.+8      	; 0xc50a <drawlevel+0x76>
    c502:	f3 01       	movw	r30, r6
    c504:	e5 54       	subi	r30, 0x45	; 69
    c506:	f9 4d       	sbci	r31, 0xD9	; 217
    c508:	23 c0       	rjmp	.+70     	; 0xc550 <drawlevel+0xbc>
    if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    c50a:	84 30       	cpi	r24, 0x04	; 4
    c50c:	21 f4       	brne	.+8      	; 0xc516 <drawlevel+0x82>
    c50e:	f3 01       	movw	r30, r6
    c510:	e1 53       	subi	r30, 0x31	; 49
    c512:	fe 4d       	sbci	r31, 0xDE	; 222
    c514:	1d c0       	rjmp	.+58     	; 0xc550 <drawlevel+0xbc>
    if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    c516:	85 30       	cpi	r24, 0x05	; 5
    c518:	21 f4       	brne	.+8      	; 0xc522 <drawlevel+0x8e>
    c51a:	f3 01       	movw	r30, r6
    c51c:	ed 51       	subi	r30, 0x1D	; 29
    c51e:	f3 4e       	sbci	r31, 0xE3	; 227
    c520:	17 c0       	rjmp	.+46     	; 0xc550 <drawlevel+0xbc>
    if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    c522:	86 30       	cpi	r24, 0x06	; 6
    c524:	21 f4       	brne	.+8      	; 0xc52e <drawlevel+0x9a>
    c526:	f3 01       	movw	r30, r6
    c528:	e9 50       	subi	r30, 0x09	; 9
    c52a:	f8 4e       	sbci	r31, 0xE8	; 232
    c52c:	11 c0       	rjmp	.+34     	; 0xc550 <drawlevel+0xbc>
    if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    c52e:	87 30       	cpi	r24, 0x07	; 7
    c530:	21 f4       	brne	.+8      	; 0xc53a <drawlevel+0xa6>
    c532:	f3 01       	movw	r30, r6
    c534:	e5 5f       	subi	r30, 0xF5	; 245
    c536:	fc 4e       	sbci	r31, 0xEC	; 236
    c538:	0b c0       	rjmp	.+22     	; 0xc550 <drawlevel+0xbc>
    if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    c53a:	88 30       	cpi	r24, 0x08	; 8
    c53c:	21 f4       	brne	.+8      	; 0xc546 <drawlevel+0xb2>
    c53e:	f3 01       	movw	r30, r6
    c540:	e1 5e       	subi	r30, 0xE1	; 225
    c542:	f1 4f       	sbci	r31, 0xF1	; 241
    c544:	05 c0       	rjmp	.+10     	; 0xc550 <drawlevel+0xbc>
    if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    c546:	89 30       	cpi	r24, 0x09	; 9
    c548:	21 f4       	brne	.+8      	; 0xc552 <drawlevel+0xbe>
    c54a:	f3 01       	movw	r30, r6
    c54c:	ed 5c       	subi	r30, 0xCD	; 205
    c54e:	f6 4f       	sbci	r31, 0xF6	; 246
    c550:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c552:	11 30       	cpi	r17, 0x01	; 1
    c554:	19 f4       	brne	.+6      	; 0xc55c <drawlevel+0xc8>
    c556:	4d ee       	ldi	r20, 0xED	; 237
    c558:	5b e7       	ldi	r21, 0x7B	; 123
    c55a:	09 c0       	rjmp	.+18     	; 0xc56e <drawlevel+0xda>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    c55c:	12 30       	cpi	r17, 0x02	; 2
    c55e:	19 f4       	brne	.+6      	; 0xc566 <drawlevel+0xd2>
    c560:	4b ef       	ldi	r20, 0xFB	; 251
    c562:	5b e7       	ldi	r21, 0x7B	; 123
    c564:	04 c0       	rjmp	.+8      	; 0xc56e <drawlevel+0xda>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    c566:	13 30       	cpi	r17, 0x03	; 3
    c568:	39 f4       	brne	.+14     	; 0xc578 <drawlevel+0xe4>
    c56a:	45 ef       	ldi	r20, 0xF5	; 245
    c56c:	5b e7       	ldi	r21, 0x7B	; 123
    c56e:	6c 2f       	mov	r22, r28
    c570:	8b 2d       	mov	r24, r11
    c572:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    c576:	1b c0       	rjmp	.+54     	; 0xc5ae <drawlevel+0x11a>
    if ( c == 4 ) {
    c578:	14 30       	cpi	r17, 0x04	; 4
    c57a:	29 f4       	brne	.+10     	; 0xc586 <drawlevel+0xf2>
        if(level >= 6)
    c57c:	86 30       	cpi	r24, 0x06	; 6
    c57e:	a0 f4       	brcc	.+40     	; 0xc5a8 <drawlevel+0x114>
        {
            DrawMap2(destx  ,yi *2  ,blackblock);
        }
        else{
            DrawMap2(destx  ,yi *2  ,block2);
    c580:	4b ea       	ldi	r20, 0xAB	; 171
    c582:	5b e7       	ldi	r21, 0x7B	; 123
    c584:	38 c0       	rjmp	.+112    	; 0xc5f6 <drawlevel+0x162>
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    c586:	15 30       	cpi	r17, 0x05	; 5
    c588:	19 f4       	brne	.+6      	; 0xc590 <drawlevel+0xfc>
    c58a:	45 ee       	ldi	r20, 0xE5	; 229
    c58c:	5b e7       	ldi	r21, 0x7B	; 123
    c58e:	33 c0       	rjmp	.+102    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    c590:	16 30       	cpi	r17, 0x06	; 6
    c592:	09 f0       	breq	.+2      	; 0xc596 <drawlevel+0x102>
    c594:	55 c0       	rjmp	.+170    	; 0xc640 <drawlevel+0x1ac>
    c596:	4d ed       	ldi	r20, 0xDD	; 221
    c598:	5b e7       	ldi	r21, 0x7B	; 123
    c59a:	2d c0       	rjmp	.+90     	; 0xc5f6 <drawlevel+0x162>
    if ( c == 40 ) DrawMap2(destx ,yi *2  ,moss);
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,groundblock0);
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,groundblock1);
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    c59c:	11 32       	cpi	r17, 0x21	; 33
    c59e:	09 f4       	brne	.+2      	; 0xc5a2 <drawlevel+0x10e>
    c5a0:	ea c0       	rjmp	.+468    	; 0xc776 <drawlevel+0x2e2>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    c5a2:	12 32       	cpi	r17, 0x22	; 34
    c5a4:	09 f0       	breq	.+2      	; 0xc5a8 <drawlevel+0x114>
    c5a6:	7a c0       	rjmp	.+244    	; 0xc69c <drawlevel+0x208>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    if ( c == 42 ) DrawMap2(destx ,yi *2  ,trunk0);
    if ( c == 43 ) DrawMap2(destx ,yi *2  ,trunk1);
    if ( c == 44 ) DrawMap2(destx ,yi *2  ,tree0);
    if ( c == 45 ) DrawMap2(destx ,yi *2  ,tree1); 
    if ( c == 46 ) DrawMap2(destx ,yi *2  ,blackblock); 
    c5a8:	4f e6       	ldi	r20, 0x6F	; 111
    c5aa:	5b e7       	ldi	r21, 0x7B	; 123
    c5ac:	24 c0       	rjmp	.+72     	; 0xc5f6 <drawlevel+0x162>
        }
    }
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    c5ae:	1e 31       	cpi	r17, 0x1E	; 30
    c5b0:	59 f4       	brne	.+22     	; 0xc5c8 <drawlevel+0x134>
    c5b2:	4f e6       	ldi	r20, 0x6F	; 111
    c5b4:	5a e7       	ldi	r21, 0x7A	; 122
    c5b6:	6c 2f       	mov	r22, r28
    c5b8:	8b 2d       	mov	r24, r11
    c5ba:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    c5be:	4f e6       	ldi	r20, 0x6F	; 111
    c5c0:	5a e7       	ldi	r21, 0x7A	; 122
        DrawMap2(destx ,yi *2  ,door1);
        }
    }
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    c5c2:	6c 2f       	mov	r22, r28
    c5c4:	80 2f       	mov	r24, r16
    c5c6:	19 c0       	rjmp	.+50     	; 0xc5fa <drawlevel+0x166>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    if ( c == 41 ) {
    c5c8:	19 32       	cpi	r17, 0x29	; 41
    c5ca:	51 f4       	brne	.+20     	; 0xc5e0 <drawlevel+0x14c>
        if(level >= 7)
    c5cc:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c5d0:	87 30       	cpi	r24, 0x07	; 7
    c5d2:	18 f0       	brcs	.+6      	; 0xc5da <drawlevel+0x146>
        {
        DrawMap2(destx ,yi *2  ,diamond1);
    c5d4:	49 e9       	ldi	r20, 0x99	; 153
    c5d6:	5b e7       	ldi	r21, 0x7B	; 123
    c5d8:	0e c0       	rjmp	.+28     	; 0xc5f6 <drawlevel+0x162>
        }
        else{
        DrawMap2(destx ,yi *2  ,diamond0);   
    c5da:	4f e9       	ldi	r20, 0x9F	; 159
    c5dc:	5b e7       	ldi	r21, 0x7B	; 123
    c5de:	0b c0       	rjmp	.+22     	; 0xc5f6 <drawlevel+0x162>
        }
    } 
    if ( c == 50 ) setghost(destx,  yi *2);     
    c5e0:	12 33       	cpi	r17, 0x32	; 50
    c5e2:	29 f4       	brne	.+10     	; 0xc5ee <drawlevel+0x15a>
    c5e4:	be 01       	movw	r22, r28
    c5e6:	c7 01       	movw	r24, r14
    c5e8:	0e 94 0d 62 	call	0xc41a	; 0xc41a <setghost>
    c5ec:	08 c0       	rjmp	.+16     	; 0xc5fe <drawlevel+0x16a>
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    c5ee:	1e 33       	cpi	r17, 0x3E	; 62
    c5f0:	31 f4       	brne	.+12     	; 0xc5fe <drawlevel+0x16a>
    c5f2:	49 e6       	ldi	r20, 0x69	; 105
    c5f4:	5b e7       	ldi	r21, 0x7B	; 123
    c5f6:	6c 2f       	mov	r22, r28
    c5f8:	8b 2d       	mov	r24, r11
    c5fa:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    c5fe:	22 96       	adiw	r28, 0x02	; 2
    c600:	8a e5       	ldi	r24, 0x5A	; 90
    c602:	68 0e       	add	r6, r24
    c604:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    c606:	cc 31       	cpi	r28, 0x1C	; 28
    c608:	d1 05       	cpc	r29, r1
    c60a:	09 f0       	breq	.+2      	; 0xc60e <drawlevel+0x17a>
    c60c:	64 cf       	rjmp	.-312    	; 0xc4d6 <drawlevel+0x42>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c60e:	8f ef       	ldi	r24, 0xFF	; 255
    c610:	c8 1a       	sub	r12, r24
    c612:	d8 0a       	sbc	r13, r24
    c614:	82 e0       	ldi	r24, 0x02	; 2
    c616:	e8 0e       	add	r14, r24
    c618:	f1 1c       	adc	r15, r1
    c61a:	0e 5f       	subi	r16, 0xFE	; 254
    c61c:	80 e2       	ldi	r24, 0x20	; 32
    c61e:	e8 16       	cp	r14, r24
    c620:	f1 04       	cpc	r15, r1
    c622:	09 f0       	breq	.+2      	; 0xc626 <drawlevel+0x192>
    c624:	54 cf       	rjmp	.-344    	; 0xc4ce <drawlevel+0x3a>
    if ( c == 50 ) setghost(destx,  yi *2);     
    if ( c == 62 ) DrawMap2(destx ,yi *2  ,fireground);  
    }
    }

}
    c626:	df 91       	pop	r29
    c628:	cf 91       	pop	r28
    c62a:	1f 91       	pop	r17
    c62c:	0f 91       	pop	r16
    c62e:	ff 90       	pop	r15
    c630:	ef 90       	pop	r14
    c632:	df 90       	pop	r13
    c634:	cf 90       	pop	r12
    c636:	bf 90       	pop	r11
    c638:	8f 90       	pop	r8
    c63a:	7f 90       	pop	r7
    c63c:	6f 90       	pop	r6
    c63e:	08 95       	ret
            DrawMap2(destx  ,yi *2  ,block2);
        }
    }
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    c640:	17 30       	cpi	r17, 0x07	; 7
    c642:	19 f4       	brne	.+6      	; 0xc64a <drawlevel+0x1b6>
    c644:	45 ea       	ldi	r20, 0xA5	; 165
    c646:	5b e7       	ldi	r21, 0x7B	; 123
    c648:	d6 cf       	rjmp	.-84     	; 0xc5f6 <drawlevel+0x162>
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    c64a:	18 30       	cpi	r17, 0x08	; 8
    c64c:	19 f4       	brne	.+6      	; 0xc654 <drawlevel+0x1c0>
    c64e:	45 ed       	ldi	r20, 0xD5	; 213
    c650:	5b e7       	ldi	r21, 0x7B	; 123
    c652:	d1 cf       	rjmp	.-94     	; 0xc5f6 <drawlevel+0x162>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    c654:	19 30       	cpi	r17, 0x09	; 9
    c656:	19 f4       	brne	.+6      	; 0xc65e <drawlevel+0x1ca>
    c658:	4f ec       	ldi	r20, 0xCF	; 207
    c65a:	5b e7       	ldi	r21, 0x7B	; 123
    c65c:	cc cf       	rjmp	.-104    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    c65e:	1a 30       	cpi	r17, 0x0A	; 10
    c660:	19 f4       	brne	.+6      	; 0xc668 <drawlevel+0x1d4>
    c662:	49 ec       	ldi	r20, 0xC9	; 201
    c664:	5b e7       	ldi	r21, 0x7B	; 123
    c666:	c7 cf       	rjmp	.-114    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 40 ) DrawMap2(destx ,yi *2  ,moss);
    c668:	18 32       	cpi	r17, 0x28	; 40
    c66a:	19 f4       	brne	.+6      	; 0xc672 <drawlevel+0x1de>
    c66c:	4b e4       	ldi	r20, 0x4B	; 75
    c66e:	5b e7       	ldi	r21, 0x7B	; 123
    c670:	c2 cf       	rjmp	.-124    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,groundblock0);
    c672:	1c 30       	cpi	r17, 0x0C	; 12
    c674:	19 f4       	brne	.+6      	; 0xc67c <drawlevel+0x1e8>
    c676:	45 e4       	ldi	r20, 0x45	; 69
    c678:	5b e7       	ldi	r21, 0x7B	; 123
    c67a:	bd cf       	rjmp	.-134    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,groundblock1);
    c67c:	1d 30       	cpi	r17, 0x0D	; 13
    c67e:	19 f4       	brne	.+6      	; 0xc686 <drawlevel+0x1f2>
    c680:	4f e3       	ldi	r20, 0x3F	; 63
    c682:	5b e7       	ldi	r21, 0x7B	; 123
    c684:	b8 cf       	rjmp	.-144    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,fire1);
    c686:	1f 31       	cpi	r17, 0x1F	; 31
    c688:	19 f4       	brne	.+6      	; 0xc690 <drawlevel+0x1fc>
    c68a:	4a e8       	ldi	r20, 0x8A	; 138
    c68c:	5b e7       	ldi	r21, 0x7B	; 123
    c68e:	b3 cf       	rjmp	.-154    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,fire2);
    c690:	10 32       	cpi	r17, 0x20	; 32
    c692:	09 f0       	breq	.+2      	; 0xc696 <drawlevel+0x202>
    c694:	83 cf       	rjmp	.-250    	; 0xc59c <drawlevel+0x108>
    c696:	44 e8       	ldi	r20, 0x84	; 132
    c698:	5b e7       	ldi	r21, 0x7B	; 123
    c69a:	ad cf       	rjmp	.-166    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,black);
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,blackblock);
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    c69c:	13 32       	cpi	r17, 0x23	; 35
    c69e:	09 f4       	brne	.+2      	; 0xc6a2 <drawlevel+0x20e>
    c6a0:	67 c0       	rjmp	.+206    	; 0xc770 <drawlevel+0x2dc>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    c6a2:	14 32       	cpi	r17, 0x24	; 36
    c6a4:	19 f4       	brne	.+6      	; 0xc6ac <drawlevel+0x218>
    c6a6:	4d e5       	ldi	r20, 0x5D	; 93
    c6a8:	5b e7       	ldi	r21, 0x7B	; 123
    c6aa:	a5 cf       	rjmp	.-182    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    c6ac:	15 32       	cpi	r17, 0x25	; 37
    c6ae:	19 f4       	brne	.+6      	; 0xc6b6 <drawlevel+0x222>
    c6b0:	47 e5       	ldi	r20, 0x57	; 87
    c6b2:	5b e7       	ldi	r21, 0x7B	; 123
    c6b4:	a0 cf       	rjmp	.-192    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    c6b6:	16 32       	cpi	r17, 0x26	; 38
    c6b8:	19 f4       	brne	.+6      	; 0xc6c0 <drawlevel+0x22c>
    c6ba:	41 e5       	ldi	r20, 0x51	; 81
    c6bc:	5b e7       	ldi	r21, 0x7B	; 123
    c6be:	9b cf       	rjmp	.-202    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 42 ) DrawMap2(destx ,yi *2  ,trunk0);
    c6c0:	1a 32       	cpi	r17, 0x2A	; 42
    c6c2:	19 f4       	brne	.+6      	; 0xc6ca <drawlevel+0x236>
    c6c4:	4d ef       	ldi	r20, 0xFD	; 253
    c6c6:	5a e7       	ldi	r21, 0x7A	; 122
    c6c8:	96 cf       	rjmp	.-212    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 43 ) DrawMap2(destx ,yi *2  ,trunk1);
    c6ca:	1b 32       	cpi	r17, 0x2B	; 43
    c6cc:	19 f4       	brne	.+6      	; 0xc6d4 <drawlevel+0x240>
    c6ce:	47 ef       	ldi	r20, 0xF7	; 247
    c6d0:	5a e7       	ldi	r21, 0x7A	; 122
    c6d2:	91 cf       	rjmp	.-222    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 44 ) DrawMap2(destx ,yi *2  ,tree0);
    c6d4:	1c 32       	cpi	r17, 0x2C	; 44
    c6d6:	19 f4       	brne	.+6      	; 0xc6de <drawlevel+0x24a>
    c6d8:	41 ef       	ldi	r20, 0xF1	; 241
    c6da:	5a e7       	ldi	r21, 0x7A	; 122
    c6dc:	8c cf       	rjmp	.-232    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 45 ) DrawMap2(destx ,yi *2  ,tree1); 
    c6de:	1d 32       	cpi	r17, 0x2D	; 45
    c6e0:	19 f4       	brne	.+6      	; 0xc6e8 <drawlevel+0x254>
    c6e2:	4b ee       	ldi	r20, 0xEB	; 235
    c6e4:	5a e7       	ldi	r21, 0x7A	; 122
    c6e6:	87 cf       	rjmp	.-242    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 46 ) DrawMap2(destx ,yi *2  ,blackblock); 
    c6e8:	1e 32       	cpi	r17, 0x2E	; 46
    c6ea:	09 f4       	brne	.+2      	; 0xc6ee <drawlevel+0x25a>
    c6ec:	5d cf       	rjmp	.-326    	; 0xc5a8 <drawlevel+0x114>
    if ( c == 39 ) {
    c6ee:	17 32       	cpi	r17, 0x27	; 39
    c6f0:	89 f5       	brne	.+98     	; 0xc754 <drawlevel+0x2c0>
        if(level >= 7){
    c6f2:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c6f6:	8c 2e       	mov	r8, r28
    c6f8:	83 94       	inc	r8
    c6fa:	87 30       	cpi	r24, 0x07	; 7
    c6fc:	a8 f0       	brcs	.+42     	; 0xc728 <drawlevel+0x294>
        DrawMap2(destx ,yi *2 ,drkbridge0);
    c6fe:	4c e0       	ldi	r20, 0x0C	; 12
    c700:	5b e7       	ldi	r21, 0x7B	; 123
    c702:	6c 2f       	mov	r22, r28
    c704:	8b 2d       	mov	r24, r11
    c706:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx +1 ,yi *2  ,drkbridge0);
    c70a:	4c e0       	ldi	r20, 0x0C	; 12
    c70c:	5b e7       	ldi	r21, 0x7B	; 123
    c70e:	6c 2f       	mov	r22, r28
    c710:	80 2f       	mov	r24, r16
    c712:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx  ,yi *2 +1 ,lilblack);
    c716:	45 e7       	ldi	r20, 0x75	; 117
    c718:	5b e7       	ldi	r21, 0x7B	; 123
    c71a:	68 2d       	mov	r22, r8
    c71c:	8b 2d       	mov	r24, r11
    c71e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx +1 ,yi *2 +1 ,lilblack);
    c722:	45 e7       	ldi	r20, 0x75	; 117
    c724:	5b e7       	ldi	r21, 0x7B	; 123
    c726:	14 c0       	rjmp	.+40     	; 0xc750 <drawlevel+0x2bc>
        }
        else{
        DrawMap2(destx ,yi *2 ,bridge0);
    c728:	48 e1       	ldi	r20, 0x18	; 24
    c72a:	5b e7       	ldi	r21, 0x7B	; 123
    c72c:	6c 2f       	mov	r22, r28
    c72e:	8b 2d       	mov	r24, r11
    c730:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx +1 ,yi *2  ,bridge0);
    c734:	48 e1       	ldi	r20, 0x18	; 24
    c736:	5b e7       	ldi	r21, 0x7B	; 123
    c738:	6c 2f       	mov	r22, r28
    c73a:	80 2f       	mov	r24, r16
    c73c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx  ,yi *2 +1 ,nb);
    c740:	48 ee       	ldi	r20, 0xE8	; 232
    c742:	5a e7       	ldi	r21, 0x7A	; 122
    c744:	68 2d       	mov	r22, r8
    c746:	8b 2d       	mov	r24, r11
    c748:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destx +1 ,yi *2 +1 ,nb);
    c74c:	48 ee       	ldi	r20, 0xE8	; 232
    c74e:	5a e7       	ldi	r21, 0x7A	; 122
    c750:	68 2d       	mov	r22, r8
    c752:	38 cf       	rjmp	.-400    	; 0xc5c4 <drawlevel+0x130>
        }
        };
    if ( c == 21 ) {makeWater(destx,yi *2,destx);}
    c754:	15 31       	cpi	r17, 0x15	; 21
    c756:	31 f4       	brne	.+12     	; 0xc764 <drawlevel+0x2d0>
    c758:	a7 01       	movw	r20, r14
    c75a:	be 01       	movw	r22, r28
    c75c:	c7 01       	movw	r24, r14
    c75e:	0e 94 7f 53 	call	0xa6fe	; 0xa6fe <makeWater>
    c762:	4d cf       	rjmp	.-358    	; 0xc5fe <drawlevel+0x16a>

    if ( c == 22 ) DrawMap2(destx ,yi *2  ,cloud0);
    c764:	16 31       	cpi	r17, 0x16	; 22
    c766:	21 f0       	breq	.+8      	; 0xc770 <drawlevel+0x2dc>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,cloud0);
    c768:	17 31       	cpi	r17, 0x17	; 23
    c76a:	11 f0       	breq	.+4      	; 0xc770 <drawlevel+0x2dc>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,cloud0);
    c76c:	18 31       	cpi	r17, 0x18	; 24
    c76e:	31 f4       	brne	.+12     	; 0xc77c <drawlevel+0x2e8>
    c770:	43 e6       	ldi	r20, 0x63	; 99
    c772:	5b e7       	ldi	r21, 0x7B	; 123
    c774:	40 cf       	rjmp	.-384    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 26 ) {
        if(level >= 6)
        {
            if(level == 9)
            {
            DrawMap2(destx ,yi *2  ,black);
    c776:	4e e7       	ldi	r20, 0x7E	; 126
    c778:	5b e7       	ldi	r21, 0x7B	; 123
    c77a:	3d cf       	rjmp	.-390    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 21 ) {makeWater(destx,yi *2,destx);}

    if ( c == 22 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,cloud0);
    if ( c == 25 ) {
    c77c:	19 31       	cpi	r17, 0x19	; 25
    c77e:	39 f4       	brne	.+14     	; 0xc78e <drawlevel+0x2fa>
        if(level >= 6)
    c780:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c784:	86 30       	cpi	r24, 0x06	; 6
    c786:	48 f4       	brcc	.+18     	; 0xc79a <drawlevel+0x306>
            else{
            DrawMap2(destx ,yi *2  ,white);
            }
        }
        else{
        DrawMap2(destx ,yi *2  ,door0);
    c788:	43 ec       	ldi	r20, 0xC3	; 195
    c78a:	5b e7       	ldi	r21, 0x7B	; 123
    c78c:	34 cf       	rjmp	.-408    	; 0xc5f6 <drawlevel+0x162>
        }
    }
    if ( c == 26 ) {
    c78e:	1a 31       	cpi	r17, 0x1A	; 26
    c790:	61 f4       	brne	.+24     	; 0xc7aa <drawlevel+0x316>
        if(level >= 6)
    c792:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c796:	86 30       	cpi	r24, 0x06	; 6
    c798:	28 f0       	brcs	.+10     	; 0xc7a4 <drawlevel+0x310>
        {
            if(level == 9)
    c79a:	89 30       	cpi	r24, 0x09	; 9
    c79c:	61 f3       	breq	.-40     	; 0xc776 <drawlevel+0x2e2>
            {
            DrawMap2(destx ,yi *2  ,black);
            }
            else{
            DrawMap2(destx ,yi *2  ,white);
    c79e:	48 e7       	ldi	r20, 0x78	; 120
    c7a0:	5b e7       	ldi	r21, 0x7B	; 123
    c7a2:	29 cf       	rjmp	.-430    	; 0xc5f6 <drawlevel+0x162>
            }
        }
        else{
        DrawMap2(destx ,yi *2  ,door1);
    c7a4:	4d eb       	ldi	r20, 0xBD	; 189
    c7a6:	5b e7       	ldi	r21, 0x7B	; 123
    c7a8:	26 cf       	rjmp	.-436    	; 0xc5f6 <drawlevel+0x162>
        }
    }
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    c7aa:	1b 31       	cpi	r17, 0x1B	; 27
    c7ac:	19 f4       	brne	.+6      	; 0xc7b4 <drawlevel+0x320>
    c7ae:	47 eb       	ldi	r20, 0xB7	; 183
    c7b0:	5b e7       	ldi	r21, 0x7B	; 123
    c7b2:	21 cf       	rjmp	.-446    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    c7b4:	1c 31       	cpi	r17, 0x1C	; 28
    c7b6:	19 f4       	brne	.+6      	; 0xc7be <drawlevel+0x32a>
    c7b8:	41 eb       	ldi	r20, 0xB1	; 177
    c7ba:	5b e7       	ldi	r21, 0x7B	; 123
    c7bc:	1c cf       	rjmp	.-456    	; 0xc5f6 <drawlevel+0x162>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    c7be:	1d 31       	cpi	r17, 0x1D	; 29
    c7c0:	09 f0       	breq	.+2      	; 0xc7c4 <drawlevel+0x330>
    c7c2:	f5 ce       	rjmp	.-534    	; 0xc5ae <drawlevel+0x11a>
    c7c4:	43 e7       	ldi	r20, 0x73	; 115
    c7c6:	5a e7       	ldi	r21, 0x7A	; 122
    c7c8:	6c 2f       	mov	r22, r28
    c7ca:	8b 2d       	mov	r24, r11
    c7cc:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    c7d0:	43 e7       	ldi	r20, 0x73	; 115
    c7d2:	5a e7       	ldi	r21, 0x7A	; 122
    c7d4:	f6 ce       	rjmp	.-532    	; 0xc5c2 <drawlevel+0x12e>

0000c7d6 <updatelevel>:
//}
    }
    
}
void updatelevel()
{
    c7d6:	cf 92       	push	r12
    c7d8:	df 92       	push	r13
    c7da:	ef 92       	push	r14
    c7dc:	ff 92       	push	r15
    c7de:	0f 93       	push	r16
    c7e0:	1f 93       	push	r17
    c7e2:	cf 93       	push	r28
    c7e4:	df 93       	push	r29
    c7e6:	00 e0       	ldi	r16, 0x00	; 0
    c7e8:	10 e0       	ldi	r17, 0x00	; 0
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c7ea:	e1 2c       	mov	r14, r1
    c7ec:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    c7ee:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c7f2:	81 11       	cpse	r24, r1
    c7f4:	08 c0       	rjmp	.+16     	; 0xc806 <updatelevel+0x30>
    c7f6:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c7fa:	f8 01       	movw	r30, r16
    c7fc:	e9 0f       	add	r30, r25
    c7fe:	f1 1d       	adc	r31, r1
    c800:	e1 57       	subi	r30, 0x71	; 113
    c802:	fa 4c       	sbci	r31, 0xCA	; 202
    c804:	59 c0       	rjmp	.+178    	; 0xc8b8 <updatelevel+0xe2>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    c806:	81 30       	cpi	r24, 0x01	; 1
    c808:	41 f4       	brne	.+16     	; 0xc81a <updatelevel+0x44>
    c80a:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c80e:	f8 01       	movw	r30, r16
    c810:	e9 0f       	add	r30, r25
    c812:	f1 1d       	adc	r31, r1
    c814:	ed 55       	subi	r30, 0x5D	; 93
    c816:	ff 4c       	sbci	r31, 0xCF	; 207
    c818:	4f c0       	rjmp	.+158    	; 0xc8b8 <updatelevel+0xe2>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    c81a:	82 30       	cpi	r24, 0x02	; 2
    c81c:	41 f4       	brne	.+16     	; 0xc82e <updatelevel+0x58>
    c81e:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c822:	f8 01       	movw	r30, r16
    c824:	e9 0f       	add	r30, r25
    c826:	f1 1d       	adc	r31, r1
    c828:	e9 54       	subi	r30, 0x49	; 73
    c82a:	f4 4d       	sbci	r31, 0xD4	; 212
    c82c:	45 c0       	rjmp	.+138    	; 0xc8b8 <updatelevel+0xe2>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    c82e:	83 30       	cpi	r24, 0x03	; 3
    c830:	41 f4       	brne	.+16     	; 0xc842 <updatelevel+0x6c>
    c832:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c836:	f8 01       	movw	r30, r16
    c838:	e9 0f       	add	r30, r25
    c83a:	f1 1d       	adc	r31, r1
    c83c:	e5 53       	subi	r30, 0x35	; 53
    c83e:	f9 4d       	sbci	r31, 0xD9	; 217
    c840:	3b c0       	rjmp	.+118    	; 0xc8b8 <updatelevel+0xe2>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    c842:	84 30       	cpi	r24, 0x04	; 4
    c844:	41 f4       	brne	.+16     	; 0xc856 <updatelevel+0x80>
    c846:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c84a:	f8 01       	movw	r30, r16
    c84c:	e9 0f       	add	r30, r25
    c84e:	f1 1d       	adc	r31, r1
    c850:	e1 52       	subi	r30, 0x21	; 33
    c852:	fe 4d       	sbci	r31, 0xDE	; 222
    c854:	31 c0       	rjmp	.+98     	; 0xc8b8 <updatelevel+0xe2>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    c856:	85 30       	cpi	r24, 0x05	; 5
    c858:	41 f4       	brne	.+16     	; 0xc86a <updatelevel+0x94>
    c85a:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c85e:	f8 01       	movw	r30, r16
    c860:	e9 0f       	add	r30, r25
    c862:	f1 1d       	adc	r31, r1
    c864:	ed 50       	subi	r30, 0x0D	; 13
    c866:	f3 4e       	sbci	r31, 0xE3	; 227
    c868:	27 c0       	rjmp	.+78     	; 0xc8b8 <updatelevel+0xe2>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    c86a:	86 30       	cpi	r24, 0x06	; 6
    c86c:	41 f4       	brne	.+16     	; 0xc87e <updatelevel+0xa8>
    c86e:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c872:	f8 01       	movw	r30, r16
    c874:	e9 0f       	add	r30, r25
    c876:	f1 1d       	adc	r31, r1
    c878:	e9 5f       	subi	r30, 0xF9	; 249
    c87a:	f7 4e       	sbci	r31, 0xE7	; 231
    c87c:	1d c0       	rjmp	.+58     	; 0xc8b8 <updatelevel+0xe2>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    c87e:	87 30       	cpi	r24, 0x07	; 7
    c880:	41 f4       	brne	.+16     	; 0xc892 <updatelevel+0xbc>
    c882:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c886:	f8 01       	movw	r30, r16
    c888:	e9 0f       	add	r30, r25
    c88a:	f1 1d       	adc	r31, r1
    c88c:	e5 5e       	subi	r30, 0xE5	; 229
    c88e:	fc 4e       	sbci	r31, 0xEC	; 236
    c890:	13 c0       	rjmp	.+38     	; 0xc8b8 <updatelevel+0xe2>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    c892:	88 30       	cpi	r24, 0x08	; 8
    c894:	41 f4       	brne	.+16     	; 0xc8a6 <updatelevel+0xd0>
    c896:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c89a:	f8 01       	movw	r30, r16
    c89c:	e9 0f       	add	r30, r25
    c89e:	f1 1d       	adc	r31, r1
    c8a0:	e1 5d       	subi	r30, 0xD1	; 209
    c8a2:	f1 4f       	sbci	r31, 0xF1	; 241
    c8a4:	09 c0       	rjmp	.+18     	; 0xc8b8 <updatelevel+0xe2>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    c8a6:	89 30       	cpi	r24, 0x09	; 9
    c8a8:	41 f4       	brne	.+16     	; 0xc8ba <updatelevel+0xe4>
    c8aa:	90 91 c3 0a 	lds	r25, 0x0AC3	; 0x800ac3 <scrolltiles>
    c8ae:	f8 01       	movw	r30, r16
    c8b0:	e9 0f       	add	r30, r25
    c8b2:	f1 1d       	adc	r31, r1
    c8b4:	ed 5b       	subi	r30, 0xBD	; 189
    c8b6:	f6 4f       	sbci	r31, 0xF6	; 246
    c8b8:	d4 91       	lpm	r29, Z
    xi = yi << 1;
    c8ba:	67 01       	movw	r12, r14
    c8bc:	cc 0c       	add	r12, r12
    c8be:	dd 1c       	adc	r13, r13
    if ( c == 0 ) {
    c8c0:	d1 11       	cpse	r29, r1
    c8c2:	21 c0       	rjmp	.+66     	; 0xc906 <updatelevel+0x130>
        if(level >= 7 || yi == 0 && level != 0)
    c8c4:	87 30       	cpi	r24, 0x07	; 7
    c8c6:	28 f4       	brcc	.+10     	; 0xc8d2 <updatelevel+0xfc>
    c8c8:	e1 14       	cp	r14, r1
    c8ca:	f1 04       	cpc	r15, r1
    c8cc:	29 f4       	brne	.+10     	; 0xc8d8 <updatelevel+0x102>
    c8ce:	88 23       	and	r24, r24
    c8d0:	19 f0       	breq	.+6      	; 0xc8d8 <updatelevel+0x102>
        {
        DrawMap2(destX,xi  ,black);
    c8d2:	4e e7       	ldi	r20, 0x7E	; 126
    c8d4:	5b e7       	ldi	r21, 0x7B	; 123
    c8d6:	02 c0       	rjmp	.+4      	; 0xc8dc <updatelevel+0x106>
        }
        else{
        DrawMap2(destX,xi  ,bigblue0); 
    c8d8:	41 e0       	ldi	r20, 0x01	; 1
    c8da:	5c e7       	ldi	r21, 0x7C	; 124
    c8dc:	6c 2d       	mov	r22, r12
    c8de:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c8e2:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        }
    }
    if ( c == 0 && yi == 12 ) {
    c8e6:	8c e0       	ldi	r24, 0x0C	; 12
    c8e8:	e8 16       	cp	r14, r24
    c8ea:	f1 04       	cpc	r15, r1
    c8ec:	01 f5       	brne	.+64     	; 0xc92e <updatelevel+0x158>
        if(level >= 7)
    c8ee:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c8f2:	61 e0       	ldi	r22, 0x01	; 1
    c8f4:	6c 0d       	add	r22, r12
    c8f6:	87 30       	cpi	r24, 0x07	; 7
    c8f8:	18 f0       	brcs	.+6      	; 0xc900 <updatelevel+0x12a>
        {
        DrawMap2(destX,xi + 1,black);
    c8fa:	4e e7       	ldi	r20, 0x7E	; 126
    c8fc:	5b e7       	ldi	r21, 0x7B	; 123
    c8fe:	13 c0       	rjmp	.+38     	; 0xc926 <updatelevel+0x150>
        }
        else{
        DrawMap2(destX,xi + 1,bigblue0); 
    c900:	41 e0       	ldi	r20, 0x01	; 1
    c902:	5c e7       	ldi	r21, 0x7C	; 124
    c904:	10 c0       	rjmp	.+32     	; 0xc926 <updatelevel+0x150>
        }  
    }

    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    c906:	d1 30       	cpi	r29, 0x01	; 1
    c908:	19 f4       	brne	.+6      	; 0xc910 <updatelevel+0x13a>
    c90a:	4d ee       	ldi	r20, 0xED	; 237
    c90c:	5b e7       	ldi	r21, 0x7B	; 123
    c90e:	0a c0       	rjmp	.+20     	; 0xc924 <updatelevel+0x14e>
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    c910:	d2 30       	cpi	r29, 0x02	; 2
    c912:	19 f4       	brne	.+6      	; 0xc91a <updatelevel+0x144>
    c914:	4b ef       	ldi	r20, 0xFB	; 251
    c916:	5b e7       	ldi	r21, 0x7B	; 123
    c918:	05 c0       	rjmp	.+10     	; 0xc924 <updatelevel+0x14e>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    c91a:	d3 30       	cpi	r29, 0x03	; 3
    c91c:	09 f0       	breq	.+2      	; 0xc920 <updatelevel+0x14a>
    c91e:	58 c0       	rjmp	.+176    	; 0xc9d0 <updatelevel+0x1fa>
    c920:	45 ef       	ldi	r20, 0xF5	; 245
    c922:	5b e7       	ldi	r21, 0x7B	; 123
    c924:	6c 2d       	mov	r22, r12
    c926:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c92a:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        }
    }	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    c92e:	de 31       	cpi	r29, 0x1E	; 30
    c930:	71 f4       	brne	.+28     	; 0xc94e <updatelevel+0x178>
    c932:	4f e6       	ldi	r20, 0x6F	; 111
    c934:	5a e7       	ldi	r21, 0x7A	; 122
    c936:	6c 2d       	mov	r22, r12
    c938:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c93c:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    c940:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c944:	4f e6       	ldi	r20, 0x6F	; 111
    c946:	5a e7       	ldi	r21, 0x7A	; 122
    c948:	6c 2d       	mov	r22, r12
        }
        else{
        DrawMap2(destX,xi  ,bridge0);
        DrawMap2(destX +1 ,xi,bridge0);
        DrawMap2(destX  ,xi + 1 ,nb);
        DrawMap2(destX +1 ,xi + 1 ,nb);
    c94a:	8f 5f       	subi	r24, 0xFF	; 255
    c94c:	2a c0       	rjmp	.+84     	; 0xc9a2 <updatelevel+0x1cc>
    }	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) {
    c94e:	d9 32       	cpi	r29, 0x29	; 41
    c950:	51 f4       	brne	.+20     	; 0xc966 <updatelevel+0x190>
        if(level >= 7)
    c952:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c956:	87 30       	cpi	r24, 0x07	; 7
    c958:	18 f0       	brcs	.+6      	; 0xc960 <updatelevel+0x18a>
        {
        DrawMap2(destX ,xi  ,diamond1);
    c95a:	49 e9       	ldi	r20, 0x99	; 153
    c95c:	5b e7       	ldi	r21, 0x7B	; 123
    c95e:	1e c0       	rjmp	.+60     	; 0xc99c <updatelevel+0x1c6>
        }
        else{
        DrawMap2(destX ,xi  ,diamond0);   
    c960:	4f e9       	ldi	r20, 0x9F	; 159
    c962:	5b e7       	ldi	r21, 0x7B	; 123
    c964:	1b c0       	rjmp	.+54     	; 0xc99c <updatelevel+0x1c6>
        }
    }
    if ( c == 50 ) {
    c966:	d2 33       	cpi	r29, 0x32	; 50
    c968:	a9 f4       	brne	.+42     	; 0xc994 <updatelevel+0x1be>
        if(level >= 7)
    c96a:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    c96e:	87 30       	cpi	r24, 0x07	; 7
    c970:	18 f0       	brcs	.+6      	; 0xc978 <updatelevel+0x1a2>
        {
        DrawMap2(destX,xi  ,black);
    c972:	4e e7       	ldi	r20, 0x7E	; 126
    c974:	5b e7       	ldi	r21, 0x7B	; 123
    c976:	02 c0       	rjmp	.+4      	; 0xc97c <updatelevel+0x1a6>
        }
        else
        {
        DrawMap2(destX,xi  ,bigblue0);
    c978:	41 e0       	ldi	r20, 0x01	; 1
    c97a:	5c e7       	ldi	r21, 0x7C	; 124
    c97c:	6c 2d       	mov	r22, r12
    c97e:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c982:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        }
        setghost(  destX ,xi );
    c986:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c98a:	b6 01       	movw	r22, r12
    c98c:	90 e0       	ldi	r25, 0x00	; 0
    c98e:	0e 94 0d 62 	call	0xc41a	; 0xc41a <setghost>
    c992:	09 c0       	rjmp	.+18     	; 0xc9a6 <updatelevel+0x1d0>
        };
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    c994:	de 33       	cpi	r29, 0x3E	; 62
    c996:	39 f4       	brne	.+14     	; 0xc9a6 <updatelevel+0x1d0>
    c998:	49 e6       	ldi	r20, 0x69	; 105
    c99a:	5b e7       	ldi	r21, 0x7B	; 123
    c99c:	6c 2d       	mov	r22, r12
    c99e:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c9a2:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
{
int xi;
int yi;
char c;
    
    for (yi = 0; yi < 13; yi++)
    c9a6:	8f ef       	ldi	r24, 0xFF	; 255
    c9a8:	e8 1a       	sub	r14, r24
    c9aa:	f8 0a       	sbc	r15, r24
    c9ac:	06 5a       	subi	r16, 0xA6	; 166
    c9ae:	1f 4f       	sbci	r17, 0xFF	; 255
    c9b0:	8d e0       	ldi	r24, 0x0D	; 13
    c9b2:	e8 16       	cp	r14, r24
    c9b4:	f1 04       	cpc	r15, r1
    c9b6:	09 f0       	breq	.+2      	; 0xc9ba <updatelevel+0x1e4>
    c9b8:	1a cf       	rjmp	.-460    	; 0xc7ee <updatelevel+0x18>
        };
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c9ba:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    c9be:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32){
    c9c0:	80 32       	cpi	r24, 0x20	; 32
    c9c2:	18 f4       	brcc	.+6      	; 0xc9ca <updatelevel+0x1f4>
        };
    if ( c == 62 ) DrawMap2(destX ,xi  ,fireground);
    }
//block2 -> block1
    
destX = destX + 2;
    c9c4:	80 93 3a 0a 	sts	0x0A3A, r24	; 0x800a3a <destX>
    c9c8:	f1 c0       	rjmp	.+482    	; 0xcbac <updatelevel+0x3d6>
if(destX>=32){
    destX=0;
    c9ca:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
}
}
    c9ce:	ee c0       	rjmp	.+476    	; 0xcbac <updatelevel+0x3d6>
    }

    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX,xi  ,block0);  
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) {
    c9d0:	d4 30       	cpi	r29, 0x04	; 4
    c9d2:	29 f4       	brne	.+10     	; 0xc9de <updatelevel+0x208>
        if(level >= 7)
    c9d4:	87 30       	cpi	r24, 0x07	; 7
    c9d6:	90 f4       	brcc	.+36     	; 0xc9fc <updatelevel+0x226>
        {
        DrawMap2(destX,xi  ,blackblock);
        }
        else{
        DrawMap2(destX,xi  ,block2); 
    c9d8:	4b ea       	ldi	r20, 0xAB	; 171
    c9da:	5b e7       	ldi	r21, 0x7B	; 123
    c9dc:	df cf       	rjmp	.-66     	; 0xc99c <updatelevel+0x1c6>
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    c9de:	d5 30       	cpi	r29, 0x05	; 5
    c9e0:	19 f4       	brne	.+6      	; 0xc9e8 <updatelevel+0x212>
    c9e2:	45 ee       	ldi	r20, 0xE5	; 229
    c9e4:	5b e7       	ldi	r21, 0x7B	; 123
    c9e6:	da cf       	rjmp	.-76     	; 0xc99c <updatelevel+0x1c6>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    c9e8:	d6 30       	cpi	r29, 0x06	; 6
    c9ea:	59 f4       	brne	.+22     	; 0xca02 <updatelevel+0x22c>
    c9ec:	4d ed       	ldi	r20, 0xDD	; 221
    c9ee:	5b e7       	ldi	r21, 0x7B	; 123
    c9f0:	d5 cf       	rjmp	.-86     	; 0xc99c <updatelevel+0x1c6>
    if ( c == 40 ) DrawMap2(destX ,xi  ,moss);
    if ( c == 12 ) DrawMap2(destX ,xi  ,groundblock0);
    if ( c == 13 ) DrawMap2(destX ,xi  ,groundblock1);
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    c9f2:	d1 32       	cpi	r29, 0x21	; 33
    c9f4:	09 f4       	brne	.+2      	; 0xc9f8 <updatelevel+0x222>
    c9f6:	b5 c0       	rjmp	.+362    	; 0xcb62 <updatelevel+0x38c>
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    c9f8:	d2 32       	cpi	r29, 0x22	; 34
    c9fa:	81 f5       	brne	.+96     	; 0xca5c <updatelevel+0x286>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    if ( c == 42 ) DrawMap2(destX ,xi  ,trunk0);
    if ( c == 43 ) DrawMap2(destX ,xi  ,trunk1);
    if ( c == 44 ) DrawMap2(destX ,xi  ,tree0);
    if ( c == 45 ) DrawMap2(destX ,xi  ,tree1); 
    if ( c == 46 ) DrawMap2(destX ,xi  ,blackblock); 
    c9fc:	4f e6       	ldi	r20, 0x6F	; 111
    c9fe:	5b e7       	ldi	r21, 0x7B	; 123
    ca00:	cd cf       	rjmp	.-102    	; 0xc99c <updatelevel+0x1c6>
        DrawMap2(destX,xi  ,block2); 
        }
    }
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    ca02:	d7 30       	cpi	r29, 0x07	; 7
    ca04:	19 f4       	brne	.+6      	; 0xca0c <updatelevel+0x236>
    ca06:	45 ea       	ldi	r20, 0xA5	; 165
    ca08:	5b e7       	ldi	r21, 0x7B	; 123
    ca0a:	c8 cf       	rjmp	.-112    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    ca0c:	d8 30       	cpi	r29, 0x08	; 8
    ca0e:	19 f4       	brne	.+6      	; 0xca16 <updatelevel+0x240>
    ca10:	45 ed       	ldi	r20, 0xD5	; 213
    ca12:	5b e7       	ldi	r21, 0x7B	; 123
    ca14:	c3 cf       	rjmp	.-122    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    ca16:	d9 30       	cpi	r29, 0x09	; 9
    ca18:	19 f4       	brne	.+6      	; 0xca20 <updatelevel+0x24a>
    ca1a:	4f ec       	ldi	r20, 0xCF	; 207
    ca1c:	5b e7       	ldi	r21, 0x7B	; 123
    ca1e:	be cf       	rjmp	.-132    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    ca20:	da 30       	cpi	r29, 0x0A	; 10
    ca22:	19 f4       	brne	.+6      	; 0xca2a <updatelevel+0x254>
    ca24:	49 ec       	ldi	r20, 0xC9	; 201
    ca26:	5b e7       	ldi	r21, 0x7B	; 123
    ca28:	b9 cf       	rjmp	.-142    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 40 ) DrawMap2(destX ,xi  ,moss);
    ca2a:	d8 32       	cpi	r29, 0x28	; 40
    ca2c:	19 f4       	brne	.+6      	; 0xca34 <updatelevel+0x25e>
    ca2e:	4b e4       	ldi	r20, 0x4B	; 75
    ca30:	5b e7       	ldi	r21, 0x7B	; 123
    ca32:	b4 cf       	rjmp	.-152    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 12 ) DrawMap2(destX ,xi  ,groundblock0);
    ca34:	dc 30       	cpi	r29, 0x0C	; 12
    ca36:	19 f4       	brne	.+6      	; 0xca3e <updatelevel+0x268>
    ca38:	45 e4       	ldi	r20, 0x45	; 69
    ca3a:	5b e7       	ldi	r21, 0x7B	; 123
    ca3c:	af cf       	rjmp	.-162    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 13 ) DrawMap2(destX ,xi  ,groundblock1);
    ca3e:	dd 30       	cpi	r29, 0x0D	; 13
    ca40:	19 f4       	brne	.+6      	; 0xca48 <updatelevel+0x272>
    ca42:	4f e3       	ldi	r20, 0x3F	; 63
    ca44:	5b e7       	ldi	r21, 0x7B	; 123
    ca46:	aa cf       	rjmp	.-172    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 31 ) DrawMap2(destX ,xi  ,fire1);
    ca48:	df 31       	cpi	r29, 0x1F	; 31
    ca4a:	19 f4       	brne	.+6      	; 0xca52 <updatelevel+0x27c>
    ca4c:	4a e8       	ldi	r20, 0x8A	; 138
    ca4e:	5b e7       	ldi	r21, 0x7B	; 123
    ca50:	a5 cf       	rjmp	.-182    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 32 ) DrawMap2(destX ,xi  ,fire2);
    ca52:	d0 32       	cpi	r29, 0x20	; 32
    ca54:	71 f6       	brne	.-100    	; 0xc9f2 <updatelevel+0x21c>
    ca56:	44 e8       	ldi	r20, 0x84	; 132
    ca58:	5b e7       	ldi	r21, 0x7B	; 123
    ca5a:	a0 cf       	rjmp	.-192    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 33 ) DrawMap2(destX ,xi  ,black);
    if ( c == 34 ) DrawMap2(destX ,xi  ,blackblock);
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    ca5c:	d3 32       	cpi	r29, 0x23	; 35
    ca5e:	19 f4       	brne	.+6      	; 0xca66 <updatelevel+0x290>
    ca60:	43 e6       	ldi	r20, 0x63	; 99
    ca62:	5b e7       	ldi	r21, 0x7B	; 123
    ca64:	9b cf       	rjmp	.-202    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    ca66:	d4 32       	cpi	r29, 0x24	; 36
    ca68:	19 f4       	brne	.+6      	; 0xca70 <updatelevel+0x29a>
    ca6a:	4d e5       	ldi	r20, 0x5D	; 93
    ca6c:	5b e7       	ldi	r21, 0x7B	; 123
    ca6e:	96 cf       	rjmp	.-212    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    ca70:	d5 32       	cpi	r29, 0x25	; 37
    ca72:	19 f4       	brne	.+6      	; 0xca7a <updatelevel+0x2a4>
    ca74:	47 e5       	ldi	r20, 0x57	; 87
    ca76:	5b e7       	ldi	r21, 0x7B	; 123
    ca78:	91 cf       	rjmp	.-222    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    ca7a:	d6 32       	cpi	r29, 0x26	; 38
    ca7c:	19 f4       	brne	.+6      	; 0xca84 <updatelevel+0x2ae>
    ca7e:	41 e5       	ldi	r20, 0x51	; 81
    ca80:	5b e7       	ldi	r21, 0x7B	; 123
    ca82:	8c cf       	rjmp	.-232    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 42 ) DrawMap2(destX ,xi  ,trunk0);
    ca84:	da 32       	cpi	r29, 0x2A	; 42
    ca86:	19 f4       	brne	.+6      	; 0xca8e <updatelevel+0x2b8>
    ca88:	4d ef       	ldi	r20, 0xFD	; 253
    ca8a:	5a e7       	ldi	r21, 0x7A	; 122
    ca8c:	87 cf       	rjmp	.-242    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 43 ) DrawMap2(destX ,xi  ,trunk1);
    ca8e:	db 32       	cpi	r29, 0x2B	; 43
    ca90:	19 f4       	brne	.+6      	; 0xca98 <updatelevel+0x2c2>
    ca92:	47 ef       	ldi	r20, 0xF7	; 247
    ca94:	5a e7       	ldi	r21, 0x7A	; 122
    ca96:	82 cf       	rjmp	.-252    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 44 ) DrawMap2(destX ,xi  ,tree0);
    ca98:	dc 32       	cpi	r29, 0x2C	; 44
    ca9a:	19 f4       	brne	.+6      	; 0xcaa2 <updatelevel+0x2cc>
    ca9c:	41 ef       	ldi	r20, 0xF1	; 241
    ca9e:	5a e7       	ldi	r21, 0x7A	; 122
    caa0:	7d cf       	rjmp	.-262    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 45 ) DrawMap2(destX ,xi  ,tree1); 
    caa2:	dd 32       	cpi	r29, 0x2D	; 45
    caa4:	19 f4       	brne	.+6      	; 0xcaac <updatelevel+0x2d6>
    caa6:	4b ee       	ldi	r20, 0xEB	; 235
    caa8:	5a e7       	ldi	r21, 0x7A	; 122
    caaa:	78 cf       	rjmp	.-272    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 46 ) DrawMap2(destX ,xi  ,blackblock); 
    caac:	de 32       	cpi	r29, 0x2E	; 46
    caae:	09 f4       	brne	.+2      	; 0xcab2 <updatelevel+0x2dc>
    cab0:	a5 cf       	rjmp	.-182    	; 0xc9fc <updatelevel+0x226>
    if ( c == 39 ) {
    cab2:	d7 32       	cpi	r29, 0x27	; 39
    cab4:	e9 f5       	brne	.+122    	; 0xcb30 <updatelevel+0x35a>
        if(level >= 7)
    cab6:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    caba:	c1 e0       	ldi	r28, 0x01	; 1
    cabc:	cc 0d       	add	r28, r12
    cabe:	87 30       	cpi	r24, 0x07	; 7
    cac0:	d8 f0       	brcs	.+54     	; 0xcaf8 <updatelevel+0x322>
        {
        DrawMap2(destX,xi  ,drkbridge0);
    cac2:	4c e0       	ldi	r20, 0x0C	; 12
    cac4:	5b e7       	ldi	r21, 0x7B	; 123
    cac6:	6c 2d       	mov	r22, r12
    cac8:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cacc:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX +1 ,xi,drkbridge0);
    cad0:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cad4:	4c e0       	ldi	r20, 0x0C	; 12
    cad6:	5b e7       	ldi	r21, 0x7B	; 123
    cad8:	6c 2d       	mov	r22, r12
    cada:	8f 5f       	subi	r24, 0xFF	; 255
    cadc:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX  ,xi + 1 ,lilblack);
    cae0:	45 e7       	ldi	r20, 0x75	; 117
    cae2:	5b e7       	ldi	r21, 0x7B	; 123
    cae4:	6c 2f       	mov	r22, r28
    cae6:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    caea:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX +1 ,xi + 1 ,lilblack);
    caee:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    caf2:	45 e7       	ldi	r20, 0x75	; 117
    caf4:	5b e7       	ldi	r21, 0x7B	; 123
    caf6:	1a c0       	rjmp	.+52     	; 0xcb2c <updatelevel+0x356>
        }
        else{
        DrawMap2(destX,xi  ,bridge0);
    caf8:	48 e1       	ldi	r20, 0x18	; 24
    cafa:	5b e7       	ldi	r21, 0x7B	; 123
    cafc:	6c 2d       	mov	r22, r12
    cafe:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb02:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX +1 ,xi,bridge0);
    cb06:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb0a:	48 e1       	ldi	r20, 0x18	; 24
    cb0c:	5b e7       	ldi	r21, 0x7B	; 123
    cb0e:	6c 2d       	mov	r22, r12
    cb10:	8f 5f       	subi	r24, 0xFF	; 255
    cb12:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX  ,xi + 1 ,nb);
    cb16:	48 ee       	ldi	r20, 0xE8	; 232
    cb18:	5a e7       	ldi	r21, 0x7A	; 122
    cb1a:	6c 2f       	mov	r22, r28
    cb1c:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb20:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
        DrawMap2(destX +1 ,xi + 1 ,nb);
    cb24:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb28:	48 ee       	ldi	r20, 0xE8	; 232
    cb2a:	5a e7       	ldi	r21, 0x7A	; 122
    cb2c:	6c 2f       	mov	r22, r28
    cb2e:	0d cf       	rjmp	.-486    	; 0xc94a <updatelevel+0x174>
        }
        };
    if ( c == 21 ) {
    cb30:	d5 31       	cpi	r29, 0x15	; 21
    cb32:	49 f4       	brne	.+18     	; 0xcb46 <updatelevel+0x370>
        makeWater(destX,xi,30);
    cb34:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb38:	4e e1       	ldi	r20, 0x1E	; 30
    cb3a:	50 e0       	ldi	r21, 0x00	; 0
    cb3c:	b6 01       	movw	r22, r12
    cb3e:	90 e0       	ldi	r25, 0x00	; 0
    cb40:	0e 94 7f 53 	call	0xa6fe	; 0xa6fe <makeWater>
    cb44:	30 cf       	rjmp	.-416    	; 0xc9a6 <updatelevel+0x1d0>
    }
    if ( c == 25 ) {
    cb46:	d9 31       	cpi	r29, 0x19	; 25
    cb48:	79 f4       	brne	.+30     	; 0xcb68 <updatelevel+0x392>
        if(level >= 6)
    cb4a:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    cb4e:	86 30       	cpi	r24, 0x06	; 6
    cb50:	18 f4       	brcc	.+6      	; 0xcb58 <updatelevel+0x382>
            else{
                DrawMap2(destX ,xi,black);  
            }
        }
        else{
        DrawMap2(destX ,xi,door0);
    cb52:	43 ec       	ldi	r20, 0xC3	; 195
    cb54:	5b e7       	ldi	r21, 0x7B	; 123
    cb56:	22 cf       	rjmp	.-444    	; 0xc99c <updatelevel+0x1c6>
        }
    }	
    if ( c == 26 ) {
        if(level >= 6)
        {
            if(level == 9)
    cb58:	89 30       	cpi	r24, 0x09	; 9
    cb5a:	19 f4       	brne	.+6      	; 0xcb62 <updatelevel+0x38c>
            {
                DrawMap2(destX ,xi,white);
    cb5c:	48 e7       	ldi	r20, 0x78	; 120
    cb5e:	5b e7       	ldi	r21, 0x7B	; 123
    cb60:	1d cf       	rjmp	.-454    	; 0xc99c <updatelevel+0x1c6>
            }
            else{
                DrawMap2(destX ,xi,black);  
    cb62:	4e e7       	ldi	r20, 0x7E	; 126
    cb64:	5b e7       	ldi	r21, 0x7B	; 123
    cb66:	1a cf       	rjmp	.-460    	; 0xc99c <updatelevel+0x1c6>
        }
        else{
        DrawMap2(destX ,xi,door0);
        }
    }	
    if ( c == 26 ) {
    cb68:	da 31       	cpi	r29, 0x1A	; 26
    cb6a:	39 f4       	brne	.+14     	; 0xcb7a <updatelevel+0x3a4>
        if(level >= 6)
    cb6c:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    cb70:	86 30       	cpi	r24, 0x06	; 6
    cb72:	90 f7       	brcc	.-28     	; 0xcb58 <updatelevel+0x382>
            else{
                DrawMap2(destX ,xi,black);  
            }
        }
        else{
        DrawMap2(destX ,xi,door1);
    cb74:	4d eb       	ldi	r20, 0xBD	; 189
    cb76:	5b e7       	ldi	r21, 0x7B	; 123
    cb78:	11 cf       	rjmp	.-478    	; 0xc99c <updatelevel+0x1c6>
        }
    }	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    cb7a:	db 31       	cpi	r29, 0x1B	; 27
    cb7c:	19 f4       	brne	.+6      	; 0xcb84 <updatelevel+0x3ae>
    cb7e:	47 eb       	ldi	r20, 0xB7	; 183
    cb80:	5b e7       	ldi	r21, 0x7B	; 123
    cb82:	0c cf       	rjmp	.-488    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    cb84:	dc 31       	cpi	r29, 0x1C	; 28
    cb86:	19 f4       	brne	.+6      	; 0xcb8e <updatelevel+0x3b8>
    cb88:	41 eb       	ldi	r20, 0xB1	; 177
    cb8a:	5b e7       	ldi	r21, 0x7B	; 123
    cb8c:	07 cf       	rjmp	.-498    	; 0xc99c <updatelevel+0x1c6>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    cb8e:	dd 31       	cpi	r29, 0x1D	; 29
    cb90:	09 f0       	breq	.+2      	; 0xcb94 <updatelevel+0x3be>
    cb92:	cd ce       	rjmp	.-614    	; 0xc92e <updatelevel+0x158>
    cb94:	43 e7       	ldi	r20, 0x73	; 115
    cb96:	5a e7       	ldi	r21, 0x7A	; 122
    cb98:	6c 2d       	mov	r22, r12
    cb9a:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cb9e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    cba2:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    cba6:	43 e7       	ldi	r20, 0x73	; 115
    cba8:	5a e7       	ldi	r21, 0x7A	; 122
    cbaa:	ce ce       	rjmp	.-612    	; 0xc948 <updatelevel+0x172>
    
destX = destX + 2;
if(destX>=32){
    destX=0;
}
}
    cbac:	df 91       	pop	r29
    cbae:	cf 91       	pop	r28
    cbb0:	1f 91       	pop	r17
    cbb2:	0f 91       	pop	r16
    cbb4:	ff 90       	pop	r15
    cbb6:	ef 90       	pop	r14
    cbb8:	df 90       	pop	r13
    cbba:	cf 90       	pop	r12
    cbbc:	08 95       	ret

0000cbbe <initmonster>:
}


void initmonster()
{
ghost.onscreen = false;    
    cbbe:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <ghost+0x9>
MonsteronScreen = false;
    cbc2:	10 92 1a 0a 	sts	0x0A1A, r1	; 0x800a1a <MonsteronScreen>
    cbc6:	08 95       	ret

0000cbc8 <movelevel>:
}

void movelevel()
{
if (player2.x >= 150 && (scrolltiles + 15 <= levelwidth ) || player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    cbc8:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    cbcc:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    cbd0:	86 39       	cpi	r24, 0x96	; 150
    cbd2:	91 05       	cpc	r25, r1
    cbd4:	44 f4       	brge	.+16     	; 0xcbe6 <movelevel+0x1e>
    cbd6:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    cbda:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    cbde:	86 39       	cpi	r24, 0x96	; 150
    cbe0:	91 05       	cpc	r25, r1
    cbe2:	0c f4       	brge	.+2      	; 0xcbe6 <movelevel+0x1e>
    cbe4:	4f c0       	rjmp	.+158    	; 0xcc84 <movelevel+0xbc>
    cbe6:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    cbea:	90 e0       	ldi	r25, 0x00	; 0
    cbec:	8c 34       	cpi	r24, 0x4C	; 76
    cbee:	91 05       	cpc	r25, r1
    cbf0:	0c f0       	brlt	.+2      	; 0xcbf4 <movelevel+0x2c>
    cbf2:	48 c0       	rjmp	.+144    	; 0xcc84 <movelevel+0xbc>
Scroll(1 ,0);   
    cbf4:	60 e0       	ldi	r22, 0x00	; 0
    cbf6:	81 e0       	ldi	r24, 0x01	; 1
    cbf8:	0e 94 2e 4f 	call	0x9e5c	; 0x9e5c <Scroll>
Levelx  = Levelx + 1;
    cbfc:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cc00:	8f 5f       	subi	r24, 0xFF	; 255
    cc02:	80 93 8c 0a 	sts	0x0A8C, r24	; 0x800a8c <Levelx>
player.x = player.x - 1;
    cc06:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    cc0a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    cc0e:	01 97       	sbiw	r24, 0x01	; 1
    cc10:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    cc14:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player2.x = player2.x -1;  
    cc18:	80 91 1b 0a 	lds	r24, 0x0A1B	; 0x800a1b <player2>
    cc1c:	90 91 1c 0a 	lds	r25, 0x0A1C	; 0x800a1c <player2+0x1>
    cc20:	01 97       	sbiw	r24, 0x01	; 1
    cc22:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    cc26:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
levMovedCnt = levMovedCnt + 1;
    cc2a:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <levMovedCnt>
    cc2e:	90 91 b4 09 	lds	r25, 0x09B4	; 0x8009b4 <levMovedCnt+0x1>
    cc32:	01 96       	adiw	r24, 0x01	; 1
    cc34:	90 93 b4 09 	sts	0x09B4, r25	; 0x8009b4 <levMovedCnt+0x1>
    cc38:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <levMovedCnt>

scrollmonster(-1);
    cc3c:	8f ef       	ldi	r24, 0xFF	; 255
    cc3e:	9f ef       	ldi	r25, 0xFF	; 255
    cc40:	0e 94 fa 61 	call	0xc3f4	; 0xc3f4 <scrollmonster>
if ( Levelx >= 16 )
    cc44:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cc48:	80 31       	cpi	r24, 0x10	; 16
    cc4a:	e0 f0       	brcs	.+56     	; 0xcc84 <movelevel+0xbc>
{
for(int i = 0; i <= waterspwncnt - 1; i++)
    cc4c:	40 91 98 08 	lds	r20, 0x0898	; 0x800898 <waterspwncnt>
    cc50:	50 91 99 08 	lds	r21, 0x0899	; 0x800899 <waterspwncnt+0x1>
    cc54:	e2 e8       	ldi	r30, 0x82	; 130
    cc56:	f9 e0       	ldi	r31, 0x09	; 9
    cc58:	80 e0       	ldi	r24, 0x00	; 0
    cc5a:	90 e0       	ldi	r25, 0x00	; 0
    cc5c:	84 17       	cp	r24, r20
    cc5e:	95 07       	cpc	r25, r21
    cc60:	44 f4       	brge	.+16     	; 0xcc72 <movelevel+0xaa>
{
    waterscrolls[i] = waterscrolls[i] - 1;
    cc62:	20 81       	ld	r18, Z
    cc64:	31 81       	ldd	r19, Z+1	; 0x01
    cc66:	21 50       	subi	r18, 0x01	; 1
    cc68:	31 09       	sbc	r19, r1
    cc6a:	21 93       	st	Z+, r18
    cc6c:	31 93       	st	Z+, r19
levMovedCnt = levMovedCnt + 1;

scrollmonster(-1);
if ( Levelx >= 16 )
{
for(int i = 0; i <= waterspwncnt - 1; i++)
    cc6e:	01 96       	adiw	r24, 0x01	; 1
    cc70:	f5 cf       	rjmp	.-22     	; 0xcc5c <movelevel+0x94>
{
    waterscrolls[i] = waterscrolls[i] - 1;
}
updatelevel();
    cc72:	0e 94 eb 63 	call	0xc7d6	; 0xc7d6 <updatelevel>
scrolltiles++; 
    cc76:	80 91 c3 0a 	lds	r24, 0x0AC3	; 0x800ac3 <scrolltiles>
    cc7a:	8f 5f       	subi	r24, 0xFF	; 255
    cc7c:	80 93 c3 0a 	sts	0x0AC3, r24	; 0x800ac3 <scrolltiles>
Levelx = 0;    
    cc80:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
    cc84:	08 95       	ret

0000cc86 <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    cc86:	cf 92       	push	r12
    cc88:	df 92       	push	r13
    cc8a:	ef 92       	push	r14
    cc8c:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    cc8e:	2c e3       	ldi	r18, 0x3C	; 60
    cc90:	30 e0       	ldi	r19, 0x00	; 0
    cc92:	40 e0       	ldi	r20, 0x00	; 0
    cc94:	50 e0       	ldi	r21, 0x00	; 0
    cc96:	0e 94 fa 6b 	call	0xd7f4	; 0xd7f4 <__udivmodsi4>
    tmp = 99 - tmp ;
    cc9a:	83 e6       	ldi	r24, 0x63	; 99
    cc9c:	c8 2e       	mov	r12, r24
    cc9e:	d1 2c       	mov	r13, r1
    cca0:	e1 2c       	mov	r14, r1
    cca2:	f1 2c       	mov	r15, r1
    cca4:	c2 1a       	sub	r12, r18
    cca6:	d3 0a       	sbc	r13, r19
    cca8:	e4 0a       	sbc	r14, r20
    ccaa:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    ccac:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    ccb0:	84 2f       	mov	r24, r20
    ccb2:	90 e0       	ldi	r25, 0x00	; 0
    ccb4:	a0 e0       	ldi	r26, 0x00	; 0
    ccb6:	b0 e0       	ldi	r27, 0x00	; 0
    ccb8:	c8 16       	cp	r12, r24
    ccba:	d9 06       	cpc	r13, r25
    ccbc:	ea 06       	cpc	r14, r26
    ccbe:	fb 06       	cpc	r15, r27
    ccc0:	10 f0       	brcs	.+4      	; 0xccc6 <updatetime+0x40>
    ccc2:	41 11       	cpse	r20, r1
    ccc4:	09 c0       	rjmp	.+18     	; 0xccd8 <updatetime+0x52>
    ccc6:	50 e0       	ldi	r21, 0x00	; 0
    ccc8:	22 e0       	ldi	r18, 0x02	; 2
    ccca:	30 e0       	ldi	r19, 0x00	; 0
    cccc:	60 e0       	ldi	r22, 0x00	; 0
    ccce:	70 e0       	ldi	r23, 0x00	; 0
    ccd0:	8a e1       	ldi	r24, 0x1A	; 26
    ccd2:	90 e0       	ldi	r25, 0x00	; 0
    ccd4:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
    leveltime = tmp;
    ccd8:	c0 92 89 0a 	sts	0x0A89, r12	; 0x800a89 <leveltime>
    if (leveltime == 0 ) timeisup = true;
    ccdc:	c1 10       	cpse	r12, r1
    ccde:	03 c0       	rjmp	.+6      	; 0xcce6 <updatetime+0x60>
    cce0:	81 e0       	ldi	r24, 0x01	; 1
    cce2:	80 93 60 09 	sts	0x0960, r24	; 0x800960 <timeisup>
    
}
    cce6:	ff 90       	pop	r15
    cce8:	ef 90       	pop	r14
    ccea:	df 90       	pop	r13
    ccec:	cf 90       	pop	r12
    ccee:	08 95       	ret

0000ccf0 <playintro>:

void playintro()
{
    ccf0:	0f 93       	push	r16
    ccf2:	cf 93       	push	r28
    ccf4:	df 93       	push	r29

introplaying = true;
    ccf6:	c1 e0       	ldi	r28, 0x01	; 1
    ccf8:	c0 93 7f 09 	sts	0x097F, r28	; 0x80097f <introplaying>
waterspwncnt = 0;
    ccfc:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    cd00:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    cd04:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    cd08:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
Levelx = 0;
    cd0c:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    cd10:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player2.speed = 1;
    cd14:	21 e0       	ldi	r18, 0x01	; 1
    cd16:	30 e0       	ldi	r19, 0x00	; 0
    cd18:	30 93 20 0a 	sts	0x0A20, r19	; 0x800a20 <player2+0x5>
    cd1c:	20 93 1f 0a 	sts	0x0A1F, r18	; 0x800a1f <player2+0x4>
player2.x = 38;
    cd20:	86 e2       	ldi	r24, 0x26	; 38
    cd22:	90 e0       	ldi	r25, 0x00	; 0
    cd24:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    cd28:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
player2.y = 191;
    cd2c:	8f eb       	ldi	r24, 0xBF	; 191
    cd2e:	90 e0       	ldi	r25, 0x00	; 0
    cd30:	90 93 1e 0a 	sts	0x0A1E, r25	; 0x800a1e <player2+0x3>
    cd34:	80 93 1d 0a 	sts	0x0A1D, r24	; 0x800a1d <player2+0x2>
player2.touchground = true;
    cd38:	c0 93 2c 0a 	sts	0x0A2C, r28	; 0x800a2c <player2+0x11>
player2.jumping = false;
    cd3c:	10 92 2f 0a 	sts	0x0A2F, r1	; 0x800a2f <player2+0x14>
player2.jumpreleased = true;
    cd40:	c0 93 30 0a 	sts	0x0A30, r28	; 0x800a30 <player2+0x15>
player.speed = 1;
    cd44:	30 93 66 09 	sts	0x0966, r19	; 0x800966 <player+0x5>
    cd48:	20 93 65 09 	sts	0x0965, r18	; 0x800965 <player+0x4>
player.x = 8;
    cd4c:	28 e0       	ldi	r18, 0x08	; 8
    cd4e:	30 e0       	ldi	r19, 0x00	; 0
    cd50:	30 93 62 09 	sts	0x0962, r19	; 0x800962 <player+0x1>
    cd54:	20 93 61 09 	sts	0x0961, r18	; 0x800961 <player>
player.y = 191;
    cd58:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    cd5c:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
player.touchground = true;
    cd60:	c0 93 72 09 	sts	0x0972, r28	; 0x800972 <player+0x11>
player.jumping = false;
    cd64:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x14>
player.jumpreleased = true;
    cd68:	c0 93 76 09 	sts	0x0976, r28	; 0x800976 <player+0x15>
player.killer = false;
    cd6c:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <player+0x19>
player.bananaCount = 0;
    cd70:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <player+0x1c>
player2.bananaCount = 0;
    cd74:	10 92 37 0a 	sts	0x0A37, r1	; 0x800a37 <player2+0x1c>
initlevel();
    cd78:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
initmonster();
    cd7c:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <initmonster>
setheadline();    
    cd80:	0e 94 ad 5c 	call	0xb95a	; 0xb95a <setheadline>
drawlevel(Levelx);
    cd84:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    cd88:	90 e0       	ldi	r25, 0x00	; 0
    cd8a:	0e 94 4a 62 	call	0xc494	; 0xc494 <drawlevel>
setheadline();
    cd8e:	0e 94 ad 5c 	call	0xb95a	; 0xb95a <setheadline>
MapSprite2(0 ,pac0 ,0);
    cd92:	40 e0       	ldi	r20, 0x00	; 0
    cd94:	69 ee       	ldi	r22, 0xE9	; 233
    cd96:	76 e4       	ldi	r23, 0x46	; 70
    cd98:	80 e0       	ldi	r24, 0x00	; 0
    cd9a:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
MapSprite2(spriteInd ,run0,0);
    cd9e:	40 e0       	ldi	r20, 0x00	; 0
    cda0:	65 ec       	ldi	r22, 0xC5	; 197
    cda2:	76 e4       	ldi	r23, 0x46	; 70
    cda4:	8a e0       	ldi	r24, 0x0A	; 10
    cda6:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    cdaa:	40 e0       	ldi	r20, 0x00	; 0
    cdac:	61 ed       	ldi	r22, 0xD1	; 209
    cdae:	76 e4       	ldi	r23, 0x46	; 70
    cdb0:	86 e0       	ldi	r24, 0x06	; 6
    cdb2:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
score = 0;
    cdb6:	10 92 b8 09 	sts	0x09B8, r1	; 0x8009b8 <score+0x1>
    cdba:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <score>
leveltime = 99;
    cdbe:	83 e6       	ldi	r24, 0x63	; 99
    cdc0:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <leveltime>
time = 0;
    cdc4:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    cdc8:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    cdcc:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    cdd0:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
lives = 3;    
    cdd4:	83 e0       	ldi	r24, 0x03	; 3
    cdd6:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
level = 0;
    cdda:	10 92 cf 09 	sts	0x09CF, r1	; 0x8009cf <level>
bonus = 0;
    cdde:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    cde2:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
scrolltiles = 0;
    cde6:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
Screen.scrollX = 0;
    cdea:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
destX = 0;
    cdee:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
Levelx = 0;
    cdf2:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
setheadline();
    cdf6:	0e 94 ad 5c 	call	0xb95a	; 0xb95a <setheadline>
player.direction = 'r';
    cdfa:	92 e7       	ldi	r25, 0x72	; 114
    cdfc:	90 93 6f 09 	sts	0x096F, r25	; 0x80096f <player+0xe>
player.action = 'w';
    ce00:	87 e7       	ldi	r24, 0x77	; 119
    ce02:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <player+0xd>
player.facing = 0;
    ce06:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
    ce0a:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xb>
player.ximpulse = 1; 
    ce0e:	c0 93 73 09 	sts	0x0973, r28	; 0x800973 <player+0x12>
player2.direction = 'r';
    ce12:	90 93 29 0a 	sts	0x0A29, r25	; 0x800a29 <player2+0xe>
player2.action = 'w';
    ce16:	80 93 28 0a 	sts	0x0A28, r24	; 0x800a28 <player2+0xd>
player2.facing = 0;
    ce1a:	10 92 27 0a 	sts	0x0A27, r1	; 0x800a27 <player2+0xc>
    ce1e:	10 92 26 0a 	sts	0x0A26, r1	; 0x800a26 <player2+0xb>
player2.ximpulse = 1; 
    ce22:	c0 93 2d 0a 	sts	0x0A2D, r28	; 0x800a2d <player2+0x12>
FadeIn(1, true);
    ce26:	61 e0       	ldi	r22, 0x01	; 1
    ce28:	81 e0       	ldi	r24, 0x01	; 1
    ce2a:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ))
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    ce2e:	da e6       	ldi	r29, 0x6A	; 106
player2.direction = 'r';
player2.action = 'w';
player2.facing = 0;
player2.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    ce30:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    ce34:	88 23       	and	r24, r24
    ce36:	09 f4       	brne	.+2      	; 0xce3a <playintro+0x14a>
    ce38:	1d c1       	rjmp	.+570    	; 0xd074 <playintro+0x384>
{
moveplayer();  
    ce3a:	0e 94 66 5e 	call	0xbccc	; 0xbccc <moveplayer>
moveplayer2();
    ce3e:	0e 94 fb 59 	call	0xb3f6	; 0xb3f6 <moveplayer2>
movemonster(); 
    ce42:	0e 94 08 5d 	call	0xba10	; 0xba10 <movemonster>
WaitVsync(1); 
    ce46:	81 e0       	ldi	r24, 0x01	; 1
    ce48:	90 e0       	ldi	r25, 0x00	; 0
    ce4a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
drawmonster();       
    ce4e:	0e 94 ba 5c 	call	0xb974	; 0xb974 <drawmonster>
movelevel();
    ce52:	0e 94 e4 65 	call	0xcbc8	; 0xcbc8 <movelevel>
drawplayer();
    ce56:	0e 94 b2 50 	call	0xa164	; 0xa164 <drawplayer>
drawplayer2();   
    ce5a:	0e 94 48 51 	call	0xa290	; 0xa290 <drawplayer2>
//drawlevel(Levelx);  
updateWater(); 
    ce5e:	0e 94 a0 53 	call	0xa740	; 0xa740 <updateWater>
  



player.ximpulse = 1;
    ce62:	c0 93 73 09 	sts	0x0973, r28	; 0x800973 <player+0x12>
player2.ximpulse = 1;
    ce66:	c0 93 2d 0a 	sts	0x0A2D, r28	; 0x800a2d <player2+0x12>
if ( time <= 210 && introplaying ){
    ce6a:	40 91 16 0a 	lds	r20, 0x0A16	; 0x800a16 <time>
    ce6e:	50 91 17 0a 	lds	r21, 0x0A17	; 0x800a17 <time+0x1>
    ce72:	60 91 18 0a 	lds	r22, 0x0A18	; 0x800a18 <time+0x2>
    ce76:	70 91 19 0a 	lds	r23, 0x0A19	; 0x800a19 <time+0x3>
    ce7a:	43 3d       	cpi	r20, 0xD3	; 211
    ce7c:	51 05       	cpc	r21, r1
    ce7e:	61 05       	cpc	r22, r1
    ce80:	71 05       	cpc	r23, r1
    ce82:	40 f4       	brcc	.+16     	; 0xce94 <playintro+0x1a4>
    ce84:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    ce88:	88 23       	and	r24, r24
    ce8a:	21 f0       	breq	.+8      	; 0xce94 <playintro+0x1a4>
    player.ximpulse = 0; 
    ce8c:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x12>
    player2.ximpulse = 0;
    ce90:	10 92 2d 0a 	sts	0x0A2D, r1	; 0x800a2d <player2+0x12>
};
    lx = 12 + destX;
    ce94:	80 91 3a 0a 	lds	r24, 0x0A3A	; 0x800a3a <destX>
    ce98:	90 e0       	ldi	r25, 0x00	; 0
    ce9a:	9c 01       	movw	r18, r24
    ce9c:	24 5f       	subi	r18, 0xF4	; 244
    ce9e:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    cea0:	20 32       	cpi	r18, 0x20	; 32
    cea2:	31 05       	cpc	r19, r1
    cea4:	2c f4       	brge	.+10     	; 0xceb0 <playintro+0x1c0>
player2.ximpulse = 1;
if ( time <= 210 && introplaying ){
    player.ximpulse = 0; 
    player2.ximpulse = 0;
};
    lx = 12 + destX;
    cea6:	30 93 8f 0a 	sts	0x0A8F, r19	; 0x800a8f <lx+0x1>
    ceaa:	20 93 8e 0a 	sts	0x0A8E, r18	; 0x800a8e <lx>
    ceae:	05 c0       	rjmp	.+10     	; 0xceba <playintro+0x1ca>
    if (lx >= 32 ) lx = lx - 32;
    ceb0:	44 97       	sbiw	r24, 0x14	; 20
    ceb2:	90 93 8f 0a 	sts	0x0A8F, r25	; 0x800a8f <lx+0x1>
    ceb6:	80 93 8e 0a 	sts	0x0A8E, r24	; 0x800a8e <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    ceba:	4c 33       	cpi	r20, 0x3C	; 60
    cebc:	51 05       	cpc	r21, r1
    cebe:	61 05       	cpc	r22, r1
    cec0:	71 05       	cpc	r23, r1
    cec2:	29 f0       	breq	.+10     	; 0xcece <playintro+0x1de>
    cec4:	40 3f       	cpi	r20, 0xF0	; 240
    cec6:	51 05       	cpc	r21, r1
    cec8:	61 05       	cpc	r22, r1
    ceca:	71 05       	cpc	r23, r1
    cecc:	59 f4       	brne	.+22     	; 0xcee4 <playintro+0x1f4>
    cece:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    ced2:	88 23       	and	r24, r24
    ced4:	39 f0       	breq	.+14     	; 0xcee4 <playintro+0x1f4>
    ced6:	45 e9       	ldi	r20, 0x95	; 149
    ced8:	5a e7       	ldi	r21, 0x7A	; 122
    ceda:	62 e1       	ldi	r22, 0x12	; 18
    cedc:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cee0:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    cee4:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    cee8:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    ceec:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    cef0:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    cef4:	86 39       	cpi	r24, 0x96	; 150
    cef6:	91 05       	cpc	r25, r1
    cef8:	a1 05       	cpc	r26, r1
    cefa:	b1 05       	cpc	r27, r1
    cefc:	31 f0       	breq	.+12     	; 0xcf0a <playintro+0x21a>
    cefe:	8a 34       	cpi	r24, 0x4A	; 74
    cf00:	91 40       	sbci	r25, 0x01	; 1
    cf02:	a1 05       	cpc	r26, r1
    cf04:	b1 05       	cpc	r27, r1
    cf06:	09 f0       	breq	.+2      	; 0xcf0a <playintro+0x21a>
    cf08:	44 c0       	rjmp	.+136    	; 0xcf92 <playintro+0x2a2>
    cf0a:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    cf0e:	88 23       	and	r24, r24
    cf10:	09 f4       	brne	.+2      	; 0xcf14 <playintro+0x224>
    cf12:	3f c0       	rjmp	.+126    	; 0xcf92 <playintro+0x2a2>
    DrawMap2(  lx,  18 ,nb );   
    cf14:	48 ee       	ldi	r20, 0xE8	; 232
    cf16:	5a e7       	ldi	r21, 0x7A	; 122
    cf18:	62 e1       	ldi	r22, 0x12	; 18
    cf1a:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf1e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    cf22:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf26:	48 ee       	ldi	r20, 0xE8	; 232
    cf28:	5a e7       	ldi	r21, 0x7A	; 122
    cf2a:	62 e1       	ldi	r22, 0x12	; 18
    cf2c:	8f 5f       	subi	r24, 0xFF	; 255
    cf2e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    cf32:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf36:	48 ee       	ldi	r20, 0xE8	; 232
    cf38:	5a e7       	ldi	r21, 0x7A	; 122
    cf3a:	62 e1       	ldi	r22, 0x12	; 18
    cf3c:	8e 5f       	subi	r24, 0xFE	; 254
    cf3e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    cf42:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf46:	48 ee       	ldi	r20, 0xE8	; 232
    cf48:	5a e7       	ldi	r21, 0x7A	; 122
    cf4a:	62 e1       	ldi	r22, 0x12	; 18
    cf4c:	8d 5f       	subi	r24, 0xFD	; 253
    cf4e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    cf52:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf56:	48 ee       	ldi	r20, 0xE8	; 232
    cf58:	5a e7       	ldi	r21, 0x7A	; 122
    cf5a:	62 e1       	ldi	r22, 0x12	; 18
    cf5c:	8c 5f       	subi	r24, 0xFC	; 252
    cf5e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    cf62:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf66:	48 ee       	ldi	r20, 0xE8	; 232
    cf68:	5a e7       	ldi	r21, 0x7A	; 122
    cf6a:	62 e1       	ldi	r22, 0x12	; 18
    cf6c:	8b 5f       	subi	r24, 0xFB	; 251
    cf6e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    cf72:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf76:	48 ee       	ldi	r20, 0xE8	; 232
    cf78:	5a e7       	ldi	r21, 0x7A	; 122
    cf7a:	62 e1       	ldi	r22, 0x12	; 18
    cf7c:	8a 5f       	subi	r24, 0xFA	; 250
    cf7e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    cf82:	80 91 8e 0a 	lds	r24, 0x0A8E	; 0x800a8e <lx>
    cf86:	48 ee       	ldi	r20, 0xE8	; 232
    cf88:	5a e7       	ldi	r21, 0x7A	; 122
    cf8a:	62 e1       	ldi	r22, 0x12	; 18
    cf8c:	89 5f       	subi	r24, 0xF9	; 249
    cf8e:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
    
};


if  (( player.x == 119 && scrolltiles == 16 && Levelx == 2 ) || ( player.x == 119 && scrolltiles == 25 && Levelx == 10 ) || ( player.x == 119 && scrolltiles == 34 && Levelx == 10 )  || ( player.x == 119 && scrolltiles == 44 && Levelx == 10 ))
    cf92:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    cf96:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    cf9a:	87 37       	cpi	r24, 0x77	; 119
    cf9c:	91 05       	cpc	r25, r1
    cf9e:	11 f5       	brne	.+68     	; 0xcfe4 <playintro+0x2f4>
    cfa0:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    cfa4:	20 31       	cpi	r18, 0x10	; 16
    cfa6:	29 f4       	brne	.+10     	; 0xcfb2 <playintro+0x2c2>
    cfa8:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    cfac:	22 30       	cpi	r18, 0x02	; 2
    cfae:	d1 f4       	brne	.+52     	; 0xcfe4 <playintro+0x2f4>
    cfb0:	0a c0       	rjmp	.+20     	; 0xcfc6 <playintro+0x2d6>
    cfb2:	29 31       	cpi	r18, 0x19	; 25
    cfb4:	21 f0       	breq	.+8      	; 0xcfbe <playintro+0x2ce>
    cfb6:	22 32       	cpi	r18, 0x22	; 34
    cfb8:	11 f0       	breq	.+4      	; 0xcfbe <playintro+0x2ce>
    cfba:	2c 32       	cpi	r18, 0x2C	; 44
    cfbc:	99 f4       	brne	.+38     	; 0xcfe4 <playintro+0x2f4>
    cfbe:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    cfc2:	2a 30       	cpi	r18, 0x0A	; 10
    cfc4:	79 f4       	brne	.+30     	; 0xcfe4 <playintro+0x2f4>
{
//DrawMap2(  lx,  18 ,press0 );
player.action = 'j';
    cfc6:	d0 93 6e 09 	sts	0x096E, r29	; 0x80096e <player+0xd>
player.yimpulse = 0;
    cfca:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
player.jumping = true;
    cfce:	c0 93 75 09 	sts	0x0975, r28	; 0x800975 <player+0x14>
player.touchground = false;
    cfd2:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x11>
player.jumpreleased = false;
    cfd6:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <player+0x15>
player.jumpcounter++ ; 
    cfda:	20 91 7b 09 	lds	r18, 0x097B	; 0x80097b <player+0x1a>
    cfde:	2f 5f       	subi	r18, 0xFF	; 255
    cfe0:	20 93 7b 09 	sts	0x097B, r18	; 0x80097b <player+0x1a>
};
if  (( player2.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player2.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player2.x == 149 && scrolltiles == 42 && Levelx == 10 ))
    cfe4:	20 91 1b 0a 	lds	r18, 0x0A1B	; 0x800a1b <player2>
    cfe8:	30 91 1c 0a 	lds	r19, 0x0A1C	; 0x800a1c <player2+0x1>
    cfec:	25 39       	cpi	r18, 0x95	; 149
    cfee:	31 05       	cpc	r19, r1
    cff0:	d9 f4       	brne	.+54     	; 0xd028 <playintro+0x338>
    cff2:	20 91 c3 0a 	lds	r18, 0x0AC3	; 0x800ac3 <scrolltiles>
    cff6:	27 31       	cpi	r18, 0x17	; 23
    cff8:	21 f0       	breq	.+8      	; 0xd002 <playintro+0x312>
    cffa:	20 32       	cpi	r18, 0x20	; 32
    cffc:	11 f0       	breq	.+4      	; 0xd002 <playintro+0x312>
    cffe:	2a 32       	cpi	r18, 0x2A	; 42
    d000:	99 f4       	brne	.+38     	; 0xd028 <playintro+0x338>
    d002:	20 91 8c 0a 	lds	r18, 0x0A8C	; 0x800a8c <Levelx>
    d006:	2a 30       	cpi	r18, 0x0A	; 10
    d008:	79 f4       	brne	.+30     	; 0xd028 <playintro+0x338>
{
player2.action = 'j';
    d00a:	d0 93 28 0a 	sts	0x0A28, r29	; 0x800a28 <player2+0xd>
player2.yimpulse = 0;
    d00e:	10 92 2e 0a 	sts	0x0A2E, r1	; 0x800a2e <player2+0x13>
player2.jumping = true;
    d012:	c0 93 2f 0a 	sts	0x0A2F, r28	; 0x800a2f <player2+0x14>
player2.touchground = false;
    d016:	10 92 2c 0a 	sts	0x0A2C, r1	; 0x800a2c <player2+0x11>
player2.jumpreleased = false;
    d01a:	10 92 30 0a 	sts	0x0A30, r1	; 0x800a30 <player2+0x15>
player2.jumpcounter++ ; 
    d01e:	20 91 35 0a 	lds	r18, 0x0A35	; 0x800a35 <player2+0x1a>
    d022:	2f 5f       	subi	r18, 0xFF	; 255
    d024:	20 93 35 0a 	sts	0x0A35, r18	; 0x800a35 <player2+0x1a>
}  
if ( player.x  == 160 ) time = 0;   
    d028:	80 3a       	cpi	r24, 0xA0	; 160
    d02a:	91 05       	cpc	r25, r1
    d02c:	49 f4       	brne	.+18     	; 0xd040 <playintro+0x350>
    d02e:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d032:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d036:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d03a:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
    d03e:	f8 ce       	rjmp	.-528    	; 0xce30 <playintro+0x140>
if ( player.x >= 206 ) {
    d040:	8e 3c       	cpi	r24, 0xCE	; 206
    d042:	91 05       	cpc	r25, r1
    d044:	2c f0       	brlt	.+10     	; 0xd050 <playintro+0x360>
player.ximpulse = 0; 
    d046:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x12>
player2.ximpulse = 0;
    d04a:	10 92 2d 0a 	sts	0x0A2D, r1	; 0x800a2d <player2+0x12>
    d04e:	04 c0       	rjmp	.+8      	; 0xd058 <playintro+0x368>
};
if ( player.x >= 180 && time > 420 ) { 
    d050:	84 3b       	cpi	r24, 0xB4	; 180
    d052:	91 05       	cpc	r25, r1
    d054:	0c f4       	brge	.+2      	; 0xd058 <playintro+0x368>
    d056:	ec ce       	rjmp	.-552    	; 0xce30 <playintro+0x140>
    d058:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    d05c:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    d060:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    d064:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    d068:	85 3a       	cpi	r24, 0xA5	; 165
    d06a:	91 40       	sbci	r25, 0x01	; 1
    d06c:	a1 05       	cpc	r26, r1
    d06e:	b1 05       	cpc	r27, r1
    d070:	08 f4       	brcc	.+2      	; 0xd074 <playintro+0x384>
    d072:	de ce       	rjmp	.-580    	; 0xce30 <playintro+0x140>
                                 
                                      break; };
};

FadeOut(5,true); 
    d074:	61 e0       	ldi	r22, 0x01	; 1
    d076:	85 e0       	ldi	r24, 0x05	; 5
    d078:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
player.x = 8;
    d07c:	88 e0       	ldi	r24, 0x08	; 8
    d07e:	90 e0       	ldi	r25, 0x00	; 0
    d080:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    d084:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player.y = 191;
    d088:	cf eb       	ldi	r28, 0xBF	; 191
    d08a:	d0 e0       	ldi	r29, 0x00	; 0
    d08c:	d0 93 64 09 	sts	0x0964, r29	; 0x800964 <player+0x3>
    d090:	c0 93 63 09 	sts	0x0963, r28	; 0x800963 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,2);
    d094:	02 e0       	ldi	r16, 0x02	; 2
    d096:	22 e0       	ldi	r18, 0x02	; 2
    d098:	4a ea       	ldi	r20, 0xAA	; 170
    d09a:	61 e0       	ldi	r22, 0x01	; 1
    d09c:	80 e0       	ldi	r24, 0x00	; 0
    d09e:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>

player2.x = 38;
    d0a2:	86 e2       	ldi	r24, 0x26	; 38
    d0a4:	90 e0       	ldi	r25, 0x00	; 0
    d0a6:	90 93 1c 0a 	sts	0x0A1C, r25	; 0x800a1c <player2+0x1>
    d0aa:	80 93 1b 0a 	sts	0x0A1B, r24	; 0x800a1b <player2>
player2.y = 191;
    d0ae:	d0 93 1e 0a 	sts	0x0A1E, r29	; 0x800a1e <player2+0x3>
    d0b2:	c0 93 1d 0a 	sts	0x0A1D, r28	; 0x800a1d <player2+0x2>
MoveSprite(spriteInd ,player2.x -7 ,player2.y - 21  ,2 ,2);
    d0b6:	22 e0       	ldi	r18, 0x02	; 2
    d0b8:	4a ea       	ldi	r20, 0xAA	; 170
    d0ba:	6f e1       	ldi	r22, 0x1F	; 31
    d0bc:	8a e0       	ldi	r24, 0x0A	; 10
    d0be:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>

}
    d0c2:	df 91       	pop	r29
    d0c4:	cf 91       	pop	r28
    d0c6:	0f 91       	pop	r16
    d0c8:	08 95       	ret

0000d0ca <showgetready>:

void showgetready()
{
    d0ca:	0f 93       	push	r16
FadeOut(0, true);
    d0cc:	61 e0       	ldi	r22, 0x01	; 1
    d0ce:	80 e0       	ldi	r24, 0x00	; 0
    d0d0:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
Screen.scrollX = 0;
    d0d4:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d0d8:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
printheadline();
    d0dc:	0e 94 ac 54 	call	0xa958	; 0xa958 <printheadline>
printtileint( 26 ,0,99,2); 
    d0e0:	22 e0       	ldi	r18, 0x02	; 2
    d0e2:	30 e0       	ldi	r19, 0x00	; 0
    d0e4:	43 e6       	ldi	r20, 0x63	; 99
    d0e6:	50 e0       	ldi	r21, 0x00	; 0
    d0e8:	60 e0       	ldi	r22, 0x00	; 0
    d0ea:	70 e0       	ldi	r23, 0x00	; 0
    d0ec:	8a e1       	ldi	r24, 0x1A	; 26
    d0ee:	90 e0       	ldi	r25, 0x00	; 0
    d0f0:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    d0f4:	02 e0       	ldi	r16, 0x02	; 2
    d0f6:	22 e0       	ldi	r18, 0x02	; 2
    d0f8:	4c ee       	ldi	r20, 0xEC	; 236
    d0fa:	6c ee       	ldi	r22, 0xEC	; 236
    d0fc:	80 e0       	ldi	r24, 0x00	; 0
    d0fe:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20 ,2 ,2);
    d102:	22 e0       	ldi	r18, 0x02	; 2
    d104:	4c ee       	ldi	r20, 0xEC	; 236
    d106:	6e ec       	ldi	r22, 0xCE	; 206
    d108:	8a e0       	ldi	r24, 0x0A	; 10
    d10a:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d10e:	22 e0       	ldi	r18, 0x02	; 2
    d110:	4c ee       	ldi	r20, 0xEC	; 236
    d112:	6c ee       	ldi	r22, 0xEC	; 236
    d114:	86 e0       	ldi	r24, 0x06	; 6
    d116:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    d11a:	49 ea       	ldi	r20, 0xA9	; 169
    d11c:	5a e7       	ldi	r21, 0x7A	; 122
    d11e:	6a e0       	ldi	r22, 0x0A	; 10
    d120:	8b e0       	ldi	r24, 0x0B	; 11
    d122:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
WaitVsync(1);  
    d126:	81 e0       	ldi	r24, 0x01	; 1
    d128:	90 e0       	ldi	r25, 0x00	; 0
    d12a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
FadeIn(0, true);
    d12e:	61 e0       	ldi	r22, 0x01	; 1
    d130:	80 e0       	ldi	r24, 0x00	; 0
    d132:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>
time = 0;
    d136:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d13a:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d13e:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d142:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
while ( time < 120 )
    d146:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    d14a:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    d14e:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    d152:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    d156:	88 37       	cpi	r24, 0x78	; 120
    d158:	91 05       	cpc	r25, r1
    d15a:	a1 05       	cpc	r26, r1
    d15c:	b1 05       	cpc	r27, r1
    d15e:	80 f4       	brcc	.+32     	; 0xd180 <showgetready+0xb6>
{ time++;    
    d160:	01 96       	adiw	r24, 0x01	; 1
    d162:	a1 1d       	adc	r26, r1
    d164:	b1 1d       	adc	r27, r1
    d166:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <time>
    d16a:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <time+0x1>
    d16e:	a0 93 18 0a 	sts	0x0A18, r26	; 0x800a18 <time+0x2>
    d172:	b0 93 19 0a 	sts	0x0A19, r27	; 0x800a19 <time+0x3>
WaitVsync(1);    
    d176:	81 e0       	ldi	r24, 0x01	; 1
    d178:	90 e0       	ldi	r25, 0x00	; 0
    d17a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    d17e:	e3 cf       	rjmp	.-58     	; 0xd146 <showgetready+0x7c>
};
 FadeOut(0, true);    
    d180:	61 e0       	ldi	r22, 0x01	; 1
    d182:	80 e0       	ldi	r24, 0x00	; 0
};
    d184:	0f 91       	pop	r16
time = 0;
while ( time < 120 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d186:	0c 94 69 50 	jmp	0xa0d2	; 0xa0d2 <FadeOut>

0000d18a <showgameover>:
};

void showgameover()
{
    d18a:	0f 93       	push	r16
    
FadeOut(0, true);
    d18c:	61 e0       	ldi	r22, 0x01	; 1
    d18e:	80 e0       	ldi	r24, 0x00	; 0
    d190:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
Screen.scrollX = 0;
    d194:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d198:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    d19c:	02 e0       	ldi	r16, 0x02	; 2
    d19e:	22 e0       	ldi	r18, 0x02	; 2
    d1a0:	4c ee       	ldi	r20, 0xEC	; 236
    d1a2:	6c ee       	ldi	r22, 0xEC	; 236
    d1a4:	80 e0       	ldi	r24, 0x00	; 0
    d1a6:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d1aa:	22 e0       	ldi	r18, 0x02	; 2
    d1ac:	4c ee       	ldi	r20, 0xEC	; 236
    d1ae:	6c ee       	ldi	r22, 0xEC	; 236
    d1b0:	86 e0       	ldi	r24, 0x06	; 6
    d1b2:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    d1b6:	22 e0       	ldi	r18, 0x02	; 2
    d1b8:	4c ee       	ldi	r20, 0xEC	; 236
    d1ba:	6e ec       	ldi	r22, 0xCE	; 206
    d1bc:	8a e0       	ldi	r24, 0x0A	; 10
    d1be:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    d1c2:	4c e8       	ldi	r20, 0x8C	; 140
    d1c4:	5a e7       	ldi	r21, 0x7A	; 122
    d1c6:	6a e0       	ldi	r22, 0x0A	; 10
    d1c8:	8b e0       	ldi	r24, 0x0B	; 11
    d1ca:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
WaitVsync(1);  
    d1ce:	81 e0       	ldi	r24, 0x01	; 1
    d1d0:	90 e0       	ldi	r25, 0x00	; 0
    d1d2:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
FadeIn(0, true);
    d1d6:	61 e0       	ldi	r22, 0x01	; 1
    d1d8:	80 e0       	ldi	r24, 0x00	; 0
    d1da:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>
time = 0;
    d1de:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d1e2:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d1e6:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d1ea:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
while ( time < 240 )
    d1ee:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    d1f2:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    d1f6:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    d1fa:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    d1fe:	80 3f       	cpi	r24, 0xF0	; 240
    d200:	91 05       	cpc	r25, r1
    d202:	a1 05       	cpc	r26, r1
    d204:	b1 05       	cpc	r27, r1
    d206:	80 f4       	brcc	.+32     	; 0xd228 <showgameover+0x9e>
{ time++;    
    d208:	01 96       	adiw	r24, 0x01	; 1
    d20a:	a1 1d       	adc	r26, r1
    d20c:	b1 1d       	adc	r27, r1
    d20e:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <time>
    d212:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <time+0x1>
    d216:	a0 93 18 0a 	sts	0x0A18, r26	; 0x800a18 <time+0x2>
    d21a:	b0 93 19 0a 	sts	0x0A19, r27	; 0x800a19 <time+0x3>
WaitVsync(1);    
    d21e:	81 e0       	ldi	r24, 0x01	; 1
    d220:	90 e0       	ldi	r25, 0x00	; 0
    d222:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    d226:	e3 cf       	rjmp	.-58     	; 0xd1ee <showgameover+0x64>
};
 FadeOut(0, true);    
    d228:	61 e0       	ldi	r22, 0x01	; 1
    d22a:	80 e0       	ldi	r24, 0x00	; 0
};
    d22c:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d22e:	0c 94 69 50 	jmp	0xa0d2	; 0xa0d2 <FadeOut>

0000d232 <showtimesup>:
};
void showtimesup()
{
    d232:	0f 93       	push	r16
FadeOut(0, true);
    d234:	61 e0       	ldi	r22, 0x01	; 1
    d236:	80 e0       	ldi	r24, 0x00	; 0
    d238:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
Screen.scrollX = 0;
    d23c:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d240:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    d244:	02 e0       	ldi	r16, 0x02	; 2
    d246:	22 e0       	ldi	r18, 0x02	; 2
    d248:	4c ee       	ldi	r20, 0xEC	; 236
    d24a:	6c ee       	ldi	r22, 0xEC	; 236
    d24c:	80 e0       	ldi	r24, 0x00	; 0
    d24e:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d252:	22 e0       	ldi	r18, 0x02	; 2
    d254:	4c ee       	ldi	r20, 0xEC	; 236
    d256:	6c ee       	ldi	r22, 0xEC	; 236
    d258:	86 e0       	ldi	r24, 0x06	; 6
    d25a:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    d25e:	22 e0       	ldi	r18, 0x02	; 2
    d260:	4c ee       	ldi	r20, 0xEC	; 236
    d262:	6e ec       	ldi	r22, 0xCE	; 206
    d264:	8a e0       	ldi	r24, 0x0A	; 10
    d266:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    d26a:	44 e8       	ldi	r20, 0x84	; 132
    d26c:	5a e7       	ldi	r21, 0x7A	; 122
    d26e:	6a e0       	ldi	r22, 0x0A	; 10
    d270:	8b e0       	ldi	r24, 0x0B	; 11
    d272:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
WaitVsync(1);  
    d276:	81 e0       	ldi	r24, 0x01	; 1
    d278:	90 e0       	ldi	r25, 0x00	; 0
    d27a:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
FadeIn(0, true);
    d27e:	61 e0       	ldi	r22, 0x01	; 1
    d280:	80 e0       	ldi	r24, 0x00	; 0
    d282:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>
time = 0;
    d286:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d28a:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d28e:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d292:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
while ( time < 240 )
    d296:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    d29a:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    d29e:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    d2a2:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    d2a6:	80 3f       	cpi	r24, 0xF0	; 240
    d2a8:	91 05       	cpc	r25, r1
    d2aa:	a1 05       	cpc	r26, r1
    d2ac:	b1 05       	cpc	r27, r1
    d2ae:	80 f4       	brcc	.+32     	; 0xd2d0 <showtimesup+0x9e>
{ time++;    
    d2b0:	01 96       	adiw	r24, 0x01	; 1
    d2b2:	a1 1d       	adc	r26, r1
    d2b4:	b1 1d       	adc	r27, r1
    d2b6:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <time>
    d2ba:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <time+0x1>
    d2be:	a0 93 18 0a 	sts	0x0A18, r26	; 0x800a18 <time+0x2>
    d2c2:	b0 93 19 0a 	sts	0x0A19, r27	; 0x800a19 <time+0x3>
WaitVsync(1);    
    d2c6:	81 e0       	ldi	r24, 0x01	; 1
    d2c8:	90 e0       	ldi	r25, 0x00	; 0
    d2ca:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    d2ce:	e3 cf       	rjmp	.-58     	; 0xd296 <showtimesup+0x64>
};
 FadeOut(0, true);    
    d2d0:	61 e0       	ldi	r22, 0x01	; 1
    d2d2:	80 e0       	ldi	r24, 0x00	; 0
};
    d2d4:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d2d6:	0c 94 69 50 	jmp	0xa0d2	; 0xa0d2 <FadeOut>

0000d2da <showcongratulation>:
};
void showcongratulation()
{
    d2da:	0f 93       	push	r16
FadeOut(0, true);
    d2dc:	61 e0       	ldi	r22, 0x01	; 1
    d2de:	80 e0       	ldi	r24, 0x00	; 0
    d2e0:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
Screen.scrollX = 0;
    d2e4:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
initlevel();
    d2e8:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,2);
    d2ec:	02 e0       	ldi	r16, 0x02	; 2
    d2ee:	22 e0       	ldi	r18, 0x02	; 2
    d2f0:	4c ee       	ldi	r20, 0xEC	; 236
    d2f2:	6c ee       	ldi	r22, 0xEC	; 236
    d2f4:	80 e0       	ldi	r24, 0x00	; 0
    d2f6:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d2fa:	22 e0       	ldi	r18, 0x02	; 2
    d2fc:	4c ee       	ldi	r20, 0xEC	; 236
    d2fe:	6c ee       	ldi	r22, 0xEC	; 236
    d300:	86 e0       	ldi	r24, 0x06	; 6
    d302:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd ,-50 ,-20  ,2 ,2);
    d306:	22 e0       	ldi	r18, 0x02	; 2
    d308:	4c ee       	ldi	r20, 0xEC	; 236
    d30a:	6e ec       	ldi	r22, 0xCE	; 206
    d30c:	8a e0       	ldi	r24, 0x0A	; 10
    d30e:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
DrawMap2(  9, 10  ,congra0 );
    d312:	47 e7       	ldi	r20, 0x77	; 119
    d314:	5a e7       	ldi	r21, 0x7A	; 122
    d316:	6a e0       	ldi	r22, 0x0A	; 10
    d318:	89 e0       	ldi	r24, 0x09	; 9
    d31a:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
DrawMap2(9,12, score0 );  
    d31e:	41 ec       	ldi	r20, 0xC1	; 193
    d320:	5a e7       	ldi	r21, 0x7A	; 122
    d322:	6c e0       	ldi	r22, 0x0C	; 12
    d324:	89 e0       	ldi	r24, 0x09	; 9
    d326:	0e 94 c2 4f 	call	0x9f84	; 0x9f84 <DrawMap>
printtileint( 13 ,12,score,4); 
    d32a:	40 91 b7 09 	lds	r20, 0x09B7	; 0x8009b7 <score>
    d32e:	50 91 b8 09 	lds	r21, 0x09B8	; 0x8009b8 <score+0x1>
    d332:	24 e0       	ldi	r18, 0x04	; 4
    d334:	30 e0       	ldi	r19, 0x00	; 0
    d336:	6c e0       	ldi	r22, 0x0C	; 12
    d338:	70 e0       	ldi	r23, 0x00	; 0
    d33a:	8d e0       	ldi	r24, 0x0D	; 13
    d33c:	90 e0       	ldi	r25, 0x00	; 0
    d33e:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
FadeIn(0, true);
    d342:	61 e0       	ldi	r22, 0x01	; 1
    d344:	80 e0       	ldi	r24, 0x00	; 0
    d346:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>
time = 0;
    d34a:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d34e:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d352:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d356:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
while ( time < 600 )
    d35a:	80 91 16 0a 	lds	r24, 0x0A16	; 0x800a16 <time>
    d35e:	90 91 17 0a 	lds	r25, 0x0A17	; 0x800a17 <time+0x1>
    d362:	a0 91 18 0a 	lds	r26, 0x0A18	; 0x800a18 <time+0x2>
    d366:	b0 91 19 0a 	lds	r27, 0x0A19	; 0x800a19 <time+0x3>
    d36a:	88 35       	cpi	r24, 0x58	; 88
    d36c:	22 e0       	ldi	r18, 0x02	; 2
    d36e:	92 07       	cpc	r25, r18
    d370:	a1 05       	cpc	r26, r1
    d372:	b1 05       	cpc	r27, r1
    d374:	80 f4       	brcc	.+32     	; 0xd396 <showcongratulation+0xbc>
{ time++;    
    d376:	01 96       	adiw	r24, 0x01	; 1
    d378:	a1 1d       	adc	r26, r1
    d37a:	b1 1d       	adc	r27, r1
    d37c:	80 93 16 0a 	sts	0x0A16, r24	; 0x800a16 <time>
    d380:	90 93 17 0a 	sts	0x0A17, r25	; 0x800a17 <time+0x1>
    d384:	a0 93 18 0a 	sts	0x0A18, r26	; 0x800a18 <time+0x2>
    d388:	b0 93 19 0a 	sts	0x0A19, r27	; 0x800a19 <time+0x3>
WaitVsync(1);    
    d38c:	81 e0       	ldi	r24, 0x01	; 1
    d38e:	90 e0       	ldi	r25, 0x00	; 0
    d390:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    d394:	e2 cf       	rjmp	.-60     	; 0xd35a <showcongratulation+0x80>
};
 FadeOut(0, true);    
    d396:	61 e0       	ldi	r22, 0x01	; 1
    d398:	80 e0       	ldi	r24, 0x00	; 0
};
    d39a:	0f 91       	pop	r16
time = 0;
while ( time < 600 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d39c:	0c 94 69 50 	jmp	0xa0d2	; 0xa0d2 <FadeOut>

0000d3a0 <main>:
};
int main(){ 
ClearVram();    
    d3a0:	0e 94 5f 43 	call	0x86be	; 0x86be <ClearVram>
FadeOut(0, true);
    d3a4:	61 e0       	ldi	r22, 0x01	; 1
    d3a6:	80 e0       	ldi	r24, 0x00	; 0
    d3a8:	0e 94 69 50 	call	0xa0d2	; 0xa0d2 <FadeOut>
SetTileTable(uMTiles);
    d3ac:	8f ee       	ldi	r24, 0xEF	; 239
    d3ae:	96 e4       	ldi	r25, 0x46	; 70
    d3b0:	0e 94 7a 43 	call	0x86f4	; 0x86f4 <SetTileTable>
SetSpritesTileTable(uMSprites);
    d3b4:	83 e3       	ldi	r24, 0x33	; 51
    d3b6:	90 e4       	ldi	r25, 0x40	; 64
    d3b8:	0e 94 5a 43 	call	0x86b4	; 0x86b4 <SetSpritesTileTable>
InitMusicPlayer(patches);
    d3bc:	84 ec       	ldi	r24, 0xC4	; 196
    d3be:	9e e3       	ldi	r25, 0x3E	; 62
    d3c0:	0e 94 e4 44 	call	0x89c8	; 0x89c8 <InitMusicPlayer>
SetMasterVolume(250);
    d3c4:	8a ef       	ldi	r24, 0xFA	; 250
    d3c6:	0e 94 3d 48 	call	0x907a	; 0x907a <SetMasterVolume>
Screen.scrollY=0;  
    d3ca:	10 92 5d 08 	sts	0x085D, r1	; 0x80085d <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    d3ce:	10 92 59 08 	sts	0x0859, r1	; 0x800859 <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    d3d2:	8e e9       	ldi	r24, 0x9E	; 158
    d3d4:	90 e5       	ldi	r25, 0x50	; 80
    d3d6:	0e 94 b4 43 	call	0x8768	; 0x8768 <SetUserPostVsyncCallback>
waterspwncnt = 0;
banspwncnt = 0;
introplaying = true; 
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    d3da:	28 e0       	ldi	r18, 0x08	; 8
    d3dc:	e2 2e       	mov	r14, r18
    d3de:	f1 2c       	mov	r15, r1
player.y = 191;
    d3e0:	cf eb       	ldi	r28, 0xBF	; 191
    d3e2:	d0 e0       	ldi	r29, 0x00	; 0
player2.x = 38;
    d3e4:	36 e2       	ldi	r19, 0x26	; 38
    d3e6:	c3 2e       	mov	r12, r19
    d3e8:	d1 2c       	mov	r13, r1
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
player2.y = 191;
    d3ea:	4f eb       	ldi	r20, 0xBF	; 191
    d3ec:	a4 2e       	mov	r10, r20
    d3ee:	b1 2c       	mov	r11, r1
Levelx = 0;
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
    d3f0:	56 e2       	ldi	r21, 0x26	; 38
    d3f2:	25 2e       	mov	r2, r21
    d3f4:	31 2c       	mov	r3, r1

updatetime(time);
    if ( player.y > 240) 
    {
    lives++;
    player.x = 30;
    d3f6:	6e e1       	ldi	r22, 0x1E	; 30
    d3f8:	46 2e       	mov	r4, r22
    d3fa:	51 2c       	mov	r5, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
waterspwncnt = 0;
    d3fc:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d400:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d404:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d408:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
introplaying = true; 
    d40c:	81 e0       	ldi	r24, 0x01	; 1
    d40e:	80 93 7f 09 	sts	0x097F, r24	; 0x80097f <introplaying>
Levelx = 0;
    d412:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    d416:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player.x = 8;
    d41a:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    d41e:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    d422:	d0 93 64 09 	sts	0x0964, r29	; 0x800964 <player+0x3>
    d426:	c0 93 63 09 	sts	0x0963, r28	; 0x800963 <player+0x2>
player2.x = 38;
    d42a:	d0 92 1c 0a 	sts	0x0A1C, r13	; 0x800a1c <player2+0x1>
    d42e:	c0 92 1b 0a 	sts	0x0A1B, r12	; 0x800a1b <player2>
player2.y = 191;
    d432:	d0 93 1e 0a 	sts	0x0A1E, r29	; 0x800a1e <player2+0x3>
    d436:	c0 93 1d 0a 	sts	0x0A1D, r28	; 0x800a1d <player2+0x2>
destX = 0;
    d43a:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
level = 0;
    d43e:	10 92 cf 09 	sts	0x09CF, r1	; 0x8009cf <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d442:	02 e0       	ldi	r16, 0x02	; 2
    d444:	22 e0       	ldi	r18, 0x02	; 2
    d446:	4c ee       	ldi	r20, 0xEC	; 236
    d448:	6c ee       	ldi	r22, 0xEC	; 236
    d44a:	86 e0       	ldi	r24, 0x06	; 6
    d44c:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2);  
    d450:	22 e0       	ldi	r18, 0x02	; 2
    d452:	4c ee       	ldi	r20, 0xEC	; 236
    d454:	6c ee       	ldi	r22, 0xEC	; 236
    d456:	80 e0       	ldi	r24, 0x00	; 0
    d458:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);
    d45c:	22 e0       	ldi	r18, 0x02	; 2
    d45e:	4c ee       	ldi	r20, 0xEC	; 236
    d460:	6e ec       	ldi	r22, 0xCE	; 206
    d462:	8a e0       	ldi	r24, 0x0A	; 10
    d464:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
while(introplaying) playintro();
    d468:	80 91 7f 09 	lds	r24, 0x097F	; 0x80097f <introplaying>
    d46c:	88 23       	and	r24, r24
    d46e:	19 f0       	breq	.+6      	; 0xd476 <main+0xd6>
    d470:	0e 94 78 66 	call	0xccf0	; 0xccf0 <playintro>
    d474:	f9 cf       	rjmp	.-14     	; 0xd468 <main+0xc8>
    
score = 0;
    d476:	10 92 b8 09 	sts	0x09B8, r1	; 0x8009b8 <score+0x1>
    d47a:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <score>
lives = 3; 
    d47e:	83 e0       	ldi	r24, 0x03	; 3
    d480:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
level = startlevel;
    d484:	81 e0       	ldi	r24, 0x01	; 1
    d486:	80 93 cf 09 	sts	0x09CF, r24	; 0x8009cf <level>
isplaying = true;
    d48a:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <isplaying>
exitgame = false;
    d48e:	10 92 15 0a 	sts	0x0A15, r1	; 0x800a15 <exitgame>
Levelx = 0;
    d492:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
scrolltiles = 0;
    d496:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player.x = 8;
    d49a:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    d49e:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    d4a2:	d0 93 64 09 	sts	0x0964, r29	; 0x800964 <player+0x3>
    d4a6:	c0 93 63 09 	sts	0x0963, r28	; 0x800963 <player+0x2>
player2.x = 38;
    d4aa:	d0 92 1c 0a 	sts	0x0A1C, r13	; 0x800a1c <player2+0x1>
    d4ae:	c0 92 1b 0a 	sts	0x0A1B, r12	; 0x800a1b <player2>
player2.y = 191;
    d4b2:	d0 93 1e 0a 	sts	0x0A1E, r29	; 0x800a1e <player2+0x3>
    d4b6:	c0 93 1d 0a 	sts	0x0A1D, r28	; 0x800a1d <player2+0x2>
waterspwncnt = 0;
    d4ba:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d4be:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d4c2:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d4c6:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
destX = 0;
    d4ca:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
score = 0;
StartSong(midisong);
    d4ce:	8b e6       	ldi	r24, 0x6B	; 107
    d4d0:	9a e3       	ldi	r25, 0x3A	; 58
    d4d2:	0e 94 ff 44 	call	0x89fe	; 0x89fe <StartSong>
timeisup = false;    
Levelx = 0;
waterspwncnt = 0;
banspwncnt = 0;
scrolltiles = 0;
player2.speed = 1;
    d4d6:	88 24       	eor	r8, r8
    d4d8:	83 94       	inc	r8
    d4da:	91 2c       	mov	r9, r1
waterspwncnt = 0;
banspwncnt = 0;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    d4dc:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    d4e0:	88 23       	and	r24, r24
    d4e2:	09 f4       	brne	.+2      	; 0xd4e6 <main+0x146>
    d4e4:	5c c1       	rjmp	.+696    	; 0xd79e <main+0x3fe>
{
isplaying = true;
    d4e6:	81 e0       	ldi	r24, 0x01	; 1
    d4e8:	80 93 88 0a 	sts	0x0A88, r24	; 0x800a88 <isplaying>
while (isplaying)
{

showgetready();
isplaying = true;
    d4ec:	11 e0       	ldi	r17, 0x01	; 1
scrolltiles = 0;
player2.speed = 1;
player2.x = 38;
player2.y = 191;
player.speed = 1;
player.x = 8;
    d4ee:	88 e0       	ldi	r24, 0x08	; 8
    d4f0:	68 2e       	mov	r6, r24
    d4f2:	71 2c       	mov	r7, r1
score = 0;
StartSong(midisong);
while (lives > 0 )
{
isplaying = true;
while (isplaying)
    d4f4:	80 91 88 0a 	lds	r24, 0x0A88	; 0x800a88 <isplaying>
    d4f8:	88 23       	and	r24, r24
    d4fa:	81 f3       	breq	.-32     	; 0xd4dc <main+0x13c>
{

showgetready();
    d4fc:	0e 94 65 68 	call	0xd0ca	; 0xd0ca <showgetready>
isplaying = true;
    d500:	10 93 88 0a 	sts	0x0A88, r17	; 0x800a88 <isplaying>
finished = false;
    d504:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
died = false;
    d508:	10 92 8d 0a 	sts	0x0A8D, r1	; 0x800a8d <died>
timeisup = false;    
    d50c:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <timeisup>
Levelx = 0;
    d510:	10 92 8c 0a 	sts	0x0A8C, r1	; 0x800a8c <Levelx>
waterspwncnt = 0;
    d514:	10 92 99 08 	sts	0x0899, r1	; 0x800899 <waterspwncnt+0x1>
    d518:	10 92 98 08 	sts	0x0898, r1	; 0x800898 <waterspwncnt>
banspwncnt = 0;
    d51c:	10 92 9b 08 	sts	0x089B, r1	; 0x80089b <banspwncnt+0x1>
    d520:	10 92 9a 08 	sts	0x089A, r1	; 0x80089a <banspwncnt>
scrolltiles = 0;
    d524:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
player2.speed = 1;
    d528:	90 92 20 0a 	sts	0x0A20, r9	; 0x800a20 <player2+0x5>
    d52c:	80 92 1f 0a 	sts	0x0A1F, r8	; 0x800a1f <player2+0x4>
player2.x = 38;
    d530:	30 92 1c 0a 	sts	0x0A1C, r3	; 0x800a1c <player2+0x1>
    d534:	20 92 1b 0a 	sts	0x0A1B, r2	; 0x800a1b <player2>
player2.y = 191;
    d538:	b0 92 1e 0a 	sts	0x0A1E, r11	; 0x800a1e <player2+0x3>
    d53c:	a0 92 1d 0a 	sts	0x0A1D, r10	; 0x800a1d <player2+0x2>
player.speed = 1;
    d540:	90 92 66 09 	sts	0x0966, r9	; 0x800966 <player+0x5>
    d544:	80 92 65 09 	sts	0x0965, r8	; 0x800965 <player+0x4>
player.x = 8;
    d548:	70 92 62 09 	sts	0x0962, r7	; 0x800962 <player+0x1>
    d54c:	60 92 61 09 	sts	0x0961, r6	; 0x800961 <player>
player.y = 191;
    d550:	b0 92 64 09 	sts	0x0964, r11	; 0x800964 <player+0x3>
    d554:	a0 92 63 09 	sts	0x0963, r10	; 0x800963 <player+0x2>
destX = 0;
    d558:	10 92 3a 0a 	sts	0x0A3A, r1	; 0x800a3a <destX>
player2.touchground = true;
    d55c:	10 93 2c 0a 	sts	0x0A2C, r17	; 0x800a2c <player2+0x11>
player2.jumping = false;
    d560:	10 92 2f 0a 	sts	0x0A2F, r1	; 0x800a2f <player2+0x14>
player2.jumpreleased = true;
    d564:	10 93 30 0a 	sts	0x0A30, r17	; 0x800a30 <player2+0x15>
player.touchground = true;
    d568:	10 93 72 09 	sts	0x0972, r17	; 0x800972 <player+0x11>
player.jumping = false;
    d56c:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x14>
player.jumpreleased = true;
    d570:	10 93 76 09 	sts	0x0976, r17	; 0x800976 <player+0x15>
player.killer = false;
    d574:	10 92 7a 09 	sts	0x097A, r1	; 0x80097a <player+0x19>
player.bananaCount = 0;
    d578:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <player+0x1c>
player2.bananaCount = 0;
    d57c:	10 92 37 0a 	sts	0x0A37, r1	; 0x800a37 <player2+0x1c>
initlevel();
    d580:	0e 94 0b 53 	call	0xa616	; 0xa616 <initlevel>
initmonster();
    d584:	0e 94 df 65 	call	0xcbbe	; 0xcbbe <initmonster>
MapSprite2(0 ,pac0 ,0);
    d588:	40 e0       	ldi	r20, 0x00	; 0
    d58a:	69 ee       	ldi	r22, 0xE9	; 233
    d58c:	76 e4       	ldi	r23, 0x46	; 70
    d58e:	80 e0       	ldi	r24, 0x00	; 0
    d590:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
MapSprite2(spriteInd ,run0 ,0);
    d594:	40 e0       	ldi	r20, 0x00	; 0
    d596:	65 ec       	ldi	r22, 0xC5	; 197
    d598:	76 e4       	ldi	r23, 0x46	; 70
    d59a:	8a e0       	ldi	r24, 0x0A	; 10
    d59c:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    d5a0:	40 e0       	ldi	r20, 0x00	; 0
    d5a2:	61 ed       	ldi	r22, 0xD1	; 209
    d5a4:	76 e4       	ldi	r23, 0x46	; 70
    d5a6:	86 e0       	ldi	r24, 0x06	; 6
    d5a8:	0e 94 48 4f 	call	0x9e90	; 0x9e90 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d5ac:	02 e0       	ldi	r16, 0x02	; 2
    d5ae:	22 e0       	ldi	r18, 0x02	; 2
    d5b0:	4c ee       	ldi	r20, 0xEC	; 236
    d5b2:	6c ee       	ldi	r22, 0xEC	; 236
    d5b4:	86 e0       	ldi	r24, 0x06	; 6
    d5b6:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,2); 
    d5ba:	22 e0       	ldi	r18, 0x02	; 2
    d5bc:	4c ee       	ldi	r20, 0xEC	; 236
    d5be:	6c ee       	ldi	r22, 0xEC	; 236
    d5c0:	80 e0       	ldi	r24, 0x00	; 0
    d5c2:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
MoveSprite(spriteInd , - 50 , -20 ,2 ,2);    
    d5c6:	22 e0       	ldi	r18, 0x02	; 2
    d5c8:	4c ee       	ldi	r20, 0xEC	; 236
    d5ca:	6e ec       	ldi	r22, 0xCE	; 206
    d5cc:	8a e0       	ldi	r24, 0x0A	; 10
    d5ce:	0e 94 95 4f 	call	0x9f2a	; 0x9f2a <MoveSprite>
leveltime = 99;
    d5d2:	83 e6       	ldi	r24, 0x63	; 99
    d5d4:	80 93 89 0a 	sts	0x0A89, r24	; 0x800a89 <leveltime>
time = 0;
    d5d8:	10 92 16 0a 	sts	0x0A16, r1	; 0x800a16 <time>
    d5dc:	10 92 17 0a 	sts	0x0A17, r1	; 0x800a17 <time+0x1>
    d5e0:	10 92 18 0a 	sts	0x0A18, r1	; 0x800a18 <time+0x2>
    d5e4:	10 92 19 0a 	sts	0x0A19, r1	; 0x800a19 <time+0x3>
bonus = 0;
    d5e8:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d5ec:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
scrolltiles = 0;
    d5f0:	10 92 c3 0a 	sts	0x0AC3, r1	; 0x800ac3 <scrolltiles>
Screen.scrollX = 0;
    d5f4:	10 92 5c 08 	sts	0x085C, r1	; 0x80085c <screen_scrollX>
setheadline();    
    d5f8:	0e 94 ad 5c 	call	0xb95a	; 0xb95a <setheadline>
drawlevel(Levelx);
    d5fc:	80 91 8c 0a 	lds	r24, 0x0A8C	; 0x800a8c <Levelx>
    d600:	90 e0       	ldi	r25, 0x00	; 0
    d602:	0e 94 4a 62 	call	0xc494	; 0xc494 <drawlevel>
printheadline();   
    d606:	0e 94 ac 54 	call	0xa958	; 0xa958 <printheadline>
FadeIn(1, true);   
    d60a:	61 e0       	ldi	r22, 0x01	; 1
    d60c:	81 e0       	ldi	r24, 0x01	; 1
    d60e:	0e 94 5d 50 	call	0xa0ba	; 0xa0ba <FadeIn>

play = true;
    d612:	10 93 d0 09 	sts	0x09D0, r17	; 0x8009d0 <play>
    player.y = 0;

    };
    if ( player2.y > 240) 
    {
    died = true;
    d616:	01 e0       	ldi	r16, 0x01	; 1
printheadline();   
FadeIn(1, true);   

play = true;

while(play)
    d618:	80 91 d0 09 	lds	r24, 0x09D0	; 0x8009d0 <play>
    d61c:	88 23       	and	r24, r24
    d61e:	09 f4       	brne	.+2      	; 0xd622 <main+0x282>
    d620:	a8 c0       	rjmp	.+336    	; 0xd772 <main+0x3d2>
{
    
moveplayer(); 
    d622:	0e 94 66 5e 	call	0xbccc	; 0xbccc <moveplayer>
moveplayer2();
    d626:	0e 94 fb 59 	call	0xb3f6	; 0xb3f6 <moveplayer2>
movemonster();
    d62a:	0e 94 08 5d 	call	0xba10	; 0xba10 <movemonster>
WaitVsync(1); 
    d62e:	81 e0       	ldi	r24, 0x01	; 1
    d630:	90 e0       	ldi	r25, 0x00	; 0
    d632:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
drawmonster();   
    d636:	0e 94 ba 5c 	call	0xb974	; 0xb974 <drawmonster>
movelevel();
    d63a:	0e 94 e4 65 	call	0xcbc8	; 0xcbc8 <movelevel>
drawplayer(); 
    d63e:	0e 94 b2 50 	call	0xa164	; 0xa164 <drawplayer>
drawplayer2(); 
    d642:	0e 94 48 51 	call	0xa290	; 0xa290 <drawplayer2>
//drawlevel(Levelx);
updateWater();
    d646:	0e 94 a0 53 	call	0xa740	; 0xa740 <updateWater>
printheadline();
    d64a:	0e 94 ac 54 	call	0xa958	; 0xa958 <printheadline>
//drawplayer();  

//movemonster();
//drawmonster();

updatetime(time);
    d64e:	60 91 16 0a 	lds	r22, 0x0A16	; 0x800a16 <time>
    d652:	70 91 17 0a 	lds	r23, 0x0A17	; 0x800a17 <time+0x1>
    d656:	80 91 18 0a 	lds	r24, 0x0A18	; 0x800a18 <time+0x2>
    d65a:	90 91 19 0a 	lds	r25, 0x0A19	; 0x800a19 <time+0x3>
    d65e:	0e 94 43 66 	call	0xcc86	; 0xcc86 <updatetime>
    if ( player.y > 240) 
    d662:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    d666:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    d66a:	81 3f       	cpi	r24, 0xF1	; 241
    d66c:	91 05       	cpc	r25, r1
    d66e:	6c f0       	brlt	.+26     	; 0xd68a <main+0x2ea>
    {
    lives++;
    d670:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    d674:	8f 5f       	subi	r24, 0xFF	; 255
    d676:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    player.x = 30;
    d67a:	50 92 62 09 	sts	0x0962, r5	; 0x800962 <player+0x1>
    d67e:	40 92 61 09 	sts	0x0961, r4	; 0x800961 <player>
    player.y = 0;
    d682:	10 92 64 09 	sts	0x0964, r1	; 0x800964 <player+0x3>
    d686:	10 92 63 09 	sts	0x0963, r1	; 0x800963 <player+0x2>

    };
    if ( player2.y > 240) 
    d68a:	80 91 1d 0a 	lds	r24, 0x0A1D	; 0x800a1d <player2+0x2>
    d68e:	90 91 1e 0a 	lds	r25, 0x0A1E	; 0x800a1e <player2+0x3>
    d692:	81 3f       	cpi	r24, 0xF1	; 241
    d694:	91 05       	cpc	r25, r1
    d696:	c4 f0       	brlt	.+48     	; 0xd6c8 <main+0x328>
    {
    died = true;
    d698:	00 93 8d 0a 	sts	0x0A8D, r16	; 0x800a8d <died>
    lives--;    
    d69c:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    d6a0:	81 50       	subi	r24, 0x01	; 1
    d6a2:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    isplaying = false; 
    d6a6:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d6aa:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    bonus = 0; 
    d6ae:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d6b2:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    TriggerFx(9,0xff,true);
    d6b6:	41 e0       	ldi	r20, 0x01	; 1
    d6b8:	6f ef       	ldi	r22, 0xFF	; 255
    d6ba:	89 e0       	ldi	r24, 0x09	; 9
    d6bc:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60); 
    d6c0:	8c e3       	ldi	r24, 0x3C	; 60
    d6c2:	90 e0       	ldi	r25, 0x00	; 0
    d6c4:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    };

    if (timeisup)
    d6c8:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <timeisup>
    d6cc:	88 23       	and	r24, r24
    d6ce:	19 f1       	breq	.+70     	; 0xd716 <main+0x376>
    {
    printtileint( 26 ,0,leveltime,2);
    d6d0:	40 91 89 0a 	lds	r20, 0x0A89	; 0x800a89 <leveltime>
    d6d4:	50 e0       	ldi	r21, 0x00	; 0
    d6d6:	22 e0       	ldi	r18, 0x02	; 2
    d6d8:	30 e0       	ldi	r19, 0x00	; 0
    d6da:	60 e0       	ldi	r22, 0x00	; 0
    d6dc:	70 e0       	ldi	r23, 0x00	; 0
    d6de:	8a e1       	ldi	r24, 0x1A	; 26
    d6e0:	90 e0       	ldi	r25, 0x00	; 0
    d6e2:	0e 94 d6 51 	call	0xa3ac	; 0xa3ac <printtileint>
    TriggerFx(9,0xff,true);
    d6e6:	41 e0       	ldi	r20, 0x01	; 1
    d6e8:	6f ef       	ldi	r22, 0xFF	; 255
    d6ea:	89 e0       	ldi	r24, 0x09	; 9
    d6ec:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60);   
    d6f0:	8c e3       	ldi	r24, 0x3C	; 60
    d6f2:	90 e0       	ldi	r25, 0x00	; 0
    d6f4:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    showtimesup();
    d6f8:	0e 94 19 69 	call	0xd232	; 0xd232 <showtimesup>
    lives--;    
    d6fc:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    d700:	81 50       	subi	r24, 0x01	; 1
    d702:	80 93 39 0a 	sts	0x0A39, r24	; 0x800a39 <lives>
    bonus = 0;  
    d706:	10 92 72 0a 	sts	0x0A72, r1	; 0x800a72 <bonus+0x1>
    d70a:	10 92 71 0a 	sts	0x0A71, r1	; 0x800a71 <bonus>
    isplaying = false; 
    d70e:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d712:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    };
      if (finished)
    d716:	80 91 73 0a 	lds	r24, 0x0A73	; 0x800a73 <finished>
    d71a:	88 23       	and	r24, r24
    d71c:	09 f4       	brne	.+2      	; 0xd720 <main+0x380>
    d71e:	7c cf       	rjmp	.-264    	; 0xd618 <main+0x278>
    {
    TriggerFx(10,0xff,true);      
    d720:	41 e0       	ldi	r20, 0x01	; 1
    d722:	6f ef       	ldi	r22, 0xFF	; 255
    d724:	8a e0       	ldi	r24, 0x0A	; 10
    d726:	0e 94 dc 45 	call	0x8bb8	; 0x8bb8 <TriggerFx>
    WaitVsync(60);
    d72a:	8c e3       	ldi	r24, 0x3C	; 60
    d72c:	90 e0       	ldi	r25, 0x00	; 0
    d72e:	0e 94 01 50 	call	0xa002	; 0xa002 <WaitVsync>
    score = score + 100 + leveltime;
    d732:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <score>
    d736:	90 91 b8 09 	lds	r25, 0x09B8	; 0x8009b8 <score+0x1>
    d73a:	8c 59       	subi	r24, 0x9C	; 156
    d73c:	9f 4f       	sbci	r25, 0xFF	; 255
    d73e:	20 91 89 0a 	lds	r18, 0x0A89	; 0x800a89 <leveltime>
    d742:	82 0f       	add	r24, r18
    d744:	91 1d       	adc	r25, r1
    d746:	90 93 b8 09 	sts	0x09B8, r25	; 0x8009b8 <score+0x1>
    d74a:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <score>
    updatepoints();
    d74e:	0e 94 f1 54 	call	0xa9e2	; 0xa9e2 <updatepoints>
    level++;    
    d752:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    d756:	8f 5f       	subi	r24, 0xFF	; 255
    d758:	80 93 cf 09 	sts	0x09CF, r24	; 0x8009cf <level>
    StartSong(midisong);
    d75c:	8b e6       	ldi	r24, 0x6B	; 107
    d75e:	9a e3       	ldi	r25, 0x3A	; 58
    d760:	0e 94 ff 44 	call	0x89fe	; 0x89fe <StartSong>
    isplaying = false; 
    d764:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d768:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    finished = false;
    d76c:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
    d770:	53 cf       	rjmp	.-346    	; 0xd618 <main+0x278>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    d772:	80 91 39 0a 	lds	r24, 0x0A39	; 0x800a39 <lives>
    d776:	81 11       	cpse	r24, r1
    d778:	02 c0       	rjmp	.+4      	; 0xd77e <main+0x3de>
    d77a:	0e 94 c5 68 	call	0xd18a	; 0xd18a <showgameover>

if  (level > maxlevel  ) 
    d77e:	80 91 cf 09 	lds	r24, 0x09CF	; 0x8009cf <level>
    d782:	8a 30       	cpi	r24, 0x0A	; 10
    d784:	08 f4       	brcc	.+2      	; 0xd788 <main+0x3e8>
    d786:	b6 ce       	rjmp	.-660    	; 0xd4f4 <main+0x154>
{   showcongratulation();
    d788:	0e 94 6d 69 	call	0xd2da	; 0xd2da <showcongratulation>
    isplaying = false; 
    d78c:	10 92 88 0a 	sts	0x0A88, r1	; 0x800a88 <isplaying>
    play = false;
    d790:	10 92 d0 09 	sts	0x09D0, r1	; 0x8009d0 <play>
    finished = false;
    d794:	10 92 73 0a 	sts	0x0A73, r1	; 0x800a73 <finished>
    lives = 0;
    d798:	10 92 39 0a 	sts	0x0A39, r1	; 0x800a39 <lives>
    d79c:	ab ce       	rjmp	.-682    	; 0xd4f4 <main+0x154>
 
};
};
};
StopSong();
    d79e:	0e 94 28 45 	call	0x8a50	; 0x8a50 <StopSong>

    
};
    d7a2:	2c ce       	rjmp	.-936    	; 0xd3fc <main+0x5c>

0000d7a4 <__udivmodhi4>:
    d7a4:	aa 1b       	sub	r26, r26
    d7a6:	bb 1b       	sub	r27, r27
    d7a8:	51 e1       	ldi	r21, 0x11	; 17
    d7aa:	07 c0       	rjmp	.+14     	; 0xd7ba <__udivmodhi4_ep>

0000d7ac <__udivmodhi4_loop>:
    d7ac:	aa 1f       	adc	r26, r26
    d7ae:	bb 1f       	adc	r27, r27
    d7b0:	a6 17       	cp	r26, r22
    d7b2:	b7 07       	cpc	r27, r23
    d7b4:	10 f0       	brcs	.+4      	; 0xd7ba <__udivmodhi4_ep>
    d7b6:	a6 1b       	sub	r26, r22
    d7b8:	b7 0b       	sbc	r27, r23

0000d7ba <__udivmodhi4_ep>:
    d7ba:	88 1f       	adc	r24, r24
    d7bc:	99 1f       	adc	r25, r25
    d7be:	5a 95       	dec	r21
    d7c0:	a9 f7       	brne	.-22     	; 0xd7ac <__udivmodhi4_loop>
    d7c2:	80 95       	com	r24
    d7c4:	90 95       	com	r25
    d7c6:	bc 01       	movw	r22, r24
    d7c8:	cd 01       	movw	r24, r26
    d7ca:	08 95       	ret

0000d7cc <__divmodhi4>:
    d7cc:	97 fb       	bst	r25, 7
    d7ce:	07 2e       	mov	r0, r23
    d7d0:	16 f4       	brtc	.+4      	; 0xd7d6 <__divmodhi4+0xa>
    d7d2:	00 94       	com	r0
    d7d4:	07 d0       	rcall	.+14     	; 0xd7e4 <__divmodhi4_neg1>
    d7d6:	77 fd       	sbrc	r23, 7
    d7d8:	09 d0       	rcall	.+18     	; 0xd7ec <__divmodhi4_neg2>
    d7da:	0e 94 d2 6b 	call	0xd7a4	; 0xd7a4 <__udivmodhi4>
    d7de:	07 fc       	sbrc	r0, 7
    d7e0:	05 d0       	rcall	.+10     	; 0xd7ec <__divmodhi4_neg2>
    d7e2:	3e f4       	brtc	.+14     	; 0xd7f2 <__divmodhi4_exit>

0000d7e4 <__divmodhi4_neg1>:
    d7e4:	90 95       	com	r25
    d7e6:	81 95       	neg	r24
    d7e8:	9f 4f       	sbci	r25, 0xFF	; 255
    d7ea:	08 95       	ret

0000d7ec <__divmodhi4_neg2>:
    d7ec:	70 95       	com	r23
    d7ee:	61 95       	neg	r22
    d7f0:	7f 4f       	sbci	r23, 0xFF	; 255

0000d7f2 <__divmodhi4_exit>:
    d7f2:	08 95       	ret

0000d7f4 <__udivmodsi4>:
    d7f4:	a1 e2       	ldi	r26, 0x21	; 33
    d7f6:	1a 2e       	mov	r1, r26
    d7f8:	aa 1b       	sub	r26, r26
    d7fa:	bb 1b       	sub	r27, r27
    d7fc:	fd 01       	movw	r30, r26
    d7fe:	0d c0       	rjmp	.+26     	; 0xd81a <__udivmodsi4_ep>

0000d800 <__udivmodsi4_loop>:
    d800:	aa 1f       	adc	r26, r26
    d802:	bb 1f       	adc	r27, r27
    d804:	ee 1f       	adc	r30, r30
    d806:	ff 1f       	adc	r31, r31
    d808:	a2 17       	cp	r26, r18
    d80a:	b3 07       	cpc	r27, r19
    d80c:	e4 07       	cpc	r30, r20
    d80e:	f5 07       	cpc	r31, r21
    d810:	20 f0       	brcs	.+8      	; 0xd81a <__udivmodsi4_ep>
    d812:	a2 1b       	sub	r26, r18
    d814:	b3 0b       	sbc	r27, r19
    d816:	e4 0b       	sbc	r30, r20
    d818:	f5 0b       	sbc	r31, r21

0000d81a <__udivmodsi4_ep>:
    d81a:	66 1f       	adc	r22, r22
    d81c:	77 1f       	adc	r23, r23
    d81e:	88 1f       	adc	r24, r24
    d820:	99 1f       	adc	r25, r25
    d822:	1a 94       	dec	r1
    d824:	69 f7       	brne	.-38     	; 0xd800 <__udivmodsi4_loop>
    d826:	60 95       	com	r22
    d828:	70 95       	com	r23
    d82a:	80 95       	com	r24
    d82c:	90 95       	com	r25
    d82e:	9b 01       	movw	r18, r22
    d830:	ac 01       	movw	r20, r24
    d832:	bd 01       	movw	r22, r26
    d834:	cf 01       	movw	r24, r30
    d836:	08 95       	ret

0000d838 <__itoa_ncheck>:
    d838:	bb 27       	eor	r27, r27
    d83a:	4a 30       	cpi	r20, 0x0A	; 10
    d83c:	31 f4       	brne	.+12     	; 0xd84a <__itoa_ncheck+0x12>
    d83e:	99 23       	and	r25, r25
    d840:	22 f4       	brpl	.+8      	; 0xd84a <__itoa_ncheck+0x12>
    d842:	bd e2       	ldi	r27, 0x2D	; 45
    d844:	90 95       	com	r25
    d846:	81 95       	neg	r24
    d848:	9f 4f       	sbci	r25, 0xFF	; 255
    d84a:	0c 94 28 6c 	jmp	0xd850	; 0xd850 <__utoa_common>

0000d84e <__utoa_ncheck>:
    d84e:	bb 27       	eor	r27, r27

0000d850 <__utoa_common>:
    d850:	fb 01       	movw	r30, r22
    d852:	55 27       	eor	r21, r21
    d854:	aa 27       	eor	r26, r26
    d856:	88 0f       	add	r24, r24
    d858:	99 1f       	adc	r25, r25
    d85a:	aa 1f       	adc	r26, r26
    d85c:	a4 17       	cp	r26, r20
    d85e:	10 f0       	brcs	.+4      	; 0xd864 <__utoa_common+0x14>
    d860:	a4 1b       	sub	r26, r20
    d862:	83 95       	inc	r24
    d864:	50 51       	subi	r21, 0x10	; 16
    d866:	b9 f7       	brne	.-18     	; 0xd856 <__utoa_common+0x6>
    d868:	a0 5d       	subi	r26, 0xD0	; 208
    d86a:	aa 33       	cpi	r26, 0x3A	; 58
    d86c:	08 f0       	brcs	.+2      	; 0xd870 <__utoa_common+0x20>
    d86e:	a9 5d       	subi	r26, 0xD9	; 217
    d870:	a1 93       	st	Z+, r26
    d872:	00 97       	sbiw	r24, 0x00	; 0
    d874:	79 f7       	brne	.-34     	; 0xd854 <__utoa_common+0x4>
    d876:	b1 11       	cpse	r27, r1
    d878:	b1 93       	st	Z+, r27
    d87a:	11 92       	st	Z+, r1
    d87c:	cb 01       	movw	r24, r22
    d87e:	0c 94 41 6c 	jmp	0xd882	; 0xd882 <strrev>

0000d882 <strrev>:
    d882:	dc 01       	movw	r26, r24
    d884:	fc 01       	movw	r30, r24
    d886:	67 2f       	mov	r22, r23
    d888:	71 91       	ld	r23, Z+
    d88a:	77 23       	and	r23, r23
    d88c:	e1 f7       	brne	.-8      	; 0xd886 <strrev+0x4>
    d88e:	32 97       	sbiw	r30, 0x02	; 2
    d890:	04 c0       	rjmp	.+8      	; 0xd89a <strrev+0x18>
    d892:	7c 91       	ld	r23, X
    d894:	6d 93       	st	X+, r22
    d896:	70 83       	st	Z, r23
    d898:	62 91       	ld	r22, -Z
    d89a:	ae 17       	cp	r26, r30
    d89c:	bf 07       	cpc	r27, r31
    d89e:	c8 f3       	brcs	.-14     	; 0xd892 <strrev+0x10>
    d8a0:	08 95       	ret

0000d8a2 <_exit>:
    d8a2:	f8 94       	cli

0000d8a4 <__stop_program>:
    d8a4:	ff cf       	rjmp	.-2      	; 0xd8a4 <__stop_program>
