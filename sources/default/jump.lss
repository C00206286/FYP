
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000df4c  0000e04c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000df4c  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000903  00800104  00800104  0000e050  2**1
                  ALLOC
  3 .noinit       000004f9  00800a07  00800a07  0000e100  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000e5f9  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000e60c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004d8  00000000  00000000  0000e648  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007aab  00000000  00000000  0000eb20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013c5  00000000  00000000  000165cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000058af  00000000  00000000  00017990  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c1c  00000000  00000000  0001d240  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000151a  00000000  00000000  0001de5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005168  00000000  00000000  0001f376  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000558  00000000  00000000  000244e0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 aa 43 	jmp	0x8754	; 0x8754 <__ctors_end>
       4:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
       8:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
       c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      10:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      14:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      18:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      1c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      20:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      24:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      28:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      2c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      30:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      34:	0c 94 60 47 	jmp	0x8ec0	; 0x8ec0 <__vector_13>
      38:	0c 94 9f 47 	jmp	0x8f3e	; 0x8f3e <__vector_14>
      3c:	0c 94 cb 44 	jmp	0x8996	; 0x8996 <__vector_15>
      40:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      44:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      48:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      4c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      50:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      54:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      58:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      5c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      60:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      64:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      68:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>
      6c:	0c 94 15 44 	jmp	0x882a	; 0x882a <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	de 49 e1 49 3d 4a 41 4a 48 4a e9 49 ee 49 f3 49     .I.I=JAJHJ.I.I.I
      d2:	50 4a f6 49 f9 49 fc 49 37 4a 3a 4a 60 4a           PJ.I.I.I7J:J`J

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     93b:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     983:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     993:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     9a3:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bc3:	29 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00     )...............
     bd3:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 33 00 00 00 00 00 00     '........3......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e27:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     e6f:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     e7f:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     e8f:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1313:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
    135b:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
    136b:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
    137b:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
    16df:	00 15 16 00 00 00 00 00 19 1a 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
    1737:	00 00 00 17 18 00 00 00 00 00 1b 1c 01 01 01 05     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    180b:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1847:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 03     ..%&............
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19e3:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 15 16 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 15 16 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	15 16 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 17 18     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 17 18 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c13:	00 00 17 18 00 00 04 04 04 00 00 00 00 29 00 00     .............)..
    1c23:	00 00 00 04 04 04 04 04 04 04 0d 0e 01 01 01 01     ................
    1c33:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c43:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c53:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 06 05     ................
    1c63:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c73:	01 01 01 05 00 00 00 08 00 00 06 01 01 01 01 01     ................
    1c83:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1cf7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1d33:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1d4f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1d73:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    1d8f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    1d9f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1db7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    1dcf:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1df7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e1b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e47:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1e9f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    1eaf:	00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 03     ................
    1ebf:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f23:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
	...
    1f43:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    1f67:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    1f7f:	00 02 02 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    1fbf:	00 00 00 02 02 02 00 00 00 00 00 00 00 02 02 02     ................
	...
    1fdb:	00 00 04 00 00 00 00 00 00 00 04 00 00 04 00 00     ................
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
    1ffb:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
    200b:	00 00 00 00 00 29 00 00 00 29 00 00 00 00 00 00     .....)...)......
	...
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 02 03 03 02 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    2063:	00 00 00 00 00 00 00 04 00 32 00 04 00 00 00 00     .........2......
    2073:	00 04 00 00 00 00 00 00 04 1f 21 00 00 15 16 00     ..........!.....
	...
    208b:	00 00 04 00 00 00 04 00 02 00 00 04 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 04 04 04 04 04 00 00     ................
    20cb:	00 00 00 04 00 00 00 00 00 00 04 20 22 00 00 17     ........... "...
    20db:	18 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00     ................
    20eb:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	29 00 00 00 00 00 1b 1c 01 05 00 00 00 00 00 00     )...............
    2123:	00 00 06 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2133:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    2143:	01 01 05 00 00 00 00 00 00 00 00 00 00 06 01 01     ................
    2153:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2163:	05 00 08 00 08 00 06 01 05 00 06 01 01 01 01 01     ................
    2173:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000021cf <level4>:
	...
    21e3:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    221f:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    241b:	00 02 02 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    2557:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    2567:	00 1f 21 00 33 15 16 00 00 00 00 00 00 0f 10 00     ..!.3...........
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 17 18     ................
    25b3:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    25c3:	22 00 02 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    26cf:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    270b:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28a7:	07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2957:	0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0b 0c 00 00 00 0f 10 00 00 00 00     ................
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0f 10 00 00 00 0f 10 00 00     ................
    2a0f:	00 00 00 00 00 07 07 07 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0f 10 00 00 00 0f 10 00 00 00 00 00 00 00 00     ................
	...
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0d 0e 00 00 00 0d 0e 00 00 00 00 00 00     ................
	...
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 06 05 00 00 00 00 00 00 00 00     ................
    2b23:	00 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bbb:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2bf7:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
	...
    2c13:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2c53:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
    2c63:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2c7b:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    2c93:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
    2cdf:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2d0b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2d63:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	00 00 00 00 00 00 32 00 00 00 00 29 29 00 00 00     ......2....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 00 00 00 00 04 04 04 04 04 00 00 00 02 02 00     ................
	...
    2e67:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     3...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 04 04     ...2............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 00 00 04     ................
    2eef:	04 04 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 00 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f3f:	00 1f 21 00 00 00 00 00 04 04 04 04 00 0b 0c 00     ..!.............
    2f4f:	02 02 02 02 02 02 00 00 00 00 00 00 00 00 00 29     ...............)
    2f5f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    2f6f:	00 04 04 04 04 04 04 00 00 00 00 00 15 16 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f97:	00 00 00 20 22 00 00 04 04 04 04 04 04 04 00 0d     ... "...........
    2fa7:	0e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 00 00 00 00 00 17 18     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 00 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
	...
    30a7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    30e3:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3123:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    3267:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    32bb:	00 00 00 02 03 02 00 00 00 01 00 00 00 00 00 00     ................
	...
    32d3:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    331b:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    332b:	00 00 00 00 02 02 02 02 00 00 00 00 00 00 00 00     ................
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    3377:	00 01 00 00 00 00 00 00 00 00 00 00 00 0b 0c 00     ................
	...
    33a7:	04 04 04 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    33cb:	02 03 02 03 03 02 00 01 00 00 00 00 00 00 00 00     ................
    33db:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    33f3:	03 02 02 03 00 02 00 00 00 00 00 00 00 04 04 04     ................
    3403:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    341b:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    342b:	00 1f 21 00 00 15 16 00 00 00 00 00 00 0b 0c 00     ..!.............
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    3467:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 17 18     .!..............
    3477:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    3487:	22 00 00 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 20 22     .............. "
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    35cf:	23 24 00 00 00 00 00 00 00 00 00 00 04 00 00 00     #$..............
    35df:	04 00 00 00 00 25 26 00 00 00 00 00 00 00 00 04     .....%&.........
	...
    35f7:	04 04 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    360f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    361f:	00 00 04 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    362f:	00 00 00 00 00 00 04 04 00 04 04 00 00 00 00 00     ................
    363f:	00 04 00 00 04 00 00 04 00 04 00 00 00 00 32 00     ..............2.
    364f:	00 00 04 00 00 00 04 00 00 00 00 00 00 00 04 00     ................
    365f:	00 00 00 00 33 00 00 00 00 00 00 04 00 00 00 00     ....3...........
	...
    367b:	04 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
    368b:	00 00 00 00 04 00 04 00 04 00 00 04 04 00 00 04     ................
    369b:	00 00 04 00 00 00 00 00 00 00 04 04 04 00 00 00     ................
    36ab:	04 00 00 00 04 00 00 04 04 00 00 04 04 04 00 04     ................
    36bb:	00 04 04 00 00 04 04 00 00 04 00 00 00 00 04 04     ................
    36cb:	00 00 04 04 04 00 00 00 04 04 04 00 25 26 00 00     ............%&..
	...
    36e3:	23 24 00 00 00 00 04 00 00 00 04 00 04 00 00 04     #$..............
    36f3:	00 04 00 00 04 00 00 04 00 00 00 04 00 00 00 00     ................
    3703:	00 00 04 04 04 04 00 00 04 00 00 04 00 00 04 00     ................
    3713:	00 04 04 00 00 00 04 00 00 04 00 04 00 00 00 00     ................
    3723:	00 00 04 00 04 00 00 04 00 04 00 00 04 00 00 00     ................
	...
    373b:	00 00 25 26 00 00 00 00 04 00 00 00 04 00 04 04     ..%&............
    374b:	04 04 00 04 00 00 04 00 00 04 00 00 00 00 04 04     ................
    375b:	00 00 00 00 04 00 04 00 00 00 04 04 04 04 00 00     ................
    376b:	04 00 00 04 00 00 00 00 04 00 00 04 00 04 00 00     ................
    377b:	00 00 04 04 04 00 04 00 00 04 00 04 00 00 04 00     ................
	...
    379b:	00 00 04 00 00 00 04 00 04 00 00 00 00 04 00 00     ................
    37ab:	04 00 00 04 00 00 00 00 00 00 04 00 00 00 04 00     ................
    37bb:	00 04 00 00 04 00 00 00 00 00 04 00 00 04 00 00     ................
    37cb:	00 00 04 00 00 04 00 04 00 00 00 04 00 00 04 00     ................
    37db:	04 00 00 04 00 04 00 00 04 00 00 00 00 00 00 00     ................
	...
    37f7:	04 00 00 00 04 00 00 04 04 00 00 04 04 00 04 04     ................
    3807:	00 04 00 00 00 04 03 04 00 00 00 00 04 00 00 00     ................
    3817:	03 00 00 04 04 00 00 00 00 03 00 04 00 00 00 00     ................
    3827:	00 04 04 00 00 04 04 04 00 00 04 04 04 00 04 00     ................
    3837:	00 04 00 00 04 04 04 00 00 00 00 00 00 00 00 00     ................
	...
    3907:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    3917:	00 1f 21 00 00 15 16 00 00 00 00 00 00 00 00 00     ..!.............
	...
    392f:	00 15 16 00 00 00 00 00 00 00 00 00 00 15 16 00     ................
    393f:	00 00 00 00 00 00 1f 21 00 00 00 00 00 00 00 00     .......!........
    394f:	00 00 00 00 1f 21 00 00 00 00 00 00 19 1a 00 00     .....!..........
    395f:	00 00 17 18 00 00 20 22 00 00 00 00 00 00 00 00     ...... "........
    396f:	00 00 00 20 22 00 00 17 18 00 00 00 00 00 00 00     ... "...........
	...
    3987:	00 00 00 17 18 00 00 00 00 00 00 00 00 00 00 17     ................
    3997:	18 00 00 00 00 00 00 00 20 22 00 00 00 00 00 00     ........ "......
    39a7:	29 29 29 29 00 00 20 22 00 00 00 00 00 00 1b 1c     )))).. "........
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    4043:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    4053:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 f8 d8 d8 d8     ....A......A....
    4063:	fe fe fe 41 f8 d8 d8 b7 fe fe fe 41 f8 d8 b7 ff     ...A.......A....
    4073:	41 41 41 fe fe fe fe fe 41 f8 f8 41 fe fe fe fe     AAA.....A..A....
    4083:	d8 41 f8 f8 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4093:	d8 d8 41 f8 f8 d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    40a3:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    40b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    40c3:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    40d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    40e3:	fe fe fe 41 f8 d8 d8 d8 fe fe fe 41 f8 d8 d8 b7     ...A.......A....
    40f3:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4103:	41 f8 f8 41 fe fe fe fe d8 41 f8 f8 41 fe fe fe     A..A.....A..A...
    4113:	d8 d8 41 41 41 41 fe fe d8 d8 41 f8 f8 d8 41 fe     ..AAAA....A...A.
    4123:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    4133:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    4143:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    4153:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 f8 d8 d8     .....A......A...
    4163:	fe fe fe fe 41 f8 d8 d8 fe fe fe 41 41 f8 d8 b7     ....A......AA...
    4173:	fe 41 41 41 fe fe fe fe 41 41 f8 f8 41 fe fe fe     .AAA....AA..A...
    4183:	d8 d8 41 f8 f8 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4193:	d8 d8 d8 41 f8 f8 d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    41a3:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    41b3:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 f8     .AA...AAA..AAAA.
    41c3:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    41d3:	41 d8 41 f8 d8 d8 d8 d8 41 d8 41 f8 d8 d8 d8 d8     A.A.....A.A.....
    41e3:	41 d8 41 f8 d8 b7 ff ff 41 f8 41 d8 b7 ff ff 41     A.A.....A.A....A
    41f3:	41 fe fe fe fe fe fe fe f8 41 fe fe fe 41 41 fe     A........A...AA.
    4203:	f8 f8 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4213:	41 f8 f8 d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    4223:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 f8 41 fe     ....A..AA.A.A.A.
    4233:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4243:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    4253:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    4263:	fe fe fe fe 41 f8 d8 d8 fe fe fe fe 41 f8 d8 d8     ....A.......A...
    4273:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4283:	41 41 f8 f8 41 fe fe fe d8 d8 41 f8 f8 41 fe fe     AA..A.....A..A..
    4293:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 f8 f8 d8 41     ...AAAA....A...A
    42a3:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    42b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    42c3:	fe fe fe fe fe 41 41 41 fe fe fe fe 41 d8 d8 d8     .....AAA....A...
    42d3:	fe fe fe 41 d8 d8 d8 d8 fe fe fe 41 d8 d8 d8 d8     ...A.......A....
    42e3:	fe fe 41 f8 d8 d8 d8 d8 fe fe 41 f8 d8 d8 b7 b7     ..A.......A.....
    42f3:	fe fe fe fe fe fe fe fe 41 41 fe fe fe fe fe fe     ........AA......
    4303:	f8 f8 41 fe fe fe fe fe 41 f8 f8 41 fe fe fe fe     ..A.....A..A....
    4313:	d8 41 41 41 41 fe fe fe d8 41 f8 f8 d8 41 fe fe     .AAAA....A...A..
    4323:	d8 d8 41 41 d8 41 fe fe b7 b7 d8 d8 b7 41 fe fe     ..AA.A.......A..
    4333:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    4343:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    4353:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 1f d8 d8 d8     ....A......A....
    4363:	fe fe fe 41 1f d8 d8 b7 fe fe fe 41 1f d8 b7 ff     ...A.......A....
    4373:	41 41 41 fe fe fe fe fe 41 1f 1f 41 fe fe fe fe     AAA.....A..A....
    4383:	d8 41 1f 1f 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4393:	d8 d8 41 1f 1f d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    43a3:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    43c3:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    43d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    43e3:	fe fe fe 41 1f d8 d8 d8 fe fe fe 41 1f d8 d8 b7     ...A.......A....
    43f3:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4403:	41 1f 1f 41 fe fe fe fe d8 41 1f 1f 41 fe fe fe     A..A.....A..A...
    4413:	d8 d8 41 41 41 41 fe fe d8 d8 41 1f 1f d8 41 fe     ..AAAA....A...A.
    4423:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    4433:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    4443:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    4453:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 1f d8 d8     .....A......A...
    4463:	fe fe fe fe 41 1f d8 d8 fe fe fe 41 41 1f d8 b7     ....A......AA...
    4473:	fe 41 41 41 fe fe fe fe 41 41 1f 1f 41 fe fe fe     .AAA....AA..A...
    4483:	d8 d8 41 1f 1f 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4493:	d8 d8 d8 41 1f 1f d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    44a3:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    44b3:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 1f     .AA...AAA..AAAA.
    44c3:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    44d3:	41 d8 41 1f d8 d8 d8 d8 41 d8 41 1f d8 d8 d8 d8     A.A.....A.A.....
    44e3:	41 d8 41 1f d8 b7 ff ff 41 1f 41 d8 b7 ff ff 41     A.A.....A.A....A
    44f3:	41 fe fe fe fe fe fe fe 1f 41 fe fe fe 41 41 fe     A........A...AA.
    4503:	1f 1f 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4513:	41 1f 1f d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    4523:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 1f 41 fe     ....A..AA.A.A.A.
    4533:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4543:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    4553:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    4563:	fe fe fe fe 41 1f d8 d8 fe fe fe fe 41 1f d8 d8     ....A.......A...
    4573:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4583:	41 41 1f 1f 41 fe fe fe d8 d8 41 1f 1f 41 fe fe     AA..A.....A..A..
    4593:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 1f 1f d8 41     ...AAAA....A...A
    45a3:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    45b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    45c3:	fe fe fe fe fe 41 41 41 fe fe fe fe 41 d8 d8 d8     .....AAA....A...
    45d3:	fe fe fe 41 d8 d8 d8 d8 fe fe fe 41 d8 d8 d8 d8     ...A.......A....
    45e3:	fe fe 41 1f d8 d8 d8 d8 fe fe 41 1f d8 d8 b7 b7     ..A.......A.....
    45f3:	fe fe fe fe fe fe fe fe 41 41 fe fe fe fe fe fe     ........AA......
    4603:	1f 1f 41 fe fe fe fe fe 41 1f 1f 41 fe fe fe fe     ..A.....A..A....
    4613:	d8 41 41 41 41 fe fe fe d8 41 1f 1f d8 41 fe fe     .AAAA....A...A..
    4623:	d8 d8 41 41 d8 41 fe fe b7 b7 d8 d8 b7 41 fe fe     ..AA.A.......A..
    4633:	fe fe fe 03 fe fe fe fe fe fe fe 03 03 fe fe fe     ................
    4643:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    4653:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff ff 03 03     ................
    4663:	fe fe fe 03 ff 00 03 03 fe fe fe 03 ff ff 27 27     ..............''
    4673:	fe fe fe 03 fe fe fe fe fe fe 03 03 fe fe fe fe     ................
    4683:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4693:	1c 1c 1c 1c fe fe fe fe 03 ff ff 03 fe fe fe fe     ................
    46a3:	03 00 ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    46b3:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    46c3:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    46d3:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff 00 03 03     ................
    46e3:	fe fe fe 03 ff ff 03 03 fe fe fe 03 ff ff 27 27     ..............''
    46f3:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    4703:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4713:	1c 1c 1c 1c fe fe fe fe 03 00 ff 03 fe fe fe fe     ................
    4723:	03 ff ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    4733:	fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00 fe     ................
    4743:	00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00 fe     ................
    4753:	00 ff 00 00 00 ff 00 fe 00 ff ff 00 ff ff 00 18     ................
    4763:	00 ff ff ff ff ff 00 39 fe 00 00 00 00 00 39 39     .......9......99
    4773:	fe fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00     ................
    4783:	fe 00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00     ................
    4793:	fe 00 ff 00 00 00 ff 00 18 00 ff ff 00 ff ff 00     ................
    47a3:	39 00 ff ff ff ff ff 00 39 39 00 00 00 00 00 fe     9.......99......
    47b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    47c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    47d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    47e3:	fe 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00 fe     ................
    47f3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4803:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4813:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4823:	fe 00 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00     ................
    4833:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    4843:	fe 41 41 f8 f8 41 d8 b7 41 d8 f8 f8 f8 f8 41 b7     .AA..A..A.....A.
    4853:	41 d8 d8 f8 f8 f8 f8 41 41 d8 d8 f8 41 f8 f8 f8     A......AA...A...
    4863:	41 d8 41 41 41 f8 f8 f8 41 d8 d8 41 41 f8 f8 f8     A.AAA...A..AA...
    4873:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4883:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 f8 f8 41     AAAA.AA.....A..A
    4893:	41 41 41 41 f8 f8 d8 41 f8 f8 f8 f8 41 f8 d8 41     AAAA...A....A..A
    48a3:	f8 f8 f8 f8 41 41 d8 41 f8 f8 f8 f8 41 d8 d8 41     ....AA.A....A..A
    48b3:	fe 41 41 41 f8 d8 b7 ff 41 41 41 f8 41 d8 b7 ff     .AAA....AAA.A...
    48c3:	41 d8 41 f8 41 d8 b7 b7 41 d8 d8 41 f8 41 d8 b7     A.A.A...A..A.A..
    48d3:	41 d8 41 41 f8 f8 41 b7 41 d8 41 fe 41 f8 f8 41     A.AA..A.A.A.A..A
    48e3:	41 d8 41 fe 41 d8 f8 f8 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    48f3:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4903:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4913:	b7 b7 b7 b7 41 f8 41 fe 41 41 41 41 f8 f8 d8 41     ....A.A.AAAA...A
    4923:	f8 f8 f8 41 f8 d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4933:	fe fe 41 f8 f8 41 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..A..A...A...A..
    4943:	41 f8 f8 f8 f8 f8 41 d8 41 f8 f8 f8 41 f8 f8 41     A.....A.A...A..A
    4953:	fe 41 d8 d8 d8 41 f8 f8 fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4963:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4973:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4983:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4993:	41 41 41 41 41 41 fe fe f8 f8 f8 f8 41 d8 41 fe     AAAAAA......A.A.
    49a3:	41 f8 f8 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    49b3:	41 f8 41 41 b7 ff ff 41 41 f8 f8 41 b7 b7 ff ff     A.AA...AA..A....
    49c3:	41 f8 f8 f8 d8 b7 b7 41 fe 41 f8 f8 41 b7 41 41     A......A.A..A.AA
    49d3:	fe 41 f8 f8 f8 41 b7 41 fe fe 41 f8 f8 f8 f8 f8     .A...A.A..A.....
    49e3:	fe fe 41 f8 f8 f8 f8 f8 fe fe 41 f8 f8 f8 f8 f8     ..A.......A.....
    49f3:	41 b7 41 ff 41 f8 41 fe ff b7 ff b7 41 f8 41 fe     A.A.A.A.....A.A.
    4a03:	41 41 b7 41 f8 41 fe fe 41 41 41 f8 41 fe fe fe     AA.A.A..AAA.A...
    4a13:	41 41 f8 f8 41 fe fe fe f8 f8 f8 41 fe fe fe fe     AA..A......A....
    4a23:	f8 f8 f8 41 fe fe fe fe f8 f8 f8 41 41 41 fe fe     ...A.......AAA..
    4a33:	fe fe 41 41 41 f8 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..AAA....A...A..
    4a43:	41 d8 d8 f8 f8 f8 41 b7 41 d8 d8 f8 f8 41 f8 f8     A.....A.A....A..
    4a53:	41 d8 41 41 41 f8 f8 f8 41 41 fe fe 41 f8 f8 f8     A.AAA...AA..A...
    4a63:	fe fe fe fe 41 f8 41 d8 fe fe 41 41 41 d8 f8 41     ....A.A...AAA..A
    4a73:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4a83:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4a93:	f8 d8 b7 b7 b7 41 41 41 f8 f8 41 41 41 d8 d8 41     .....AAA..AAA..A
    4aa3:	f8 f8 d8 d8 d8 d8 d8 41 d8 f8 d8 d8 d8 d8 d8 41     .......A.......A
    4ab3:	fe fe 41 f8 d8 b7 b7 b7 fe fe 41 41 d8 b7 b7 41     ..A.......AA...A
    4ac3:	fe 41 f8 41 d8 b7 b7 b7 41 41 f8 f8 41 d8 b7 b7     .A.A....AA..A...
    4ad3:	41 d8 f8 f8 f8 41 b7 41 41 d8 41 f8 f8 f8 41 b7     A....A.AA.A...A.
    4ae3:	41 d8 41 41 41 f8 f8 f8 41 d8 d8 d8 41 f8 f8 f8     A.AAA...A...A...
    4af3:	b7 b7 b7 b7 b7 41 fe fe 41 41 b7 41 41 41 fe fe     .....A..AA.AAA..
    4b03:	b7 b7 b7 b7 b7 41 41 fe 41 41 41 b7 41 f8 41 41     .....AA.AAA.A.AA
    4b13:	41 41 41 41 f8 f8 f8 41 41 41 41 f8 41 f8 f8 41     AAAA...AAAA.A..A
    4b23:	f8 f8 f8 f8 41 d8 d8 41 f8 f8 f8 41 d8 d8 41 41     ....A..A...A..AA
    4b33:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    4b43:	fe 41 41 1f 1f 41 d8 b7 41 d8 1f 1f 1f 1f 41 b7     .AA..A..A.....A.
    4b53:	41 d8 d8 1f 1f 1f 1f 41 41 d8 d8 1f 41 1f 1f 1f     A......AA...A...
    4b63:	41 d8 41 41 41 1f 1f 1f 41 d8 d8 41 41 1f 1f 1f     A.AAA...A..AA...
    4b73:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4b83:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 1f 1f 41     AAAA.AA.....A..A
    4b93:	41 41 41 41 1f 1f d8 41 1f 1f 1f 1f 41 1f d8 41     AAAA...A....A..A
    4ba3:	1f 1f 1f 1f 41 41 d8 41 1f 1f 1f 1f 41 d8 d8 41     ....AA.A....A..A
    4bb3:	fe 41 41 41 1f d8 b7 ff 41 41 41 1f 41 d8 b7 ff     .AAA....AAA.A...
    4bc3:	41 d8 41 1f 41 d8 b7 b7 41 d8 d8 41 1f 41 d8 b7     A.A.A...A..A.A..
    4bd3:	41 d8 41 41 1f 1f 41 b7 41 d8 41 fe 41 1f 1f 41     A.AA..A.A.A.A..A
    4be3:	41 d8 41 fe 41 d8 1f 1f 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    4bf3:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4c03:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4c13:	b7 b7 b7 b7 41 1f 41 fe 41 41 41 41 1f 1f d8 41     ....A.A.AAAA...A
    4c23:	1f 1f 1f 41 1f d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4c33:	fe fe 41 1f 1f 41 d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..A..A...A...A..
    4c43:	41 1f 1f 1f 1f 1f 41 d8 41 1f 1f 1f 41 1f 1f 41     A.....A.A...A..A
    4c53:	fe 41 d8 d8 d8 41 1f 1f fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4c63:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4c73:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4c83:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4c93:	41 41 41 41 41 41 fe fe 1f 1f 1f 1f 41 d8 41 fe     AAAAAA......A.A.
    4ca3:	41 1f 1f 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    4cb3:	41 1f 41 41 b7 ff ff 41 41 1f 1f 41 b7 b7 ff ff     A.AA...AA..A....
    4cc3:	41 1f 1f 1f d8 b7 b7 41 fe 41 1f 1f 41 b7 41 41     A......A.A..A.AA
    4cd3:	fe 41 1f 1f 1f 41 b7 41 fe fe 41 1f 1f 1f 1f 1f     .A...A.A..A.....
    4ce3:	fe fe 41 1f 1f 1f 1f 1f fe fe 41 1f 1f 1f 1f 1f     ..A.......A.....
    4cf3:	41 b7 41 ff 41 1f 41 fe ff b7 ff b7 41 1f 41 fe     A.A.A.A.....A.A.
    4d03:	41 41 b7 41 1f 41 fe fe 41 41 41 1f 41 fe fe fe     AA.A.A..AAA.A...
    4d13:	41 41 1f 1f 41 fe fe fe 1f 1f 1f 41 fe fe fe fe     AA..A......A....
    4d23:	1f 1f 1f 41 fe fe fe fe 1f 1f 1f 41 41 41 fe fe     ...A.......AAA..
    4d33:	fe fe 41 41 41 1f d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..AAA....A...A..
    4d43:	41 d8 d8 1f 1f 1f 41 b7 41 d8 d8 1f 1f 41 1f 1f     A.....A.A....A..
    4d53:	41 d8 41 41 41 1f 1f 1f 41 41 fe fe 41 1f 1f 1f     A.AAA...AA..A...
    4d63:	fe fe fe fe 41 1f 41 d8 fe fe 41 41 41 d8 1f 41     ....A.A...AAA..A
    4d73:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4d83:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4d93:	1f d8 b7 b7 b7 41 41 41 1f 1f 41 41 41 d8 d8 41     .....AAA..AAA..A
    4da3:	1f 1f d8 d8 d8 d8 d8 41 d8 1f d8 d8 d8 d8 d8 41     .......A.......A
    4db3:	fe fe 41 1f d8 b7 b7 b7 fe fe 41 41 d8 b7 b7 41     ..A.......AA...A
    4dc3:	fe 41 1f 41 d8 b7 b7 b7 41 41 1f 1f 41 d8 b7 b7     .A.A....AA..A...
    4dd3:	41 d8 1f 1f 1f 41 b7 41 41 d8 41 1f 1f 1f 41 b7     A....A.AA.A...A.
    4de3:	41 d8 41 41 41 1f 1f 1f 41 d8 d8 d8 41 1f 1f 1f     A.AAA...A...A...
    4df3:	b7 b7 b7 b7 b7 41 fe fe 41 41 b7 41 41 41 fe fe     .....A..AA.AAA..
    4e03:	b7 b7 b7 b7 b7 41 41 fe 41 41 41 b7 41 1f 41 41     .....AA.AAA.A.AA
    4e13:	41 41 41 41 1f 1f 1f 41 41 41 41 1f 41 1f 1f 41     AAAA...AAAA.A..A
    4e23:	1f 1f 1f 1f 41 d8 d8 41 1f 1f 1f 41 d8 d8 41 41     ....A..A...A..AA
    4e33:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4e43:	fe fe 1c 1c 1c 1c 03 03 fe fe 1c 1c 1c 1c 03 03     ................
    4e53:	fe fe 1c 1c 1c 03 03 ff fe fe 1c 1c 03 03 ff ff     ................
    4e63:	fe fe 1c fe ff ff ff ff fe fe fe fe fe 27 27 fe     .............''.
    4e73:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4e83:	03 1c 1c 1c 1c fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4e93:	03 03 1c 1c 1c fe fe fe ff 03 03 1c 1c fe fe fe     ................
    4ea3:	27 27 ff fe 1c fe fe fe fe fe fe fe fe fe fe fe     ''..............
    4eb3:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4ec3:	fe 1c 1c 1c 1c 03 03 03 1c 1c 1c 1c 03 03 03 03     ................
    4ed3:	1c 1c fe 03 03 03 03 ff fe fe fe fe 03 03 ff ff     ................
    4ee3:	fe fe fe fe ff ff ff ff fe fe fe fe 27 27 fe fe     ............''..
    4ef3:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4f03:	03 03 1c 1c 1c 1c fe fe 03 03 03 1c 1c 1c 1c fe     ................
    4f13:	03 03 03 03 fe 1c 1c fe ff 03 03 fe fe fe fe fe     ................
    4f23:	ff ff ff fe fe fe fe fe fe 27 27 fe fe fe fe fe     .........''.....
    4f33:	fe fe 18 39 39 39 39 39 fe fe 18 39 18 18 18 18     ...99999...9....
    4f43:	fe 18 39 18 18 00 00 00 fe 39 18 18 00 18 18 18     ..9......9......
    4f53:	fe 39 18 00 18 18 18 18 39 18 18 18 18 18 18 18     .9......9.......
    4f63:	18 10 10 fe 10 18 10 fe 18 10 fe fe fe 10 fe fe     ................
    4f73:	39 39 39 39 39 18 fe fe 18 18 18 18 39 18 fe fe     99999.......9...
    4f83:	00 00 00 18 18 39 18 fe 18 18 18 00 18 18 39 fe     .....9........9.
    4f93:	18 18 18 18 00 18 39 fe 18 18 18 18 18 18 18 39     ......9........9
    4fa3:	10 18 10 fe 10 18 18 39 fe 10 fe fe fe 10 10 18     .......9........
    4fb3:	00 ff 00 00 00 ff 00 18 00 ff ff ff ff ff 00 39     ...............9
    4fc3:	fe 00 00 00 00 00 39 39 fe fe 18 39 39 39 39 39     ......99...99999
    4fd3:	fe fe 18 39 18 18 18 18 fe 18 39 18 18 00 00 00     ...9......9.....
    4fe3:	18 39 00 00 00 18 18 10 10 10 18 10 10 10 18 18     .9..............
    4ff3:	18 00 ff 00 00 00 ff 00 39 00 ff ff ff ff ff 00     ........9.......
    5003:	39 39 00 00 00 00 00 fe 39 39 39 39 39 18 fe fe     99......99999...
    5013:	18 18 18 18 39 18 fe fe 00 00 00 18 18 39 18 fe     ....9........9..
    5023:	10 18 18 00 00 00 39 18 18 18 10 10 10 18 10 10     ......9.........
    5033:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    5043:	fe fe fe 41 f8 f8 d8 d8 fe fe 41 d8 d8 f8 f8 f8     ...A......A.....
    5053:	fe 41 41 d8 d8 d8 f8 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    5063:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    5073:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    5083:	d8 d8 f8 f8 f8 41 fe fe 41 f8 f8 f8 d8 41 fe fe     .....A..A....A..
    5093:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    50a3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    50b3:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 f8 41 41 d8     ..AAAA...A.A.AA.
    50c3:	41 d8 d8 f8 f8 f8 41 41 41 d8 41 d8 f8 f8 41 fe     A.....AAA.A...A.
    50d3:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    50e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    50f3:	d8 d8 d8 41 fe 41 41 fe f8 f8 f8 41 fe fe fe fe     ...A.AA....A....
    5103:	41 f8 d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    5113:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    5123:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    5133:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 f8     ....A..A.....AA.
    5143:	fe fe fe fe 41 41 f8 f8 fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    5153:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    5163:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    5173:	d8 41 f8 41 fe fe fe fe f8 41 f8 41 fe fe fe fe     .A.A.....A.A....
    5183:	f8 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    5193:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    51a3:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    51b3:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    51c3:	fe fe 41 f8 f8 d8 d8 d8 fe fe 41 f8 f8 f8 f8 41     ..A.......A....A
    51d3:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    51e3:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    51f3:	d8 d8 d8 f8 f8 f8 41 fe d8 d8 f8 f8 f8 d8 41 fe     ......A.......A.
    5203:	d8 f8 f8 f8 d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    5213:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    5223:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5233:	fe 41 41 f8 d8 d8 d8 d8 fe 41 d8 f8 f8 d8 d8 d8     .AA......A......
    5243:	41 d8 d8 d8 f8 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    5253:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    5263:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    5273:	41 41 41 41 41 41 41 41 d8 f8 f8 f8 41 fe fe fe     AAAAAAAA....A...
    5283:	f8 f8 f8 d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5293:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    52a3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    52b3:	41 d8 d8 d8 41 f8 f8 f8 41 41 41 41 41 d8 f8 f8     A...A...AAAAA...
    52c3:	fe fe fe 41 d8 d8 f8 f8 fe fe fe 41 d8 d8 d8 f8     ...A.......A....
    52d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe fe 41 41 41     ....A........AAA
    52e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    52f3:	f8 41 f8 41 d8 d8 41 fe d8 d8 41 41 41 41 fe fe     .A.A..A...AAAA..
    5303:	d8 d8 d8 41 41 41 fe fe d8 d8 d8 d8 d8 41 41 41     ...AAA.......AAA
    5313:	41 d8 d8 d8 d8 d8 d8 41 41 41 d8 d8 d8 d8 d8 41     A......AAA.....A
    5323:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    5333:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    5343:	fe fe fe 41 1f 1f d8 d8 fe fe 41 d8 d8 1f 1f 1f     ...A......A.....
    5353:	fe 41 41 d8 d8 d8 1f 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    5363:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    5373:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    5383:	d8 d8 1f 1f 1f 41 fe fe 41 1f 1f 1f d8 41 fe fe     .....A..A....A..
    5393:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    53a3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    53b3:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 1f 41 41 d8     ..AAAA...A.A.AA.
    53c3:	41 d8 d8 1f 1f 1f 41 41 41 d8 41 d8 1f 1f 41 fe     A.....AAA.A...A.
    53d3:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    53e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    53f3:	d8 d8 d8 41 fe 41 41 fe 1f 1f 1f 41 fe fe fe fe     ...A.AA....A....
    5403:	41 1f d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    5413:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    5423:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    5433:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 1f     ....A..A.....AA.
    5443:	fe fe fe fe 41 41 1f 1f fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    5453:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    5463:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    5473:	d8 41 1f 41 fe fe fe fe 1f 41 1f 41 fe fe fe fe     .A.A.....A.A....
    5483:	1f 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    5493:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    54a3:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    54b3:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    54c3:	fe fe 41 1f 1f d8 d8 d8 fe fe 41 1f 1f 1f 1f 41     ..A.......A....A
    54d3:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    54e3:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    54f3:	d8 d8 d8 1f 1f 1f 41 fe d8 d8 1f 1f 1f d8 41 fe     ......A.......A.
    5503:	d8 1f 1f 1f d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    5513:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    5523:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5533:	fe 41 41 1f d8 d8 d8 d8 fe 41 d8 1f 1f d8 d8 d8     .AA......A......
    5543:	41 d8 d8 d8 1f 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    5553:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    5563:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    5573:	41 41 41 41 41 41 41 41 d8 1f 1f 1f 41 fe fe fe     AAAAAAAA....A...
    5583:	1f 1f 1f d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5593:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    55a3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    55b3:	41 d8 d8 d8 41 1f 1f 1f 41 41 41 41 41 d8 1f 1f     A...A...AAAAA...
    55c3:	fe fe fe 41 d8 d8 1f 1f fe fe fe 41 d8 d8 d8 1f     ...A.......A....
    55d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe fe 41 41 41     ....A........AAA
    55e3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    55f3:	1f 41 1f 41 d8 d8 41 fe d8 d8 41 41 41 41 fe fe     .A.A..A...AAAA..
    5603:	d8 d8 d8 41 41 41 fe fe d8 d8 d8 d8 d8 41 41 41     ...AAA.......AAA
    5613:	41 d8 d8 d8 d8 d8 d8 41 41 41 d8 d8 d8 d8 d8 41     A......AAA.....A
    5623:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    5633:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5643:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5653:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5663:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................

00005673 <blob1>:
    5673:	02 02 1e 1f 3e 3f                                   ....>?

00005679 <blob0>:
    5679:	02 02 1c 1d 3c 3d                                   ....<=

0000567f <owl1>:
    567f:	02 02 1a 1b 3a 3b                                   ....:;

00005685 <owl0>:
    5685:	02 02 18 19 38 39                                   ....89

0000568b <man5>:
    568b:	02 03 16 17 36 37 56 57                             ....67VW

00005693 <man4>:
    5693:	02 03 14 15 34 35 54 55                             ....45TU

0000569b <man3>:
    569b:	02 03 12 13 32 33 52 53                             ....23RS

000056a3 <man2>:
    56a3:	02 03 10 11 30 31 50 51                             ....01PQ

000056ab <man1>:
    56ab:	02 03 0e 0f 2e 2f 4e 4f                             ...../NO

000056b3 <man0>:
    56b3:	02 03 0c 0d 2c 2d 4c 4d                             ....,-LM

000056bb <melli5>:
    56bb:	02 03 0a 0b 2a 2b 4a 4b                             ....*+JK

000056c3 <melli4>:
    56c3:	02 03 08 09 28 29 48 49                             ....()HI

000056cb <melli3>:
    56cb:	02 03 06 07 26 27 46 47                             ....&'FG

000056d3 <melli2>:
    56d3:	02 03 04 05 24 25 44 45                             ....$%DE

000056db <melli1>:
    56db:	02 03 02 03 22 23 42 43                             ...."#BC

000056e3 <melli0>:
    56e3:	02 03 00 01 20 21 40 41                             .... !@A

000056eb <uMTiles>:
    56eb:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    56fb:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    570b:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    571b:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    572b:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    573b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    574b:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    575b:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    576b:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    577b:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    578b:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    579b:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    57ab:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    57bb:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    57cb:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    57db:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    57eb:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    57fb:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    580b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    581b:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    582b:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    583b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    584b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    585b:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    586b:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    587b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    588b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    589b:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    58ab:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    58bb:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    58cb:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    58db:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    58eb:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    58fb:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    590b:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    591b:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    592b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    593b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    594b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    595b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    596b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    597b:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    598b:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    599b:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    59ab:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    59bb:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    59cb:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    59db:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    59eb:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    59fb:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5a0b:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    5a1b:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    5a2b:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    5a3b:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    5a4b:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    5a5b:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    5a6b:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    5a7b:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    5a8b:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    5a9b:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    5aeb:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    5afb:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5b0b:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    5b1b:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    5b2b:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    5b3b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5b4b:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    5b5b:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    5b6b:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    5b7b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    5b8b:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    5b9b:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    5bab:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    5bbb:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    5bcb:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    5bdb:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    5beb:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    5bfb:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    5c0b:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    5c1b:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    5c2b:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    5c3b:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    5c4b:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    5c5b:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    5c6b:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    5c7b:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    5c8b:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    5c9b:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    5cab:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    5cbb:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    5ccb:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    5cdb:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    5ceb:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    5cfb:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    5d0b:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    5d1b:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    5d2b:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5d3b:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5d4b:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    5d5b:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5d6b:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    5d7b:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    5d8b:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    5d9b:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    5dab:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    5def:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5e2b:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    5e3b:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    5e4b:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5e5b:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    5e6b:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    5e7b:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    5e8b:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    5e9b:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    5eab:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    5ebb:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5ecb:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5edb:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
    5eeb:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    5efb:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5f0b:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5f1b:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    5f2b:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5f3b:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5f4b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5f5b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5f6b:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    5f7b:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5f8b:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    5f9b:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    5fab:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    5fbb:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5fcb:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5fdb:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5feb:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5ffb:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    600b:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    601b:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    602b:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    603b:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    604b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    605b:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    606b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    607b:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    608b:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    609b:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    60ab:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    60bb:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    60cb:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    60db:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    60eb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    60fb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    610b:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    611b:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    612b:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    613b:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    614b:	e4 e4 1a 63 64 6d 6d 76 e4 e4 1a 63 63 6d 64 6d     ...cdmmv...ccmdm
    615b:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    616b:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    617b:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    618b:	6e 77 b7 b7 b7 77 b7 76 76 b7 b7 b7 b7 b7 6e 6e     nw...w.vv.....nn
    619b:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    61ab:	1b 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6e 6d 76     ..mmvww...dcmnmv
    61bb:	1a 63 64 1a 64 6d 6d 6e 11 1a 63 64 6d 6e 6e 77     .cd.dmmn..cdmnnw
    61cb:	e4 11 11 1a 63 1a 63 1b e4 e4 11 11 19 63 1b 64     ....c.c......c.d
    61db:	e4 e4 11 63 63 6c 6d 6d e4 e4 19 64 63 64 6e 6d     ...cclmm...dcdnm
    61eb:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 6e 77 77     .......ww...vnww
    61fb:	77 b7 b7 76 6e 77 76 76 77 b7 bf b7 77 77 77 77     w..vnwvvw...wwww
    620b:	64 64 64 63 64 64 64 64 65 63 6d 6d 6c 6d 6c 6c     dddcddddecmmlmll
    621b:	76 76 b7 b7 b7 77 77 76 6e b7 b7 b7 77 77 76 76     vv...wwvn...wwvv
    622b:	77 77 76 6e 6e 76 6e 6d 6e 6e 76 6e 6d 6d 64 64     wwvnnvnmnnvnmmdd
    623b:	6e 6e 6e 6d 6d 6d 64 6d 77 76 6e 76 64 6d 63 63     nnnmmmdmwvnvdmcc
    624b:	64 64 64 23 1a 1a 1a 11 63 63 63 1a 1a 19 11 08     ddd#....ccc.....
    625b:	76 76 6d 6d 6d 6d 1b 1a 6e 6d 76 6d 64 64 63 63     vvmmmm..nmvmddcc
    626b:	1b 64 6c 1a 1a 63 11 11 63 64 63 11 11 1a 11 11     .dl..c..cdc.....
    627b:	63 63 1a 11 11 11 11 11 63 1a 1a 1a 19 11 11 11     cc......c.......
    628b:	11 11 11 11 11 11 11 e4 11 11 11 11 11 11 e4 e4     ................
    629b:	63 1a 08 11 11 11 e4 e4 19 19 11 11 11 11 e4 e4     c...............
    62ab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62bb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62cb:	e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4 e4 e4 15 16     ................
    62db:	e4 e4 e4 e4 0c 15 16 1f e4 e4 e4 14 15 16 1f 67     ...............g
    62eb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    62fb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    630b:	14 14 14 e4 e4 e4 e4 e4 16 1d 14 14 14 e4 e4 e4     ................
    631b:	1f 1f 16 15 0c e4 e4 e4 5f 67 66 15 14 14 e4 e4     ........_gf.....
    632b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 15 15 15     ................
    633b:	e4 e4 14 14 16 16 1f 1f e4 14 15 1d 1f 1f 67 67     ..............gg
    634b:	e4 15 16 1e 1f 17 5f 67 14 15 16 17 1f 67 67 1f     ......_g.....gg.
    635b:	0c 1d 1e 17 17 6e 6f 1f 0c 5d 6e 17 17 6e 67 1f     .....no..]n..ng.
    636b:	e4 e4 e4 e4 e4 e4 e4 e4 14 14 e4 e4 e4 e4 e4 e4     ................
    637b:	16 0d 0c e4 e4 e4 e4 e4 17 16 15 14 e4 e4 e4 e4     ................
    638b:	1f 77 5e 15 14 e4 e4 e4 1f 77 66 16 15 14 e4 e4     .w^......wf.....
    639b:	1f 1f 1f 17 1d 1d 0c e4 1f 17 17 1f 5e 15 14 e4     ............^...
    63ab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63bb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 74 74     ..............tt
    63cb:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4 74 74 74     .....ttt.....ttt
    63db:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 74 74 74 74 74     .....ttt...ttttt
    63eb:	e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 74 74 e4 e4     ........t...tt..
    63fb:	74 e4 74 74 74 74 e4 74 74 74 e4 e4 74 74 74 e4     t.tttt.ttt..ttt.
    640b:	74 e4 74 74 74 74 74 74 74 74 74 74 74 74 74 74     t.tttttttttttttt
    641b:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    642b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 e4 e4 e4     .........t......
    643b:	e4 74 e4 e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4     .t......ttt.....
    644b:	74 74 74 e4 e4 e4 74 e4 74 74 74 74 e4 74 e4 e4     ttt...t.tttt.t..
    645b:	74 74 74 e4 74 74 74 e4 e4 74 74 74 74 74 74 e4     ttt.ttt..tttttt.
    646b:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    647b:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    648b:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    649b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    64ab:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    64bb:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    64cb:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    64db:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    64eb:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 00 ff     ................
    64fb:	e4 e4 e4 e4 e4 00 ff ff e4 e4 e4 e4 00 ff ff ff     ................
    650b:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 ff ff 3a 3a     .....:.:......::
    651b:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    652b:	00 e4 e4 e4 e4 e4 e4 e4 3a 00 e4 e4 e4 e4 e4 e4     ........:.......
    653b:	3a 3a 00 e4 e4 e4 e4 e4 3a 3a 3a 00 e4 e4 e4 e4     ::......:::.....
    654b:	00 3a 00 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     .:.:....:.::....
    655b:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    656b:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    657b:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    658b:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    659b:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    65ab:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    65bb:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    65cb:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    65db:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    65eb:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    65fb:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    660b:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    661b:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    662b:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    663b:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    664b:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    665b:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    666b:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    667b:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    668b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    669b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    66ab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    66bb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    66cb:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    66db:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    66eb:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    66fb:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    670b:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    671b:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    672b:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    673b:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    674b:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    675b:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    676b:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    677b:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    678b:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    679b:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    67ab:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    67bb:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    67cb:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    67db:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    67eb:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    67fb:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    680b:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    681b:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    682b:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    683b:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    684b:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    685b:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    686b:	e4 e4 e4 14 66 1f 1f 67 e4 e4 14 16 27 1f 1f 1f     ....f..g....'...
    687b:	e4 e4 15 1e 17 1f 5f 67 e4 14 15 27 17 17 5f be     ......_g...'.._.
    688b:	e4 14 16 1e 1f 1f 1f 6e e4 14 16 1e 1e 67 17 16     .......n.....g..
    689b:	e4 14 15 1e 16 1e 16 16 e4 e4 14 15 16 16 16 1e     ................
    68ab:	1f 6e 6e 16 1c 0c e4 e4 1f 1f 1e 16 1d 14 e4 e4     .nn.............
    68bb:	1f 17 17 16 15 14 14 e4 1f 17 1e 15 14 14 e4 e4     ................
    68cb:	1f 16 1d 15 14 14 e4 e4 17 16 15 14 0c e4 e4 e4     ................
    68db:	16 15 0d 14 e4 e4 e4 e4 15 0c 14 5c e4 e4 e4 e4     ...........\....
    68eb:	0c 1d 66 17 1f 1f 1f 1f 14 15 16 1f 1f 1f 1f 1f     ..f.............
    68fb:	e4 15 16 17 1f 1f 1f 1f e4 14 15 16 1e 1e 1f 1f     ................
    690b:	e4 e4 15 16 16 1f 1f 1f e4 e4 14 15 16 17 1f 1f     ................
    691b:	e4 5b 64 14 15 16 16 1e e4 5b 6d 64 14 14 14 15     .[d......[md....
    692b:	5f 1f 17 27 1e 0d 14 e4 6f 6f 17 17 1e 15 14 14     _..'....oo......
    693b:	6f 6e 17 17 6e 65 0c 14 1f 1f 1f 17 6e 65 0c 14     on..ne......ne..
    694b:	17 17 1f 17 16 15 14 14 1e 17 1e 1e 16 15 14 e4     ................
    695b:	1e 16 1e 16 15 14 14 e4 16 16 16 15 14 14 e4 e4     ................
    696b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    697b:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 74 74 e4 74     .....ttt....tt.t
    698b:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    699b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    69ab:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    69bb:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    69cb:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    69db:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    69eb:	74 74 74 74 74 74 e4 e4 74 74 74 74 74 e4 e4 e4     tttttt..ttttt...
    69fb:	74 74 74 74 74 e4 74 e4 74 74 74 74 74 74 e4 e4     ttttt.t.tttttt..
    6a0b:	74 74 74 74 74 74 74 e4 74 74 74 74 74 74 e4 e4     ttttttt.tttttt..
    6a1b:	74 74 74 74 74 74 e4 74 74 74 74 74 74 74 74 e4     tttttt.tttttttt.
    6a2b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    6a3b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    6a4b:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    6a5b:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    6a6b:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    6a7b:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    6a8b:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    6a9b:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    6aab:	e4 e4 e4 00 ff ff 3a 3a e4 e4 e4 00 ff ff 3a 3a     ......::......::
    6abb:	e4 e4 e4 00 ff 3a ff 3a e4 e4 e4 00 3a 3a 3a ff     .....:.:....:::.
    6acb:	e4 e4 e4 e4 00 3a 3a 3a e4 e4 e4 e4 e4 00 3a 3a     .....:::......::
    6adb:	e4 e4 e4 e4 e4 e4 00 3a e4 e4 e4 e4 e4 e4 e4 00     .......:........
    6aeb:	3a 00 3a 3a 00 e4 e4 e4 3a 00 3a 3a 00 e4 e4 e4     :.::....:.::....
    6afb:	3a 00 3a 3a 00 e4 e4 e4 00 ff 00 3a 00 e4 e4 e4     :.::.......:....
    6b0b:	3a 3a 3a 00 e4 e4 e4 e4 3a 3a 00 e4 e4 e4 e4 e4     :::.....::......
    6b1b:	3a 00 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     :...............
    6b2b:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    6b3b:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    6b4b:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    6b5b:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    6b6b:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    6b7b:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    6b8b:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    6b9b:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    6bab:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    6bbb:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    6bcb:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    6bdb:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    6beb:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6bfb:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6c0b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6c1b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6c2b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6c3b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    6c4b:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    6c5b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    6c6b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6c7b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6c8b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    6c9b:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    6cab:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6cbb:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6ccb:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    6cdb:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6ceb:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6cfb:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6d0b:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    6d1b:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6d2b:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    6d3b:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    6d4b:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    6d5b:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    6d6b:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    6d7b:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    6d8b:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    6d9b:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    6dab:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6dbb:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    6dcb:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    6ddb:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    6deb:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6dfb:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    6e0b:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    6e1b:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    6e2b:	e4 e4 e4 14 15 15 15 14 e4 e4 e4 e4 14 14 14 14     ................
    6e3b:	e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4 5b     .......[.......[
    6e4b:	e4 14 0c 14 e4 e4 e4 5b 14 16 1e 5e 1c e4 e4 5b     .......[...^...[
    6e5b:	1e 1f 67 67 15 0c e4 5b 16 67 1f 1e 15 0c e4 5b     ..gg...[.g.....[
    6e6b:	14 14 5c 64 64 e4 e4 e4 14 64 6d 6d 64 13 e4 e4     ..\dd....dmmd...
    6e7b:	64 6d 76 76 1c 15 5e 14 6d 6e bf 65 0c 67 67 1e     dmvv..^.mn.e.gg.
    6e8b:	6d 76 6e 0c 16 67 67 1f 6d 6d 65 15 1f 17 67 1f     mvn..gg.mme...g.
    6e9b:	65 6d 5c 15 1e 17 1f 1f 64 6e 6d 14 16 1f 1f 1f     em\.....dnm.....
    6eab:	5b 64 6d 6d 64 64 5c 14 5b 64 6d 6e 76 6d 6d 63     [dmmdd\.[dmnvmmc
    6ebb:	14 5c 6d 6e 77 76 76 64 15 14 6d 76 77 76 76 64     .\mnwvvd..mvwvvd
    6ecb:	1f 1d 1d b7 77 6e 6e 6d 67 1e 0c 6e bf 76 6d 65     ....wnnmg..n.vme
    6edb:	67 1e 0c 65 bf bf 6d 64 16 1d 14 65 bf 77 6e 64     g..e..md...e.wnd
    6eeb:	14 15 14 14 0c e4 e4 e4 13 0c 14 e4 e4 e4 e4 e4     ................
    6efb:	e4 e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     ........[.......
    6f0b:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6f1b:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6f2b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 74 74 74 e4 74     ...ttttt...ttt.t
    6f3b:	e4 e4 e4 e4 74 e4 74 74 e4 e4 e4 74 74 e4 e4 74     ....t.tt...tt..t
    6f4b:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    6f5b:	e4 e4 e4 e4 e4 74 e4 74 e4 e4 e4 e4 e4 e4 e4 74     .....t.t.......t
    6f6b:	74 74 74 1d 74 74 74 74 1d 74 74 1d 74 74 74 74     ttt.tttt.tt.tttt
    6f7b:	1c 1d 1d 1d 74 74 74 1d 74 1c 1c 1c 74 74 74 1c     ....ttt.t...ttt.
    6f8b:	74 1d 1d 1c 1d 1c 1c 1c 74 74 74 1c 1c 1c 1c 1c     t.......ttt.....
    6f9b:	e4 74 74 1d 1c 1c 1c 74 74 e4 e4 74 1c 1c 1c e4     .tt....tt..t....
    6fab:	74 1d 1d 74 74 74 74 74 1d 1d 1d 74 74 74 74 e4     t..ttttt...tttt.
    6fbb:	1c 74 74 74 74 e4 74 e4 74 74 74 74 e4 e4 74 e4     .tttt.t.tttt..t.
    6fcb:	1c 1c 1c 74 74 e4 e4 e4 1d 74 74 74 74 e4 e4 e4     ...tt....tttt...
    6fdb:	e4 74 74 e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4     .tt......tt.....
	...
    6ff3:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    7003:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    7013:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7023:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    7033:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    7043:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7053:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7063:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    7073:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    7083:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7093:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    70b3:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70c3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    70f3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 00     ................
    7103:	e4 e4 e4 e4 e4 00 00 3f e4 e4 e4 e4 00 3f 3f 3f     .......?.....???
    7113:	e4 00 00 00 3f 3f 00 3f 00 3f 3f 3f 3f 3f 3f 3f     ....??.?.???????
    7123:	e4 00 00 00 00 00 00 00 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7133:	e4 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    7143:	3f 00 00 e4 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ?.......???.....
    7153:	3f 00 3f 3f 00 00 00 e4 3f 3f 3f 3f 3f 3f 3f 00     ?.??....???????.
    7163:	00 00 00 00 00 00 00 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    7173:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    7183:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7193:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71a3:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    71b3:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    71c3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    71e3:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    71f3:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    7203:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7213:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7223:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    7233:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    7243:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7253:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7263:	e4 e4 e4 e4 e4 e4 e4 e4 6e 6e 6d 64 6c 6d 63 63     ........nnmdlmcc
    7273:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    7283:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    7293:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    72a3:	76 6d 6c 6d 6d 6d 64 63 63 11 1a 19 11 11 e4 e4     vmlmmmdcc.......
    72b3:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    72c3:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    72d3:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    72e3:	23 1a 11 19 11 09 e4 e4 e4 e4 1a 63 63 6d 6d 6d     #..........ccmmm
    72f3:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    7303:	e4 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6d 6d 76     ..mmvww...dcmmmv
    7313:	1a 63 1b 64 6d 64 76 76 11 1a 64 63 64 6d 76 76     .c.dmdvv..dcdmvv
    7323:	1a 1a 1b 64 6d 6e 6e 76 6e 77 b7 b7 77 77 77 6e     ...dmnnvnw..wwwn
    7333:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    7343:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 76 77 76     .......ww...vvwv
    7353:	77 b7 b7 b7 b7 6e 6e 76 6e b7 b7 77 76 6e 6e 76     w....nnvn..wvnnv
    7363:	77 b7 b7 77 76 77 77 76 6e 6e 6d 64 64 63 63 63     w..wvwwvnnmddccc
    7373:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    7383:	77 77 76 6e 76 76 6e 6d 6e 6e 6e 6d 6d 64 64 63     wwvnvvnmnnnmmddc
    7393:	6e 6e 6d 6d 64 6d 64 64 76 6e 6e 6e 6d 64 64 63     nnmmdmddvnnnmddc
    73a3:	6e 6e 6d 76 6d 63 63 6c 11 1a 19 19 11 11 e4 e4     nnmvmccl........
    73b3:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    73c3:	1b 6c 6d 19 1a 63 11 e4 64 63 1a 11 11 11 11 11     .lm..c..dc......
    73d3:	64 1a 1b 1a 19 11 11 11 1a 63 1a 11 11 11 11 11     d........c......
    73e3:	63 1b 1a 11 19 11 11 11 15 1e 16 15 14 13 e4 e4     c...............
    73f3:	14 14 14 0c 1c 5b e4 e4 e4 e4 5b 5c 64 64 e4 e4     .....[....[\dd..
    7403:	e4 e4 5b 6d 6e 64 5b e4 e4 e4 5b 64 6e 65 5b e4     ..[mnd[...[dne[.
    7413:	e4 e4 e4 5c 6d 65 5b e4 e4 e4 e4 5b 65 6d 5b e4     ...\me[....[em[.
    7423:	e4 e4 e4 e4 64 65 5b e4 5c 6d 76 65 0c 16 1e 16     ....de[.\mve....
    7433:	5b 64 76 76 5c 14 14 14 5b 64 6d 6e 64 5c 5c 5c     [dvv\...[dmnd\\\
    7443:	e4 5c 6d 65 5b 6d 76 6d e4 5b 64 64 5b 6d 76 6e     .\me[mvm.[dd[mvn
    7453:	e4 e4 5c 64 64 64 6e 6e e4 e4 5b 65 64 5b 6d 65     ..\dddnn..[ed[me
    7463:	e4 e4 e4 64 6d 5c 6d 64 0d 0c 1c 76 bf 76 6e 64     ...dm\md...v.vnd
    7473:	0c 14 6d 77 76 6e 6d 5b 5b 6d 76 76 6d 6d 64 5b     ..mwvnm[[mvvmmd[
    7483:	64 6d bf 76 6d 64 5c e4 64 64 76 76 65 64 5b e4     dm.vmd\.ddvved[.
    7493:	5b 64 76 76 6d 5b e4 e4 5b 6d 76 6e 65 5b e4 e4     [dvvm[..[mvne[..
    74a3:	64 6e 76 6d 64 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     dnvmd...........
    74b3:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff e4 e4     ................
    74c3:	e4 ff e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4     ................
    74d3:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    74e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    74f3:	e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7503:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7513:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7523:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7533:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7543:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7553:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7563:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7573:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7583:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7593:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    75a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    75b3:	e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    75c3:	e4 ff e4 e4 ff e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    75d3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    75e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    75f3:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    7603:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7613:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7623:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4     ................
    7633:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    7643:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7653:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7663:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7673:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7683:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7693:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    76a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    76b3:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    76c3:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    76d3:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    76e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    76f3:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7703:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7713:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4     ................
    7723:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7733:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7743:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7753:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7763:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7773:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7783:	e4 e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff     ................
    7793:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    77a3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    77b3:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    77c3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    77d3:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    77e3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    77f3:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff     ................
    7803:	e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 ff e4 e4     ................
    7813:	e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff     ................
    7823:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    7833:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    7843:	e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    7853:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    7863:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4 ff     ................
    7873:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    7883:	ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    7893:	ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 e4 ff     ................
    78a3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4     ................
    78b3:	e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff e4     ................
    78c3:	e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff     ................
    78d3:	e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 e4     ................
    78e3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    78f3:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7903:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7913:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7923:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7933:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4     ................
    7943:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7953:	ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7963:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7973:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7983:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7993:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    79a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 ff     ................
    79b3:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    79c3:	e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    79d3:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    79e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    79f3:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7a03:	ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 ff e4 e4     ................
    7a13:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff     ................
    7a23:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7a33:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7a43:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7a53:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7a63:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7a73:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7a83:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7a93:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7aa3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff     ................
    7ab3:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7ac3:	ff e4 e4 ff ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7ad3:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff     ................
    7ae3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff ff ff ff ff     ................
    7af3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7b03:	ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7b13:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 ff e4 e4     ................
    7b23:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    7b33:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7b43:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 ff     ................
    7b53:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7b63:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    7b73:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4     ................
    7b83:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7b93:	ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4     ................
    7ba3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff ff     ................
    7bb3:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    7bc3:	e4 ff e4 ff e4 e4 ff e4 ff ff ff ff ff e4 ff e4     ................
    7bd3:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7be3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7bf3:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 ff     ................
    7c03:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7c13:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7c23:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7c33:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7c43:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7c53:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7c63:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff     ................
    7c73:	ff e4 e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff     ................
    7c83:	ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    7c93:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    7ca3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    7cb3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7cc3:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7cd3:	e4 e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7ce3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff     ................
    7cf3:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7d03:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7d13:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7d23:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    7d33:	e4 ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff     ................
    7d43:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7d53:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7d63:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    7d73:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7d83:	ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7d93:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    7da3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 ff     ................
    7db3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7dc3:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7dd3:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7de3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff ff     ................
    7df3:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7e03:	ff ff ff e4 e4 ff ff ff e4 ff e4 e4 e4 ff e4 e4     ................
    7e13:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    7e23:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    7e33:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7e43:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7e53:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    7e63:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4 ff     ................
    7e73:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    7e83:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff ff     ................
    7e93:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    7ea3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4     ................
    7eb3:	e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff     ................
    7ec3:	ff e4 e4 ff ff ff ff e4 ff ff e4 ff e4 ff e4 e4     ................
    7ed3:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7ee3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7ef3:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7f03:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7f13:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7f23:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7f33:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4     ................
    7f43:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7f53:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 0f 0f 0f e4 e4 e4     ................
    7f63:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7f73:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7f83:	e4 ff e4 e4 e4 e4 e4 e4 e4 f6 f6 e4 e4 e4 e4 e4     ................
    7f93:	e4 ad ad f6 e4 e4 e4 e4 e4 ad a4 ad f6 e4 e4 e4     ................
    7fa3:	e4 ad a4 a4 ad f6 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7fb3:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7fc3:	ff e4 e4 ff ff e4 e4 ff ff e4 e4 e4 ff e4 ff ff     ................
    7fd3:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4     ................
    7fe3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7ff3:	ff e4 e4 e4 ff ff e4 ff e4 ff e4 e4 ff e4 ff e4     ................
    8003:	e4 ff e4 e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4     ................
    8013:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    8023:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    8033:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    8043:	ff e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    8053:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    8063:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4     ................
    8073:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    8083:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    8093:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4     ................
    80a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    80b3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    80c3:	e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    80d3:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    80e3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 ff ff ff ff     ................
    80f3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    8103:	ff ff e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4     ................
    8113:	e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4     ................
    8123:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    8133:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    8143:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    8153:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    8163:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff e4     ................
    8173:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    8183:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    8193:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    81a3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff ff     ................
    81b3:	ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    81c3:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    81d3:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    81e3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff e4 e4 ff ff     ................
    81f3:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    8203:	ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    8213:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 e4 ff ff     ................
    8223:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff e4     ................
    8233:	e4 ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    8243:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    8253:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    8263:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    8273:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    8283:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    8293:	e4 e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    82a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    82b3:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    82c3:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    82d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    82e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    82f3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    8303:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    8313:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    8323:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff e4     ................
    8333:	e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff     ................
    8343:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4     ................
    8353:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4     ................
    8363:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4     ................
    8373:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4     ................
    8383:	e4 ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 ff     ................
    8393:	ff ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4     ................
    83a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    83b3:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    83c3:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff     ................
    83d3:	e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    83e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff     ................
    83f3:	e4 ff e4 e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8403:	ff e4 ff e4 e4 e4 ff e4 ff ff ff ff e4 e4 ff e4     ................
    8413:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    8423:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    8433:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    8443:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    8453:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    8463:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    8473:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4     ................
    8483:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff ff ff     ................
    8493:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    84a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4     ................
    84b3:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    84c3:	ff e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    84d3:	e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    84e3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    84f3:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8503:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8513:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    8523:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff e4 ff e4     ................
    8533:	ff ff e4 e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    8543:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 ff ff e4 ff e4     ................
    8553:	ff e4 e4 ff ff e4 e4 e4 ff e4 e4 e4 ff e4 ff e4     ................
    8563:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    8573:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f 0f e4 e4     ................
    8583:	e4 e4 0f 0c 0c 0f e4 e4 e4 0f 0f 0c 0c 0f 0f e4     ................
    8593:	e4 0f 0c 0c 0c 0c 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    85a3:	0f 0f 0c 0c 0c 0c 0f 0f e4 ad a4 a4 a4 ad f6 e4     ................
    85b3:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    85c3:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    85d3:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
	...

000085eb <spike1>:
    85eb:	01 02 a2 bb                                         ....

000085ef <spike0>:
    85ef:	01 02 a1 ba                                         ....

000085f3 <congra0>:
    85f3:	0a 01 b0 b1 b2 b3 b4 b5 b6 b7 b8 b9                 ............

000085ff <timeup0>:
    85ff:	06 01 aa ab ac ad ae af                             ........

00008607 <over0>:
    8607:	07 01 a3 a4 a5 a6 a7 a8 a9                          .........

00008610 <press0>:
    8610:	08 01 9b 9c 97 89 9d 9e 9f a0                       ..........

0000861a <time0>:
    861a:	03 01 98 99 9a                                      .....

0000861f <live0>:
    861f:	03 01 96 8c 97                                      .....

00008624 <get0>:
    8624:	07 01 8f 90 91 92 93 94 95                          .........

0000862d <x0>:
    862d:	01 01 8e                                            ...

00008630 <level0>:
    8630:	04 01 8a 8b 8c 8d                                   ......

00008636 <bonus0>:
    8636:	04 01 86 87 88 89                                   ......

0000863c <score0>:
    863c:	04 01 82 83 84 85                                   ......

00008642 <nm>:
    8642:	01 01 81                                            ...

00008645 <n9>:
    8645:	01 01 80                                            ...

00008648 <n8>:
    8648:	01 01 7f                                            ...

0000864b <n7>:
    864b:	01 01 7e                                            ..~

0000864e <n6>:
    864e:	01 01 7d                                            ..}

00008651 <n5>:
    8651:	01 01 7c                                            ..|

00008654 <n4>:
    8654:	01 01 7b                                            ..{

00008657 <n3>:
    8657:	01 01 7a                                            ..z

0000865a <n2>:
    865a:	01 01 79                                            ..y

0000865d <n1>:
    865d:	01 01 78                                            ..x

00008660 <n0>:
    8660:	01 01 77                                            ..w

00008663 <nb>:
    8663:	01 01 09                                            ...

00008666 <bridge3>:
    8666:	01 01 67                                            ..g

00008669 <bridge2>:
    8669:	01 01 66                                            ..f

0000866c <bridge1>:
    866c:	01 01 65                                            ..e

0000866f <bridge0>:
    866f:	01 01 64                                            ..d

00008672 <mush3>:
    8672:	02 02 5f 60 76 09                                   .._`v.

00008678 <mush2>:
    8678:	02 02 5d 5e 74 75                                   ..]^tu

0000867e <mush1>:
    867e:	02 02 31 32 48 49                                   ..12HI

00008684 <mush0>:
    8684:	02 02 2f 30 46 47                                   ../0FG

0000868a <tube5>:
    868a:	02 02 57 58 6e 6f                                   ..WXno

00008690 <tube4>:
    8690:	02 02 29 2a 40 41                                   ..)*@A

00008696 <tube3>:
    8696:	02 02 5b 5c 72 73                                   ..[\rs

0000869c <tube2>:
    869c:	02 02 59 5a 70 71                                   ..YZpq

000086a2 <tube1>:
    86a2:	02 02 2d 2e 44 45                                   ..-.DE

000086a8 <tube0>:
    86a8:	02 02 2b 2c 42 43                                   ..+,BC

000086ae <cloud3>:
    86ae:	02 02 55 56 6c 6d                                   ..UVlm

000086b4 <cloud2>:
    86b4:	02 02 53 54 6a 6b                                   ..STjk

000086ba <cloud1>:
    86ba:	02 02 28 09 3e 3f                                   ..(.>?

000086c0 <cloud0>:
    86c0:	02 02 26 27 3c 3d                                   ..&'<=

000086c6 <bush4>:
    86c6:	02 02 4c 09 63 09                                   ..L.c.

000086cc <bush3>:
    86cc:	02 02 09 09 35 09                                   ....5.

000086d2 <bush2>:
    86d2:	02 02 4a 4b 61 62                                   ..JKab

000086d8 <bush1>:
    86d8:	02 02 09 09 33 34                                   ....34

000086de <blue>:
    86de:	01 01 09                                            ...

000086e1 <banana2>:
    86e1:	02 01 68 69                                         ..hi

000086e5 <banana>:
    86e5:	02 02 3a 3b 51 52                                   ..:;QR

000086eb <diamond0>:
    86eb:	02 02 38 39 4f 50                                   ..89OP

000086f1 <block3>:
    86f1:	02 02 08 08 19 19                                   ......

000086f7 <block2>:
    86f7:	02 02 36 37 4d 4e                                   ..67MN

000086fd <door3>:
    86fd:	02 02 0f 10 0f 1f                                   ......

00008703 <door2>:
    8703:	02 02 0e 0f 1e 0f                                   ......

00008709 <door1>:
    8709:	02 02 0c 0d 1c 1d                                   ......

0000870f <door0>:
    870f:	02 02 0a 0b 1a 1b                                   ......

00008715 <block5>:
    8715:	02 02 09 08 09 19                                   ......

0000871b <block4>:
    871b:	02 02 08 09 19 09                                   ......

00008721 <ground3>:
    8721:	02 03 07 06 18 17 24 23                             ......$#

00008729 <ground2>:
    8729:	02 03 07 05 18 16 24 25                             ......$%

00008731 <ground1>:
    8731:	02 03 04 06 15 17 22 23                             ......"#

00008739 <ground>:
    8739:	02 03 04 05 15 16 20 21                             ...... !

00008741 <block1>:
    8741:	02 02 02 03 13 14                                   ......

00008747 <block0>:
    8747:	02 02 00 01 11 12                                   ......

0000874d <bigblue0>:
    874d:	02 02 09 09 09 09 00                                .......

00008754 <__ctors_end>:
    8754:	11 24       	eor	r1, r1
    8756:	1f be       	out	0x3f, r1	; 63
    8758:	cf ef       	ldi	r28, 0xFF	; 255
    875a:	d0 e1       	ldi	r29, 0x10	; 16
    875c:	de bf       	out	0x3e, r29	; 62
    875e:	cd bf       	out	0x3d, r28	; 61

00008760 <__do_copy_data>:
    8760:	11 e0       	ldi	r17, 0x01	; 1
    8762:	a0 e0       	ldi	r26, 0x00	; 0
    8764:	b1 e0       	ldi	r27, 0x01	; 1
    8766:	ec e4       	ldi	r30, 0x4C	; 76
    8768:	ff ed       	ldi	r31, 0xDF	; 223
    876a:	02 c0       	rjmp	.+4      	; 0x8770 <__do_copy_data+0x10>
    876c:	05 90       	lpm	r0, Z+
    876e:	0d 92       	st	X+, r0
    8770:	a4 30       	cpi	r26, 0x04	; 4
    8772:	b1 07       	cpc	r27, r17
    8774:	d9 f7       	brne	.-10     	; 0x876c <__do_copy_data+0xc>

00008776 <__do_clear_bss>:
    8776:	2a e0       	ldi	r18, 0x0A	; 10
    8778:	a4 e0       	ldi	r26, 0x04	; 4
    877a:	b1 e0       	ldi	r27, 0x01	; 1
    877c:	01 c0       	rjmp	.+2      	; 0x8780 <.do_clear_bss_start>

0000877e <.do_clear_bss_loop>:
    877e:	1d 92       	st	X+, r1

00008780 <.do_clear_bss_start>:
    8780:	a7 30       	cpi	r26, 0x07	; 7
    8782:	b2 07       	cpc	r27, r18
    8784:	e1 f7       	brne	.-8      	; 0x877e <.do_clear_bss_loop>

00008786 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    8786:	14 be       	out	0x34, r1	; 52
    8788:	0f b6       	in	r0, 0x3f	; 63
    878a:	f8 94       	cli
    878c:	a8 95       	wdr
    878e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    8792:	88 61       	ori	r24, 0x18	; 24
    8794:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    8798:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    879c:	0f be       	out	0x3f, r0	; 63

0000879e <Initialize>:
    879e:	f8 94       	cli
    87a0:	80 e7       	ldi	r24, 0x70	; 112
    87a2:	90 e0       	ldi	r25, 0x00	; 0
    87a4:	42 ea       	ldi	r20, 0xA2	; 162
    87a6:	50 e0       	ldi	r21, 0x00	; 0
    87a8:	fc 01       	movw	r30, r24
    87aa:	25 91       	lpm	r18, Z+
    87ac:	34 91       	lpm	r19, Z
    87ae:	f9 01       	movw	r30, r18
    87b0:	ff 27       	eor	r31, r31
    87b2:	30 83       	st	Z, r19
    87b4:	02 96       	adiw	r24, 0x02	; 2
    87b6:	48 17       	cp	r20, r24
    87b8:	59 07       	cpc	r21, r25
    87ba:	b1 f7       	brne	.-20     	; 0x87a8 <Initialize+0xa>
    87bc:	0e 94 c7 49 	call	0x938e	; 0x938e <isEepromFormatted>
    87c0:	81 11       	cpse	r24, r1
    87c2:	02 c0       	rjmp	.+4      	; 0x87c8 <Initialize+0x2a>
    87c4:	0e 94 a5 49 	call	0x934a	; 0x934a <FormatEeprom>
    87c8:	81 e0       	ldi	r24, 0x01	; 1
    87ca:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <tr4_barrel_lo>
    87ce:	80 93 8d 08 	sts	0x088D, r24	; 0x80088d <tr4_barrel_hi>
    87d2:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_params>
    87d6:	10 92 78 08 	sts	0x0878, r1	; 0x800878 <mixer>
    87da:	10 92 7e 08 	sts	0x087E, r1	; 0x80087e <tr2_vol>
    87de:	10 92 84 08 	sts	0x0884, r1	; 0x800884 <tr3_vol>
    87e2:	10 92 8a 08 	sts	0x088A, r1	; 0x80088a <tr4_vol>
    87e6:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <tr5_vol>
    87ea:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_phase>
    87ee:	10 92 64 08 	sts	0x0864, r1	; 0x800864 <sync_flags>
    87f2:	92 e1       	ldi	r25, 0x12	; 18
    87f4:	90 93 63 08 	sts	0x0863, r25	; 0x800863 <sync_pulse>
    87f8:	90 ee       	ldi	r25, 0xE0	; 224
    87fa:	90 93 6a 08 	sts	0x086A, r25	; 0x80086a <render_lines_count>
    87fe:	98 e1       	ldi	r25, 0x18	; 24
    8800:	90 93 69 08 	sts	0x0869, r25	; 0x800869 <first_render_line>
    8804:	10 92 6e 08 	sts	0x086E, r1	; 0x80086e <joypad1_status_hi+0x1>
    8808:	10 92 6d 08 	sts	0x086D, r1	; 0x80086d <joypad1_status_hi>
    880c:	10 92 72 08 	sts	0x0872, r1	; 0x800872 <joypad2_status_hi+0x1>
    8810:	10 92 71 08 	sts	0x0871, r1	; 0x800871 <joypad2_status_hi>
    8814:	80 93 77 08 	sts	0x0877, r24	; 0x800877 <sound_enabled>
    8818:	0e 94 ae 55 	call	0xab5c	; 0xab5c <InitializeVideoMode>
    881c:	78 94       	sei
    881e:	0e 94 18 56 	call	0xac30	; 0xac30 <DisplayLogo>
    8822:	0e 94 9d 6d 	call	0xdb3a	; 0xdb3a <main>
    8826:	0c 94 a4 6f 	jmp	0xdf48	; 0xdf48 <_exit>

0000882a <__bad_interrupt>:
    882a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000882e <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    882e:	03 e8       	ldi	r16, 0x83	; 131
    8830:	0a 95       	dec	r16
    8832:	f1 f7       	brne	.-4      	; 0x8830 <sub_video_mode3+0x2>
    8834:	00 c0       	rjmp	.+0      	; 0x8836 <sub_video_mode3+0x8>
    8836:	00 91 4e 08 	lds	r16, 0x084E	; 0x80084e <user_ram_tiles_c>
    883a:	ec ef       	ldi	r30, 0xFC	; 252
    883c:	f7 e0       	ldi	r31, 0x07	; 7
    883e:	23 e0       	ldi	r18, 0x03	; 3
    8840:	02 9f       	mul	r16, r18
    8842:	e0 0d       	add	r30, r0
    8844:	f1 1d       	adc	r31, r1
    8846:	20 91 4d 08 	lds	r18, 0x084D	; 0x80084d <free_tile_index>
    884a:	3c e3       	ldi	r19, 0x3C	; 60
    884c:	32 1b       	sub	r19, r18
    884e:	30 0f       	add	r19, r16
    8850:	20 17       	cp	r18, r16
    8852:	51 f0       	breq	.+20     	; 0x8868 <no_ramtiles>
    8854:	00 00       	nop
	...

00008858 <upd_loop>:
    8858:	a1 91       	ld	r26, Z+
    885a:	b1 91       	ld	r27, Z+
    885c:	1c 91       	ld	r17, X
    885e:	11 93       	st	Z+, r17
    8860:	0c 93       	st	X, r16
    8862:	03 95       	inc	r16
    8864:	02 17       	cp	r16, r18
    8866:	c0 f3       	brcs	.-16     	; 0x8858 <upd_loop>

00008868 <no_ramtiles>:
    8868:	13 e0       	ldi	r17, 0x03	; 3
    886a:	1a 95       	dec	r17
    886c:	f1 f7       	brne	.-4      	; 0x886a <no_ramtiles+0x2>
    886e:	00 c0       	rjmp	.+0      	; 0x8870 <no_ramtiles+0x8>
    8870:	3a 95       	dec	r19
    8872:	d1 f7       	brne	.-12     	; 0x8868 <no_ramtiles>
    8874:	c0 e0       	ldi	r28, 0x00	; 0
    8876:	db e0       	ldi	r29, 0x0B	; 11
    8878:	20 91 5e 08 	lds	r18, 0x085E	; 0x80085e <screen_scrollX>
    887c:	92 2f       	mov	r25, r18
    887e:	28 7f       	andi	r18, 0xF8	; 248
    8880:	c2 0f       	add	r28, r18
    8882:	6e 01       	movw	r12, r28
    8884:	00 91 5f 08 	lds	r16, 0x085F	; 0x80085f <screen_scrollY>
    8888:	60 2f       	mov	r22, r16
    888a:	06 95       	lsr	r16
    888c:	06 95       	lsr	r16
    888e:	06 95       	lsr	r16
    8890:	10 91 60 08 	lds	r17, 0x0860	; 0x800860 <screen_scrollHeight>
    8894:	10 1b       	sub	r17, r16
    8896:	f1 2e       	mov	r15, r17
    8898:	10 2f       	mov	r17, r16
    889a:	06 95       	lsr	r16
    889c:	06 95       	lsr	r16
    889e:	06 95       	lsr	r16
    88a0:	d0 0f       	add	r29, r16
    88a2:	17 70       	andi	r17, 0x07	; 7
    88a4:	c1 0f       	add	r28, r17
    88a6:	67 70       	andi	r22, 0x07	; 7
    88a8:	40 91 5c 08 	lds	r20, 0x085C	; 0x80085c <overlay_tile_table>
    88ac:	50 91 5d 08 	lds	r21, 0x085D	; 0x80085d <overlay_tile_table+0x1>
    88b0:	60 90 58 08 	lds	r6, 0x0858	; 0x800858 <tile_table_lo>
    88b4:	70 90 59 08 	lds	r7, 0x0859	; 0x800859 <tile_table_hi>
    88b8:	d3 01       	movw	r26, r6
    88ba:	5e 01       	movw	r10, r28
    88bc:	76 2f       	mov	r23, r22
    88be:	8f 2d       	mov	r24, r15
    88c0:	99 2e       	mov	r9, r25
    88c2:	00 91 60 08 	lds	r16, 0x0860	; 0x800860 <screen_scrollHeight>
    88c6:	20 2f       	mov	r18, r16
    88c8:	06 95       	lsr	r16
    88ca:	06 95       	lsr	r16
    88cc:	06 95       	lsr	r16
    88ce:	03 95       	inc	r16
    88d0:	27 70       	andi	r18, 0x07	; 7
    88d2:	30 91 5b 08 	lds	r19, 0x085B	; 0x80085b <Screen>
    88d6:	30 30       	cpi	r19, 0x00	; 0
    88d8:	0f b6       	in	r0, 0x3f	; 63
    88da:	01 fe       	sbrs	r0, 1
    88dc:	66 27       	eor	r22, r22
    88de:	01 fe       	sbrs	r0, 1
    88e0:	c2 2f       	mov	r28, r18
    88e2:	01 fe       	sbrs	r0, 1
    88e4:	d0 2f       	mov	r29, r16
    88e6:	01 fe       	sbrs	r0, 1
    88e8:	8f ef       	ldi	r24, 0xFF	; 255
    88ea:	01 fe       	sbrs	r0, 1
    88ec:	99 24       	eor	r9, r9
    88ee:	01 fe       	sbrs	r0, 1
    88f0:	da 01       	movw	r26, r20
    88f2:	80 90 6a 08 	lds	r8, 0x086A	; 0x80086a <render_lines_count>
    88f6:	07 e0       	ldi	r16, 0x07	; 7
    88f8:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    88fc:	01 e0       	ldi	r16, 0x01	; 1
    88fe:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    8902:	01 e0       	ldi	r16, 0x01	; 1
    8904:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00008908 <next_tile_line>:
    8908:	08 e0       	ldi	r16, 0x08	; 8
    890a:	60 9f       	mul	r22, r16
    890c:	8d 01       	movw	r16, r26
    890e:	00 5c       	subi	r16, 0xC0	; 192
    8910:	16 40       	sbci	r17, 0x06	; 6
    8912:	00 0d       	add	r16, r0
    8914:	11 1d       	adc	r17, r1
    8916:	18 01       	movw	r2, r16
    8918:	0c e3       	ldi	r16, 0x3C	; 60
    891a:	11 e0       	ldi	r17, 0x01	; 1
    891c:	00 0d       	add	r16, r0
    891e:	11 1d       	adc	r17, r1
    8920:	28 01       	movw	r4, r16
    8922:	00 e4       	ldi	r16, 0x40	; 64
    8924:	e0 2e       	mov	r14, r16
    8926:	03 e9       	ldi	r16, 0x93	; 147
    8928:	1a ef       	ldi	r17, 0xFA	; 250
    892a:	cf 93       	push	r28
    892c:	df 93       	push	r29
    892e:	58 81       	ld	r21, Y
    8930:	c8 5f       	subi	r28, 0xF8	; 248
    8932:	48 81       	ld	r20, Y
    8934:	c8 5f       	subi	r28, 0xF8	; 248
    8936:	a5 d3       	rcall	.+1866   	; 0x9082 <hsync_pulse>
    8938:	2c e0       	ldi	r18, 0x0C	; 12
    893a:	2a 95       	dec	r18
    893c:	f1 f7       	brne	.-4      	; 0x893a <next_tile_line+0x32>
    893e:	20 e1       	ldi	r18, 0x10	; 16
    8940:	2a 95       	dec	r18
    8942:	f1 f7       	brne	.-4      	; 0x8940 <next_tile_line+0x38>
    8944:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    8948:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    894c:	78 94       	sei
    894e:	00 27       	eor	r16, r16
    8950:	5e 9d       	mul	r21, r14
    8952:	5b 31       	cpi	r21, 0x1B	; 27
    8954:	f1 01       	movw	r30, r2
    8956:	08 f4       	brcc	.+2      	; 0x895a <next_tile_line+0x52>
    8958:	f2 01       	movw	r30, r4
    895a:	00 1f       	adc	r16, r16
    895c:	e0 0d       	add	r30, r0
    895e:	f1 1d       	adc	r31, r1
    8960:	29 2d       	mov	r18, r9
    8962:	27 70       	andi	r18, 0x07	; 7
    8964:	11 24       	eor	r1, r1
    8966:	e2 0f       	add	r30, r18
    8968:	f1 1d       	adc	r31, r1
    896a:	4e 9d       	mul	r20, r14
    896c:	4b 31       	cpi	r20, 0x1B	; 27
    896e:	a1 01       	movw	r20, r2
    8970:	08 f4       	brcc	.+2      	; 0x8974 <next_tile_line+0x6c>
    8972:	a2 01       	movw	r20, r4
    8974:	00 1f       	adc	r16, r16
    8976:	40 0d       	add	r20, r0
    8978:	51 1d       	adc	r21, r1
    897a:	1a e1       	ldi	r17, 0x1A	; 26
    897c:	01 9f       	mul	r16, r17
    897e:	00 2d       	mov	r16, r0
    8980:	13 e0       	ldi	r17, 0x03	; 3
    8982:	21 9f       	mul	r18, r17
    8984:	11 27       	eor	r17, r17
    8986:	0c 5e       	subi	r16, 0xEC	; 236
    8988:	1a 4b       	sbci	r17, 0xBA	; 186
    898a:	00 0e       	add	r0, r16
    898c:	11 1e       	adc	r1, r17
    898e:	11 27       	eor	r17, r17
    8990:	0f 92       	push	r0
    8992:	1f 92       	push	r1
    8994:	08 95       	ret

00008996 <__vector_15>:
    8996:	18 b9       	out	0x08, r17	; 8
    8998:	0f 90       	pop	r0
    899a:	0f 90       	pop	r0
    899c:	df 91       	pop	r29
    899e:	cf 91       	pop	r28
    89a0:	03 e1       	ldi	r16, 0x13	; 19
    89a2:	0a 95       	dec	r16
    89a4:	f1 f7       	brne	.-4      	; 0x89a2 <__vector_15+0xc>
    89a6:	00 c0       	rjmp	.+0      	; 0x89a8 <__vector_15+0x12>
    89a8:	63 95       	inc	r22
    89aa:	8a 94       	dec	r8
    89ac:	f9 f0       	breq	.+62     	; 0x89ec <text_frame_end>
    89ae:	68 30       	cpi	r22, 0x08	; 8
    89b0:	29 f0       	breq	.+10     	; 0x89bc <next_tile_row>
    89b2:	07 e0       	ldi	r16, 0x07	; 7
    89b4:	0a 95       	dec	r16
    89b6:	f1 f7       	brne	.-4      	; 0x89b4 <__vector_15+0x1e>
    89b8:	00 c0       	rjmp	.+0      	; 0x89ba <__vector_15+0x24>
    89ba:	a6 cf       	rjmp	.-180    	; 0x8908 <next_tile_line>

000089bc <next_tile_row>:
    89bc:	66 27       	eor	r22, r22
    89be:	0c 2f       	mov	r16, r28
    89c0:	07 70       	andi	r16, 0x07	; 7
    89c2:	07 30       	cpi	r16, 0x07	; 7
    89c4:	11 f0       	breq	.+4      	; 0x89ca <next_tile_row+0xe>
    89c6:	c3 95       	inc	r28
    89c8:	02 c0       	rjmp	.+4      	; 0x89ce <next_tile_row+0x12>
    89ca:	c8 7f       	andi	r28, 0xF8	; 248
    89cc:	d3 95       	inc	r29
    89ce:	8a 95       	dec	r24
    89d0:	09 f4       	brne	.+2      	; 0x89d4 <next_tile_row+0x18>
    89d2:	e6 01       	movw	r28, r12
    89d4:	3a 95       	dec	r19
    89d6:	09 f4       	brne	.+2      	; 0x89da <next_tile_row+0x1e>
    89d8:	67 2f       	mov	r22, r23
    89da:	09 f4       	brne	.+2      	; 0x89de <next_tile_row+0x22>
    89dc:	e5 01       	movw	r28, r10
    89de:	09 f4       	brne	.+2      	; 0x89e2 <next_tile_row+0x26>
    89e0:	8f 2d       	mov	r24, r15
    89e2:	09 f4       	brne	.+2      	; 0x89e6 <next_tile_row+0x2a>
    89e4:	99 2e       	mov	r9, r25
    89e6:	09 f4       	brne	.+2      	; 0x89ea <next_tile_row+0x2e>
    89e8:	d3 01       	movw	r26, r6
    89ea:	8e cf       	rjmp	.-228    	; 0x8908 <next_tile_line>

000089ec <text_frame_end>:
    89ec:	20 e1       	ldi	r18, 0x10	; 16
    89ee:	2a 95       	dec	r18
    89f0:	f1 f7       	brne	.-4      	; 0x89ee <text_frame_end+0x2>
    89f2:	00 e0       	ldi	r16, 0x00	; 0
    89f4:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    89f8:	0c e2       	ldi	r16, 0x2C	; 44
    89fa:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    89fe:	41 d3       	rcall	.+1666   	; 0x9082 <hsync_pulse>
    8a00:	11 24       	eor	r1, r1
    8a02:	0e 94 e6 46 	call	0x8dcc	; 0x8dcc <RestoreBackground>
    8a06:	e0 91 64 08 	lds	r30, 0x0864	; 0x800864 <sync_flags>
    8a0a:	42 e0       	ldi	r20, 0x02	; 2
    8a0c:	e1 60       	ori	r30, 0x01	; 1
    8a0e:	e4 27       	eor	r30, r20
    8a10:	e0 93 64 08 	sts	0x0864, r30	; 0x800864 <sync_flags>
    8a14:	07 e0       	ldi	r16, 0x07	; 7
    8a16:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8a1a:	09 e0       	ldi	r16, 0x09	; 9
    8a1c:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    8a20:	02 e0       	ldi	r16, 0x02	; 2
    8a22:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8a26:	08 95       	ret

00008a28 <romrom_e>:
    8a28:	00 c0       	rjmp	.+0      	; 0x8a2a <romrom_e+0x2>
    8a2a:	05 91       	lpm	r16, Z+
    8a2c:	08 b9       	out	0x08, r16	; 8
    8a2e:	00 c0       	rjmp	.+0      	; 0x8a30 <romrom_e+0x8>
    8a30:	05 91       	lpm	r16, Z+
    8a32:	08 b9       	out	0x08, r16	; 8
    8a34:	00 c0       	rjmp	.+0      	; 0x8a36 <romrom_e+0xe>
    8a36:	05 91       	lpm	r16, Z+
    8a38:	08 b9       	out	0x08, r16	; 8
    8a3a:	00 c0       	rjmp	.+0      	; 0x8a3c <romrom_e+0x14>
    8a3c:	05 91       	lpm	r16, Z+
    8a3e:	08 b9       	out	0x08, r16	; 8
    8a40:	00 c0       	rjmp	.+0      	; 0x8a42 <romrom_e+0x1a>
    8a42:	05 91       	lpm	r16, Z+
    8a44:	08 b9       	out	0x08, r16	; 8
    8a46:	00 c0       	rjmp	.+0      	; 0x8a48 <romrom_e+0x20>
    8a48:	05 91       	lpm	r16, Z+
    8a4a:	08 b9       	out	0x08, r16	; 8
    8a4c:	00 c0       	rjmp	.+0      	; 0x8a4e <romrom_e+0x26>
    8a4e:	05 91       	lpm	r16, Z+
    8a50:	08 b9       	out	0x08, r16	; 8
    8a52:	00 00       	nop
    8a54:	05 91       	lpm	r16, Z+
    8a56:	fa 01       	movw	r30, r20
    8a58:	08 b9       	out	0x08, r16	; 8
    8a5a:	56 c0       	rjmp	.+172    	; 0x8b08 <romloop_px0>

00008a5c <romram_e>:
    8a5c:	00 c0       	rjmp	.+0      	; 0x8a5e <romram_e+0x2>
    8a5e:	05 91       	lpm	r16, Z+
    8a60:	08 b9       	out	0x08, r16	; 8
    8a62:	00 c0       	rjmp	.+0      	; 0x8a64 <romram_e+0x8>
    8a64:	05 91       	lpm	r16, Z+
    8a66:	08 b9       	out	0x08, r16	; 8
    8a68:	00 c0       	rjmp	.+0      	; 0x8a6a <romram_e+0xe>
    8a6a:	05 91       	lpm	r16, Z+
    8a6c:	08 b9       	out	0x08, r16	; 8
    8a6e:	00 c0       	rjmp	.+0      	; 0x8a70 <romram_e+0x14>
    8a70:	05 91       	lpm	r16, Z+
    8a72:	08 b9       	out	0x08, r16	; 8
    8a74:	00 c0       	rjmp	.+0      	; 0x8a76 <romram_e+0x1a>
    8a76:	05 91       	lpm	r16, Z+
    8a78:	08 b9       	out	0x08, r16	; 8
    8a7a:	00 c0       	rjmp	.+0      	; 0x8a7c <romram_e+0x20>
    8a7c:	05 91       	lpm	r16, Z+
    8a7e:	08 b9       	out	0x08, r16	; 8
    8a80:	00 c0       	rjmp	.+0      	; 0x8a82 <romram_e+0x26>
    8a82:	05 91       	lpm	r16, Z+
    8a84:	08 b9       	out	0x08, r16	; 8
    8a86:	00 00       	nop
    8a88:	05 91       	lpm	r16, Z+
    8a8a:	fa 01       	movw	r30, r20
    8a8c:	08 b9       	out	0x08, r16	; 8
    8a8e:	59 c0       	rjmp	.+178    	; 0x8b42 <ramloop_px0>

00008a90 <ramrom_e>:
    8a90:	04 91       	lpm	r16, Z
    8a92:	01 91       	ld	r16, Z+
    8a94:	08 b9       	out	0x08, r16	; 8
    8a96:	04 91       	lpm	r16, Z
    8a98:	01 91       	ld	r16, Z+
    8a9a:	08 b9       	out	0x08, r16	; 8
    8a9c:	04 91       	lpm	r16, Z
    8a9e:	01 91       	ld	r16, Z+
    8aa0:	08 b9       	out	0x08, r16	; 8
    8aa2:	04 91       	lpm	r16, Z
    8aa4:	01 91       	ld	r16, Z+
    8aa6:	08 b9       	out	0x08, r16	; 8
    8aa8:	04 91       	lpm	r16, Z
    8aaa:	01 91       	ld	r16, Z+
    8aac:	08 b9       	out	0x08, r16	; 8
    8aae:	04 91       	lpm	r16, Z
    8ab0:	01 91       	ld	r16, Z+
    8ab2:	08 b9       	out	0x08, r16	; 8
    8ab4:	04 91       	lpm	r16, Z
    8ab6:	01 91       	ld	r16, Z+
    8ab8:	08 b9       	out	0x08, r16	; 8
    8aba:	00 c0       	rjmp	.+0      	; 0x8abc <ramrom_e+0x2c>
    8abc:	01 91       	ld	r16, Z+
    8abe:	fa 01       	movw	r30, r20
    8ac0:	08 b9       	out	0x08, r16	; 8
    8ac2:	22 c0       	rjmp	.+68     	; 0x8b08 <romloop_px0>

00008ac4 <ramram_e>:
    8ac4:	04 91       	lpm	r16, Z
    8ac6:	01 91       	ld	r16, Z+
    8ac8:	08 b9       	out	0x08, r16	; 8
    8aca:	04 91       	lpm	r16, Z
    8acc:	01 91       	ld	r16, Z+
    8ace:	08 b9       	out	0x08, r16	; 8
    8ad0:	04 91       	lpm	r16, Z
    8ad2:	01 91       	ld	r16, Z+
    8ad4:	08 b9       	out	0x08, r16	; 8
    8ad6:	04 91       	lpm	r16, Z
    8ad8:	01 91       	ld	r16, Z+
    8ada:	08 b9       	out	0x08, r16	; 8
    8adc:	04 91       	lpm	r16, Z
    8ade:	01 91       	ld	r16, Z+
    8ae0:	08 b9       	out	0x08, r16	; 8
    8ae2:	04 91       	lpm	r16, Z
    8ae4:	01 91       	ld	r16, Z+
    8ae6:	08 b9       	out	0x08, r16	; 8
    8ae8:	04 91       	lpm	r16, Z
    8aea:	01 91       	ld	r16, Z+
    8aec:	08 b9       	out	0x08, r16	; 8
    8aee:	00 c0       	rjmp	.+0      	; 0x8af0 <ramram_e+0x2c>
    8af0:	01 91       	ld	r16, Z+
    8af2:	fa 01       	movw	r30, r20
    8af4:	08 b9       	out	0x08, r16	; 8
    8af6:	25 c0       	rjmp	.+74     	; 0x8b42 <ramloop_px0>

00008af8 <romloop>:
    8af8:	05 91       	lpm	r16, Z+
    8afa:	08 b9       	out	0x08, r16	; 8
    8afc:	02 0c       	add	r0, r2
    8afe:	00 00       	nop
    8b00:	05 91       	lpm	r16, Z+
    8b02:	08 b9       	out	0x08, r16	; 8
    8b04:	13 1c       	adc	r1, r3
    8b06:	f0 01       	movw	r30, r0

00008b08 <romloop_px0>:
    8b08:	05 91       	lpm	r16, Z+
    8b0a:	08 b9       	out	0x08, r16	; 8
    8b0c:	00 c0       	rjmp	.+0      	; 0x8b0e <romloop_px0+0x6>
    8b0e:	05 91       	lpm	r16, Z+
    8b10:	08 b9       	out	0x08, r16	; 8
    8b12:	48 81       	ld	r20, Y
    8b14:	05 91       	lpm	r16, Z+
    8b16:	08 b9       	out	0x08, r16	; 8
    8b18:	c8 5f       	subi	r28, 0xF8	; 248
    8b1a:	00 00       	nop
    8b1c:	05 91       	lpm	r16, Z+
    8b1e:	08 b9       	out	0x08, r16	; 8
    8b20:	4e 9d       	mul	r20, r14
    8b22:	05 91       	lpm	r16, Z+
    8b24:	08 b9       	out	0x08, r16	; 8
    8b26:	4b 31       	cpi	r20, 0x1B	; 27
    8b28:	00 00       	nop
    8b2a:	05 91       	lpm	r16, Z+
    8b2c:	08 b9       	out	0x08, r16	; 8
    8b2e:	20 f7       	brcc	.-56     	; 0x8af8 <romloop>
    8b30:	00 00       	nop
    8b32:	05 91       	lpm	r16, Z+
    8b34:	08 b9       	out	0x08, r16	; 8
    8b36:	04 0c       	add	r0, r4
    8b38:	00 00       	nop
    8b3a:	05 91       	lpm	r16, Z+
    8b3c:	08 b9       	out	0x08, r16	; 8
    8b3e:	15 1c       	adc	r1, r5
    8b40:	f0 01       	movw	r30, r0

00008b42 <ramloop_px0>:
    8b42:	00 00       	nop
    8b44:	01 91       	ld	r16, Z+
    8b46:	08 b9       	out	0x08, r16	; 8
    8b48:	48 81       	ld	r20, Y
    8b4a:	00 00       	nop
    8b4c:	01 91       	ld	r16, Z+
    8b4e:	08 b9       	out	0x08, r16	; 8
    8b50:	c8 5f       	subi	r28, 0xF8	; 248
    8b52:	4e 9d       	mul	r20, r14
    8b54:	01 91       	ld	r16, Z+
    8b56:	08 b9       	out	0x08, r16	; 8
    8b58:	04 91       	lpm	r16, Z
    8b5a:	01 91       	ld	r16, Z+
    8b5c:	08 b9       	out	0x08, r16	; 8
    8b5e:	04 91       	lpm	r16, Z
    8b60:	01 91       	ld	r16, Z+
    8b62:	08 b9       	out	0x08, r16	; 8
    8b64:	4b 31       	cpi	r20, 0x1B	; 27
    8b66:	00 c0       	rjmp	.+0      	; 0x8b68 <ramloop_px0+0x26>
    8b68:	01 91       	ld	r16, Z+
    8b6a:	08 b9       	out	0x08, r16	; 8
    8b6c:	50 f4       	brcc	.+20     	; 0x8b82 <ramloop_tr>
    8b6e:	00 00       	nop
    8b70:	04 0c       	add	r0, r4
    8b72:	01 91       	ld	r16, Z+
    8b74:	08 b9       	out	0x08, r16	; 8
    8b76:	15 1c       	adc	r1, r5
    8b78:	00 00       	nop
    8b7a:	01 91       	ld	r16, Z+
    8b7c:	f0 01       	movw	r30, r0
    8b7e:	08 b9       	out	0x08, r16	; 8
    8b80:	e0 cf       	rjmp	.-64     	; 0x8b42 <ramloop_px0>

00008b82 <ramloop_tr>:
    8b82:	02 0c       	add	r0, r2
    8b84:	01 91       	ld	r16, Z+
    8b86:	08 b9       	out	0x08, r16	; 8
    8b88:	13 1c       	adc	r1, r3
    8b8a:	00 00       	nop
    8b8c:	01 91       	ld	r16, Z+
    8b8e:	f0 01       	movw	r30, r0
    8b90:	08 b9       	out	0x08, r16	; 8
    8b92:	ba cf       	rjmp	.-140    	; 0x8b08 <romloop_px0>

00008b94 <CopyFlashTile>:
    8b94:	20 e4       	ldi	r18, 0x40	; 64
    8b96:	e0 91 58 08 	lds	r30, 0x0858	; 0x800858 <tile_table_lo>
    8b9a:	f0 91 59 08 	lds	r31, 0x0859	; 0x800859 <tile_table_hi>
    8b9e:	82 9f       	mul	r24, r18
    8ba0:	e0 0d       	add	r30, r0
    8ba2:	f1 1d       	adc	r31, r1
    8ba4:	ac e3       	ldi	r26, 0x3C	; 60
    8ba6:	b1 e0       	ldi	r27, 0x01	; 1
    8ba8:	62 9f       	mul	r22, r18
    8baa:	a0 0d       	add	r26, r0
    8bac:	b1 1d       	adc	r27, r1
    8bae:	15 90       	lpm	r1, Z+
    8bb0:	1d 92       	st	X+, r1
    8bb2:	15 90       	lpm	r1, Z+
    8bb4:	1d 92       	st	X+, r1
    8bb6:	15 90       	lpm	r1, Z+
    8bb8:	1d 92       	st	X+, r1
    8bba:	15 90       	lpm	r1, Z+
    8bbc:	1d 92       	st	X+, r1
    8bbe:	15 90       	lpm	r1, Z+
    8bc0:	1d 92       	st	X+, r1
    8bc2:	15 90       	lpm	r1, Z+
    8bc4:	1d 92       	st	X+, r1
    8bc6:	15 90       	lpm	r1, Z+
    8bc8:	1d 92       	st	X+, r1
    8bca:	15 90       	lpm	r1, Z+
    8bcc:	1d 92       	st	X+, r1
    8bce:	15 90       	lpm	r1, Z+
    8bd0:	1d 92       	st	X+, r1
    8bd2:	15 90       	lpm	r1, Z+
    8bd4:	1d 92       	st	X+, r1
    8bd6:	15 90       	lpm	r1, Z+
    8bd8:	1d 92       	st	X+, r1
    8bda:	15 90       	lpm	r1, Z+
    8bdc:	1d 92       	st	X+, r1
    8bde:	15 90       	lpm	r1, Z+
    8be0:	1d 92       	st	X+, r1
    8be2:	15 90       	lpm	r1, Z+
    8be4:	1d 92       	st	X+, r1
    8be6:	15 90       	lpm	r1, Z+
    8be8:	1d 92       	st	X+, r1
    8bea:	15 90       	lpm	r1, Z+
    8bec:	1d 92       	st	X+, r1
    8bee:	15 90       	lpm	r1, Z+
    8bf0:	1d 92       	st	X+, r1
    8bf2:	15 90       	lpm	r1, Z+
    8bf4:	1d 92       	st	X+, r1
    8bf6:	15 90       	lpm	r1, Z+
    8bf8:	1d 92       	st	X+, r1
    8bfa:	15 90       	lpm	r1, Z+
    8bfc:	1d 92       	st	X+, r1
    8bfe:	15 90       	lpm	r1, Z+
    8c00:	1d 92       	st	X+, r1
    8c02:	15 90       	lpm	r1, Z+
    8c04:	1d 92       	st	X+, r1
    8c06:	15 90       	lpm	r1, Z+
    8c08:	1d 92       	st	X+, r1
    8c0a:	15 90       	lpm	r1, Z+
    8c0c:	1d 92       	st	X+, r1
    8c0e:	15 90       	lpm	r1, Z+
    8c10:	1d 92       	st	X+, r1
    8c12:	15 90       	lpm	r1, Z+
    8c14:	1d 92       	st	X+, r1
    8c16:	15 90       	lpm	r1, Z+
    8c18:	1d 92       	st	X+, r1
    8c1a:	15 90       	lpm	r1, Z+
    8c1c:	1d 92       	st	X+, r1
    8c1e:	15 90       	lpm	r1, Z+
    8c20:	1d 92       	st	X+, r1
    8c22:	15 90       	lpm	r1, Z+
    8c24:	1d 92       	st	X+, r1
    8c26:	15 90       	lpm	r1, Z+
    8c28:	1d 92       	st	X+, r1
    8c2a:	15 90       	lpm	r1, Z+
    8c2c:	1d 92       	st	X+, r1
    8c2e:	15 90       	lpm	r1, Z+
    8c30:	1d 92       	st	X+, r1
    8c32:	15 90       	lpm	r1, Z+
    8c34:	1d 92       	st	X+, r1
    8c36:	15 90       	lpm	r1, Z+
    8c38:	1d 92       	st	X+, r1
    8c3a:	15 90       	lpm	r1, Z+
    8c3c:	1d 92       	st	X+, r1
    8c3e:	15 90       	lpm	r1, Z+
    8c40:	1d 92       	st	X+, r1
    8c42:	15 90       	lpm	r1, Z+
    8c44:	1d 92       	st	X+, r1
    8c46:	15 90       	lpm	r1, Z+
    8c48:	1d 92       	st	X+, r1
    8c4a:	15 90       	lpm	r1, Z+
    8c4c:	1d 92       	st	X+, r1
    8c4e:	15 90       	lpm	r1, Z+
    8c50:	1d 92       	st	X+, r1
    8c52:	15 90       	lpm	r1, Z+
    8c54:	1d 92       	st	X+, r1
    8c56:	15 90       	lpm	r1, Z+
    8c58:	1d 92       	st	X+, r1
    8c5a:	15 90       	lpm	r1, Z+
    8c5c:	1d 92       	st	X+, r1
    8c5e:	15 90       	lpm	r1, Z+
    8c60:	1d 92       	st	X+, r1
    8c62:	15 90       	lpm	r1, Z+
    8c64:	1d 92       	st	X+, r1
    8c66:	15 90       	lpm	r1, Z+
    8c68:	1d 92       	st	X+, r1
    8c6a:	15 90       	lpm	r1, Z+
    8c6c:	1d 92       	st	X+, r1
    8c6e:	15 90       	lpm	r1, Z+
    8c70:	1d 92       	st	X+, r1
    8c72:	15 90       	lpm	r1, Z+
    8c74:	1d 92       	st	X+, r1
    8c76:	15 90       	lpm	r1, Z+
    8c78:	1d 92       	st	X+, r1
    8c7a:	15 90       	lpm	r1, Z+
    8c7c:	1d 92       	st	X+, r1
    8c7e:	15 90       	lpm	r1, Z+
    8c80:	1d 92       	st	X+, r1
    8c82:	15 90       	lpm	r1, Z+
    8c84:	1d 92       	st	X+, r1
    8c86:	15 90       	lpm	r1, Z+
    8c88:	1d 92       	st	X+, r1
    8c8a:	15 90       	lpm	r1, Z+
    8c8c:	1d 92       	st	X+, r1
    8c8e:	15 90       	lpm	r1, Z+
    8c90:	1d 92       	st	X+, r1
    8c92:	15 90       	lpm	r1, Z+
    8c94:	1d 92       	st	X+, r1
    8c96:	15 90       	lpm	r1, Z+
    8c98:	1d 92       	st	X+, r1
    8c9a:	15 90       	lpm	r1, Z+
    8c9c:	1d 92       	st	X+, r1
    8c9e:	15 90       	lpm	r1, Z+
    8ca0:	1d 92       	st	X+, r1
    8ca2:	15 90       	lpm	r1, Z+
    8ca4:	1d 92       	st	X+, r1
    8ca6:	15 90       	lpm	r1, Z+
    8ca8:	1d 92       	st	X+, r1
    8caa:	15 90       	lpm	r1, Z+
    8cac:	1d 92       	st	X+, r1
    8cae:	11 24       	eor	r1, r1
    8cb0:	08 95       	ret

00008cb2 <CopyRamTile>:
    8cb2:	20 e4       	ldi	r18, 0x40	; 64
    8cb4:	ec e3       	ldi	r30, 0x3C	; 60
    8cb6:	f1 e0       	ldi	r31, 0x01	; 1
    8cb8:	82 9f       	mul	r24, r18
    8cba:	e0 0d       	add	r30, r0
    8cbc:	f1 1d       	adc	r31, r1
    8cbe:	ac e3       	ldi	r26, 0x3C	; 60
    8cc0:	b1 e0       	ldi	r27, 0x01	; 1
    8cc2:	62 9f       	mul	r22, r18
    8cc4:	a0 0d       	add	r26, r0
    8cc6:	b1 1d       	adc	r27, r1
    8cc8:	11 90       	ld	r1, Z+
    8cca:	1d 92       	st	X+, r1
    8ccc:	11 90       	ld	r1, Z+
    8cce:	1d 92       	st	X+, r1
    8cd0:	11 90       	ld	r1, Z+
    8cd2:	1d 92       	st	X+, r1
    8cd4:	11 90       	ld	r1, Z+
    8cd6:	1d 92       	st	X+, r1
    8cd8:	11 90       	ld	r1, Z+
    8cda:	1d 92       	st	X+, r1
    8cdc:	11 90       	ld	r1, Z+
    8cde:	1d 92       	st	X+, r1
    8ce0:	11 90       	ld	r1, Z+
    8ce2:	1d 92       	st	X+, r1
    8ce4:	11 90       	ld	r1, Z+
    8ce6:	1d 92       	st	X+, r1
    8ce8:	11 90       	ld	r1, Z+
    8cea:	1d 92       	st	X+, r1
    8cec:	11 90       	ld	r1, Z+
    8cee:	1d 92       	st	X+, r1
    8cf0:	11 90       	ld	r1, Z+
    8cf2:	1d 92       	st	X+, r1
    8cf4:	11 90       	ld	r1, Z+
    8cf6:	1d 92       	st	X+, r1
    8cf8:	11 90       	ld	r1, Z+
    8cfa:	1d 92       	st	X+, r1
    8cfc:	11 90       	ld	r1, Z+
    8cfe:	1d 92       	st	X+, r1
    8d00:	11 90       	ld	r1, Z+
    8d02:	1d 92       	st	X+, r1
    8d04:	11 90       	ld	r1, Z+
    8d06:	1d 92       	st	X+, r1
    8d08:	11 90       	ld	r1, Z+
    8d0a:	1d 92       	st	X+, r1
    8d0c:	11 90       	ld	r1, Z+
    8d0e:	1d 92       	st	X+, r1
    8d10:	11 90       	ld	r1, Z+
    8d12:	1d 92       	st	X+, r1
    8d14:	11 90       	ld	r1, Z+
    8d16:	1d 92       	st	X+, r1
    8d18:	11 90       	ld	r1, Z+
    8d1a:	1d 92       	st	X+, r1
    8d1c:	11 90       	ld	r1, Z+
    8d1e:	1d 92       	st	X+, r1
    8d20:	11 90       	ld	r1, Z+
    8d22:	1d 92       	st	X+, r1
    8d24:	11 90       	ld	r1, Z+
    8d26:	1d 92       	st	X+, r1
    8d28:	11 90       	ld	r1, Z+
    8d2a:	1d 92       	st	X+, r1
    8d2c:	11 90       	ld	r1, Z+
    8d2e:	1d 92       	st	X+, r1
    8d30:	11 90       	ld	r1, Z+
    8d32:	1d 92       	st	X+, r1
    8d34:	11 90       	ld	r1, Z+
    8d36:	1d 92       	st	X+, r1
    8d38:	11 90       	ld	r1, Z+
    8d3a:	1d 92       	st	X+, r1
    8d3c:	11 90       	ld	r1, Z+
    8d3e:	1d 92       	st	X+, r1
    8d40:	11 90       	ld	r1, Z+
    8d42:	1d 92       	st	X+, r1
    8d44:	11 90       	ld	r1, Z+
    8d46:	1d 92       	st	X+, r1
    8d48:	11 90       	ld	r1, Z+
    8d4a:	1d 92       	st	X+, r1
    8d4c:	11 90       	ld	r1, Z+
    8d4e:	1d 92       	st	X+, r1
    8d50:	11 90       	ld	r1, Z+
    8d52:	1d 92       	st	X+, r1
    8d54:	11 90       	ld	r1, Z+
    8d56:	1d 92       	st	X+, r1
    8d58:	11 90       	ld	r1, Z+
    8d5a:	1d 92       	st	X+, r1
    8d5c:	11 90       	ld	r1, Z+
    8d5e:	1d 92       	st	X+, r1
    8d60:	11 90       	ld	r1, Z+
    8d62:	1d 92       	st	X+, r1
    8d64:	11 90       	ld	r1, Z+
    8d66:	1d 92       	st	X+, r1
    8d68:	11 90       	ld	r1, Z+
    8d6a:	1d 92       	st	X+, r1
    8d6c:	11 90       	ld	r1, Z+
    8d6e:	1d 92       	st	X+, r1
    8d70:	11 90       	ld	r1, Z+
    8d72:	1d 92       	st	X+, r1
    8d74:	11 90       	ld	r1, Z+
    8d76:	1d 92       	st	X+, r1
    8d78:	11 90       	ld	r1, Z+
    8d7a:	1d 92       	st	X+, r1
    8d7c:	11 90       	ld	r1, Z+
    8d7e:	1d 92       	st	X+, r1
    8d80:	11 90       	ld	r1, Z+
    8d82:	1d 92       	st	X+, r1
    8d84:	11 90       	ld	r1, Z+
    8d86:	1d 92       	st	X+, r1
    8d88:	11 90       	ld	r1, Z+
    8d8a:	1d 92       	st	X+, r1
    8d8c:	11 90       	ld	r1, Z+
    8d8e:	1d 92       	st	X+, r1
    8d90:	11 90       	ld	r1, Z+
    8d92:	1d 92       	st	X+, r1
    8d94:	11 90       	ld	r1, Z+
    8d96:	1d 92       	st	X+, r1
    8d98:	11 90       	ld	r1, Z+
    8d9a:	1d 92       	st	X+, r1
    8d9c:	11 90       	ld	r1, Z+
    8d9e:	1d 92       	st	X+, r1
    8da0:	11 90       	ld	r1, Z+
    8da2:	1d 92       	st	X+, r1
    8da4:	11 90       	ld	r1, Z+
    8da6:	1d 92       	st	X+, r1
    8da8:	11 90       	ld	r1, Z+
    8daa:	1d 92       	st	X+, r1
    8dac:	11 90       	ld	r1, Z+
    8dae:	1d 92       	st	X+, r1
    8db0:	11 90       	ld	r1, Z+
    8db2:	1d 92       	st	X+, r1
    8db4:	11 90       	ld	r1, Z+
    8db6:	1d 92       	st	X+, r1
    8db8:	11 90       	ld	r1, Z+
    8dba:	1d 92       	st	X+, r1
    8dbc:	11 90       	ld	r1, Z+
    8dbe:	1d 92       	st	X+, r1
    8dc0:	11 90       	ld	r1, Z+
    8dc2:	1d 92       	st	X+, r1
    8dc4:	11 90       	ld	r1, Z+
    8dc6:	1d 92       	st	X+, r1
    8dc8:	11 24       	eor	r1, r1
    8dca:	08 95       	ret

00008dcc <RestoreBackground>:
    8dcc:	e0 91 4e 08 	lds	r30, 0x084E	; 0x80084e <user_ram_tiles_c>
    8dd0:	8e 2f       	mov	r24, r30
    8dd2:	ee 0f       	add	r30, r30
    8dd4:	e8 0f       	add	r30, r24
    8dd6:	ff 27       	eor	r31, r31
    8dd8:	e4 50       	subi	r30, 0x04	; 4
    8dda:	f8 4f       	sbci	r31, 0xF8	; 248
    8ddc:	00 90 4d 08 	lds	r0, 0x084D	; 0x80084d <free_tile_index>
    8de0:	80 19       	sub	r24, r0
    8de2:	30 f4       	brcc	.+12     	; 0x8df0 <rbg_exit>

00008de4 <rbg_loop>:
    8de4:	a1 91       	ld	r26, Z+
    8de6:	b1 91       	ld	r27, Z+
    8de8:	01 90       	ld	r0, Z+
    8dea:	0c 92       	st	X, r0
    8dec:	83 95       	inc	r24
    8dee:	d1 f7       	brne	.-12     	; 0x8de4 <rbg_loop>

00008df0 <rbg_exit>:
    8df0:	08 95       	ret

00008df2 <BlitSpritePart>:
    8df2:	98 e0       	ldi	r25, 0x08	; 8
    8df4:	79 9f       	mul	r23, r25
    8df6:	a1 2d       	mov	r26, r1
    8df8:	bb 27       	eor	r27, r27
    8dfa:	a0 5b       	subi	r26, 0xB0	; 176
    8dfc:	b7 4f       	sbci	r27, 0xF7	; 247
    8dfe:	ed 91       	ld	r30, X+
    8e00:	fd 91       	ld	r31, X+

00008e02 <bsp_send>:
    8e02:	90 e4       	ldi	r25, 0x40	; 64
    8e04:	69 9f       	mul	r22, r25
    8e06:	e0 0d       	add	r30, r0
    8e08:	f1 1d       	adc	r31, r1
    8e0a:	89 9f       	mul	r24, r25
    8e0c:	d0 01       	movw	r26, r0
    8e0e:	a4 5c       	subi	r26, 0xC4	; 196
    8e10:	be 4f       	sbci	r27, 0xFE	; 254
    8e12:	90 e0       	ldi	r25, 0x00	; 0
    8e14:	40 fd       	sbrc	r20, 0
    8e16:	09 c0       	rjmp	.+18     	; 0x8e2a <x_2nd_tile>
    8e18:	82 2f       	mov	r24, r18
    8e1a:	48 e0       	ldi	r20, 0x08	; 8
    8e1c:	42 1b       	sub	r20, r18
    8e1e:	70 ff       	sbrs	r23, 0
    8e20:	0a c0       	rjmp	.+20     	; 0x8e36 <x_1st_tile_nxf>
    8e22:	17 96       	adiw	r26, 0x07	; 7

00008e24 <x_2nd_tile_nxf>:
    8e24:	e8 0f       	add	r30, r24
    8e26:	f9 1f       	adc	r31, r25
    8e28:	08 c0       	rjmp	.+16     	; 0x8e3a <x_check_end>

00008e2a <x_2nd_tile>:
    8e2a:	88 e0       	ldi	r24, 0x08	; 8
    8e2c:	82 1b       	sub	r24, r18
    8e2e:	42 2f       	mov	r20, r18
    8e30:	70 ff       	sbrs	r23, 0
    8e32:	f8 cf       	rjmp	.-16     	; 0x8e24 <x_2nd_tile_nxf>
    8e34:	11 97       	sbiw	r26, 0x01	; 1

00008e36 <x_1st_tile_nxf>:
    8e36:	a2 0f       	add	r26, r18
    8e38:	b9 1f       	adc	r27, r25

00008e3a <x_check_end>:
    8e3a:	68 e0       	ldi	r22, 0x08	; 8
    8e3c:	28 e0       	ldi	r18, 0x08	; 8
    8e3e:	23 1b       	sub	r18, r19
    8e40:	50 fd       	sbrc	r21, 0
    8e42:	09 c0       	rjmp	.+18     	; 0x8e56 <y_2nd_tile>
    8e44:	63 9f       	mul	r22, r19
    8e46:	a0 0d       	add	r26, r0
    8e48:	b1 1d       	adc	r27, r1
    8e4a:	71 fd       	sbrc	r23, 1
    8e4c:	e8 5c       	subi	r30, 0xC8	; 200
    8e4e:	71 fd       	sbrc	r23, 1
    8e50:	ff 4f       	sbci	r31, 0xFF	; 255
    8e52:	12 2e       	mov	r1, r18
    8e54:	08 c0       	rjmp	.+16     	; 0x8e66 <y_check_end>

00008e56 <y_2nd_tile>:
    8e56:	13 2e       	mov	r1, r19
    8e58:	1a 94       	dec	r1
    8e5a:	71 ff       	sbrs	r23, 1
    8e5c:	12 2e       	mov	r1, r18
    8e5e:	61 9d       	mul	r22, r1
    8e60:	e0 0d       	add	r30, r0
    8e62:	f1 1d       	adc	r31, r1
    8e64:	13 2e       	mov	r1, r19

00008e66 <y_check_end>:
    8e66:	71 fd       	sbrc	r23, 1
    8e68:	40 97       	sbiw	r24, 0x10	; 16
    8e6a:	70 fd       	sbrc	r23, 0
    8e6c:	05 c0       	rjmp	.+10     	; 0x8e78 <x_diff_xf>
    8e6e:	57 ef       	ldi	r21, 0xF7	; 247
    8e70:	54 0f       	add	r21, r20
    8e72:	70 e0       	ldi	r23, 0x00	; 0
    8e74:	61 e0       	ldi	r22, 0x01	; 1
    8e76:	04 c0       	rjmp	.+8      	; 0x8e80 <x_diff_end>

00008e78 <x_diff_xf>:
    8e78:	59 ef       	ldi	r21, 0xF9	; 249
    8e7a:	54 1b       	sub	r21, r20
    8e7c:	7f ef       	ldi	r23, 0xFF	; 255
    8e7e:	6f ef       	ldi	r22, 0xFF	; 255

00008e80 <x_diff_end>:
    8e80:	3e ef       	ldi	r19, 0xFE	; 254
    8e82:	04 2e       	mov	r0, r20
    8e84:	46 95       	lsr	r20
    8e86:	30 f4       	brcc	.+12     	; 0x8e94 <x_loop1>
    8e88:	61 f0       	breq	.+24     	; 0x8ea2 <x_loopx>

00008e8a <x_loop0>:
    8e8a:	25 91       	lpm	r18, Z+
    8e8c:	23 13       	cpse	r18, r19
    8e8e:	2c 93       	st	X, r18
    8e90:	a6 0f       	add	r26, r22
    8e92:	b7 1f       	adc	r27, r23

00008e94 <x_loop1>:
    8e94:	25 91       	lpm	r18, Z+
    8e96:	23 13       	cpse	r18, r19
    8e98:	2c 93       	st	X, r18
    8e9a:	a6 0f       	add	r26, r22
    8e9c:	b7 1f       	adc	r27, r23
    8e9e:	41 50       	subi	r20, 0x01	; 1
    8ea0:	a1 f7       	brne	.-24     	; 0x8e8a <x_loop0>

00008ea2 <x_loopx>:
    8ea2:	25 91       	lpm	r18, Z+
    8ea4:	23 13       	cpse	r18, r19
    8ea6:	2c 93       	st	X, r18
    8ea8:	1a 94       	dec	r1
    8eaa:	49 f0       	breq	.+18     	; 0x8ebe <loop_e>
    8eac:	e8 0f       	add	r30, r24
    8eae:	f9 1f       	adc	r31, r25
    8eb0:	a5 1b       	sub	r26, r21
    8eb2:	bf 4f       	sbci	r27, 0xFF	; 255
    8eb4:	40 2d       	mov	r20, r0
    8eb6:	46 95       	lsr	r20
    8eb8:	68 f7       	brcc	.-38     	; 0x8e94 <x_loop1>
    8eba:	39 f7       	brne	.-50     	; 0x8e8a <x_loop0>
    8ebc:	f2 cf       	rjmp	.-28     	; 0x8ea2 <x_loopx>

00008ebe <loop_e>:
    8ebe:	08 95       	ret

00008ec0 <__vector_13>:
    8ec0:	0f 92       	push	r0
    8ec2:	1f 92       	push	r1
    8ec4:	ef 93       	push	r30
    8ec6:	ff 93       	push	r31
    8ec8:	ff b7       	in	r31, 0x3f	; 63
    8eca:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8ece:	ff 93       	push	r31
    8ed0:	e2 fd       	sbrc	r30, 2
    8ed2:	04 c0       	rjmp	.+8      	; 0x8edc <__vector_13+0x1c>
    8ed4:	e1 fd       	sbrc	r30, 1
    8ed6:	02 c0       	rjmp	.+4      	; 0x8edc <__vector_13+0x1c>
    8ed8:	00 00       	nop
    8eda:	00 c0       	rjmp	.+0      	; 0x8edc <__vector_13+0x1c>
    8edc:	e0 ff       	sbrs	r30, 0
    8ede:	00 c0       	rjmp	.+0      	; 0x8ee0 <__vector_13+0x20>
    8ee0:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8ee4:	ea 95       	dec	r30
    8ee6:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8eea:	f0 91 62 08 	lds	r31, 0x0862	; 0x800862 <sync_phase>
    8eee:	f0 fd       	sbrc	r31, 0
    8ef0:	51 c0       	rjmp	.+162    	; 0x8f94 <sync_hsync>
    8ef2:	ec 30       	cpi	r30, 0x0C	; 12
    8ef4:	98 f0       	brcs	.+38     	; 0x8f1c <sync_eq>
    8ef6:	f3 e0       	ldi	r31, 0x03	; 3
    8ef8:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8efc:	fd e8       	ldi	r31, 0x8D	; 141
    8efe:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8f02:	e0 fb       	bst	r30, 0
    8f04:	28 98       	cbi	0x05, 0	; 5
    8f06:	26 f4       	brtc	.+8      	; 0x8f10 <sync_pre_eq_no_sound_update>
    8f08:	e1 e0       	ldi	r30, 0x01	; 1
    8f0a:	0e 94 52 48 	call	0x90a4	; 0x90a4 <update_sound>
    8f0e:	b2 c0       	rjmp	.+356    	; 0x9074 <sync_end>

00008f10 <sync_pre_eq_no_sound_update>:
    8f10:	e5 e1       	ldi	r30, 0x15	; 21
    8f12:	ea 95       	dec	r30
    8f14:	f1 f7       	brne	.-4      	; 0x8f12 <sync_pre_eq_no_sound_update+0x2>
    8f16:	00 00       	nop
    8f18:	28 9a       	sbi	0x05, 0	; 5
    8f1a:	ac c0       	rjmp	.+344    	; 0x9074 <sync_end>

00008f1c <sync_eq>:
    8f1c:	e6 30       	cpi	r30, 0x06	; 6
    8f1e:	08 f1       	brcs	.+66     	; 0x8f62 <sync_post_eq>
    8f20:	00 c0       	rjmp	.+0      	; 0x8f22 <sync_eq+0x6>
    8f22:	00 c0       	rjmp	.+0      	; 0x8f24 <sync_eq+0x8>
    8f24:	28 98       	cbi	0x05, 0	; 5
    8f26:	e0 fb       	bst	r30, 0
    8f28:	e4 e0       	ldi	r30, 0x04	; 4
    8f2a:	16 f4       	brtc	.+4      	; 0x8f30 <sync_eq_skip>
    8f2c:	0e 94 52 48 	call	0x90a4	; 0x90a4 <update_sound>

00008f30 <sync_eq_skip>:
    8f30:	e4 e0       	ldi	r30, 0x04	; 4
    8f32:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8f36:	e6 e0       	ldi	r30, 0x06	; 6
    8f38:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8f3c:	9b c0       	rjmp	.+310    	; 0x9074 <sync_end>

00008f3e <__vector_14>:
    8f3e:	ef 93       	push	r30
    8f40:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8f44:	e2 fd       	sbrc	r30, 2
    8f46:	04 c0       	rjmp	.+8      	; 0x8f50 <__vector_14+0x12>
    8f48:	e1 fd       	sbrc	r30, 1
    8f4a:	02 c0       	rjmp	.+4      	; 0x8f50 <__vector_14+0x12>
    8f4c:	00 00       	nop
    8f4e:	00 c0       	rjmp	.+0      	; 0x8f50 <__vector_14+0x12>
    8f50:	e0 ff       	sbrs	r30, 0
    8f52:	00 c0       	rjmp	.+0      	; 0x8f54 <__vector_14+0x16>
    8f54:	e2 e0       	ldi	r30, 0x02	; 2
    8f56:	00 00       	nop
    8f58:	28 9a       	sbi	0x05, 0	; 5
    8f5a:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8f5e:	ef 91       	pop	r30
    8f60:	18 95       	reti

00008f62 <sync_post_eq>:
    8f62:	00 c0       	rjmp	.+0      	; 0x8f64 <sync_post_eq+0x2>
    8f64:	e0 fb       	bst	r30, 0
    8f66:	28 98       	cbi	0x05, 0	; 5
    8f68:	26 f4       	brtc	.+8      	; 0x8f72 <sync_post_eq_no_sound_update>
    8f6a:	e1 e0       	ldi	r30, 0x01	; 1
    8f6c:	0e 94 52 48 	call	0x90a4	; 0x90a4 <update_sound>
    8f70:	05 c0       	rjmp	.+10     	; 0x8f7c <sync_pre_eq_cont>

00008f72 <sync_post_eq_no_sound_update>:
    8f72:	e5 e1       	ldi	r30, 0x15	; 21
    8f74:	ea 95       	dec	r30
    8f76:	f1 f7       	brne	.-4      	; 0x8f74 <sync_post_eq_no_sound_update+0x2>
    8f78:	00 00       	nop
    8f7a:	28 9a       	sbi	0x05, 0	; 5

00008f7c <sync_pre_eq_cont>:
    8f7c:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8f80:	e0 30       	cpi	r30, 0x00	; 0
    8f82:	09 f0       	breq	.+2      	; 0x8f86 <sync_pre_eq_cont+0xa>
    8f84:	77 c0       	rjmp	.+238    	; 0x9074 <sync_end>
    8f86:	ed ef       	ldi	r30, 0xFD	; 253
    8f88:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8f8c:	e1 e0       	ldi	r30, 0x01	; 1
    8f8e:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_phase>
    8f92:	70 c0       	rjmp	.+224    	; 0x9074 <sync_end>

00008f94 <sync_hsync>:
    8f94:	e7 e0       	ldi	r30, 0x07	; 7
    8f96:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8f9a:	eb e1       	ldi	r30, 0x1B	; 27
    8f9c:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8fa0:	00 c0       	rjmp	.+0      	; 0x8fa2 <sync_hsync+0xe>
    8fa2:	28 98       	cbi	0x05, 0	; 5
    8fa4:	e2 e0       	ldi	r30, 0x02	; 2
    8fa6:	00 c0       	rjmp	.+0      	; 0x8fa8 <sync_hsync+0x14>
    8fa8:	0e 94 52 48 	call	0x90a4	; 0x90a4 <update_sound>
    8fac:	fd ef       	ldi	r31, 0xFD	; 253
    8fae:	00 90 69 08 	lds	r0, 0x0869	; 0x800869 <first_render_line>
    8fb2:	f0 19       	sub	r31, r0
    8fb4:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8fb8:	ef 17       	cp	r30, r31
    8fba:	d8 f4       	brcc	.+54     	; 0x8ff2 <no_render>
    8fbc:	fd ef       	ldi	r31, 0xFD	; 253
    8fbe:	00 90 69 08 	lds	r0, 0x0869	; 0x800869 <first_render_line>
    8fc2:	f0 19       	sub	r31, r0
    8fc4:	00 90 6a 08 	lds	r0, 0x086A	; 0x80086a <render_lines_count>
    8fc8:	f0 19       	sub	r31, r0
    8fca:	ef 17       	cp	r30, r31
    8fcc:	90 f0       	brcs	.+36     	; 0x8ff2 <no_render>
    8fce:	ed e1       	ldi	r30, 0x1D	; 29
    8fd0:	ff 27       	eor	r31, r31

00008fd2 <push_loop>:
    8fd2:	00 80       	ld	r0, Z
    8fd4:	0f 92       	push	r0
    8fd6:	ea 95       	dec	r30
    8fd8:	e1 f7       	brne	.-8      	; 0x8fd2 <push_loop>
    8fda:	0d e0       	ldi	r16, 0x0D	; 13
    8fdc:	0a 95       	dec	r16
    8fde:	f1 f7       	brne	.-4      	; 0x8fdc <push_loop+0xa>
    8fe0:	00 c0       	rjmp	.+0      	; 0x8fe2 <push_loop+0x10>
    8fe2:	0e 94 17 44 	call	0x882e	; 0x882e <sub_video_mode3>
    8fe6:	e1 e0       	ldi	r30, 0x01	; 1
    8fe8:	ff 27       	eor	r31, r31

00008fea <pop_loop>:
    8fea:	0f 90       	pop	r0
    8fec:	01 92       	st	Z+, r0
    8fee:	ee 31       	cpi	r30, 0x1E	; 30
    8ff0:	e0 f3       	brcs	.-8      	; 0x8fea <pop_loop>

00008ff2 <no_render>:
    8ff2:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8ff6:	e0 30       	cpi	r30, 0x00	; 0
    8ff8:	09 f0       	breq	.+2      	; 0x8ffc <no_render+0xa>
    8ffa:	3c c0       	rjmp	.+120    	; 0x9074 <sync_end>
    8ffc:	2f 93       	push	r18
    8ffe:	3f 93       	push	r19
    9000:	4f 93       	push	r20
    9002:	5f 93       	push	r21
    9004:	6f 93       	push	r22
    9006:	7f 93       	push	r23
    9008:	8f 93       	push	r24
    900a:	9f 93       	push	r25
    900c:	af 93       	push	r26
    900e:	bf 93       	push	r27
    9010:	78 94       	sei
    9012:	11 24       	eor	r1, r1
    9014:	ee 27       	eor	r30, r30
    9016:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_phase>
    901a:	e2 e1       	ldi	r30, 0x12	; 18
    901c:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    9020:	80 91 73 08 	lds	r24, 0x0873	; 0x800873 <vsync_counter>
    9024:	90 91 74 08 	lds	r25, 0x0874	; 0x800874 <vsync_counter+0x1>
    9028:	01 96       	adiw	r24, 0x01	; 1
    902a:	80 93 73 08 	sts	0x0873, r24	; 0x800873 <vsync_counter>
    902e:	90 93 74 08 	sts	0x0874, r25	; 0x800874 <vsync_counter+0x1>
    9032:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <pre_vsync_user_callback>
    9036:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <pre_vsync_user_callback+0x1>
    903a:	e1 15       	cp	r30, r1
    903c:	f1 05       	cpc	r31, r1
    903e:	09 f0       	breq	.+2      	; 0x9042 <no_render+0x50>
    9040:	09 95       	icall
    9042:	0e 94 95 49 	call	0x932a	; 0x932a <ReadControllers>
    9046:	0e 94 9a 56 	call	0xad34	; 0xad34 <VideoModeVsync>
    904a:	0e 94 4c 48 	call	0x9098	; 0x9098 <process_music>
    904e:	11 24       	eor	r1, r1
    9050:	e0 91 67 08 	lds	r30, 0x0867	; 0x800867 <post_vsync_user_callback>
    9054:	f0 91 68 08 	lds	r31, 0x0868	; 0x800868 <post_vsync_user_callback+0x1>
    9058:	e1 15       	cp	r30, r1
    905a:	f1 05       	cpc	r31, r1
    905c:	09 f0       	breq	.+2      	; 0x9060 <no_render+0x6e>
    905e:	09 95       	icall
    9060:	bf 91       	pop	r27
    9062:	af 91       	pop	r26
    9064:	9f 91       	pop	r25
    9066:	8f 91       	pop	r24
    9068:	7f 91       	pop	r23
    906a:	6f 91       	pop	r22
    906c:	5f 91       	pop	r21
    906e:	4f 91       	pop	r20
    9070:	3f 91       	pop	r19
    9072:	2f 91       	pop	r18

00009074 <sync_end>:
    9074:	ef 91       	pop	r30
    9076:	ef bf       	out	0x3f, r30	; 63
    9078:	ff 91       	pop	r31
    907a:	ef 91       	pop	r30
    907c:	1f 90       	pop	r1
    907e:	0f 90       	pop	r0
    9080:	18 95       	reti

00009082 <hsync_pulse>:
    9082:	28 98       	cbi	0x05, 0	; 5
    9084:	e2 e0       	ldi	r30, 0x02	; 2
    9086:	00 c0       	rjmp	.+0      	; 0x9088 <hsync_pulse+0x6>
    9088:	0e 94 52 48 	call	0x90a4	; 0x90a4 <update_sound>
    908c:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    9090:	ea 95       	dec	r30
    9092:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    9096:	08 95       	ret

00009098 <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    9098:	e0 91 77 08 	lds	r30, 0x0877	; 0x800877 <sound_enabled>
    909c:	e0 fd       	sbrc	r30, 0
    909e:	0e 94 0a 4c 	call	0x9814	; 0x9814 <ProcessMusic>
    90a2:	08 95       	ret

000090a4 <update_sound>:
    90a4:	2f 93       	push	r18
    90a6:	1f 93       	push	r17
    90a8:	0f 93       	push	r16
    90aa:	2e 2f       	mov	r18, r30
    90ac:	10 91 7b 08 	lds	r17, 0x087B	; 0x80087b <tr1_pos_frac>
    90b0:	e0 91 7c 08 	lds	r30, 0x087C	; 0x80087c <tr1_pos_lo>
    90b4:	f0 91 7d 08 	lds	r31, 0x087D	; 0x80087d <tr1_pos_hi>
    90b8:	00 91 79 08 	lds	r16, 0x0879	; 0x800879 <tr1_step_lo>
    90bc:	10 0f       	add	r17, r16
    90be:	00 91 7a 08 	lds	r16, 0x087A	; 0x80087a <tr1_step_hi>
    90c2:	e0 1f       	adc	r30, r16
    90c4:	04 91       	lpm	r16, Z
    90c6:	e0 93 7c 08 	sts	0x087C, r30	; 0x80087c <tr1_pos_lo>
    90ca:	10 93 7b 08 	sts	0x087B, r17	; 0x80087b <tr1_pos_frac>
    90ce:	10 91 78 08 	lds	r17, 0x0878	; 0x800878 <mixer>
    90d2:	01 03       	mulsu	r16, r17
    90d4:	00 08       	sbc	r0, r0
    90d6:	10 91 81 08 	lds	r17, 0x0881	; 0x800881 <tr2_pos_frac>
    90da:	e0 91 82 08 	lds	r30, 0x0882	; 0x800882 <tr2_pos_lo>
    90de:	f0 91 83 08 	lds	r31, 0x0883	; 0x800883 <tr2_pos_hi>
    90e2:	00 91 7f 08 	lds	r16, 0x087F	; 0x80087f <tr2_step_lo>
    90e6:	10 0f       	add	r17, r16
    90e8:	00 91 80 08 	lds	r16, 0x0880	; 0x800880 <tr2_step_hi>
    90ec:	e0 1f       	adc	r30, r16
    90ee:	04 91       	lpm	r16, Z
    90f0:	e0 93 82 08 	sts	0x0882, r30	; 0x800882 <tr2_pos_lo>
    90f4:	10 93 81 08 	sts	0x0881, r17	; 0x800881 <tr2_pos_frac>
    90f8:	f0 01       	movw	r30, r0
    90fa:	10 91 7e 08 	lds	r17, 0x087E	; 0x80087e <tr2_vol>
    90fe:	01 03       	mulsu	r16, r17
    9100:	00 08       	sbc	r0, r0
    9102:	1f 0e       	add	r1, r31
    9104:	10 91 87 08 	lds	r17, 0x0887	; 0x800887 <tr3_pos_frac>
    9108:	20 fd       	sbrc	r18, 0
    910a:	28 9a       	sbi	0x05, 0	; 5
    910c:	0e 1e       	adc	r0, r30
    910e:	e0 91 88 08 	lds	r30, 0x0888	; 0x800888 <tr3_pos_lo>
    9112:	f0 91 89 08 	lds	r31, 0x0889	; 0x800889 <tr3_pos_hi>
    9116:	00 91 85 08 	lds	r16, 0x0885	; 0x800885 <tr3_step_lo>
    911a:	10 0f       	add	r17, r16
    911c:	00 91 86 08 	lds	r16, 0x0886	; 0x800886 <tr3_step_hi>
    9120:	e0 1f       	adc	r30, r16
    9122:	04 91       	lpm	r16, Z
    9124:	e0 93 88 08 	sts	0x0888, r30	; 0x800888 <tr3_pos_lo>
    9128:	10 93 87 08 	sts	0x0887, r17	; 0x800887 <tr3_pos_frac>
    912c:	f0 01       	movw	r30, r0
    912e:	10 91 84 08 	lds	r17, 0x0884	; 0x800884 <tr3_vol>
    9132:	01 03       	mulsu	r16, r17
    9134:	00 08       	sbc	r0, r0
    9136:	1f 0e       	add	r1, r31
    9138:	0e 1e       	adc	r0, r30
    913a:	00 91 8c 08 	lds	r16, 0x088C	; 0x80088c <tr4_barrel_lo>
    913e:	10 91 8d 08 	lds	r17, 0x088D	; 0x80088d <tr4_barrel_hi>
    9142:	f0 91 8a 08 	lds	r31, 0x088A	; 0x80088a <tr4_vol>
    9146:	f6 95       	lsr	r31
    9148:	88 94       	clc
    914a:	00 fd       	sbrc	r16, 0
    914c:	f1 95       	neg	r31
    914e:	ee 0b       	sbc	r30, r30
    9150:	1f 0e       	add	r1, r31
    9152:	0e 1e       	adc	r0, r30
    9154:	e0 91 8e 08 	lds	r30, 0x088E	; 0x80088e <tr4_divider>
    9158:	e2 50       	subi	r30, 0x02	; 2
    915a:	20 f0       	brcs	.+8      	; 0x9164 <ch4_shift>
    915c:	e4 91       	lpm	r30, Z
    915e:	e4 91       	lpm	r30, Z
    9160:	e4 91       	lpm	r30, Z
    9162:	0a c0       	rjmp	.+20     	; 0x9178 <ch4_end>

00009164 <ch4_shift>:
    9164:	e0 2f       	mov	r30, r16
    9166:	16 95       	lsr	r17
    9168:	07 95       	ror	r16
    916a:	e0 27       	eor	r30, r16
    916c:	e0 fb       	bst	r30, 0
    916e:	16 f9       	bld	r17, 6
    9170:	e0 91 8b 08 	lds	r30, 0x088B	; 0x80088b <tr4_params>
    9174:	e0 ff       	sbrs	r30, 0
    9176:	06 f9       	bld	r16, 6

00009178 <ch4_end>:
    9178:	00 93 8c 08 	sts	0x088C, r16	; 0x80088c <tr4_barrel_lo>
    917c:	10 93 8d 08 	sts	0x088D, r17	; 0x80088d <tr4_barrel_hi>
    9180:	e0 93 8e 08 	sts	0x088E, r30	; 0x80088e <tr4_divider>
    9184:	10 e0       	ldi	r17, 0x00	; 0
    9186:	e0 91 93 08 	lds	r30, 0x0893	; 0x800893 <tr5_pos_frac>
    918a:	f0 91 91 08 	lds	r31, 0x0891	; 0x800891 <tr5_step_lo>
    918e:	21 fd       	sbrc	r18, 1
    9190:	28 9a       	sbi	0x05, 0	; 5
    9192:	ef 0f       	add	r30, r31
    9194:	e0 93 93 08 	sts	0x0893, r30	; 0x800893 <tr5_pos_frac>
    9198:	e0 91 94 08 	lds	r30, 0x0894	; 0x800894 <tr5_pos_lo>
    919c:	f0 91 95 08 	lds	r31, 0x0895	; 0x800895 <tr5_pos_hi>
    91a0:	00 91 92 08 	lds	r16, 0x0892	; 0x800892 <tr5_step_hi>
    91a4:	e0 1f       	adc	r30, r16
    91a6:	f1 1f       	adc	r31, r17
    91a8:	00 91 98 08 	lds	r16, 0x0898	; 0x800898 <tr5_loop_end_lo>
    91ac:	10 91 99 08 	lds	r17, 0x0899	; 0x800899 <tr5_loop_end_hi>
    91b0:	e0 17       	cp	r30, r16
    91b2:	f1 07       	cpc	r31, r17
    91b4:	18 f4       	brcc	.+6      	; 0x91bc <ch5_reset>
    91b6:	04 91       	lpm	r16, Z
    91b8:	00 c0       	rjmp	.+0      	; 0x91ba <ch4_end+0x42>
    91ba:	06 c0       	rjmp	.+12     	; 0x91c8 <ch5_nores>

000091bc <ch5_reset>:
    91bc:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_len_lo>
    91c0:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_len_hi>
    91c4:	e0 1b       	sub	r30, r16
    91c6:	f1 0b       	sbc	r31, r17

000091c8 <ch5_nores>:
    91c8:	e0 93 94 08 	sts	0x0894, r30	; 0x800894 <tr5_pos_lo>
    91cc:	f0 93 95 08 	sts	0x0895, r31	; 0x800895 <tr5_pos_hi>
    91d0:	04 91       	lpm	r16, Z
    91d2:	f0 01       	movw	r30, r0
    91d4:	10 91 90 08 	lds	r17, 0x0890	; 0x800890 <tr5_vol>
    91d8:	01 03       	mulsu	r16, r17
    91da:	00 08       	sbc	r0, r0
    91dc:	1f 0e       	add	r1, r31
    91de:	0e 1e       	adc	r0, r30
    91e0:	f0 01       	movw	r30, r0
    91e2:	0f 91       	pop	r16
    91e4:	1f 91       	pop	r17
    91e6:	f0 58       	subi	r31, 0x80	; 128
    91e8:	ef 4f       	sbci	r30, 0xFF	; 255
    91ea:	1a f4       	brpl	.+6      	; 0x91f2 <ch5_nores+0x2a>
    91ec:	f0 e0       	ldi	r31, 0x00	; 0
    91ee:	00 00       	nop
    91f0:	03 c0       	rjmp	.+6      	; 0x91f8 <ch5_nores+0x30>
    91f2:	e0 30       	cpi	r30, 0x00	; 0
    91f4:	09 f0       	breq	.+2      	; 0x91f8 <ch5_nores+0x30>
    91f6:	ff ef       	ldi	r31, 0xFF	; 255
    91f8:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    91fc:	2f 91       	pop	r18
    91fe:	08 95       	ret

00009200 <SetSpritesTileTable>:
    9200:	80 93 50 08 	sts	0x0850, r24	; 0x800850 <sprites_tile_banks>
    9204:	90 93 51 08 	sts	0x0851, r25	; 0x800851 <sprites_tile_banks+0x1>
    9208:	08 95       	ret

0000920a <ClearVram>:
    920a:	e0 e2       	ldi	r30, 0x20	; 32
    920c:	f4 e0       	ldi	r31, 0x04	; 4
    920e:	a0 e0       	ldi	r26, 0x00	; 0
    9210:	bb e0       	ldi	r27, 0x0B	; 11
    9212:	6b e1       	ldi	r22, 0x1B	; 27

00009214 <fill_vram_loop>:
    9214:	6d 93       	st	X+, r22
    9216:	31 97       	sbiw	r30, 0x01	; 1
    9218:	e9 f7       	brne	.-6      	; 0x9214 <fill_vram_loop>
    921a:	11 24       	eor	r1, r1
    921c:	08 95       	ret

0000921e <SetTile>:
    921e:	8f 71       	andi	r24, 0x1F	; 31
    9220:	76 2f       	mov	r23, r22
    9222:	66 95       	lsr	r22
    9224:	66 95       	lsr	r22
    9226:	66 95       	lsr	r22
    9228:	28 e0       	ldi	r18, 0x08	; 8
    922a:	82 9f       	mul	r24, r18
    922c:	d0 01       	movw	r26, r0
    922e:	a0 50       	subi	r26, 0x00	; 0
    9230:	b5 4f       	sbci	r27, 0xF5	; 245
    9232:	b6 0f       	add	r27, r22
    9234:	77 70       	andi	r23, 0x07	; 7
    9236:	a7 0f       	add	r26, r23
    9238:	45 5e       	subi	r20, 0xE5	; 229
    923a:	4c 93       	st	X, r20
    923c:	11 24       	eor	r1, r1
    923e:	08 95       	ret

00009240 <SetTileTable>:
    9240:	80 93 58 08 	sts	0x0858, r24	; 0x800858 <tile_table_lo>
    9244:	90 93 59 08 	sts	0x0859, r25	; 0x800859 <tile_table_hi>
    9248:	08 95       	ret

0000924a <GetVsyncFlag>:
    924a:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <sync_flags>
    924e:	81 70       	andi	r24, 0x01	; 1
    9250:	08 95       	ret

00009252 <ClearVsyncFlag>:
    9252:	20 91 64 08 	lds	r18, 0x0864	; 0x800864 <sync_flags>
    9256:	2e 7f       	andi	r18, 0xFE	; 254
    9258:	20 93 64 08 	sts	0x0864, r18	; 0x800864 <sync_flags>
    925c:	08 95       	ret

0000925e <ReadJoypad>:
    925e:	88 23       	and	r24, r24
    9260:	29 f4       	brne	.+10     	; 0x926c <rj_p2>
    9262:	80 91 6b 08 	lds	r24, 0x086B	; 0x80086b <joypad1_status_lo>
    9266:	90 91 6c 08 	lds	r25, 0x086C	; 0x80086c <joypad1_status_lo+0x1>
    926a:	08 95       	ret

0000926c <rj_p2>:
    926c:	80 91 6f 08 	lds	r24, 0x086F	; 0x80086f <joypad2_status_lo>
    9270:	90 91 70 08 	lds	r25, 0x0870	; 0x800870 <joypad2_status_lo+0x1>
    9274:	08 95       	ret

00009276 <SoftReset>:
    9276:	e0 e6       	ldi	r30, 0x60	; 96
    9278:	f0 e0       	ldi	r31, 0x00	; 0
    927a:	80 81       	ld	r24, Z
    927c:	83 fd       	sbrc	r24, 3
    927e:	08 95       	ret
    9280:	88 e1       	ldi	r24, 0x18	; 24
    9282:	98 e0       	ldi	r25, 0x08	; 8
    9284:	f8 94       	cli
    9286:	80 83       	st	Z, r24
    9288:	90 83       	st	Z, r25
    928a:	78 94       	sei
    928c:	ff cf       	rjmp	.-2      	; 0x928c <SoftReset+0x16>

0000928e <WriteEeprom>:
    928e:	f9 99       	sbic	0x1f, 1	; 31
    9290:	fe cf       	rjmp	.-4      	; 0x928e <WriteEeprom>
    9292:	92 bd       	out	0x22, r25	; 34
    9294:	81 bd       	out	0x21, r24	; 33
    9296:	60 bd       	out	0x20, r22	; 32
    9298:	f8 94       	cli
    929a:	fa 9a       	sbi	0x1f, 2	; 31
    929c:	f9 9a       	sbi	0x1f, 1	; 31
    929e:	78 94       	sei
    92a0:	08 95       	ret

000092a2 <ReadEeprom>:
    92a2:	f9 99       	sbic	0x1f, 1	; 31
    92a4:	fe cf       	rjmp	.-4      	; 0x92a2 <ReadEeprom>
    92a6:	92 bd       	out	0x22, r25	; 34
    92a8:	81 bd       	out	0x21, r24	; 33
    92aa:	f8 94       	cli
    92ac:	f8 9a       	sbi	0x1f, 0	; 31
    92ae:	80 b5       	in	r24, 0x20	; 32
    92b0:	78 94       	sei
    92b2:	08 95       	ret

000092b4 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    92b4:	80 93 67 08 	sts	0x0867, r24	; 0x800867 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    92b8:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <post_vsync_user_callback+0x1>
	ret
    92bc:	08 95       	ret

000092be <ReadButtons>:
    92be:	12 9a       	sbi	0x02, 2	; 2
    92c0:	c8 95       	lpm
    92c2:	c8 95       	lpm
    92c4:	c8 95       	lpm
    92c6:	c8 95       	lpm
    92c8:	12 98       	cbi	0x02, 2	; 2
    92ca:	40 e1       	ldi	r20, 0x10	; 16
    92cc:	80 e0       	ldi	r24, 0x00	; 0
    92ce:	90 e0       	ldi	r25, 0x00	; 0
    92d0:	20 e0       	ldi	r18, 0x00	; 0
    92d2:	30 e0       	ldi	r19, 0x00	; 0
    92d4:	36 95       	lsr	r19
    92d6:	27 95       	ror	r18
    92d8:	96 95       	lsr	r25
    92da:	87 95       	ror	r24
    92dc:	c8 95       	lpm
    92de:	c8 95       	lpm
    92e0:	c8 95       	lpm
    92e2:	c8 95       	lpm
    92e4:	13 98       	cbi	0x02, 3	; 2
    92e6:	00 9b       	sbis	0x00, 0	; 0
    92e8:	30 68       	ori	r19, 0x80	; 128
    92ea:	01 9b       	sbis	0x00, 1	; 0
    92ec:	90 68       	ori	r25, 0x80	; 128
    92ee:	13 9a       	sbi	0x02, 3	; 2
    92f0:	c8 95       	lpm
    92f2:	c8 95       	lpm
    92f4:	c8 95       	lpm
    92f6:	c8 95       	lpm
    92f8:	41 50       	subi	r20, 0x01	; 1
    92fa:	61 f7       	brne	.-40     	; 0x92d4 <ReadButtons+0x16>
    92fc:	30 93 6c 08 	sts	0x086C, r19	; 0x80086c <joypad1_status_lo+0x1>
    9300:	20 93 6b 08 	sts	0x086B, r18	; 0x80086b <joypad1_status_lo>
    9304:	90 93 70 08 	sts	0x0870, r25	; 0x800870 <joypad2_status_lo+0x1>
    9308:	80 93 6f 08 	sts	0x086F, r24	; 0x80086f <joypad2_status_lo>
    930c:	80 91 6b 08 	lds	r24, 0x086B	; 0x80086b <joypad1_status_lo>
    9310:	90 91 6c 08 	lds	r25, 0x086C	; 0x80086c <joypad1_status_lo+0x1>
    9314:	0f 97       	sbiw	r24, 0x0f	; 15
    9316:	31 f0       	breq	.+12     	; 0x9324 <ReadButtons+0x66>
    9318:	80 91 6f 08 	lds	r24, 0x086F	; 0x80086f <joypad2_status_lo>
    931c:	90 91 70 08 	lds	r25, 0x0870	; 0x800870 <joypad2_status_lo+0x1>
    9320:	0f 97       	sbiw	r24, 0x0f	; 15
    9322:	11 f4       	brne	.+4      	; 0x9328 <ReadButtons+0x6a>
    9324:	0c 94 3b 49 	jmp	0x9276	; 0x9276 <SoftReset>
    9328:	08 95       	ret

0000932a <ReadControllers>:
    932a:	10 92 9c 08 	sts	0x089C, r1	; 0x80089c <joypadsConnectionStatus>
    932e:	00 99       	sbic	0x00, 0	; 0
    9330:	03 c0       	rjmp	.+6      	; 0x9338 <ReadControllers+0xe>
    9332:	81 e0       	ldi	r24, 0x01	; 1
    9334:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    9338:	01 99       	sbic	0x00, 1	; 0
    933a:	05 c0       	rjmp	.+10     	; 0x9346 <ReadControllers+0x1c>
    933c:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <joypadsConnectionStatus>
    9340:	82 60       	ori	r24, 0x02	; 2
    9342:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    9346:	0c 94 5f 49 	jmp	0x92be	; 0x92be <ReadButtons>

0000934a <FormatEeprom>:
    934a:	cf 93       	push	r28
    934c:	df 93       	push	r29
    934e:	c0 e0       	ldi	r28, 0x00	; 0
    9350:	d0 e0       	ldi	r29, 0x00	; 0
    9352:	fe 01       	movw	r30, r28
    9354:	ee 55       	subi	r30, 0x5E	; 94
    9356:	ff 4f       	sbci	r31, 0xFF	; 255
    9358:	64 91       	lpm	r22, Z
    935a:	ce 01       	movw	r24, r28
    935c:	0e 94 47 49 	call	0x928e	; 0x928e <WriteEeprom>
    9360:	21 96       	adiw	r28, 0x01	; 1
    9362:	c0 32       	cpi	r28, 0x20	; 32
    9364:	d1 05       	cpc	r29, r1
    9366:	a9 f7       	brne	.-22     	; 0x9352 <FormatEeprom+0x8>
    9368:	c0 e2       	ldi	r28, 0x20	; 32
    936a:	d0 e0       	ldi	r29, 0x00	; 0
    936c:	6f ef       	ldi	r22, 0xFF	; 255
    936e:	ce 01       	movw	r24, r28
    9370:	0e 94 47 49 	call	0x928e	; 0x928e <WriteEeprom>
    9374:	6f ef       	ldi	r22, 0xFF	; 255
    9376:	ce 01       	movw	r24, r28
    9378:	01 96       	adiw	r24, 0x01	; 1
    937a:	0e 94 47 49 	call	0x928e	; 0x928e <WriteEeprom>
    937e:	a0 96       	adiw	r28, 0x20	; 32
    9380:	c1 15       	cp	r28, r1
    9382:	88 e0       	ldi	r24, 0x08	; 8
    9384:	d8 07       	cpc	r29, r24
    9386:	91 f7       	brne	.-28     	; 0x936c <FormatEeprom+0x22>
    9388:	df 91       	pop	r29
    938a:	cf 91       	pop	r28
    938c:	08 95       	ret

0000938e <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    938e:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    9390:	80 e0       	ldi	r24, 0x00	; 0
    9392:	90 e0       	ldi	r25, 0x00	; 0
    9394:	0e 94 51 49 	call	0x92a2	; 0x92a2 <ReadEeprom>
    9398:	c8 2f       	mov	r28, r24
    939a:	81 e0       	ldi	r24, 0x01	; 1
    939c:	90 e0       	ldi	r25, 0x00	; 0
    939e:	0e 94 51 49 	call	0x92a2	; 0x92a2 <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    93a2:	28 2f       	mov	r18, r24
    93a4:	30 e0       	ldi	r19, 0x00	; 0
    93a6:	32 2f       	mov	r19, r18
    93a8:	22 27       	eor	r18, r18
    93aa:	2c 0f       	add	r18, r28
    93ac:	31 1d       	adc	r19, r1
    93ae:	81 e0       	ldi	r24, 0x01	; 1
    93b0:	2a 35       	cpi	r18, 0x5A	; 90
    93b2:	35 45       	sbci	r19, 0x55	; 85
    93b4:	09 f0       	breq	.+2      	; 0x93b8 <isEepromFormatted+0x2a>
    93b6:	80 e0       	ldi	r24, 0x00	; 0
}
    93b8:	cf 91       	pop	r28
    93ba:	08 95       	ret

000093bc <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    93bc:	fc 01       	movw	r30, r24
    93be:	67 87       	std	Z+15, r22	; 0x0f
    93c0:	08 95       	ret

000093c2 <PatchCommand01>:
    93c2:	e8 e7       	ldi	r30, 0x78	; 120
    93c4:	f8 e0       	ldi	r31, 0x08	; 8
    93c6:	81 e0       	ldi	r24, 0x01	; 1
    93c8:	91 e0       	ldi	r25, 0x01	; 1
    93ca:	95 8b       	std	Z+21, r25	; 0x15
    93cc:	84 8b       	std	Z+20, r24	; 0x14
    93ce:	63 8b       	std	Z+19, r22	; 0x13
    93d0:	08 95       	ret

000093d2 <PatchCommand05>:
    93d2:	fc 01       	movw	r30, r24
    93d4:	90 81       	ld	r25, Z
    93d6:	9f 75       	andi	r25, 0x5F	; 95
    93d8:	90 83       	st	Z, r25
    93da:	08 95       	ret

000093dc <PatchCommand06>:
    93dc:	fc 01       	movw	r30, r24
    93de:	90 81       	ld	r25, Z
    93e0:	90 64       	ori	r25, 0x40	; 64
    93e2:	90 83       	st	Z, r25
    93e4:	08 95       	ret

000093e6 <PatchCommand07>:
    93e6:	fc 01       	movw	r30, r24
    93e8:	66 87       	std	Z+14, r22	; 0x0e
    93ea:	08 95       	ret

000093ec <PatchCommand09>:
    93ec:	fc 01       	movw	r30, r24
    93ee:	62 87       	std	Z+10, r22	; 0x0a
    93f0:	08 95       	ret

000093f2 <PatchCommand10>:
    93f2:	fc 01       	movw	r30, r24
    93f4:	63 87       	std	Z+11, r22	; 0x0b
    93f6:	08 95       	ret

000093f8 <PatchCommand11>:
    93f8:	cf 93       	push	r28
    93fa:	df 93       	push	r29
    93fc:	ec 01       	movw	r28, r24
    93fe:	26 2f       	mov	r18, r22
    9400:	89 81       	ldd	r24, Y+1	; 0x01
    9402:	90 e0       	ldi	r25, 0x00	; 0
    9404:	fc 01       	movw	r30, r24
    9406:	ee 0f       	add	r30, r30
    9408:	ff 1f       	adc	r31, r31
    940a:	e2 5d       	subi	r30, 0xD2	; 210
    940c:	f3 46       	sbci	r31, 0x63	; 99
    940e:	45 91       	lpm	r20, Z+
    9410:	54 91       	lpm	r21, Z
    9412:	fc 01       	movw	r30, r24
    9414:	e6 0f       	add	r30, r22
    9416:	f1 1d       	adc	r31, r1
    9418:	67 fd       	sbrc	r22, 7
    941a:	fa 95       	dec	r31
    941c:	ee 0f       	add	r30, r30
    941e:	ff 1f       	adc	r31, r31
    9420:	e2 5d       	subi	r30, 0xD2	; 210
    9422:	f3 46       	sbci	r31, 0x63	; 99
    9424:	85 91       	lpm	r24, Z+
    9426:	94 91       	lpm	r25, Z
    9428:	84 1b       	sub	r24, r20
    942a:	95 0b       	sbc	r25, r21
    942c:	68 85       	ldd	r22, Y+8	; 0x08
    942e:	70 e0       	ldi	r23, 0x00	; 0
    9430:	0e 94 39 6f 	call	0xde72	; 0xde72 <__divmodhi4>
    9434:	61 15       	cp	r22, r1
    9436:	71 05       	cpc	r23, r1
    9438:	11 f4       	brne	.+4      	; 0x943e <PatchCommand11+0x46>
    943a:	61 e0       	ldi	r22, 0x01	; 1
    943c:	70 e0       	ldi	r23, 0x00	; 0
    943e:	ea 81       	ldd	r30, Y+2	; 0x02
    9440:	86 e0       	ldi	r24, 0x06	; 6
    9442:	e8 9f       	mul	r30, r24
    9444:	f0 01       	movw	r30, r0
    9446:	11 24       	eor	r1, r1
    9448:	e8 58       	subi	r30, 0x88	; 136
    944a:	f7 4f       	sbci	r31, 0xF7	; 247
    944c:	81 81       	ldd	r24, Z+1	; 0x01
    944e:	92 81       	ldd	r25, Z+2	; 0x02
    9450:	86 0f       	add	r24, r22
    9452:	97 1f       	adc	r25, r23
    9454:	92 83       	std	Z+2, r25	; 0x02
    9456:	81 83       	std	Z+1, r24	; 0x01
    9458:	7e 83       	std	Y+6, r23	; 0x06
    945a:	6d 83       	std	Y+5, r22	; 0x05
    945c:	88 81       	ld	r24, Y
    945e:	88 60       	ori	r24, 0x08	; 8
    9460:	88 83       	st	Y, r24
    9462:	89 81       	ldd	r24, Y+1	; 0x01
    9464:	28 0f       	add	r18, r24
    9466:	2f 83       	std	Y+7, r18	; 0x07
    9468:	df 91       	pop	r29
    946a:	cf 91       	pop	r28
    946c:	08 95       	ret

0000946e <PatchCommand12>:
    946e:	fc 01       	movw	r30, r24
    9470:	60 87       	std	Z+8, r22	; 0x08
    9472:	08 95       	ret

00009474 <PatchCommand13>:
    9474:	fc 01       	movw	r30, r24
    9476:	64 83       	std	Z+4, r22	; 0x04
    9478:	08 95       	ret

0000947a <PatchCommand02>:
    947a:	fc 01       	movw	r30, r24
    947c:	82 81       	ldd	r24, Z+2	; 0x02
    947e:	0c 94 fa 4d 	jmp	0x9bf4	; 0x9bf4 <SetMixerWave>

00009482 <PatchCommand03>:
    9482:	fc 01       	movw	r30, r24
    9484:	91 81       	ldd	r25, Z+1	; 0x01
    9486:	69 0f       	add	r22, r25
    9488:	61 83       	std	Z+1, r22	; 0x01
    948a:	82 81       	ldd	r24, Z+2	; 0x02
    948c:	0c 94 e3 4d 	jmp	0x9bc6	; 0x9bc6 <SetMixerNote>

00009490 <PatchCommand04>:
    9490:	fc 01       	movw	r30, r24
    9492:	91 81       	ldd	r25, Z+1	; 0x01
    9494:	96 1b       	sub	r25, r22
    9496:	69 2f       	mov	r22, r25
    9498:	91 83       	std	Z+1, r25	; 0x01
    949a:	82 81       	ldd	r24, Z+2	; 0x02
    949c:	0c 94 e3 4d 	jmp	0x9bc6	; 0x9bc6 <SetMixerNote>

000094a0 <PatchCommand08>:
    94a0:	1f 93       	push	r17
    94a2:	cf 93       	push	r28
    94a4:	df 93       	push	r29
    94a6:	ec 01       	movw	r28, r24
    94a8:	16 2f       	mov	r17, r22
    94aa:	8a 81       	ldd	r24, Y+2	; 0x02
    94ac:	0e 94 e3 4d 	call	0x9bc6	; 0x9bc6 <SetMixerNote>
    94b0:	19 83       	std	Y+1, r17	; 0x01
    94b2:	88 81       	ld	r24, Y
    94b4:	87 7f       	andi	r24, 0xF7	; 247
    94b6:	88 83       	st	Y, r24
    94b8:	df 91       	pop	r29
    94ba:	cf 91       	pop	r28
    94bc:	1f 91       	pop	r17
    94be:	08 95       	ret

000094c0 <PatchCommand14>:
    94c0:	dc 01       	movw	r26, r24
    94c2:	14 96       	adiw	r26, 0x04	; 4
    94c4:	8c 91       	ld	r24, X
    94c6:	14 97       	sbiw	r26, 0x04	; 4
    94c8:	88 23       	and	r24, r24
    94ca:	19 f1       	breq	.+70     	; 0x9512 <PatchCommand14+0x52>
    94cc:	55 96       	adiw	r26, 0x15	; 21
    94ce:	2d 91       	ld	r18, X+
    94d0:	3c 91       	ld	r19, X
    94d2:	56 97       	sbiw	r26, 0x16	; 22
    94d4:	66 23       	and	r22, r22
    94d6:	79 f0       	breq	.+30     	; 0x94f6 <PatchCommand14+0x36>
    94d8:	06 2e       	mov	r0, r22
    94da:	00 0c       	add	r0, r0
    94dc:	77 0b       	sbc	r23, r23
    94de:	6f 5f       	subi	r22, 0xFF	; 255
    94e0:	7f 4f       	sbci	r23, 0xFF	; 255
    94e2:	ab 01       	movw	r20, r22
    94e4:	44 0f       	add	r20, r20
    94e6:	55 1f       	adc	r21, r21
    94e8:	64 0f       	add	r22, r20
    94ea:	75 1f       	adc	r23, r21
    94ec:	26 1b       	sub	r18, r22
    94ee:	37 0b       	sbc	r19, r23
    94f0:	09 c0       	rjmp	.+18     	; 0x9504 <PatchCommand14+0x44>
    94f2:	ef 3f       	cpi	r30, 0xFF	; 255
    94f4:	39 f0       	breq	.+14     	; 0x9504 <PatchCommand14+0x44>
    94f6:	23 50       	subi	r18, 0x03	; 3
    94f8:	31 09       	sbc	r19, r1
    94fa:	f9 01       	movw	r30, r18
    94fc:	32 97       	sbiw	r30, 0x02	; 2
    94fe:	e4 91       	lpm	r30, Z
    9500:	ed 30       	cpi	r30, 0x0D	; 13
    9502:	b9 f7       	brne	.-18     	; 0x94f2 <PatchCommand14+0x32>
    9504:	56 96       	adiw	r26, 0x16	; 22
    9506:	3c 93       	st	X, r19
    9508:	2e 93       	st	-X, r18
    950a:	55 97       	sbiw	r26, 0x15	; 21
    950c:	81 50       	subi	r24, 0x01	; 1
    950e:	14 96       	adiw	r26, 0x04	; 4
    9510:	8c 93       	st	X, r24
    9512:	08 95       	ret

00009514 <InitMusicPlayer>:
    9514:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <patchPointers+0x1>
    9518:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <patchPointers>
    951c:	8f e6       	ldi	r24, 0x6F	; 111
    951e:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <masterVolume>
    9522:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
    9526:	ef e9       	ldi	r30, 0x9F	; 159
    9528:	f8 e0       	ldi	r31, 0x08	; 8
    952a:	80 e0       	ldi	r24, 0x00	; 0
    952c:	90 e1       	ldi	r25, 0x10	; 16
    952e:	3f ef       	ldi	r19, 0xFF	; 255
    9530:	28 e1       	ldi	r18, 0x18	; 24
    9532:	82 83       	std	Z+2, r24	; 0x02
    9534:	90 83       	st	Z, r25
    9536:	15 86       	std	Z+13, r1	; 0x0d
    9538:	34 87       	std	Z+12, r19	; 0x0c
    953a:	10 8a       	std	Z+16, r1	; 0x10
    953c:	23 87       	std	Z+11, r18	; 0x0b
    953e:	90 87       	std	Z+8, r25	; 0x08
    9540:	8f 5f       	subi	r24, 0xFF	; 255
    9542:	77 96       	adiw	r30, 0x17	; 23
    9544:	85 30       	cpi	r24, 0x05	; 5
    9546:	a9 f7       	brne	.-22     	; 0x9532 <InitMusicPlayer+0x1e>
    9548:	08 95       	ret

0000954a <StartSong>:
    954a:	ef e9       	ldi	r30, 0x9F	; 159
    954c:	f8 e0       	ldi	r31, 0x08	; 8
    954e:	3f ef       	ldi	r19, 0xFF	; 255
    9550:	20 81       	ld	r18, Z
    9552:	2f 77       	andi	r18, 0x7F	; 127
    9554:	20 83       	st	Z, r18
    9556:	33 83       	std	Z+3, r19	; 0x03
    9558:	77 96       	adiw	r30, 0x17	; 23
    955a:	29 e0       	ldi	r18, 0x09	; 9
    955c:	e2 31       	cpi	r30, 0x12	; 18
    955e:	f2 07       	cpc	r31, r18
    9560:	b9 f7       	brne	.-18     	; 0x9550 <StartSong+0x6>
    9562:	01 96       	adiw	r24, 0x01	; 1
    9564:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    9568:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    956c:	90 93 9e 08 	sts	0x089E, r25	; 0x80089e <songStart+0x1>
    9570:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <songStart>
    9574:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    9578:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    957c:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <nextDeltaTime+0x1>
    9580:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <nextDeltaTime>
    9584:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    9588:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    958c:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <songSpeed>
    9590:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <lastStatus>
    9594:	81 e0       	ldi	r24, 0x01	; 1
    9596:	80 93 76 08 	sts	0x0876, r24	; 0x800876 <playSong>
    959a:	08 95       	ret

0000959c <StopSong>:
    959c:	ef e9       	ldi	r30, 0x9F	; 159
    959e:	f8 e0       	ldi	r31, 0x08	; 8
    95a0:	8a ef       	ldi	r24, 0xFA	; 250
    95a2:	87 87       	std	Z+15, r24	; 0x0f
    95a4:	86 a3       	std	Z+38, r24	; 0x26
    95a6:	85 af       	std	Z+61, r24	; 0x3d
    95a8:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <tracks+0x54>
    95ac:	80 93 0a 09 	sts	0x090A, r24	; 0x80090a <tracks+0x6b>
    95b0:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
    95b4:	08 95       	ret

000095b6 <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    95b6:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    95b8:	ed 91       	ld	r30, X+
    95ba:	fc 91       	ld	r31, X
    95bc:	11 97       	sbiw	r26, 0x01	; 1
    95be:	9f 01       	movw	r18, r30
    95c0:	2f 5f       	subi	r18, 0xFF	; 255
    95c2:	3f 4f       	sbci	r19, 0xFF	; 255
    95c4:	11 96       	adiw	r26, 0x01	; 1
    95c6:	3c 93       	st	X, r19
    95c8:	2e 93       	st	-X, r18
    95ca:	e4 91       	lpm	r30, Z
    95cc:	e7 fd       	sbrc	r30, 7
    95ce:	03 c0       	rjmp	.+6      	; 0x95d6 <ReadVarLen+0x20>
    95d0:	8e 2f       	mov	r24, r30
    95d2:	90 e0       	ldi	r25, 0x00	; 0
    95d4:	08 95       	ret
    {
       value &= 0x7F;
    95d6:	ef 77       	andi	r30, 0x7F	; 127
    95d8:	8e 2f       	mov	r24, r30
    95da:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    95dc:	96 95       	lsr	r25
    95de:	98 2f       	mov	r25, r24
    95e0:	88 27       	eor	r24, r24
    95e2:	97 95       	ror	r25
    95e4:	87 95       	ror	r24
    95e6:	2f 5f       	subi	r18, 0xFF	; 255
    95e8:	3f 4f       	sbci	r19, 0xFF	; 255
    95ea:	f9 01       	movw	r30, r18
    95ec:	31 97       	sbiw	r30, 0x01	; 1
    95ee:	e4 91       	lpm	r30, Z
    95f0:	4e 2f       	mov	r20, r30
    95f2:	4f 77       	andi	r20, 0x7F	; 127
    95f4:	84 0f       	add	r24, r20
    95f6:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    95f8:	e7 fd       	sbrc	r30, 7
    95fa:	f0 cf       	rjmp	.-32     	; 0x95dc <ReadVarLen+0x26>
    95fc:	2d 93       	st	X+, r18
    95fe:	3c 93       	st	X, r19
    }


    return value;
}
    9600:	08 95       	ret

00009602 <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    9602:	ff 92       	push	r15
    9604:	0f 93       	push	r16
    9606:	1f 93       	push	r17
    9608:	cf 93       	push	r28
    960a:	df 93       	push	r29
    960c:	ec 01       	movw	r28, r24
    960e:	16 2f       	mov	r17, r22
    9610:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    9612:	88 81       	ld	r24, Y
    9614:	28 2f       	mov	r18, r24
    9616:	20 78       	andi	r18, 0x80	; 128
    9618:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    961a:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    961c:	9f ef       	ldi	r25, 0xFF	; 255
    961e:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    9620:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    9622:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    9624:	87 7b       	andi	r24, 0xB7	; 183
    9626:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    9628:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    962a:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    962c:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    962e:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    9630:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    9632:	8a 81       	ldd	r24, Y+2	; 0x02
    9634:	83 30       	cpi	r24, 0x03	; 3
    9636:	69 f4       	brne	.+26     	; 0x9652 <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    9638:	21 11       	cpse	r18, r1
    963a:	01 c0       	rjmp	.+2      	; 0x963e <TriggerCommon+0x3c>
    963c:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    963e:	81 e0       	ldi	r24, 0x01	; 1
    9640:	91 e0       	ldi	r25, 0x01	; 1
    9642:	90 93 8d 08 	sts	0x088D, r25	; 0x80088d <tr4_barrel_hi>
    9646:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    964a:	81 e0       	ldi	r24, 0x01	; 1
    964c:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_params>
    9650:	36 c0       	rjmp	.+108    	; 0x96be <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    9652:	84 30       	cpi	r24, 0x04	; 4
    9654:	69 f5       	brne	.+90     	; 0x96b0 <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    9656:	10 92 93 08 	sts	0x0893, r1	; 0x800893 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    965a:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <patchPointers>
    965e:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <patchPointers+0x1>
    9662:	e9 e0       	ldi	r30, 0x09	; 9
    9664:	6e 9f       	mul	r22, r30
    9666:	80 0d       	add	r24, r0
    9668:	91 1d       	adc	r25, r1
    966a:	11 24       	eor	r1, r1
    966c:	fc 01       	movw	r30, r24
    966e:	31 96       	adiw	r30, 0x01	; 1
    9670:	45 91       	lpm	r20, Z+
    9672:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    9674:	50 93 95 08 	sts	0x0895, r21	; 0x800895 <tr5_pos_hi>
    9678:	40 93 94 08 	sts	0x0894, r20	; 0x800894 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    967c:	9c 01       	movw	r18, r24
    967e:	29 5f       	subi	r18, 0xF9	; 249
    9680:	3f 4f       	sbci	r19, 0xFF	; 255
    9682:	f9 01       	movw	r30, r18
    9684:	65 91       	lpm	r22, Z+
    9686:	74 91       	lpm	r23, Z
    9688:	05 96       	adiw	r24, 0x05	; 5
    968a:	fc 01       	movw	r30, r24
    968c:	85 91       	lpm	r24, Z+
    968e:	94 91       	lpm	r25, Z
    9690:	68 1b       	sub	r22, r24
    9692:	79 0b       	sbc	r23, r25
    9694:	70 93 97 08 	sts	0x0897, r23	; 0x800897 <tr5_loop_len_hi>
    9698:	60 93 96 08 	sts	0x0896, r22	; 0x800896 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    969c:	f9 01       	movw	r30, r18
    969e:	85 91       	lpm	r24, Z+
    96a0:	94 91       	lpm	r25, Z
    96a2:	48 0f       	add	r20, r24
    96a4:	59 1f       	adc	r21, r25
    96a6:	50 93 99 08 	sts	0x0899, r21	; 0x800899 <tr5_loop_end_hi>
    96aa:	40 93 98 08 	sts	0x0898, r20	; 0x800898 <tr5_loop_end_lo>
    96ae:	03 c0       	rjmp	.+6      	; 0x96b6 <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    96b0:	60 e0       	ldi	r22, 0x00	; 0
    96b2:	0e 94 fa 4d 	call	0x9bf4	; 0x9bf4 <SetMixerWave>
			SetMixerNote(track->channel,note);
    96b6:	60 2f       	mov	r22, r16
    96b8:	8a 81       	ldd	r24, Y+2	; 0x02
    96ba:	0e 94 e3 4d 	call	0x9bc6	; 0x9bc6 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    96be:	ff 20       	and	r15, r15
    96c0:	11 f0       	breq	.+4      	; 0x96c6 <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    96c2:	19 8b       	std	Y+17, r17	; 0x11
    96c4:	01 c0       	rjmp	.+2      	; 0x96c8 <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    96c6:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    96c8:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    96cc:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    96d0:	29 e0       	ldi	r18, 0x09	; 9
    96d2:	12 9f       	mul	r17, r18
    96d4:	e0 0d       	add	r30, r0
    96d6:	f1 1d       	adc	r31, r1
    96d8:	11 24       	eor	r1, r1
    96da:	33 96       	adiw	r30, 0x03	; 3
    96dc:	85 91       	lpm	r24, Z+
    96de:	94 91       	lpm	r25, Z
	if(pos==NULL){
    96e0:	00 97       	sbiw	r24, 0x00	; 0
    96e2:	19 f4       	brne	.+6      	; 0x96ea <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    96e4:	1e 8a       	std	Y+22, r1	; 0x16
    96e6:	1d 8a       	std	Y+21, r1	; 0x15
    96e8:	07 c0       	rjmp	.+14     	; 0x96f8 <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    96ea:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    96ec:	fc 01       	movw	r30, r24
    96ee:	24 91       	lpm	r18, Z
    96f0:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    96f2:	01 96       	adiw	r24, 0x01	; 1
    96f4:	9e 8b       	std	Y+22, r25	; 0x16
    96f6:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    96f8:	df 91       	pop	r29
    96fa:	cf 91       	pop	r28
    96fc:	1f 91       	pop	r17
    96fe:	0f 91       	pop	r16
    9700:	ff 90       	pop	r15
    9702:	08 95       	ret

00009704 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    9704:	cf 93       	push	r28
    9706:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    9708:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    970c:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    9710:	99 e0       	ldi	r25, 0x09	; 9
    9712:	89 9f       	mul	r24, r25
    9714:	e0 0d       	add	r30, r0
    9716:	f1 1d       	adc	r31, r1
    9718:	11 24       	eor	r1, r1
    971a:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    971c:	e1 30       	cpi	r30, 0x01	; 1
    971e:	e9 f0       	breq	.+58     	; 0x975a <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    9720:	e2 30       	cpi	r30, 0x02	; 2
    9722:	e9 f0       	breq	.+58     	; 0x975e <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    9724:	90 91 b6 08 	lds	r25, 0x08B6	; 0x8008b6 <tracks+0x17>
    9728:	97 ff       	sbrs	r25, 7
    972a:	1b c0       	rjmp	.+54     	; 0x9762 <TriggerFx+0x5e>
    972c:	90 91 c7 08 	lds	r25, 0x08C7	; 0x8008c7 <tracks+0x28>
    9730:	89 13       	cpse	r24, r25
    9732:	02 c0       	rjmp	.+4      	; 0x9738 <TriggerFx+0x34>
    9734:	41 11       	cpse	r20, r1
    9736:	15 c0       	rjmp	.+42     	; 0x9762 <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    9738:	90 91 cd 08 	lds	r25, 0x08CD	; 0x8008cd <tracks+0x2e>
    973c:	97 ff       	sbrs	r25, 7
    973e:	13 c0       	rjmp	.+38     	; 0x9766 <TriggerFx+0x62>
    9740:	90 91 de 08 	lds	r25, 0x08DE	; 0x8008de <tracks+0x3f>
    9744:	89 13       	cpse	r24, r25
    9746:	02 c0       	rjmp	.+4      	; 0x974c <TriggerFx+0x48>
    9748:	41 11       	cpse	r20, r1
    974a:	0d c0       	rjmp	.+26     	; 0x9766 <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    974c:	20 91 ca 08 	lds	r18, 0x08CA	; 0x8008ca <tracks+0x2b>
    9750:	90 91 e1 08 	lds	r25, 0x08E1	; 0x8008e1 <tracks+0x42>
    9754:	92 17       	cp	r25, r18
    9756:	38 f4       	brcc	.+14     	; 0x9766 <TriggerFx+0x62>
    9758:	04 c0       	rjmp	.+8      	; 0x9762 <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    975a:	c3 e0       	ldi	r28, 0x03	; 3
    975c:	05 c0       	rjmp	.+10     	; 0x9768 <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    975e:	c4 e0       	ldi	r28, 0x04	; 4
    9760:	03 c0       	rjmp	.+6      	; 0x9768 <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    9762:	c1 e0       	ldi	r28, 0x01	; 1
    9764:	01 c0       	rjmp	.+2      	; 0x9768 <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    9766:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    9768:	97 e1       	ldi	r25, 0x17	; 23
    976a:	c9 9f       	mul	r28, r25
    976c:	e0 01       	movw	r28, r0
    976e:	11 24       	eor	r1, r1
    9770:	c1 56       	subi	r28, 0x61	; 97
    9772:	d7 4f       	sbci	r29, 0xF7	; 247
    9774:	90 e8       	ldi	r25, 0x80	; 128
    9776:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    9778:	1e 8a       	std	Y+22, r1	; 0x16
    977a:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    977c:	20 e5       	ldi	r18, 0x50	; 80
    977e:	46 2f       	mov	r20, r22
    9780:	68 2f       	mov	r22, r24
    9782:	ce 01       	movw	r24, r28
    9784:	0e 94 01 4b 	call	0x9602	; 0x9602 <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    9788:	88 81       	ld	r24, Y
    978a:	80 62       	ori	r24, 0x20	; 32
    978c:	88 83       	st	Y, r24
}
    978e:	df 91       	pop	r29
    9790:	cf 91       	pop	r28
    9792:	08 95       	ret

00009794 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    9794:	cf 93       	push	r28
    9796:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    9798:	a8 2f       	mov	r26, r24
    979a:	b0 e0       	ldi	r27, 0x00	; 0
    979c:	97 e1       	ldi	r25, 0x17	; 23
    979e:	89 9f       	mul	r24, r25
    97a0:	f0 01       	movw	r30, r0
    97a2:	11 24       	eor	r1, r1
    97a4:	e1 56       	subi	r30, 0x61	; 97
    97a6:	f7 4f       	sbci	r31, 0xF7	; 247
    97a8:	80 81       	ld	r24, Z
    97aa:	85 ff       	sbrs	r24, 5
    97ac:	02 c0       	rjmp	.+4      	; 0x97b2 <TriggerNote+0x1e>
    97ae:	87 fd       	sbrc	r24, 7
    97b0:	2e c0       	rjmp	.+92     	; 0x980e <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    97b2:	21 11       	cpse	r18, r1
    97b4:	18 c0       	rjmp	.+48     	; 0x97e6 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    97b6:	97 e1       	ldi	r25, 0x17	; 23
    97b8:	9a 9f       	mul	r25, r26
    97ba:	f0 01       	movw	r30, r0
    97bc:	9b 9f       	mul	r25, r27
    97be:	f0 0d       	add	r31, r0
    97c0:	11 24       	eor	r1, r1
    97c2:	e1 56       	subi	r30, 0x61	; 97
    97c4:	f7 4f       	sbci	r31, 0xF7	; 247
    97c6:	97 85       	ldd	r25, Z+15	; 0x0f
    97c8:	91 11       	cpse	r25, r1
    97ca:	02 c0       	rjmp	.+4      	; 0x97d0 <TriggerNote+0x3c>
    97cc:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    97ce:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    97d0:	97 e1       	ldi	r25, 0x17	; 23
    97d2:	9a 9f       	mul	r25, r26
    97d4:	f0 01       	movw	r30, r0
    97d6:	9b 9f       	mul	r25, r27
    97d8:	f0 0d       	add	r31, r0
    97da:	11 24       	eor	r1, r1
    97dc:	e1 56       	subi	r30, 0x61	; 97
    97de:	f7 4f       	sbci	r31, 0xF7	; 247
    97e0:	8f 7b       	andi	r24, 0xBF	; 191
    97e2:	80 83       	st	Z, r24
    97e4:	14 c0       	rjmp	.+40     	; 0x980e <TriggerNote+0x7a>
    97e6:	82 2f       	mov	r24, r18
    97e8:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    97ea:	97 e1       	ldi	r25, 0x17	; 23
    97ec:	9a 9f       	mul	r25, r26
    97ee:	e0 01       	movw	r28, r0
    97f0:	9b 9f       	mul	r25, r27
    97f2:	d0 0d       	add	r29, r0
    97f4:	11 24       	eor	r1, r1
    97f6:	c1 56       	subi	r28, 0x61	; 97
    97f8:	d7 4f       	sbci	r29, 0xF7	; 247
    97fa:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    97fc:	1e 8a       	std	Y+22, r1	; 0x16
    97fe:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    9800:	48 2f       	mov	r20, r24
    9802:	ce 01       	movw	r24, r28
    9804:	0e 94 01 4b 	call	0x9602	; 0x9602 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    9808:	88 81       	ld	r24, Y
    980a:	80 62       	ori	r24, 0x20	; 32
    980c:	88 83       	st	Y, r24
		}

	}
}
    980e:	df 91       	pop	r29
    9810:	cf 91       	pop	r28
    9812:	08 95       	ret

00009814 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    9814:	ef 92       	push	r14
    9816:	ff 92       	push	r15
    9818:	0f 93       	push	r16
    981a:	1f 93       	push	r17
    981c:	cf 93       	push	r28
    981e:	df 93       	push	r29
    9820:	cf e9       	ldi	r28, 0x9F	; 159
    9822:	d8 e0       	ldi	r29, 0x08	; 8
    9824:	08 e7       	ldi	r16, 0x78	; 120
    9826:	18 e0       	ldi	r17, 0x08	; 8
    9828:	98 01       	movw	r18, r16
    982a:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    982c:	1f 96       	adiw	r26, 0x0f	; 15
    982e:	8c 91       	ld	r24, X
    9830:	1f 97       	sbiw	r26, 0x0f	; 15
    9832:	88 23       	and	r24, r24
    9834:	a9 f0       	breq	.+42     	; 0x9860 <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    9836:	1e 96       	adiw	r26, 0x0e	; 14
    9838:	4c 91       	ld	r20, X
    983a:	1e 97       	sbiw	r26, 0x0e	; 14
    983c:	08 2e       	mov	r0, r24
    983e:	00 0c       	add	r0, r0
    9840:	99 0b       	sbc	r25, r25
    9842:	84 0f       	add	r24, r20
    9844:	91 1d       	adc	r25, r1
    9846:	8f 3f       	cpi	r24, 0xFF	; 255
    9848:	91 05       	cpc	r25, r1
    984a:	19 f0       	breq	.+6      	; 0x9852 <ProcessMusic+0x3e>
    984c:	14 f0       	brlt	.+4      	; 0x9852 <ProcessMusic+0x3e>
    984e:	8f ef       	ldi	r24, 0xFF	; 255
    9850:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    9852:	97 ff       	sbrs	r25, 7
    9854:	02 c0       	rjmp	.+4      	; 0x985a <ProcessMusic+0x46>
    9856:	80 e0       	ldi	r24, 0x00	; 0
    9858:	90 e0       	ldi	r25, 0x00	; 0
    985a:	1e 96       	adiw	r26, 0x0e	; 14
    985c:	8c 93       	st	X, r24
    985e:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    9860:	6c 91       	ld	r22, X
    9862:	63 ff       	sbrs	r22, 3
    9864:	26 c0       	rjmp	.+76     	; 0x98b2 <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    9866:	15 96       	adiw	r26, 0x05	; 5
    9868:	4d 91       	ld	r20, X+
    986a:	5c 91       	ld	r21, X
    986c:	16 97       	sbiw	r26, 0x06	; 6
    986e:	f9 01       	movw	r30, r18
    9870:	81 81       	ldd	r24, Z+1	; 0x01
    9872:	92 81       	ldd	r25, Z+2	; 0x02
    9874:	84 0f       	add	r24, r20
    9876:	95 1f       	adc	r25, r21
    9878:	92 83       	std	Z+2, r25	; 0x02
    987a:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    987c:	17 96       	adiw	r26, 0x07	; 7
    987e:	ec 91       	ld	r30, X
    9880:	17 97       	sbiw	r26, 0x07	; 7
    9882:	f0 e0       	ldi	r31, 0x00	; 0
    9884:	ee 0f       	add	r30, r30
    9886:	ff 1f       	adc	r31, r31
    9888:	e2 5d       	subi	r30, 0xD2	; 210
    988a:	f3 46       	sbci	r31, 0x63	; 99
    988c:	e5 90       	lpm	r14, Z+
    988e:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    9890:	14 16       	cp	r1, r20
    9892:	15 06       	cpc	r1, r21
    9894:	24 f4       	brge	.+8      	; 0x989e <ProcessMusic+0x8a>
    9896:	8e 15       	cp	r24, r14
    9898:	9f 05       	cpc	r25, r15
    989a:	30 f4       	brcc	.+12     	; 0x98a8 <ProcessMusic+0x94>
    989c:	0a c0       	rjmp	.+20     	; 0x98b2 <ProcessMusic+0x9e>
    989e:	45 2b       	or	r20, r21
    98a0:	41 f0       	breq	.+16     	; 0x98b2 <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    98a2:	e8 16       	cp	r14, r24
    98a4:	f9 06       	cpc	r15, r25
    98a6:	28 f0       	brcs	.+10     	; 0x98b2 <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    98a8:	f9 01       	movw	r30, r18
    98aa:	f2 82       	std	Z+2, r15	; 0x02
    98ac:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    98ae:	67 7f       	andi	r22, 0xF7	; 247
    98b0:	6c 93       	st	X, r22
    98b2:	57 96       	adiw	r26, 0x17	; 23
    98b4:	2a 5f       	subi	r18, 0xFA	; 250
    98b6:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    98b8:	f9 e0       	ldi	r31, 0x09	; 9
    98ba:	a2 31       	cpi	r26, 0x12	; 18
    98bc:	bf 07       	cpc	r27, r31
    98be:	09 f0       	breq	.+2      	; 0x98c2 <ProcessMusic+0xae>
    98c0:	b5 cf       	rjmp	.-150    	; 0x982c <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    98c2:	80 91 76 08 	lds	r24, 0x0876	; 0x800876 <playSong>
    98c6:	88 23       	and	r24, r24
    98c8:	09 f4       	brne	.+2      	; 0x98cc <ProcessMusic+0xb8>
    98ca:	cc c0       	rjmp	.+408    	; 0x9a64 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    98cc:	87 e1       	ldi	r24, 0x17	; 23
    98ce:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    98d0:	80 91 12 09 	lds	r24, 0x0912	; 0x800912 <currDeltaTime>
    98d4:	90 91 13 09 	lds	r25, 0x0913	; 0x800913 <currDeltaTime+0x1>
    98d8:	20 91 18 09 	lds	r18, 0x0918	; 0x800918 <nextDeltaTime>
    98dc:	30 91 19 09 	lds	r19, 0x0919	; 0x800919 <nextDeltaTime+0x1>
    98e0:	82 17       	cp	r24, r18
    98e2:	93 07       	cpc	r25, r19
    98e4:	09 f0       	breq	.+2      	; 0x98e8 <ProcessMusic+0xd4>
    98e6:	b9 c0       	rjmp	.+370    	; 0x9a5a <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    98e8:	20 91 1b 09 	lds	r18, 0x091B	; 0x80091b <songPos>
    98ec:	30 91 1c 09 	lds	r19, 0x091C	; 0x80091c <songPos+0x1>
    98f0:	b9 01       	movw	r22, r18
    98f2:	6f 5f       	subi	r22, 0xFF	; 255
    98f4:	7f 4f       	sbci	r23, 0xFF	; 255
    98f6:	70 93 1c 09 	sts	0x091C, r23	; 0x80091c <songPos+0x1>
    98fa:	60 93 1b 09 	sts	0x091B, r22	; 0x80091b <songPos>
    98fe:	f9 01       	movw	r30, r18
    9900:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    9902:	4f 3f       	cpi	r20, 0xFF	; 255
    9904:	79 f5       	brne	.+94     	; 0x9964 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    9906:	a9 01       	movw	r20, r18
    9908:	4e 5f       	subi	r20, 0xFE	; 254
    990a:	5f 4f       	sbci	r21, 0xFF	; 255
    990c:	50 93 1c 09 	sts	0x091C, r21	; 0x80091c <songPos+0x1>
    9910:	40 93 1b 09 	sts	0x091B, r20	; 0x80091b <songPos>
    9914:	fb 01       	movw	r30, r22
    9916:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    9918:	6f 32       	cpi	r22, 0x2F	; 47
    991a:	19 f4       	brne	.+6      	; 0x9922 <ProcessMusic+0x10e>
						playSong=false;
    991c:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
						break;	
    9920:	9c c0       	rjmp	.+312    	; 0x9a5a <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    9922:	66 30       	cpi	r22, 0x06	; 6
    9924:	09 f0       	breq	.+2      	; 0x9928 <ProcessMusic+0x114>
    9926:	8c c0       	rjmp	.+280    	; 0x9a40 <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    9928:	fa 01       	movw	r30, r20
    992a:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    992c:	c9 01       	movw	r24, r18
    992e:	04 96       	adiw	r24, 0x04	; 4
    9930:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    9934:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    9938:	f9 01       	movw	r30, r18
    993a:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    993c:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    993e:	e3 35       	cpi	r30, 0x53	; 83
    9940:	29 f4       	brne	.+10     	; 0x994c <ProcessMusic+0x138>
							loopStart=songPos;
    9942:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    9946:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    994a:	7a c0       	rjmp	.+244    	; 0x9a40 <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    994c:	e5 34       	cpi	r30, 0x45	; 69
    994e:	09 f0       	breq	.+2      	; 0x9952 <ProcessMusic+0x13e>
    9950:	77 c0       	rjmp	.+238    	; 0x9a40 <ProcessMusic+0x22c>
							songPos=loopStart;
    9952:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <loopStart>
    9956:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <loopStart+0x1>
    995a:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    995e:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    9962:	6e c0       	rjmp	.+220    	; 0x9a40 <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    9964:	47 fd       	sbrc	r20, 7
    9966:	40 93 16 09 	sts	0x0916, r20	; 0x800916 <lastStatus>
					channel=lastStatus&0x0f;
    996a:	90 91 16 09 	lds	r25, 0x0916	; 0x800916 <lastStatus>
    996e:	89 2f       	mov	r24, r25
    9970:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    9972:	47 ff       	sbrs	r20, 7
    9974:	08 c0       	rjmp	.+16     	; 0x9986 <ProcessMusic+0x172>
    9976:	2e 5f       	subi	r18, 0xFE	; 254
    9978:	3f 4f       	sbci	r19, 0xFF	; 255
    997a:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    997e:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    9982:	fb 01       	movw	r30, r22
    9984:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    9986:	90 7f       	andi	r25, 0xF0	; 240
    9988:	90 3b       	cpi	r25, 0xB0	; 176
    998a:	e1 f0       	breq	.+56     	; 0x99c4 <ProcessMusic+0x1b0>
    998c:	90 3c       	cpi	r25, 0xC0	; 192
    998e:	09 f4       	brne	.+2      	; 0x9992 <ProcessMusic+0x17e>
    9990:	51 c0       	rjmp	.+162    	; 0x9a34 <ProcessMusic+0x220>
    9992:	90 39       	cpi	r25, 0x90	; 144
    9994:	09 f0       	breq	.+2      	; 0x9998 <ProcessMusic+0x184>
    9996:	54 c0       	rjmp	.+168    	; 0x9a40 <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    9998:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    999c:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    99a0:	9f 01       	movw	r18, r30
    99a2:	2f 5f       	subi	r18, 0xFF	; 255
    99a4:	3f 4f       	sbci	r19, 0xFF	; 255
    99a6:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    99aa:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    99ae:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    99b0:	22 0f       	add	r18, r18
    99b2:	f8 9e       	mul	r15, r24
    99b4:	f0 01       	movw	r30, r0
    99b6:	11 24       	eor	r1, r1
    99b8:	e1 56       	subi	r30, 0x61	; 97
    99ba:	f7 4f       	sbci	r31, 0xF7	; 247
    99bc:	60 89       	ldd	r22, Z+16	; 0x10
    99be:	0e 94 ca 4b 	call	0x9794	; 0x9794 <TriggerNote>
    99c2:	3e c0       	rjmp	.+124    	; 0x9a40 <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    99c4:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    99c8:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    99cc:	9f 01       	movw	r18, r30
    99ce:	2f 5f       	subi	r18, 0xFF	; 255
    99d0:	3f 4f       	sbci	r19, 0xFF	; 255
    99d2:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    99d6:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    99da:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    99dc:	47 30       	cpi	r20, 0x07	; 7
    99de:	49 f4       	brne	.+18     	; 0x99f2 <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    99e0:	f8 9e       	mul	r15, r24
    99e2:	d0 01       	movw	r26, r0
    99e4:	11 24       	eor	r1, r1
    99e6:	a1 56       	subi	r26, 0x61	; 97
    99e8:	b7 4f       	sbci	r27, 0xF7	; 247
    99ea:	ee 0f       	add	r30, r30
    99ec:	1c 96       	adiw	r26, 0x0c	; 12
    99ee:	ec 93       	st	X, r30
    99f0:	27 c0       	rjmp	.+78     	; 0x9a40 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    99f2:	4b 30       	cpi	r20, 0x0B	; 11
    99f4:	49 f4       	brne	.+18     	; 0x9a08 <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    99f6:	f8 9e       	mul	r15, r24
    99f8:	d0 01       	movw	r26, r0
    99fa:	11 24       	eor	r1, r1
    99fc:	a1 56       	subi	r26, 0x61	; 97
    99fe:	b7 4f       	sbci	r27, 0xF7	; 247
    9a00:	ee 0f       	add	r30, r30
    9a02:	13 96       	adiw	r26, 0x03	; 3
    9a04:	ec 93       	st	X, r30
    9a06:	1c c0       	rjmp	.+56     	; 0x9a40 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    9a08:	4c 35       	cpi	r20, 0x5C	; 92
    9a0a:	49 f4       	brne	.+18     	; 0x9a1e <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    9a0c:	f8 9e       	mul	r15, r24
    9a0e:	d0 01       	movw	r26, r0
    9a10:	11 24       	eor	r1, r1
    9a12:	a1 56       	subi	r26, 0x61	; 97
    9a14:	b7 4f       	sbci	r27, 0xF7	; 247
    9a16:	ee 0f       	add	r30, r30
    9a18:	1a 96       	adiw	r26, 0x0a	; 10
    9a1a:	ec 93       	st	X, r30
    9a1c:	11 c0       	rjmp	.+34     	; 0x9a40 <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    9a1e:	44 36       	cpi	r20, 0x64	; 100
    9a20:	79 f4       	brne	.+30     	; 0x9a40 <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    9a22:	f8 9e       	mul	r15, r24
    9a24:	d0 01       	movw	r26, r0
    9a26:	11 24       	eor	r1, r1
    9a28:	a1 56       	subi	r26, 0x61	; 97
    9a2a:	b7 4f       	sbci	r27, 0xF7	; 247
    9a2c:	ee 0f       	add	r30, r30
    9a2e:	1b 96       	adiw	r26, 0x0b	; 11
    9a30:	ec 93       	st	X, r30
    9a32:	06 c0       	rjmp	.+12     	; 0x9a40 <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    9a34:	f8 9e       	mul	r15, r24
    9a36:	f0 01       	movw	r30, r0
    9a38:	11 24       	eor	r1, r1
    9a3a:	e1 56       	subi	r30, 0x61	; 97
    9a3c:	f7 4f       	sbci	r31, 0xF7	; 247
    9a3e:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    9a40:	8b e1       	ldi	r24, 0x1B	; 27
    9a42:	99 e0       	ldi	r25, 0x09	; 9
    9a44:	0e 94 db 4a 	call	0x95b6	; 0x95b6 <ReadVarLen>
    9a48:	90 93 19 09 	sts	0x0919, r25	; 0x800919 <nextDeltaTime+0x1>
    9a4c:	80 93 18 09 	sts	0x0918, r24	; 0x800918 <nextDeltaTime>
				currDeltaTime=0;
    9a50:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    9a54:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    9a58:	3b cf       	rjmp	.-394    	; 0x98d0 <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    9a5a:	01 96       	adiw	r24, 0x01	; 1
    9a5c:	90 93 13 09 	sts	0x0913, r25	; 0x800913 <currDeltaTime+0x1>
    9a60:	80 93 12 09 	sts	0x0912, r24	; 0x800912 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    9a64:	ee 24       	eor	r14, r14
    9a66:	ea 94       	dec	r14
    9a68:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    9a6a:	88 81       	ld	r24, Y
    9a6c:	85 ff       	sbrs	r24, 5
    9a6e:	37 c0       	rjmp	.+110    	; 0x9ade <ProcessMusic+0x2ca>
    9a70:	2d 89       	ldd	r18, Y+21	; 0x15
    9a72:	3e 89       	ldd	r19, Y+22	; 0x16
    9a74:	23 2b       	or	r18, r19
    9a76:	09 f4       	brne	.+2      	; 0x9a7a <ProcessMusic+0x266>
    9a78:	32 c0       	rjmp	.+100    	; 0x9ade <ProcessMusic+0x2ca>
    9a7a:	86 fd       	sbrc	r24, 6
    9a7c:	30 c0       	rjmp	.+96     	; 0x9ade <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    9a7e:	9b 89       	ldd	r25, Y+19	; 0x13
    9a80:	8a 89       	ldd	r24, Y+18	; 0x12
    9a82:	98 13       	cpse	r25, r24
    9a84:	2a c0       	rjmp	.+84     	; 0x9ada <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    9a86:	ed 89       	ldd	r30, Y+21	; 0x15
    9a88:	fe 89       	ldd	r31, Y+22	; 0x16
    9a8a:	bf 01       	movw	r22, r30
    9a8c:	6f 5f       	subi	r22, 0xFF	; 255
    9a8e:	7f 4f       	sbci	r23, 0xFF	; 255
    9a90:	7e 8b       	std	Y+22, r23	; 0x16
    9a92:	6d 8b       	std	Y+21, r22	; 0x15
    9a94:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    9a96:	8f 3f       	cpi	r24, 0xFF	; 255
    9a98:	31 f4       	brne	.+12     	; 0x9aa6 <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    9a9a:	88 81       	ld	r24, Y
    9a9c:	8f 77       	andi	r24, 0x7F	; 127
    9a9e:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    9aa0:	1e 8a       	std	Y+22, r1	; 0x16
    9aa2:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    9aa4:	1a c0       	rjmp	.+52     	; 0x9ada <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    9aa6:	32 96       	adiw	r30, 0x02	; 2
    9aa8:	fe 8b       	std	Y+22, r31	; 0x16
    9aaa:	ed 8b       	std	Y+21, r30	; 0x15
    9aac:	fb 01       	movw	r30, r22
    9aae:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    9ab0:	e8 2f       	mov	r30, r24
    9ab2:	f0 e0       	ldi	r31, 0x00	; 0
    9ab4:	ee 0f       	add	r30, r30
    9ab6:	ff 1f       	adc	r31, r31
    9ab8:	ee 53       	subi	r30, 0x3E	; 62
    9aba:	ff 4f       	sbci	r31, 0xFF	; 255
    9abc:	25 91       	lpm	r18, Z+
    9abe:	34 91       	lpm	r19, Z
    9ac0:	ce 01       	movw	r24, r28
    9ac2:	f9 01       	movw	r30, r18
    9ac4:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    9ac6:	ed 89       	ldd	r30, Y+21	; 0x15
    9ac8:	fe 89       	ldd	r31, Y+22	; 0x16
    9aca:	cf 01       	movw	r24, r30
    9acc:	01 96       	adiw	r24, 0x01	; 1
    9ace:	9e 8b       	std	Y+22, r25	; 0x16
    9ad0:	8d 8b       	std	Y+21, r24	; 0x15
    9ad2:	e4 91       	lpm	r30, Z
    9ad4:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    9ad6:	1b 8a       	std	Y+19, r1	; 0x13
    9ad8:	d2 cf       	rjmp	.-92     	; 0x9a7e <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    9ada:	9f 5f       	subi	r25, 0xFF	; 255
    9adc:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    9ade:	98 81       	ld	r25, Y
    9ae0:	95 ff       	sbrs	r25, 5
    9ae2:	5e c0       	rjmp	.+188    	; 0x9ba0 <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    9ae4:	8c 89       	ldd	r24, Y+20	; 0x14
    9ae6:	8f 3f       	cpi	r24, 0xFF	; 255
    9ae8:	11 f0       	breq	.+4      	; 0x9aee <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    9aea:	8f 5f       	subi	r24, 0xFF	; 255
    9aec:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    9aee:	97 fd       	sbrc	r25, 7
    9af0:	02 c0       	rjmp	.+4      	; 0x9af6 <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    9af2:	9c 85       	ldd	r25, Y+12	; 0x0c
    9af4:	01 c0       	rjmp	.+2      	; 0x9af8 <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    9af6:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    9af8:	8d 85       	ldd	r24, Y+13	; 0x0d
    9afa:	49 85       	ldd	r20, Y+9	; 0x09
    9afc:	88 23       	and	r24, r24
    9afe:	09 f4       	brne	.+2      	; 0x9b02 <ProcessMusic+0x2ee>
    9b00:	49 c0       	rjmp	.+146    	; 0x9b94 <ProcessMusic+0x380>
    9b02:	6e 85       	ldd	r22, Y+14	; 0x0e
    9b04:	66 23       	and	r22, r22
    9b06:	09 f4       	brne	.+2      	; 0x9b0a <ProcessMusic+0x2f6>
    9b08:	45 c0       	rjmp	.+138    	; 0x9b94 <ProcessMusic+0x380>
    9b0a:	99 23       	and	r25, r25
    9b0c:	09 f4       	brne	.+2      	; 0x9b10 <ProcessMusic+0x2fc>
    9b0e:	42 c0       	rjmp	.+132    	; 0x9b94 <ProcessMusic+0x380>
    9b10:	50 91 17 09 	lds	r21, 0x0917	; 0x800917 <masterVolume>
    9b14:	55 23       	and	r21, r21
    9b16:	09 f4       	brne	.+2      	; 0x9b1a <ProcessMusic+0x306>
    9b18:	3d c0       	rjmp	.+122    	; 0x9b94 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    9b1a:	89 9f       	mul	r24, r25
    9b1c:	c0 01       	movw	r24, r0
    9b1e:	11 24       	eor	r1, r1
    9b20:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    9b22:	89 2f       	mov	r24, r25
    9b24:	99 27       	eor	r25, r25
    9b26:	68 9f       	mul	r22, r24
    9b28:	90 01       	movw	r18, r0
    9b2a:	69 9f       	mul	r22, r25
    9b2c:	30 0d       	add	r19, r0
    9b2e:	11 24       	eor	r1, r1
    9b30:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    9b32:	23 2f       	mov	r18, r19
    9b34:	33 27       	eor	r19, r19
    9b36:	6b 81       	ldd	r22, Y+3	; 0x03
    9b38:	62 9f       	mul	r22, r18
    9b3a:	c0 01       	movw	r24, r0
    9b3c:	63 9f       	mul	r22, r19
    9b3e:	90 0d       	add	r25, r0
    9b40:	11 24       	eor	r1, r1
    9b42:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    9b44:	89 2f       	mov	r24, r25
    9b46:	99 27       	eor	r25, r25
    9b48:	58 9f       	mul	r21, r24
    9b4a:	90 01       	movw	r18, r0
    9b4c:	59 9f       	mul	r21, r25
    9b4e:	30 0d       	add	r19, r0
    9b50:	11 24       	eor	r1, r1
    9b52:	33 95       	inc	r19
				uVol>>=8;
    9b54:	23 2f       	mov	r18, r19
    9b56:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    9b58:	8a 85       	ldd	r24, Y+10	; 0x0a
    9b5a:	88 23       	and	r24, r24
    9b5c:	e9 f0       	breq	.+58     	; 0x9b98 <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    9b5e:	e4 2f       	mov	r30, r20
    9b60:	f0 e0       	ldi	r31, 0x00	; 0
    9b62:	e0 50       	subi	r30, 0x00	; 0
    9b64:	f2 46       	sbci	r31, 0x62	; 98
    9b66:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    9b68:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    9b6a:	8e 9f       	mul	r24, r30
    9b6c:	f0 01       	movw	r30, r0
    9b6e:	11 24       	eor	r1, r1
    9b70:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    9b72:	ef 2f       	mov	r30, r31
    9b74:	ff 27       	eor	r31, r31
    9b76:	b7 01       	movw	r22, r14
    9b78:	6e 1b       	sub	r22, r30
    9b7a:	7f 0b       	sbc	r23, r31
    9b7c:	62 9f       	mul	r22, r18
    9b7e:	c0 01       	movw	r24, r0
    9b80:	63 9f       	mul	r22, r19
    9b82:	90 0d       	add	r25, r0
    9b84:	72 9f       	mul	r23, r18
    9b86:	90 0d       	add	r25, r0
    9b88:	11 24       	eor	r1, r1
    9b8a:	9c 01       	movw	r18, r24
    9b8c:	33 95       	inc	r19
					uVol>>=8;
    9b8e:	23 2f       	mov	r18, r19
    9b90:	33 27       	eor	r19, r19
    9b92:	02 c0       	rjmp	.+4      	; 0x9b98 <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    9b94:	20 e0       	ldi	r18, 0x00	; 0
    9b96:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    9b98:	8b 85       	ldd	r24, Y+11	; 0x0b
    9b9a:	48 0f       	add	r20, r24
    9b9c:	49 87       	std	Y+9, r20	; 0x09
    9b9e:	02 c0       	rjmp	.+4      	; 0x9ba4 <ProcessMusic+0x390>

		}else{
			uVol=0;
    9ba0:	20 e0       	ldi	r18, 0x00	; 0
    9ba2:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    9ba4:	f8 01       	movw	r30, r16
    9ba6:	20 83       	st	Z, r18
    9ba8:	67 96       	adiw	r28, 0x17	; 23
    9baa:	0a 5f       	subi	r16, 0xFA	; 250
    9bac:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    9bae:	f9 e0       	ldi	r31, 0x09	; 9
    9bb0:	c2 31       	cpi	r28, 0x12	; 18
    9bb2:	df 07       	cpc	r29, r31
    9bb4:	09 f0       	breq	.+2      	; 0x9bb8 <ProcessMusic+0x3a4>
    9bb6:	59 cf       	rjmp	.-334    	; 0x9a6a <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    9bb8:	df 91       	pop	r29
    9bba:	cf 91       	pop	r28
    9bbc:	1f 91       	pop	r17
    9bbe:	0f 91       	pop	r16
    9bc0:	ff 90       	pop	r15
    9bc2:	ef 90       	pop	r14
    9bc4:	08 95       	ret

00009bc6 <SetMixerNote>:
    9bc6:	99 27       	eor	r25, r25
    9bc8:	77 27       	eor	r23, r23
    9bca:	83 30       	cpi	r24, 0x03	; 3
    9bcc:	09 f4       	brne	.+2      	; 0x9bd0 <set_note_waves>
    9bce:	08 95       	ret

00009bd0 <set_note_waves>:
    9bd0:	ee e2       	ldi	r30, 0x2E	; 46
    9bd2:	fc e9       	ldi	r31, 0x9C	; 156
    9bd4:	66 0f       	add	r22, r22
    9bd6:	77 1f       	adc	r23, r23
    9bd8:	e6 0f       	add	r30, r22
    9bda:	f7 1f       	adc	r31, r23
    9bdc:	a5 91       	lpm	r26, Z+
    9bde:	b4 91       	lpm	r27, Z
    9be0:	e8 e7       	ldi	r30, 0x78	; 120
    9be2:	f8 e0       	ldi	r31, 0x08	; 8
    9be4:	26 e0       	ldi	r18, 0x06	; 6
    9be6:	28 9f       	mul	r18, r24
    9be8:	e0 0d       	add	r30, r0
    9bea:	f1 1d       	adc	r31, r1
    9bec:	a1 83       	std	Z+1, r26	; 0x01
    9bee:	b2 83       	std	Z+2, r27	; 0x02
    9bf0:	11 24       	eor	r1, r1
    9bf2:	08 95       	ret

00009bf4 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    9bf4:	99 27       	eor	r25, r25
	clr r23
    9bf6:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    9bf8:	e8 e7       	ldi	r30, 0x78	; 120
	ldi ZH,hi8(mixerStruct)
    9bfa:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    9bfc:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    9bfe:	28 9f       	mul	r18, r24
	add ZL,r0
    9c00:	e0 0d       	add	r30, r0
	adc ZH,r1
    9c02:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    9c04:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    9c06:	31 f4       	brne	.+12     	; 0x9c14 <smw1>
	lds r22,tr4_params
    9c08:	60 91 8b 08 	lds	r22, 0x088B	; 0x80088b <tr4_params>
	andi r22,0xfe;
    9c0c:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    9c0e:	60 93 8b 08 	sts	0x088B, r22	; 0x80088b <tr4_params>
	rjmp esmw	
    9c12:	0b c0       	rjmp	.+22     	; 0x9c2a <esmw>

00009c14 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    9c14:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    9c16:	31 f4       	brne	.+12     	; 0x9c24 <smw2>
	lds r22,tr4_params
    9c18:	60 91 8b 08 	lds	r22, 0x088B	; 0x80088b <tr4_params>
	ori r22,0xfe;
    9c1c:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    9c1e:	60 93 8b 08 	sts	0x088B, r22	; 0x80088b <tr4_params>
	rjmp esmw
    9c22:	03 c0       	rjmp	.+6      	; 0x9c2a <esmw>

00009c24 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    9c24:	7e e9       	ldi	r23, 0x9E	; 158
	add r23,r22
    9c26:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    9c28:	75 83       	std	Z+5, r23	; 0x05

00009c2a <esmw>:
#endif

esmw:
	clr r1	
    9c2a:	11 24       	eor	r1, r1
	ret
    9c2c:	08 95       	ret

00009c2e <steptable>:
    9c2e:	22 00       	.word	0x0022	; ????
    9c30:	24 00       	.word	0x0024	; ????
    9c32:	26 00       	.word	0x0026	; ????
    9c34:	28 00       	.word	0x0028	; ????
    9c36:	2b 00       	.word	0x002b	; ????
    9c38:	2d 00       	.word	0x002d	; ????
    9c3a:	30 00       	.word	0x0030	; ????
    9c3c:	33 00       	.word	0x0033	; ????
    9c3e:	36 00       	.word	0x0036	; ????
    9c40:	39 00       	.word	0x0039	; ????
    9c42:	3d 00       	.word	0x003d	; ????
    9c44:	40 00       	.word	0x0040	; ????
    9c46:	44 00       	.word	0x0044	; ????
    9c48:	48 00       	.word	0x0048	; ????
    9c4a:	4c 00       	.word	0x004c	; ????
    9c4c:	51 00       	.word	0x0051	; ????
    9c4e:	56 00       	.word	0x0056	; ????
    9c50:	5b 00       	.word	0x005b	; ????
    9c52:	60 00       	.word	0x0060	; ????
    9c54:	66 00       	.word	0x0066	; ????
    9c56:	6c 00       	.word	0x006c	; ????
    9c58:	73 00       	.word	0x0073	; ????
    9c5a:	79 00       	.word	0x0079	; ????
    9c5c:	81 00       	.word	0x0081	; ????
    9c5e:	88 00       	.word	0x0088	; ????
    9c60:	90 00       	.word	0x0090	; ????
    9c62:	99 00       	.word	0x0099	; ????
    9c64:	a2 00       	.word	0x00a2	; ????
    9c66:	ac 00       	.word	0x00ac	; ????
    9c68:	b6 00       	.word	0x00b6	; ????
    9c6a:	c1 00       	.word	0x00c1	; ????
    9c6c:	cc 00       	.word	0x00cc	; ????
    9c6e:	d8 00       	.word	0x00d8	; ????
    9c70:	e5 00       	.word	0x00e5	; ????
    9c72:	f3 00       	.word	0x00f3	; ????
    9c74:	01 01       	movw	r0, r2
    9c76:	10 01       	movw	r2, r0
    9c78:	21 01       	movw	r4, r2
    9c7a:	32 01       	movw	r6, r4
    9c7c:	44 01       	movw	r8, r8
    9c7e:	57 01       	movw	r10, r14
    9c80:	6c 01       	movw	r12, r24
    9c82:	81 01       	movw	r16, r2
    9c84:	98 01       	movw	r18, r16
    9c86:	b0 01       	movw	r22, r0
    9c88:	ca 01       	movw	r24, r20
    9c8a:	e5 01       	movw	r28, r10
    9c8c:	02 02       	muls	r16, r18
    9c8e:	21 02       	muls	r18, r17
    9c90:	41 02       	muls	r20, r17
    9c92:	64 02       	muls	r22, r20
    9c94:	88 02       	muls	r24, r24
    9c96:	ae 02       	muls	r26, r30
    9c98:	d7 02       	muls	r29, r23
    9c9a:	03 03       	mulsu	r16, r19
    9c9c:	30 03       	mulsu	r19, r16
    9c9e:	61 03       	mulsu	r22, r17
    9ca0:	94 03       	fmuls	r17, r20
    9ca2:	cb 03       	fmulsu	r20, r19
    9ca4:	05 04       	cpc	r0, r5
    9ca6:	42 04       	cpc	r4, r2
    9ca8:	83 04       	cpc	r8, r3
    9caa:	c7 04       	cpc	r12, r7
    9cac:	10 05       	cpc	r17, r0
    9cae:	5d 05       	cpc	r21, r13
    9cb0:	af 05       	cpc	r26, r15
    9cb2:	05 06       	cpc	r0, r21
    9cb4:	61 06       	cpc	r6, r17
    9cb6:	c2 06       	cpc	r12, r18
    9cb8:	29 07       	cpc	r18, r25
    9cba:	96 07       	cpc	r25, r22
    9cbc:	09 08       	sbc	r0, r9
    9cbe:	83 08       	sbc	r8, r3
    9cc0:	05 09       	sbc	r16, r5
    9cc2:	8e 09       	sbc	r24, r14
    9cc4:	20 0a       	sbc	r2, r16
    9cc6:	ba 0a       	sbc	r11, r26
    9cc8:	5d 0b       	sbc	r21, r29
    9cca:	0a 0c       	add	r0, r10
    9ccc:	c1 0c       	add	r12, r1
    9cce:	84 0d       	add	r24, r4
    9cd0:	51 0e       	add	r5, r17
    9cd2:	2b 0f       	add	r18, r27
    9cd4:	12 10       	cpse	r1, r2
    9cd6:	07 11       	cpse	r16, r7
    9cd8:	0a 12       	cpse	r0, r26
    9cda:	1d 13       	cpse	r17, r29
    9cdc:	40 14       	cp	r4, r0
    9cde:	74 15       	cp	r23, r4
    9ce0:	ba 16       	cp	r11, r26
    9ce2:	14 18       	sub	r1, r4
    9ce4:	83 19       	sub	r24, r3
    9ce6:	07 1b       	sub	r16, r23
    9ce8:	a3 1c       	adc	r10, r3
    9cea:	57 1e       	adc	r5, r23
    9cec:	24 20       	and	r2, r4
    9cee:	0e 22       	and	r0, r30
    9cf0:	14 24       	eor	r1, r4
    9cf2:	39 26       	eor	r3, r25
    9cf4:	7f 28       	or	r7, r15
    9cf6:	e8 2a       	or	r14, r24
    9cf8:	75 2d       	mov	r23, r5
    9cfa:	29 30       	cpi	r18, 0x09	; 9
    9cfc:	06 33       	cpi	r16, 0x36	; 54
    9cfe:	0f 36       	cpi	r16, 0x6F	; 111
    9d00:	45 39       	cpi	r20, 0x95	; 149
    9d02:	ad 3c       	cpi	r26, 0xCD	; 205
    9d04:	49 40       	sbci	r20, 0x09	; 9
    9d06:	1b 44       	sbci	r17, 0x4B	; 75
    9d08:	28 48       	sbci	r18, 0x88	; 136
    9d0a:	73 4c       	sbci	r23, 0xC3	; 195
    9d0c:	fe 50       	subi	r31, 0x0E	; 14
    9d0e:	cf 55       	subi	r28, 0x5F	; 95
    9d10:	ea 5a       	subi	r30, 0xAA	; 170
    9d12:	51 60       	ori	r21, 0x01	; 1
    9d14:	0c 66       	ori	r16, 0x6C	; 108
    9d16:	1d 6c       	ori	r17, 0xCD	; 205
    9d18:	8b 72       	andi	r24, 0x2B	; 43
    9d1a:	5a 79       	andi	r21, 0x9A	; 154
    9d1c:	92 80       	ldd	r9, Z+2	; 0x02
    9d1e:	37 88       	ldd	r3, Z+23	; 0x17
    9d20:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x89e5>
    9d24:	fd a1       	ldd	r31, Y+37	; 0x25
    9d26:	9f ab       	std	Y+55, r25	; 0x37
    9d28:	d3 b5       	in	r29, 0x23	; 35
    9d2a:	a3 c0       	rjmp	.+326    	; 0x9e72 <waves+0x72>
	...

00009e00 <waves>:
    9e00:	00 03       	mulsu	r16, r16
    9e02:	06 09       	sbc	r16, r6
    9e04:	0c 10       	cpse	r0, r12
    9e06:	13 16       	cp	r1, r19
    9e08:	19 1c       	adc	r1, r9
    9e0a:	1f 22       	and	r1, r31
    9e0c:	25 28       	or	r2, r5
    9e0e:	2b 2e       	mov	r2, r27
    9e10:	31 33       	cpi	r19, 0x31	; 49
    9e12:	36 39       	cpi	r19, 0x96	; 150
    9e14:	3c 3f       	cpi	r19, 0xFC	; 252
    9e16:	41 44       	sbci	r20, 0x41	; 65
    9e18:	47 49       	sbci	r20, 0x97	; 151
    9e1a:	4c 4e       	sbci	r20, 0xEC	; 236
    9e1c:	51 53       	subi	r21, 0x31	; 49
    9e1e:	55 58       	subi	r21, 0x85	; 133
    9e20:	5a 5c       	subi	r21, 0xCA	; 202
    9e22:	5e 60       	ori	r21, 0x0E	; 14
    9e24:	62 64       	ori	r22, 0x42	; 66
    9e26:	66 68       	ori	r22, 0x86	; 134
    9e28:	6a 6b       	ori	r22, 0xBA	; 186
    9e2a:	6d 6f       	ori	r22, 0xFD	; 253
    9e2c:	70 71       	andi	r23, 0x10	; 16
    9e2e:	73 74       	andi	r23, 0x43	; 67
    9e30:	75 76       	andi	r23, 0x65	; 101
    9e32:	78 79       	andi	r23, 0x98	; 152
    9e34:	7a 7a       	andi	r23, 0xAA	; 170
    9e36:	7b 7c       	andi	r23, 0xCB	; 203
    9e38:	7d 7d       	andi	r23, 0xDD	; 221
    9e3a:	7e 7e       	andi	r23, 0xEE	; 238
    9e3c:	7e 7f       	andi	r23, 0xFE	; 254
    9e3e:	7f 7f       	andi	r23, 0xFF	; 255
    9e40:	7f 7f       	andi	r23, 0xFF	; 255
    9e42:	7f 7f       	andi	r23, 0xFF	; 255
    9e44:	7e 7e       	andi	r23, 0xEE	; 238
    9e46:	7e 7d       	andi	r23, 0xDE	; 222
    9e48:	7d 7c       	andi	r23, 0xCD	; 205
    9e4a:	7b 7a       	andi	r23, 0xAB	; 171
    9e4c:	7a 79       	andi	r23, 0x9A	; 154
    9e4e:	78 76       	andi	r23, 0x68	; 104
    9e50:	75 74       	andi	r23, 0x45	; 69
    9e52:	73 71       	andi	r23, 0x13	; 19
    9e54:	70 6f       	ori	r23, 0xF0	; 240
    9e56:	6d 6b       	ori	r22, 0xBD	; 189
    9e58:	6a 68       	ori	r22, 0x8A	; 138
    9e5a:	66 64       	ori	r22, 0x46	; 70
    9e5c:	62 60       	ori	r22, 0x02	; 2
    9e5e:	5e 5c       	subi	r21, 0xCE	; 206
    9e60:	5a 58       	subi	r21, 0x8A	; 138
    9e62:	55 53       	subi	r21, 0x35	; 53
    9e64:	51 4e       	sbci	r21, 0xE1	; 225
    9e66:	4c 49       	sbci	r20, 0x9C	; 156
    9e68:	47 44       	sbci	r20, 0x47	; 71
    9e6a:	41 3f       	cpi	r20, 0xF1	; 241
    9e6c:	3c 39       	cpi	r19, 0x9C	; 156
    9e6e:	36 33       	cpi	r19, 0x36	; 54
    9e70:	31 2e       	mov	r3, r17
    9e72:	2b 28       	or	r2, r11
    9e74:	25 22       	and	r2, r21
    9e76:	1f 1c       	adc	r1, r15
    9e78:	19 16       	cp	r1, r25
    9e7a:	13 10       	cpse	r1, r3
    9e7c:	0c 09       	sbc	r16, r12
    9e7e:	06 03       	mulsu	r16, r22
    9e80:	00 fd       	sbrc	r16, 0
    9e82:	fa f7       	brpl	.-2      	; 0x9e82 <waves+0x82>
    9e84:	f4 f0       	brlt	.+60     	; 0x9ec2 <waves+0xc2>
    9e86:	ed ea       	ldi	r30, 0xAD	; 173
    9e88:	e7 e4       	ldi	r30, 0x47	; 71
    9e8a:	e1 de       	rcall	.-574    	; 0x9c4e <steptable+0x20>
    9e8c:	db d8       	rcall	.-3658   	; 0x9044 <no_render+0x52>
    9e8e:	d5 d2       	rcall	.+1450   	; 0xa43a <waves+0x63a>
    9e90:	cf cd       	rjmp	.-1122   	; 0x9a30 <ProcessMusic+0x21c>
    9e92:	ca c7       	rjmp	.+3988   	; 0xae28 <drawplayer+0xc4>
    9e94:	c4 c1       	rjmp	.+904    	; 0xa21e <waves+0x41e>
    9e96:	bf bc       	out	0x2f, r11	; 47
    9e98:	b9 b7       	in	r27, 0x39	; 57
    9e9a:	b4 b2       	in	r11, 0x14	; 20
    9e9c:	af ad       	ldd	r26, Y+63	; 0x3f
    9e9e:	ab a8       	ldd	r10, Y+51	; 0x33
    9ea0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    9ea2:	a2 a0       	ldd	r10, Z+34	; 0x22
    9ea4:	9e 9c       	mul	r9, r14
    9ea6:	9a 98       	cbi	0x13, 2	; 19
    9ea8:	96 95       	lsr	r25
    9eaa:	93 91       	.word	0x9193	; ????
    9eac:	90 8f       	std	Z+24, r25	; 0x18
    9eae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9eb0:	8b 8a       	std	Y+19, r8	; 0x13
    9eb2:	88 87       	std	Y+8, r24	; 0x08
    9eb4:	86 86       	std	Z+14, r8	; 0x0e
    9eb6:	85 84       	ldd	r8, Z+13	; 0x0d
    9eb8:	83 83       	std	Z+3, r24	; 0x03
    9eba:	82 82       	std	Z+2, r8	; 0x02
    9ebc:	82 81       	ldd	r24, Z+2	; 0x02
    9ebe:	81 81       	ldd	r24, Z+1	; 0x01
    9ec0:	81 81       	ldd	r24, Z+1	; 0x01
    9ec2:	81 81       	ldd	r24, Z+1	; 0x01
    9ec4:	82 82       	std	Z+2, r8	; 0x02
    9ec6:	82 83       	std	Z+2, r24	; 0x02
    9ec8:	83 84       	ldd	r8, Z+11	; 0x0b
    9eca:	85 86       	std	Z+13, r8	; 0x0d
    9ecc:	86 87       	std	Z+14, r24	; 0x0e
    9ece:	88 8a       	std	Y+16, r8	; 0x10
    9ed0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    9ed2:	8d 8f       	std	Y+29, r24	; 0x1d
    9ed4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8693>
    9ed8:	96 98       	cbi	0x12, 6	; 18
    9eda:	9a 9c       	mul	r9, r10
    9edc:	9e a0       	ldd	r9, Y+38	; 0x26
    9ede:	a2 a4       	ldd	r10, Z+42	; 0x2a
    9ee0:	a6 a8       	ldd	r10, Z+54	; 0x36
    9ee2:	ab ad       	ldd	r26, Y+59	; 0x3b
    9ee4:	af b2       	in	r10, 0x1f	; 31
    9ee6:	b4 b7       	in	r27, 0x34	; 52
    9ee8:	b9 bc       	out	0x29, r11	; 41
    9eea:	bf c1       	rjmp	.+894    	; 0xa26a <waves+0x46a>
    9eec:	c4 c7       	rjmp	.+3976   	; 0xae76 <drawplayer+0x112>
    9eee:	ca cd       	rjmp	.-1132   	; 0x9a84 <ProcessMusic+0x270>
    9ef0:	cf d2       	rcall	.+1438   	; 0xa490 <waves+0x690>
    9ef2:	d5 d8       	rcall	.-3670   	; 0x909e <process_music+0x6>
    9ef4:	db de       	rcall	.-586    	; 0x9cac <steptable+0x7e>
    9ef6:	e1 e4       	ldi	r30, 0x41	; 65
    9ef8:	e7 ea       	ldi	r30, 0xA7	; 167
    9efa:	ed f0       	brhs	.+58     	; 0x9f36 <waves+0x136>
    9efc:	f4 f7       	brge	.-4      	; 0x9efa <waves+0xfa>
    9efe:	fa fd       	.word	0xfdfa	; ????
    9f00:	80 81       	ld	r24, Z
    9f02:	82 83       	std	Z+2, r24	; 0x02
    9f04:	84 85       	ldd	r24, Z+12	; 0x0c
    9f06:	86 87       	std	Z+14, r24	; 0x0e
    9f08:	88 89       	ldd	r24, Y+16	; 0x10
    9f0a:	8a 8b       	std	Y+18, r24	; 0x12
    9f0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9f0e:	8e 8f       	std	Y+30, r24	; 0x1e
    9f10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8492>
    9f14:	94 95       	.word	0x9594	; ????
    9f16:	96 97       	sbiw	r26, 0x26	; 38
    9f18:	98 99       	sbic	0x13, 0	; 19
    9f1a:	9a 9b       	sbis	0x13, 2	; 19
    9f1c:	9c 9d       	mul	r25, r12
    9f1e:	9e 9f       	mul	r25, r30
    9f20:	a0 a1       	ldd	r26, Z+32	; 0x20
    9f22:	a2 a3       	std	Z+34, r26	; 0x22
    9f24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9f26:	a6 a7       	std	Z+46, r26	; 0x2e
    9f28:	a8 a9       	ldd	r26, Y+48	; 0x30
    9f2a:	aa ab       	std	Y+50, r26	; 0x32
    9f2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    9f2e:	ae af       	std	Y+62, r26	; 0x3e
    9f30:	b0 b1       	in	r27, 0x00	; 0
    9f32:	b2 b3       	in	r27, 0x12	; 18
    9f34:	b4 b5       	in	r27, 0x24	; 36
    9f36:	b6 b7       	in	r27, 0x36	; 54
    9f38:	b8 b9       	out	0x08, r27	; 8
    9f3a:	ba bb       	out	0x1a, r27	; 26
    9f3c:	bc bd       	out	0x2c, r27	; 44
    9f3e:	be bf       	out	0x3e, r27	; 62
    9f40:	c0 c1       	rjmp	.+896    	; 0xa2c2 <waves+0x4c2>
    9f42:	c2 c3       	rjmp	.+1924   	; 0xa6c8 <waves+0x8c8>
    9f44:	c4 c5       	rjmp	.+2952   	; 0xaace <MapSprite2+0x3e>
    9f46:	c6 c7       	rjmp	.+3980   	; 0xaed4 <drawplayer2+0x4>
    9f48:	c8 c9       	rjmp	.-3184   	; 0x92da <ReadButtons+0x1c>
    9f4a:	ca cb       	rjmp	.-2156   	; 0x96e0 <TriggerCommon+0xde>
    9f4c:	cc cd       	rjmp	.-1128   	; 0x9ae6 <ProcessMusic+0x2d2>
    9f4e:	ce cf       	rjmp	.-100    	; 0x9eec <waves+0xec>
    9f50:	d0 d1       	rcall	.+928    	; 0xa2f2 <waves+0x4f2>
    9f52:	d2 d3       	rcall	.+1956   	; 0xa6f8 <waves+0x8f8>
    9f54:	d4 d5       	rcall	.+2984   	; 0xaafe <MapSprite2+0x6e>
    9f56:	d6 d7       	rcall	.+4012   	; 0xaf04 <drawplayer2+0x34>
    9f58:	d8 d9       	rcall	.-3152   	; 0x930a <ReadButtons+0x4c>
    9f5a:	da db       	rcall	.-2124   	; 0x9710 <TriggerFx+0xc>
    9f5c:	dc dd       	rcall	.-1096   	; 0x9b16 <ProcessMusic+0x302>
    9f5e:	de df       	rcall	.-68     	; 0x9f1c <waves+0x11c>
    9f60:	e0 e1       	ldi	r30, 0x10	; 16
    9f62:	e2 e3       	ldi	r30, 0x32	; 50
    9f64:	e4 e5       	ldi	r30, 0x54	; 84
    9f66:	e6 e7       	ldi	r30, 0x76	; 118
    9f68:	e8 e9       	ldi	r30, 0x98	; 152
    9f6a:	ea eb       	ldi	r30, 0xBA	; 186
    9f6c:	ec ed       	ldi	r30, 0xDC	; 220
    9f6e:	ee ef       	ldi	r30, 0xFE	; 254
    9f70:	f0 f1       	brcs	.+124    	; 0x9fee <waves+0x1ee>
    9f72:	f2 f3       	brmi	.-4      	; 0x9f70 <waves+0x170>
    9f74:	f4 f5       	brge	.+124    	; 0x9ff2 <waves+0x1f2>
    9f76:	f6 f7       	brtc	.-4      	; 0x9f74 <waves+0x174>
    9f78:	f8 f9       	.word	0xf9f8	; ????
    9f7a:	fa fb       	.word	0xfbfa	; ????
    9f7c:	fc fd       	.word	0xfdfc	; ????
    9f7e:	fe ff       	.word	0xfffe	; ????
    9f80:	00 01       	movw	r0, r0
    9f82:	02 03       	mulsu	r16, r18
    9f84:	04 05       	cpc	r16, r4
    9f86:	06 07       	cpc	r16, r22
    9f88:	08 09       	sbc	r16, r8
    9f8a:	0a 0b       	sbc	r16, r26
    9f8c:	0c 0d       	add	r16, r12
    9f8e:	0e 0f       	add	r16, r30
    9f90:	10 11       	cpse	r17, r0
    9f92:	12 13       	cpse	r17, r18
    9f94:	14 15       	cp	r17, r4
    9f96:	16 17       	cp	r17, r22
    9f98:	18 19       	sub	r17, r8
    9f9a:	1a 1b       	sub	r17, r26
    9f9c:	1c 1d       	adc	r17, r12
    9f9e:	1e 1f       	adc	r17, r30
    9fa0:	20 21       	and	r18, r0
    9fa2:	22 23       	and	r18, r18
    9fa4:	24 25       	eor	r18, r4
    9fa6:	26 27       	eor	r18, r22
    9fa8:	28 29       	or	r18, r8
    9faa:	2a 2b       	or	r18, r26
    9fac:	2c 2d       	mov	r18, r12
    9fae:	2e 2f       	mov	r18, r30
    9fb0:	30 31       	cpi	r19, 0x10	; 16
    9fb2:	32 33       	cpi	r19, 0x32	; 50
    9fb4:	34 35       	cpi	r19, 0x54	; 84
    9fb6:	36 37       	cpi	r19, 0x76	; 118
    9fb8:	38 39       	cpi	r19, 0x98	; 152
    9fba:	3a 3b       	cpi	r19, 0xBA	; 186
    9fbc:	3c 3d       	cpi	r19, 0xDC	; 220
    9fbe:	3e 3f       	cpi	r19, 0xFE	; 254
    9fc0:	40 41       	sbci	r20, 0x10	; 16
    9fc2:	42 43       	sbci	r20, 0x32	; 50
    9fc4:	44 45       	sbci	r20, 0x54	; 84
    9fc6:	46 47       	sbci	r20, 0x76	; 118
    9fc8:	48 49       	sbci	r20, 0x98	; 152
    9fca:	4a 4b       	sbci	r20, 0xBA	; 186
    9fcc:	4c 4d       	sbci	r20, 0xDC	; 220
    9fce:	4e 4f       	sbci	r20, 0xFE	; 254
    9fd0:	50 51       	subi	r21, 0x10	; 16
    9fd2:	52 53       	subi	r21, 0x32	; 50
    9fd4:	54 55       	subi	r21, 0x54	; 84
    9fd6:	56 57       	subi	r21, 0x76	; 118
    9fd8:	58 59       	subi	r21, 0x98	; 152
    9fda:	5a 5b       	subi	r21, 0xBA	; 186
    9fdc:	5c 5d       	subi	r21, 0xDC	; 220
    9fde:	5e 5f       	subi	r21, 0xFE	; 254
    9fe0:	60 61       	ori	r22, 0x10	; 16
    9fe2:	62 63       	ori	r22, 0x32	; 50
    9fe4:	64 65       	ori	r22, 0x54	; 84
    9fe6:	66 67       	ori	r22, 0x76	; 118
    9fe8:	68 69       	ori	r22, 0x98	; 152
    9fea:	6a 6b       	ori	r22, 0xBA	; 186
    9fec:	6c 6d       	ori	r22, 0xDC	; 220
    9fee:	6e 6f       	ori	r22, 0xFE	; 254
    9ff0:	70 71       	andi	r23, 0x10	; 16
    9ff2:	72 73       	andi	r23, 0x32	; 50
    9ff4:	74 75       	andi	r23, 0x54	; 84
    9ff6:	76 77       	andi	r23, 0x76	; 118
    9ff8:	78 79       	andi	r23, 0x98	; 152
    9ffa:	7a 7b       	andi	r23, 0xBA	; 186
    9ffc:	7c 7d       	andi	r23, 0xDC	; 220
    9ffe:	7e 7f       	andi	r23, 0xFE	; 254
    a000:	00 02       	muls	r16, r16
    a002:	04 06       	cpc	r0, r20
    a004:	08 0a       	sbc	r0, r24
    a006:	0c 0e       	add	r0, r28
    a008:	10 12       	cpse	r1, r16
    a00a:	14 16       	cp	r1, r20
    a00c:	18 1a       	sub	r1, r24
    a00e:	1c 1e       	adc	r1, r28
    a010:	20 22       	and	r2, r16
    a012:	24 26       	eor	r2, r20
    a014:	28 2a       	or	r2, r24
    a016:	2c 2e       	mov	r2, r28
    a018:	30 32       	cpi	r19, 0x20	; 32
    a01a:	34 36       	cpi	r19, 0x64	; 100
    a01c:	38 3a       	cpi	r19, 0xA8	; 168
    a01e:	3c 3e       	cpi	r19, 0xEC	; 236
    a020:	40 42       	sbci	r20, 0x20	; 32
    a022:	44 46       	sbci	r20, 0x64	; 100
    a024:	48 4a       	sbci	r20, 0xA8	; 168
    a026:	4c 4e       	sbci	r20, 0xEC	; 236
    a028:	50 52       	subi	r21, 0x20	; 32
    a02a:	54 56       	subi	r21, 0x64	; 100
    a02c:	58 5a       	subi	r21, 0xA8	; 168
    a02e:	5c 5e       	subi	r21, 0xEC	; 236
    a030:	60 62       	ori	r22, 0x20	; 32
    a032:	64 66       	ori	r22, 0x64	; 100
    a034:	68 6a       	ori	r22, 0xA8	; 168
    a036:	6c 6e       	ori	r22, 0xEC	; 236
    a038:	70 72       	andi	r23, 0x20	; 32
    a03a:	74 76       	andi	r23, 0x64	; 100
    a03c:	78 7a       	andi	r23, 0xA8	; 168
    a03e:	7c 7e       	andi	r23, 0xEC	; 236
    a040:	7f 7d       	andi	r23, 0xDF	; 223
    a042:	7b 79       	andi	r23, 0x9B	; 155
    a044:	77 75       	andi	r23, 0x57	; 87
    a046:	73 71       	andi	r23, 0x13	; 19
    a048:	6f 6d       	ori	r22, 0xDF	; 223
    a04a:	6b 69       	ori	r22, 0x9B	; 155
    a04c:	67 65       	ori	r22, 0x57	; 87
    a04e:	63 61       	ori	r22, 0x13	; 19
    a050:	5f 5d       	subi	r21, 0xDF	; 223
    a052:	5b 59       	subi	r21, 0x9B	; 155
    a054:	57 55       	subi	r21, 0x57	; 87
    a056:	53 51       	subi	r21, 0x13	; 19
    a058:	4f 4d       	sbci	r20, 0xDF	; 223
    a05a:	4b 49       	sbci	r20, 0x9B	; 155
    a05c:	47 45       	sbci	r20, 0x57	; 87
    a05e:	43 41       	sbci	r20, 0x13	; 19
    a060:	3f 3d       	cpi	r19, 0xDF	; 223
    a062:	3b 39       	cpi	r19, 0x9B	; 155
    a064:	37 35       	cpi	r19, 0x57	; 87
    a066:	33 31       	cpi	r19, 0x13	; 19
    a068:	2f 2d       	mov	r18, r15
    a06a:	2b 29       	or	r18, r11
    a06c:	27 25       	eor	r18, r7
    a06e:	23 21       	and	r18, r3
    a070:	1f 1d       	adc	r17, r15
    a072:	1b 19       	sub	r17, r11
    a074:	17 15       	cp	r17, r7
    a076:	13 11       	cpse	r17, r3
    a078:	0f 0d       	add	r16, r15
    a07a:	0b 09       	sbc	r16, r11
    a07c:	07 05       	cpc	r16, r7
    a07e:	03 01       	movw	r0, r6
    a080:	ff fd       	.word	0xfdff	; ????
    a082:	fb f9       	.word	0xf9fb	; ????
    a084:	f7 f5       	brid	.+124    	; 0xa102 <waves+0x302>
    a086:	f3 f1       	brvs	.+124    	; 0xa104 <waves+0x304>
    a088:	ef ed       	ldi	r30, 0xDF	; 223
    a08a:	eb e9       	ldi	r30, 0x9B	; 155
    a08c:	e7 e5       	ldi	r30, 0x57	; 87
    a08e:	e3 e1       	ldi	r30, 0x13	; 19
    a090:	df dd       	rcall	.-1090   	; 0x9c50 <steptable+0x22>
    a092:	db d9       	rcall	.-3146   	; 0x944a <PatchCommand11+0x52>
    a094:	d7 d5       	rcall	.+2990   	; 0xac44 <DisplayLogo+0x14>
    a096:	d3 d1       	rcall	.+934    	; 0xa43e <waves+0x63e>
    a098:	cf cd       	rjmp	.-1122   	; 0x9c38 <steptable+0xa>
    a09a:	cb c9       	rjmp	.-3178   	; 0x9432 <PatchCommand11+0x3a>
    a09c:	c7 c5       	rjmp	.+2958   	; 0xac2c <WaitVsync+0x2a>
    a09e:	c3 c1       	rjmp	.+902    	; 0xa426 <waves+0x626>
    a0a0:	bf bd       	out	0x2f, r27	; 47
    a0a2:	bb b9       	out	0x0b, r27	; 11
    a0a4:	b7 b5       	in	r27, 0x27	; 39
    a0a6:	b3 b1       	in	r27, 0x03	; 3
    a0a8:	af ad       	ldd	r26, Y+63	; 0x3f
    a0aa:	ab a9       	ldd	r26, Y+51	; 0x33
    a0ac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    a0ae:	a3 a1       	ldd	r26, Z+35	; 0x23
    a0b0:	9f 9d       	mul	r25, r15
    a0b2:	9b 99       	sbic	0x13, 3	; 19
    a0b4:	97 95       	ror	r25
    a0b6:	93 91       	.word	0x9193	; ????
    a0b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    a0ba:	8b 89       	ldd	r24, Y+19	; 0x13
    a0bc:	87 85       	ldd	r24, Z+15	; 0x0f
    a0be:	83 81       	ldd	r24, Z+3	; 0x03
    a0c0:	80 82       	st	Z, r8
    a0c2:	84 86       	std	Z+12, r8	; 0x0c
    a0c4:	88 8a       	std	Y+16, r8	; 0x10
    a0c6:	8c 8e       	std	Y+28, r8	; 0x1c
    a0c8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8794>
    a0cc:	98 9a       	sbi	0x13, 0	; 19
    a0ce:	9c 9e       	mul	r9, r28
    a0d0:	a0 a2       	std	Z+32, r10	; 0x20
    a0d2:	a4 a6       	std	Z+44, r10	; 0x2c
    a0d4:	a8 aa       	std	Y+48, r10	; 0x30
    a0d6:	ac ae       	std	Y+60, r10	; 0x3c
    a0d8:	b0 b2       	in	r11, 0x10	; 16
    a0da:	b4 b6       	in	r11, 0x34	; 52
    a0dc:	b8 ba       	out	0x18, r11	; 24
    a0de:	bc be       	out	0x3c, r11	; 60
    a0e0:	c0 c2       	rjmp	.+1408   	; 0xa662 <waves+0x862>
    a0e2:	c4 c6       	rjmp	.+3464   	; 0xae6c <drawplayer+0x108>
    a0e4:	c8 ca       	rjmp	.-2672   	; 0x9676 <TriggerCommon+0x74>
    a0e6:	cc ce       	rjmp	.-616    	; 0x9e80 <waves+0x80>
    a0e8:	d0 d2       	rcall	.+1440   	; 0xa68a <waves+0x88a>
    a0ea:	d4 d6       	rcall	.+3496   	; 0xae94 <drawplayer+0x130>
    a0ec:	d8 da       	rcall	.-2640   	; 0x969e <TriggerCommon+0x9c>
    a0ee:	dc de       	rcall	.-584    	; 0x9ea8 <waves+0xa8>
    a0f0:	e0 e2       	ldi	r30, 0x20	; 32
    a0f2:	e4 e6       	ldi	r30, 0x64	; 100
    a0f4:	e8 ea       	ldi	r30, 0xA8	; 168
    a0f6:	ec ee       	ldi	r30, 0xEC	; 236
    a0f8:	f0 f2       	brcs	.-68     	; 0xa0b6 <waves+0x2b6>
    a0fa:	f4 f6       	brge	.-68     	; 0xa0b8 <waves+0x2b8>
    a0fc:	f8 fa       	.word	0xfaf8	; ????
    a0fe:	fc fe       	.word	0xfefc	; ????
    a100:	7f 7f       	andi	r23, 0xFF	; 255
    a102:	7f 7f       	andi	r23, 0xFF	; 255
    a104:	7f 7f       	andi	r23, 0xFF	; 255
    a106:	7f 7f       	andi	r23, 0xFF	; 255
    a108:	7f 7f       	andi	r23, 0xFF	; 255
    a10a:	7f 7f       	andi	r23, 0xFF	; 255
    a10c:	7f 7f       	andi	r23, 0xFF	; 255
    a10e:	7f 7f       	andi	r23, 0xFF	; 255
    a110:	7f 7f       	andi	r23, 0xFF	; 255
    a112:	7f 7f       	andi	r23, 0xFF	; 255
    a114:	7f 7f       	andi	r23, 0xFF	; 255
    a116:	7f 7f       	andi	r23, 0xFF	; 255
    a118:	7f 7f       	andi	r23, 0xFF	; 255
    a11a:	7f 7f       	andi	r23, 0xFF	; 255
    a11c:	7f 7f       	andi	r23, 0xFF	; 255
    a11e:	7f 7f       	andi	r23, 0xFF	; 255
    a120:	7f 7f       	andi	r23, 0xFF	; 255
    a122:	7f 7f       	andi	r23, 0xFF	; 255
    a124:	7f 7f       	andi	r23, 0xFF	; 255
    a126:	7f 7f       	andi	r23, 0xFF	; 255
    a128:	7f 7f       	andi	r23, 0xFF	; 255
    a12a:	7f 7f       	andi	r23, 0xFF	; 255
    a12c:	7f 7f       	andi	r23, 0xFF	; 255
    a12e:	7f 7f       	andi	r23, 0xFF	; 255
    a130:	7f 7f       	andi	r23, 0xFF	; 255
    a132:	7f 7f       	andi	r23, 0xFF	; 255
    a134:	7f 7f       	andi	r23, 0xFF	; 255
    a136:	7f 7f       	andi	r23, 0xFF	; 255
    a138:	7f 7f       	andi	r23, 0xFF	; 255
    a13a:	7f 7f       	andi	r23, 0xFF	; 255
    a13c:	7f 7f       	andi	r23, 0xFF	; 255
    a13e:	7f 7f       	andi	r23, 0xFF	; 255
    a140:	80 80       	ld	r8, Z
    a142:	80 80       	ld	r8, Z
    a144:	80 80       	ld	r8, Z
    a146:	80 80       	ld	r8, Z
    a148:	80 80       	ld	r8, Z
    a14a:	80 80       	ld	r8, Z
    a14c:	80 80       	ld	r8, Z
    a14e:	80 80       	ld	r8, Z
    a150:	80 80       	ld	r8, Z
    a152:	80 80       	ld	r8, Z
    a154:	80 80       	ld	r8, Z
    a156:	80 80       	ld	r8, Z
    a158:	80 80       	ld	r8, Z
    a15a:	80 80       	ld	r8, Z
    a15c:	80 80       	ld	r8, Z
    a15e:	80 80       	ld	r8, Z
    a160:	80 80       	ld	r8, Z
    a162:	80 80       	ld	r8, Z
    a164:	80 80       	ld	r8, Z
    a166:	80 80       	ld	r8, Z
    a168:	80 80       	ld	r8, Z
    a16a:	80 80       	ld	r8, Z
    a16c:	80 80       	ld	r8, Z
    a16e:	80 80       	ld	r8, Z
    a170:	80 80       	ld	r8, Z
    a172:	80 80       	ld	r8, Z
    a174:	80 80       	ld	r8, Z
    a176:	80 80       	ld	r8, Z
    a178:	80 80       	ld	r8, Z
    a17a:	80 80       	ld	r8, Z
    a17c:	80 80       	ld	r8, Z
    a17e:	80 80       	ld	r8, Z
    a180:	80 80       	ld	r8, Z
    a182:	80 80       	ld	r8, Z
    a184:	80 80       	ld	r8, Z
    a186:	80 80       	ld	r8, Z
    a188:	80 80       	ld	r8, Z
    a18a:	80 80       	ld	r8, Z
    a18c:	80 80       	ld	r8, Z
    a18e:	80 80       	ld	r8, Z
    a190:	80 80       	ld	r8, Z
    a192:	80 80       	ld	r8, Z
    a194:	80 80       	ld	r8, Z
    a196:	80 80       	ld	r8, Z
    a198:	80 80       	ld	r8, Z
    a19a:	80 80       	ld	r8, Z
    a19c:	80 80       	ld	r8, Z
    a19e:	80 80       	ld	r8, Z
    a1a0:	80 80       	ld	r8, Z
    a1a2:	80 80       	ld	r8, Z
    a1a4:	80 80       	ld	r8, Z
    a1a6:	80 80       	ld	r8, Z
    a1a8:	80 80       	ld	r8, Z
    a1aa:	80 80       	ld	r8, Z
    a1ac:	80 80       	ld	r8, Z
    a1ae:	80 80       	ld	r8, Z
    a1b0:	80 80       	ld	r8, Z
    a1b2:	80 80       	ld	r8, Z
    a1b4:	80 80       	ld	r8, Z
    a1b6:	80 80       	ld	r8, Z
    a1b8:	80 80       	ld	r8, Z
    a1ba:	80 80       	ld	r8, Z
    a1bc:	80 80       	ld	r8, Z
    a1be:	80 80       	ld	r8, Z
    a1c0:	80 80       	ld	r8, Z
    a1c2:	80 80       	ld	r8, Z
    a1c4:	80 80       	ld	r8, Z
    a1c6:	80 80       	ld	r8, Z
    a1c8:	80 80       	ld	r8, Z
    a1ca:	80 80       	ld	r8, Z
    a1cc:	80 80       	ld	r8, Z
    a1ce:	80 80       	ld	r8, Z
    a1d0:	80 80       	ld	r8, Z
    a1d2:	80 80       	ld	r8, Z
    a1d4:	80 80       	ld	r8, Z
    a1d6:	80 80       	ld	r8, Z
    a1d8:	80 80       	ld	r8, Z
    a1da:	80 80       	ld	r8, Z
    a1dc:	80 80       	ld	r8, Z
    a1de:	80 80       	ld	r8, Z
    a1e0:	80 80       	ld	r8, Z
    a1e2:	80 80       	ld	r8, Z
    a1e4:	80 80       	ld	r8, Z
    a1e6:	80 80       	ld	r8, Z
    a1e8:	80 80       	ld	r8, Z
    a1ea:	80 80       	ld	r8, Z
    a1ec:	80 80       	ld	r8, Z
    a1ee:	80 80       	ld	r8, Z
    a1f0:	80 80       	ld	r8, Z
    a1f2:	80 80       	ld	r8, Z
    a1f4:	80 80       	ld	r8, Z
    a1f6:	80 80       	ld	r8, Z
    a1f8:	80 80       	ld	r8, Z
    a1fa:	80 80       	ld	r8, Z
    a1fc:	80 80       	ld	r8, Z
    a1fe:	80 80       	ld	r8, Z
    a200:	7f 7f       	andi	r23, 0xFF	; 255
    a202:	7f 7f       	andi	r23, 0xFF	; 255
    a204:	7f 7f       	andi	r23, 0xFF	; 255
    a206:	7f 7f       	andi	r23, 0xFF	; 255
    a208:	7f 7f       	andi	r23, 0xFF	; 255
    a20a:	7f 7f       	andi	r23, 0xFF	; 255
    a20c:	7f 7f       	andi	r23, 0xFF	; 255
    a20e:	7f 7f       	andi	r23, 0xFF	; 255
    a210:	7f 7f       	andi	r23, 0xFF	; 255
    a212:	7f 7f       	andi	r23, 0xFF	; 255
    a214:	7f 7f       	andi	r23, 0xFF	; 255
    a216:	7f 7f       	andi	r23, 0xFF	; 255
    a218:	7f 7f       	andi	r23, 0xFF	; 255
    a21a:	7f 7f       	andi	r23, 0xFF	; 255
    a21c:	7f 7f       	andi	r23, 0xFF	; 255
    a21e:	7f 7f       	andi	r23, 0xFF	; 255
    a220:	7f 7f       	andi	r23, 0xFF	; 255
    a222:	7f 7f       	andi	r23, 0xFF	; 255
    a224:	7f 7f       	andi	r23, 0xFF	; 255
    a226:	7f 7f       	andi	r23, 0xFF	; 255
    a228:	7f 7f       	andi	r23, 0xFF	; 255
    a22a:	7f 7f       	andi	r23, 0xFF	; 255
    a22c:	7f 7f       	andi	r23, 0xFF	; 255
    a22e:	7f 7f       	andi	r23, 0xFF	; 255
    a230:	7f 7f       	andi	r23, 0xFF	; 255
    a232:	7f 7f       	andi	r23, 0xFF	; 255
    a234:	7f 7f       	andi	r23, 0xFF	; 255
    a236:	7f 7f       	andi	r23, 0xFF	; 255
    a238:	7f 7f       	andi	r23, 0xFF	; 255
    a23a:	7f 7f       	andi	r23, 0xFF	; 255
    a23c:	7f 7f       	andi	r23, 0xFF	; 255
    a23e:	7f 7f       	andi	r23, 0xFF	; 255
    a240:	7f 7f       	andi	r23, 0xFF	; 255
    a242:	7f 7f       	andi	r23, 0xFF	; 255
    a244:	7f 7f       	andi	r23, 0xFF	; 255
    a246:	7f 7f       	andi	r23, 0xFF	; 255
    a248:	7f 7f       	andi	r23, 0xFF	; 255
    a24a:	7f 7f       	andi	r23, 0xFF	; 255
    a24c:	7f 7f       	andi	r23, 0xFF	; 255
    a24e:	7f 7f       	andi	r23, 0xFF	; 255
    a250:	7f 7f       	andi	r23, 0xFF	; 255
    a252:	7f 7f       	andi	r23, 0xFF	; 255
    a254:	7f 7f       	andi	r23, 0xFF	; 255
    a256:	7f 7f       	andi	r23, 0xFF	; 255
    a258:	7f 7f       	andi	r23, 0xFF	; 255
    a25a:	7f 7f       	andi	r23, 0xFF	; 255
    a25c:	7f 7f       	andi	r23, 0xFF	; 255
    a25e:	7f 7f       	andi	r23, 0xFF	; 255
    a260:	7f 7f       	andi	r23, 0xFF	; 255
    a262:	7f 7f       	andi	r23, 0xFF	; 255
    a264:	7f 7f       	andi	r23, 0xFF	; 255
    a266:	7f 7f       	andi	r23, 0xFF	; 255
    a268:	7f 7f       	andi	r23, 0xFF	; 255
    a26a:	7f 7f       	andi	r23, 0xFF	; 255
    a26c:	7f 7f       	andi	r23, 0xFF	; 255
    a26e:	7f 7f       	andi	r23, 0xFF	; 255
    a270:	7f 7f       	andi	r23, 0xFF	; 255
    a272:	7f 7f       	andi	r23, 0xFF	; 255
    a274:	7f 7f       	andi	r23, 0xFF	; 255
    a276:	7f 7f       	andi	r23, 0xFF	; 255
    a278:	7f 7f       	andi	r23, 0xFF	; 255
    a27a:	7f 7f       	andi	r23, 0xFF	; 255
    a27c:	7f 7f       	andi	r23, 0xFF	; 255
    a27e:	7f 7f       	andi	r23, 0xFF	; 255
    a280:	80 80       	ld	r8, Z
    a282:	80 80       	ld	r8, Z
    a284:	80 80       	ld	r8, Z
    a286:	80 80       	ld	r8, Z
    a288:	80 80       	ld	r8, Z
    a28a:	80 80       	ld	r8, Z
    a28c:	80 80       	ld	r8, Z
    a28e:	80 80       	ld	r8, Z
    a290:	80 80       	ld	r8, Z
    a292:	80 80       	ld	r8, Z
    a294:	80 80       	ld	r8, Z
    a296:	80 80       	ld	r8, Z
    a298:	80 80       	ld	r8, Z
    a29a:	80 80       	ld	r8, Z
    a29c:	80 80       	ld	r8, Z
    a29e:	80 80       	ld	r8, Z
    a2a0:	80 80       	ld	r8, Z
    a2a2:	80 80       	ld	r8, Z
    a2a4:	80 80       	ld	r8, Z
    a2a6:	80 80       	ld	r8, Z
    a2a8:	80 80       	ld	r8, Z
    a2aa:	80 80       	ld	r8, Z
    a2ac:	80 80       	ld	r8, Z
    a2ae:	80 80       	ld	r8, Z
    a2b0:	80 80       	ld	r8, Z
    a2b2:	80 80       	ld	r8, Z
    a2b4:	80 80       	ld	r8, Z
    a2b6:	80 80       	ld	r8, Z
    a2b8:	80 80       	ld	r8, Z
    a2ba:	80 80       	ld	r8, Z
    a2bc:	80 80       	ld	r8, Z
    a2be:	80 80       	ld	r8, Z
    a2c0:	80 80       	ld	r8, Z
    a2c2:	80 80       	ld	r8, Z
    a2c4:	80 80       	ld	r8, Z
    a2c6:	80 80       	ld	r8, Z
    a2c8:	80 80       	ld	r8, Z
    a2ca:	80 80       	ld	r8, Z
    a2cc:	80 80       	ld	r8, Z
    a2ce:	80 80       	ld	r8, Z
    a2d0:	80 80       	ld	r8, Z
    a2d2:	80 80       	ld	r8, Z
    a2d4:	80 80       	ld	r8, Z
    a2d6:	80 80       	ld	r8, Z
    a2d8:	80 80       	ld	r8, Z
    a2da:	80 80       	ld	r8, Z
    a2dc:	80 80       	ld	r8, Z
    a2de:	80 80       	ld	r8, Z
    a2e0:	80 80       	ld	r8, Z
    a2e2:	80 80       	ld	r8, Z
    a2e4:	80 80       	ld	r8, Z
    a2e6:	80 80       	ld	r8, Z
    a2e8:	80 80       	ld	r8, Z
    a2ea:	80 80       	ld	r8, Z
    a2ec:	80 80       	ld	r8, Z
    a2ee:	80 80       	ld	r8, Z
    a2f0:	80 80       	ld	r8, Z
    a2f2:	80 80       	ld	r8, Z
    a2f4:	80 80       	ld	r8, Z
    a2f6:	80 80       	ld	r8, Z
    a2f8:	80 80       	ld	r8, Z
    a2fa:	80 80       	ld	r8, Z
    a2fc:	80 80       	ld	r8, Z
    a2fe:	80 80       	ld	r8, Z
    a300:	7f 7f       	andi	r23, 0xFF	; 255
    a302:	7f 7f       	andi	r23, 0xFF	; 255
    a304:	7f 7f       	andi	r23, 0xFF	; 255
    a306:	7f 7f       	andi	r23, 0xFF	; 255
    a308:	7f 7f       	andi	r23, 0xFF	; 255
    a30a:	7f 7f       	andi	r23, 0xFF	; 255
    a30c:	7f 7f       	andi	r23, 0xFF	; 255
    a30e:	7f 7f       	andi	r23, 0xFF	; 255
    a310:	7f 7f       	andi	r23, 0xFF	; 255
    a312:	7f 7f       	andi	r23, 0xFF	; 255
    a314:	7f 7f       	andi	r23, 0xFF	; 255
    a316:	7f 7f       	andi	r23, 0xFF	; 255
    a318:	7f 7f       	andi	r23, 0xFF	; 255
    a31a:	7f 7f       	andi	r23, 0xFF	; 255
    a31c:	7f 7f       	andi	r23, 0xFF	; 255
    a31e:	7f 7f       	andi	r23, 0xFF	; 255
    a320:	7f 7f       	andi	r23, 0xFF	; 255
    a322:	7f 7f       	andi	r23, 0xFF	; 255
    a324:	7f 7f       	andi	r23, 0xFF	; 255
    a326:	7f 7f       	andi	r23, 0xFF	; 255
    a328:	7f 7f       	andi	r23, 0xFF	; 255
    a32a:	7f 7f       	andi	r23, 0xFF	; 255
    a32c:	7f 7f       	andi	r23, 0xFF	; 255
    a32e:	7f 7f       	andi	r23, 0xFF	; 255
    a330:	7f 7f       	andi	r23, 0xFF	; 255
    a332:	7f 7f       	andi	r23, 0xFF	; 255
    a334:	7f 7f       	andi	r23, 0xFF	; 255
    a336:	7f 7f       	andi	r23, 0xFF	; 255
    a338:	7f 7f       	andi	r23, 0xFF	; 255
    a33a:	7f 7f       	andi	r23, 0xFF	; 255
    a33c:	7f 7f       	andi	r23, 0xFF	; 255
    a33e:	7f 7f       	andi	r23, 0xFF	; 255
    a340:	7f 7f       	andi	r23, 0xFF	; 255
    a342:	7f 7f       	andi	r23, 0xFF	; 255
    a344:	7f 7f       	andi	r23, 0xFF	; 255
    a346:	7f 7f       	andi	r23, 0xFF	; 255
    a348:	7f 7f       	andi	r23, 0xFF	; 255
    a34a:	7f 7f       	andi	r23, 0xFF	; 255
    a34c:	7f 7f       	andi	r23, 0xFF	; 255
    a34e:	7f 7f       	andi	r23, 0xFF	; 255
    a350:	7f 7f       	andi	r23, 0xFF	; 255
    a352:	7f 7f       	andi	r23, 0xFF	; 255
    a354:	7f 7f       	andi	r23, 0xFF	; 255
    a356:	7f 7f       	andi	r23, 0xFF	; 255
    a358:	7f 7f       	andi	r23, 0xFF	; 255
    a35a:	7f 7f       	andi	r23, 0xFF	; 255
    a35c:	7f 7f       	andi	r23, 0xFF	; 255
    a35e:	7f 7f       	andi	r23, 0xFF	; 255
    a360:	7f 7f       	andi	r23, 0xFF	; 255
    a362:	7f 7f       	andi	r23, 0xFF	; 255
    a364:	7f 7f       	andi	r23, 0xFF	; 255
    a366:	7f 7f       	andi	r23, 0xFF	; 255
    a368:	7f 7f       	andi	r23, 0xFF	; 255
    a36a:	7f 7f       	andi	r23, 0xFF	; 255
    a36c:	7f 7f       	andi	r23, 0xFF	; 255
    a36e:	7f 7f       	andi	r23, 0xFF	; 255
    a370:	7f 7f       	andi	r23, 0xFF	; 255
    a372:	7f 7f       	andi	r23, 0xFF	; 255
    a374:	7f 7f       	andi	r23, 0xFF	; 255
    a376:	7f 7f       	andi	r23, 0xFF	; 255
    a378:	7f 7f       	andi	r23, 0xFF	; 255
    a37a:	7f 7f       	andi	r23, 0xFF	; 255
    a37c:	7f 7f       	andi	r23, 0xFF	; 255
    a37e:	7f 7f       	andi	r23, 0xFF	; 255
    a380:	7f 7f       	andi	r23, 0xFF	; 255
    a382:	7f 7f       	andi	r23, 0xFF	; 255
    a384:	7f 7f       	andi	r23, 0xFF	; 255
    a386:	7f 7f       	andi	r23, 0xFF	; 255
    a388:	7f 7f       	andi	r23, 0xFF	; 255
    a38a:	7f 7f       	andi	r23, 0xFF	; 255
    a38c:	7f 7f       	andi	r23, 0xFF	; 255
    a38e:	7f 7f       	andi	r23, 0xFF	; 255
    a390:	7f 7f       	andi	r23, 0xFF	; 255
    a392:	7f 7f       	andi	r23, 0xFF	; 255
    a394:	7f 7f       	andi	r23, 0xFF	; 255
    a396:	7f 7f       	andi	r23, 0xFF	; 255
    a398:	7f 7f       	andi	r23, 0xFF	; 255
    a39a:	7f 7f       	andi	r23, 0xFF	; 255
    a39c:	7f 7f       	andi	r23, 0xFF	; 255
    a39e:	7f 7f       	andi	r23, 0xFF	; 255
    a3a0:	7f 7f       	andi	r23, 0xFF	; 255
    a3a2:	7f 7f       	andi	r23, 0xFF	; 255
    a3a4:	7f 7f       	andi	r23, 0xFF	; 255
    a3a6:	7f 7f       	andi	r23, 0xFF	; 255
    a3a8:	7f 7f       	andi	r23, 0xFF	; 255
    a3aa:	7f 7f       	andi	r23, 0xFF	; 255
    a3ac:	7f 7f       	andi	r23, 0xFF	; 255
    a3ae:	7f 7f       	andi	r23, 0xFF	; 255
    a3b0:	7f 7f       	andi	r23, 0xFF	; 255
    a3b2:	7f 7f       	andi	r23, 0xFF	; 255
    a3b4:	7f 7f       	andi	r23, 0xFF	; 255
    a3b6:	7f 7f       	andi	r23, 0xFF	; 255
    a3b8:	7f 7f       	andi	r23, 0xFF	; 255
    a3ba:	7f 7f       	andi	r23, 0xFF	; 255
    a3bc:	7f 7f       	andi	r23, 0xFF	; 255
    a3be:	7f 7f       	andi	r23, 0xFF	; 255
    a3c0:	80 80       	ld	r8, Z
    a3c2:	80 80       	ld	r8, Z
    a3c4:	80 80       	ld	r8, Z
    a3c6:	80 80       	ld	r8, Z
    a3c8:	80 80       	ld	r8, Z
    a3ca:	80 80       	ld	r8, Z
    a3cc:	80 80       	ld	r8, Z
    a3ce:	80 80       	ld	r8, Z
    a3d0:	80 80       	ld	r8, Z
    a3d2:	80 80       	ld	r8, Z
    a3d4:	80 80       	ld	r8, Z
    a3d6:	80 80       	ld	r8, Z
    a3d8:	80 80       	ld	r8, Z
    a3da:	80 80       	ld	r8, Z
    a3dc:	80 80       	ld	r8, Z
    a3de:	80 80       	ld	r8, Z
    a3e0:	80 80       	ld	r8, Z
    a3e2:	80 80       	ld	r8, Z
    a3e4:	80 80       	ld	r8, Z
    a3e6:	80 80       	ld	r8, Z
    a3e8:	80 80       	ld	r8, Z
    a3ea:	80 80       	ld	r8, Z
    a3ec:	80 80       	ld	r8, Z
    a3ee:	80 80       	ld	r8, Z
    a3f0:	80 80       	ld	r8, Z
    a3f2:	80 80       	ld	r8, Z
    a3f4:	80 80       	ld	r8, Z
    a3f6:	80 80       	ld	r8, Z
    a3f8:	80 80       	ld	r8, Z
    a3fa:	80 80       	ld	r8, Z
    a3fc:	80 80       	ld	r8, Z
    a3fe:	80 80       	ld	r8, Z
    a400:	03 09       	sbc	r16, r3
    a402:	13 1e       	adc	r1, r19
    a404:	28 31       	cpi	r18, 0x18	; 24
    a406:	3a 40       	sbci	r19, 0x0A	; 10
    a408:	46 4c       	sbci	r20, 0xC6	; 198
    a40a:	50 54       	subi	r21, 0x40	; 64
    a40c:	58 5b       	subi	r21, 0xB8	; 184
    a40e:	5e 61       	ori	r21, 0x1E	; 30
    a410:	63 65       	ori	r22, 0x53	; 83
    a412:	67 69       	ori	r22, 0x97	; 151
    a414:	6b 6c       	ori	r22, 0xCB	; 203
    a416:	6e 6f       	ori	r22, 0xFE	; 254
    a418:	70 71       	andi	r23, 0x10	; 16
    a41a:	72 73       	andi	r23, 0x32	; 50
    a41c:	74 75       	andi	r23, 0x54	; 84
    a41e:	76 77       	andi	r23, 0x76	; 118
    a420:	77 78       	andi	r23, 0x87	; 135
    a422:	79 79       	andi	r23, 0x99	; 153
    a424:	7a 7a       	andi	r23, 0xAA	; 170
    a426:	7b 7b       	andi	r23, 0xBB	; 187
    a428:	7c 7c       	andi	r23, 0xCC	; 204
    a42a:	7c 7d       	andi	r23, 0xDC	; 220
    a42c:	7d 7d       	andi	r23, 0xDD	; 221
    a42e:	7e 7e       	andi	r23, 0xEE	; 238
    a430:	7e 7e       	andi	r23, 0xEE	; 238
    a432:	7f 7f       	andi	r23, 0xFF	; 255
    a434:	7f 7f       	andi	r23, 0xFF	; 255
    a436:	7f 7f       	andi	r23, 0xFF	; 255
    a438:	7f 7f       	andi	r23, 0xFF	; 255
    a43a:	7f 7f       	andi	r23, 0xFF	; 255
    a43c:	7f 7f       	andi	r23, 0xFF	; 255
    a43e:	7f 7f       	andi	r23, 0xFF	; 255
    a440:	7f 7f       	andi	r23, 0xFF	; 255
    a442:	7f 7f       	andi	r23, 0xFF	; 255
    a444:	7f 7f       	andi	r23, 0xFF	; 255
    a446:	7f 7f       	andi	r23, 0xFF	; 255
    a448:	7f 7f       	andi	r23, 0xFF	; 255
    a44a:	7f 7f       	andi	r23, 0xFF	; 255
    a44c:	7f 7e       	andi	r23, 0xEF	; 239
    a44e:	7e 7e       	andi	r23, 0xEE	; 238
    a450:	7e 7d       	andi	r23, 0xDE	; 222
    a452:	7d 7d       	andi	r23, 0xDD	; 221
    a454:	7c 7c       	andi	r23, 0xCC	; 204
    a456:	7c 7b       	andi	r23, 0xBC	; 188
    a458:	7b 7a       	andi	r23, 0xAB	; 171
    a45a:	7a 79       	andi	r23, 0x9A	; 154
    a45c:	79 78       	andi	r23, 0x89	; 137
    a45e:	77 77       	andi	r23, 0x77	; 119
    a460:	76 75       	andi	r23, 0x56	; 86
    a462:	74 73       	andi	r23, 0x34	; 52
    a464:	72 71       	andi	r23, 0x12	; 18
    a466:	70 6f       	ori	r23, 0xF0	; 240
    a468:	6e 6c       	ori	r22, 0xCE	; 206
    a46a:	6b 69       	ori	r22, 0x9B	; 155
    a46c:	67 65       	ori	r22, 0x57	; 87
    a46e:	63 61       	ori	r22, 0x13	; 19
    a470:	5e 5b       	subi	r21, 0xBE	; 190
    a472:	58 54       	subi	r21, 0x48	; 72
    a474:	50 4c       	sbci	r21, 0xC0	; 192
    a476:	46 40       	sbci	r20, 0x06	; 6
    a478:	3a 31       	cpi	r19, 0x1A	; 26
    a47a:	28 1e       	adc	r2, r24
    a47c:	13 09       	sbc	r17, r3
    a47e:	03 00       	.word	0x0003	; ????
    a480:	c6 cc       	rjmp	.-1652   	; 0x9e0e <waves+0xe>
    a482:	d5 db       	rcall	.-2134   	; 0x9c2e <steptable>
    a484:	df e3       	ldi	r29, 0x3F	; 63
    a486:	e5 e7       	ldi	r30, 0x75	; 117
    a488:	e9 ea       	ldi	r30, 0xA9	; 169
    a48a:	eb ec       	ldi	r30, 0xCB	; 203
    a48c:	ed ee       	ldi	r30, 0xED	; 237
    a48e:	ef ef       	ldi	r30, 0xFF	; 255
    a490:	f0 f0       	brcs	.+60     	; 0xa4ce <waves+0x6ce>
    a492:	f0 f1       	brcs	.+124    	; 0xa510 <waves+0x710>
    a494:	f1 f1       	breq	.+124    	; 0xa512 <waves+0x712>
    a496:	f1 f2       	breq	.-68     	; 0xa454 <waves+0x654>
    a498:	f2 f2       	brmi	.-68     	; 0xa456 <waves+0x656>
    a49a:	f2 f2       	brmi	.-68     	; 0xa458 <waves+0x658>
    a49c:	f2 f2       	brmi	.-68     	; 0xa45a <waves+0x65a>
    a49e:	f2 f3       	brmi	.-4      	; 0xa49c <waves+0x69c>
    a4a0:	f3 f3       	brvs	.-4      	; 0xa49e <waves+0x69e>
    a4a2:	f3 f3       	brvs	.-4      	; 0xa4a0 <waves+0x6a0>
    a4a4:	f3 f3       	brvs	.-4      	; 0xa4a2 <waves+0x6a2>
    a4a6:	f3 f3       	brvs	.-4      	; 0xa4a4 <waves+0x6a4>
    a4a8:	f3 f3       	brvs	.-4      	; 0xa4a6 <waves+0x6a6>
    a4aa:	f3 f3       	brvs	.-4      	; 0xa4a8 <waves+0x6a8>
    a4ac:	f3 f3       	brvs	.-4      	; 0xa4aa <waves+0x6aa>
    a4ae:	f3 f3       	brvs	.-4      	; 0xa4ac <waves+0x6ac>
    a4b0:	f3 f3       	brvs	.-4      	; 0xa4ae <waves+0x6ae>
    a4b2:	f3 f3       	brvs	.-4      	; 0xa4b0 <waves+0x6b0>
    a4b4:	f3 f3       	brvs	.-4      	; 0xa4b2 <waves+0x6b2>
    a4b6:	f3 f3       	brvs	.-4      	; 0xa4b4 <waves+0x6b4>
    a4b8:	f3 f3       	brvs	.-4      	; 0xa4b6 <waves+0x6b6>
    a4ba:	f3 f3       	brvs	.-4      	; 0xa4b8 <waves+0x6b8>
    a4bc:	f3 f3       	brvs	.-4      	; 0xa4ba <waves+0x6ba>
    a4be:	f3 f3       	brvs	.-4      	; 0xa4bc <waves+0x6bc>
    a4c0:	f3 f3       	brvs	.-4      	; 0xa4be <waves+0x6be>
    a4c2:	f3 f3       	brvs	.-4      	; 0xa4c0 <waves+0x6c0>
    a4c4:	f3 f3       	brvs	.-4      	; 0xa4c2 <waves+0x6c2>
    a4c6:	f3 f3       	brvs	.-4      	; 0xa4c4 <waves+0x6c4>
    a4c8:	f3 f3       	brvs	.-4      	; 0xa4c6 <waves+0x6c6>
    a4ca:	f3 f3       	brvs	.-4      	; 0xa4c8 <waves+0x6c8>
    a4cc:	f3 f3       	brvs	.-4      	; 0xa4ca <waves+0x6ca>
    a4ce:	f3 f3       	brvs	.-4      	; 0xa4cc <waves+0x6cc>
    a4d0:	f3 f3       	brvs	.-4      	; 0xa4ce <waves+0x6ce>
    a4d2:	f3 f3       	brvs	.-4      	; 0xa4d0 <waves+0x6d0>
    a4d4:	f3 f3       	brvs	.-4      	; 0xa4d2 <waves+0x6d2>
    a4d6:	f3 f3       	brvs	.-4      	; 0xa4d4 <waves+0x6d4>
    a4d8:	f3 f3       	brvs	.-4      	; 0xa4d6 <waves+0x6d6>
    a4da:	f3 f3       	brvs	.-4      	; 0xa4d8 <waves+0x6d8>
    a4dc:	f3 f3       	brvs	.-4      	; 0xa4da <waves+0x6da>
    a4de:	f3 f3       	brvs	.-4      	; 0xa4dc <waves+0x6dc>
    a4e0:	f2 f2       	brmi	.-68     	; 0xa49e <waves+0x69e>
    a4e2:	f2 f2       	brmi	.-68     	; 0xa4a0 <waves+0x6a0>
    a4e4:	f2 f2       	brmi	.-68     	; 0xa4a2 <waves+0x6a2>
    a4e6:	f2 f2       	brmi	.-68     	; 0xa4a4 <waves+0x6a4>
    a4e8:	f1 f1       	breq	.+124    	; 0xa566 <waves+0x766>
    a4ea:	f1 f1       	breq	.+124    	; 0xa568 <waves+0x768>
    a4ec:	f0 f0       	brcs	.+60     	; 0xa52a <waves+0x72a>
    a4ee:	f0 ef       	ldi	r31, 0xF0	; 240
    a4f0:	ef ee       	ldi	r30, 0xEF	; 239
    a4f2:	ed ec       	ldi	r30, 0xCD	; 205
    a4f4:	eb ea       	ldi	r30, 0xAB	; 171
    a4f6:	e9 e7       	ldi	r30, 0x79	; 121
    a4f8:	e5 e3       	ldi	r30, 0x35	; 53
    a4fa:	df db       	rcall	.-2114   	; 0x9cba <steptable+0x8c>
    a4fc:	d5 cc       	rjmp	.-1622   	; 0x9ea8 <waves+0xa8>
    a4fe:	c6 00       	.word	0x00c6	; ????
    a500:	00 28       	or	r0, r0
    a502:	3d 42       	sbci	r19, 0x2D	; 45
    a504:	30 2d       	mov	r19, r0
    a506:	2c 2b       	or	r18, r28
    a508:	2c 2d       	mov	r18, r12
    a50a:	2e 2f       	mov	r18, r30
    a50c:	30 32       	cpi	r19, 0x20	; 32
    a50e:	33 35       	cpi	r19, 0x53	; 83
    a510:	37 39       	cpi	r19, 0x97	; 151
    a512:	3b 3d       	cpi	r19, 0xDB	; 219
    a514:	3f 41       	sbci	r19, 0x1F	; 31
    a516:	43 45       	sbci	r20, 0x53	; 83
    a518:	48 4a       	sbci	r20, 0xA8	; 168
    a51a:	4c 4e       	sbci	r20, 0xEC	; 236
    a51c:	50 53       	subi	r21, 0x30	; 48
    a51e:	55 57       	subi	r21, 0x75	; 117
    a520:	59 5b       	subi	r21, 0xB9	; 185
    a522:	5d 5f       	subi	r21, 0xFD	; 253
    a524:	61 63       	ori	r22, 0x31	; 49
    a526:	65 67       	ori	r22, 0x75	; 117
    a528:	69 6b       	ori	r22, 0xB9	; 185
    a52a:	6c 6e       	ori	r22, 0xEC	; 236
    a52c:	70 71       	andi	r23, 0x10	; 16
    a52e:	73 74       	andi	r23, 0x43	; 67
    a530:	75 77       	andi	r23, 0x75	; 117
    a532:	78 79       	andi	r23, 0x98	; 152
    a534:	7a 7b       	andi	r23, 0xBA	; 186
    a536:	7c 7d       	andi	r23, 0xDC	; 220
    a538:	7d 7e       	andi	r23, 0xED	; 237
    a53a:	7e 7f       	andi	r23, 0xFE	; 254
    a53c:	7f 7f       	andi	r23, 0xFF	; 255
    a53e:	7f 7f       	andi	r23, 0xFF	; 255
    a540:	7f 7f       	andi	r23, 0xFF	; 255
    a542:	7f 7f       	andi	r23, 0xFF	; 255
    a544:	7f 7f       	andi	r23, 0xFF	; 255
    a546:	7e 7e       	andi	r23, 0xEE	; 238
    a548:	7d 7d       	andi	r23, 0xDD	; 221
    a54a:	7c 7b       	andi	r23, 0xBC	; 188
    a54c:	7a 79       	andi	r23, 0x9A	; 154
    a54e:	78 77       	andi	r23, 0x78	; 120
    a550:	75 74       	andi	r23, 0x45	; 69
    a552:	73 71       	andi	r23, 0x13	; 19
    a554:	70 6e       	ori	r23, 0xE0	; 224
    a556:	6c 6b       	ori	r22, 0xBC	; 188
    a558:	69 67       	ori	r22, 0x79	; 121
    a55a:	65 63       	ori	r22, 0x35	; 53
    a55c:	61 5f       	subi	r22, 0xF1	; 241
    a55e:	5d 5b       	subi	r21, 0xBD	; 189
    a560:	59 57       	subi	r21, 0x79	; 121
    a562:	55 53       	subi	r21, 0x35	; 53
    a564:	50 4e       	sbci	r21, 0xE0	; 224
    a566:	4c 4a       	sbci	r20, 0xAC	; 172
    a568:	48 45       	sbci	r20, 0x58	; 88
    a56a:	43 41       	sbci	r20, 0x13	; 19
    a56c:	3f 3d       	cpi	r19, 0xDF	; 223
    a56e:	3b 39       	cpi	r19, 0x9B	; 155
    a570:	37 35       	cpi	r19, 0x57	; 87
    a572:	33 32       	cpi	r19, 0x23	; 35
    a574:	30 2f       	mov	r19, r16
    a576:	2e 2d       	mov	r18, r14
    a578:	2c 2b       	or	r18, r28
    a57a:	2c 2d       	mov	r18, r12
    a57c:	30 42       	sbci	r19, 0x20	; 32
    a57e:	3d 28       	or	r3, r13
    a580:	00 e9       	ldi	r16, 0x90	; 144
    a582:	e5 fe       	sbrs	r14, 5
    a584:	d4 d7       	rcall	.+4008   	; 0xb52e <printheadline+0x70>
    a586:	d7 d7       	rcall	.+4014   	; 0xb536 <printheadline+0x78>
    a588:	d6 d4       	rcall	.+2476   	; 0xaf36 <drawplayer2+0x66>
    a58a:	d2 d0       	rcall	.+420    	; 0xa730 <waves+0x930>
    a58c:	ce cc       	rjmp	.-1636   	; 0x9f2a <waves+0x12a>
    a58e:	ca c8       	rjmp	.-3692   	; 0x9724 <TriggerFx+0x20>
    a590:	c6 c3       	rjmp	.+1932   	; 0xad1e <ProcessFading+0x34>
    a592:	c1 bf       	out	0x31, r28	; 49
    a594:	bd ba       	out	0x1d, r11	; 29
    a596:	b8 b6       	in	r11, 0x38	; 56
    a598:	b4 b1       	in	r27, 0x04	; 4
    a59a:	af ad       	ldd	r26, Y+63	; 0x3f
    a59c:	ab a9       	ldd	r26, Y+51	; 0x33
    a59e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    a5a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    a5a2:	9f 9e       	mul	r9, r31
    a5a4:	9c 9a       	sbi	0x13, 4	; 19
    a5a6:	99 97       	sbiw	r26, 0x29	; 41
    a5a8:	95 94       	asr	r9
    a5aa:	93 91       	.word	0x9193	; ????
    a5ac:	90 8f       	std	Z+24, r25	; 0x18
    a5ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a5b0:	8b 8a       	std	Y+19, r8	; 0x13
    a5b2:	89 88       	ldd	r8, Y+17	; 0x11
    a5b4:	88 87       	std	Y+8, r24	; 0x08
    a5b6:	86 85       	ldd	r24, Z+14	; 0x0e
    a5b8:	85 84       	ldd	r8, Z+13	; 0x0d
    a5ba:	84 84       	ldd	r8, Z+12	; 0x0c
    a5bc:	83 83       	std	Z+3, r24	; 0x03
    a5be:	83 83       	std	Z+3, r24	; 0x03
    a5c0:	83 83       	std	Z+3, r24	; 0x03
    a5c2:	83 83       	std	Z+3, r24	; 0x03
    a5c4:	83 84       	ldd	r8, Z+11	; 0x0b
    a5c6:	84 84       	ldd	r8, Z+12	; 0x0c
    a5c8:	85 85       	ldd	r24, Z+13	; 0x0d
    a5ca:	86 87       	std	Z+14, r24	; 0x0e
    a5cc:	88 88       	ldd	r8, Y+16	; 0x10
    a5ce:	89 8a       	std	Y+17, r8	; 0x11
    a5d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    a5d2:	8d 8f       	std	Y+29, r24	; 0x1d
    a5d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8593>
    a5d8:	95 97       	sbiw	r26, 0x25	; 37
    a5da:	99 9a       	sbi	0x13, 1	; 19
    a5dc:	9c 9e       	mul	r9, r28
    a5de:	9f a1       	ldd	r25, Y+39	; 0x27
    a5e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    a5e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    a5e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    a5e6:	af b1       	in	r26, 0x0f	; 15
    a5e8:	b4 b6       	in	r11, 0x34	; 52
    a5ea:	b8 ba       	out	0x18, r11	; 24
    a5ec:	bd bf       	out	0x3d, r27	; 61
    a5ee:	c1 c3       	rjmp	.+1922   	; 0xad72 <drawplayer+0xe>
    a5f0:	c6 c8       	rjmp	.-3700   	; 0x977e <TriggerFx+0x7a>
    a5f2:	ca cc       	rjmp	.-1644   	; 0x9f88 <waves+0x188>
    a5f4:	ce d0       	rcall	.+412    	; 0xa792 <waves+0x992>
    a5f6:	d2 d4       	rcall	.+2468   	; 0xaf9c <drawplayer2+0xcc>
    a5f8:	d6 d7       	rcall	.+4012   	; 0xb5a6 <updatepoints+0x16>
    a5fa:	d7 d7       	rcall	.+4014   	; 0xb5aa <updatepoints+0x1a>
    a5fc:	d4 fe       	sbrs	r13, 4
    a5fe:	e5 e9       	ldi	r30, 0x95	; 149
    a600:	f9 f8       	.word	0xf8f9	; ????
    a602:	f9 f5       	brne	.+126    	; 0xa682 <waves+0x882>
    a604:	eb e1       	ldi	r30, 0x1B	; 27
    a606:	dd de       	rcall	.-582    	; 0xa3c2 <waves+0x5c2>
    a608:	e0 e2       	ldi	r30, 0x20	; 32
    a60a:	e4 e5       	ldi	r30, 0x54	; 84
    a60c:	e6 e5       	ldi	r30, 0x56	; 86
    a60e:	e4 e2       	ldi	r30, 0x24	; 36
    a610:	de d9       	rcall	.-3140   	; 0x99ce <ProcessMusic+0x1ba>
    a612:	d2 ca       	rjmp	.-2652   	; 0x9bb8 <ProcessMusic+0x3a4>
    a614:	c1 b7       	in	r28, 0x31	; 49
    a616:	ac a2       	std	Y+36, r10	; 0x24
    a618:	99 91       	ld	r25, Y+
    a61a:	8a 86       	std	Y+10, r8	; 0x0a
    a61c:	83 81       	ldd	r24, Z+3	; 0x03
    a61e:	80 80       	ld	r8, Z
    a620:	81 82       	std	Z+1, r8	; 0x01
    a622:	83 85       	ldd	r24, Z+11	; 0x0b
    a624:	86 88       	ldd	r8, Z+22	; 0x16
    a626:	8a 8c       	ldd	r8, Y+26	; 0x1a
    a628:	8d 8f       	std	Y+29, r24	; 0x1d
    a62a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8693>
    a62e:	96 97       	sbiw	r26, 0x26	; 38
    a630:	98 99       	sbic	0x13, 0	; 19
    a632:	9a 9b       	sbis	0x13, 2	; 19
    a634:	9b 9c       	mul	r9, r11
    a636:	9d 9d       	mul	r25, r13
    a638:	9d 9e       	mul	r9, r29
    a63a:	9e 9e       	mul	r9, r30
    a63c:	9f 9f       	mul	r25, r31
    a63e:	9f 9f       	mul	r25, r31
    a640:	9f 9f       	mul	r25, r31
    a642:	9f 9e       	mul	r9, r31
    a644:	9e 9e       	mul	r9, r30
    a646:	9d 9d       	mul	r25, r13
    a648:	9d 9c       	mul	r9, r13
    a64a:	9b 9b       	sbis	0x13, 3	; 19
    a64c:	9a 99       	sbic	0x13, 2	; 19
    a64e:	98 97       	sbiw	r26, 0x28	; 40
    a650:	96 95       	lsr	r25
    a652:	93 92       	.word	0x9293	; ????
    a654:	90 8f       	std	Z+24, r25	; 0x18
    a656:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a658:	8a 88       	ldd	r8, Y+18	; 0x12
    a65a:	86 85       	ldd	r24, Z+14	; 0x0e
    a65c:	83 82       	std	Z+3, r8	; 0x03
    a65e:	81 80       	ldd	r8, Z+1	; 0x01
    a660:	80 81       	ld	r24, Z
    a662:	83 86       	std	Z+11, r8	; 0x0b
    a664:	8a 91       	ld	r24, -Y
    a666:	99 a2       	std	Y+33, r9	; 0x21
    a668:	ac b7       	in	r26, 0x3c	; 60
    a66a:	c1 ca       	rjmp	.-2686   	; 0x9bee <set_note_waves+0x1e>
    a66c:	d2 d9       	rcall	.-3164   	; 0x9a12 <ProcessMusic+0x1fe>
    a66e:	de e2       	ldi	r29, 0x2E	; 46
    a670:	e4 e5       	ldi	r30, 0x54	; 84
    a672:	e6 e5       	ldi	r30, 0x56	; 86
    a674:	e4 e2       	ldi	r30, 0x24	; 36
    a676:	e0 de       	rcall	.-576    	; 0xa438 <waves+0x638>
    a678:	dd e1       	ldi	r29, 0x1D	; 29
    a67a:	eb f5       	brvc	.+122    	; 0xa6f6 <waves+0x8f6>
    a67c:	f9 f8       	.word	0xf8f9	; ????
    a67e:	f9 00       	.word	0x00f9	; ????
    a680:	07 08       	sbc	r0, r7
    a682:	07 0b       	sbc	r16, r23
    a684:	15 1f       	adc	r17, r21
    a686:	23 22       	and	r2, r19
    a688:	20 1e       	adc	r2, r16
    a68a:	1c 1b       	sub	r17, r28
    a68c:	1a 1b       	sub	r17, r26
    a68e:	1c 1e       	adc	r1, r28
    a690:	22 27       	eor	r18, r18
    a692:	2e 36       	cpi	r18, 0x6E	; 110
    a694:	3f 49       	sbci	r19, 0x9F	; 159
    a696:	54 5e       	subi	r21, 0xE4	; 228
    a698:	67 6f       	ori	r22, 0xF7	; 247
    a69a:	76 7a       	andi	r23, 0xA6	; 166
    a69c:	7e 7f       	andi	r23, 0xFE	; 254
    a69e:	7f 7f       	andi	r23, 0xFF	; 255
    a6a0:	7f 7e       	andi	r23, 0xEF	; 239
    a6a2:	7d 7b       	andi	r23, 0xBD	; 189
    a6a4:	7a 78       	andi	r23, 0x8A	; 138
    a6a6:	76 74       	andi	r23, 0x46	; 70
    a6a8:	73 71       	andi	r23, 0x13	; 19
    a6aa:	70 6e       	ori	r23, 0xE0	; 224
    a6ac:	6d 6b       	ori	r22, 0xBD	; 189
    a6ae:	6a 69       	ori	r22, 0x9A	; 154
    a6b0:	68 67       	ori	r22, 0x78	; 120
    a6b2:	66 65       	ori	r22, 0x56	; 86
    a6b4:	65 64       	ori	r22, 0x45	; 69
    a6b6:	64 63       	ori	r22, 0x34	; 52
    a6b8:	63 62       	ori	r22, 0x23	; 35
    a6ba:	62 62       	ori	r22, 0x22	; 34
    a6bc:	61 61       	ori	r22, 0x11	; 17
    a6be:	61 61       	ori	r22, 0x11	; 17
    a6c0:	61 61       	ori	r22, 0x11	; 17
    a6c2:	61 62       	ori	r22, 0x21	; 33
    a6c4:	62 62       	ori	r22, 0x22	; 34
    a6c6:	63 63       	ori	r22, 0x33	; 51
    a6c8:	63 64       	ori	r22, 0x43	; 67
    a6ca:	65 65       	ori	r22, 0x55	; 85
    a6cc:	66 67       	ori	r22, 0x76	; 118
    a6ce:	68 69       	ori	r22, 0x98	; 152
    a6d0:	6a 6b       	ori	r22, 0xBA	; 186
    a6d2:	6d 6e       	ori	r22, 0xED	; 237
    a6d4:	70 71       	andi	r23, 0x10	; 16
    a6d6:	73 74       	andi	r23, 0x43	; 67
    a6d8:	76 78       	andi	r23, 0x86	; 134
    a6da:	7a 7b       	andi	r23, 0xBA	; 186
    a6dc:	7d 7e       	andi	r23, 0xED	; 237
    a6de:	7f 7f       	andi	r23, 0xFF	; 255
    a6e0:	7f 7f       	andi	r23, 0xFF	; 255
    a6e2:	7e 7a       	andi	r23, 0xAE	; 174
    a6e4:	76 6f       	ori	r23, 0xF6	; 246
    a6e6:	67 5e       	subi	r22, 0xE7	; 231
    a6e8:	54 49       	sbci	r21, 0x94	; 148
    a6ea:	3f 36       	cpi	r19, 0x6F	; 111
    a6ec:	2e 27       	eor	r18, r30
    a6ee:	22 1e       	adc	r2, r18
    a6f0:	1c 1b       	sub	r17, r28
    a6f2:	1a 1b       	sub	r17, r26
    a6f4:	1c 1e       	adc	r1, r28
    a6f6:	20 22       	and	r2, r16
    a6f8:	23 1f       	adc	r18, r19
    a6fa:	15 0b       	sbc	r17, r21
    a6fc:	07 08       	sbc	r0, r7
    a6fe:	07 00       	.word	0x0007	; ????
    a700:	1f 31       	cpi	r17, 0x1F	; 31
    a702:	3d 44       	sbci	r19, 0x4D	; 77
    a704:	4e 53       	subi	r20, 0x3E	; 62
    a706:	54 56       	subi	r21, 0x64	; 100
    a708:	5a 5f       	subi	r21, 0xFA	; 250
    a70a:	64 69       	ori	r22, 0x94	; 148
    a70c:	6e 74       	andi	r22, 0x4E	; 78
    a70e:	76 79       	andi	r23, 0x96	; 150
    a710:	7c 7f       	andi	r23, 0xFC	; 252
    a712:	7f 7f       	andi	r23, 0xFF	; 255
    a714:	7f 7f       	andi	r23, 0xFF	; 255
    a716:	7f 7f       	andi	r23, 0xFF	; 255
    a718:	7f 7f       	andi	r23, 0xFF	; 255
    a71a:	7f 7f       	andi	r23, 0xFF	; 255
    a71c:	7f 7f       	andi	r23, 0xFF	; 255
    a71e:	7f 7f       	andi	r23, 0xFF	; 255
    a720:	7f 7f       	andi	r23, 0xFF	; 255
    a722:	7f 7f       	andi	r23, 0xFF	; 255
    a724:	7f 7f       	andi	r23, 0xFF	; 255
    a726:	7f 7f       	andi	r23, 0xFF	; 255
    a728:	7f 7f       	andi	r23, 0xFF	; 255
    a72a:	7f 7f       	andi	r23, 0xFF	; 255
    a72c:	7f 7f       	andi	r23, 0xFF	; 255
    a72e:	7f 7f       	andi	r23, 0xFF	; 255
    a730:	7f 7f       	andi	r23, 0xFF	; 255
    a732:	7f 7f       	andi	r23, 0xFF	; 255
    a734:	7f 7f       	andi	r23, 0xFF	; 255
    a736:	7f 7f       	andi	r23, 0xFF	; 255
    a738:	7f 7f       	andi	r23, 0xFF	; 255
    a73a:	7f 7f       	andi	r23, 0xFF	; 255
    a73c:	7f 7f       	andi	r23, 0xFF	; 255
    a73e:	7f 7f       	andi	r23, 0xFF	; 255
    a740:	7f 7f       	andi	r23, 0xFF	; 255
    a742:	7f 7f       	andi	r23, 0xFF	; 255
    a744:	7f 7f       	andi	r23, 0xFF	; 255
    a746:	7f 7f       	andi	r23, 0xFF	; 255
    a748:	7f 7f       	andi	r23, 0xFF	; 255
    a74a:	7f 7f       	andi	r23, 0xFF	; 255
    a74c:	7f 7f       	andi	r23, 0xFF	; 255
    a74e:	7f 7f       	andi	r23, 0xFF	; 255
    a750:	7f 7f       	andi	r23, 0xFF	; 255
    a752:	7f 7f       	andi	r23, 0xFF	; 255
    a754:	7f 7f       	andi	r23, 0xFF	; 255
    a756:	7f 7f       	andi	r23, 0xFF	; 255
    a758:	7f 7f       	andi	r23, 0xFF	; 255
    a75a:	7f 7f       	andi	r23, 0xFF	; 255
    a75c:	7f 7f       	andi	r23, 0xFF	; 255
    a75e:	7f 7f       	andi	r23, 0xFF	; 255
    a760:	7f 7f       	andi	r23, 0xFF	; 255
    a762:	7f 7f       	andi	r23, 0xFF	; 255
    a764:	7f 7f       	andi	r23, 0xFF	; 255
    a766:	7f 7f       	andi	r23, 0xFF	; 255
    a768:	7f 7f       	andi	r23, 0xFF	; 255
    a76a:	7f 7f       	andi	r23, 0xFF	; 255
    a76c:	7f 7f       	andi	r23, 0xFF	; 255
    a76e:	7f 7f       	andi	r23, 0xFF	; 255
    a770:	7f 7f       	andi	r23, 0xFF	; 255
    a772:	7f 7f       	andi	r23, 0xFF	; 255
    a774:	7f 7f       	andi	r23, 0xFF	; 255
    a776:	7f 7f       	andi	r23, 0xFF	; 255
    a778:	7f 7f       	andi	r23, 0xFF	; 255
    a77a:	7f 7c       	andi	r23, 0xCF	; 207
    a77c:	78 71       	andi	r23, 0x18	; 24
    a77e:	68 4c       	sbci	r22, 0xC8	; 200
    a780:	2c 1c       	adc	r2, r12
    a782:	12 0c       	add	r1, r2
    a784:	0a 0b       	sbc	r16, r26
    a786:	0a 05       	cpc	r16, r10
    a788:	fd f3       	brhs	.-2      	; 0xa788 <waves+0x988>
    a78a:	e9 df       	rcall	.-46     	; 0xa75e <waves+0x95e>
    a78c:	d4 ca       	rjmp	.-2648   	; 0x9d36 <steptable+0x108>
    a78e:	c0 b7       	in	r28, 0x30	; 48
    a790:	ae a6       	std	Y+46, r10	; 0x2e
    a792:	9e 97       	sbiw	r26, 0x2e	; 46
    a794:	91 8b       	std	Z+17, r25	; 0x11
    a796:	86 85       	ldd	r24, Z+14	; 0x0e
    a798:	82 80       	ldd	r8, Z+2	; 0x02
    a79a:	80 80       	ld	r8, Z
    a79c:	80 80       	ld	r8, Z
    a79e:	80 80       	ld	r8, Z
    a7a0:	80 80       	ld	r8, Z
    a7a2:	80 80       	ld	r8, Z
    a7a4:	80 80       	ld	r8, Z
    a7a6:	80 80       	ld	r8, Z
    a7a8:	80 80       	ld	r8, Z
    a7aa:	80 80       	ld	r8, Z
    a7ac:	80 80       	ld	r8, Z
    a7ae:	80 80       	ld	r8, Z
    a7b0:	80 80       	ld	r8, Z
    a7b2:	80 80       	ld	r8, Z
    a7b4:	80 80       	ld	r8, Z
    a7b6:	80 80       	ld	r8, Z
    a7b8:	80 80       	ld	r8, Z
    a7ba:	80 80       	ld	r8, Z
    a7bc:	80 80       	ld	r8, Z
    a7be:	80 80       	ld	r8, Z
    a7c0:	80 80       	ld	r8, Z
    a7c2:	80 80       	ld	r8, Z
    a7c4:	80 80       	ld	r8, Z
    a7c6:	80 80       	ld	r8, Z
    a7c8:	80 80       	ld	r8, Z
    a7ca:	80 80       	ld	r8, Z
    a7cc:	80 80       	ld	r8, Z
    a7ce:	80 80       	ld	r8, Z
    a7d0:	80 80       	ld	r8, Z
    a7d2:	80 80       	ld	r8, Z
    a7d4:	80 80       	ld	r8, Z
    a7d6:	80 80       	ld	r8, Z
    a7d8:	80 80       	ld	r8, Z
    a7da:	80 80       	ld	r8, Z
    a7dc:	80 80       	ld	r8, Z
    a7de:	80 80       	ld	r8, Z
    a7e0:	80 80       	ld	r8, Z
    a7e2:	80 80       	ld	r8, Z
    a7e4:	80 80       	ld	r8, Z
    a7e6:	80 80       	ld	r8, Z
    a7e8:	80 80       	ld	r8, Z
    a7ea:	80 80       	ld	r8, Z
    a7ec:	80 80       	ld	r8, Z
    a7ee:	80 80       	ld	r8, Z
    a7f0:	80 80       	ld	r8, Z
    a7f2:	80 80       	ld	r8, Z
    a7f4:	80 87       	std	Z+8, r24	; 0x08
    a7f6:	91 9d       	mul	r25, r1
    a7f8:	ac c4       	rjmp	.+2392   	; 0xb152 <printtileint+0x11a>
    a7fa:	cb d4       	rcall	.+2454   	; 0xb192 <printtileint+0x15a>
    a7fc:	dd f2       	brhs	.-74     	; 0xa7b4 <waves+0x9b4>
    a7fe:	fa fa       	.word	0xfafa	; ????

0000a800 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    a800:	2f 92       	push	r2
    a802:	3f 92       	push	r3
    a804:	4f 92       	push	r4
    a806:	5f 92       	push	r5
    a808:	6f 92       	push	r6
    a80a:	7f 92       	push	r7
    a80c:	8f 92       	push	r8
    a80e:	9f 92       	push	r9
    a810:	af 92       	push	r10
    a812:	bf 92       	push	r11
    a814:	cf 92       	push	r12
    a816:	df 92       	push	r13
    a818:	ef 92       	push	r14
    a81a:	ff 92       	push	r15
    a81c:	0f 93       	push	r16
    a81e:	1f 93       	push	r17
    a820:	cf 93       	push	r28
    a822:	df 93       	push	r29
    a824:	00 d0       	rcall	.+0      	; 0xa826 <ProcessSprites+0x26>
    a826:	00 d0       	rcall	.+0      	; 0xa828 <ProcessSprites+0x28>
    a828:	00 d0       	rcall	.+0      	; 0xa82a <ProcessSprites+0x2a>
    a82a:	cd b7       	in	r28, 0x3d	; 61
    a82c:	de b7       	in	r29, 0x3e	; 62
    a82e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    a832:	88 23       	and	r24, r24
    a834:	09 f4       	brne	.+2      	; 0xa838 <ProcessSprites+0x38>
    a836:	f9 c0       	rjmp	.+498    	; 0xaa2a <ProcessSprites+0x22a>
    a838:	80 91 4f 08 	lds	r24, 0x084F	; 0x80084f <user_ram_tiles_c_tmp>
    a83c:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <user_ram_tiles_c>
    a840:	80 93 4d 08 	sts	0x084D, r24	; 0x80084d <free_tile_index>
    a844:	04 e0       	ldi	r16, 0x04	; 4
    a846:	11 e0       	ldi	r17, 0x01	; 1
    a848:	f8 01       	movw	r30, r16
    a84a:	f3 81       	ldd	r31, Z+3	; 0x03
    a84c:	fb 83       	std	Y+3, r31	; 0x03
    a84e:	f2 ff       	sbrs	r31, 2
    a850:	20 c0       	rjmp	.+64     	; 0xa892 <ProcessSprites+0x92>
    a852:	0c 5f       	subi	r16, 0xFC	; 252
    a854:	1f 4f       	sbci	r17, 0xFF	; 255
    a856:	21 e0       	ldi	r18, 0x01	; 1
    a858:	0c 33       	cpi	r16, 0x3C	; 60
    a85a:	12 07       	cpc	r17, r18
    a85c:	a9 f7       	brne	.-22     	; 0xa848 <ProcessSprites+0x48>
    a85e:	26 96       	adiw	r28, 0x06	; 6
    a860:	0f b6       	in	r0, 0x3f	; 63
    a862:	f8 94       	cli
    a864:	de bf       	out	0x3e, r29	; 62
    a866:	0f be       	out	0x3f, r0	; 63
    a868:	cd bf       	out	0x3d, r28	; 61
    a86a:	df 91       	pop	r29
    a86c:	cf 91       	pop	r28
    a86e:	1f 91       	pop	r17
    a870:	0f 91       	pop	r16
    a872:	ff 90       	pop	r15
    a874:	ef 90       	pop	r14
    a876:	df 90       	pop	r13
    a878:	cf 90       	pop	r12
    a87a:	bf 90       	pop	r11
    a87c:	af 90       	pop	r10
    a87e:	9f 90       	pop	r9
    a880:	8f 90       	pop	r8
    a882:	7f 90       	pop	r7
    a884:	6f 90       	pop	r6
    a886:	5f 90       	pop	r5
    a888:	4f 90       	pop	r4
    a88a:	3f 90       	pop	r3
    a88c:	2f 90       	pop	r2
    a88e:	0c 94 e6 46 	jmp	0x8dcc	; 0x8dcc <RestoreBackground>
    a892:	f8 01       	movw	r30, r16
    a894:	51 81       	ldd	r21, Z+1	; 0x01
    a896:	40 81       	ld	r20, Z
    a898:	20 91 5e 08 	lds	r18, 0x085E	; 0x80085e <screen_scrollX>
    a89c:	24 0f       	add	r18, r20
    a89e:	30 91 5f 08 	lds	r19, 0x085F	; 0x80085f <screen_scrollY>
    a8a2:	85 2f       	mov	r24, r21
    a8a4:	90 e0       	ldi	r25, 0x00	; 0
    a8a6:	83 0f       	add	r24, r19
    a8a8:	91 1d       	adc	r25, r1
    a8aa:	30 91 60 08 	lds	r19, 0x0860	; 0x800860 <screen_scrollHeight>
    a8ae:	33 0f       	add	r19, r19
    a8b0:	33 0f       	add	r19, r19
    a8b2:	33 0f       	add	r19, r19
    a8b4:	31 50       	subi	r19, 0x01	; 1
    a8b6:	35 17       	cp	r19, r21
    a8b8:	08 f4       	brcc	.+2      	; 0xa8bc <ProcessSprites+0xbc>
    a8ba:	9a 95       	dec	r25
    a8bc:	32 2e       	mov	r3, r18
    a8be:	36 94       	lsr	r3
    a8c0:	36 94       	lsr	r3
    a8c2:	36 94       	lsr	r3
    a8c4:	27 70       	andi	r18, 0x07	; 7
    a8c6:	19 f0       	breq	.+6      	; 0xa8ce <ProcessSprites+0xce>
    a8c8:	f2 e0       	ldi	r31, 0x02	; 2
    a8ca:	f9 83       	std	Y+1, r31	; 0x01
    a8cc:	02 c0       	rjmp	.+4      	; 0xa8d2 <ProcessSprites+0xd2>
    a8ce:	31 e0       	ldi	r19, 0x01	; 1
    a8d0:	39 83       	std	Y+1, r19	; 0x01
    a8d2:	bc 01       	movw	r22, r24
    a8d4:	e3 e0       	ldi	r30, 0x03	; 3
    a8d6:	76 95       	lsr	r23
    a8d8:	67 95       	ror	r22
    a8da:	ea 95       	dec	r30
    a8dc:	e1 f7       	brne	.-8      	; 0xa8d6 <ProcessSprites+0xd6>
    a8de:	26 2e       	mov	r2, r22
    a8e0:	87 70       	andi	r24, 0x07	; 7
    a8e2:	19 f0       	breq	.+6      	; 0xa8ea <ProcessSprites+0xea>
    a8e4:	62 e0       	ldi	r22, 0x02	; 2
    a8e6:	6a 83       	std	Y+2, r22	; 0x02
    a8e8:	02 c0       	rjmp	.+4      	; 0xa8ee <ProcessSprites+0xee>
    a8ea:	71 e0       	ldi	r23, 0x01	; 1
    a8ec:	7a 83       	std	Y+2, r23	; 0x02
    a8ee:	68 2e       	mov	r6, r24
    a8f0:	71 2c       	mov	r7, r1
    a8f2:	76 2c       	mov	r7, r6
    a8f4:	66 24       	eor	r6, r6
    a8f6:	62 0e       	add	r6, r18
    a8f8:	71 1c       	adc	r7, r1
    a8fa:	fb 81       	ldd	r31, Y+3	; 0x03
    a8fc:	ef 2f       	mov	r30, r31
    a8fe:	f0 e0       	ldi	r31, 0x00	; 0
    a900:	7e 2f       	mov	r23, r30
    a902:	66 27       	eor	r22, r22
    a904:	f8 01       	movw	r30, r16
    a906:	92 81       	ldd	r25, Z+2	; 0x02
    a908:	69 0f       	add	r22, r25
    a90a:	71 1d       	adc	r23, r1
    a90c:	7e 83       	std	Y+6, r23	; 0x06
    a90e:	6d 83       	std	Y+5, r22	; 0x05
    a910:	c1 2c       	mov	r12, r1
    a912:	d1 2c       	mov	r13, r1
    a914:	97 e0       	ldi	r25, 0x07	; 7
    a916:	95 0f       	add	r25, r21
    a918:	98 1b       	sub	r25, r24
    a91a:	9b 83       	std	Y+3, r25	; 0x03
    a91c:	87 e0       	ldi	r24, 0x07	; 7
    a91e:	84 0f       	add	r24, r20
    a920:	82 1b       	sub	r24, r18
    a922:	8c 83       	std	Y+4, r24	; 0x04
    a924:	8c 2d       	mov	r24, r12
    a926:	90 91 60 08 	lds	r25, 0x0860	; 0x800860 <screen_scrollHeight>
    a92a:	91 11       	cpse	r25, r1
    a92c:	07 c0       	rjmp	.+14     	; 0xa93c <ProcessSprites+0x13c>
    a92e:	ff ef       	ldi	r31, 0xFF	; 255
    a930:	cf 1a       	sub	r12, r31
    a932:	df 0a       	sbc	r13, r31
    a934:	2a 81       	ldd	r18, Y+2	; 0x02
    a936:	c2 16       	cp	r12, r18
    a938:	a8 f3       	brcs	.-22     	; 0xa924 <ProcessSprites+0x124>
    a93a:	8b cf       	rjmp	.-234    	; 0xa852 <ProcessSprites+0x52>
    a93c:	29 2f       	mov	r18, r25
    a93e:	22 0f       	add	r18, r18
    a940:	22 0f       	add	r18, r18
    a942:	22 0f       	add	r18, r18
    a944:	21 50       	subi	r18, 0x01	; 1
    a946:	3b 81       	ldd	r19, Y+3	; 0x03
    a948:	48 e0       	ldi	r20, 0x08	; 8
    a94a:	c4 9e       	mul	r12, r20
    a94c:	30 0d       	add	r19, r0
    a94e:	11 24       	eor	r1, r1
    a950:	32 17       	cp	r19, r18
    a952:	68 f7       	brcc	.-38     	; 0xa92e <ProcessSprites+0x12e>
    a954:	82 0d       	add	r24, r2
    a956:	89 17       	cp	r24, r25
    a958:	10 f0       	brcs	.+4      	; 0xa95e <ProcessSprites+0x15e>
    a95a:	89 1b       	sub	r24, r25
    a95c:	fc cf       	rjmp	.-8      	; 0xa956 <ProcessSprites+0x156>
    a95e:	e8 2e       	mov	r14, r24
    a960:	e6 94       	lsr	r14
    a962:	e6 94       	lsr	r14
    a964:	e6 94       	lsr	r14
    a966:	f1 2c       	mov	r15, r1
    a968:	fe 2c       	mov	r15, r14
    a96a:	ee 24       	eor	r14, r14
    a96c:	87 70       	andi	r24, 0x07	; 7
    a96e:	e8 0e       	add	r14, r24
    a970:	f1 1c       	adc	r15, r1
    a972:	9c 2c       	mov	r9, r12
    a974:	88 24       	eor	r8, r8
    a976:	41 2c       	mov	r4, r1
    a978:	8c 81       	ldd	r24, Y+4	; 0x04
    a97a:	68 e0       	ldi	r22, 0x08	; 8
    a97c:	46 9e       	mul	r4, r22
    a97e:	80 0d       	add	r24, r0
    a980:	11 24       	eor	r1, r1
    a982:	87 3e       	cpi	r24, 0xE7	; 231
    a984:	08 f0       	brcs	.+2      	; 0xa988 <ProcessSprites+0x188>
    a986:	49 c0       	rjmp	.+146    	; 0xaa1a <ProcessSprites+0x21a>
    a988:	83 2d       	mov	r24, r3
    a98a:	84 0d       	add	r24, r4
    a98c:	88 0f       	add	r24, r24
    a98e:	88 0f       	add	r24, r24
    a990:	88 0f       	add	r24, r24
    a992:	f7 01       	movw	r30, r14
    a994:	e8 0f       	add	r30, r24
    a996:	f1 1d       	adc	r31, r1
    a998:	9f 01       	movw	r18, r30
    a99a:	20 50       	subi	r18, 0x00	; 0
    a99c:	35 4f       	sbci	r19, 0xF5	; 245
    a99e:	59 01       	movw	r10, r18
    a9a0:	f9 01       	movw	r30, r18
    a9a2:	50 80       	ld	r5, Z
    a9a4:	80 91 4e 08 	lds	r24, 0x084E	; 0x80084e <user_ram_tiles_c>
    a9a8:	fa e1       	ldi	r31, 0x1A	; 26
    a9aa:	f5 15       	cp	r31, r5
    a9ac:	10 f0       	brcs	.+4      	; 0xa9b2 <ProcessSprites+0x1b2>
    a9ae:	58 16       	cp	r5, r24
    a9b0:	48 f5       	brcc	.+82     	; 0xaa04 <ProcessSprites+0x204>
    a9b2:	60 91 4d 08 	lds	r22, 0x084D	; 0x80084d <free_tile_index>
    a9b6:	6b 31       	cpi	r22, 0x1B	; 27
    a9b8:	10 f5       	brcc	.+68     	; 0xa9fe <ProcessSprites+0x1fe>
    a9ba:	2a e1       	ldi	r18, 0x1A	; 26
    a9bc:	25 15       	cp	r18, r5
    a9be:	28 f4       	brcc	.+10     	; 0xa9ca <ProcessSprites+0x1ca>
    a9c0:	85 ee       	ldi	r24, 0xE5	; 229
    a9c2:	85 0d       	add	r24, r5
    a9c4:	0e 94 ca 45 	call	0x8b94	; 0x8b94 <CopyFlashTile>
    a9c8:	05 c0       	rjmp	.+10     	; 0xa9d4 <ProcessSprites+0x1d4>
    a9ca:	58 16       	cp	r5, r24
    a9cc:	18 f4       	brcc	.+6      	; 0xa9d4 <ProcessSprites+0x1d4>
    a9ce:	85 2d       	mov	r24, r5
    a9d0:	0e 94 59 46 	call	0x8cb2	; 0x8cb2 <CopyRamTile>
    a9d4:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <free_tile_index>
    a9d8:	e8 2f       	mov	r30, r24
    a9da:	f0 e0       	ldi	r31, 0x00	; 0
    a9dc:	9f 01       	movw	r18, r30
    a9de:	22 0f       	add	r18, r18
    a9e0:	33 1f       	adc	r19, r19
    a9e2:	e2 0f       	add	r30, r18
    a9e4:	f3 1f       	adc	r31, r19
    a9e6:	e4 50       	subi	r30, 0x04	; 4
    a9e8:	f8 4f       	sbci	r31, 0xF8	; 248
    a9ea:	b1 82       	std	Z+1, r11	; 0x01
    a9ec:	a0 82       	st	Z, r10
    a9ee:	52 82       	std	Z+2, r5	; 0x02
    a9f0:	f5 01       	movw	r30, r10
    a9f2:	80 83       	st	Z, r24
    a9f4:	91 e0       	ldi	r25, 0x01	; 1
    a9f6:	98 0f       	add	r25, r24
    a9f8:	90 93 4d 08 	sts	0x084D, r25	; 0x80084d <free_tile_index>
    a9fc:	58 2e       	mov	r5, r24
    a9fe:	fa e1       	ldi	r31, 0x1A	; 26
    aa00:	f5 15       	cp	r31, r5
    aa02:	58 f0       	brcs	.+22     	; 0xaa1a <ProcessSprites+0x21a>
    aa04:	80 91 4e 08 	lds	r24, 0x084E	; 0x80084e <user_ram_tiles_c>
    aa08:	58 16       	cp	r5, r24
    aa0a:	38 f0       	brcs	.+14     	; 0xaa1a <ProcessSprites+0x21a>
    aa0c:	93 01       	movw	r18, r6
    aa0e:	a4 01       	movw	r20, r8
    aa10:	6d 81       	ldd	r22, Y+5	; 0x05
    aa12:	7e 81       	ldd	r23, Y+6	; 0x06
    aa14:	85 2d       	mov	r24, r5
    aa16:	0e 94 f9 46 	call	0x8df2	; 0x8df2 <BlitSpritePart>
    aa1a:	43 94       	inc	r4
    aa1c:	2f ef       	ldi	r18, 0xFF	; 255
    aa1e:	82 1a       	sub	r8, r18
    aa20:	92 0a       	sbc	r9, r18
    aa22:	39 81       	ldd	r19, Y+1	; 0x01
    aa24:	43 12       	cpse	r4, r19
    aa26:	a8 cf       	rjmp	.-176    	; 0xa978 <ProcessSprites+0x178>
    aa28:	82 cf       	rjmp	.-252    	; 0xa92e <ProcessSprites+0x12e>
    aa2a:	26 96       	adiw	r28, 0x06	; 6
    aa2c:	0f b6       	in	r0, 0x3f	; 63
    aa2e:	f8 94       	cli
    aa30:	de bf       	out	0x3e, r29	; 62
    aa32:	0f be       	out	0x3f, r0	; 63
    aa34:	cd bf       	out	0x3d, r28	; 61
    aa36:	df 91       	pop	r29
    aa38:	cf 91       	pop	r28
    aa3a:	1f 91       	pop	r17
    aa3c:	0f 91       	pop	r16
    aa3e:	ff 90       	pop	r15
    aa40:	ef 90       	pop	r14
    aa42:	df 90       	pop	r13
    aa44:	cf 90       	pop	r12
    aa46:	bf 90       	pop	r11
    aa48:	af 90       	pop	r10
    aa4a:	9f 90       	pop	r9
    aa4c:	8f 90       	pop	r8
    aa4e:	7f 90       	pop	r7
    aa50:	6f 90       	pop	r6
    aa52:	5f 90       	pop	r5
    aa54:	4f 90       	pop	r4
    aa56:	3f 90       	pop	r3
    aa58:	2f 90       	pop	r2
    aa5a:	08 95       	ret

0000aa5c <Scroll>:
    aa5c:	90 91 60 08 	lds	r25, 0x0860	; 0x800860 <screen_scrollHeight>
    aa60:	29 2f       	mov	r18, r25
    aa62:	22 0f       	add	r18, r18
    aa64:	22 0f       	add	r18, r18
    aa66:	22 0f       	add	r18, r18
    aa68:	90 91 5f 08 	lds	r25, 0x085F	; 0x80085f <screen_scrollY>
    aa6c:	96 0f       	add	r25, r22
    aa6e:	90 93 5f 08 	sts	0x085F, r25	; 0x80085f <screen_scrollY>
    aa72:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollX>
    aa76:	83 0f       	add	r24, r19
    aa78:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollX>
    aa7c:	92 17       	cp	r25, r18
    aa7e:	38 f0       	brcs	.+14     	; 0xaa8e <Scroll+0x32>
    aa80:	67 fd       	sbrc	r22, 7
    aa82:	02 c0       	rjmp	.+4      	; 0xaa88 <Scroll+0x2c>
    aa84:	92 1b       	sub	r25, r18
    aa86:	01 c0       	rjmp	.+2      	; 0xaa8a <Scroll+0x2e>
    aa88:	92 0f       	add	r25, r18
    aa8a:	90 93 5f 08 	sts	0x085F, r25	; 0x80085f <screen_scrollY>
    aa8e:	08 95       	ret

0000aa90 <MapSprite2>:
    aa90:	df 92       	push	r13
    aa92:	ef 92       	push	r14
    aa94:	ff 92       	push	r15
    aa96:	0f 93       	push	r16
    aa98:	1f 93       	push	r17
    aa9a:	cf 93       	push	r28
    aa9c:	df 93       	push	r29
    aa9e:	fb 01       	movw	r30, r22
    aaa0:	14 91       	lpm	r17, Z
    aaa2:	31 96       	adiw	r30, 0x01	; 1
    aaa4:	54 91       	lpm	r21, Z
    aaa6:	2f ef       	ldi	r18, 0xFF	; 255
    aaa8:	21 0f       	add	r18, r17
    aaaa:	e4 2f       	mov	r30, r20
    aaac:	e1 70       	andi	r30, 0x01	; 1
    aaae:	40 ff       	sbrs	r20, 0
    aab0:	03 c0       	rjmp	.+6      	; 0xaab8 <MapSprite2+0x28>
    aab2:	92 2f       	mov	r25, r18
    aab4:	df ef       	ldi	r29, 0xFF	; 255
    aab6:	02 c0       	rjmp	.+4      	; 0xaabc <MapSprite2+0x2c>
    aab8:	d1 e0       	ldi	r29, 0x01	; 1
    aaba:	90 e0       	ldi	r25, 0x00	; 0
    aabc:	41 ff       	sbrs	r20, 1
    aabe:	04 c0       	rjmp	.+8      	; 0xaac8 <MapSprite2+0x38>
    aac0:	3f ef       	ldi	r19, 0xFF	; 255
    aac2:	35 0f       	add	r19, r21
    aac4:	0f ef       	ldi	r16, 0xFF	; 255
    aac6:	02 c0       	rjmp	.+4      	; 0xaacc <MapSprite2+0x3c>
    aac8:	01 e0       	ldi	r16, 0x01	; 1
    aaca:	30 e0       	ldi	r19, 0x00	; 0
    aacc:	ee 23       	and	r30, r30
    aace:	11 f0       	breq	.+4      	; 0xaad4 <MapSprite2+0x44>
    aad0:	e2 2e       	mov	r14, r18
    aad2:	01 c0       	rjmp	.+2      	; 0xaad6 <MapSprite2+0x46>
    aad4:	e1 2c       	mov	r14, r1
    aad6:	c0 e0       	ldi	r28, 0x00	; 0
    aad8:	c5 17       	cp	r28, r21
    aada:	f9 f0       	breq	.+62     	; 0xab1a <MapSprite2+0x8a>
    aadc:	31 03       	mulsu	r19, r17
    aade:	d0 01       	movw	r26, r0
    aae0:	11 24       	eor	r1, r1
    aae2:	d8 2e       	mov	r13, r24
    aae4:	d1 0e       	add	r13, r17
    aae6:	8d 15       	cp	r24, r13
    aae8:	a1 f0       	breq	.+40     	; 0xab12 <MapSprite2+0x82>
    aaea:	fd 01       	movw	r30, r26
    aaec:	e9 0f       	add	r30, r25
    aaee:	f1 1d       	adc	r31, r1
    aaf0:	97 fd       	sbrc	r25, 7
    aaf2:	fa 95       	dec	r31
    aaf4:	32 96       	adiw	r30, 0x02	; 2
    aaf6:	e6 0f       	add	r30, r22
    aaf8:	f7 1f       	adc	r31, r23
    aafa:	f4 90       	lpm	r15, Z
    aafc:	24 e0       	ldi	r18, 0x04	; 4
    aafe:	82 9f       	mul	r24, r18
    ab00:	f0 01       	movw	r30, r0
    ab02:	11 24       	eor	r1, r1
    ab04:	ec 5f       	subi	r30, 0xFC	; 252
    ab06:	fe 4f       	sbci	r31, 0xFE	; 254
    ab08:	f2 82       	std	Z+2, r15	; 0x02
    ab0a:	8f 5f       	subi	r24, 0xFF	; 255
    ab0c:	43 83       	std	Z+3, r20	; 0x03
    ab0e:	9d 0f       	add	r25, r29
    ab10:	ea cf       	rjmp	.-44     	; 0xaae6 <MapSprite2+0x56>
    ab12:	30 0f       	add	r19, r16
    ab14:	cf 5f       	subi	r28, 0xFF	; 255
    ab16:	9e 2d       	mov	r25, r14
    ab18:	df cf       	rjmp	.-66     	; 0xaad8 <MapSprite2+0x48>
    ab1a:	df 91       	pop	r29
    ab1c:	cf 91       	pop	r28
    ab1e:	1f 91       	pop	r17
    ab20:	0f 91       	pop	r16
    ab22:	ff 90       	pop	r15
    ab24:	ef 90       	pop	r14
    ab26:	df 90       	pop	r13
    ab28:	08 95       	ret

0000ab2a <MoveSprite>:
    ab2a:	0f 93       	push	r16
    ab2c:	30 e0       	ldi	r19, 0x00	; 0
    ab2e:	30 17       	cp	r19, r16
    ab30:	99 f0       	breq	.+38     	; 0xab58 <MoveSprite+0x2e>
    ab32:	58 2f       	mov	r21, r24
    ab34:	52 0f       	add	r21, r18
    ab36:	96 2f       	mov	r25, r22
    ab38:	85 17       	cp	r24, r21
    ab3a:	59 f0       	breq	.+22     	; 0xab52 <MoveSprite+0x28>
    ab3c:	74 e0       	ldi	r23, 0x04	; 4
    ab3e:	87 9f       	mul	r24, r23
    ab40:	f0 01       	movw	r30, r0
    ab42:	11 24       	eor	r1, r1
    ab44:	ec 5f       	subi	r30, 0xFC	; 252
    ab46:	fe 4f       	sbci	r31, 0xFE	; 254
    ab48:	90 83       	st	Z, r25
    ab4a:	41 83       	std	Z+1, r20	; 0x01
    ab4c:	8f 5f       	subi	r24, 0xFF	; 255
    ab4e:	98 5f       	subi	r25, 0xF8	; 248
    ab50:	f3 cf       	rjmp	.-26     	; 0xab38 <MoveSprite+0xe>
    ab52:	3f 5f       	subi	r19, 0xFF	; 255
    ab54:	48 5f       	subi	r20, 0xF8	; 248
    ab56:	eb cf       	rjmp	.-42     	; 0xab2e <MoveSprite+0x4>
    ab58:	0f 91       	pop	r16
    ab5a:	08 95       	ret

0000ab5c <InitializeVideoMode>:
    ab5c:	e4 e0       	ldi	r30, 0x04	; 4
    ab5e:	f1 e0       	ldi	r31, 0x01	; 1
    ab60:	80 ee       	ldi	r24, 0xE0	; 224
    ab62:	80 83       	st	Z, r24
    ab64:	81 83       	std	Z+1, r24	; 0x01
    ab66:	34 96       	adiw	r30, 0x04	; 4
    ab68:	91 e0       	ldi	r25, 0x01	; 1
    ab6a:	ec 33       	cpi	r30, 0x3C	; 60
    ab6c:	f9 07       	cpc	r31, r25
    ab6e:	c9 f7       	brne	.-14     	; 0xab62 <InitializeVideoMode+0x6>
    ab70:	80 e2       	ldi	r24, 0x20	; 32
    ab72:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <screen_scrollHeight>
    ab76:	10 92 5b 08 	sts	0x085B, r1	; 0x80085b <Screen>
    ab7a:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <free_tile_index>
    ab7e:	10 92 4f 08 	sts	0x084F, r1	; 0x80084f <user_ram_tiles_c_tmp>
    ab82:	08 95       	ret

0000ab84 <DrawMap>:
    ab84:	7f 92       	push	r7
    ab86:	8f 92       	push	r8
    ab88:	9f 92       	push	r9
    ab8a:	af 92       	push	r10
    ab8c:	bf 92       	push	r11
    ab8e:	cf 92       	push	r12
    ab90:	df 92       	push	r13
    ab92:	ef 92       	push	r14
    ab94:	ff 92       	push	r15
    ab96:	0f 93       	push	r16
    ab98:	1f 93       	push	r17
    ab9a:	cf 93       	push	r28
    ab9c:	df 93       	push	r29
    ab9e:	98 2e       	mov	r9, r24
    aba0:	86 2e       	mov	r8, r22
    aba2:	fa 01       	movw	r30, r20
    aba4:	e4 90       	lpm	r14, Z
    aba6:	31 96       	adiw	r30, 0x01	; 1
    aba8:	f4 90       	lpm	r15, Z
    abaa:	ae 2c       	mov	r10, r14
    abac:	b1 2c       	mov	r11, r1
    abae:	ea 01       	movw	r28, r20
    abb0:	22 96       	adiw	r28, 0x02	; 2
    abb2:	10 e0       	ldi	r17, 0x00	; 0
    abb4:	1f 15       	cp	r17, r15
    abb6:	b9 f0       	breq	.+46     	; 0xabe6 <DrawMap+0x62>
    abb8:	6e 01       	movw	r12, r28
    abba:	00 e0       	ldi	r16, 0x00	; 0
    abbc:	71 2e       	mov	r7, r17
    abbe:	78 0c       	add	r7, r8
    abc0:	0e 15       	cp	r16, r14
    abc2:	69 f0       	breq	.+26     	; 0xabde <DrawMap+0x5a>
    abc4:	f6 01       	movw	r30, r12
    abc6:	44 91       	lpm	r20, Z
    abc8:	50 e0       	ldi	r21, 0x00	; 0
    abca:	67 2d       	mov	r22, r7
    abcc:	80 2f       	mov	r24, r16
    abce:	89 0d       	add	r24, r9
    abd0:	0e 94 0f 49 	call	0x921e	; 0x921e <SetTile>
    abd4:	0f 5f       	subi	r16, 0xFF	; 255
    abd6:	ff ef       	ldi	r31, 0xFF	; 255
    abd8:	cf 1a       	sub	r12, r31
    abda:	df 0a       	sbc	r13, r31
    abdc:	f1 cf       	rjmp	.-30     	; 0xabc0 <DrawMap+0x3c>
    abde:	1f 5f       	subi	r17, 0xFF	; 255
    abe0:	ca 0d       	add	r28, r10
    abe2:	db 1d       	adc	r29, r11
    abe4:	e7 cf       	rjmp	.-50     	; 0xabb4 <DrawMap+0x30>
    abe6:	df 91       	pop	r29
    abe8:	cf 91       	pop	r28
    abea:	1f 91       	pop	r17
    abec:	0f 91       	pop	r16
    abee:	ff 90       	pop	r15
    abf0:	ef 90       	pop	r14
    abf2:	df 90       	pop	r13
    abf4:	cf 90       	pop	r12
    abf6:	bf 90       	pop	r11
    abf8:	af 90       	pop	r10
    abfa:	9f 90       	pop	r9
    abfc:	8f 90       	pop	r8
    abfe:	7f 90       	pop	r7
    ac00:	08 95       	ret

0000ac02 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    ac02:	0f 93       	push	r16
    ac04:	1f 93       	push	r17
    ac06:	cf 93       	push	r28
    ac08:	df 93       	push	r29
    ac0a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    ac0c:	c0 e0       	ldi	r28, 0x00	; 0
    ac0e:	d0 e0       	ldi	r29, 0x00	; 0
    ac10:	c0 17       	cp	r28, r16
    ac12:	d1 07       	cpc	r29, r17
    ac14:	44 f4       	brge	.+16     	; 0xac26 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    ac16:	0e 94 25 49 	call	0x924a	; 0x924a <GetVsyncFlag>
    ac1a:	88 23       	and	r24, r24
    ac1c:	e1 f3       	breq	.-8      	; 0xac16 <WaitVsync+0x14>
		ClearVsyncFlag();		
    ac1e:	0e 94 29 49 	call	0x9252	; 0x9252 <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    ac22:	21 96       	adiw	r28, 0x01	; 1
    ac24:	f5 cf       	rjmp	.-22     	; 0xac10 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    ac26:	df 91       	pop	r29
    ac28:	cf 91       	pop	r28
    ac2a:	1f 91       	pop	r17
    ac2c:	0f 91       	pop	r16
    ac2e:	08 95       	ret

0000ac30 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    ac30:	83 e1       	ldi	r24, 0x13	; 19
    ac32:	99 e0       	ldi	r25, 0x09	; 9
    ac34:	0e 94 8a 4a 	call	0x9514	; 0x9514 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    ac38:	83 e1       	ldi	r24, 0x13	; 19
    ac3a:	91 e0       	ldi	r25, 0x01	; 1
    ac3c:	0e 94 20 49 	call	0x9240	; 0x9240 <SetTileTable>

	/* Draw logo */
	ClearVram();
    ac40:	0e 94 05 49 	call	0x920a	; 0x920a <ClearVram>
	WaitVsync(15U);
    ac44:	8f e0       	ldi	r24, 0x0F	; 15
    ac46:	90 e0       	ldi	r25, 0x00	; 0
    ac48:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    ac4c:	41 e0       	ldi	r20, 0x01	; 1
    ac4e:	6f ef       	ldi	r22, 0xFF	; 255
    ac50:	80 e0       	ldi	r24, 0x00	; 0
    ac52:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    ac56:	4d ef       	ldi	r20, 0xFD	; 253
    ac58:	50 e0       	ldi	r21, 0x00	; 0
    ac5a:	6c e0       	ldi	r22, 0x0C	; 12
    ac5c:	8c e0       	ldi	r24, 0x0C	; 12
    ac5e:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
	WaitVsync(3);
    ac62:	83 e0       	ldi	r24, 0x03	; 3
    ac64:	90 e0       	ldi	r25, 0x00	; 0
    ac66:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    ac6a:	4c ee       	ldi	r20, 0xEC	; 236
    ac6c:	50 e0       	ldi	r21, 0x00	; 0
    ac6e:	6c e0       	ldi	r22, 0x0C	; 12
    ac70:	8c e0       	ldi	r24, 0x0C	; 12
    ac72:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
	WaitVsync(2);
    ac76:	82 e0       	ldi	r24, 0x02	; 2
    ac78:	90 e0       	ldi	r25, 0x00	; 0
    ac7a:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    ac7e:	4d ef       	ldi	r20, 0xFD	; 253
    ac80:	50 e0       	ldi	r21, 0x00	; 0
    ac82:	6c e0       	ldi	r22, 0x0C	; 12
    ac84:	8c e0       	ldi	r24, 0x0C	; 12
    ac86:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    ac8a:	81 e4       	ldi	r24, 0x41	; 65
    ac8c:	90 e0       	ldi	r25, 0x00	; 0
    ac8e:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
	ClearVram();
    ac92:	0e 94 05 49 	call	0x920a	; 0x920a <ClearVram>
	WaitVsync(20U);
    ac96:	84 e1       	ldi	r24, 0x14	; 20
    ac98:	90 e0       	ldi	r25, 0x00	; 0
    ac9a:	0c 94 01 56 	jmp	0xac02	; 0xac02 <WaitVsync>

0000ac9e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    ac9e:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <fadeSpeed>
	currFadeFrame=0;
    aca2:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <currFadeFrame>
	fadeActive=true;
    aca6:	81 e0       	ldi	r24, 0x01	; 1
    aca8:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <fadeActive>
		
	if(blocking){
    acac:	66 23       	and	r22, r22
    acae:	21 f0       	breq	.+8      	; 0xacb8 <doFade+0x1a>
		while(fadeActive==true);
    acb0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    acb4:	81 11       	cpse	r24, r1
    acb6:	fc cf       	rjmp	.-8      	; 0xacb0 <doFade+0x12>
    acb8:	08 95       	ret

0000acba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    acba:	81 11       	cpse	r24, r1
    acbc:	03 c0       	rjmp	.+6      	; 0xacc4 <FadeIn+0xa>
		DDRC=0xff;
    acbe:	8f ef       	ldi	r24, 0xFF	; 255
    acc0:	87 b9       	out	0x07, r24	; 7
		return;
    acc2:	08 95       	ret
	}
	fadeStep=1;
    acc4:	91 e0       	ldi	r25, 0x01	; 1
    acc6:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=1;
    acca:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    acce:	0c 94 4f 56 	jmp	0xac9e	; 0xac9e <doFade>

0000acd2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    acd2:	81 11       	cpse	r24, r1
    acd4:	02 c0       	rjmp	.+4      	; 0xacda <FadeOut+0x8>
		DDRC=0;
    acd6:	17 b8       	out	0x07, r1	; 7
		return;
    acd8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    acda:	9c e0       	ldi	r25, 0x0C	; 12
    acdc:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=-1;
    ace0:	9f ef       	ldi	r25, 0xFF	; 255
    ace2:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    ace6:	0c 94 4f 56 	jmp	0xac9e	; 0xac9e <doFade>

0000acea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    acea:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    acee:	88 23       	and	r24, r24
    acf0:	01 f1       	breq	.+64     	; 0xad32 <ProcessFading+0x48>
		if(currFadeFrame==0){
    acf2:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <currFadeFrame>
    acf6:	81 11       	cpse	r24, r1
    acf8:	19 c0       	rjmp	.+50     	; 0xad2c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    acfa:	80 91 20 09 	lds	r24, 0x0920	; 0x800920 <fadeSpeed>
    acfe:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    ad02:	e0 91 24 09 	lds	r30, 0x0924	; 0x800924 <fadeStep>
    ad06:	f0 e0       	ldi	r31, 0x00	; 0
    ad08:	e1 52       	subi	r30, 0x21	; 33
    ad0a:	ff 4f       	sbci	r31, 0xFF	; 255
    ad0c:	e4 91       	lpm	r30, Z
    ad0e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    ad10:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <fadeStep>
    ad14:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <fadeDir>
    ad18:	89 0f       	add	r24, r25
    ad1a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    ad1e:	88 23       	and	r24, r24
    ad20:	11 f0       	breq	.+4      	; 0xad26 <ProcessFading+0x3c>
    ad22:	8d 30       	cpi	r24, 0x0D	; 13
    ad24:	31 f4       	brne	.+12     	; 0xad32 <ProcessFading+0x48>
				fadeActive=false;
    ad26:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <fadeActive>
    ad2a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    ad2c:	81 50       	subi	r24, 0x01	; 1
    ad2e:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
    ad32:	08 95       	ret

0000ad34 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    ad34:	0e 94 75 56 	call	0xacea	; 0xacea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    ad38:	0c 94 00 54 	jmp	0xa800	; 0xa800 <ProcessSprites>

0000ad3c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    ad3c:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    ad40:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    ad44:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    ad48:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    ad4c:	01 96       	adiw	r24, 0x01	; 1
    ad4e:	a1 1d       	adc	r26, r1
    ad50:	b1 1d       	adc	r27, r1
    ad52:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <time>
    ad56:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <time+0x1>
    ad5a:	a0 93 9d 09 	sts	0x099D, r26	; 0x80099d <time+0x2>
    ad5e:	b0 93 9e 09 	sts	0x099E, r27	; 0x80099e <time+0x3>
    ad62:	08 95       	ret

0000ad64 <drawplayer>:
return;
  
}

void drawplayer()
{
    ad64:	0f 93       	push	r16
 
if  ( player.jumping == false  )
    ad66:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    ad6a:	81 11       	cpse	r24, r1
    ad6c:	74 c0       	rjmp	.+232    	; 0xae56 <drawplayer+0xf2>
{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,0);
    ad6e:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ad72:	82 37       	cpi	r24, 0x72	; 114
    ad74:	49 f4       	brne	.+18     	; 0xad88 <drawplayer+0x24>
    ad76:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    ad7a:	81 11       	cpse	r24, r1
    ad7c:	05 c0       	rjmp	.+10     	; 0xad88 <drawplayer+0x24>
    ad7e:	40 e0       	ldi	r20, 0x00	; 0
    ad80:	63 ee       	ldi	r22, 0xE3	; 227
    ad82:	76 e5       	ldi	r23, 0x56	; 86
    ad84:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,1);
    ad88:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ad8c:	8c 36       	cpi	r24, 0x6C	; 108
    ad8e:	49 f4       	brne	.+18     	; 0xada2 <drawplayer+0x3e>
    ad90:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    ad94:	81 11       	cpse	r24, r1
    ad96:	05 c0       	rjmp	.+10     	; 0xada2 <drawplayer+0x3e>
    ad98:	41 e0       	ldi	r20, 0x01	; 1
    ad9a:	63 ee       	ldi	r22, 0xE3	; 227
    ad9c:	76 e5       	ldi	r23, 0x56	; 86
    ad9e:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,0);
    ada2:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ada6:	82 37       	cpi	r24, 0x72	; 114
    ada8:	59 f4       	brne	.+22     	; 0xadc0 <drawplayer+0x5c>
    adaa:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    adae:	81 50       	subi	r24, 0x01	; 1
    adb0:	88 30       	cpi	r24, 0x08	; 8
    adb2:	30 f4       	brcc	.+12     	; 0xadc0 <drawplayer+0x5c>
    adb4:	40 e0       	ldi	r20, 0x00	; 0
    adb6:	6b ed       	ldi	r22, 0xDB	; 219
    adb8:	76 e5       	ldi	r23, 0x56	; 86
    adba:	80 e0       	ldi	r24, 0x00	; 0
    adbc:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,0);    
    adc0:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    adc4:	82 37       	cpi	r24, 0x72	; 114
    adc6:	59 f4       	brne	.+22     	; 0xadde <drawplayer+0x7a>
    adc8:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    adcc:	89 50       	subi	r24, 0x09	; 9
    adce:	88 30       	cpi	r24, 0x08	; 8
    add0:	30 f4       	brcc	.+12     	; 0xadde <drawplayer+0x7a>
    add2:	40 e0       	ldi	r20, 0x00	; 0
    add4:	63 ed       	ldi	r22, 0xD3	; 211
    add6:	76 e5       	ldi	r23, 0x56	; 86
    add8:	80 e0       	ldi	r24, 0x00	; 0
    adda:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,0);  
    adde:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ade2:	82 37       	cpi	r24, 0x72	; 114
    ade4:	59 f4       	brne	.+22     	; 0xadfc <drawplayer+0x98>
    ade6:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    adea:	81 51       	subi	r24, 0x11	; 17
    adec:	88 30       	cpi	r24, 0x08	; 8
    adee:	30 f4       	brcc	.+12     	; 0xadfc <drawplayer+0x98>
    adf0:	40 e0       	ldi	r20, 0x00	; 0
    adf2:	63 ec       	ldi	r22, 0xC3	; 195
    adf4:	76 e5       	ldi	r23, 0x56	; 86
    adf6:	80 e0       	ldi	r24, 0x00	; 0
    adf8:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,1);
    adfc:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ae00:	8c 36       	cpi	r24, 0x6C	; 108
    ae02:	59 f4       	brne	.+22     	; 0xae1a <drawplayer+0xb6>
    ae04:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    ae08:	81 50       	subi	r24, 0x01	; 1
    ae0a:	88 30       	cpi	r24, 0x08	; 8
    ae0c:	30 f4       	brcc	.+12     	; 0xae1a <drawplayer+0xb6>
    ae0e:	41 e0       	ldi	r20, 0x01	; 1
    ae10:	6b ed       	ldi	r22, 0xDB	; 219
    ae12:	76 e5       	ldi	r23, 0x56	; 86
    ae14:	80 e0       	ldi	r24, 0x00	; 0
    ae16:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,1);    
    ae1a:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ae1e:	8c 36       	cpi	r24, 0x6C	; 108
    ae20:	59 f4       	brne	.+22     	; 0xae38 <drawplayer+0xd4>
    ae22:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    ae26:	89 50       	subi	r24, 0x09	; 9
    ae28:	88 30       	cpi	r24, 0x08	; 8
    ae2a:	30 f4       	brcc	.+12     	; 0xae38 <drawplayer+0xd4>
    ae2c:	41 e0       	ldi	r20, 0x01	; 1
    ae2e:	63 ed       	ldi	r22, 0xD3	; 211
    ae30:	76 e5       	ldi	r23, 0x56	; 86
    ae32:	80 e0       	ldi	r24, 0x00	; 0
    ae34:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,1);  
    ae38:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ae3c:	8c 36       	cpi	r24, 0x6C	; 108
    ae3e:	59 f4       	brne	.+22     	; 0xae56 <drawplayer+0xf2>
    ae40:	80 91 75 09 	lds	r24, 0x0975	; 0x800975 <player+0x14>
    ae44:	81 51       	subi	r24, 0x11	; 17
    ae46:	88 30       	cpi	r24, 0x08	; 8
    ae48:	a0 f4       	brcc	.+40     	; 0xae72 <drawplayer+0x10e>
    ae4a:	41 e0       	ldi	r20, 0x01	; 1
    ae4c:	63 ec       	ldi	r22, 0xC3	; 195
    ae4e:	76 e5       	ldi	r23, 0x56	; 86
    ae50:	80 e0       	ldi	r24, 0x00	; 0
    ae52:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
};

if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,melli3 ,0);   
    ae56:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ae5a:	82 37       	cpi	r24, 0x72	; 114
    ae5c:	51 f4       	brne	.+20     	; 0xae72 <drawplayer+0x10e>
    ae5e:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    ae62:	88 23       	and	r24, r24
    ae64:	31 f0       	breq	.+12     	; 0xae72 <drawplayer+0x10e>
    ae66:	40 e0       	ldi	r20, 0x00	; 0
    ae68:	6b ec       	ldi	r22, 0xCB	; 203
    ae6a:	76 e5       	ldi	r23, 0x56	; 86
    ae6c:	80 e0       	ldi	r24, 0x00	; 0
    ae6e:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,melli3 ,1); 
    ae72:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    ae76:	8c 36       	cpi	r24, 0x6C	; 108
    ae78:	51 f4       	brne	.+20     	; 0xae8e <drawplayer+0x12a>
    ae7a:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    ae7e:	88 23       	and	r24, r24
    ae80:	31 f0       	breq	.+12     	; 0xae8e <drawplayer+0x12a>
    ae82:	41 e0       	ldi	r20, 0x01	; 1
    ae84:	6b ec       	ldi	r22, 0xCB	; 203
    ae86:	76 e5       	ldi	r23, 0x56	; 86
    ae88:	80 e0       	ldi	r24, 0x00	; 0
    ae8a:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if(player.stuck == true)
    ae8e:	80 91 67 09 	lds	r24, 0x0967	; 0x800967 <player+0x6>
    ae92:	88 23       	and	r24, r24
    ae94:	31 f0       	breq	.+12     	; 0xaea2 <drawplayer+0x13e>
{
   MapSprite2(0 ,melli5 ,0);
    ae96:	40 e0       	ldi	r20, 0x00	; 0
    ae98:	6b eb       	ldi	r22, 0xBB	; 187
    ae9a:	76 e5       	ldi	r23, 0x56	; 86
    ae9c:	80 e0       	ldi	r24, 0x00	; 0
    ae9e:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    aea2:	40 91 63 09 	lds	r20, 0x0963	; 0x800963 <player+0x2>
    aea6:	45 51       	subi	r20, 0x15	; 21
    aea8:	60 91 61 09 	lds	r22, 0x0961	; 0x800961 <player>
    aeac:	67 50       	subi	r22, 0x07	; 7
    aeae:	03 e0       	ldi	r16, 0x03	; 3
    aeb0:	22 e0       	ldi	r18, 0x02	; 2
    aeb2:	80 e0       	ldi	r24, 0x00	; 0
    aeb4:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>



aniframe++;
    aeb8:	80 91 03 0a 	lds	r24, 0x0A03	; 0x800a03 <aniframe>
    aebc:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    aebe:	85 31       	cpi	r24, 0x15	; 21
    aec0:	18 f4       	brcc	.+6      	; 0xaec8 <drawplayer+0x164>
}
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);



aniframe++;
    aec2:	80 93 03 0a 	sts	0x0A03, r24	; 0x800a03 <aniframe>
    aec6:	02 c0       	rjmp	.+4      	; 0xaecc <drawplayer+0x168>
if ( aniframe > 20 ) aniframe = 0;     
    aec8:	10 92 03 0a 	sts	0x0A03, r1	; 0x800a03 <aniframe>


}
    aecc:	0f 91       	pop	r16
    aece:	08 95       	ret

0000aed0 <drawplayer2>:
void drawplayer2()
{
    aed0:	0f 93       	push	r16
 
if  ( player2.jumping == false  )
    aed2:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <player2+0x10>
    aed6:	81 11       	cpse	r24, r1
    aed8:	76 c0       	rjmp	.+236    	; 0xafc6 <drawplayer2+0xf6>
{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(spriteInd ,man0 ,0);
    aeda:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    aede:	82 37       	cpi	r24, 0x72	; 114
    aee0:	51 f4       	brne	.+20     	; 0xaef6 <drawplayer2+0x26>
    aee2:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    aee6:	81 11       	cpse	r24, r1
    aee8:	06 c0       	rjmp	.+12     	; 0xaef6 <drawplayer2+0x26>
    aeea:	40 e0       	ldi	r20, 0x00	; 0
    aeec:	63 eb       	ldi	r22, 0xB3	; 179
    aeee:	76 e5       	ldi	r23, 0x56	; 86
    aef0:	87 e0       	ldi	r24, 0x07	; 7
    aef2:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(spriteInd,man0 ,1);
    aef6:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    aefa:	8c 36       	cpi	r24, 0x6C	; 108
    aefc:	51 f4       	brne	.+20     	; 0xaf12 <drawplayer2+0x42>
    aefe:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af02:	81 11       	cpse	r24, r1
    af04:	06 c0       	rjmp	.+12     	; 0xaf12 <drawplayer2+0x42>
    af06:	41 e0       	ldi	r20, 0x01	; 1
    af08:	63 eb       	ldi	r22, 0xB3	; 179
    af0a:	76 e5       	ldi	r23, 0x56	; 86
    af0c:	87 e0       	ldi	r24, 0x07	; 7
    af0e:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,0);
    af12:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    af16:	82 37       	cpi	r24, 0x72	; 114
    af18:	59 f4       	brne	.+22     	; 0xaf30 <drawplayer2+0x60>
    af1a:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af1e:	81 50       	subi	r24, 0x01	; 1
    af20:	88 30       	cpi	r24, 0x08	; 8
    af22:	30 f4       	brcc	.+12     	; 0xaf30 <drawplayer2+0x60>
    af24:	40 e0       	ldi	r20, 0x00	; 0
    af26:	6b ea       	ldi	r22, 0xAB	; 171
    af28:	76 e5       	ldi	r23, 0x56	; 86
    af2a:	87 e0       	ldi	r24, 0x07	; 7
    af2c:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,0);    
    af30:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    af34:	82 37       	cpi	r24, 0x72	; 114
    af36:	59 f4       	brne	.+22     	; 0xaf4e <drawplayer2+0x7e>
    af38:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af3c:	89 50       	subi	r24, 0x09	; 9
    af3e:	88 30       	cpi	r24, 0x08	; 8
    af40:	30 f4       	brcc	.+12     	; 0xaf4e <drawplayer2+0x7e>
    af42:	40 e0       	ldi	r20, 0x00	; 0
    af44:	63 ea       	ldi	r22, 0xA3	; 163
    af46:	76 e5       	ldi	r23, 0x56	; 86
    af48:	87 e0       	ldi	r24, 0x07	; 7
    af4a:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,0);  
    af4e:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    af52:	82 37       	cpi	r24, 0x72	; 114
    af54:	59 f4       	brne	.+22     	; 0xaf6c <drawplayer2+0x9c>
    af56:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af5a:	81 51       	subi	r24, 0x11	; 17
    af5c:	88 30       	cpi	r24, 0x08	; 8
    af5e:	30 f4       	brcc	.+12     	; 0xaf6c <drawplayer2+0x9c>
    af60:	40 e0       	ldi	r20, 0x00	; 0
    af62:	63 e9       	ldi	r22, 0x93	; 147
    af64:	76 e5       	ldi	r23, 0x56	; 86
    af66:	87 e0       	ldi	r24, 0x07	; 7
    af68:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,1);
    af6c:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    af70:	8c 36       	cpi	r24, 0x6C	; 108
    af72:	59 f4       	brne	.+22     	; 0xaf8a <drawplayer2+0xba>
    af74:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af78:	81 50       	subi	r24, 0x01	; 1
    af7a:	88 30       	cpi	r24, 0x08	; 8
    af7c:	30 f4       	brcc	.+12     	; 0xaf8a <drawplayer2+0xba>
    af7e:	41 e0       	ldi	r20, 0x01	; 1
    af80:	6b ea       	ldi	r22, 0xAB	; 171
    af82:	76 e5       	ldi	r23, 0x56	; 86
    af84:	87 e0       	ldi	r24, 0x07	; 7
    af86:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,1);    
    af8a:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    af8e:	8c 36       	cpi	r24, 0x6C	; 108
    af90:	59 f4       	brne	.+22     	; 0xafa8 <drawplayer2+0xd8>
    af92:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    af96:	89 50       	subi	r24, 0x09	; 9
    af98:	88 30       	cpi	r24, 0x08	; 8
    af9a:	30 f4       	brcc	.+12     	; 0xafa8 <drawplayer2+0xd8>
    af9c:	41 e0       	ldi	r20, 0x01	; 1
    af9e:	63 ea       	ldi	r22, 0xA3	; 163
    afa0:	76 e5       	ldi	r23, 0x56	; 86
    afa2:	87 e0       	ldi	r24, 0x07	; 7
    afa4:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,1);  
    afa8:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    afac:	8c 36       	cpi	r24, 0x6C	; 108
    afae:	59 f4       	brne	.+22     	; 0xafc6 <drawplayer2+0xf6>
    afb0:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    afb4:	81 51       	subi	r24, 0x11	; 17
    afb6:	88 30       	cpi	r24, 0x08	; 8
    afb8:	a0 f4       	brcc	.+40     	; 0xafe2 <drawplayer2+0x112>
    afba:	41 e0       	ldi	r20, 0x01	; 1
    afbc:	63 e9       	ldi	r22, 0x93	; 147
    afbe:	76 e5       	ldi	r23, 0x56	; 86
    afc0:	87 e0       	ldi	r24, 0x07	; 7
    afc2:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
};

if (player2.direction == 'r' && player2.jumping == true  ) MapSprite2(spriteInd ,man3 ,0);   
    afc6:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    afca:	82 37       	cpi	r24, 0x72	; 114
    afcc:	51 f4       	brne	.+20     	; 0xafe2 <drawplayer2+0x112>
    afce:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <player2+0x10>
    afd2:	88 23       	and	r24, r24
    afd4:	31 f0       	breq	.+12     	; 0xafe2 <drawplayer2+0x112>
    afd6:	40 e0       	ldi	r20, 0x00	; 0
    afd8:	6b e9       	ldi	r22, 0x9B	; 155
    afda:	76 e5       	ldi	r23, 0x56	; 86
    afdc:	87 e0       	ldi	r24, 0x07	; 7
    afde:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if (player2.direction == 'l' && player2.jumping == true ) MapSprite2(spriteInd ,man3 ,1); 
    afe2:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xa>
    afe6:	8c 36       	cpi	r24, 0x6C	; 108
    afe8:	51 f4       	brne	.+20     	; 0xaffe <drawplayer2+0x12e>
    afea:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <player2+0x10>
    afee:	88 23       	and	r24, r24
    aff0:	31 f0       	breq	.+12     	; 0xaffe <drawplayer2+0x12e>
    aff2:	41 e0       	ldi	r20, 0x01	; 1
    aff4:	6b e9       	ldi	r22, 0x9B	; 155
    aff6:	76 e5       	ldi	r23, 0x56	; 86
    aff8:	87 e0       	ldi	r24, 0x07	; 7
    affa:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
if(player2.stuck == true)
    affe:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <player2+0x6>
    b002:	88 23       	and	r24, r24
    b004:	31 f0       	breq	.+12     	; 0xb012 <drawplayer2+0x142>
{
   MapSprite2(spriteInd ,man5 ,0);
    b006:	40 e0       	ldi	r20, 0x00	; 0
    b008:	6b e8       	ldi	r22, 0x8B	; 139
    b00a:	76 e5       	ldi	r23, 0x56	; 86
    b00c:	87 e0       	ldi	r24, 0x07	; 7
    b00e:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
}
MoveSprite(spriteInd ,player2.x -7 ,player2.y - 21  ,2 ,3);
    b012:	40 91 a2 09 	lds	r20, 0x09A2	; 0x8009a2 <player2+0x2>
    b016:	45 51       	subi	r20, 0x15	; 21
    b018:	60 91 a0 09 	lds	r22, 0x09A0	; 0x8009a0 <player2>
    b01c:	67 50       	subi	r22, 0x07	; 7
    b01e:	03 e0       	ldi	r16, 0x03	; 3
    b020:	22 e0       	ldi	r18, 0x02	; 2
    b022:	87 e0       	ldi	r24, 0x07	; 7
    b024:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
if ( player2.aniframe > 20 ) player2.aniframe = 0;     
    b028:	80 91 b4 09 	lds	r24, 0x09B4	; 0x8009b4 <player2+0x14>
    b02c:	85 31       	cpi	r24, 0x15	; 21
    b02e:	10 f0       	brcs	.+4      	; 0xb034 <drawplayer2+0x164>
    b030:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <player2+0x14>


}
    b034:	0f 91       	pop	r16
    b036:	08 95       	ret

0000b038 <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    b038:	ef 92       	push	r14
    b03a:	ff 92       	push	r15
    b03c:	1f 93       	push	r17
    b03e:	cf 93       	push	r28
    b040:	df 93       	push	r29
    b042:	cd b7       	in	r28, 0x3d	; 61
    b044:	de b7       	in	r29, 0x3e	; 62
    b046:	2a 97       	sbiw	r28, 0x0a	; 10
    b048:	0f b6       	in	r0, 0x3f	; 63
    b04a:	f8 94       	cli
    b04c:	de bf       	out	0x3e, r29	; 62
    b04e:	0f be       	out	0x3f, r0	; 63
    b050:	cd bf       	out	0x3d, r28	; 61
    b052:	18 2f       	mov	r17, r24
    b054:	fa 01       	movw	r30, r20
    b056:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    b058:	90 e2       	ldi	r25, 0x20	; 32
    b05a:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    b05c:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    b05e:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    b060:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    b062:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    b064:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    b066:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    b068:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    b06a:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    b06c:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    b06e:	4a e0       	ldi	r20, 0x0A	; 10
    b070:	be 01       	movw	r22, r28
    b072:	6f 5f       	subi	r22, 0xFF	; 255
    b074:	7f 4f       	sbci	r23, 0xFF	; 255
    b076:	cf 01       	movw	r24, r30
    b078:	0e 94 6f 6f 	call	0xdede	; 0xdede <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    b07c:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <lx+0x1>
    b080:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <lx>
    b084:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b088:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b08c:	86 30       	cpi	r24, 0x06	; 6
    b08e:	91 05       	cpc	r25, r1
    b090:	0c f0       	brlt	.+2      	; 0xb094 <printtileint+0x5c>
    b092:	f8 c0       	rjmp	.+496    	; 0xb284 <printtileint+0x24c>
    b094:	8e 15       	cp	r24, r14
    b096:	9f 05       	cpc	r25, r15
    b098:	0c f0       	brlt	.+2      	; 0xb09c <printtileint+0x64>
    b09a:	f4 c0       	rjmp	.+488    	; 0xb284 <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, nb ); 
    b09c:	43 e6       	ldi	r20, 0x63	; 99
    b09e:	56 e8       	ldi	r21, 0x86	; 134
    b0a0:	60 e2       	ldi	r22, 0x20	; 32
    b0a2:	81 0f       	add	r24, r17
    b0a4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,VRAM_TILES_V, n0 );  
    b0a8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b0ac:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b0b0:	e1 e0       	ldi	r30, 0x01	; 1
    b0b2:	f0 e0       	ldi	r31, 0x00	; 0
    b0b4:	ec 0f       	add	r30, r28
    b0b6:	fd 1f       	adc	r31, r29
    b0b8:	e8 0f       	add	r30, r24
    b0ba:	f9 1f       	adc	r31, r25
    b0bc:	20 81       	ld	r18, Z
    b0be:	20 33       	cpi	r18, 0x30	; 48
    b0c0:	31 f4       	brne	.+12     	; 0xb0ce <printtileint+0x96>
    b0c2:	40 e6       	ldi	r20, 0x60	; 96
    b0c4:	56 e8       	ldi	r21, 0x86	; 134
    b0c6:	60 e2       	ldi	r22, 0x20	; 32
    b0c8:	81 0f       	add	r24, r17
    b0ca:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,VRAM_TILES_V, n1 ); 
    b0ce:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b0d2:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b0d6:	e1 e0       	ldi	r30, 0x01	; 1
    b0d8:	f0 e0       	ldi	r31, 0x00	; 0
    b0da:	ec 0f       	add	r30, r28
    b0dc:	fd 1f       	adc	r31, r29
    b0de:	e8 0f       	add	r30, r24
    b0e0:	f9 1f       	adc	r31, r25
    b0e2:	20 81       	ld	r18, Z
    b0e4:	21 33       	cpi	r18, 0x31	; 49
    b0e6:	31 f4       	brne	.+12     	; 0xb0f4 <printtileint+0xbc>
    b0e8:	4d e5       	ldi	r20, 0x5D	; 93
    b0ea:	56 e8       	ldi	r21, 0x86	; 134
    b0ec:	60 e2       	ldi	r22, 0x20	; 32
    b0ee:	81 0f       	add	r24, r17
    b0f0:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,VRAM_TILES_V, n2 ); 
    b0f4:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b0f8:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b0fc:	e1 e0       	ldi	r30, 0x01	; 1
    b0fe:	f0 e0       	ldi	r31, 0x00	; 0
    b100:	ec 0f       	add	r30, r28
    b102:	fd 1f       	adc	r31, r29
    b104:	e8 0f       	add	r30, r24
    b106:	f9 1f       	adc	r31, r25
    b108:	20 81       	ld	r18, Z
    b10a:	22 33       	cpi	r18, 0x32	; 50
    b10c:	31 f4       	brne	.+12     	; 0xb11a <printtileint+0xe2>
    b10e:	4a e5       	ldi	r20, 0x5A	; 90
    b110:	56 e8       	ldi	r21, 0x86	; 134
    b112:	60 e2       	ldi	r22, 0x20	; 32
    b114:	81 0f       	add	r24, r17
    b116:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,VRAM_TILES_V, n3 ); 
    b11a:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b11e:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b122:	e1 e0       	ldi	r30, 0x01	; 1
    b124:	f0 e0       	ldi	r31, 0x00	; 0
    b126:	ec 0f       	add	r30, r28
    b128:	fd 1f       	adc	r31, r29
    b12a:	e8 0f       	add	r30, r24
    b12c:	f9 1f       	adc	r31, r25
    b12e:	20 81       	ld	r18, Z
    b130:	23 33       	cpi	r18, 0x33	; 51
    b132:	31 f4       	brne	.+12     	; 0xb140 <printtileint+0x108>
    b134:	47 e5       	ldi	r20, 0x57	; 87
    b136:	56 e8       	ldi	r21, 0x86	; 134
    b138:	60 e2       	ldi	r22, 0x20	; 32
    b13a:	81 0f       	add	r24, r17
    b13c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,VRAM_TILES_V, n4); 
    b140:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b144:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b148:	e1 e0       	ldi	r30, 0x01	; 1
    b14a:	f0 e0       	ldi	r31, 0x00	; 0
    b14c:	ec 0f       	add	r30, r28
    b14e:	fd 1f       	adc	r31, r29
    b150:	e8 0f       	add	r30, r24
    b152:	f9 1f       	adc	r31, r25
    b154:	20 81       	ld	r18, Z
    b156:	24 33       	cpi	r18, 0x34	; 52
    b158:	31 f4       	brne	.+12     	; 0xb166 <printtileint+0x12e>
    b15a:	44 e5       	ldi	r20, 0x54	; 84
    b15c:	56 e8       	ldi	r21, 0x86	; 134
    b15e:	60 e2       	ldi	r22, 0x20	; 32
    b160:	81 0f       	add	r24, r17
    b162:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,VRAM_TILES_V, n5 ); 
    b166:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b16a:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b16e:	e1 e0       	ldi	r30, 0x01	; 1
    b170:	f0 e0       	ldi	r31, 0x00	; 0
    b172:	ec 0f       	add	r30, r28
    b174:	fd 1f       	adc	r31, r29
    b176:	e8 0f       	add	r30, r24
    b178:	f9 1f       	adc	r31, r25
    b17a:	20 81       	ld	r18, Z
    b17c:	25 33       	cpi	r18, 0x35	; 53
    b17e:	31 f4       	brne	.+12     	; 0xb18c <printtileint+0x154>
    b180:	41 e5       	ldi	r20, 0x51	; 81
    b182:	56 e8       	ldi	r21, 0x86	; 134
    b184:	60 e2       	ldi	r22, 0x20	; 32
    b186:	81 0f       	add	r24, r17
    b188:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,VRAM_TILES_V, n6 ); 
    b18c:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b190:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b194:	e1 e0       	ldi	r30, 0x01	; 1
    b196:	f0 e0       	ldi	r31, 0x00	; 0
    b198:	ec 0f       	add	r30, r28
    b19a:	fd 1f       	adc	r31, r29
    b19c:	e8 0f       	add	r30, r24
    b19e:	f9 1f       	adc	r31, r25
    b1a0:	20 81       	ld	r18, Z
    b1a2:	26 33       	cpi	r18, 0x36	; 54
    b1a4:	31 f4       	brne	.+12     	; 0xb1b2 <printtileint+0x17a>
    b1a6:	4e e4       	ldi	r20, 0x4E	; 78
    b1a8:	56 e8       	ldi	r21, 0x86	; 134
    b1aa:	60 e2       	ldi	r22, 0x20	; 32
    b1ac:	81 0f       	add	r24, r17
    b1ae:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,VRAM_TILES_V, n7 ); 
    b1b2:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b1b6:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b1ba:	e1 e0       	ldi	r30, 0x01	; 1
    b1bc:	f0 e0       	ldi	r31, 0x00	; 0
    b1be:	ec 0f       	add	r30, r28
    b1c0:	fd 1f       	adc	r31, r29
    b1c2:	e8 0f       	add	r30, r24
    b1c4:	f9 1f       	adc	r31, r25
    b1c6:	20 81       	ld	r18, Z
    b1c8:	27 33       	cpi	r18, 0x37	; 55
    b1ca:	31 f4       	brne	.+12     	; 0xb1d8 <printtileint+0x1a0>
    b1cc:	4b e4       	ldi	r20, 0x4B	; 75
    b1ce:	56 e8       	ldi	r21, 0x86	; 134
    b1d0:	60 e2       	ldi	r22, 0x20	; 32
    b1d2:	81 0f       	add	r24, r17
    b1d4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,VRAM_TILES_V, n8 ); 
    b1d8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b1dc:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b1e0:	e1 e0       	ldi	r30, 0x01	; 1
    b1e2:	f0 e0       	ldi	r31, 0x00	; 0
    b1e4:	ec 0f       	add	r30, r28
    b1e6:	fd 1f       	adc	r31, r29
    b1e8:	e8 0f       	add	r30, r24
    b1ea:	f9 1f       	adc	r31, r25
    b1ec:	20 81       	ld	r18, Z
    b1ee:	28 33       	cpi	r18, 0x38	; 56
    b1f0:	31 f4       	brne	.+12     	; 0xb1fe <printtileint+0x1c6>
    b1f2:	48 e4       	ldi	r20, 0x48	; 72
    b1f4:	56 e8       	ldi	r21, 0x86	; 134
    b1f6:	60 e2       	ldi	r22, 0x20	; 32
    b1f8:	81 0f       	add	r24, r17
    b1fa:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,VRAM_TILES_V, n9 );
    b1fe:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b202:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b206:	e1 e0       	ldi	r30, 0x01	; 1
    b208:	f0 e0       	ldi	r31, 0x00	; 0
    b20a:	ec 0f       	add	r30, r28
    b20c:	fd 1f       	adc	r31, r29
    b20e:	e8 0f       	add	r30, r24
    b210:	f9 1f       	adc	r31, r25
    b212:	20 81       	ld	r18, Z
    b214:	29 33       	cpi	r18, 0x39	; 57
    b216:	31 f4       	brne	.+12     	; 0xb224 <printtileint+0x1ec>
    b218:	45 e4       	ldi	r20, 0x45	; 69
    b21a:	56 e8       	ldi	r21, 0x86	; 134
    b21c:	60 e2       	ldi	r22, 0x20	; 32
    b21e:	81 0f       	add	r24, r17
    b220:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,VRAM_TILES_V, nm );    
    b224:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b228:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b22c:	e1 e0       	ldi	r30, 0x01	; 1
    b22e:	f0 e0       	ldi	r31, 0x00	; 0
    b230:	ec 0f       	add	r30, r28
    b232:	fd 1f       	adc	r31, r29
    b234:	e8 0f       	add	r30, r24
    b236:	f9 1f       	adc	r31, r25
    b238:	20 81       	ld	r18, Z
    b23a:	2d 32       	cpi	r18, 0x2D	; 45
    b23c:	31 f4       	brne	.+12     	; 0xb24a <printtileint+0x212>
    b23e:	42 e4       	ldi	r20, 0x42	; 66
    b240:	56 e8       	ldi	r21, 0x86	; 134
    b242:	60 e2       	ldi	r22, 0x20	; 32
    b244:	81 0f       	add	r24, r17
    b246:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    b24a:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b24e:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b252:	e1 e0       	ldi	r30, 0x01	; 1
    b254:	f0 e0       	ldi	r31, 0x00	; 0
    b256:	ec 0f       	add	r30, r28
    b258:	fd 1f       	adc	r31, r29
    b25a:	e8 0f       	add	r30, r24
    b25c:	f9 1f       	adc	r31, r25
    b25e:	20 81       	ld	r18, Z
    b260:	20 32       	cpi	r18, 0x20	; 32
    b262:	31 f4       	brne	.+12     	; 0xb270 <printtileint+0x238>
    b264:	43 e6       	ldi	r20, 0x63	; 99
    b266:	56 e8       	ldi	r21, 0x86	; 134
    b268:	60 e2       	ldi	r22, 0x20	; 32
    b26a:	81 0f       	add	r24, r17
    b26c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    b270:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b274:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b278:	01 96       	adiw	r24, 0x01	; 1
    b27a:	90 93 02 0a 	sts	0x0A02, r25	; 0x800a02 <lx+0x1>
    b27e:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <lx>
    b282:	00 cf       	rjmp	.-512    	; 0xb084 <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    

};
    
}
    b284:	2a 96       	adiw	r28, 0x0a	; 10
    b286:	0f b6       	in	r0, 0x3f	; 63
    b288:	f8 94       	cli
    b28a:	de bf       	out	0x3e, r29	; 62
    b28c:	0f be       	out	0x3f, r0	; 63
    b28e:	cd bf       	out	0x3d, r28	; 61
    b290:	df 91       	pop	r29
    b292:	cf 91       	pop	r28
    b294:	1f 91       	pop	r17
    b296:	ff 90       	pop	r15
    b298:	ef 90       	pop	r14
    b29a:	08 95       	ret

0000b29c <initlevel>:

void initlevel()
{
    b29c:	e6 ec       	ldi	r30, 0xC6	; 198
    b29e:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    b2a0:	80 e0       	ldi	r24, 0x00	; 0
    b2a2:	90 e0       	ldi	r25, 0x00	; 0
    b2a4:	11 92       	st	Z+, r1
    b2a6:	11 92       	st	Z+, r1
    b2a8:	01 96       	adiw	r24, 0x01	; 1
    b2aa:	89 31       	cpi	r24, 0x19	; 25
    b2ac:	91 05       	cpc	r25, r1
    b2ae:	d1 f7       	brne	.-12     	; 0xb2a4 <initlevel+0x8>
    b2b0:	e5 e2       	ldi	r30, 0x25	; 37
    b2b2:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    b2b4:	80 e0       	ldi	r24, 0x00	; 0
    b2b6:	90 e0       	ldi	r25, 0x00	; 0
    b2b8:	11 82       	std	Z+1, r1	; 0x01
    b2ba:	10 82       	st	Z, r1
    b2bc:	12 82       	std	Z+2, r1	; 0x02
    b2be:	13 82       	std	Z+3, r1	; 0x03
    b2c0:	01 96       	adiw	r24, 0x01	; 1
    b2c2:	34 96       	adiw	r30, 0x04	; 4
    b2c4:	8c 30       	cpi	r24, 0x0C	; 12
    b2c6:	91 05       	cpc	r25, r1
    b2c8:	b9 f7       	brne	.-18     	; 0xb2b8 <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    b2ca:	10 92 02 0a 	sts	0x0A02, r1	; 0x800a02 <lx+0x1>
    b2ce:	10 92 01 0a 	sts	0x0A01, r1	; 0x800a01 <lx>
    b2d2:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b2d6:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b2da:	80 97       	sbiw	r24, 0x20	; 32
    b2dc:	2c f5       	brge	.+74     	; 0xb328 <initlevel+0x8c>
     		{
                for (  ly = 0; ly < 28; ly++ )
    b2de:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <ly+0x1>
    b2e2:	10 92 77 09 	sts	0x0977, r1	; 0x800977 <ly>
    b2e6:	60 91 77 09 	lds	r22, 0x0977	; 0x800977 <ly>
    b2ea:	70 91 78 09 	lds	r23, 0x0978	; 0x800978 <ly+0x1>
    b2ee:	6c 31       	cpi	r22, 0x1C	; 28
    b2f0:	71 05       	cpc	r23, r1
    b2f2:	84 f4       	brge	.+32     	; 0xb314 <initlevel+0x78>
                {
          	         DrawMap2(lx ,ly ,blue);
    b2f4:	4e ed       	ldi	r20, 0xDE	; 222
    b2f6:	56 e8       	ldi	r21, 0x86	; 134
    b2f8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b2fc:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    b300:	80 91 77 09 	lds	r24, 0x0977	; 0x800977 <ly>
    b304:	90 91 78 09 	lds	r25, 0x0978	; 0x800978 <ly+0x1>
    b308:	01 96       	adiw	r24, 0x01	; 1
    b30a:	90 93 78 09 	sts	0x0978, r25	; 0x800978 <ly+0x1>
    b30e:	80 93 77 09 	sts	0x0977, r24	; 0x800977 <ly>
    b312:	e9 cf       	rjmp	.-46     	; 0xb2e6 <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    b314:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    b318:	90 91 02 0a 	lds	r25, 0x0A02	; 0x800a02 <lx+0x1>
    b31c:	01 96       	adiw	r24, 0x01	; 1
    b31e:	90 93 02 0a 	sts	0x0A02, r25	; 0x800a02 <lx+0x1>
    b322:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <lx>
    b326:	d5 cf       	rjmp	.-86     	; 0xb2d2 <initlevel+0x36>
                for (  ly = 0; ly < 28; ly++ )
                {
          	         DrawMap2(lx ,ly ,blue);
                }
     		}
}
    b328:	08 95       	ret

0000b32a <makeBanana>:
if(destX>=32)destX=0; 
}


void makeBanana(int x, int y,int z)
{
    b32a:	0f 93       	push	r16
    b32c:	1f 93       	push	r17
    b32e:	cf 93       	push	r28
    b330:	df 93       	push	r29
if(banspwncnt < maxban)
    b332:	40 91 9a 08 	lds	r20, 0x089A	; 0x80089a <banspwncnt>
    b336:	50 91 9b 08 	lds	r21, 0x089B	; 0x80089b <banspwncnt+0x1>
    b33a:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <maxban>
    b33e:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <maxban+0x1>
    b342:	42 17       	cp	r20, r18
    b344:	53 07       	cpc	r21, r19
    b346:	0c f0       	brlt	.+2      	; 0xb34a <makeBanana+0x20>
    b348:	43 c0       	rjmp	.+134    	; 0xb3d0 <makeBanana+0xa6>
{
	int lx;
	int ly;
	lx = x + Levelx;
    b34a:	20 91 ff 09 	lds	r18, 0x09FF	; 0x8009ff <Levelx>
    b34e:	ec 01       	movw	r28, r24
    b350:	c2 0f       	add	r28, r18
    b352:	d1 1d       	adc	r29, r1
	ly = y;
	lx = lx >> 4;
	ly = ly >> 4;  
    b354:	8b 01       	movw	r16, r22
    b356:	54 e0       	ldi	r21, 0x04	; 4
    b358:	15 95       	asr	r17
    b35a:	07 95       	ror	r16
    b35c:	5a 95       	dec	r21
    b35e:	e1 f7       	brne	.-8      	; 0xb358 <makeBanana+0x2e>
	lx = lx * 2 + destX;
    b360:	64 e0       	ldi	r22, 0x04	; 4
    b362:	d5 95       	asr	r29
    b364:	c7 95       	ror	r28
    b366:	6a 95       	dec	r22
    b368:	e1 f7       	brne	.-8      	; 0xb362 <makeBanana+0x38>
    b36a:	cc 0f       	add	r28, r28
    b36c:	dd 1f       	adc	r29, r29
    b36e:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    b372:	c8 0f       	add	r28, r24
    b374:	d1 1d       	adc	r29, r1
	if (lx >= 32 ) lx = lx - 32;
    b376:	c0 32       	cpi	r28, 0x20	; 32
    b378:	d1 05       	cpc	r29, r1
    b37a:	0c f0       	brlt	.+2      	; 0xb37e <makeBanana+0x54>
    b37c:	a0 97       	sbiw	r28, 0x20	; 32
	DrawMap2(  (lx - 2)    ,  ly *  2    ,banana );
    b37e:	60 2f       	mov	r22, r16
    b380:	66 0f       	add	r22, r22
    b382:	45 ee       	ldi	r20, 0xE5	; 229
    b384:	56 e8       	ldi	r21, 0x86	; 134
    b386:	8c 2f       	mov	r24, r28
    b388:	82 50       	subi	r24, 0x02	; 2
    b38a:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
	bananax = (lx - 2);
    b38e:	22 97       	sbiw	r28, 0x02	; 2
    b390:	d0 93 c3 09 	sts	0x09C3, r29	; 0x8009c3 <bananax+0x1>
    b394:	c0 93 c2 09 	sts	0x09C2, r28	; 0x8009c2 <bananax>
	bananay = ly * 2;
    b398:	00 0f       	add	r16, r16
    b39a:	11 1f       	adc	r17, r17
    b39c:	10 93 7b 09 	sts	0x097B, r17	; 0x80097b <bananay+0x1>
    b3a0:	00 93 7a 09 	sts	0x097A, r16	; 0x80097a <bananay>
	bananaxs[banspwncnt] = bananax;
    b3a4:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <banspwncnt>
    b3a8:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <banspwncnt+0x1>
    b3ac:	9c 01       	movw	r18, r24
    b3ae:	22 0f       	add	r18, r18
    b3b0:	33 1f       	adc	r19, r19
    b3b2:	f9 01       	movw	r30, r18
    b3b4:	e2 58       	subi	r30, 0x82	; 130
    b3b6:	f6 4f       	sbci	r31, 0xF6	; 246
    b3b8:	d1 83       	std	Z+1, r29	; 0x01
    b3ba:	c0 83       	st	Z, r28
	bananays[banspwncnt] = bananay;
    b3bc:	f9 01       	movw	r30, r18
    b3be:	e2 57       	subi	r30, 0x72	; 114
    b3c0:	f6 4f       	sbci	r31, 0xF6	; 246
    b3c2:	11 83       	std	Z+1, r17	; 0x01
    b3c4:	00 83       	st	Z, r16
	banspwncnt = banspwncnt + 1;
    b3c6:	01 96       	adiw	r24, 0x01	; 1
    b3c8:	90 93 9b 08 	sts	0x089B, r25	; 0x80089b <banspwncnt+0x1>
    b3cc:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <banspwncnt>
}
}
    b3d0:	df 91       	pop	r29
    b3d2:	cf 91       	pop	r28
    b3d4:	1f 91       	pop	r17
    b3d6:	0f 91       	pop	r16
    b3d8:	08 95       	ret

0000b3da <checkBanana>:
int checkBanana(int x,int y,int z)
{
    b3da:	0f 93       	push	r16
    b3dc:	1f 93       	push	r17
    b3de:	cf 93       	push	r28
    b3e0:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    b3e2:	20 91 ff 09 	lds	r18, 0x09FF	; 0x8009ff <Levelx>
    b3e6:	82 0f       	add	r24, r18
    b3e8:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
lx = lx * 2 + destX;
    b3ea:	ec 01       	movw	r28, r24
    b3ec:	34 e0       	ldi	r19, 0x04	; 4
    b3ee:	d5 95       	asr	r29
    b3f0:	c7 95       	ror	r28
    b3f2:	3a 95       	dec	r19
    b3f4:	e1 f7       	brne	.-8      	; 0xb3ee <checkBanana+0x14>
    b3f6:	cc 0f       	add	r28, r28
    b3f8:	dd 1f       	adc	r29, r29
    b3fa:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    b3fe:	c8 0f       	add	r28, r24
    b400:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    b402:	c0 32       	cpi	r28, 0x20	; 32
    b404:	d1 05       	cpc	r29, r1
    b406:	0c f0       	brlt	.+2      	; 0xb40a <checkBanana+0x30>
    b408:	a0 97       	sbiw	r28, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
for(int i = 0; i < banspwncnt; i++)
    b40a:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <banspwncnt>
    b40e:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <banspwncnt+0x1>
    b412:	18 16       	cp	r1, r24
    b414:	19 06       	cpc	r1, r25
    b416:	0c f0       	brlt	.+2      	; 0xb41a <checkBanana+0x40>
    b418:	4a c0       	rjmp	.+148    	; 0xb4ae <checkBanana+0xd4>
{
	if(bananaxs[i] == lx && bananays[i] == (ly *  2) -2)
    b41a:	80 91 7e 09 	lds	r24, 0x097E	; 0x80097e <bananaxs>
    b41e:	90 91 7f 09 	lds	r25, 0x097F	; 0x80097f <bananaxs+0x1>
    b422:	c8 17       	cp	r28, r24
    b424:	d9 07       	cpc	r29, r25
    b426:	09 f0       	breq	.+2      	; 0xb42a <checkBanana+0x50>
    b428:	43 c0       	rjmp	.+134    	; 0xb4b0 <checkBanana+0xd6>
int lx;
int ly;
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    b42a:	8b 01       	movw	r16, r22
    b42c:	84 e0       	ldi	r24, 0x04	; 4
    b42e:	15 95       	asr	r17
    b430:	07 95       	ror	r16
    b432:	8a 95       	dec	r24
    b434:	e1 f7       	brne	.-8      	; 0xb42e <checkBanana+0x54>
lx = lx * 2 + destX;
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
for(int i = 0; i < banspwncnt; i++)
{
	if(bananaxs[i] == lx && bananays[i] == (ly *  2) -2)
    b436:	b8 01       	movw	r22, r16
    b438:	61 50       	subi	r22, 0x01	; 1
    b43a:	71 09       	sbc	r23, r1
    b43c:	cb 01       	movw	r24, r22
    b43e:	88 0f       	add	r24, r24
    b440:	99 1f       	adc	r25, r25
    b442:	20 91 8e 09 	lds	r18, 0x098E	; 0x80098e <bananays>
    b446:	30 91 8f 09 	lds	r19, 0x098F	; 0x80098f <bananays+0x1>
    b44a:	28 17       	cp	r18, r24
    b44c:	39 07       	cpc	r19, r25
    b44e:	81 f5       	brne	.+96     	; 0xb4b0 <checkBanana+0xd6>
	{ 
        DrawMap2(  lx    ,  (ly *  2) -2,bigblue0 ); 
    b450:	66 0f       	add	r22, r22
    b452:	4d e4       	ldi	r20, 0x4D	; 77
    b454:	57 e8       	ldi	r21, 0x87	; 135
    b456:	8c 2f       	mov	r24, r28
    b458:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
	DrawMap2(  lx    ,  (ly *  2) -1,banana2 );
    b45c:	60 2f       	mov	r22, r16
    b45e:	66 0f       	add	r22, r22
    b460:	61 50       	subi	r22, 0x01	; 1
    b462:	41 ee       	ldi	r20, 0xE1	; 225
    b464:	56 e8       	ldi	r21, 0x86	; 134
    b466:	8c 2f       	mov	r24, r28
    b468:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        for(int j = i; j < banspwncnt - 1; j++)
    b46c:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <banspwncnt>
    b470:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <banspwncnt+0x1>
    b474:	01 97       	sbiw	r24, 0x01	; 1
    b476:	ee e7       	ldi	r30, 0x7E	; 126
    b478:	f9 e0       	ldi	r31, 0x09	; 9
    b47a:	ae e8       	ldi	r26, 0x8E	; 142
    b47c:	b9 e0       	ldi	r27, 0x09	; 9
    b47e:	20 e0       	ldi	r18, 0x00	; 0
    b480:	30 e0       	ldi	r19, 0x00	; 0
    b482:	28 17       	cp	r18, r24
    b484:	39 07       	cpc	r19, r25
    b486:	6c f4       	brge	.+26     	; 0xb4a2 <checkBanana+0xc8>
	{
	bananaxs[j] = bananaxs[j + 1];
    b488:	2f 5f       	subi	r18, 0xFF	; 255
    b48a:	3f 4f       	sbci	r19, 0xFF	; 255
    b48c:	42 81       	ldd	r20, Z+2	; 0x02
    b48e:	53 81       	ldd	r21, Z+3	; 0x03
    b490:	41 93       	st	Z+, r20
    b492:	51 93       	st	Z+, r21
	bananays[j] = bananays[j + 1];
    b494:	12 96       	adiw	r26, 0x02	; 2
    b496:	4d 91       	ld	r20, X+
    b498:	5c 91       	ld	r21, X
    b49a:	13 97       	sbiw	r26, 0x03	; 3
    b49c:	4d 93       	st	X+, r20
    b49e:	5d 93       	st	X+, r21
    b4a0:	f0 cf       	rjmp	.-32     	; 0xb482 <checkBanana+0xa8>
	}
	banspwncnt = banspwncnt - 1;
    b4a2:	90 93 9b 08 	sts	0x089B, r25	; 0x80089b <banspwncnt+0x1>
    b4a6:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <banspwncnt>
	return 1;
    b4aa:	81 e0       	ldi	r24, 0x01	; 1
    b4ac:	02 c0       	rjmp	.+4      	; 0xb4b2 <checkBanana+0xd8>
	}
	else{
	return 0;
	}
}
}
    b4ae:	02 c0       	rjmp	.+4      	; 0xb4b4 <checkBanana+0xda>
	}
	banspwncnt = banspwncnt - 1;
	return 1;
	}
	else{
	return 0;
    b4b0:	80 e0       	ldi	r24, 0x00	; 0
    b4b2:	90 e0       	ldi	r25, 0x00	; 0
	}
}
}
    b4b4:	df 91       	pop	r29
    b4b6:	cf 91       	pop	r28
    b4b8:	1f 91       	pop	r17
    b4ba:	0f 91       	pop	r16
    b4bc:	08 95       	ret

0000b4be <printheadline>:
if (bl > 0 && bl <= 20 ) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b4be:	4c e3       	ldi	r20, 0x3C	; 60
    b4c0:	56 e8       	ldi	r21, 0x86	; 134
    b4c2:	60 e2       	ldi	r22, 0x20	; 32
    b4c4:	80 e0       	ldi	r24, 0x00	; 0
    b4c6:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
printtileint( 4 ,0,score,4);
    b4ca:	40 91 7c 09 	lds	r20, 0x097C	; 0x80097c <score>
    b4ce:	50 91 7d 09 	lds	r21, 0x097D	; 0x80097d <score+0x1>
    b4d2:	24 e0       	ldi	r18, 0x04	; 4
    b4d4:	30 e0       	ldi	r19, 0x00	; 0
    b4d6:	60 e0       	ldi	r22, 0x00	; 0
    b4d8:	70 e0       	ldi	r23, 0x00	; 0
    b4da:	84 e0       	ldi	r24, 0x04	; 4
    b4dc:	90 e0       	ldi	r25, 0x00	; 0
    b4de:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b4e2:	4f e1       	ldi	r20, 0x1F	; 31
    b4e4:	56 e8       	ldi	r21, 0x86	; 134
    b4e6:	60 e2       	ldi	r22, 0x20	; 32
    b4e8:	8b e0       	ldi	r24, 0x0B	; 11
    b4ea:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
printtileint( 14 ,0,lives,1);  
    b4ee:	40 91 b5 09 	lds	r20, 0x09B5	; 0x8009b5 <lives>
    b4f2:	50 e0       	ldi	r21, 0x00	; 0
    b4f4:	21 e0       	ldi	r18, 0x01	; 1
    b4f6:	30 e0       	ldi	r19, 0x00	; 0
    b4f8:	60 e0       	ldi	r22, 0x00	; 0
    b4fa:	70 e0       	ldi	r23, 0x00	; 0
    b4fc:	8e e0       	ldi	r24, 0x0E	; 14
    b4fe:	90 e0       	ldi	r25, 0x00	; 0
    b500:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
DrawMap2(16,VRAM_TILES_V, level0 ); 
    b504:	40 e3       	ldi	r20, 0x30	; 48
    b506:	56 e8       	ldi	r21, 0x86	; 134
    b508:	60 e2       	ldi	r22, 0x20	; 32
    b50a:	80 e1       	ldi	r24, 0x10	; 16
    b50c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
printtileint( 20 ,0, level,1);  
    b510:	40 91 8c 09 	lds	r20, 0x098C	; 0x80098c <level>
    b514:	50 e0       	ldi	r21, 0x00	; 0
    b516:	21 e0       	ldi	r18, 0x01	; 1
    b518:	30 e0       	ldi	r19, 0x00	; 0
    b51a:	60 e0       	ldi	r22, 0x00	; 0
    b51c:	70 e0       	ldi	r23, 0x00	; 0
    b51e:	84 e1       	ldi	r24, 0x14	; 20
    b520:	90 e0       	ldi	r25, 0x00	; 0
    b522:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
DrawMap2(23,VRAM_TILES_V, time0 );
    b526:	4a e1       	ldi	r20, 0x1A	; 26
    b528:	56 e8       	ldi	r21, 0x86	; 134
    b52a:	60 e2       	ldi	r22, 0x20	; 32
    b52c:	87 e1       	ldi	r24, 0x17	; 23
    b52e:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    b532:	40 91 fc 09 	lds	r20, 0x09FC	; 0x8009fc <leveltime>
    b536:	50 e0       	ldi	r21, 0x00	; 0
    b538:	22 e0       	ldi	r18, 0x02	; 2
    b53a:	30 e0       	ldi	r19, 0x00	; 0
    b53c:	60 e0       	ldi	r22, 0x00	; 0
    b53e:	70 e0       	ldi	r23, 0x00	; 0
    b540:	8a e1       	ldi	r24, 0x1A	; 26
    b542:	90 e0       	ldi	r25, 0x00	; 0
    b544:	0c 94 1c 58 	jmp	0xb038	; 0xb038 <printtileint>

0000b548 <printheadlineintro>:
}
void printheadlineintro()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b548:	4c e3       	ldi	r20, 0x3C	; 60
    b54a:	56 e8       	ldi	r21, 0x86	; 134
    b54c:	60 e2       	ldi	r22, 0x20	; 32
    b54e:	80 e0       	ldi	r24, 0x00	; 0
    b550:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
printtileint( 4 ,0,score,4);
    b554:	40 91 7c 09 	lds	r20, 0x097C	; 0x80097c <score>
    b558:	50 91 7d 09 	lds	r21, 0x097D	; 0x80097d <score+0x1>
    b55c:	24 e0       	ldi	r18, 0x04	; 4
    b55e:	30 e0       	ldi	r19, 0x00	; 0
    b560:	60 e0       	ldi	r22, 0x00	; 0
    b562:	70 e0       	ldi	r23, 0x00	; 0
    b564:	84 e0       	ldi	r24, 0x04	; 4
    b566:	90 e0       	ldi	r25, 0x00	; 0
    b568:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b56c:	4f e1       	ldi	r20, 0x1F	; 31
    b56e:	56 e8       	ldi	r21, 0x86	; 134
    b570:	60 e2       	ldi	r22, 0x20	; 32
    b572:	8b e0       	ldi	r24, 0x0B	; 11
    b574:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>

DrawMap2(16,VRAM_TILES_V, level0 ); 
    b578:	40 e3       	ldi	r20, 0x30	; 48
    b57a:	56 e8       	ldi	r21, 0x86	; 134
    b57c:	60 e2       	ldi	r22, 0x20	; 32
    b57e:	80 e1       	ldi	r24, 0x10	; 16
    b580:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
  
DrawMap2(23,VRAM_TILES_V, time0 );
    b584:	4a e1       	ldi	r20, 0x1A	; 26
    b586:	56 e8       	ldi	r21, 0x86	; 134
    b588:	60 e2       	ldi	r22, 0x20	; 32
    b58a:	87 e1       	ldi	r24, 0x17	; 23
    b58c:	0c 94 c2 55 	jmp	0xab84	; 0xab84 <DrawMap>

0000b590 <updatepoints>:

}
void updatepoints()
{
if (introplaying) return;
    b590:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    b594:	81 11       	cpse	r24, r1
    b596:	0c c0       	rjmp	.+24     	; 0xb5b0 <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    b598:	40 91 7c 09 	lds	r20, 0x097C	; 0x80097c <score>
    b59c:	50 91 7d 09 	lds	r21, 0x097D	; 0x80097d <score+0x1>
    b5a0:	24 e0       	ldi	r18, 0x04	; 4
    b5a2:	30 e0       	ldi	r19, 0x00	; 0
    b5a4:	60 e0       	ldi	r22, 0x00	; 0
    b5a6:	70 e0       	ldi	r23, 0x00	; 0
    b5a8:	84 e0       	ldi	r24, 0x04	; 4
    b5aa:	90 e0       	ldi	r25, 0x00	; 0
    b5ac:	0c 94 1c 58 	jmp	0xb038	; 0xb038 <printtileint>
    b5b0:	08 95       	ret

0000b5b2 <checkcollide>:
	return 0;
	}
}
}
int checkcollide(int x, int y,int z)
{
    b5b2:	af 92       	push	r10
    b5b4:	bf 92       	push	r11
    b5b6:	cf 92       	push	r12
    b5b8:	df 92       	push	r13
    b5ba:	ef 92       	push	r14
    b5bc:	ff 92       	push	r15
    b5be:	0f 93       	push	r16
    b5c0:	1f 93       	push	r17
    b5c2:	cf 93       	push	r28
    b5c4:	df 93       	push	r29
    b5c6:	6c 01       	movw	r12, r24
    b5c8:	5b 01       	movw	r10, r22
int lx;
int ly;
char bl;
lx = x + Levelx;
    b5ca:	90 91 ff 09 	lds	r25, 0x09FF	; 0x8009ff <Levelx>
    b5ce:	86 01       	movw	r16, r12
    b5d0:	09 0f       	add	r16, r25
    b5d2:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    b5d4:	84 e0       	ldi	r24, 0x04	; 4
    b5d6:	15 95       	asr	r17
    b5d8:	07 95       	ror	r16
    b5da:	8a 95       	dec	r24
    b5dc:	e1 f7       	brne	.-8      	; 0xb5d6 <checkcollide+0x24>
ly = ly >> 4;  
    b5de:	7b 01       	movw	r14, r22
    b5e0:	24 e0       	ldi	r18, 0x04	; 4
    b5e2:	f5 94       	asr	r15
    b5e4:	e7 94       	ror	r14
    b5e6:	2a 95       	dec	r18
    b5e8:	e1 f7       	brne	.-8      	; 0xb5e2 <checkcollide+0x30>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b5ea:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <level>
    b5ee:	81 11       	cpse	r24, r1
    b5f0:	0f c0       	rjmp	.+30     	; 0xb610 <checkcollide+0x5e>
    b5f2:	8a e5       	ldi	r24, 0x5A	; 90
    b5f4:	8e 9d       	mul	r24, r14
    b5f6:	f0 01       	movw	r30, r0
    b5f8:	8f 9d       	mul	r24, r15
    b5fa:	f0 0d       	add	r31, r0
    b5fc:	11 24       	eor	r1, r1
    b5fe:	e0 0f       	add	r30, r16
    b600:	f1 1f       	adc	r31, r17
    b602:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b606:	e8 0f       	add	r30, r24
    b608:	f1 1d       	adc	r31, r1
    b60a:	e1 58       	subi	r30, 0x81	; 129
    b60c:	fa 4c       	sbci	r31, 0xCA	; 202
    b60e:	98 c0       	rjmp	.+304    	; 0xb740 <checkcollide+0x18e>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b610:	81 30       	cpi	r24, 0x01	; 1
    b612:	79 f4       	brne	.+30     	; 0xb632 <checkcollide+0x80>
    b614:	8a e5       	ldi	r24, 0x5A	; 90
    b616:	8e 9d       	mul	r24, r14
    b618:	f0 01       	movw	r30, r0
    b61a:	8f 9d       	mul	r24, r15
    b61c:	f0 0d       	add	r31, r0
    b61e:	11 24       	eor	r1, r1
    b620:	e0 0f       	add	r30, r16
    b622:	f1 1f       	adc	r31, r17
    b624:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b628:	e8 0f       	add	r30, r24
    b62a:	f1 1d       	adc	r31, r1
    b62c:	ed 56       	subi	r30, 0x6D	; 109
    b62e:	ff 4c       	sbci	r31, 0xCF	; 207
    b630:	87 c0       	rjmp	.+270    	; 0xb740 <checkcollide+0x18e>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b632:	82 30       	cpi	r24, 0x02	; 2
    b634:	79 f4       	brne	.+30     	; 0xb654 <checkcollide+0xa2>
    b636:	8a e5       	ldi	r24, 0x5A	; 90
    b638:	8e 9d       	mul	r24, r14
    b63a:	f0 01       	movw	r30, r0
    b63c:	8f 9d       	mul	r24, r15
    b63e:	f0 0d       	add	r31, r0
    b640:	11 24       	eor	r1, r1
    b642:	e0 0f       	add	r30, r16
    b644:	f1 1f       	adc	r31, r17
    b646:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b64a:	e8 0f       	add	r30, r24
    b64c:	f1 1d       	adc	r31, r1
    b64e:	e9 55       	subi	r30, 0x59	; 89
    b650:	f4 4d       	sbci	r31, 0xD4	; 212
    b652:	76 c0       	rjmp	.+236    	; 0xb740 <checkcollide+0x18e>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b654:	83 30       	cpi	r24, 0x03	; 3
    b656:	79 f4       	brne	.+30     	; 0xb676 <checkcollide+0xc4>
    b658:	8a e5       	ldi	r24, 0x5A	; 90
    b65a:	8e 9d       	mul	r24, r14
    b65c:	f0 01       	movw	r30, r0
    b65e:	8f 9d       	mul	r24, r15
    b660:	f0 0d       	add	r31, r0
    b662:	11 24       	eor	r1, r1
    b664:	e0 0f       	add	r30, r16
    b666:	f1 1f       	adc	r31, r17
    b668:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b66c:	e8 0f       	add	r30, r24
    b66e:	f1 1d       	adc	r31, r1
    b670:	e5 54       	subi	r30, 0x45	; 69
    b672:	f9 4d       	sbci	r31, 0xD9	; 217
    b674:	65 c0       	rjmp	.+202    	; 0xb740 <checkcollide+0x18e>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b676:	84 30       	cpi	r24, 0x04	; 4
    b678:	79 f4       	brne	.+30     	; 0xb698 <checkcollide+0xe6>
    b67a:	8a e5       	ldi	r24, 0x5A	; 90
    b67c:	8e 9d       	mul	r24, r14
    b67e:	f0 01       	movw	r30, r0
    b680:	8f 9d       	mul	r24, r15
    b682:	f0 0d       	add	r31, r0
    b684:	11 24       	eor	r1, r1
    b686:	e0 0f       	add	r30, r16
    b688:	f1 1f       	adc	r31, r17
    b68a:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b68e:	e8 0f       	add	r30, r24
    b690:	f1 1d       	adc	r31, r1
    b692:	e1 53       	subi	r30, 0x31	; 49
    b694:	fe 4d       	sbci	r31, 0xDE	; 222
    b696:	54 c0       	rjmp	.+168    	; 0xb740 <checkcollide+0x18e>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b698:	85 30       	cpi	r24, 0x05	; 5
    b69a:	79 f4       	brne	.+30     	; 0xb6ba <checkcollide+0x108>
    b69c:	8a e5       	ldi	r24, 0x5A	; 90
    b69e:	8e 9d       	mul	r24, r14
    b6a0:	f0 01       	movw	r30, r0
    b6a2:	8f 9d       	mul	r24, r15
    b6a4:	f0 0d       	add	r31, r0
    b6a6:	11 24       	eor	r1, r1
    b6a8:	e0 0f       	add	r30, r16
    b6aa:	f1 1f       	adc	r31, r17
    b6ac:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b6b0:	e8 0f       	add	r30, r24
    b6b2:	f1 1d       	adc	r31, r1
    b6b4:	ed 51       	subi	r30, 0x1D	; 29
    b6b6:	f3 4e       	sbci	r31, 0xE3	; 227
    b6b8:	43 c0       	rjmp	.+134    	; 0xb740 <checkcollide+0x18e>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b6ba:	86 30       	cpi	r24, 0x06	; 6
    b6bc:	79 f4       	brne	.+30     	; 0xb6dc <checkcollide+0x12a>
    b6be:	8a e5       	ldi	r24, 0x5A	; 90
    b6c0:	8e 9d       	mul	r24, r14
    b6c2:	f0 01       	movw	r30, r0
    b6c4:	8f 9d       	mul	r24, r15
    b6c6:	f0 0d       	add	r31, r0
    b6c8:	11 24       	eor	r1, r1
    b6ca:	e0 0f       	add	r30, r16
    b6cc:	f1 1f       	adc	r31, r17
    b6ce:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b6d2:	e8 0f       	add	r30, r24
    b6d4:	f1 1d       	adc	r31, r1
    b6d6:	e9 50       	subi	r30, 0x09	; 9
    b6d8:	f8 4e       	sbci	r31, 0xE8	; 232
    b6da:	32 c0       	rjmp	.+100    	; 0xb740 <checkcollide+0x18e>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b6dc:	87 30       	cpi	r24, 0x07	; 7
    b6de:	79 f4       	brne	.+30     	; 0xb6fe <checkcollide+0x14c>
    b6e0:	8a e5       	ldi	r24, 0x5A	; 90
    b6e2:	8e 9d       	mul	r24, r14
    b6e4:	f0 01       	movw	r30, r0
    b6e6:	8f 9d       	mul	r24, r15
    b6e8:	f0 0d       	add	r31, r0
    b6ea:	11 24       	eor	r1, r1
    b6ec:	e0 0f       	add	r30, r16
    b6ee:	f1 1f       	adc	r31, r17
    b6f0:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b6f4:	e8 0f       	add	r30, r24
    b6f6:	f1 1d       	adc	r31, r1
    b6f8:	e5 5f       	subi	r30, 0xF5	; 245
    b6fa:	fc 4e       	sbci	r31, 0xEC	; 236
    b6fc:	21 c0       	rjmp	.+66     	; 0xb740 <checkcollide+0x18e>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b6fe:	88 30       	cpi	r24, 0x08	; 8
    b700:	79 f4       	brne	.+30     	; 0xb720 <checkcollide+0x16e>
    b702:	8a e5       	ldi	r24, 0x5A	; 90
    b704:	8e 9d       	mul	r24, r14
    b706:	f0 01       	movw	r30, r0
    b708:	8f 9d       	mul	r24, r15
    b70a:	f0 0d       	add	r31, r0
    b70c:	11 24       	eor	r1, r1
    b70e:	e0 0f       	add	r30, r16
    b710:	f1 1f       	adc	r31, r17
    b712:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b716:	e8 0f       	add	r30, r24
    b718:	f1 1d       	adc	r31, r1
    b71a:	e1 5e       	subi	r30, 0xE1	; 225
    b71c:	f1 4f       	sbci	r31, 0xF1	; 241
    b71e:	10 c0       	rjmp	.+32     	; 0xb740 <checkcollide+0x18e>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b720:	89 30       	cpi	r24, 0x09	; 9
    b722:	79 f4       	brne	.+30     	; 0xb742 <checkcollide+0x190>
    b724:	8a e5       	ldi	r24, 0x5A	; 90
    b726:	8e 9d       	mul	r24, r14
    b728:	f0 01       	movw	r30, r0
    b72a:	8f 9d       	mul	r24, r15
    b72c:	f0 0d       	add	r31, r0
    b72e:	11 24       	eor	r1, r1
    b730:	e0 0f       	add	r30, r16
    b732:	f1 1f       	adc	r31, r17
    b734:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    b738:	e8 0f       	add	r30, r24
    b73a:	f1 1d       	adc	r31, r1
    b73c:	ed 5c       	subi	r30, 0xCD	; 205
    b73e:	f6 4f       	sbci	r31, 0xF6	; 246
    b740:	c4 91       	lpm	r28, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    b742:	ca 31       	cpi	r28, 0x1A	; 26
    b744:	11 f0       	breq	.+4      	; 0xb74a <checkcollide+0x198>
    b746:	cc 31       	cpi	r28, 0x1C	; 28
    b748:	19 f4       	brne	.+6      	; 0xb750 <checkcollide+0x19e>
    b74a:	81 e0       	ldi	r24, 0x01	; 1
    b74c:	80 93 fa 09 	sts	0x09FA, r24	; 0x8009fa <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) { 
    b750:	83 ee       	ldi	r24, 0xE3	; 227
    b752:	8c 0f       	add	r24, r28
    b754:	82 30       	cpi	r24, 0x02	; 2
    b756:	18 f5       	brcc	.+70     	; 0xb79e <checkcollide+0x1ec>
    b758:	43 30       	cpi	r20, 0x03	; 3
    b75a:	51 05       	cpc	r21, r1
    b75c:	09 f0       	breq	.+2      	; 0xb760 <checkcollide+0x1ae>
    b75e:	ea c0       	rjmp	.+468    	; 0xb934 <checkcollide+0x382>
    b760:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <play>
    b764:	88 23       	and	r24, r24
    b766:	09 f4       	brne	.+2      	; 0xb76a <checkcollide+0x1b8>
    b768:	fd c0       	rjmp	.+506    	; 0xb964 <checkcollide+0x3b2>
    died = true;
    b76a:	81 e0       	ldi	r24, 0x01	; 1
    b76c:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <died>
    lives--;    
    b770:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    b774:	81 50       	subi	r24, 0x01	; 1
    b776:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
    isplaying = false; 
    b77a:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    b77e:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    bonus = 0;  
    b782:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    b786:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
    TriggerFx(9,0xff,true);
    b78a:	41 e0       	ldi	r20, 0x01	; 1
    b78c:	6f ef       	ldi	r22, 0xFF	; 255
    b78e:	89 e0       	ldi	r24, 0x09	; 9
    b790:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240);     
    b794:	80 ef       	ldi	r24, 0xF0	; 240
    b796:	90 e0       	ldi	r25, 0x00	; 0
    b798:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    b79c:	e3 c0       	rjmp	.+454    	; 0xb964 <checkcollide+0x3b2>
};
    
    
if (bl == 41 && z == 1 ) { 
    b79e:	c9 32       	cpi	r28, 0x29	; 41
    b7a0:	09 f0       	breq	.+2      	; 0xb7a4 <checkcollide+0x1f2>
    b7a2:	69 c0       	rjmp	.+210    	; 0xb876 <checkcollide+0x2c4>
    b7a4:	41 30       	cpi	r20, 0x01	; 1
    b7a6:	51 05       	cpc	r21, r1
    b7a8:	09 f0       	breq	.+2      	; 0xb7ac <checkcollide+0x1fa>
    b7aa:	d5 c1       	rjmp	.+938    	; 0xbb56 <checkcollide+0x5a4>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b7ac:	2a e5       	ldi	r18, 0x5A	; 90
    b7ae:	2e 9d       	mul	r18, r14
    b7b0:	c0 01       	movw	r24, r0
    b7b2:	2f 9d       	mul	r18, r15
    b7b4:	90 0d       	add	r25, r0
    b7b6:	11 24       	eor	r1, r1
    b7b8:	80 0f       	add	r24, r16
    b7ba:	91 1f       	adc	r25, r17
    b7bc:	20 91 06 0a 	lds	r18, 0x0A06	; 0x800a06 <scrolltiles>
    b7c0:	82 0f       	add	r24, r18
    b7c2:	91 1d       	adc	r25, r1
    b7c4:	90 93 c5 09 	sts	0x09C5, r25	; 0x8009c5 <dp+0x1>
    b7c8:	80 93 c4 09 	sts	0x09C4, r24	; 0x8009c4 <dp>
    b7cc:	e6 ec       	ldi	r30, 0xC6	; 198
    b7ce:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b7d0:	c1 2c       	mov	r12, r1
    b7d2:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b7d4:	21 91       	ld	r18, Z+
    b7d6:	31 91       	ld	r19, Z+
    b7d8:	82 17       	cp	r24, r18
    b7da:	93 07       	cpc	r25, r19
    b7dc:	09 f4       	brne	.+2      	; 0xb7e0 <checkcollide+0x22e>
    b7de:	bb c1       	rjmp	.+886    	; 0xbb56 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    b7e0:	23 2b       	or	r18, r19
    b7e2:	09 f0       	breq	.+2      	; 0xb7e6 <checkcollide+0x234>
    b7e4:	3f c0       	rjmp	.+126    	; 0xb864 <checkcollide+0x2b2>
    score = score + 5 ;
    b7e6:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <score>
    b7ea:	90 91 7d 09 	lds	r25, 0x097D	; 0x80097d <score+0x1>
    b7ee:	05 96       	adiw	r24, 0x05	; 5
    b7f0:	90 93 7d 09 	sts	0x097D, r25	; 0x80097d <score+0x1>
    b7f4:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <score>
    bonus++;
    b7f8:	80 91 f8 09 	lds	r24, 0x09F8	; 0x8009f8 <bonus>
    b7fc:	90 91 f9 09 	lds	r25, 0x09F9	; 0x8009f9 <bonus+0x1>
    b800:	01 96       	adiw	r24, 0x01	; 1
    b802:	90 93 f9 09 	sts	0x09F9, r25	; 0x8009f9 <bonus+0x1>
    b806:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <bonus>
    updatepoints();
    b80a:	0e 94 c8 5a 	call	0xb590	; 0xb590 <updatepoints>
    TriggerFx(7,0xff,true);
    b80e:	41 e0       	ldi	r20, 0x01	; 1
    b810:	6f ef       	ldi	r22, 0xFF	; 255
    b812:	87 e0       	ldi	r24, 0x07	; 7
    b814:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
        
    lx = lx * 2 + destX;
    b818:	00 0f       	add	r16, r16
    b81a:	11 1f       	adc	r17, r17
    b81c:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    b820:	08 0f       	add	r16, r24
    b822:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    b824:	00 32       	cpi	r16, 0x20	; 32
    b826:	11 05       	cpc	r17, r1
    b828:	14 f0       	brlt	.+4      	; 0xb82e <checkcollide+0x27c>
    b82a:	00 52       	subi	r16, 0x20	; 32
    b82c:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    b82e:	ee 0c       	add	r14, r14
    b830:	43 e6       	ldi	r20, 0x63	; 99
    b832:	56 e8       	ldi	r21, 0x86	; 134
    b834:	6e 2d       	mov	r22, r14
    b836:	80 2f       	mov	r24, r16
    b838:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    b83c:	d1 e0       	ldi	r29, 0x01	; 1
    b83e:	d0 0f       	add	r29, r16
    b840:	43 e6       	ldi	r20, 0x63	; 99
    b842:	56 e8       	ldi	r21, 0x86	; 134
    b844:	6e 2d       	mov	r22, r14
    b846:	8d 2f       	mov	r24, r29
    b848:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    b84c:	e3 94       	inc	r14
    b84e:	43 e6       	ldi	r20, 0x63	; 99
    b850:	56 e8       	ldi	r21, 0x86	; 134
    b852:	6e 2d       	mov	r22, r14
    b854:	80 2f       	mov	r24, r16
    b856:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    b85a:	43 e6       	ldi	r20, 0x63	; 99
    b85c:	56 e8       	ldi	r21, 0x86	; 134
    b85e:	6e 2d       	mov	r22, r14
    b860:	8d 2f       	mov	r24, r29
    b862:	5a c0       	rjmp	.+180    	; 0xb918 <checkcollide+0x366>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b864:	2f ef       	ldi	r18, 0xFF	; 255
    b866:	c2 1a       	sub	r12, r18
    b868:	d2 0a       	sbc	r13, r18
    b86a:	29 e1       	ldi	r18, 0x19	; 25
    b86c:	c2 16       	cp	r12, r18
    b86e:	d1 04       	cpc	r13, r1
    b870:	09 f0       	breq	.+2      	; 0xb874 <checkcollide+0x2c2>
    b872:	b0 cf       	rjmp	.-160    	; 0xb7d4 <checkcollide+0x222>
    b874:	70 c1       	rjmp	.+736    	; 0xbb56 <checkcollide+0x5a4>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    b876:	c3 30       	cpi	r28, 0x03	; 3
    b878:	09 f0       	breq	.+2      	; 0xb87c <checkcollide+0x2ca>
    b87a:	5c c0       	rjmp	.+184    	; 0xb934 <checkcollide+0x382>
    b87c:	42 30       	cpi	r20, 0x02	; 2
    b87e:	51 05       	cpc	r21, r1
    b880:	09 f0       	breq	.+2      	; 0xb884 <checkcollide+0x2d2>
    b882:	69 c1       	rjmp	.+722    	; 0xbb56 <checkcollide+0x5a4>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b884:	2a e5       	ldi	r18, 0x5A	; 90
    b886:	2e 9d       	mul	r18, r14
    b888:	c0 01       	movw	r24, r0
    b88a:	2f 9d       	mul	r18, r15
    b88c:	90 0d       	add	r25, r0
    b88e:	11 24       	eor	r1, r1
    b890:	80 0f       	add	r24, r16
    b892:	91 1f       	adc	r25, r17
    b894:	20 91 06 0a 	lds	r18, 0x0A06	; 0x800a06 <scrolltiles>
    b898:	82 0f       	add	r24, r18
    b89a:	91 1d       	adc	r25, r1
    b89c:	90 93 c5 09 	sts	0x09C5, r25	; 0x8009c5 <dp+0x1>
    b8a0:	80 93 c4 09 	sts	0x09C4, r24	; 0x8009c4 <dp>
    b8a4:	e6 ec       	ldi	r30, 0xC6	; 198
    b8a6:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b8a8:	c1 2c       	mov	r12, r1
    b8aa:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b8ac:	21 91       	ld	r18, Z+
    b8ae:	31 91       	ld	r19, Z+
    b8b0:	82 17       	cp	r24, r18
    b8b2:	93 07       	cpc	r25, r19
    b8b4:	09 f4       	brne	.+2      	; 0xb8b8 <checkcollide+0x306>
    b8b6:	4f c1       	rjmp	.+670    	; 0xbb56 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    b8b8:	23 2b       	or	r18, r19
    b8ba:	09 f0       	breq	.+2      	; 0xb8be <checkcollide+0x30c>
    b8bc:	4a c0       	rjmp	.+148    	; 0xb952 <checkcollide+0x3a0>
    score = score + 5 ;
    b8be:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <score>
    b8c2:	90 91 7d 09 	lds	r25, 0x097D	; 0x80097d <score+0x1>
    b8c6:	05 96       	adiw	r24, 0x05	; 5
    b8c8:	90 93 7d 09 	sts	0x097D, r25	; 0x80097d <score+0x1>
    b8cc:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <score>
    bonus++;
    b8d0:	80 91 f8 09 	lds	r24, 0x09F8	; 0x8009f8 <bonus>
    b8d4:	90 91 f9 09 	lds	r25, 0x09F9	; 0x8009f9 <bonus+0x1>
    b8d8:	01 96       	adiw	r24, 0x01	; 1
    b8da:	90 93 f9 09 	sts	0x09F9, r25	; 0x8009f9 <bonus+0x1>
    b8de:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <bonus>
    updatepoints();
    b8e2:	0e 94 c8 5a 	call	0xb590	; 0xb590 <updatepoints>
    TriggerFx(7,0xff,true);
    b8e6:	41 e0       	ldi	r20, 0x01	; 1
    b8e8:	6f ef       	ldi	r22, 0xFF	; 255
    b8ea:	87 e0       	ldi	r24, 0x07	; 7
    b8ec:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    lx = lx * 2 + destX;
    b8f0:	c8 01       	movw	r24, r16
    b8f2:	88 0f       	add	r24, r24
    b8f4:	99 1f       	adc	r25, r25
    b8f6:	20 91 c1 09 	lds	r18, 0x09C1	; 0x8009c1 <destX>
    b8fa:	82 0f       	add	r24, r18
    b8fc:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    b8fe:	80 32       	cpi	r24, 0x20	; 32
    b900:	91 05       	cpc	r25, r1
    b902:	0c f0       	brlt	.+2      	; 0xb906 <checkcollide+0x354>
    b904:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    bananaCount = bananaCount + 1;
    b906:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bananaCount>
    b90a:	9f 5f       	subi	r25, 0xFF	; 255
    b90c:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bananaCount>
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    b910:	6e 2d       	mov	r22, r14
    b912:	66 0f       	add	r22, r22
    b914:	47 ef       	ldi	r20, 0xF7	; 247
    b916:	56 e8       	ldi	r21, 0x86	; 134
    b918:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    diamonds[xi] = dp;
    b91c:	f6 01       	movw	r30, r12
    b91e:	ee 0f       	add	r30, r30
    b920:	ff 1f       	adc	r31, r31
    b922:	ea 53       	subi	r30, 0x3A	; 58
    b924:	f6 4f       	sbci	r31, 0xF6	; 246
    b926:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <dp>
    b92a:	90 91 c5 09 	lds	r25, 0x09C5	; 0x8009c5 <dp+0x1>
    b92e:	91 83       	std	Z+1, r25	; 0x01
    b930:	80 83       	st	Z, r24
    break;
    b932:	11 c1       	rjmp	.+546    	; 0xbb56 <checkcollide+0x5a4>
    };
    };
}; 
if (bl == 9 )
    b934:	c9 30       	cpi	r28, 0x09	; 9
    b936:	b1 f4       	brne	.+44     	; 0xb964 <checkcollide+0x3b2>
{
lx = x + Levelx;
    b938:	c9 0e       	add	r12, r25
    b93a:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b93c:	8f e0       	ldi	r24, 0x0F	; 15
    b93e:	c8 22       	and	r12, r24
    b940:	dd 24       	eor	r13, r13
    b942:	81 e0       	ldi	r24, 0x01	; 1
    b944:	90 e0       	ldi	r25, 0x00	; 0
    b946:	29 e0       	ldi	r18, 0x09	; 9
    b948:	c2 16       	cp	r12, r18
    b94a:	d1 04       	cpc	r13, r1
    b94c:	0c f4       	brge	.+2      	; 0xb950 <checkcollide+0x39e>
    b94e:	0a c1       	rjmp	.+532    	; 0xbb64 <checkcollide+0x5b2>
    b950:	08 c1       	rjmp	.+528    	; 0xbb62 <checkcollide+0x5b0>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b952:	2f ef       	ldi	r18, 0xFF	; 255
    b954:	c2 1a       	sub	r12, r18
    b956:	d2 0a       	sbc	r13, r18
    b958:	29 e1       	ldi	r18, 0x19	; 25
    b95a:	c2 16       	cp	r12, r18
    b95c:	d1 04       	cpc	r13, r1
    b95e:	09 f0       	breq	.+2      	; 0xb962 <checkcollide+0x3b0>
    b960:	a5 cf       	rjmp	.-182    	; 0xb8ac <checkcollide+0x2fa>
    b962:	f9 c0       	rjmp	.+498    	; 0xbb56 <checkcollide+0x5a4>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    b964:	ca 30       	cpi	r28, 0x0A	; 10
    b966:	79 f4       	brne	.+30     	; 0xb986 <checkcollide+0x3d4>
{
lx = x + Levelx;
    b968:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    b96c:	c8 0e       	add	r12, r24
    b96e:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b970:	8f e0       	ldi	r24, 0x0F	; 15
    b972:	c8 22       	and	r12, r24
    b974:	dd 24       	eor	r13, r13
    b976:	81 e0       	ldi	r24, 0x01	; 1
    b978:	90 e0       	ldi	r25, 0x00	; 0
    b97a:	29 e0       	ldi	r18, 0x09	; 9
    b97c:	c2 16       	cp	r12, r18
    b97e:	d1 04       	cpc	r13, r1
    b980:	0c f0       	brlt	.+2      	; 0xb984 <checkcollide+0x3d2>
    b982:	f0 c0       	rjmp	.+480    	; 0xbb64 <checkcollide+0x5b2>
    b984:	ee c0       	rjmp	.+476    	; 0xbb62 <checkcollide+0x5b0>
}
 

    
    
if (bl == 39 )
    b986:	c7 32       	cpi	r28, 0x27	; 39
    b988:	09 f0       	breq	.+2      	; 0xb98c <checkcollide+0x3da>
    b98a:	e5 c0       	rjmp	.+458    	; 0xbb56 <checkcollide+0x5a4>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    b98c:	c7 01       	movw	r24, r14
    b98e:	f4 e0       	ldi	r31, 0x04	; 4
    b990:	88 0f       	add	r24, r24
    b992:	99 1f       	adc	r25, r25
    b994:	fa 95       	dec	r31
    b996:	e1 f7       	brne	.-8      	; 0xb990 <checkcollide+0x3de>
ly = ly - lx;
        
if (ly < 5  ) 
    b998:	a8 1a       	sub	r10, r24
    b99a:	b9 0a       	sbc	r11, r25
    b99c:	85 e0       	ldi	r24, 0x05	; 5
    b99e:	a8 16       	cp	r10, r24
    b9a0:	b1 04       	cpc	r11, r1
    b9a2:	0c f0       	brlt	.+2      	; 0xb9a6 <checkcollide+0x3f4>
    b9a4:	7d c0       	rjmp	.+250    	; 0xbaa0 <checkcollide+0x4ee>
{
lx = x + Levelx;
    b9a6:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    b9aa:	c8 0e       	add	r12, r24
    b9ac:	d1 1c       	adc	r13, r1
ly = y;
lx = lx >> 4;
    b9ae:	86 01       	movw	r16, r12
    b9b0:	e4 e0       	ldi	r30, 0x04	; 4
    b9b2:	15 95       	asr	r17
    b9b4:	07 95       	ror	r16
    b9b6:	ea 95       	dec	r30
    b9b8:	e1 f7       	brne	.-8      	; 0xb9b2 <checkcollide+0x400>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    b9ba:	2a e5       	ldi	r18, 0x5A	; 90
    b9bc:	2e 9d       	mul	r18, r14
    b9be:	c0 01       	movw	r24, r0
    b9c0:	2f 9d       	mul	r18, r15
    b9c2:	90 0d       	add	r25, r0
    b9c4:	11 24       	eor	r1, r1
    b9c6:	80 0f       	add	r24, r16
    b9c8:	91 1f       	adc	r25, r17
    b9ca:	20 91 06 0a 	lds	r18, 0x0A06	; 0x800a06 <scrolltiles>
    b9ce:	82 0f       	add	r24, r18
    b9d0:	91 1d       	adc	r25, r1
    b9d2:	90 93 c5 09 	sts	0x09C5, r25	; 0x8009c5 <dp+0x1>
    b9d6:	80 93 c4 09 	sts	0x09C4, r24	; 0x8009c4 <dp>
    b9da:	e5 e2       	ldi	r30, 0x25	; 37
    b9dc:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b9de:	20 e0       	ldi	r18, 0x00	; 0
    b9e0:	30 e0       	ldi	r19, 0x00	; 0
     {
     if (bridges[xi].id == dp)         
    b9e2:	40 81       	ld	r20, Z
    b9e4:	51 81       	ldd	r21, Z+1	; 0x01
    b9e6:	84 17       	cp	r24, r20
    b9e8:	95 07       	cpc	r25, r21
    b9ea:	09 f0       	breq	.+2      	; 0xb9ee <checkcollide+0x43c>
    b9ec:	9e c0       	rjmp	.+316    	; 0xbb2a <checkcollide+0x578>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b9ee:	c8 01       	movw	r24, r16
    b9f0:	54 e0       	ldi	r21, 0x04	; 4
    b9f2:	88 0f       	add	r24, r24
    b9f4:	99 1f       	adc	r25, r25
    b9f6:	5a 95       	dec	r21
    b9f8:	e1 f7       	brne	.-8      	; 0xb9f2 <checkcollide+0x440>
    b9fa:	c8 1a       	sub	r12, r24
    b9fc:	d9 0a       	sbc	r13, r25
    b9fe:	90 91 c1 09 	lds	r25, 0x09C1	; 0x8009c1 <destX>
    ba02:	e9 01       	movw	r28, r18
    ba04:	cc 0f       	add	r28, r28
    ba06:	dd 1f       	adc	r29, r29
    ba08:	cc 0f       	add	r28, r28
    ba0a:	dd 1f       	adc	r29, r29
    ba0c:	00 0f       	add	r16, r16
    ba0e:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    ba10:	fe 01       	movw	r30, r28
    ba12:	eb 5d       	subi	r30, 0xDB	; 219
    ba14:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    ba16:	29 e0       	ldi	r18, 0x09	; 9
    ba18:	c2 16       	cp	r12, r18
    ba1a:	d1 04       	cpc	r13, r1
    ba1c:	0c f0       	brlt	.+2      	; 0xba20 <checkcollide+0x46e>
    ba1e:	43 c0       	rjmp	.+134    	; 0xbaa6 <checkcollide+0x4f4>
        {
        bridges[xi].r++;    
    ba20:	83 81       	ldd	r24, Z+3	; 0x03
    ba22:	21 e0       	ldi	r18, 0x01	; 1
    ba24:	28 0f       	add	r18, r24
    ba26:	23 83       	std	Z+3, r18	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    ba28:	09 0f       	add	r16, r25
    ba2a:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    ba2c:	00 32       	cpi	r16, 0x20	; 32
    ba2e:	11 05       	cpc	r17, r1
    ba30:	14 f0       	brlt	.+4      	; 0xba36 <checkcollide+0x484>
    ba32:	00 52       	subi	r16, 0x20	; 32
    ba34:	11 09       	sbc	r17, r1
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    ba36:	88 30       	cpi	r24, 0x08	; 8
    ba38:	38 f4       	brcc	.+14     	; 0xba48 <checkcollide+0x496>
    ba3a:	4c e6       	ldi	r20, 0x6C	; 108
    ba3c:	56 e8       	ldi	r21, 0x86	; 134
    ba3e:	6e 2d       	mov	r22, r14
    ba40:	66 0f       	add	r22, r22
    ba42:	80 2f       	mov	r24, r16
    ba44:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    ba48:	fe 01       	movw	r30, r28
    ba4a:	eb 5d       	subi	r30, 0xDB	; 219
    ba4c:	f6 4f       	sbci	r31, 0xF6	; 246
    ba4e:	83 81       	ldd	r24, Z+3	; 0x03
    ba50:	89 50       	subi	r24, 0x09	; 9
    ba52:	88 30       	cpi	r24, 0x08	; 8
    ba54:	38 f4       	brcc	.+14     	; 0xba64 <checkcollide+0x4b2>
    ba56:	49 e6       	ldi	r20, 0x69	; 105
    ba58:	56 e8       	ldi	r21, 0x86	; 134
    ba5a:	6e 2d       	mov	r22, r14
    ba5c:	66 0f       	add	r22, r22
    ba5e:	80 2f       	mov	r24, r16
    ba60:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    ba64:	fe 01       	movw	r30, r28
    ba66:	eb 5d       	subi	r30, 0xDB	; 219
    ba68:	f6 4f       	sbci	r31, 0xF6	; 246
    ba6a:	83 81       	ldd	r24, Z+3	; 0x03
    ba6c:	81 51       	subi	r24, 0x11	; 17
    ba6e:	87 30       	cpi	r24, 0x07	; 7
    ba70:	38 f4       	brcc	.+14     	; 0xba80 <checkcollide+0x4ce>
    ba72:	46 e6       	ldi	r20, 0x66	; 102
    ba74:	56 e8       	ldi	r21, 0x86	; 134
    ba76:	6e 2d       	mov	r22, r14
    ba78:	66 0f       	add	r22, r22
    ba7a:	80 2f       	mov	r24, r16
    ba7c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};
    ba80:	fe 01       	movw	r30, r28
    ba82:	eb 5d       	subi	r30, 0xDB	; 219
    ba84:	f6 4f       	sbci	r31, 0xF6	; 246
    ba86:	83 81       	ldd	r24, Z+3	; 0x03
    ba88:	88 31       	cpi	r24, 0x18	; 24
    ba8a:	08 f4       	brcc	.+2      	; 0xba8e <checkcollide+0x4dc>
    ba8c:	5b c0       	rjmp	.+182    	; 0xbb44 <checkcollide+0x592>
    ba8e:	88 e1       	ldi	r24, 0x18	; 24
    ba90:	83 83       	std	Z+3, r24	; 0x03
    ba92:	6e 2d       	mov	r22, r14
    ba94:	66 0f       	add	r22, r22
    ba96:	43 e6       	ldi	r20, 0x63	; 99
    ba98:	56 e8       	ldi	r21, 0x86	; 134
    ba9a:	80 2f       	mov	r24, r16
    ba9c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    baa0:	80 e0       	ldi	r24, 0x00	; 0
    baa2:	90 e0       	ldi	r25, 0x00	; 0
    baa4:	5f c0       	rjmp	.+190    	; 0xbb64 <checkcollide+0x5b2>
        }
        else
        {
        bridges[xi].l++;
    baa6:	82 81       	ldd	r24, Z+2	; 0x02
    baa8:	21 e0       	ldi	r18, 0x01	; 1
    baaa:	28 0f       	add	r18, r24
    baac:	22 83       	std	Z+2, r18	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    baae:	09 0f       	add	r16, r25
    bab0:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    bab2:	00 32       	cpi	r16, 0x20	; 32
    bab4:	11 05       	cpc	r17, r1
    bab6:	14 f0       	brlt	.+4      	; 0xbabc <checkcollide+0x50a>
    bab8:	00 52       	subi	r16, 0x20	; 32
    baba:	11 09       	sbc	r17, r1
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    babc:	88 30       	cpi	r24, 0x08	; 8
    babe:	40 f4       	brcc	.+16     	; 0xbad0 <checkcollide+0x51e>
    bac0:	4c e6       	ldi	r20, 0x6C	; 108
    bac2:	56 e8       	ldi	r21, 0x86	; 134
    bac4:	6e 2d       	mov	r22, r14
    bac6:	66 0f       	add	r22, r22
    bac8:	81 e0       	ldi	r24, 0x01	; 1
    baca:	80 0f       	add	r24, r16
    bacc:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    bad0:	fe 01       	movw	r30, r28
    bad2:	eb 5d       	subi	r30, 0xDB	; 219
    bad4:	f6 4f       	sbci	r31, 0xF6	; 246
    bad6:	82 81       	ldd	r24, Z+2	; 0x02
    bad8:	89 50       	subi	r24, 0x09	; 9
    bada:	88 30       	cpi	r24, 0x08	; 8
    badc:	40 f4       	brcc	.+16     	; 0xbaee <checkcollide+0x53c>
    bade:	49 e6       	ldi	r20, 0x69	; 105
    bae0:	56 e8       	ldi	r21, 0x86	; 134
    bae2:	6e 2d       	mov	r22, r14
    bae4:	66 0f       	add	r22, r22
    bae6:	81 e0       	ldi	r24, 0x01	; 1
    bae8:	80 0f       	add	r24, r16
    baea:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    baee:	fe 01       	movw	r30, r28
    baf0:	eb 5d       	subi	r30, 0xDB	; 219
    baf2:	f6 4f       	sbci	r31, 0xF6	; 246
    baf4:	82 81       	ldd	r24, Z+2	; 0x02
    baf6:	81 51       	subi	r24, 0x11	; 17
    baf8:	87 30       	cpi	r24, 0x07	; 7
    bafa:	40 f4       	brcc	.+16     	; 0xbb0c <checkcollide+0x55a>
    bafc:	46 e6       	ldi	r20, 0x66	; 102
    bafe:	56 e8       	ldi	r21, 0x86	; 134
    bb00:	6e 2d       	mov	r22, r14
    bb02:	66 0f       	add	r22, r22
    bb04:	81 e0       	ldi	r24, 0x01	; 1
    bb06:	80 0f       	add	r24, r16
    bb08:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;}; 
    bb0c:	fe 01       	movw	r30, r28
    bb0e:	eb 5d       	subi	r30, 0xDB	; 219
    bb10:	f6 4f       	sbci	r31, 0xF6	; 246
    bb12:	82 81       	ldd	r24, Z+2	; 0x02
    bb14:	88 31       	cpi	r24, 0x18	; 24
    bb16:	b0 f0       	brcs	.+44     	; 0xbb44 <checkcollide+0x592>
    bb18:	88 e1       	ldi	r24, 0x18	; 24
    bb1a:	82 83       	std	Z+2, r24	; 0x02
    bb1c:	6e 2d       	mov	r22, r14
    bb1e:	66 0f       	add	r22, r22
    bb20:	43 e6       	ldi	r20, 0x63	; 99
    bb22:	56 e8       	ldi	r21, 0x86	; 134
    bb24:	81 e0       	ldi	r24, 0x01	; 1
    bb26:	80 0f       	add	r24, r16
    bb28:	b9 cf       	rjmp	.-142    	; 0xba9c <checkcollide+0x4ea>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    bb2a:	45 2b       	or	r20, r21
    bb2c:	69 f4       	brne	.+26     	; 0xbb48 <checkcollide+0x596>
    bb2e:	22 0f       	add	r18, r18
    bb30:	33 1f       	adc	r19, r19
    bb32:	22 0f       	add	r18, r18
    bb34:	33 1f       	adc	r19, r19
    bb36:	f9 01       	movw	r30, r18
    bb38:	eb 5d       	subi	r30, 0xDB	; 219
    bb3a:	f6 4f       	sbci	r31, 0xF6	; 246
    bb3c:	91 83       	std	Z+1, r25	; 0x01
    bb3e:	80 83       	st	Z, r24
    bb40:	12 82       	std	Z+2, r1	; 0x02
    bb42:	13 82       	std	Z+3, r1	; 0x03
    bb44:	81 e0       	ldi	r24, 0x01	; 1
    bb46:	ad cf       	rjmp	.-166    	; 0xbaa2 <checkcollide+0x4f0>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    bb48:	2f 5f       	subi	r18, 0xFF	; 255
    bb4a:	3f 4f       	sbci	r19, 0xFF	; 255
    bb4c:	34 96       	adiw	r30, 0x04	; 4
    bb4e:	2c 30       	cpi	r18, 0x0C	; 12
    bb50:	31 05       	cpc	r19, r1
    bb52:	09 f0       	breq	.+2      	; 0xbb56 <checkcollide+0x5a4>
    bb54:	46 cf       	rjmp	.-372    	; 0xb9e2 <checkcollide+0x430>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    bb56:	ef ef       	ldi	r30, 0xFF	; 255
    bb58:	ec 0f       	add	r30, r28
    bb5a:	81 e0       	ldi	r24, 0x01	; 1
    bb5c:	90 e0       	ldi	r25, 0x00	; 0
    bb5e:	e4 31       	cpi	r30, 0x14	; 20
    bb60:	08 f0       	brcs	.+2      	; 0xbb64 <checkcollide+0x5b2>
    bb62:	80 e0       	ldi	r24, 0x00	; 0
}
    bb64:	df 91       	pop	r29
    bb66:	cf 91       	pop	r28
    bb68:	1f 91       	pop	r17
    bb6a:	0f 91       	pop	r16
    bb6c:	ff 90       	pop	r15
    bb6e:	ef 90       	pop	r14
    bb70:	df 90       	pop	r13
    bb72:	cf 90       	pop	r12
    bb74:	bf 90       	pop	r11
    bb76:	af 90       	pop	r10
    bb78:	08 95       	ret

0000bb7a <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    bb7a:	cf 93       	push	r28
    bb7c:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    bb7e:	43 e6       	ldi	r20, 0x63	; 99
    bb80:	56 e8       	ldi	r21, 0x86	; 134
    bb82:	60 e2       	ldi	r22, 0x20	; 32
    bb84:	8c 2f       	mov	r24, r28
    bb86:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    bb8a:	cf 5f       	subi	r28, 0xFF	; 255
    bb8c:	c0 32       	cpi	r28, 0x20	; 32
    bb8e:	b9 f7       	brne	.-18     	; 0xbb7e <setheadline+0x4>
}
    bb90:	cf 91       	pop	r28
    bb92:	08 95       	ret

0000bb94 <drawmonster>:

void drawmonster()
{
    bb94:	0f 93       	push	r16
if (owl.onscreen)
    bb96:	80 91 bf 09 	lds	r24, 0x09BF	; 0x8009bf <owl+0x9>
    bb9a:	88 23       	and	r24, r24
    bb9c:	81 f1       	breq	.+96     	; 0xbbfe <drawmonster+0x6a>
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
    bb9e:	80 91 c0 09 	lds	r24, 0x09C0	; 0x8009c0 <owl+0xa>
    bba2:	81 11       	cpse	r24, r1
    bba4:	0d c0       	rjmp	.+26     	; 0xbbc0 <drawmonster+0x2c>
    bba6:	40 e0       	ldi	r20, 0x00	; 0
    bba8:	6f e7       	ldi	r22, 0x7F	; 127
    bbaa:	76 e5       	ldi	r23, 0x56	; 86
    bbac:	8e e0       	ldi	r24, 0x0E	; 14
    bbae:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
    bbb2:	02 e0       	ldi	r16, 0x02	; 2
    bbb4:	22 e0       	ldi	r18, 0x02	; 2
    bbb6:	40 91 b8 09 	lds	r20, 0x09B8	; 0x8009b8 <owl+0x2>
    bbba:	60 91 b6 09 	lds	r22, 0x09B6	; 0x8009b6 <owl>
    bbbe:	33 c0       	rjmp	.+102    	; 0xbc26 <drawmonster+0x92>
if (aniframe < 10 ) 
    bbc0:	80 91 03 0a 	lds	r24, 0x0A03	; 0x800a03 <aniframe>
    bbc4:	8a 30       	cpi	r24, 0x0A	; 10
    bbc6:	58 f4       	brcc	.+22     	; 0xbbde <drawmonster+0x4a>
{
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    bbc8:	02 e0       	ldi	r16, 0x02	; 2
    bbca:	22 e0       	ldi	r18, 0x02	; 2
    bbcc:	40 91 b8 09 	lds	r20, 0x09B8	; 0x8009b8 <owl+0x2>
    bbd0:	60 91 b6 09 	lds	r22, 0x09B6	; 0x8009b6 <owl>
    bbd4:	8e e0       	ldi	r24, 0x0E	; 14
    bbd6:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    bbda:	40 e0       	ldi	r20, 0x00	; 0
    bbdc:	0b c0       	rjmp	.+22     	; 0xbbf4 <drawmonster+0x60>
}
else
{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    bbde:	60 91 b6 09 	lds	r22, 0x09B6	; 0x8009b6 <owl>
    bbe2:	61 50       	subi	r22, 0x01	; 1
    bbe4:	02 e0       	ldi	r16, 0x02	; 2
    bbe6:	22 e0       	ldi	r18, 0x02	; 2
    bbe8:	40 91 b8 09 	lds	r20, 0x09B8	; 0x8009b8 <owl+0x2>
    bbec:	8e e0       	ldi	r24, 0x0E	; 14
    bbee:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    bbf2:	41 e0       	ldi	r20, 0x01	; 1
    bbf4:	65 e8       	ldi	r22, 0x85	; 133
    bbf6:	76 e5       	ldi	r23, 0x56	; 86
    bbf8:	8e e0       	ldi	r24, 0x0E	; 14
    bbfa:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
};
};
    
if (blob.onscreen)
    bbfe:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    bc02:	88 23       	and	r24, r24
    bc04:	69 f1       	breq	.+90     	; 0xbc60 <drawmonster+0xcc>
{
if (!blob.alive) { MapSprite2(owlIndex , blob1 ,0);  MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);return;}; 
    bc06:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0xa>
    bc0a:	81 11       	cpse	r24, r1
    bc0c:	10 c0       	rjmp	.+32     	; 0xbc2e <drawmonster+0x9a>
    bc0e:	40 e0       	ldi	r20, 0x00	; 0
    bc10:	63 e7       	ldi	r22, 0x73	; 115
    bc12:	76 e5       	ldi	r23, 0x56	; 86
    bc14:	8e e0       	ldi	r24, 0x0E	; 14
    bc16:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
    bc1a:	02 e0       	ldi	r16, 0x02	; 2
    bc1c:	22 e0       	ldi	r18, 0x02	; 2
    bc1e:	40 91 58 09 	lds	r20, 0x0958	; 0x800958 <blob+0x2>
    bc22:	60 91 56 09 	lds	r22, 0x0956	; 0x800956 <blob>
    bc26:	8e e0       	ldi	r24, 0x0E	; 14
    bc28:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    bc2c:	19 c0       	rjmp	.+50     	; 0xbc60 <drawmonster+0xcc>
if (aniframe < 10 ) 
    bc2e:	80 91 03 0a 	lds	r24, 0x0A03	; 0x800a03 <aniframe>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    bc32:	02 e0       	ldi	r16, 0x02	; 2
    bc34:	22 e0       	ldi	r18, 0x02	; 2
    bc36:	40 91 58 09 	lds	r20, 0x0958	; 0x800958 <blob+0x2>
    bc3a:	60 91 56 09 	lds	r22, 0x0956	; 0x800956 <blob>
};
    
if (blob.onscreen)
{
if (!blob.alive) { MapSprite2(owlIndex , blob1 ,0);  MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    bc3e:	8a 30       	cpi	r24, 0x0A	; 10
    bc40:	28 f4       	brcc	.+10     	; 0xbc4c <drawmonster+0xb8>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    bc42:	8e e0       	ldi	r24, 0x0E	; 14
    bc44:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,0); 
    bc48:	40 e0       	ldi	r20, 0x00	; 0
    bc4a:	04 c0       	rjmp	.+8      	; 0xbc54 <drawmonster+0xc0>
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    bc4c:	8e e0       	ldi	r24, 0x0E	; 14
    bc4e:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,1); 
    bc52:	41 e0       	ldi	r20, 0x01	; 1
    bc54:	69 e7       	ldi	r22, 0x79	; 121
    bc56:	76 e5       	ldi	r23, 0x56	; 86
    bc58:	8e e0       	ldi	r24, 0x0E	; 14
};
};    
   
}
    bc5a:	0f 91       	pop	r16
    MapSprite2(owlIndex ,blob0 ,0); 
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    MapSprite2(owlIndex ,blob0 ,1); 
    bc5c:	0c 94 48 55 	jmp	0xaa90	; 0xaa90 <MapSprite2>
};
};    
   
}
    bc60:	0f 91       	pop	r16
    bc62:	08 95       	ret

0000bc64 <movemonster>:

void movemonster()
{
    bc64:	0f 93       	push	r16
if (owl.onscreen) 
    bc66:	80 91 bf 09 	lds	r24, 0x09BF	; 0x8009bf <owl+0x9>
    bc6a:	88 23       	and	r24, r24
    bc6c:	09 f4       	brne	.+2      	; 0xbc70 <movemonster+0xc>
    bc6e:	c1 c0       	rjmp	.+386    	; 0xbdf2 <movemonster+0x18e>
{
 
    owl.x = owl.x2 >> 2;
    bc70:	80 91 ba 09 	lds	r24, 0x09BA	; 0x8009ba <owl+0x4>
    bc74:	90 91 bb 09 	lds	r25, 0x09BB	; 0x8009bb <owl+0x5>
    oldx = owl.x;
    bc78:	9c 01       	movw	r18, r24
    bc7a:	35 95       	asr	r19
    bc7c:	27 95       	ror	r18
    bc7e:	35 95       	asr	r19
    bc80:	27 95       	ror	r18
    bc82:	30 93 8b 09 	sts	0x098B, r19	; 0x80098b <oldx+0x1>
    bc86:	20 93 8a 09 	sts	0x098A, r18	; 0x80098a <oldx>
    oldy = owl.y; 
    bc8a:	20 91 b8 09 	lds	r18, 0x09B8	; 0x8009b8 <owl+0x2>
    bc8e:	30 91 b9 09 	lds	r19, 0x09B9	; 0x8009b9 <owl+0x3>
    bc92:	30 93 05 0a 	sts	0x0A05, r19	; 0x800a05 <oldy+0x1>
    bc96:	20 93 04 0a 	sts	0x0A04, r18	; 0x800a04 <oldy>
    oldx2 = owl.x2;
    bc9a:	90 93 fe 09 	sts	0x09FE, r25	; 0x8009fe <oldx2+0x1>
    bc9e:	80 93 fd 09 	sts	0x09FD, r24	; 0x8009fd <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    bca2:	b9 01       	movw	r22, r18
    bca4:	6e 5f       	subi	r22, 0xFE	; 254
    bca6:	7f 4f       	sbci	r23, 0xFF	; 255
    bca8:	40 91 be 09 	lds	r20, 0x09BE	; 0x8009be <owl+0x8>
    bcac:	64 0f       	add	r22, r20
    bcae:	71 1d       	adc	r23, r1
    bcb0:	47 fd       	sbrc	r20, 7
    bcb2:	7a 95       	dec	r23
    bcb4:	70 93 b9 09 	sts	0x09B9, r23	; 0x8009b9 <owl+0x3>
    bcb8:	60 93 b8 09 	sts	0x09B8, r22	; 0x8009b8 <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    bcbc:	40 91 bd 09 	lds	r20, 0x09BD	; 0x8009bd <owl+0x7>
    bcc0:	84 0f       	add	r24, r20
    bcc2:	91 1d       	adc	r25, r1
    bcc4:	47 fd       	sbrc	r20, 7
    bcc6:	9a 95       	dec	r25
    bcc8:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <owl+0x5>
    bccc:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <owl+0x4>
    owl.x = owl.x2 >> 2;
    bcd0:	95 95       	asr	r25
    bcd2:	87 95       	ror	r24
    bcd4:	95 95       	asr	r25
    bcd6:	87 95       	ror	r24
    bcd8:	90 93 b7 09 	sts	0x09B7, r25	; 0x8009b7 <owl+0x1>
    bcdc:	80 93 b6 09 	sts	0x09B6, r24	; 0x8009b6 <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    bce0:	26 17       	cp	r18, r22
    bce2:	37 07       	cpc	r19, r23
    bce4:	34 f5       	brge	.+76     	; 0xbd32 <movemonster+0xce>
    bce6:	60 5f       	subi	r22, 0xF0	; 240
    bce8:	7f 4f       	sbci	r23, 0xFF	; 255
    bcea:	40 e0       	ldi	r20, 0x00	; 0
    bcec:	50 e0       	ldi	r21, 0x00	; 0
    bcee:	03 96       	adiw	r24, 0x03	; 3
    bcf0:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    bcf4:	80 ff       	sbrs	r24, 0
    bcf6:	0c c0       	rjmp	.+24     	; 0xbd10 <movemonster+0xac>
    bcf8:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <owl+0x2>
    bcfc:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <owl+0x3>
    bd00:	97 fd       	sbrc	r25, 7
    bd02:	0f 96       	adiw	r24, 0x0f	; 15
    bd04:	80 7f       	andi	r24, 0xF0	; 240
    bd06:	90 93 b9 09 	sts	0x09B9, r25	; 0x8009b9 <owl+0x3>
    bd0a:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <owl+0x2>
    bd0e:	11 c0       	rjmp	.+34     	; 0xbd32 <movemonster+0xce>
    bd10:	60 91 b8 09 	lds	r22, 0x09B8	; 0x8009b8 <owl+0x2>
    bd14:	70 91 b9 09 	lds	r23, 0x09B9	; 0x8009b9 <owl+0x3>
    bd18:	60 5f       	subi	r22, 0xF0	; 240
    bd1a:	7f 4f       	sbci	r23, 0xFF	; 255
    bd1c:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    bd20:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    bd24:	40 e0       	ldi	r20, 0x00	; 0
    bd26:	50 e0       	ldi	r21, 0x00	; 0
    bd28:	0c 96       	adiw	r24, 0x0c	; 12
    bd2a:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    bd2e:	80 fd       	sbrc	r24, 0
    bd30:	e3 cf       	rjmp	.-58     	; 0xbcf8 <movemonster+0x94>
    if (owl.x > oldx ) if (checkcollide( owl.x + 12, owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    bd32:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    bd36:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    bd3a:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    bd3e:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    bd42:	28 17       	cp	r18, r24
    bd44:	39 07       	cpc	r19, r25
    bd46:	c4 f4       	brge	.+48     	; 0xbd78 <movemonster+0x114>
    bd48:	60 91 b8 09 	lds	r22, 0x09B8	; 0x8009b8 <owl+0x2>
    bd4c:	70 91 b9 09 	lds	r23, 0x09B9	; 0x8009b9 <owl+0x3>
    bd50:	68 5f       	subi	r22, 0xF8	; 248
    bd52:	7f 4f       	sbci	r23, 0xFF	; 255
    bd54:	40 e0       	ldi	r20, 0x00	; 0
    bd56:	50 e0       	ldi	r21, 0x00	; 0
    bd58:	0c 96       	adiw	r24, 0x0c	; 12
    bd5a:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    bd5e:	80 ff       	sbrs	r24, 0
    bd60:	0b c0       	rjmp	.+22     	; 0xbd78 <movemonster+0x114>
    bd62:	80 91 fd 09 	lds	r24, 0x09FD	; 0x8009fd <oldx2>
    bd66:	90 91 fe 09 	lds	r25, 0x09FE	; 0x8009fe <oldx2+0x1>
    bd6a:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <owl+0x5>
    bd6e:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <owl+0x4>
    bd72:	8f ef       	ldi	r24, 0xFF	; 255
    bd74:	80 93 bd 09 	sts	0x09BD, r24	; 0x8009bd <owl+0x7>
    if (owl.x < oldx ) if (checkcollide( owl.x + 2 , owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    bd78:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    bd7c:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    bd80:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    bd84:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    bd88:	82 17       	cp	r24, r18
    bd8a:	93 07       	cpc	r25, r19
    bd8c:	c4 f4       	brge	.+48     	; 0xbdbe <movemonster+0x15a>
    bd8e:	60 91 b8 09 	lds	r22, 0x09B8	; 0x8009b8 <owl+0x2>
    bd92:	70 91 b9 09 	lds	r23, 0x09B9	; 0x8009b9 <owl+0x3>
    bd96:	68 5f       	subi	r22, 0xF8	; 248
    bd98:	7f 4f       	sbci	r23, 0xFF	; 255
    bd9a:	40 e0       	ldi	r20, 0x00	; 0
    bd9c:	50 e0       	ldi	r21, 0x00	; 0
    bd9e:	02 96       	adiw	r24, 0x02	; 2
    bda0:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    bda4:	80 ff       	sbrs	r24, 0
    bda6:	0b c0       	rjmp	.+22     	; 0xbdbe <movemonster+0x15a>
    bda8:	80 91 fd 09 	lds	r24, 0x09FD	; 0x8009fd <oldx2>
    bdac:	90 91 fe 09 	lds	r25, 0x09FE	; 0x8009fe <oldx2+0x1>
    bdb0:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <owl+0x5>
    bdb4:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <owl+0x4>
    bdb8:	81 e0       	ldi	r24, 0x01	; 1
    bdba:	80 93 bd 09 	sts	0x09BD, r24	; 0x8009bd <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); owl.onscreen = false;};
    bdbe:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <owl+0x2>
    bdc2:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <owl+0x3>
    bdc6:	81 3f       	cpi	r24, 0xF1	; 241
    bdc8:	91 05       	cpc	r25, r1
    bdca:	40 f4       	brcc	.+16     	; 0xbddc <movemonster+0x178>
    bdcc:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    bdd0:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    bdd4:	40 96       	adiw	r24, 0x10	; 16
    bdd6:	81 30       	cpi	r24, 0x01	; 1
    bdd8:	91 40       	sbci	r25, 0x01	; 1
    bdda:	58 f0       	brcs	.+22     	; 0xbdf2 <movemonster+0x18e>
    bddc:	10 92 9f 09 	sts	0x099F, r1	; 0x80099f <MonsteronScreen>
    bde0:	02 e0       	ldi	r16, 0x02	; 2
    bde2:	22 e0       	ldi	r18, 0x02	; 2
    bde4:	4c ee       	ldi	r20, 0xEC	; 236
    bde6:	6c ee       	ldi	r22, 0xEC	; 236
    bde8:	8e e0       	ldi	r24, 0x0E	; 14
    bdea:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    bdee:	10 92 bf 09 	sts	0x09BF, r1	; 0x8009bf <owl+0x9>
}
if (blob.onscreen) 
    bdf2:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    bdf6:	88 23       	and	r24, r24
    bdf8:	09 f4       	brne	.+2      	; 0xbdfc <movemonster+0x198>
    bdfa:	c2 c0       	rjmp	.+388    	; 0xbf80 <movemonster+0x31c>
{
     
    blob.x = blob.x2 >> 2;
    bdfc:	80 91 5a 09 	lds	r24, 0x095A	; 0x80095a <blob+0x4>
    be00:	90 91 5b 09 	lds	r25, 0x095B	; 0x80095b <blob+0x5>
    oldx = blob.x;
    be04:	9c 01       	movw	r18, r24
    be06:	35 95       	asr	r19
    be08:	27 95       	ror	r18
    be0a:	35 95       	asr	r19
    be0c:	27 95       	ror	r18
    be0e:	30 93 8b 09 	sts	0x098B, r19	; 0x80098b <oldx+0x1>
    be12:	20 93 8a 09 	sts	0x098A, r18	; 0x80098a <oldx>
    oldy = blob.y; 
    be16:	20 91 58 09 	lds	r18, 0x0958	; 0x800958 <blob+0x2>
    be1a:	30 91 59 09 	lds	r19, 0x0959	; 0x800959 <blob+0x3>
    be1e:	30 93 05 0a 	sts	0x0A05, r19	; 0x800a05 <oldy+0x1>
    be22:	20 93 04 0a 	sts	0x0A04, r18	; 0x800a04 <oldy>
    oldx2 = blob.x2;
    be26:	90 93 fe 09 	sts	0x09FE, r25	; 0x8009fe <oldx2+0x1>
    be2a:	80 93 fd 09 	sts	0x09FD, r24	; 0x8009fd <oldx2>
    blob.y = blob.y  + gravity + blob.yimpulse;
    be2e:	b9 01       	movw	r22, r18
    be30:	6e 5f       	subi	r22, 0xFE	; 254
    be32:	7f 4f       	sbci	r23, 0xFF	; 255
    be34:	40 91 5e 09 	lds	r20, 0x095E	; 0x80095e <blob+0x8>
    be38:	64 0f       	add	r22, r20
    be3a:	71 1d       	adc	r23, r1
    be3c:	47 fd       	sbrc	r20, 7
    be3e:	7a 95       	dec	r23
    be40:	70 93 59 09 	sts	0x0959, r23	; 0x800959 <blob+0x3>
    be44:	60 93 58 09 	sts	0x0958, r22	; 0x800958 <blob+0x2>
    blob.x2 = blob.x2 + blob.ximpulse;
    be48:	40 91 5d 09 	lds	r20, 0x095D	; 0x80095d <blob+0x7>
    be4c:	84 0f       	add	r24, r20
    be4e:	91 1d       	adc	r25, r1
    be50:	47 fd       	sbrc	r20, 7
    be52:	9a 95       	dec	r25
    be54:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    be58:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    blob.x = blob.x2 >> 2;
    be5c:	95 95       	asr	r25
    be5e:	87 95       	ror	r24
    be60:	95 95       	asr	r25
    be62:	87 95       	ror	r24
    be64:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    be68:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
    if (blob.y > oldy ) if (checkcollide( blob.x + 3 , blob.y + 16,     0 )&1 || checkcollide( blob.x + 12 , blob.y +16    ,0 )&1) { blob.y = ( blob.y / 16 ) * 16   ;};
    be6c:	26 17       	cp	r18, r22
    be6e:	37 07       	cpc	r19, r23
    be70:	34 f5       	brge	.+76     	; 0xbebe <movemonster+0x25a>
    be72:	60 5f       	subi	r22, 0xF0	; 240
    be74:	7f 4f       	sbci	r23, 0xFF	; 255
    be76:	40 e0       	ldi	r20, 0x00	; 0
    be78:	50 e0       	ldi	r21, 0x00	; 0
    be7a:	03 96       	adiw	r24, 0x03	; 3
    be7c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    be80:	80 ff       	sbrs	r24, 0
    be82:	0c c0       	rjmp	.+24     	; 0xbe9c <movemonster+0x238>
    be84:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    be88:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    be8c:	97 fd       	sbrc	r25, 7
    be8e:	0f 96       	adiw	r24, 0x0f	; 15
    be90:	80 7f       	andi	r24, 0xF0	; 240
    be92:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <blob+0x3>
    be96:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <blob+0x2>
    be9a:	11 c0       	rjmp	.+34     	; 0xbebe <movemonster+0x25a>
    be9c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    bea0:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    bea4:	60 5f       	subi	r22, 0xF0	; 240
    bea6:	7f 4f       	sbci	r23, 0xFF	; 255
    bea8:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    beac:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    beb0:	40 e0       	ldi	r20, 0x00	; 0
    beb2:	50 e0       	ldi	r21, 0x00	; 0
    beb4:	0c 96       	adiw	r24, 0x0c	; 12
    beb6:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    beba:	80 fd       	sbrc	r24, 0
    bebc:	e3 cf       	rjmp	.-58     	; 0xbe84 <movemonster+0x220>
    if (blob.x > oldx ) if (!(checkcollide( blob.x + 17, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   -2;};
    bebe:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    bec2:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    bec6:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    beca:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    bece:	28 17       	cp	r18, r24
    bed0:	39 07       	cpc	r19, r25
    bed2:	c4 f4       	brge	.+48     	; 0xbf04 <movemonster+0x2a0>
    bed4:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    bed8:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    bedc:	6f 5e       	subi	r22, 0xEF	; 239
    bede:	7f 4f       	sbci	r23, 0xFF	; 255
    bee0:	40 e0       	ldi	r20, 0x00	; 0
    bee2:	50 e0       	ldi	r21, 0x00	; 0
    bee4:	41 96       	adiw	r24, 0x11	; 17
    bee6:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    beea:	80 fd       	sbrc	r24, 0
    beec:	0b c0       	rjmp	.+22     	; 0xbf04 <movemonster+0x2a0>
    beee:	80 91 fd 09 	lds	r24, 0x09FD	; 0x8009fd <oldx2>
    bef2:	90 91 fe 09 	lds	r25, 0x09FE	; 0x8009fe <oldx2+0x1>
    bef6:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    befa:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    befe:	8e ef       	ldi	r24, 0xFE	; 254
    bf00:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
    if (blob.x < oldx ) if (!(checkcollide( blob.x -  1, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   +2;};
    bf04:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    bf08:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    bf0c:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    bf10:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    bf14:	82 17       	cp	r24, r18
    bf16:	93 07       	cpc	r25, r19
    bf18:	c4 f4       	brge	.+48     	; 0xbf4a <movemonster+0x2e6>
    bf1a:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    bf1e:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    bf22:	6f 5e       	subi	r22, 0xEF	; 239
    bf24:	7f 4f       	sbci	r23, 0xFF	; 255
    bf26:	40 e0       	ldi	r20, 0x00	; 0
    bf28:	50 e0       	ldi	r21, 0x00	; 0
    bf2a:	01 97       	sbiw	r24, 0x01	; 1
    bf2c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    bf30:	80 fd       	sbrc	r24, 0
    bf32:	0b c0       	rjmp	.+22     	; 0xbf4a <movemonster+0x2e6>
    bf34:	80 91 fd 09 	lds	r24, 0x09FD	; 0x8009fd <oldx2>
    bf38:	90 91 fe 09 	lds	r25, 0x09FE	; 0x8009fe <oldx2+0x1>
    bf3c:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    bf40:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    bf44:	82 e0       	ldi	r24, 0x02	; 2
    bf46:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
    if (blob.y > 240 || blob.y < 0 || blob.x <= -16 || blob.x > 240 )  {MonsteronScreen = false; MoveSprite(owlIndex,-20,-20,2,2);blob.onscreen = false;};
    bf4a:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    bf4e:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    bf52:	81 3f       	cpi	r24, 0xF1	; 241
    bf54:	91 05       	cpc	r25, r1
    bf56:	48 f4       	brcc	.+18     	; 0xbf6a <movemonster+0x306>
    bf58:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    bf5c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    bf60:	0f 96       	adiw	r24, 0x0f	; 15
    bf62:	8f 3f       	cpi	r24, 0xFF	; 255
    bf64:	91 05       	cpc	r25, r1
    bf66:	61 f0       	breq	.+24     	; 0xbf80 <movemonster+0x31c>
    bf68:	58 f0       	brcs	.+22     	; 0xbf80 <movemonster+0x31c>
    bf6a:	10 92 9f 09 	sts	0x099F, r1	; 0x80099f <MonsteronScreen>
    bf6e:	02 e0       	ldi	r16, 0x02	; 2
    bf70:	22 e0       	ldi	r18, 0x02	; 2
    bf72:	4c ee       	ldi	r20, 0xEC	; 236
    bf74:	6c ee       	ldi	r22, 0xEC	; 236
    bf76:	8e e0       	ldi	r24, 0x0E	; 14
    bf78:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
    bf7c:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x9>
}   

    
}
    bf80:	0f 91       	pop	r16
    bf82:	08 95       	ret

0000bf84 <checkmonster>:

void checkmonster(int x, int y,int z)
{
    bf84:	ef 92       	push	r14
    bf86:	ff 92       	push	r15
    bf88:	0f 93       	push	r16
    bf8a:	1f 93       	push	r17
    bf8c:	cf 93       	push	r28
    bf8e:	df 93       	push	r29
if (!MonsteronScreen) return;
    bf90:	20 91 9f 09 	lds	r18, 0x099F	; 0x80099f <MonsteronScreen>
    bf94:	22 23       	and	r18, r18
    bf96:	09 f4       	brne	.+2      	; 0xbf9a <checkmonster+0x16>
    bf98:	c3 c0       	rjmp	.+390    	; 0xc120 <checkmonster+0x19c>
    bf9a:	7a 01       	movw	r14, r20
    bf9c:	eb 01       	movw	r28, r22
    bf9e:	8c 01       	movw	r16, r24

if   (owl.onscreen && owl.alive)
    bfa0:	80 91 bf 09 	lds	r24, 0x09BF	; 0x8009bf <owl+0x9>
    bfa4:	88 23       	and	r24, r24
    bfa6:	09 f4       	brne	.+2      	; 0xbfaa <checkmonster+0x26>
    bfa8:	55 c0       	rjmp	.+170    	; 0xc054 <checkmonster+0xd0>
    bfaa:	80 91 c0 09 	lds	r24, 0x09C0	; 0x8009c0 <owl+0xa>
    bfae:	88 23       	and	r24, r24
    bfb0:	09 f4       	brne	.+2      	; 0xbfb4 <checkmonster+0x30>
    bfb2:	50 c0       	rjmp	.+160    	; 0xc054 <checkmonster+0xd0>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    bfb4:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    bfb8:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    bfbc:	9c 01       	movw	r18, r24
    bfbe:	2d 5f       	subi	r18, 0xFD	; 253
    bfc0:	3f 4f       	sbci	r19, 0xFF	; 255
    bfc2:	20 17       	cp	r18, r16
    bfc4:	31 07       	cpc	r19, r17
    bfc6:	0c f0       	brlt	.+2      	; 0xbfca <checkmonster+0x46>
    bfc8:	45 c0       	rjmp	.+138    	; 0xc054 <checkmonster+0xd0>
    bfca:	0b 96       	adiw	r24, 0x0b	; 11
    bfcc:	80 17       	cp	r24, r16
    bfce:	91 07       	cpc	r25, r17
    bfd0:	0c f4       	brge	.+2      	; 0xbfd4 <checkmonster+0x50>
    bfd2:	40 c0       	rjmp	.+128    	; 0xc054 <checkmonster+0xd0>
    bfd4:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <owl+0x2>
    bfd8:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <owl+0x3>
    bfdc:	9c 01       	movw	r18, r24
    bfde:	2d 5f       	subi	r18, 0xFD	; 253
    bfe0:	3f 4f       	sbci	r19, 0xFF	; 255
    bfe2:	26 17       	cp	r18, r22
    bfe4:	37 07       	cpc	r19, r23
    bfe6:	b4 f5       	brge	.+108    	; 0xc054 <checkmonster+0xd0>
    bfe8:	0e 96       	adiw	r24, 0x0e	; 14
    bfea:	86 17       	cp	r24, r22
    bfec:	97 07       	cpc	r25, r23
    bfee:	94 f1       	brlt	.+100    	; 0xc054 <checkmonster+0xd0>
   {
    if ( z== 0)
    bff0:	45 2b       	or	r20, r21
    bff2:	d1 f4       	brne	.+52     	; 0xc028 <checkmonster+0xa4>
    {
    died = true;
    bff4:	81 e0       	ldi	r24, 0x01	; 1
    bff6:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <died>
    lives--;    
    bffa:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    bffe:	81 50       	subi	r24, 0x01	; 1
    c000:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
    isplaying = false; 
    c004:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    c008:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    bonus = 0;  
    c00c:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    c010:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
    TriggerFx(9,0xff,true);
    c014:	41 e0       	ldi	r20, 0x01	; 1
    c016:	6f ef       	ldi	r22, 0xFF	; 255
    c018:	89 e0       	ldi	r24, 0x09	; 9
    c01a:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240); 
    c01e:	80 ef       	ldi	r24, 0xF0	; 240
    c020:	90 e0       	ldi	r25, 0x00	; 0
    c022:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    c026:	16 c0       	rjmp	.+44     	; 0xc054 <checkmonster+0xd0>
    }
       else
       {
        owl.alive = false; 
    c028:	10 92 c0 09 	sts	0x09C0, r1	; 0x8009c0 <owl+0xa>
        owl.ximpulse = 0;
    c02c:	10 92 bd 09 	sts	0x09BD, r1	; 0x8009bd <owl+0x7>
        owl.yimpulse = 0; 
    c030:	10 92 be 09 	sts	0x09BE, r1	; 0x8009be <owl+0x8>
        score = score + 50;
    c034:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <score>
    c038:	90 91 7d 09 	lds	r25, 0x097D	; 0x80097d <score+0x1>
    c03c:	c2 96       	adiw	r24, 0x32	; 50
    c03e:	90 93 7d 09 	sts	0x097D, r25	; 0x80097d <score+0x1>
    c042:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <score>
        updatepoints();
    c046:	0e 94 c8 5a 	call	0xb590	; 0xb590 <updatepoints>
        TriggerFx(8,0xff,true);
    c04a:	41 e0       	ldi	r20, 0x01	; 1
    c04c:	6f ef       	ldi	r22, 0xFF	; 255
    c04e:	88 e0       	ldi	r24, 0x08	; 8
    c050:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
       };
   };     
   };
    
 if   (blob.onscreen && blob.alive)
    c054:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    c058:	88 23       	and	r24, r24
    c05a:	09 f4       	brne	.+2      	; 0xc05e <checkmonster+0xda>
    c05c:	61 c0       	rjmp	.+194    	; 0xc120 <checkmonster+0x19c>
    c05e:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0xa>
    c062:	88 23       	and	r24, r24
    c064:	09 f4       	brne	.+2      	; 0xc068 <checkmonster+0xe4>
    c066:	5c c0       	rjmp	.+184    	; 0xc120 <checkmonster+0x19c>
                    {
   if ( x >= blob.x +3 && x<= blob.x + 12 && y > blob.y+1 &&  y  < blob.y + 13 )
    c068:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    c06c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    c070:	9c 01       	movw	r18, r24
    c072:	2e 5f       	subi	r18, 0xFE	; 254
    c074:	3f 4f       	sbci	r19, 0xFF	; 255
    c076:	20 17       	cp	r18, r16
    c078:	31 07       	cpc	r19, r17
    c07a:	0c f0       	brlt	.+2      	; 0xc07e <checkmonster+0xfa>
    c07c:	51 c0       	rjmp	.+162    	; 0xc120 <checkmonster+0x19c>
    c07e:	0c 96       	adiw	r24, 0x0c	; 12
    c080:	80 17       	cp	r24, r16
    c082:	91 07       	cpc	r25, r17
    c084:	0c f4       	brge	.+2      	; 0xc088 <checkmonster+0x104>
    c086:	4c c0       	rjmp	.+152    	; 0xc120 <checkmonster+0x19c>
    c088:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    c08c:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    c090:	9c 01       	movw	r18, r24
    c092:	2f 5f       	subi	r18, 0xFF	; 255
    c094:	3f 4f       	sbci	r19, 0xFF	; 255
    c096:	2c 17       	cp	r18, r28
    c098:	3d 07       	cpc	r19, r29
    c09a:	0c f0       	brlt	.+2      	; 0xc09e <checkmonster+0x11a>
    c09c:	41 c0       	rjmp	.+130    	; 0xc120 <checkmonster+0x19c>
    c09e:	0c 96       	adiw	r24, 0x0c	; 12
    c0a0:	8c 17       	cp	r24, r28
    c0a2:	9d 07       	cpc	r25, r29
    c0a4:	ec f1       	brlt	.+122    	; 0xc120 <checkmonster+0x19c>
   {
      if ( z== 0)
    c0a6:	ef 28       	or	r14, r15
    c0a8:	f9 f4       	brne	.+62     	; 0xc0e8 <checkmonster+0x164>
    {
     died = true;
    c0aa:	81 e0       	ldi	r24, 0x01	; 1
    c0ac:	80 93 00 0a 	sts	0x0A00, r24	; 0x800a00 <died>
    lives--;    
    c0b0:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    c0b4:	81 50       	subi	r24, 0x01	; 1
    c0b6:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
    isplaying = false; 
    c0ba:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    c0be:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    bonus = 0; 
    c0c2:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    c0c6:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
    TriggerFx(9,0xff,true);
    c0ca:	41 e0       	ldi	r20, 0x01	; 1
    c0cc:	6f ef       	ldi	r22, 0xFF	; 255
    c0ce:	89 e0       	ldi	r24, 0x09	; 9
    c0d0:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240); 
    c0d4:	80 ef       	ldi	r24, 0xF0	; 240
    c0d6:	90 e0       	ldi	r25, 0x00	; 0
       
    
    
    

}
    c0d8:	df 91       	pop	r29
    c0da:	cf 91       	pop	r28
    c0dc:	1f 91       	pop	r17
    c0de:	0f 91       	pop	r16
    c0e0:	ff 90       	pop	r15
    c0e2:	ef 90       	pop	r14
    lives--;    
    isplaying = false; 
    play = false;
    bonus = 0; 
    TriggerFx(9,0xff,true);
    WaitVsync(240); 
    c0e4:	0c 94 01 56 	jmp	0xac02	; 0xac02 <WaitVsync>
      }
    else
       {
        blob.alive = false;  
    c0e8:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0xa>
        blob.ximpulse = 0;
    c0ec:	10 92 5d 09 	sts	0x095D, r1	; 0x80095d <blob+0x7>
        blob.yimpulse = 0;
    c0f0:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <blob+0x8>
        score = score + 50;
    c0f4:	80 91 7c 09 	lds	r24, 0x097C	; 0x80097c <score>
    c0f8:	90 91 7d 09 	lds	r25, 0x097D	; 0x80097d <score+0x1>
    c0fc:	c2 96       	adiw	r24, 0x32	; 50
    c0fe:	90 93 7d 09 	sts	0x097D, r25	; 0x80097d <score+0x1>
    c102:	80 93 7c 09 	sts	0x097C, r24	; 0x80097c <score>
        updatepoints();
    c106:	0e 94 c8 5a 	call	0xb590	; 0xb590 <updatepoints>
        TriggerFx(8,0xff,true);
    c10a:	41 e0       	ldi	r20, 0x01	; 1
    c10c:	6f ef       	ldi	r22, 0xFF	; 255
    c10e:	88 e0       	ldi	r24, 0x08	; 8
       
    
    
    

}
    c110:	df 91       	pop	r29
    c112:	cf 91       	pop	r28
    c114:	1f 91       	pop	r17
    c116:	0f 91       	pop	r16
    c118:	ff 90       	pop	r15
    c11a:	ef 90       	pop	r14
        blob.alive = false;  
        blob.ximpulse = 0;
        blob.yimpulse = 0;
        score = score + 50;
        updatepoints();
        TriggerFx(8,0xff,true);
    c11c:	0c 94 82 4b 	jmp	0x9704	; 0x9704 <TriggerFx>
       
    
    
    

}
    c120:	df 91       	pop	r29
    c122:	cf 91       	pop	r28
    c124:	1f 91       	pop	r17
    c126:	0f 91       	pop	r16
    c128:	ff 90       	pop	r15
    c12a:	ef 90       	pop	r14
    c12c:	08 95       	ret

0000c12e <moveplayer>:
bool finished;
bool exitgame;
bool play;

void moveplayer()
{
    c12e:	cf 93       	push	r28
    c130:	df 93       	push	r29
unsigned int joy=ReadJoypad(0);
    c132:	80 e0       	ldi	r24, 0x00	; 0
    c134:	0e 94 2f 49 	call	0x925e	; 0x925e <ReadJoypad>
if(player.stuck)
    c138:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x6>
    c13c:	22 23       	and	r18, r18
    c13e:	a1 f0       	breq	.+40     	; 0xc168 <moveplayer+0x3a>
{
player.sCount = player.sCount + 1;
    c140:	20 91 65 09 	lds	r18, 0x0965	; 0x800965 <player+0x4>
    c144:	30 91 66 09 	lds	r19, 0x0966	; 0x800966 <player+0x5>
    c148:	2f 5f       	subi	r18, 0xFF	; 255
    c14a:	3f 4f       	sbci	r19, 0xFF	; 255
if(player.sCount >= 100)
    c14c:	24 36       	cpi	r18, 0x64	; 100
    c14e:	31 05       	cpc	r19, r1
    c150:	2c f4       	brge	.+10     	; 0xc15c <moveplayer+0x2e>
void moveplayer()
{
unsigned int joy=ReadJoypad(0);
if(player.stuck)
{
player.sCount = player.sCount + 1;
    c152:	30 93 66 09 	sts	0x0966, r19	; 0x800966 <player+0x5>
    c156:	20 93 65 09 	sts	0x0965, r18	; 0x800965 <player+0x4>
    c15a:	06 c0       	rjmp	.+12     	; 0xc168 <moveplayer+0x3a>
if(player.sCount >= 100)
{
player.sCount = 0;
    c15c:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <player+0x5>
    c160:	10 92 65 09 	sts	0x0965, r1	; 0x800965 <player+0x4>
player.stuck = false;
    c164:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0x6>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    c168:	20 91 76 09 	lds	r18, 0x0976	; 0x800976 <introplaying>
    c16c:	22 23       	and	r18, r18
    c16e:	29 f0       	breq	.+10     	; 0xc17a <moveplayer+0x4c>
    c170:	83 ff       	sbrs	r24, 3
    c172:	83 c0       	rjmp	.+262    	; 0xc27a <moveplayer+0x14c>
    c174:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <introplaying>
    c178:	da c2       	rjmp	.+1460   	; 0xc72e <moveplayer+0x600>
if (!introplaying)
{

 
if (joy&BTN_LEFT && player.stuck == false) { 
    c17a:	86 ff       	sbrs	r24, 6
    c17c:	13 c0       	rjmp	.+38     	; 0xc1a4 <moveplayer+0x76>
    c17e:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x6>
    c182:	21 11       	cpse	r18, r1
    c184:	0f c0       	rjmp	.+30     	; 0xc1a4 <moveplayer+0x76>
player.direction = 'l';
    c186:	2c e6       	ldi	r18, 0x6C	; 108
    c188:	20 93 6b 09 	sts	0x096B, r18	; 0x80096b <player+0xa>
player.action = 'w';
    c18c:	27 e7       	ldi	r18, 0x77	; 119
    c18e:	20 93 6a 09 	sts	0x096A, r18	; 0x80096a <player+0x9>
player.facing = 1;
    c192:	21 e0       	ldi	r18, 0x01	; 1
    c194:	30 e0       	ldi	r19, 0x00	; 0
    c196:	30 93 69 09 	sts	0x0969, r19	; 0x800969 <player+0x8>
    c19a:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x7>
player.ximpulse = -1; 
    c19e:	2f ef       	ldi	r18, 0xFF	; 255
    c1a0:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
};
if (joy&BTN_RIGHT && player.stuck == false) {
    c1a4:	87 ff       	sbrs	r24, 7
    c1a6:	11 c0       	rjmp	.+34     	; 0xc1ca <moveplayer+0x9c>
    c1a8:	20 91 67 09 	lds	r18, 0x0967	; 0x800967 <player+0x6>
    c1ac:	21 11       	cpse	r18, r1
    c1ae:	0d c0       	rjmp	.+26     	; 0xc1ca <moveplayer+0x9c>
player.direction = 'r';
    c1b0:	22 e7       	ldi	r18, 0x72	; 114
    c1b2:	20 93 6b 09 	sts	0x096B, r18	; 0x80096b <player+0xa>
player.action = 'w';
    c1b6:	27 e7       	ldi	r18, 0x77	; 119
    c1b8:	20 93 6a 09 	sts	0x096A, r18	; 0x80096a <player+0x9>
player.facing = 0;
    c1bc:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x8>
    c1c0:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0x7>
player.ximpulse = 1; 
    c1c4:	21 e0       	ldi	r18, 0x01	; 1
    c1c6:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
};
if ( !(joy&BTN_A) ) {
    c1ca:	ec 01       	movw	r28, r24
    c1cc:	cc 27       	eor	r28, r28
    c1ce:	d1 70       	andi	r29, 0x01	; 1
    c1d0:	90 fd       	sbrc	r25, 0
    c1d2:	09 c0       	rjmp	.+18     	; 0xc1e6 <moveplayer+0xb8>
player.yimpulse = 0;
    c1d4:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
player.jumpreleased = true;
    c1d8:	21 e0       	ldi	r18, 0x01	; 1
    c1da:	20 93 72 09 	sts	0x0972, r18	; 0x800972 <player+0x11>
player.jumping = false;
    c1de:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x10>
player.jumpcounter = 0;
    c1e2:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
};
if ( !(joy&BTN_B) ) {
    c1e6:	80 fd       	sbrc	r24, 0
    c1e8:	03 c0       	rjmp	.+6      	; 0xc1f0 <moveplayer+0xc2>
player.bpressed = false;
    c1ea:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <player+0x12>
    c1ee:	21 c0       	rjmp	.+66     	; 0xc232 <moveplayer+0x104>
};
if ( joy&BTN_B && player.touchground) {
    c1f0:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0xd>
    c1f4:	88 23       	and	r24, r24
    c1f6:	09 f4       	brne	.+2      	; 0xc1fa <moveplayer+0xcc>
    c1f8:	40 c0       	rjmp	.+128    	; 0xc27a <moveplayer+0x14c>
	if(bananaCount > 0 && player.bpressed == false)
    c1fa:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <bananaCount>
    c1fe:	88 23       	and	r24, r24
    c200:	09 f4       	brne	.+2      	; 0xc204 <moveplayer+0xd6>
    c202:	91 c2       	rjmp	.+1314   	; 0xc726 <moveplayer+0x5f8>
    c204:	90 91 73 09 	lds	r25, 0x0973	; 0x800973 <player+0x12>
    c208:	91 11       	cpse	r25, r1
    c20a:	8d c2       	rjmp	.+1306   	; 0xc726 <moveplayer+0x5f8>
	{
	bananaCount = bananaCount - 1;
    c20c:	81 50       	subi	r24, 0x01	; 1
    c20e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <bananaCount>
	makeBanana( player.x + 4, player.y ,1);
    c212:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c216:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c21a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c21e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c222:	41 e0       	ldi	r20, 0x01	; 1
    c224:	50 e0       	ldi	r21, 0x00	; 0
    c226:	04 96       	adiw	r24, 0x04	; 4
    c228:	0e 94 95 59 	call	0xb32a	; 0xb32a <makeBanana>
	player.bpressed = true;
    c22c:	81 e0       	ldi	r24, 0x01	; 1
    c22e:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <player+0x12>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    c232:	cd 2b       	or	r28, r29
    c234:	11 f1       	breq	.+68     	; 0xc27a <moveplayer+0x14c>
    c236:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0xd>
    c23a:	88 23       	and	r24, r24
    c23c:	f1 f0       	breq	.+60     	; 0xc27a <moveplayer+0x14c>
    c23e:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <player+0x11>
    c242:	88 23       	and	r24, r24
    c244:	d1 f0       	breq	.+52     	; 0xc27a <moveplayer+0x14c>
    c246:	80 91 67 09 	lds	r24, 0x0967	; 0x800967 <player+0x6>
    c24a:	81 11       	cpse	r24, r1
    c24c:	16 c0       	rjmp	.+44     	; 0xc27a <moveplayer+0x14c>
player.action = 'j';
    c24e:	8a e6       	ldi	r24, 0x6A	; 106
    c250:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <player+0x9>
player.yimpulse = 0;
    c254:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
player.jumping = true;
    c258:	81 e0       	ldi	r24, 0x01	; 1
    c25a:	80 93 71 09 	sts	0x0971, r24	; 0x800971 <player+0x10>
player.touchground = false;
    c25e:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
player.jumpreleased = false;
    c262:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x11>
player.jumpcounter++ ; 
    c266:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x13>
    c26a:	8f 5f       	subi	r24, 0xFF	; 255
    c26c:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <player+0x13>
TriggerFx(4,0xff,true);
    c270:	41 e0       	ldi	r20, 0x01	; 1
    c272:	6f ef       	ldi	r22, 0xFF	; 255
    c274:	84 e0       	ldi	r24, 0x04	; 4
    c276:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
};
};

oldx = player.x;
    c27a:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <player>
    c27e:	30 91 62 09 	lds	r19, 0x0962	; 0x800962 <player+0x1>
    c282:	30 93 8b 09 	sts	0x098B, r19	; 0x80098b <oldx+0x1>
    c286:	20 93 8a 09 	sts	0x098A, r18	; 0x80098a <oldx>
oldy = player.y;
    c28a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c28e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c292:	70 93 05 0a 	sts	0x0A05, r23	; 0x800a05 <oldy+0x1>
    c296:	60 93 04 0a 	sts	0x0A04, r22	; 0x800a04 <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    c29a:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x13>
    c29e:	9f ef       	ldi	r25, 0xFF	; 255
    c2a0:	98 0f       	add	r25, r24
    c2a2:	99 31       	cpi	r25, 0x19	; 25
    c2a4:	18 f4       	brcc	.+6      	; 0xc2ac <moveplayer+0x17e>
    c2a6:	9c ef       	ldi	r25, 0xFC	; 252
    c2a8:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <player+0xf>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    c2ac:	96 ee       	ldi	r25, 0xE6	; 230
    c2ae:	98 0f       	add	r25, r24
    c2b0:	9b 30       	cpi	r25, 0x0B	; 11
    c2b2:	18 f4       	brcc	.+6      	; 0xc2ba <moveplayer+0x18c>
    c2b4:	9d ef       	ldi	r25, 0xFD	; 253
    c2b6:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <player+0xf>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    c2ba:	9b ed       	ldi	r25, 0xDB	; 219
    c2bc:	98 0f       	add	r25, r24
    c2be:	94 30       	cpi	r25, 0x04	; 4
    c2c0:	18 f4       	brcc	.+6      	; 0xc2c8 <moveplayer+0x19a>
    c2c2:	9e ef       	ldi	r25, 0xFE	; 254
    c2c4:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <player+0xf>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    c2c8:	97 ed       	ldi	r25, 0xD7	; 215
    c2ca:	98 0f       	add	r25, r24
    c2cc:	96 30       	cpi	r25, 0x06	; 6
    c2ce:	20 f4       	brcc	.+8      	; 0xc2d8 <moveplayer+0x1aa>
    c2d0:	9f ef       	ldi	r25, 0xFF	; 255
    c2d2:	90 93 70 09 	sts	0x0970, r25	; 0x800970 <player+0xf>
    c2d6:	02 c0       	rjmp	.+4      	; 0xc2dc <moveplayer+0x1ae>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    c2d8:	88 23       	and	r24, r24
    c2da:	19 f0       	breq	.+6      	; 0xc2e2 <moveplayer+0x1b4>
    c2dc:	8f 5f       	subi	r24, 0xFF	; 255
    c2de:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <player+0x13>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    c2e2:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x13>
    c2e6:	8f 32       	cpi	r24, 0x2F	; 47
    c2e8:	10 f0       	brcs	.+4      	; 0xc2ee <moveplayer+0x1c0>
    c2ea:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
player.x = player.x + player.ximpulse;
    c2ee:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    c2f2:	a9 01       	movw	r20, r18
    c2f4:	48 0f       	add	r20, r24
    c2f6:	51 1d       	adc	r21, r1
    c2f8:	87 fd       	sbrc	r24, 7
    c2fa:	5a 95       	dec	r21
    c2fc:	ca 01       	movw	r24, r20
    c2fe:	50 93 62 09 	sts	0x0962, r21	; 0x800962 <player+0x1>
    c302:	40 93 61 09 	sts	0x0961, r20	; 0x800961 <player>
player.y = player.y + player.yimpulse + gravity ;
    c306:	40 91 70 09 	lds	r20, 0x0970	; 0x800970 <player+0xf>
    c30a:	64 0f       	add	r22, r20
    c30c:	71 1d       	adc	r23, r1
    c30e:	47 fd       	sbrc	r20, 7
    c310:	7a 95       	dec	r23
    c312:	6e 5f       	subi	r22, 0xFE	; 254
    c314:	7f 4f       	sbci	r23, 0xFF	; 255
    c316:	70 93 64 09 	sts	0x0964, r23	; 0x800964 <player+0x3>
    c31a:	60 93 63 09 	sts	0x0963, r22	; 0x800963 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    c31e:	28 17       	cp	r18, r24
    c320:	39 07       	cpc	r19, r25
    c322:	3c f4       	brge	.+14     	; 0xc332 <moveplayer+0x204>
    c324:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <player+0x14>
    c328:	2f 5f       	subi	r18, 0xFF	; 255
    c32a:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x14>
    c32e:	22 e7       	ldi	r18, 0x72	; 114
    c330:	09 c0       	rjmp	.+18     	; 0xc344 <moveplayer+0x216>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    c332:	82 17       	cp	r24, r18
    c334:	93 07       	cpc	r25, r19
    c336:	4c f4       	brge	.+18     	; 0xc34a <moveplayer+0x21c>
    c338:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <player+0x14>
    c33c:	2f 5f       	subi	r18, 0xFF	; 255
    c33e:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x14>
    c342:	2c e6       	ldi	r18, 0x6C	; 108
    c344:	20 93 6b 09 	sts	0x096B, r18	; 0x80096b <player+0xa>
    c348:	05 c0       	rjmp	.+10     	; 0xc354 <moveplayer+0x226>
if (player.x == oldx  ) { player.aniframe = 0;};
    c34a:	28 17       	cp	r18, r24
    c34c:	39 07       	cpc	r19, r25
    c34e:	11 f4       	brne	.+4      	; 0xc354 <moveplayer+0x226>
    c350:	10 92 75 09 	sts	0x0975, r1	; 0x800975 <player+0x14>
if (player.aniframe > 0 ) player.aniframe++;
    c354:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <player+0x14>
    c358:	22 23       	and	r18, r18
    c35a:	19 f0       	breq	.+6      	; 0xc362 <moveplayer+0x234>
    c35c:	2f 5f       	subi	r18, 0xFF	; 255
    c35e:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x14>
if (player.aniframe>24) player.aniframe = 1;
    c362:	20 91 75 09 	lds	r18, 0x0975	; 0x800975 <player+0x14>
    c366:	29 31       	cpi	r18, 0x19	; 25
    c368:	18 f0       	brcs	.+6      	; 0xc370 <moveplayer+0x242>
    c36a:	21 e0       	ldi	r18, 0x01	; 1
    c36c:	20 93 75 09 	sts	0x0975, r18	; 0x800975 <player+0x14>
if(checkBanana(player.x + 4, player.y ,1) == 1)
    c370:	41 e0       	ldi	r20, 0x01	; 1
    c372:	50 e0       	ldi	r21, 0x00	; 0
    c374:	04 96       	adiw	r24, 0x04	; 4
    c376:	0e 94 ed 59 	call	0xb3da	; 0xb3da <checkBanana>
    c37a:	01 97       	sbiw	r24, 0x01	; 1
    c37c:	19 f4       	brne	.+6      	; 0xc384 <moveplayer+0x256>
{
    player.stuck = true;
    c37e:	81 e0       	ldi	r24, 0x01	; 1
    c380:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
} 
checkcollide( player.x, player.y - 4 ,1);
    c384:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c388:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c38c:	64 50       	subi	r22, 0x04	; 4
    c38e:	71 09       	sbc	r23, r1
    c390:	41 e0       	ldi	r20, 0x01	; 1
    c392:	50 e0       	ldi	r21, 0x00	; 0
    c394:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c398:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c39c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3);
    c3a0:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c3a4:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c3a8:	64 50       	subi	r22, 0x04	; 4
    c3aa:	71 09       	sbc	r23, r1
    c3ac:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c3b0:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c3b4:	43 e0       	ldi	r20, 0x03	; 3
    c3b6:	50 e0       	ldi	r21, 0x00	; 0
    c3b8:	03 97       	sbiw	r24, 0x03	; 3
    c3ba:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3);
    c3be:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c3c2:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c3c6:	64 50       	subi	r22, 0x04	; 4
    c3c8:	71 09       	sbc	r23, r1
    c3ca:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c3ce:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c3d2:	43 e0       	ldi	r20, 0x03	; 3
    c3d4:	50 e0       	ldi	r21, 0x00	; 0
    c3d6:	04 96       	adiw	r24, 0x04	; 4
    c3d8:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
    c3dc:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c3e0:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c3e4:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c3e8:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c3ec:	68 17       	cp	r22, r24
    c3ee:	79 07       	cpc	r23, r25
    c3f0:	54 f4       	brge	.+20     	; 0xc406 <moveplayer+0x2d8>
    c3f2:	66 51       	subi	r22, 0x16	; 22
    c3f4:	71 09       	sbc	r23, r1
    c3f6:	42 e0       	ldi	r20, 0x02	; 2
    c3f8:	50 e0       	ldi	r21, 0x00	; 0
    c3fa:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c3fe:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c402:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    c406:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c40a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c40e:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c412:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c416:	86 17       	cp	r24, r22
    c418:	97 07       	cpc	r25, r23
    c41a:	8c f5       	brge	.+98     	; 0xc47e <moveplayer+0x350>
    c41c:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    c420:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c424:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c428:	40 e0       	ldi	r20, 0x00	; 0
    c42a:	50 e0       	ldi	r21, 0x00	; 0
    c42c:	03 97       	sbiw	r24, 0x03	; 3
    c42e:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c432:	80 ff       	sbrs	r24, 0
    c434:	15 c0       	rjmp	.+42     	; 0xc460 <moveplayer+0x332>
    c436:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    c43a:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    c43e:	97 fd       	sbrc	r25, 7
    c440:	0f 96       	adiw	r24, 0x0f	; 15
    c442:	80 7f       	andi	r24, 0xF0	; 240
    c444:	01 97       	sbiw	r24, 0x01	; 1
    c446:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    c44a:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    c44e:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x10>
    c452:	81 e0       	ldi	r24, 0x01	; 1
    c454:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <player+0xd>
    c458:	87 e7       	ldi	r24, 0x77	; 119
    c45a:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <player+0x9>
    c45e:	0f c0       	rjmp	.+30     	; 0xc47e <moveplayer+0x350>
    c460:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c464:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c468:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c46c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c470:	40 e0       	ldi	r20, 0x00	; 0
    c472:	50 e0       	ldi	r21, 0x00	; 0
    c474:	04 96       	adiw	r24, 0x04	; 4
    c476:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c47a:	80 fd       	sbrc	r24, 0
    c47c:	dc cf       	rjmp	.-72     	; 0xc436 <moveplayer+0x308>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c47e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c482:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c486:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c48a:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c48e:	68 17       	cp	r22, r24
    c490:	79 07       	cpc	r23, r25
    c492:	74 f5       	brge	.+92     	; 0xc4f0 <moveplayer+0x3c2>
    c494:	65 51       	subi	r22, 0x15	; 21
    c496:	71 09       	sbc	r23, r1
    c498:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c49c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c4a0:	40 e0       	ldi	r20, 0x00	; 0
    c4a2:	50 e0       	ldi	r21, 0x00	; 0
    c4a4:	03 97       	sbiw	r24, 0x03	; 3
    c4a6:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c4aa:	80 ff       	sbrs	r24, 0
    c4ac:	10 c0       	rjmp	.+32     	; 0xc4ce <moveplayer+0x3a0>
    c4ae:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c4b2:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c4b6:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    c4ba:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    c4be:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <player+0x13>
                                                                                                                                  TriggerFx(5,0xff,true);
    c4c2:	41 e0       	ldi	r20, 0x01	; 1
    c4c4:	6f ef       	ldi	r22, 0xFF	; 255
    c4c6:	85 e0       	ldi	r24, 0x05	; 5
    c4c8:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    c4cc:	11 c0       	rjmp	.+34     	; 0xc4f0 <moveplayer+0x3c2>
checkcollide( player.x +4, player.y - 4 ,3);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c4ce:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c4d2:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c4d6:	65 51       	subi	r22, 0x15	; 21
    c4d8:	71 09       	sbc	r23, r1
    c4da:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c4de:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c4e2:	40 e0       	ldi	r20, 0x00	; 0
    c4e4:	50 e0       	ldi	r21, 0x00	; 0
    c4e6:	04 96       	adiw	r24, 0x04	; 4
    c4e8:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c4ec:	80 fd       	sbrc	r24, 0
    c4ee:	df cf       	rjmp	.-66     	; 0xc4ae <moveplayer+0x380>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
    c4f0:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c4f4:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c4f8:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    c4fc:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    c500:	28 17       	cp	r18, r24
    c502:	39 07       	cpc	r19, r25
    c504:	3c f5       	brge	.+78     	; 0xc554 <moveplayer+0x426>
    c506:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c50a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c50e:	63 50       	subi	r22, 0x03	; 3
    c510:	71 09       	sbc	r23, r1
    c512:	40 e0       	ldi	r20, 0x00	; 0
    c514:	50 e0       	ldi	r21, 0x00	; 0
    c516:	05 96       	adiw	r24, 0x05	; 5
    c518:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c51c:	80 ff       	sbrs	r24, 0
    c51e:	09 c0       	rjmp	.+18     	; 0xc532 <moveplayer+0x404>
    c520:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <oldx>
    c524:	90 91 8b 09 	lds	r25, 0x098B	; 0x80098b <oldx+0x1>
    c528:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c52c:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c530:	11 c0       	rjmp	.+34     	; 0xc554 <moveplayer+0x426>
    c532:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c536:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c53a:	64 51       	subi	r22, 0x14	; 20
    c53c:	71 09       	sbc	r23, r1
    c53e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c542:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c546:	40 e0       	ldi	r20, 0x00	; 0
    c548:	50 e0       	ldi	r21, 0x00	; 0
    c54a:	05 96       	adiw	r24, 0x05	; 5
    c54c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c550:	80 fd       	sbrc	r24, 0
    c552:	e6 cf       	rjmp	.-52     	; 0xc520 <moveplayer+0x3f2>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
    c554:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c558:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c55c:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    c560:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    c564:	82 17       	cp	r24, r18
    c566:	93 07       	cpc	r25, r19
    c568:	3c f5       	brge	.+78     	; 0xc5b8 <moveplayer+0x48a>
    c56a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c56e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c572:	63 50       	subi	r22, 0x03	; 3
    c574:	71 09       	sbc	r23, r1
    c576:	40 e0       	ldi	r20, 0x00	; 0
    c578:	50 e0       	ldi	r21, 0x00	; 0
    c57a:	04 97       	sbiw	r24, 0x04	; 4
    c57c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c580:	80 ff       	sbrs	r24, 0
    c582:	09 c0       	rjmp	.+18     	; 0xc596 <moveplayer+0x468>
    c584:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <oldx>
    c588:	90 91 8b 09 	lds	r25, 0x098B	; 0x80098b <oldx+0x1>
    c58c:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c590:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c594:	11 c0       	rjmp	.+34     	; 0xc5b8 <moveplayer+0x48a>
    c596:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c59a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c59e:	64 51       	subi	r22, 0x14	; 20
    c5a0:	71 09       	sbc	r23, r1
    c5a2:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c5a6:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c5aa:	40 e0       	ldi	r20, 0x00	; 0
    c5ac:	50 e0       	ldi	r21, 0x00	; 0
    c5ae:	04 97       	sbiw	r24, 0x04	; 4
    c5b0:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    c5b4:	80 fd       	sbrc	r24, 0
    c5b6:	e6 cf       	rjmp	.-52     	; 0xc584 <moveplayer+0x456>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
    c5b8:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c5bc:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c5c0:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c5c4:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c5c8:	86 17       	cp	r24, r22
    c5ca:	97 07       	cpc	r25, r23
    c5cc:	4c f4       	brge	.+18     	; 0xc5e0 <moveplayer+0x4b2>
    c5ce:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c5d2:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c5d6:	41 e0       	ldi	r20, 0x01	; 1
    c5d8:	50 e0       	ldi	r21, 0x00	; 0
    c5da:	04 96       	adiw	r24, 0x04	; 4
    c5dc:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
    c5e0:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c5e4:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c5e8:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c5ec:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c5f0:	86 17       	cp	r24, r22
    c5f2:	97 07       	cpc	r25, r23
    c5f4:	4c f4       	brge	.+18     	; 0xc608 <moveplayer+0x4da>
    c5f6:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c5fa:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c5fe:	41 e0       	ldi	r20, 0x01	; 1
    c600:	50 e0       	ldi	r21, 0x00	; 0
    c602:	04 97       	sbiw	r24, 0x04	; 4
    c604:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
    c608:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c60c:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c610:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c614:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c618:	86 17       	cp	r24, r22
    c61a:	97 07       	cpc	r25, r23
    c61c:	44 f4       	brge	.+16     	; 0xc62e <moveplayer+0x500>
    c61e:	41 e0       	ldi	r20, 0x01	; 1
    c620:	50 e0       	ldi	r21, 0x00	; 0
    c622:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c626:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c62a:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player.x +4, player.y -3,0 );
    c62e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c632:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c636:	63 50       	subi	r22, 0x03	; 3
    c638:	71 09       	sbc	r23, r1
    c63a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c63e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c642:	40 e0       	ldi	r20, 0x00	; 0
    c644:	50 e0       	ldi	r21, 0x00	; 0
    c646:	04 96       	adiw	r24, 0x04	; 4
    c648:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player.x +4, player.y -19,0 );
    c64c:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c650:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c654:	63 51       	subi	r22, 0x13	; 19
    c656:	71 09       	sbc	r23, r1
    c658:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c65c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c660:	40 e0       	ldi	r20, 0x00	; 0
    c662:	50 e0       	ldi	r21, 0x00	; 0
    c664:	04 96       	adiw	r24, 0x04	; 4
    c666:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player.x -3, player.y -3 ,0);
    c66a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c66e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c672:	63 50       	subi	r22, 0x03	; 3
    c674:	71 09       	sbc	r23, r1
    c676:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c67a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c67e:	40 e0       	ldi	r20, 0x00	; 0
    c680:	50 e0       	ldi	r21, 0x00	; 0
    c682:	03 97       	sbiw	r24, 0x03	; 3
    c684:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player.x -3, player.y -19 ,0);  
    c688:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c68c:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c690:	63 51       	subi	r22, 0x13	; 19
    c692:	71 09       	sbc	r23, r1
    c694:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c698:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c69c:	40 e0       	ldi	r20, 0x00	; 0
    c69e:	50 e0       	ldi	r21, 0x00	; 0
    c6a0:	03 97       	sbiw	r24, 0x03	; 3
    c6a2:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player.x , player.y -22 ,0);
    c6a6:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c6aa:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c6ae:	66 51       	subi	r22, 0x16	; 22
    c6b0:	71 09       	sbc	r23, r1
    c6b2:	40 e0       	ldi	r20, 0x00	; 0
    c6b4:	50 e0       	ldi	r21, 0x00	; 0
    c6b6:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c6ba:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c6be:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
    c6c2:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c6c6:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c6ca:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c6ce:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c6d2:	86 17       	cp	r24, r22
    c6d4:	97 07       	cpc	r25, r23
    c6d6:	4c f4       	brge	.+18     	; 0xc6ea <moveplayer+0x5bc>
    c6d8:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c6dc:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c6e0:	40 e0       	ldi	r20, 0x00	; 0
    c6e2:	50 e0       	ldi	r21, 0x00	; 0
    c6e4:	04 96       	adiw	r24, 0x04	; 4
    c6e6:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
player.ximpulse = 0;    
    c6ea:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xe>
player.yimpulse = 0;
    c6ee:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
if ( player.x < 8 ) player.x = 8;
    c6f2:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c6f6:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c6fa:	08 97       	sbiw	r24, 0x08	; 8
    c6fc:	34 f4       	brge	.+12     	; 0xc70a <moveplayer+0x5dc>
    c6fe:	88 e0       	ldi	r24, 0x08	; 8
    c700:	90 e0       	ldi	r25, 0x00	; 0
    c702:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c706:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
if ( player.x > 232 ) player.x = 232;    
    c70a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c70e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c712:	89 3e       	cpi	r24, 0xE9	; 233
    c714:	91 05       	cpc	r25, r1
    c716:	5c f0       	brlt	.+22     	; 0xc72e <moveplayer+0x600>
    c718:	88 ee       	ldi	r24, 0xE8	; 232
    c71a:	90 e0       	ldi	r25, 0x00	; 0
    c71c:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c720:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c724:	04 c0       	rjmp	.+8      	; 0xc72e <moveplayer+0x600>
	player.bpressed = true;
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased && player.stuck == false) {
    c726:	cd 2b       	or	r28, r29
    c728:	09 f0       	breq	.+2      	; 0xc72c <moveplayer+0x5fe>
    c72a:	89 cd       	rjmp	.-1262   	; 0xc23e <moveplayer+0x110>
    c72c:	a6 cd       	rjmp	.-1204   	; 0xc27a <moveplayer+0x14c>

    

return;
  
}
    c72e:	df 91       	pop	r29
    c730:	cf 91       	pop	r28
    c732:	08 95       	ret

0000c734 <moveplayer2>:

void moveplayer2()
{
    c734:	cf 93       	push	r28
    c736:	df 93       	push	r29
unsigned int joy=ReadJoypad(1);
    c738:	81 e0       	ldi	r24, 0x01	; 1
    c73a:	0e 94 2f 49 	call	0x925e	; 0x925e <ReadJoypad>
if(player2.stuck)
    c73e:	20 91 a6 09 	lds	r18, 0x09A6	; 0x8009a6 <player2+0x6>
    c742:	22 23       	and	r18, r18
    c744:	a1 f0       	breq	.+40     	; 0xc76e <moveplayer2+0x3a>
{
player2.sCount = player2.sCount + 1;
    c746:	20 91 a4 09 	lds	r18, 0x09A4	; 0x8009a4 <player2+0x4>
    c74a:	30 91 a5 09 	lds	r19, 0x09A5	; 0x8009a5 <player2+0x5>
    c74e:	2f 5f       	subi	r18, 0xFF	; 255
    c750:	3f 4f       	sbci	r19, 0xFF	; 255
if(player2.sCount >= 100)
    c752:	24 36       	cpi	r18, 0x64	; 100
    c754:	31 05       	cpc	r19, r1
    c756:	2c f4       	brge	.+10     	; 0xc762 <moveplayer2+0x2e>
void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
if(player2.stuck)
{
player2.sCount = player2.sCount + 1;
    c758:	30 93 a5 09 	sts	0x09A5, r19	; 0x8009a5 <player2+0x5>
    c75c:	20 93 a4 09 	sts	0x09A4, r18	; 0x8009a4 <player2+0x4>
    c760:	06 c0       	rjmp	.+12     	; 0xc76e <moveplayer2+0x3a>
if(player2.sCount >= 100)
{
player2.sCount = 0;
    c762:	10 92 a5 09 	sts	0x09A5, r1	; 0x8009a5 <player2+0x5>
    c766:	10 92 a4 09 	sts	0x09A4, r1	; 0x8009a4 <player2+0x4>
player2.stuck = false;
    c76a:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <player2+0x6>
}
}
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    c76e:	20 91 76 09 	lds	r18, 0x0976	; 0x800976 <introplaying>
    c772:	22 23       	and	r18, r18
    c774:	29 f0       	breq	.+10     	; 0xc780 <moveplayer2+0x4c>
    c776:	83 ff       	sbrs	r24, 3
    c778:	83 c0       	rjmp	.+262    	; 0xc880 <moveplayer2+0x14c>
    c77a:	10 92 76 09 	sts	0x0976, r1	; 0x800976 <introplaying>
    c77e:	da c2       	rjmp	.+1460   	; 0xcd34 <moveplayer2+0x600>
if (!introplaying)
{

 
if (joy&BTN_LEFT && player2.stuck == false) { 
    c780:	86 ff       	sbrs	r24, 6
    c782:	13 c0       	rjmp	.+38     	; 0xc7aa <moveplayer2+0x76>
    c784:	20 91 a6 09 	lds	r18, 0x09A6	; 0x8009a6 <player2+0x6>
    c788:	21 11       	cpse	r18, r1
    c78a:	0f c0       	rjmp	.+30     	; 0xc7aa <moveplayer2+0x76>
player2.direction = 'l';
    c78c:	2c e6       	ldi	r18, 0x6C	; 108
    c78e:	20 93 aa 09 	sts	0x09AA, r18	; 0x8009aa <player2+0xa>
player2.action = 'w';
    c792:	27 e7       	ldi	r18, 0x77	; 119
    c794:	20 93 a9 09 	sts	0x09A9, r18	; 0x8009a9 <player2+0x9>
player2.facing = 1;
    c798:	21 e0       	ldi	r18, 0x01	; 1
    c79a:	30 e0       	ldi	r19, 0x00	; 0
    c79c:	30 93 a8 09 	sts	0x09A8, r19	; 0x8009a8 <player2+0x8>
    c7a0:	20 93 a7 09 	sts	0x09A7, r18	; 0x8009a7 <player2+0x7>
player2.ximpulse = -1; 
    c7a4:	2f ef       	ldi	r18, 0xFF	; 255
    c7a6:	20 93 ae 09 	sts	0x09AE, r18	; 0x8009ae <player2+0xe>
};
if (joy&BTN_RIGHT && player2.stuck == false) {
    c7aa:	87 ff       	sbrs	r24, 7
    c7ac:	11 c0       	rjmp	.+34     	; 0xc7d0 <moveplayer2+0x9c>
    c7ae:	20 91 a6 09 	lds	r18, 0x09A6	; 0x8009a6 <player2+0x6>
    c7b2:	21 11       	cpse	r18, r1
    c7b4:	0d c0       	rjmp	.+26     	; 0xc7d0 <moveplayer2+0x9c>
player2.direction = 'r';
    c7b6:	22 e7       	ldi	r18, 0x72	; 114
    c7b8:	20 93 aa 09 	sts	0x09AA, r18	; 0x8009aa <player2+0xa>
player2.action = 'w';
    c7bc:	27 e7       	ldi	r18, 0x77	; 119
    c7be:	20 93 a9 09 	sts	0x09A9, r18	; 0x8009a9 <player2+0x9>
player2.facing = 0;
    c7c2:	10 92 a8 09 	sts	0x09A8, r1	; 0x8009a8 <player2+0x8>
    c7c6:	10 92 a7 09 	sts	0x09A7, r1	; 0x8009a7 <player2+0x7>
player2.ximpulse = 1; 
    c7ca:	21 e0       	ldi	r18, 0x01	; 1
    c7cc:	20 93 ae 09 	sts	0x09AE, r18	; 0x8009ae <player2+0xe>
};
if ( !(joy&BTN_A) ) {
    c7d0:	ec 01       	movw	r28, r24
    c7d2:	cc 27       	eor	r28, r28
    c7d4:	d1 70       	andi	r29, 0x01	; 1
    c7d6:	90 fd       	sbrc	r25, 0
    c7d8:	09 c0       	rjmp	.+18     	; 0xc7ec <moveplayer2+0xb8>
player2.yimpulse = 0;
    c7da:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <player2+0xf>
player2.jumpreleased = true;
    c7de:	21 e0       	ldi	r18, 0x01	; 1
    c7e0:	20 93 b1 09 	sts	0x09B1, r18	; 0x8009b1 <player2+0x11>
player2.jumping = false;
    c7e4:	10 92 b0 09 	sts	0x09B0, r1	; 0x8009b0 <player2+0x10>
player2.jumpcounter = 0;
    c7e8:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <player2+0x13>
};

if ( !(joy&BTN_B) ) {
    c7ec:	80 fd       	sbrc	r24, 0
    c7ee:	03 c0       	rjmp	.+6      	; 0xc7f6 <moveplayer2+0xc2>
player2.bpressed = false;
    c7f0:	10 92 b2 09 	sts	0x09B2, r1	; 0x8009b2 <player2+0x12>
    c7f4:	21 c0       	rjmp	.+66     	; 0xc838 <moveplayer2+0x104>
};
if ( joy&BTN_B && player2.touchground) {
    c7f6:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <player2+0xd>
    c7fa:	88 23       	and	r24, r24
    c7fc:	09 f4       	brne	.+2      	; 0xc800 <moveplayer2+0xcc>
    c7fe:	40 c0       	rjmp	.+128    	; 0xc880 <moveplayer2+0x14c>
	if(bananaCount > 0 && player2.bpressed == false)
    c800:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <bananaCount>
    c804:	88 23       	and	r24, r24
    c806:	09 f4       	brne	.+2      	; 0xc80a <moveplayer2+0xd6>
    c808:	91 c2       	rjmp	.+1314   	; 0xcd2c <moveplayer2+0x5f8>
    c80a:	90 91 b2 09 	lds	r25, 0x09B2	; 0x8009b2 <player2+0x12>
    c80e:	91 11       	cpse	r25, r1
    c810:	8d c2       	rjmp	.+1306   	; 0xcd2c <moveplayer2+0x5f8>
	{
	bananaCount = bananaCount - 1;
    c812:	81 50       	subi	r24, 0x01	; 1
    c814:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <bananaCount>
	makeBanana( player2.x + 4, player2.y ,1);
    c818:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c81c:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c820:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    c824:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    c828:	41 e0       	ldi	r20, 0x01	; 1
    c82a:	50 e0       	ldi	r21, 0x00	; 0
    c82c:	04 96       	adiw	r24, 0x04	; 4
    c82e:	0e 94 95 59 	call	0xb32a	; 0xb32a <makeBanana>
	player2.bpressed = true;
    c832:	81 e0       	ldi	r24, 0x01	; 1
    c834:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <player2+0x12>
	};
};   


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    c838:	cd 2b       	or	r28, r29
    c83a:	11 f1       	breq	.+68     	; 0xc880 <moveplayer2+0x14c>
    c83c:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <player2+0xd>
    c840:	88 23       	and	r24, r24
    c842:	f1 f0       	breq	.+60     	; 0xc880 <moveplayer2+0x14c>
    c844:	80 91 b1 09 	lds	r24, 0x09B1	; 0x8009b1 <player2+0x11>
    c848:	88 23       	and	r24, r24
    c84a:	d1 f0       	breq	.+52     	; 0xc880 <moveplayer2+0x14c>
    c84c:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <player2+0x6>
    c850:	81 11       	cpse	r24, r1
    c852:	16 c0       	rjmp	.+44     	; 0xc880 <moveplayer2+0x14c>
player2.action = 'j';
    c854:	8a e6       	ldi	r24, 0x6A	; 106
    c856:	80 93 a9 09 	sts	0x09A9, r24	; 0x8009a9 <player2+0x9>
player2.yimpulse = 0;
    c85a:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <player2+0xf>
player2.jumping = true;
    c85e:	81 e0       	ldi	r24, 0x01	; 1
    c860:	80 93 b0 09 	sts	0x09B0, r24	; 0x8009b0 <player2+0x10>
player2.touchground = false;
    c864:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <player2+0xd>
player2.jumpreleased = false;
    c868:	10 92 b1 09 	sts	0x09B1, r1	; 0x8009b1 <player2+0x11>
player2.jumpcounter++ ; 
    c86c:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <player2+0x13>
    c870:	8f 5f       	subi	r24, 0xFF	; 255
    c872:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <player2+0x13>
TriggerFx(4,0xff,true);
    c876:	41 e0       	ldi	r20, 0x01	; 1
    c878:	6f ef       	ldi	r22, 0xFF	; 255
    c87a:	84 e0       	ldi	r24, 0x04	; 4
    c87c:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
};
};

oldx = player2.x;
    c880:	20 91 a0 09 	lds	r18, 0x09A0	; 0x8009a0 <player2>
    c884:	30 91 a1 09 	lds	r19, 0x09A1	; 0x8009a1 <player2+0x1>
    c888:	30 93 8b 09 	sts	0x098B, r19	; 0x80098b <oldx+0x1>
    c88c:	20 93 8a 09 	sts	0x098A, r18	; 0x80098a <oldx>
oldy = player2.y;
    c890:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c894:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c898:	70 93 05 0a 	sts	0x0A05, r23	; 0x800a05 <oldy+0x1>
    c89c:	60 93 04 0a 	sts	0x0A04, r22	; 0x800a04 <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    c8a0:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <player2+0x13>
    c8a4:	9f ef       	ldi	r25, 0xFF	; 255
    c8a6:	98 0f       	add	r25, r24
    c8a8:	99 31       	cpi	r25, 0x19	; 25
    c8aa:	18 f4       	brcc	.+6      	; 0xc8b2 <moveplayer2+0x17e>
    c8ac:	9c ef       	ldi	r25, 0xFC	; 252
    c8ae:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <player2+0xf>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    c8b2:	96 ee       	ldi	r25, 0xE6	; 230
    c8b4:	98 0f       	add	r25, r24
    c8b6:	9b 30       	cpi	r25, 0x0B	; 11
    c8b8:	18 f4       	brcc	.+6      	; 0xc8c0 <moveplayer2+0x18c>
    c8ba:	9d ef       	ldi	r25, 0xFD	; 253
    c8bc:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <player2+0xf>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    c8c0:	9b ed       	ldi	r25, 0xDB	; 219
    c8c2:	98 0f       	add	r25, r24
    c8c4:	94 30       	cpi	r25, 0x04	; 4
    c8c6:	18 f4       	brcc	.+6      	; 0xc8ce <moveplayer2+0x19a>
    c8c8:	9e ef       	ldi	r25, 0xFE	; 254
    c8ca:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <player2+0xf>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    c8ce:	97 ed       	ldi	r25, 0xD7	; 215
    c8d0:	98 0f       	add	r25, r24
    c8d2:	96 30       	cpi	r25, 0x06	; 6
    c8d4:	20 f4       	brcc	.+8      	; 0xc8de <moveplayer2+0x1aa>
    c8d6:	9f ef       	ldi	r25, 0xFF	; 255
    c8d8:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <player2+0xf>
    c8dc:	02 c0       	rjmp	.+4      	; 0xc8e2 <moveplayer2+0x1ae>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    c8de:	88 23       	and	r24, r24
    c8e0:	19 f0       	breq	.+6      	; 0xc8e8 <moveplayer2+0x1b4>
    c8e2:	8f 5f       	subi	r24, 0xFF	; 255
    c8e4:	80 93 b3 09 	sts	0x09B3, r24	; 0x8009b3 <player2+0x13>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    c8e8:	80 91 b3 09 	lds	r24, 0x09B3	; 0x8009b3 <player2+0x13>
    c8ec:	8f 32       	cpi	r24, 0x2F	; 47
    c8ee:	10 f0       	brcs	.+4      	; 0xc8f4 <moveplayer2+0x1c0>
    c8f0:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <player2+0x13>
player2.x = player2.x + player2.ximpulse;
    c8f4:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <player2+0xe>
    c8f8:	a9 01       	movw	r20, r18
    c8fa:	48 0f       	add	r20, r24
    c8fc:	51 1d       	adc	r21, r1
    c8fe:	87 fd       	sbrc	r24, 7
    c900:	5a 95       	dec	r21
    c902:	ca 01       	movw	r24, r20
    c904:	50 93 a1 09 	sts	0x09A1, r21	; 0x8009a1 <player2+0x1>
    c908:	40 93 a0 09 	sts	0x09A0, r20	; 0x8009a0 <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    c90c:	40 91 af 09 	lds	r20, 0x09AF	; 0x8009af <player2+0xf>
    c910:	64 0f       	add	r22, r20
    c912:	71 1d       	adc	r23, r1
    c914:	47 fd       	sbrc	r20, 7
    c916:	7a 95       	dec	r23
    c918:	6e 5f       	subi	r22, 0xFE	; 254
    c91a:	7f 4f       	sbci	r23, 0xFF	; 255
    c91c:	70 93 a3 09 	sts	0x09A3, r23	; 0x8009a3 <player2+0x3>
    c920:	60 93 a2 09 	sts	0x09A2, r22	; 0x8009a2 <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    c924:	28 17       	cp	r18, r24
    c926:	39 07       	cpc	r19, r25
    c928:	3c f4       	brge	.+14     	; 0xc938 <moveplayer2+0x204>
    c92a:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <player2+0x14>
    c92e:	2f 5f       	subi	r18, 0xFF	; 255
    c930:	20 93 b4 09 	sts	0x09B4, r18	; 0x8009b4 <player2+0x14>
    c934:	22 e7       	ldi	r18, 0x72	; 114
    c936:	09 c0       	rjmp	.+18     	; 0xc94a <moveplayer2+0x216>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    c938:	82 17       	cp	r24, r18
    c93a:	93 07       	cpc	r25, r19
    c93c:	4c f4       	brge	.+18     	; 0xc950 <moveplayer2+0x21c>
    c93e:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <player2+0x14>
    c942:	2f 5f       	subi	r18, 0xFF	; 255
    c944:	20 93 b4 09 	sts	0x09B4, r18	; 0x8009b4 <player2+0x14>
    c948:	2c e6       	ldi	r18, 0x6C	; 108
    c94a:	20 93 aa 09 	sts	0x09AA, r18	; 0x8009aa <player2+0xa>
    c94e:	05 c0       	rjmp	.+10     	; 0xc95a <moveplayer2+0x226>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    c950:	28 17       	cp	r18, r24
    c952:	39 07       	cpc	r19, r25
    c954:	11 f4       	brne	.+4      	; 0xc95a <moveplayer2+0x226>
    c956:	10 92 b4 09 	sts	0x09B4, r1	; 0x8009b4 <player2+0x14>
if (player2.aniframe > 0 ) player2.aniframe++;
    c95a:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <player2+0x14>
    c95e:	22 23       	and	r18, r18
    c960:	19 f0       	breq	.+6      	; 0xc968 <moveplayer2+0x234>
    c962:	2f 5f       	subi	r18, 0xFF	; 255
    c964:	20 93 b4 09 	sts	0x09B4, r18	; 0x8009b4 <player2+0x14>
if (player2.aniframe>24) player2.aniframe = 1;
    c968:	20 91 b4 09 	lds	r18, 0x09B4	; 0x8009b4 <player2+0x14>
    c96c:	29 31       	cpi	r18, 0x19	; 25
    c96e:	18 f0       	brcs	.+6      	; 0xc976 <moveplayer2+0x242>
    c970:	21 e0       	ldi	r18, 0x01	; 1
    c972:	20 93 b4 09 	sts	0x09B4, r18	; 0x8009b4 <player2+0x14>
if(checkBanana(player2.x + 4, player2.y ,1) == 1)
    c976:	41 e0       	ldi	r20, 0x01	; 1
    c978:	50 e0       	ldi	r21, 0x00	; 0
    c97a:	04 96       	adiw	r24, 0x04	; 4
    c97c:	0e 94 ed 59 	call	0xb3da	; 0xb3da <checkBanana>
    c980:	01 97       	sbiw	r24, 0x01	; 1
    c982:	19 f4       	brne	.+6      	; 0xc98a <moveplayer2+0x256>
{
    player2.stuck = true;
    c984:	81 e0       	ldi	r24, 0x01	; 1
    c986:	80 93 a6 09 	sts	0x09A6, r24	; 0x8009a6 <player2+0x6>
} 
checkcollide( player2.x, player2.y - 4 ,1);
    c98a:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c98e:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c992:	64 50       	subi	r22, 0x04	; 4
    c994:	71 09       	sbc	r23, r1
    c996:	41 e0       	ldi	r20, 0x01	; 1
    c998:	50 e0       	ldi	r21, 0x00	; 0
    c99a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    c99e:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    c9a2:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3);
    c9a6:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c9aa:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c9ae:	64 50       	subi	r22, 0x04	; 4
    c9b0:	71 09       	sbc	r23, r1
    c9b2:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    c9b6:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    c9ba:	43 e0       	ldi	r20, 0x03	; 3
    c9bc:	50 e0       	ldi	r21, 0x00	; 0
    c9be:	03 97       	sbiw	r24, 0x03	; 3
    c9c0:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3);
    c9c4:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c9c8:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c9cc:	64 50       	subi	r22, 0x04	; 4
    c9ce:	71 09       	sbc	r23, r1
    c9d0:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    c9d4:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    c9d8:	43 e0       	ldi	r20, 0x03	; 3
    c9da:	50 e0       	ldi	r21, 0x00	; 0
    c9dc:	04 96       	adiw	r24, 0x04	; 4
    c9de:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
    c9e2:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    c9e6:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    c9ea:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    c9ee:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    c9f2:	68 17       	cp	r22, r24
    c9f4:	79 07       	cpc	r23, r25
    c9f6:	54 f4       	brge	.+20     	; 0xca0c <moveplayer2+0x2d8>
    c9f8:	66 51       	subi	r22, 0x16	; 22
    c9fa:	71 09       	sbc	r23, r1
    c9fc:	42 e0       	ldi	r20, 0x02	; 2
    c9fe:	50 e0       	ldi	r21, 0x00	; 0
    ca00:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    ca04:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    ca08:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    ca0c:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    ca10:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    ca14:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    ca18:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    ca1c:	86 17       	cp	r24, r22
    ca1e:	97 07       	cpc	r25, r23
    ca20:	8c f5       	brge	.+98     	; 0xca84 <moveplayer2+0x350>
    ca22:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <player2+0xd>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    ca26:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    ca2a:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    ca2e:	40 e0       	ldi	r20, 0x00	; 0
    ca30:	50 e0       	ldi	r21, 0x00	; 0
    ca32:	03 97       	sbiw	r24, 0x03	; 3
    ca34:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    ca38:	80 ff       	sbrs	r24, 0
    ca3a:	15 c0       	rjmp	.+42     	; 0xca66 <moveplayer2+0x332>
    ca3c:	80 91 a2 09 	lds	r24, 0x09A2	; 0x8009a2 <player2+0x2>
    ca40:	90 91 a3 09 	lds	r25, 0x09A3	; 0x8009a3 <player2+0x3>
    ca44:	97 fd       	sbrc	r25, 7
    ca46:	0f 96       	adiw	r24, 0x0f	; 15
    ca48:	80 7f       	andi	r24, 0xF0	; 240
    ca4a:	01 97       	sbiw	r24, 0x01	; 1
    ca4c:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <player2+0x3>
    ca50:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <player2+0x2>
    ca54:	10 92 b0 09 	sts	0x09B0, r1	; 0x8009b0 <player2+0x10>
    ca58:	81 e0       	ldi	r24, 0x01	; 1
    ca5a:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <player2+0xd>
    ca5e:	87 e7       	ldi	r24, 0x77	; 119
    ca60:	80 93 a9 09 	sts	0x09A9, r24	; 0x8009a9 <player2+0x9>
    ca64:	0f c0       	rjmp	.+30     	; 0xca84 <moveplayer2+0x350>
    ca66:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    ca6a:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    ca6e:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    ca72:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    ca76:	40 e0       	ldi	r20, 0x00	; 0
    ca78:	50 e0       	ldi	r21, 0x00	; 0
    ca7a:	04 96       	adiw	r24, 0x04	; 4
    ca7c:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    ca80:	80 fd       	sbrc	r24, 0
    ca82:	dc cf       	rjmp	.-72     	; 0xca3c <moveplayer2+0x308>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    ca84:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    ca88:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    ca8c:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    ca90:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    ca94:	68 17       	cp	r22, r24
    ca96:	79 07       	cpc	r23, r25
    ca98:	74 f5       	brge	.+92     	; 0xcaf6 <moveplayer2+0x3c2>
    ca9a:	65 51       	subi	r22, 0x15	; 21
    ca9c:	71 09       	sbc	r23, r1
    ca9e:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    caa2:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    caa6:	40 e0       	ldi	r20, 0x00	; 0
    caa8:	50 e0       	ldi	r21, 0x00	; 0
    caaa:	03 97       	sbiw	r24, 0x03	; 3
    caac:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    cab0:	80 ff       	sbrs	r24, 0
    cab2:	10 c0       	rjmp	.+32     	; 0xcad4 <moveplayer2+0x3a0>
    cab4:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    cab8:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    cabc:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <player2+0x3>
    cac0:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <player2+0x2>
    cac4:	10 92 b3 09 	sts	0x09B3, r1	; 0x8009b3 <player2+0x13>
                                                                                                                                  TriggerFx(5,0xff,true);
    cac8:	41 e0       	ldi	r20, 0x01	; 1
    caca:	6f ef       	ldi	r22, 0xFF	; 255
    cacc:	85 e0       	ldi	r24, 0x05	; 5
    cace:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    cad2:	11 c0       	rjmp	.+34     	; 0xcaf6 <moveplayer2+0x3c2>
checkcollide( player2.x +4, player2.y - 4 ,3);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    cad4:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cad8:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cadc:	65 51       	subi	r22, 0x15	; 21
    cade:	71 09       	sbc	r23, r1
    cae0:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cae4:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cae8:	40 e0       	ldi	r20, 0x00	; 0
    caea:	50 e0       	ldi	r21, 0x00	; 0
    caec:	04 96       	adiw	r24, 0x04	; 4
    caee:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    caf2:	80 fd       	sbrc	r24, 0
    caf4:	df cf       	rjmp	.-66     	; 0xcab4 <moveplayer2+0x380>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0 )&1)  player2.x = oldx;  
    caf6:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cafa:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cafe:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    cb02:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    cb06:	28 17       	cp	r18, r24
    cb08:	39 07       	cpc	r19, r25
    cb0a:	3c f5       	brge	.+78     	; 0xcb5a <moveplayer2+0x426>
    cb0c:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cb10:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cb14:	63 50       	subi	r22, 0x03	; 3
    cb16:	71 09       	sbc	r23, r1
    cb18:	40 e0       	ldi	r20, 0x00	; 0
    cb1a:	50 e0       	ldi	r21, 0x00	; 0
    cb1c:	05 96       	adiw	r24, 0x05	; 5
    cb1e:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    cb22:	80 ff       	sbrs	r24, 0
    cb24:	09 c0       	rjmp	.+18     	; 0xcb38 <moveplayer2+0x404>
    cb26:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <oldx>
    cb2a:	90 91 8b 09 	lds	r25, 0x098B	; 0x80098b <oldx+0x1>
    cb2e:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    cb32:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
    cb36:	11 c0       	rjmp	.+34     	; 0xcb5a <moveplayer2+0x426>
    cb38:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cb3c:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cb40:	64 51       	subi	r22, 0x14	; 20
    cb42:	71 09       	sbc	r23, r1
    cb44:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cb48:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cb4c:	40 e0       	ldi	r20, 0x00	; 0
    cb4e:	50 e0       	ldi	r21, 0x00	; 0
    cb50:	05 96       	adiw	r24, 0x05	; 5
    cb52:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    cb56:	80 fd       	sbrc	r24, 0
    cb58:	e6 cf       	rjmp	.-52     	; 0xcb26 <moveplayer2+0x3f2>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0 )&1)  player2.x = oldx; 
    cb5a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cb5e:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cb62:	20 91 8a 09 	lds	r18, 0x098A	; 0x80098a <oldx>
    cb66:	30 91 8b 09 	lds	r19, 0x098B	; 0x80098b <oldx+0x1>
    cb6a:	82 17       	cp	r24, r18
    cb6c:	93 07       	cpc	r25, r19
    cb6e:	3c f5       	brge	.+78     	; 0xcbbe <moveplayer2+0x48a>
    cb70:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cb74:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cb78:	63 50       	subi	r22, 0x03	; 3
    cb7a:	71 09       	sbc	r23, r1
    cb7c:	40 e0       	ldi	r20, 0x00	; 0
    cb7e:	50 e0       	ldi	r21, 0x00	; 0
    cb80:	04 97       	sbiw	r24, 0x04	; 4
    cb82:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    cb86:	80 ff       	sbrs	r24, 0
    cb88:	09 c0       	rjmp	.+18     	; 0xcb9c <moveplayer2+0x468>
    cb8a:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <oldx>
    cb8e:	90 91 8b 09 	lds	r25, 0x098B	; 0x80098b <oldx+0x1>
    cb92:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    cb96:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
    cb9a:	11 c0       	rjmp	.+34     	; 0xcbbe <moveplayer2+0x48a>
    cb9c:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cba0:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cba4:	64 51       	subi	r22, 0x14	; 20
    cba6:	71 09       	sbc	r23, r1
    cba8:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cbac:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cbb0:	40 e0       	ldi	r20, 0x00	; 0
    cbb2:	50 e0       	ldi	r21, 0x00	; 0
    cbb4:	04 97       	sbiw	r24, 0x04	; 4
    cbb6:	0e 94 d9 5a 	call	0xb5b2	; 0xb5b2 <checkcollide>
    cbba:	80 fd       	sbrc	r24, 0
    cbbc:	e6 cf       	rjmp	.-52     	; 0xcb8a <moveplayer2+0x456>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,1 );
    cbbe:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cbc2:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cbc6:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    cbca:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    cbce:	86 17       	cp	r24, r22
    cbd0:	97 07       	cpc	r25, r23
    cbd2:	4c f4       	brge	.+18     	; 0xcbe6 <moveplayer2+0x4b2>
    cbd4:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cbd8:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cbdc:	41 e0       	ldi	r20, 0x01	; 1
    cbde:	50 e0       	ldi	r21, 0x00	; 0
    cbe0:	04 96       	adiw	r24, 0x04	; 4
    cbe2:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x - 4, player2.y ,1 );
    cbe6:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cbea:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cbee:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    cbf2:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    cbf6:	86 17       	cp	r24, r22
    cbf8:	97 07       	cpc	r25, r23
    cbfa:	4c f4       	brge	.+18     	; 0xcc0e <moveplayer2+0x4da>
    cbfc:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc00:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cc04:	41 e0       	ldi	r20, 0x01	; 1
    cc06:	50 e0       	ldi	r21, 0x00	; 0
    cc08:	04 97       	sbiw	r24, 0x04	; 4
    cc0a:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x , player2.y ,1 );
    cc0e:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cc12:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cc16:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    cc1a:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    cc1e:	86 17       	cp	r24, r22
    cc20:	97 07       	cpc	r25, r23
    cc22:	44 f4       	brge	.+16     	; 0xcc34 <moveplayer2+0x500>
    cc24:	41 e0       	ldi	r20, 0x01	; 1
    cc26:	50 e0       	ldi	r21, 0x00	; 0
    cc28:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc2c:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cc30:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player2.x +4, player2.y -3,0 );
    cc34:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cc38:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cc3c:	63 50       	subi	r22, 0x03	; 3
    cc3e:	71 09       	sbc	r23, r1
    cc40:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc44:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cc48:	40 e0       	ldi	r20, 0x00	; 0
    cc4a:	50 e0       	ldi	r21, 0x00	; 0
    cc4c:	04 96       	adiw	r24, 0x04	; 4
    cc4e:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player2.x +4, player2.y -19,0 );
    cc52:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cc56:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cc5a:	63 51       	subi	r22, 0x13	; 19
    cc5c:	71 09       	sbc	r23, r1
    cc5e:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc62:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cc66:	40 e0       	ldi	r20, 0x00	; 0
    cc68:	50 e0       	ldi	r21, 0x00	; 0
    cc6a:	04 96       	adiw	r24, 0x04	; 4
    cc6c:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player2.x -3, player2.y -3 ,0);
    cc70:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cc74:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cc78:	63 50       	subi	r22, 0x03	; 3
    cc7a:	71 09       	sbc	r23, r1
    cc7c:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc80:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cc84:	40 e0       	ldi	r20, 0x00	; 0
    cc86:	50 e0       	ldi	r21, 0x00	; 0
    cc88:	03 97       	sbiw	r24, 0x03	; 3
    cc8a:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player2.x -3, player2.y -19 ,0);  
    cc8e:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cc92:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    cc96:	63 51       	subi	r22, 0x13	; 19
    cc98:	71 09       	sbc	r23, r1
    cc9a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cc9e:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cca2:	40 e0       	ldi	r20, 0x00	; 0
    cca4:	50 e0       	ldi	r21, 0x00	; 0
    cca6:	03 97       	sbiw	r24, 0x03	; 3
    cca8:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
checkmonster(player2.x , player2.y -22 ,0);
    ccac:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    ccb0:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    ccb4:	66 51       	subi	r22, 0x16	; 22
    ccb6:	71 09       	sbc	r23, r1
    ccb8:	40 e0       	ldi	r20, 0x00	; 0
    ccba:	50 e0       	ldi	r21, 0x00	; 0
    ccbc:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    ccc0:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    ccc4:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,0 );
    ccc8:	60 91 a2 09 	lds	r22, 0x09A2	; 0x8009a2 <player2+0x2>
    cccc:	70 91 a3 09 	lds	r23, 0x09A3	; 0x8009a3 <player2+0x3>
    ccd0:	80 91 04 0a 	lds	r24, 0x0A04	; 0x800a04 <oldy>
    ccd4:	90 91 05 0a 	lds	r25, 0x0A05	; 0x800a05 <oldy+0x1>
    ccd8:	86 17       	cp	r24, r22
    ccda:	97 07       	cpc	r25, r23
    ccdc:	4c f4       	brge	.+18     	; 0xccf0 <moveplayer2+0x5bc>
    ccde:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cce2:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cce6:	40 e0       	ldi	r20, 0x00	; 0
    cce8:	50 e0       	ldi	r21, 0x00	; 0
    ccea:	04 96       	adiw	r24, 0x04	; 4
    ccec:	0e 94 c2 5f 	call	0xbf84	; 0xbf84 <checkmonster>
player2.ximpulse = 0;    
    ccf0:	10 92 ae 09 	sts	0x09AE, r1	; 0x8009ae <player2+0xe>
player2.yimpulse = 0;
    ccf4:	10 92 af 09 	sts	0x09AF, r1	; 0x8009af <player2+0xf>
if ( player2.x < 8 ) player2.x = 8;
    ccf8:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    ccfc:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cd00:	08 97       	sbiw	r24, 0x08	; 8
    cd02:	34 f4       	brge	.+12     	; 0xcd10 <moveplayer2+0x5dc>
    cd04:	88 e0       	ldi	r24, 0x08	; 8
    cd06:	90 e0       	ldi	r25, 0x00	; 0
    cd08:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    cd0c:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
if ( player2.x > 232 ) player2.x = 232;    
    cd10:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    cd14:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    cd18:	89 3e       	cpi	r24, 0xE9	; 233
    cd1a:	91 05       	cpc	r25, r1
    cd1c:	5c f0       	brlt	.+22     	; 0xcd34 <moveplayer2+0x600>
    cd1e:	88 ee       	ldi	r24, 0xE8	; 232
    cd20:	90 e0       	ldi	r25, 0x00	; 0
    cd22:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    cd26:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
    cd2a:	04 c0       	rjmp	.+8      	; 0xcd34 <moveplayer2+0x600>
	player2.bpressed = true;
	};
};   


if (joy&BTN_A && player2.touchground && player2.jumpreleased && player2.stuck == false) {
    cd2c:	cd 2b       	or	r28, r29
    cd2e:	09 f0       	breq	.+2      	; 0xcd32 <moveplayer2+0x5fe>
    cd30:	89 cd       	rjmp	.-1262   	; 0xc844 <moveplayer2+0x110>
    cd32:	a6 cd       	rjmp	.-1204   	; 0xc880 <moveplayer2+0x14c>

    

return;
  
}
    cd34:	df 91       	pop	r29
    cd36:	cf 91       	pop	r28
    cd38:	08 95       	ret

0000cd3a <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    cd3a:	20 91 bf 09 	lds	r18, 0x09BF	; 0x8009bf <owl+0x9>
    cd3e:	22 23       	and	r18, r18
    cd40:	79 f0       	breq	.+30     	; 0xcd60 <scrollmonster+0x26>
    cd42:	40 91 ba 09 	lds	r20, 0x09BA	; 0x8009ba <owl+0x4>
    cd46:	50 91 bb 09 	lds	r21, 0x09BB	; 0x8009bb <owl+0x5>
    cd4a:	9c 01       	movw	r18, r24
    cd4c:	22 0f       	add	r18, r18
    cd4e:	33 1f       	adc	r19, r19
    cd50:	22 0f       	add	r18, r18
    cd52:	33 1f       	adc	r19, r19
    cd54:	24 0f       	add	r18, r20
    cd56:	35 1f       	adc	r19, r21
    cd58:	30 93 bb 09 	sts	0x09BB, r19	; 0x8009bb <owl+0x5>
    cd5c:	20 93 ba 09 	sts	0x09BA, r18	; 0x8009ba <owl+0x4>
if (blob.onscreen) blob.x2 =  blob.x2 + ( x << 2 );
    cd60:	20 91 5f 09 	lds	r18, 0x095F	; 0x80095f <blob+0x9>
    cd64:	22 23       	and	r18, r18
    cd66:	71 f0       	breq	.+28     	; 0xcd84 <scrollmonster+0x4a>
    cd68:	88 0f       	add	r24, r24
    cd6a:	99 1f       	adc	r25, r25
    cd6c:	88 0f       	add	r24, r24
    cd6e:	99 1f       	adc	r25, r25
    cd70:	20 91 5a 09 	lds	r18, 0x095A	; 0x80095a <blob+0x4>
    cd74:	30 91 5b 09 	lds	r19, 0x095B	; 0x80095b <blob+0x5>
    cd78:	82 0f       	add	r24, r18
    cd7a:	93 1f       	adc	r25, r19
    cd7c:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    cd80:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    cd84:	08 95       	ret

0000cd86 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    cd86:	20 91 9f 09 	lds	r18, 0x099F	; 0x80099f <MonsteronScreen>
    cd8a:	21 11       	cpse	r18, r1
    cd8c:	38 c0       	rjmp	.+112    	; 0xcdfe <setowl+0x78>
if ( owl.onscreen == true ) return;    
    cd8e:	20 91 bf 09 	lds	r18, 0x09BF	; 0x8009bf <owl+0x9>
    cd92:	21 11       	cpse	r18, r1
    cd94:	34 c0       	rjmp	.+104    	; 0xcdfe <setowl+0x78>
owl.x = x * 8;
    cd96:	33 e0       	ldi	r19, 0x03	; 3
    cd98:	88 0f       	add	r24, r24
    cd9a:	99 1f       	adc	r25, r25
    cd9c:	3a 95       	dec	r19
    cd9e:	e1 f7       	brne	.-8      	; 0xcd98 <setowl+0x12>
    cda0:	90 93 b7 09 	sts	0x09B7, r25	; 0x8009b7 <owl+0x1>
    cda4:	80 93 b6 09 	sts	0x09B6, r24	; 0x8009b6 <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    cda8:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    cdac:	88 23       	and	r24, r24
    cdae:	31 f0       	breq	.+12     	; 0xcdbc <setowl+0x36>
    cdb0:	80 ef       	ldi	r24, 0xF0	; 240
    cdb2:	90 e0       	ldi	r25, 0x00	; 0
    cdb4:	90 93 b7 09 	sts	0x09B7, r25	; 0x8009b7 <owl+0x1>
    cdb8:	80 93 b6 09 	sts	0x09B6, r24	; 0x8009b6 <owl>
owl.y = y * 8;     
    cdbc:	83 e0       	ldi	r24, 0x03	; 3
    cdbe:	66 0f       	add	r22, r22
    cdc0:	77 1f       	adc	r23, r23
    cdc2:	8a 95       	dec	r24
    cdc4:	e1 f7       	brne	.-8      	; 0xcdbe <setowl+0x38>
    cdc6:	70 93 b9 09 	sts	0x09B9, r23	; 0x8009b9 <owl+0x3>
    cdca:	60 93 b8 09 	sts	0x09B8, r22	; 0x8009b8 <owl+0x2>
owl.x2 = owl.x << 2;        
    cdce:	80 91 b6 09 	lds	r24, 0x09B6	; 0x8009b6 <owl>
    cdd2:	90 91 b7 09 	lds	r25, 0x09B7	; 0x8009b7 <owl+0x1>
    cdd6:	88 0f       	add	r24, r24
    cdd8:	99 1f       	adc	r25, r25
    cdda:	88 0f       	add	r24, r24
    cddc:	99 1f       	adc	r25, r25
    cdde:	90 93 bb 09 	sts	0x09BB, r25	; 0x8009bb <owl+0x5>
    cde2:	80 93 ba 09 	sts	0x09BA, r24	; 0x8009ba <owl+0x4>
owl.ximpulse = -1;
    cde6:	8f ef       	ldi	r24, 0xFF	; 255
    cde8:	80 93 bd 09 	sts	0x09BD, r24	; 0x8009bd <owl+0x7>
owl.yimpulse = 0;    
    cdec:	10 92 be 09 	sts	0x09BE, r1	; 0x8009be <owl+0x8>
owl.onscreen = true;
    cdf0:	81 e0       	ldi	r24, 0x01	; 1
    cdf2:	80 93 bf 09 	sts	0x09BF, r24	; 0x8009bf <owl+0x9>
owl.alive = true; 
    cdf6:	80 93 c0 09 	sts	0x09C0, r24	; 0x8009c0 <owl+0xa>
MonsteronScreen = true;     
    cdfa:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <MonsteronScreen>
    cdfe:	08 95       	ret

0000ce00 <setblob>:
}

void setblob(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    ce00:	20 91 9f 09 	lds	r18, 0x099F	; 0x80099f <MonsteronScreen>
    ce04:	21 11       	cpse	r18, r1
    ce06:	38 c0       	rjmp	.+112    	; 0xce78 <setblob+0x78>
if ( blob.onscreen == true ) return;    
    ce08:	20 91 5f 09 	lds	r18, 0x095F	; 0x80095f <blob+0x9>
    ce0c:	21 11       	cpse	r18, r1
    ce0e:	34 c0       	rjmp	.+104    	; 0xce78 <setblob+0x78>
blob.x = x * 8;
    ce10:	33 e0       	ldi	r19, 0x03	; 3
    ce12:	88 0f       	add	r24, r24
    ce14:	99 1f       	adc	r25, r25
    ce16:	3a 95       	dec	r19
    ce18:	e1 f7       	brne	.-8      	; 0xce12 <setblob+0x12>
    ce1a:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    ce1e:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
if (scrolltiles > 0 )  blob.x = 15 * 16;
    ce22:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    ce26:	88 23       	and	r24, r24
    ce28:	31 f0       	breq	.+12     	; 0xce36 <setblob+0x36>
    ce2a:	80 ef       	ldi	r24, 0xF0	; 240
    ce2c:	90 e0       	ldi	r25, 0x00	; 0
    ce2e:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    ce32:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
blob.y = y * 8;     
    ce36:	83 e0       	ldi	r24, 0x03	; 3
    ce38:	66 0f       	add	r22, r22
    ce3a:	77 1f       	adc	r23, r23
    ce3c:	8a 95       	dec	r24
    ce3e:	e1 f7       	brne	.-8      	; 0xce38 <setblob+0x38>
    ce40:	70 93 59 09 	sts	0x0959, r23	; 0x800959 <blob+0x3>
    ce44:	60 93 58 09 	sts	0x0958, r22	; 0x800958 <blob+0x2>
blob.x2 = blob.x << 2;        
    ce48:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    ce4c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    ce50:	88 0f       	add	r24, r24
    ce52:	99 1f       	adc	r25, r25
    ce54:	88 0f       	add	r24, r24
    ce56:	99 1f       	adc	r25, r25
    ce58:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    ce5c:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
blob.ximpulse = -2;
    ce60:	8e ef       	ldi	r24, 0xFE	; 254
    ce62:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
blob.yimpulse = 0;    
    ce66:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <blob+0x8>
blob.onscreen = true;
    ce6a:	81 e0       	ldi	r24, 0x01	; 1
    ce6c:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <blob+0x9>
blob.alive = true;   
    ce70:	80 93 60 09 	sts	0x0960, r24	; 0x800960 <blob+0xa>
MonsteronScreen = true;    
    ce74:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <MonsteronScreen>
    ce78:	08 95       	ret

0000ce7a <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    ce7a:	6f 92       	push	r6
    ce7c:	7f 92       	push	r7
    ce7e:	8f 92       	push	r8
    ce80:	bf 92       	push	r11
    ce82:	cf 92       	push	r12
    ce84:	df 92       	push	r13
    ce86:	ef 92       	push	r14
    ce88:	ff 92       	push	r15
    ce8a:	0f 93       	push	r16
    ce8c:	1f 93       	push	r17
    ce8e:	cf 93       	push	r28
    ce90:	df 93       	push	r29
player.stuck = false;
    ce92:	10 92 67 09 	sts	0x0967, r1	; 0x800967 <player+0x6>
player2.stuck = false;
    ce96:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <player2+0x6>
player.sCount =0;
    ce9a:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <player+0x5>
    ce9e:	10 92 65 09 	sts	0x0965, r1	; 0x800965 <player+0x4>
player2.sCount =0;
    cea2:	10 92 a5 09 	sts	0x09A5, r1	; 0x8009a5 <player2+0x5>
    cea6:	10 92 a4 09 	sts	0x09A4, r1	; 0x8009a4 <player2+0x4>
    ceaa:	01 e0       	ldi	r16, 0x01	; 1
    ceac:	e1 2c       	mov	r14, r1
    ceae:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    ceb0:	c1 2c       	mov	r12, r1
    ceb2:	d1 2c       	mov	r13, r1
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    ceb4:	be 2c       	mov	r11, r14
    ceb6:	36 01       	movw	r6, r12
    ceb8:	c0 e0       	ldi	r28, 0x00	; 0
    ceba:	d0 e0       	ldi	r29, 0x00	; 0

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    cebc:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <level>
    cec0:	81 11       	cpse	r24, r1
    cec2:	04 c0       	rjmp	.+8      	; 0xcecc <drawlevel+0x52>
    cec4:	f3 01       	movw	r30, r6
    cec6:	e1 58       	subi	r30, 0x81	; 129
    cec8:	fa 4c       	sbci	r31, 0xCA	; 202
    ceca:	35 c0       	rjmp	.+106    	; 0xcf36 <drawlevel+0xbc>
if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    cecc:	81 30       	cpi	r24, 0x01	; 1
    cece:	21 f4       	brne	.+8      	; 0xced8 <drawlevel+0x5e>
    ced0:	f3 01       	movw	r30, r6
    ced2:	ed 56       	subi	r30, 0x6D	; 109
    ced4:	ff 4c       	sbci	r31, 0xCF	; 207
    ced6:	2f c0       	rjmp	.+94     	; 0xcf36 <drawlevel+0xbc>
if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    ced8:	82 30       	cpi	r24, 0x02	; 2
    ceda:	21 f4       	brne	.+8      	; 0xcee4 <drawlevel+0x6a>
    cedc:	f3 01       	movw	r30, r6
    cede:	e9 55       	subi	r30, 0x59	; 89
    cee0:	f4 4d       	sbci	r31, 0xD4	; 212
    cee2:	29 c0       	rjmp	.+82     	; 0xcf36 <drawlevel+0xbc>
if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    cee4:	83 30       	cpi	r24, 0x03	; 3
    cee6:	21 f4       	brne	.+8      	; 0xcef0 <drawlevel+0x76>
    cee8:	f3 01       	movw	r30, r6
    ceea:	e5 54       	subi	r30, 0x45	; 69
    ceec:	f9 4d       	sbci	r31, 0xD9	; 217
    ceee:	23 c0       	rjmp	.+70     	; 0xcf36 <drawlevel+0xbc>
if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    cef0:	84 30       	cpi	r24, 0x04	; 4
    cef2:	21 f4       	brne	.+8      	; 0xcefc <drawlevel+0x82>
    cef4:	f3 01       	movw	r30, r6
    cef6:	e1 53       	subi	r30, 0x31	; 49
    cef8:	fe 4d       	sbci	r31, 0xDE	; 222
    cefa:	1d c0       	rjmp	.+58     	; 0xcf36 <drawlevel+0xbc>
if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    cefc:	85 30       	cpi	r24, 0x05	; 5
    cefe:	21 f4       	brne	.+8      	; 0xcf08 <drawlevel+0x8e>
    cf00:	f3 01       	movw	r30, r6
    cf02:	ed 51       	subi	r30, 0x1D	; 29
    cf04:	f3 4e       	sbci	r31, 0xE3	; 227
    cf06:	17 c0       	rjmp	.+46     	; 0xcf36 <drawlevel+0xbc>
if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    cf08:	86 30       	cpi	r24, 0x06	; 6
    cf0a:	21 f4       	brne	.+8      	; 0xcf14 <drawlevel+0x9a>
    cf0c:	f3 01       	movw	r30, r6
    cf0e:	e9 50       	subi	r30, 0x09	; 9
    cf10:	f8 4e       	sbci	r31, 0xE8	; 232
    cf12:	11 c0       	rjmp	.+34     	; 0xcf36 <drawlevel+0xbc>
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    cf14:	87 30       	cpi	r24, 0x07	; 7
    cf16:	21 f4       	brne	.+8      	; 0xcf20 <drawlevel+0xa6>
    cf18:	f3 01       	movw	r30, r6
    cf1a:	e5 5f       	subi	r30, 0xF5	; 245
    cf1c:	fc 4e       	sbci	r31, 0xEC	; 236
    cf1e:	0b c0       	rjmp	.+22     	; 0xcf36 <drawlevel+0xbc>
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    cf20:	88 30       	cpi	r24, 0x08	; 8
    cf22:	21 f4       	brne	.+8      	; 0xcf2c <drawlevel+0xb2>
    cf24:	f3 01       	movw	r30, r6
    cf26:	e1 5e       	subi	r30, 0xE1	; 225
    cf28:	f1 4f       	sbci	r31, 0xF1	; 241
    cf2a:	05 c0       	rjmp	.+10     	; 0xcf36 <drawlevel+0xbc>
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    cf2c:	89 30       	cpi	r24, 0x09	; 9
    cf2e:	21 f4       	brne	.+8      	; 0xcf38 <drawlevel+0xbe>
    cf30:	f3 01       	movw	r30, r6
    cf32:	ed 5c       	subi	r30, 0xCD	; 205
    cf34:	f6 4f       	sbci	r31, 0xF6	; 246
    cf36:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    cf38:	11 30       	cpi	r17, 0x01	; 1
    cf3a:	19 f4       	brne	.+6      	; 0xcf42 <drawlevel+0xc8>
    cf3c:	49 e3       	ldi	r20, 0x39	; 57
    cf3e:	57 e8       	ldi	r21, 0x87	; 135
    cf40:	d1 c0       	rjmp	.+418    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    cf42:	12 30       	cpi	r17, 0x02	; 2
    cf44:	19 f4       	brne	.+6      	; 0xcf4c <drawlevel+0xd2>
    cf46:	47 e4       	ldi	r20, 0x47	; 71
    cf48:	57 e8       	ldi	r21, 0x87	; 135
    cf4a:	cc c0       	rjmp	.+408    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    cf4c:	13 30       	cpi	r17, 0x03	; 3
    cf4e:	19 f4       	brne	.+6      	; 0xcf56 <drawlevel+0xdc>
    cf50:	41 e4       	ldi	r20, 0x41	; 65
    cf52:	57 e8       	ldi	r21, 0x87	; 135
    cf54:	c7 c0       	rjmp	.+398    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 4 ) DrawMap2(destx  ,yi *2  ,block2);
    cf56:	14 30       	cpi	r17, 0x04	; 4
    cf58:	19 f4       	brne	.+6      	; 0xcf60 <drawlevel+0xe6>
    cf5a:	47 ef       	ldi	r20, 0xF7	; 247
    cf5c:	56 e8       	ldi	r21, 0x86	; 134
    cf5e:	c2 c0       	rjmp	.+388    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    cf60:	15 30       	cpi	r17, 0x05	; 5
    cf62:	19 f4       	brne	.+6      	; 0xcf6a <drawlevel+0xf0>
    cf64:	41 e3       	ldi	r20, 0x31	; 49
    cf66:	57 e8       	ldi	r21, 0x87	; 135
    cf68:	bd c0       	rjmp	.+378    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    cf6a:	16 30       	cpi	r17, 0x06	; 6
    cf6c:	19 f4       	brne	.+6      	; 0xcf74 <drawlevel+0xfa>
    cf6e:	49 e2       	ldi	r20, 0x29	; 41
    cf70:	57 e8       	ldi	r21, 0x87	; 135
    cf72:	b8 c0       	rjmp	.+368    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    cf74:	17 30       	cpi	r17, 0x07	; 7
    cf76:	19 f4       	brne	.+6      	; 0xcf7e <drawlevel+0x104>
    cf78:	41 ef       	ldi	r20, 0xF1	; 241
    cf7a:	56 e8       	ldi	r21, 0x86	; 134
    cf7c:	b3 c0       	rjmp	.+358    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    cf7e:	18 30       	cpi	r17, 0x08	; 8
    cf80:	19 f4       	brne	.+6      	; 0xcf88 <drawlevel+0x10e>
    cf82:	41 e2       	ldi	r20, 0x21	; 33
    cf84:	57 e8       	ldi	r21, 0x87	; 135
    cf86:	ae c0       	rjmp	.+348    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    cf88:	19 30       	cpi	r17, 0x09	; 9
    cf8a:	19 f4       	brne	.+6      	; 0xcf92 <drawlevel+0x118>
    cf8c:	4b e1       	ldi	r20, 0x1B	; 27
    cf8e:	57 e8       	ldi	r21, 0x87	; 135
    cf90:	a9 c0       	rjmp	.+338    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    cf92:	1a 30       	cpi	r17, 0x0A	; 10
    cf94:	19 f4       	brne	.+6      	; 0xcf9c <drawlevel+0x122>
    cf96:	45 e1       	ldi	r20, 0x15	; 21
    cf98:	57 e8       	ldi	r21, 0x87	; 135
    cf9a:	a4 c0       	rjmp	.+328    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 11 ) DrawMap2(destx ,yi *2  ,tube0);
    cf9c:	1b 30       	cpi	r17, 0x0B	; 11
    cf9e:	19 f4       	brne	.+6      	; 0xcfa6 <drawlevel+0x12c>
    cfa0:	48 ea       	ldi	r20, 0xA8	; 168
    cfa2:	56 e8       	ldi	r21, 0x86	; 134
    cfa4:	9f c0       	rjmp	.+318    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,tube1);
    cfa6:	1c 30       	cpi	r17, 0x0C	; 12
    cfa8:	19 f4       	brne	.+6      	; 0xcfb0 <drawlevel+0x136>
    cfaa:	42 ea       	ldi	r20, 0xA2	; 162
    cfac:	56 e8       	ldi	r21, 0x86	; 134
    cfae:	9a c0       	rjmp	.+308    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,tube2);
    cfb0:	1d 30       	cpi	r17, 0x0D	; 13
    cfb2:	19 f4       	brne	.+6      	; 0xcfba <drawlevel+0x140>
    cfb4:	4c e9       	ldi	r20, 0x9C	; 156
    cfb6:	56 e8       	ldi	r21, 0x86	; 134
    cfb8:	95 c0       	rjmp	.+298    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 14 ) DrawMap2(destx ,yi *2  ,tube3);
    cfba:	1e 30       	cpi	r17, 0x0E	; 14
    cfbc:	19 f4       	brne	.+6      	; 0xcfc4 <drawlevel+0x14a>
    cfbe:	46 e9       	ldi	r20, 0x96	; 150
    cfc0:	56 e8       	ldi	r21, 0x86	; 134
    cfc2:	90 c0       	rjmp	.+288    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    cfc4:	1f 30       	cpi	r17, 0x0F	; 15
    cfc6:	19 f4       	brne	.+6      	; 0xcfce <drawlevel+0x154>
    cfc8:	40 e9       	ldi	r20, 0x90	; 144
    cfca:	56 e8       	ldi	r21, 0x86	; 134
    cfcc:	8b c0       	rjmp	.+278    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    cfce:	10 31       	cpi	r17, 0x10	; 16
    cfd0:	19 f4       	brne	.+6      	; 0xcfd8 <drawlevel+0x15e>
    cfd2:	4a e8       	ldi	r20, 0x8A	; 138
    cfd4:	56 e8       	ldi	r21, 0x86	; 134
    cfd6:	86 c0       	rjmp	.+268    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,bush1);
    cfd8:	1f 31       	cpi	r17, 0x1F	; 31
    cfda:	19 f4       	brne	.+6      	; 0xcfe2 <drawlevel+0x168>
    cfdc:	48 ed       	ldi	r20, 0xD8	; 216
    cfde:	56 e8       	ldi	r21, 0x86	; 134
    cfe0:	81 c0       	rjmp	.+258    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,bush2);
    cfe2:	10 32       	cpi	r17, 0x20	; 32
    cfe4:	19 f4       	brne	.+6      	; 0xcfec <drawlevel+0x172>
    cfe6:	42 ed       	ldi	r20, 0xD2	; 210
    cfe8:	56 e8       	ldi	r21, 0x86	; 134
    cfea:	7c c0       	rjmp	.+248    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,bush3);
    cfec:	11 32       	cpi	r17, 0x21	; 33
    cfee:	19 f4       	brne	.+6      	; 0xcff6 <drawlevel+0x17c>
    cff0:	4c ec       	ldi	r20, 0xCC	; 204
    cff2:	56 e8       	ldi	r21, 0x86	; 134
    cff4:	77 c0       	rjmp	.+238    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,bush4);
    cff6:	12 32       	cpi	r17, 0x22	; 34
    cff8:	19 f4       	brne	.+6      	; 0xd000 <drawlevel+0x186>
    cffa:	46 ec       	ldi	r20, 0xC6	; 198
    cffc:	56 e8       	ldi	r21, 0x86	; 134
    cffe:	72 c0       	rjmp	.+228    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    d000:	13 32       	cpi	r17, 0x23	; 35
    d002:	19 f4       	brne	.+6      	; 0xd00a <drawlevel+0x190>
    d004:	40 ec       	ldi	r20, 0xC0	; 192
    d006:	56 e8       	ldi	r21, 0x86	; 134
    d008:	6d c0       	rjmp	.+218    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    d00a:	14 32       	cpi	r17, 0x24	; 36
    d00c:	19 f4       	brne	.+6      	; 0xd014 <drawlevel+0x19a>
    d00e:	4a eb       	ldi	r20, 0xBA	; 186
    d010:	56 e8       	ldi	r21, 0x86	; 134
    d012:	68 c0       	rjmp	.+208    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    d014:	15 32       	cpi	r17, 0x25	; 37
    d016:	19 f4       	brne	.+6      	; 0xd01e <drawlevel+0x1a4>
    d018:	44 eb       	ldi	r20, 0xB4	; 180
    d01a:	56 e8       	ldi	r21, 0x86	; 134
    d01c:	63 c0       	rjmp	.+198    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    d01e:	16 32       	cpi	r17, 0x26	; 38
    d020:	19 f4       	brne	.+6      	; 0xd028 <drawlevel+0x1ae>
    d022:	4e ea       	ldi	r20, 0xAE	; 174
    d024:	56 e8       	ldi	r21, 0x86	; 134
    d026:	5e c0       	rjmp	.+188    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 39 ) {DrawMap2(destx ,yi *2 ,bridge0);DrawMap2(destx +1 ,yi *2  ,bridge0);DrawMap2(destx  ,yi *2 +1 ,nb);DrawMap2(destx +1 ,yi *2 +1 ,nb);};
    d028:	17 32       	cpi	r17, 0x27	; 39
    d02a:	c1 f4       	brne	.+48     	; 0xd05c <drawlevel+0x1e2>
    d02c:	4f e6       	ldi	r20, 0x6F	; 111
    d02e:	56 e8       	ldi	r21, 0x86	; 134
    d030:	6c 2f       	mov	r22, r28
    d032:	8b 2d       	mov	r24, r11
    d034:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d038:	4f e6       	ldi	r20, 0x6F	; 111
    d03a:	56 e8       	ldi	r21, 0x86	; 134
    d03c:	6c 2f       	mov	r22, r28
    d03e:	80 2f       	mov	r24, r16
    d040:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d044:	43 e6       	ldi	r20, 0x63	; 99
    d046:	56 e8       	ldi	r21, 0x86	; 134
    d048:	8c 2e       	mov	r8, r28
    d04a:	83 94       	inc	r8
    d04c:	68 2d       	mov	r22, r8
    d04e:	8b 2d       	mov	r24, r11
    d050:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d054:	43 e6       	ldi	r20, 0x63	; 99
    d056:	56 e8       	ldi	r21, 0x86	; 134
    d058:	68 2d       	mov	r22, r8
    d05a:	3e c0       	rjmp	.+124    	; 0xd0d8 <drawlevel+0x25e>
    if ( c == 21 ) DrawMap2(destx ,yi *2  ,mush0);
    d05c:	15 31       	cpi	r17, 0x15	; 21
    d05e:	19 f4       	brne	.+6      	; 0xd066 <drawlevel+0x1ec>
    d060:	44 e8       	ldi	r20, 0x84	; 132
    d062:	56 e8       	ldi	r21, 0x86	; 134
    d064:	3f c0       	rjmp	.+126    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 22 ) DrawMap2(destx ,yi *2  ,mush1);
    d066:	16 31       	cpi	r17, 0x16	; 22
    d068:	19 f4       	brne	.+6      	; 0xd070 <drawlevel+0x1f6>
    d06a:	4e e7       	ldi	r20, 0x7E	; 126
    d06c:	56 e8       	ldi	r21, 0x86	; 134
    d06e:	3a c0       	rjmp	.+116    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,mush2);
    d070:	17 31       	cpi	r17, 0x17	; 23
    d072:	19 f4       	brne	.+6      	; 0xd07a <drawlevel+0x200>
    d074:	48 e7       	ldi	r20, 0x78	; 120
    d076:	56 e8       	ldi	r21, 0x86	; 134
    d078:	35 c0       	rjmp	.+106    	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,mush3);	
    d07a:	18 31       	cpi	r17, 0x18	; 24
    d07c:	19 f4       	brne	.+6      	; 0xd084 <drawlevel+0x20a>
    d07e:	42 e7       	ldi	r20, 0x72	; 114
    d080:	56 e8       	ldi	r21, 0x86	; 134
    d082:	30 c0       	rjmp	.+96     	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    d084:	19 31       	cpi	r17, 0x19	; 25
    d086:	19 f4       	brne	.+6      	; 0xd08e <drawlevel+0x214>
    d088:	4f e0       	ldi	r20, 0x0F	; 15
    d08a:	57 e8       	ldi	r21, 0x87	; 135
    d08c:	2b c0       	rjmp	.+86     	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    d08e:	1a 31       	cpi	r17, 0x1A	; 26
    d090:	19 f4       	brne	.+6      	; 0xd098 <drawlevel+0x21e>
    d092:	49 e0       	ldi	r20, 0x09	; 9
    d094:	57 e8       	ldi	r21, 0x87	; 135
    d096:	26 c0       	rjmp	.+76     	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    d098:	1b 31       	cpi	r17, 0x1B	; 27
    d09a:	19 f4       	brne	.+6      	; 0xd0a2 <drawlevel+0x228>
    d09c:	43 e0       	ldi	r20, 0x03	; 3
    d09e:	57 e8       	ldi	r21, 0x87	; 135
    d0a0:	21 c0       	rjmp	.+66     	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    d0a2:	1c 31       	cpi	r17, 0x1C	; 28
    d0a4:	19 f4       	brne	.+6      	; 0xd0ac <drawlevel+0x232>
    d0a6:	4d ef       	ldi	r20, 0xFD	; 253
    d0a8:	56 e8       	ldi	r21, 0x86	; 134
    d0aa:	1c c0       	rjmp	.+56     	; 0xd0e4 <drawlevel+0x26a>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    d0ac:	1d 31       	cpi	r17, 0x1D	; 29
    d0ae:	49 f4       	brne	.+18     	; 0xd0c2 <drawlevel+0x248>
    d0b0:	4f ee       	ldi	r20, 0xEF	; 239
    d0b2:	55 e8       	ldi	r21, 0x85	; 133
    d0b4:	6c 2f       	mov	r22, r28
    d0b6:	8b 2d       	mov	r24, r11
    d0b8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d0bc:	4f ee       	ldi	r20, 0xEF	; 239
    d0be:	55 e8       	ldi	r21, 0x85	; 133
    d0c0:	0a c0       	rjmp	.+20     	; 0xd0d6 <drawlevel+0x25c>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    d0c2:	1e 31       	cpi	r17, 0x1E	; 30
    d0c4:	59 f4       	brne	.+22     	; 0xd0dc <drawlevel+0x262>
    d0c6:	4b ee       	ldi	r20, 0xEB	; 235
    d0c8:	55 e8       	ldi	r21, 0x85	; 133
    d0ca:	6c 2f       	mov	r22, r28
    d0cc:	8b 2d       	mov	r24, r11
    d0ce:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d0d2:	4b ee       	ldi	r20, 0xEB	; 235
    d0d4:	55 e8       	ldi	r21, 0x85	; 133
    d0d6:	6c 2f       	mov	r22, r28
    d0d8:	80 2f       	mov	r24, r16
    d0da:	06 c0       	rjmp	.+12     	; 0xd0e8 <drawlevel+0x26e>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    d0dc:	19 32       	cpi	r17, 0x29	; 41
    d0de:	39 f4       	brne	.+14     	; 0xd0ee <drawlevel+0x274>
    d0e0:	4b ee       	ldi	r20, 0xEB	; 235
    d0e2:	56 e8       	ldi	r21, 0x86	; 134
    d0e4:	6c 2f       	mov	r22, r28
    d0e6:	8b 2d       	mov	r24, r11
    d0e8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d0ec:	0d c0       	rjmp	.+26     	; 0xd108 <drawlevel+0x28e>
    if ( c == 50 ) setowl(destx,  yi *2);    
    d0ee:	12 33       	cpi	r17, 0x32	; 50
    d0f0:	29 f4       	brne	.+10     	; 0xd0fc <drawlevel+0x282>
    d0f2:	be 01       	movw	r22, r28
    d0f4:	c7 01       	movw	r24, r14
    d0f6:	0e 94 c3 66 	call	0xcd86	; 0xcd86 <setowl>
    d0fa:	06 c0       	rjmp	.+12     	; 0xd108 <drawlevel+0x28e>
    if ( c == 51 ) setblob(destx, yi *2);    
    d0fc:	13 33       	cpi	r17, 0x33	; 51
    d0fe:	21 f4       	brne	.+8      	; 0xd108 <drawlevel+0x28e>
    d100:	be 01       	movw	r22, r28
    d102:	c7 01       	movw	r24, r14
    d104:	0e 94 00 67 	call	0xce00	; 0xce00 <setblob>
    d108:	22 96       	adiw	r28, 0x02	; 2
    d10a:	8a e5       	ldi	r24, 0x5A	; 90
    d10c:	68 0e       	add	r6, r24
    d10e:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    d110:	cc 31       	cpi	r28, 0x1C	; 28
    d112:	d1 05       	cpc	r29, r1
    d114:	09 f0       	breq	.+2      	; 0xd118 <drawlevel+0x29e>
    d116:	d2 ce       	rjmp	.-604    	; 0xcebc <drawlevel+0x42>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    d118:	8f ef       	ldi	r24, 0xFF	; 255
    d11a:	c8 1a       	sub	r12, r24
    d11c:	d8 0a       	sbc	r13, r24
    d11e:	82 e0       	ldi	r24, 0x02	; 2
    d120:	e8 0e       	add	r14, r24
    d122:	f1 1c       	adc	r15, r1
    d124:	0e 5f       	subi	r16, 0xFE	; 254
    d126:	80 e2       	ldi	r24, 0x20	; 32
    d128:	e8 16       	cp	r14, r24
    d12a:	f1 04       	cpc	r15, r1
    d12c:	09 f0       	breq	.+2      	; 0xd130 <drawlevel+0x2b6>
    d12e:	c2 ce       	rjmp	.-636    	; 0xceb4 <drawlevel+0x3a>
    if ( c == 50 ) setowl(destx,  yi *2);    
    if ( c == 51 ) setblob(destx, yi *2);    
    }
    }

}
    d130:	df 91       	pop	r29
    d132:	cf 91       	pop	r28
    d134:	1f 91       	pop	r17
    d136:	0f 91       	pop	r16
    d138:	ff 90       	pop	r15
    d13a:	ef 90       	pop	r14
    d13c:	df 90       	pop	r13
    d13e:	cf 90       	pop	r12
    d140:	bf 90       	pop	r11
    d142:	8f 90       	pop	r8
    d144:	7f 90       	pop	r7
    d146:	6f 90       	pop	r6
    d148:	08 95       	ret

0000d14a <updatelevel>:

void updatelevel()
{
    d14a:	cf 92       	push	r12
    d14c:	df 92       	push	r13
    d14e:	ef 92       	push	r14
    d150:	ff 92       	push	r15
    d152:	1f 93       	push	r17
    d154:	cf 93       	push	r28
    d156:	df 93       	push	r29
    d158:	c0 e0       	ldi	r28, 0x00	; 0
    d15a:	d0 e0       	ldi	r29, 0x00	; 0
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    d15c:	e1 2c       	mov	r14, r1
    d15e:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    d160:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <level>
    d164:	81 11       	cpse	r24, r1
    d166:	08 c0       	rjmp	.+16     	; 0xd178 <updatelevel+0x2e>
    d168:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d16c:	fe 01       	movw	r30, r28
    d16e:	e8 0f       	add	r30, r24
    d170:	f1 1d       	adc	r31, r1
    d172:	e1 57       	subi	r30, 0x71	; 113
    d174:	fa 4c       	sbci	r31, 0xCA	; 202
    d176:	59 c0       	rjmp	.+178    	; 0xd22a <updatelevel+0xe0>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    d178:	81 30       	cpi	r24, 0x01	; 1
    d17a:	41 f4       	brne	.+16     	; 0xd18c <updatelevel+0x42>
    d17c:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d180:	fe 01       	movw	r30, r28
    d182:	e8 0f       	add	r30, r24
    d184:	f1 1d       	adc	r31, r1
    d186:	ed 55       	subi	r30, 0x5D	; 93
    d188:	ff 4c       	sbci	r31, 0xCF	; 207
    d18a:	4f c0       	rjmp	.+158    	; 0xd22a <updatelevel+0xe0>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    d18c:	82 30       	cpi	r24, 0x02	; 2
    d18e:	41 f4       	brne	.+16     	; 0xd1a0 <updatelevel+0x56>
    d190:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d194:	fe 01       	movw	r30, r28
    d196:	e8 0f       	add	r30, r24
    d198:	f1 1d       	adc	r31, r1
    d19a:	e9 54       	subi	r30, 0x49	; 73
    d19c:	f4 4d       	sbci	r31, 0xD4	; 212
    d19e:	45 c0       	rjmp	.+138    	; 0xd22a <updatelevel+0xe0>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    d1a0:	83 30       	cpi	r24, 0x03	; 3
    d1a2:	41 f4       	brne	.+16     	; 0xd1b4 <updatelevel+0x6a>
    d1a4:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d1a8:	fe 01       	movw	r30, r28
    d1aa:	e8 0f       	add	r30, r24
    d1ac:	f1 1d       	adc	r31, r1
    d1ae:	e5 53       	subi	r30, 0x35	; 53
    d1b0:	f9 4d       	sbci	r31, 0xD9	; 217
    d1b2:	3b c0       	rjmp	.+118    	; 0xd22a <updatelevel+0xe0>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    d1b4:	84 30       	cpi	r24, 0x04	; 4
    d1b6:	41 f4       	brne	.+16     	; 0xd1c8 <updatelevel+0x7e>
    d1b8:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d1bc:	fe 01       	movw	r30, r28
    d1be:	e8 0f       	add	r30, r24
    d1c0:	f1 1d       	adc	r31, r1
    d1c2:	e1 52       	subi	r30, 0x21	; 33
    d1c4:	fe 4d       	sbci	r31, 0xDE	; 222
    d1c6:	31 c0       	rjmp	.+98     	; 0xd22a <updatelevel+0xe0>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    d1c8:	85 30       	cpi	r24, 0x05	; 5
    d1ca:	41 f4       	brne	.+16     	; 0xd1dc <updatelevel+0x92>
    d1cc:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d1d0:	fe 01       	movw	r30, r28
    d1d2:	e8 0f       	add	r30, r24
    d1d4:	f1 1d       	adc	r31, r1
    d1d6:	ed 50       	subi	r30, 0x0D	; 13
    d1d8:	f3 4e       	sbci	r31, 0xE3	; 227
    d1da:	27 c0       	rjmp	.+78     	; 0xd22a <updatelevel+0xe0>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    d1dc:	86 30       	cpi	r24, 0x06	; 6
    d1de:	41 f4       	brne	.+16     	; 0xd1f0 <updatelevel+0xa6>
    d1e0:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d1e4:	fe 01       	movw	r30, r28
    d1e6:	e8 0f       	add	r30, r24
    d1e8:	f1 1d       	adc	r31, r1
    d1ea:	e9 5f       	subi	r30, 0xF9	; 249
    d1ec:	f7 4e       	sbci	r31, 0xE7	; 231
    d1ee:	1d c0       	rjmp	.+58     	; 0xd22a <updatelevel+0xe0>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    d1f0:	87 30       	cpi	r24, 0x07	; 7
    d1f2:	41 f4       	brne	.+16     	; 0xd204 <updatelevel+0xba>
    d1f4:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d1f8:	fe 01       	movw	r30, r28
    d1fa:	e8 0f       	add	r30, r24
    d1fc:	f1 1d       	adc	r31, r1
    d1fe:	e5 5e       	subi	r30, 0xE5	; 229
    d200:	fc 4e       	sbci	r31, 0xEC	; 236
    d202:	13 c0       	rjmp	.+38     	; 0xd22a <updatelevel+0xe0>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    d204:	88 30       	cpi	r24, 0x08	; 8
    d206:	41 f4       	brne	.+16     	; 0xd218 <updatelevel+0xce>
    d208:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d20c:	fe 01       	movw	r30, r28
    d20e:	e8 0f       	add	r30, r24
    d210:	f1 1d       	adc	r31, r1
    d212:	e1 5d       	subi	r30, 0xD1	; 209
    d214:	f1 4f       	sbci	r31, 0xF1	; 241
    d216:	09 c0       	rjmp	.+18     	; 0xd22a <updatelevel+0xe0>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    d218:	89 30       	cpi	r24, 0x09	; 9
    d21a:	41 f4       	brne	.+16     	; 0xd22c <updatelevel+0xe2>
    d21c:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d220:	fe 01       	movw	r30, r28
    d222:	e8 0f       	add	r30, r24
    d224:	f1 1d       	adc	r31, r1
    d226:	ed 5b       	subi	r30, 0xBD	; 189
    d228:	f6 4f       	sbci	r31, 0xF6	; 246
    d22a:	14 91       	lpm	r17, Z
    xi = yi << 1;
    d22c:	67 01       	movw	r12, r14
    d22e:	cc 0c       	add	r12, r12
    d230:	dd 1c       	adc	r13, r13
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    d232:	11 11       	cpse	r17, r1
    d234:	10 c0       	rjmp	.+32     	; 0xd256 <updatelevel+0x10c>
    d236:	4d e4       	ldi	r20, 0x4D	; 77
    d238:	57 e8       	ldi	r21, 0x87	; 135
    d23a:	6c 2d       	mov	r22, r12
    d23c:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d240:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    d244:	8c e0       	ldi	r24, 0x0C	; 12
    d246:	e8 16       	cp	r14, r24
    d248:	f1 04       	cpc	r15, r1
    d24a:	49 f5       	brne	.+82     	; 0xd29e <updatelevel+0x154>
    d24c:	61 e0       	ldi	r22, 0x01	; 1
    d24e:	6c 0d       	add	r22, r12
    d250:	4d e4       	ldi	r20, 0x4D	; 77
    d252:	57 e8       	ldi	r21, 0x87	; 135
    d254:	0f c0       	rjmp	.+30     	; 0xd274 <updatelevel+0x12a>
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    d256:	11 30       	cpi	r17, 0x01	; 1
    d258:	19 f4       	brne	.+6      	; 0xd260 <updatelevel+0x116>
    d25a:	49 e3       	ldi	r20, 0x39	; 57
    d25c:	57 e8       	ldi	r21, 0x87	; 135
    d25e:	09 c0       	rjmp	.+18     	; 0xd272 <updatelevel+0x128>
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    d260:	12 30       	cpi	r17, 0x02	; 2
    d262:	19 f4       	brne	.+6      	; 0xd26a <updatelevel+0x120>
    d264:	47 e4       	ldi	r20, 0x47	; 71
    d266:	57 e8       	ldi	r21, 0x87	; 135
    d268:	04 c0       	rjmp	.+8      	; 0xd272 <updatelevel+0x128>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    d26a:	13 30       	cpi	r17, 0x03	; 3
    d26c:	69 f5       	brne	.+90     	; 0xd2c8 <updatelevel+0x17e>
    d26e:	41 e4       	ldi	r20, 0x41	; 65
    d270:	57 e8       	ldi	r21, 0x87	; 135
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    d272:	6c 2d       	mov	r22, r12
    d274:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d278:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d27c:	10 c0       	rjmp	.+32     	; 0xd29e <updatelevel+0x154>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    d27e:	12 33       	cpi	r17, 0x32	; 50
    d280:	09 f0       	breq	.+2      	; 0xd284 <updatelevel+0x13a>
    d282:	f5 c0       	rjmp	.+490    	; 0xd46e <updatelevel+0x324>
    d284:	4d e4       	ldi	r20, 0x4D	; 77
    d286:	57 e8       	ldi	r21, 0x87	; 135
    d288:	6c 2d       	mov	r22, r12
    d28a:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d28e:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d292:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d296:	b6 01       	movw	r22, r12
    d298:	90 e0       	ldi	r25, 0x00	; 0
    d29a:	0e 94 c3 66 	call	0xcd86	; 0xcd86 <setowl>
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    d29e:	8f ef       	ldi	r24, 0xFF	; 255
    d2a0:	e8 1a       	sub	r14, r24
    d2a2:	f8 0a       	sbc	r15, r24
    d2a4:	c6 5a       	subi	r28, 0xA6	; 166
    d2a6:	df 4f       	sbci	r29, 0xFF	; 255
    d2a8:	8d e0       	ldi	r24, 0x0D	; 13
    d2aa:	e8 16       	cp	r14, r24
    d2ac:	f1 04       	cpc	r15, r1
    d2ae:	09 f0       	breq	.+2      	; 0xd2b2 <updatelevel+0x168>
    d2b0:	57 cf       	rjmp	.-338    	; 0xd160 <updatelevel+0x16>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    d2b2:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d2b6:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32)destX=0; 
    d2b8:	80 32       	cpi	r24, 0x20	; 32
    d2ba:	18 f4       	brcc	.+6      	; 0xd2c2 <updatelevel+0x178>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    d2bc:	80 93 c1 09 	sts	0x09C1, r24	; 0x8009c1 <destX>
    d2c0:	e7 c0       	rjmp	.+462    	; 0xd490 <updatelevel+0x346>
if(destX>=32)destX=0; 
    d2c2:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <destX>
}
    d2c6:	e4 c0       	rjmp	.+456    	; 0xd490 <updatelevel+0x346>
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) DrawMap2(destX  ,xi  ,block2);
    d2c8:	14 30       	cpi	r17, 0x04	; 4
    d2ca:	19 f4       	brne	.+6      	; 0xd2d2 <updatelevel+0x188>
    d2cc:	47 ef       	ldi	r20, 0xF7	; 247
    d2ce:	56 e8       	ldi	r21, 0x86	; 134
    d2d0:	d0 cf       	rjmp	.-96     	; 0xd272 <updatelevel+0x128>
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    d2d2:	15 30       	cpi	r17, 0x05	; 5
    d2d4:	19 f4       	brne	.+6      	; 0xd2dc <updatelevel+0x192>
    d2d6:	41 e3       	ldi	r20, 0x31	; 49
    d2d8:	57 e8       	ldi	r21, 0x87	; 135
    d2da:	cb cf       	rjmp	.-106    	; 0xd272 <updatelevel+0x128>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    d2dc:	16 30       	cpi	r17, 0x06	; 6
    d2de:	19 f4       	brne	.+6      	; 0xd2e6 <updatelevel+0x19c>
    d2e0:	49 e2       	ldi	r20, 0x29	; 41
    d2e2:	57 e8       	ldi	r21, 0x87	; 135
    d2e4:	c6 cf       	rjmp	.-116    	; 0xd272 <updatelevel+0x128>
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    d2e6:	17 30       	cpi	r17, 0x07	; 7
    d2e8:	19 f4       	brne	.+6      	; 0xd2f0 <updatelevel+0x1a6>
    d2ea:	41 ef       	ldi	r20, 0xF1	; 241
    d2ec:	56 e8       	ldi	r21, 0x86	; 134
    d2ee:	c1 cf       	rjmp	.-126    	; 0xd272 <updatelevel+0x128>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    d2f0:	18 30       	cpi	r17, 0x08	; 8
    d2f2:	19 f4       	brne	.+6      	; 0xd2fa <updatelevel+0x1b0>
    d2f4:	41 e2       	ldi	r20, 0x21	; 33
    d2f6:	57 e8       	ldi	r21, 0x87	; 135
    d2f8:	bc cf       	rjmp	.-136    	; 0xd272 <updatelevel+0x128>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    d2fa:	19 30       	cpi	r17, 0x09	; 9
    d2fc:	19 f4       	brne	.+6      	; 0xd304 <updatelevel+0x1ba>
    d2fe:	4b e1       	ldi	r20, 0x1B	; 27
    d300:	57 e8       	ldi	r21, 0x87	; 135
    d302:	b7 cf       	rjmp	.-146    	; 0xd272 <updatelevel+0x128>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    d304:	1a 30       	cpi	r17, 0x0A	; 10
    d306:	19 f4       	brne	.+6      	; 0xd30e <updatelevel+0x1c4>
    d308:	45 e1       	ldi	r20, 0x15	; 21
    d30a:	57 e8       	ldi	r21, 0x87	; 135
    d30c:	b2 cf       	rjmp	.-156    	; 0xd272 <updatelevel+0x128>
    if ( c == 11 ) DrawMap2(destX ,xi  ,tube0);
    d30e:	1b 30       	cpi	r17, 0x0B	; 11
    d310:	19 f4       	brne	.+6      	; 0xd318 <updatelevel+0x1ce>
    d312:	48 ea       	ldi	r20, 0xA8	; 168
    d314:	56 e8       	ldi	r21, 0x86	; 134
    d316:	ad cf       	rjmp	.-166    	; 0xd272 <updatelevel+0x128>
    if ( c == 12 ) DrawMap2(destX ,xi  ,tube1);
    d318:	1c 30       	cpi	r17, 0x0C	; 12
    d31a:	19 f4       	brne	.+6      	; 0xd322 <updatelevel+0x1d8>
    d31c:	42 ea       	ldi	r20, 0xA2	; 162
    d31e:	56 e8       	ldi	r21, 0x86	; 134
    d320:	a8 cf       	rjmp	.-176    	; 0xd272 <updatelevel+0x128>
    if ( c == 13 ) DrawMap2(destX ,xi  ,tube2);
    d322:	1d 30       	cpi	r17, 0x0D	; 13
    d324:	19 f4       	brne	.+6      	; 0xd32c <updatelevel+0x1e2>
    d326:	4c e9       	ldi	r20, 0x9C	; 156
    d328:	56 e8       	ldi	r21, 0x86	; 134
    d32a:	a3 cf       	rjmp	.-186    	; 0xd272 <updatelevel+0x128>
    if ( c == 14 ) DrawMap2(destX ,xi  ,tube3);
    d32c:	1e 30       	cpi	r17, 0x0E	; 14
    d32e:	19 f4       	brne	.+6      	; 0xd336 <updatelevel+0x1ec>
    d330:	46 e9       	ldi	r20, 0x96	; 150
    d332:	56 e8       	ldi	r21, 0x86	; 134
    d334:	9e cf       	rjmp	.-196    	; 0xd272 <updatelevel+0x128>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    d336:	1f 30       	cpi	r17, 0x0F	; 15
    d338:	19 f4       	brne	.+6      	; 0xd340 <updatelevel+0x1f6>
    d33a:	40 e9       	ldi	r20, 0x90	; 144
    d33c:	56 e8       	ldi	r21, 0x86	; 134
    d33e:	99 cf       	rjmp	.-206    	; 0xd272 <updatelevel+0x128>
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    d340:	10 31       	cpi	r17, 0x10	; 16
    d342:	19 f4       	brne	.+6      	; 0xd34a <updatelevel+0x200>
    d344:	4a e8       	ldi	r20, 0x8A	; 138
    d346:	56 e8       	ldi	r21, 0x86	; 134
    d348:	94 cf       	rjmp	.-216    	; 0xd272 <updatelevel+0x128>
    if ( c == 31 ) DrawMap2(destX ,xi  ,bush1);
    d34a:	1f 31       	cpi	r17, 0x1F	; 31
    d34c:	19 f4       	brne	.+6      	; 0xd354 <updatelevel+0x20a>
    d34e:	48 ed       	ldi	r20, 0xD8	; 216
    d350:	56 e8       	ldi	r21, 0x86	; 134
    d352:	8f cf       	rjmp	.-226    	; 0xd272 <updatelevel+0x128>
    if ( c == 32 ) DrawMap2(destX ,xi  ,bush2);
    d354:	10 32       	cpi	r17, 0x20	; 32
    d356:	19 f4       	brne	.+6      	; 0xd35e <updatelevel+0x214>
    d358:	42 ed       	ldi	r20, 0xD2	; 210
    d35a:	56 e8       	ldi	r21, 0x86	; 134
    d35c:	8a cf       	rjmp	.-236    	; 0xd272 <updatelevel+0x128>
    if ( c == 33 ) DrawMap2(destX ,xi  ,bush3);
    d35e:	11 32       	cpi	r17, 0x21	; 33
    d360:	19 f4       	brne	.+6      	; 0xd368 <updatelevel+0x21e>
    d362:	4c ec       	ldi	r20, 0xCC	; 204
    d364:	56 e8       	ldi	r21, 0x86	; 134
    d366:	85 cf       	rjmp	.-246    	; 0xd272 <updatelevel+0x128>
    if ( c == 34 ) DrawMap2(destX ,xi  ,bush4);
    d368:	12 32       	cpi	r17, 0x22	; 34
    d36a:	19 f4       	brne	.+6      	; 0xd372 <updatelevel+0x228>
    d36c:	46 ec       	ldi	r20, 0xC6	; 198
    d36e:	56 e8       	ldi	r21, 0x86	; 134
    d370:	80 cf       	rjmp	.-256    	; 0xd272 <updatelevel+0x128>
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    d372:	13 32       	cpi	r17, 0x23	; 35
    d374:	19 f4       	brne	.+6      	; 0xd37c <updatelevel+0x232>
    d376:	40 ec       	ldi	r20, 0xC0	; 192
    d378:	56 e8       	ldi	r21, 0x86	; 134
    d37a:	7b cf       	rjmp	.-266    	; 0xd272 <updatelevel+0x128>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    d37c:	14 32       	cpi	r17, 0x24	; 36
    d37e:	19 f4       	brne	.+6      	; 0xd386 <updatelevel+0x23c>
    d380:	4a eb       	ldi	r20, 0xBA	; 186
    d382:	56 e8       	ldi	r21, 0x86	; 134
    d384:	76 cf       	rjmp	.-276    	; 0xd272 <updatelevel+0x128>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    d386:	15 32       	cpi	r17, 0x25	; 37
    d388:	19 f4       	brne	.+6      	; 0xd390 <updatelevel+0x246>
    d38a:	44 eb       	ldi	r20, 0xB4	; 180
    d38c:	56 e8       	ldi	r21, 0x86	; 134
    d38e:	71 cf       	rjmp	.-286    	; 0xd272 <updatelevel+0x128>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    d390:	16 32       	cpi	r17, 0x26	; 38
    d392:	19 f4       	brne	.+6      	; 0xd39a <updatelevel+0x250>
    d394:	4e ea       	ldi	r20, 0xAE	; 174
    d396:	56 e8       	ldi	r21, 0x86	; 134
    d398:	6c cf       	rjmp	.-296    	; 0xd272 <updatelevel+0x128>
    if ( c == 39 ) {DrawMap2(destX,xi  ,bridge0);DrawMap2(destX +1 ,xi,bridge0);DrawMap2(destX  ,xi + 1 ,nb);DrawMap2(destX +1 ,xi + 1 ,nb);};
    d39a:	17 32       	cpi	r17, 0x27	; 39
    d39c:	e1 f4       	brne	.+56     	; 0xd3d6 <updatelevel+0x28c>
    d39e:	4f e6       	ldi	r20, 0x6F	; 111
    d3a0:	56 e8       	ldi	r21, 0x86	; 134
    d3a2:	6c 2d       	mov	r22, r12
    d3a4:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d3a8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d3ac:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d3b0:	4f e6       	ldi	r20, 0x6F	; 111
    d3b2:	56 e8       	ldi	r21, 0x86	; 134
    d3b4:	6c 2d       	mov	r22, r12
    d3b6:	8f 5f       	subi	r24, 0xFF	; 255
    d3b8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d3bc:	c3 94       	inc	r12
    d3be:	43 e6       	ldi	r20, 0x63	; 99
    d3c0:	56 e8       	ldi	r21, 0x86	; 134
    d3c2:	6c 2d       	mov	r22, r12
    d3c4:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d3c8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d3cc:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d3d0:	43 e6       	ldi	r20, 0x63	; 99
    d3d2:	56 e8       	ldi	r21, 0x86	; 134
    d3d4:	43 c0       	rjmp	.+134    	; 0xd45c <updatelevel+0x312>
    if ( c == 21 ) DrawMap2(destX ,xi  ,mush0);
    d3d6:	15 31       	cpi	r17, 0x15	; 21
    d3d8:	19 f4       	brne	.+6      	; 0xd3e0 <updatelevel+0x296>
    d3da:	44 e8       	ldi	r20, 0x84	; 132
    d3dc:	56 e8       	ldi	r21, 0x86	; 134
    d3de:	49 cf       	rjmp	.-366    	; 0xd272 <updatelevel+0x128>
    if ( c == 22 ) DrawMap2(destX ,xi  ,mush1);
    d3e0:	16 31       	cpi	r17, 0x16	; 22
    d3e2:	19 f4       	brne	.+6      	; 0xd3ea <updatelevel+0x2a0>
    d3e4:	4e e7       	ldi	r20, 0x7E	; 126
    d3e6:	56 e8       	ldi	r21, 0x86	; 134
    d3e8:	44 cf       	rjmp	.-376    	; 0xd272 <updatelevel+0x128>
    if ( c == 23 ) DrawMap2(destX ,xi  ,mush2);
    d3ea:	17 31       	cpi	r17, 0x17	; 23
    d3ec:	19 f4       	brne	.+6      	; 0xd3f4 <updatelevel+0x2aa>
    d3ee:	48 e7       	ldi	r20, 0x78	; 120
    d3f0:	56 e8       	ldi	r21, 0x86	; 134
    d3f2:	3f cf       	rjmp	.-386    	; 0xd272 <updatelevel+0x128>
    if ( c == 24 ) DrawMap2(destX ,xi  ,mush3);	
    d3f4:	18 31       	cpi	r17, 0x18	; 24
    d3f6:	19 f4       	brne	.+6      	; 0xd3fe <updatelevel+0x2b4>
    d3f8:	42 e7       	ldi	r20, 0x72	; 114
    d3fa:	56 e8       	ldi	r21, 0x86	; 134
    d3fc:	3a cf       	rjmp	.-396    	; 0xd272 <updatelevel+0x128>
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    d3fe:	19 31       	cpi	r17, 0x19	; 25
    d400:	19 f4       	brne	.+6      	; 0xd408 <updatelevel+0x2be>
    d402:	4f e0       	ldi	r20, 0x0F	; 15
    d404:	57 e8       	ldi	r21, 0x87	; 135
    d406:	35 cf       	rjmp	.-406    	; 0xd272 <updatelevel+0x128>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    d408:	1a 31       	cpi	r17, 0x1A	; 26
    d40a:	19 f4       	brne	.+6      	; 0xd412 <updatelevel+0x2c8>
    d40c:	49 e0       	ldi	r20, 0x09	; 9
    d40e:	57 e8       	ldi	r21, 0x87	; 135
    d410:	30 cf       	rjmp	.-416    	; 0xd272 <updatelevel+0x128>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    d412:	1b 31       	cpi	r17, 0x1B	; 27
    d414:	19 f4       	brne	.+6      	; 0xd41c <updatelevel+0x2d2>
    d416:	43 e0       	ldi	r20, 0x03	; 3
    d418:	57 e8       	ldi	r21, 0x87	; 135
    d41a:	2b cf       	rjmp	.-426    	; 0xd272 <updatelevel+0x128>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    d41c:	1c 31       	cpi	r17, 0x1C	; 28
    d41e:	19 f4       	brne	.+6      	; 0xd426 <updatelevel+0x2dc>
    d420:	4d ef       	ldi	r20, 0xFD	; 253
    d422:	56 e8       	ldi	r21, 0x86	; 134
    d424:	26 cf       	rjmp	.-436    	; 0xd272 <updatelevel+0x128>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    d426:	1d 31       	cpi	r17, 0x1D	; 29
    d428:	61 f4       	brne	.+24     	; 0xd442 <updatelevel+0x2f8>
    d42a:	4f ee       	ldi	r20, 0xEF	; 239
    d42c:	55 e8       	ldi	r21, 0x85	; 133
    d42e:	6c 2d       	mov	r22, r12
    d430:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d434:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d438:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d43c:	4f ee       	ldi	r20, 0xEF	; 239
    d43e:	55 e8       	ldi	r21, 0x85	; 133
    d440:	0d c0       	rjmp	.+26     	; 0xd45c <updatelevel+0x312>
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    d442:	1e 31       	cpi	r17, 0x1E	; 30
    d444:	71 f4       	brne	.+28     	; 0xd462 <updatelevel+0x318>
    d446:	4b ee       	ldi	r20, 0xEB	; 235
    d448:	55 e8       	ldi	r21, 0x85	; 133
    d44a:	6c 2d       	mov	r22, r12
    d44c:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d450:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d454:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d458:	4b ee       	ldi	r20, 0xEB	; 235
    d45a:	55 e8       	ldi	r21, 0x85	; 133
    d45c:	6c 2d       	mov	r22, r12
    d45e:	8f 5f       	subi	r24, 0xFF	; 255
    d460:	0b cf       	rjmp	.-490    	; 0xd278 <updatelevel+0x12e>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    d462:	19 32       	cpi	r17, 0x29	; 41
    d464:	09 f0       	breq	.+2      	; 0xd468 <updatelevel+0x31e>
    d466:	0b cf       	rjmp	.-490    	; 0xd27e <updatelevel+0x134>
    d468:	4b ee       	ldi	r20, 0xEB	; 235
    d46a:	56 e8       	ldi	r21, 0x86	; 134
    d46c:	02 cf       	rjmp	.-508    	; 0xd272 <updatelevel+0x128>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    d46e:	13 33       	cpi	r17, 0x33	; 51
    d470:	09 f0       	breq	.+2      	; 0xd474 <updatelevel+0x32a>
    d472:	15 cf       	rjmp	.-470    	; 0xd29e <updatelevel+0x154>
    d474:	4d e4       	ldi	r20, 0x4D	; 77
    d476:	57 e8       	ldi	r21, 0x87	; 135
    d478:	6c 2d       	mov	r22, r12
    d47a:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d47e:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    d482:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d486:	b6 01       	movw	r22, r12
    d488:	90 e0       	ldi	r25, 0x00	; 0
    d48a:	0e 94 00 67 	call	0xce00	; 0xce00 <setblob>
    d48e:	07 cf       	rjmp	.-498    	; 0xd29e <updatelevel+0x154>
//block2 -> block1
    
destX++;
destX++;
if(destX>=32)destX=0; 
}
    d490:	df 91       	pop	r29
    d492:	cf 91       	pop	r28
    d494:	1f 91       	pop	r17
    d496:	ff 90       	pop	r15
    d498:	ef 90       	pop	r14
    d49a:	df 90       	pop	r13
    d49c:	cf 90       	pop	r12
    d49e:	08 95       	ret

0000d4a0 <initmonster>:
MonsteronScreen = true;    
}

void initmonster()
{
owl.onscreen = false;   
    d4a0:	10 92 bf 09 	sts	0x09BF, r1	; 0x8009bf <owl+0x9>
blob.onscreen = false;   
    d4a4:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x9>
MonsteronScreen = false;
    d4a8:	10 92 9f 09 	sts	0x099F, r1	; 0x80099f <MonsteronScreen>
    d4ac:	08 95       	ret

0000d4ae <movelevel>:
}

void movelevel()
{
if (player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    d4ae:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    d4b2:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    d4b6:	86 39       	cpi	r24, 0x96	; 150
    d4b8:	91 05       	cpc	r25, r1
    d4ba:	94 f1       	brlt	.+100    	; 0xd520 <movelevel+0x72>
    d4bc:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d4c0:	90 e0       	ldi	r25, 0x00	; 0
    d4c2:	8c 34       	cpi	r24, 0x4C	; 76
    d4c4:	91 05       	cpc	r25, r1
    d4c6:	64 f5       	brge	.+88     	; 0xd520 <movelevel+0x72>
Scroll(1 ,0);   
    d4c8:	60 e0       	ldi	r22, 0x00	; 0
    d4ca:	81 e0       	ldi	r24, 0x01	; 1
    d4cc:	0e 94 2e 55 	call	0xaa5c	; 0xaa5c <Scroll>
Levelx  = Levelx + 1;
    d4d0:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    d4d4:	8f 5f       	subi	r24, 0xFF	; 255
    d4d6:	80 93 ff 09 	sts	0x09FF, r24	; 0x8009ff <Levelx>
player.x = player.x - 1;
    d4da:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    d4de:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    d4e2:	01 97       	sbiw	r24, 0x01	; 1
    d4e4:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    d4e8:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player2.x = player2.x -1;
    d4ec:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <player2>
    d4f0:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <player2+0x1>
    d4f4:	01 97       	sbiw	r24, 0x01	; 1
    d4f6:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    d4fa:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
scrollmonster(-1);
    d4fe:	8f ef       	ldi	r24, 0xFF	; 255
    d500:	9f ef       	ldi	r25, 0xFF	; 255
    d502:	0e 94 9d 66 	call	0xcd3a	; 0xcd3a <scrollmonster>
if ( Levelx >= 16 )
    d506:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    d50a:	80 31       	cpi	r24, 0x10	; 16
    d50c:	48 f0       	brcs	.+18     	; 0xd520 <movelevel+0x72>
{
updatelevel();
    d50e:	0e 94 a5 68 	call	0xd14a	; 0xd14a <updatelevel>
scrolltiles++; 
    d512:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d516:	8f 5f       	subi	r24, 0xFF	; 255
    d518:	80 93 06 0a 	sts	0x0A06, r24	; 0x800a06 <scrolltiles>
Levelx = 0;    
    d51c:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
    d520:	08 95       	ret

0000d522 <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    d522:	cf 92       	push	r12
    d524:	df 92       	push	r13
    d526:	ef 92       	push	r14
    d528:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    d52a:	2c e3       	ldi	r18, 0x3C	; 60
    d52c:	30 e0       	ldi	r19, 0x00	; 0
    d52e:	40 e0       	ldi	r20, 0x00	; 0
    d530:	50 e0       	ldi	r21, 0x00	; 0
    d532:	0e 94 4d 6f 	call	0xde9a	; 0xde9a <__udivmodsi4>
    tmp = 99 - tmp ;
    d536:	83 e6       	ldi	r24, 0x63	; 99
    d538:	c8 2e       	mov	r12, r24
    d53a:	d1 2c       	mov	r13, r1
    d53c:	e1 2c       	mov	r14, r1
    d53e:	f1 2c       	mov	r15, r1
    d540:	c2 1a       	sub	r12, r18
    d542:	d3 0a       	sbc	r13, r19
    d544:	e4 0a       	sbc	r14, r20
    d546:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    d548:	40 91 fc 09 	lds	r20, 0x09FC	; 0x8009fc <leveltime>
    d54c:	84 2f       	mov	r24, r20
    d54e:	90 e0       	ldi	r25, 0x00	; 0
    d550:	a0 e0       	ldi	r26, 0x00	; 0
    d552:	b0 e0       	ldi	r27, 0x00	; 0
    d554:	c8 16       	cp	r12, r24
    d556:	d9 06       	cpc	r13, r25
    d558:	ea 06       	cpc	r14, r26
    d55a:	fb 06       	cpc	r15, r27
    d55c:	10 f0       	brcs	.+4      	; 0xd562 <updatetime+0x40>
    d55e:	41 11       	cpse	r20, r1
    d560:	09 c0       	rjmp	.+18     	; 0xd574 <updatetime+0x52>
    d562:	50 e0       	ldi	r21, 0x00	; 0
    d564:	22 e0       	ldi	r18, 0x02	; 2
    d566:	30 e0       	ldi	r19, 0x00	; 0
    d568:	60 e0       	ldi	r22, 0x00	; 0
    d56a:	70 e0       	ldi	r23, 0x00	; 0
    d56c:	8a e1       	ldi	r24, 0x1A	; 26
    d56e:	90 e0       	ldi	r25, 0x00	; 0
    d570:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
    leveltime = tmp;
    d574:	c0 92 fc 09 	sts	0x09FC, r12	; 0x8009fc <leveltime>
    if (leveltime == 0 ) timeisup = true;
    d578:	c1 10       	cpse	r12, r1
    d57a:	03 c0       	rjmp	.+6      	; 0xd582 <updatetime+0x60>
    d57c:	81 e0       	ldi	r24, 0x01	; 1
    d57e:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <timeisup>
    
}
    d582:	ff 90       	pop	r15
    d584:	ef 90       	pop	r14
    d586:	df 90       	pop	r13
    d588:	cf 90       	pop	r12
    d58a:	08 95       	ret

0000d58c <playintro>:

void playintro()
{
    d58c:	0f 93       	push	r16
    d58e:	cf 93       	push	r28
    d590:	df 93       	push	r29

introplaying = true;
    d592:	c1 e0       	ldi	r28, 0x01	; 1
    d594:	c0 93 76 09 	sts	0x0976, r28	; 0x800976 <introplaying>
Levelx = 0;
    d598:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
scrolltiles = 0;
    d59c:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
player2.x = 21;
    d5a0:	85 e1       	ldi	r24, 0x15	; 21
    d5a2:	90 e0       	ldi	r25, 0x00	; 0
    d5a4:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <player2+0x1>
    d5a8:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <player2>
player2.y = 191;
    d5ac:	8f eb       	ldi	r24, 0xBF	; 191
    d5ae:	90 e0       	ldi	r25, 0x00	; 0
    d5b0:	90 93 a3 09 	sts	0x09A3, r25	; 0x8009a3 <player2+0x3>
    d5b4:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <player2+0x2>
player2.touchground = true;
    d5b8:	c0 93 ad 09 	sts	0x09AD, r28	; 0x8009ad <player2+0xd>
player.x = 8;
    d5bc:	28 e0       	ldi	r18, 0x08	; 8
    d5be:	30 e0       	ldi	r19, 0x00	; 0
    d5c0:	30 93 62 09 	sts	0x0962, r19	; 0x800962 <player+0x1>
    d5c4:	20 93 61 09 	sts	0x0961, r18	; 0x800961 <player>
player.y = 191;
    d5c8:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    d5cc:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
player.touchground = true;
    d5d0:	c0 93 6e 09 	sts	0x096E, r28	; 0x80096e <player+0xd>
player.jumping = false;
    d5d4:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x10>
player.jumpreleased = true;
    d5d8:	c0 93 72 09 	sts	0x0972, r28	; 0x800972 <player+0x11>
initlevel();
    d5dc:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>
initmonster();
    d5e0:	0e 94 50 6a 	call	0xd4a0	; 0xd4a0 <initmonster>
setheadline();    
    d5e4:	0e 94 bd 5d 	call	0xbb7a	; 0xbb7a <setheadline>
drawlevel(Levelx);
    d5e8:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    d5ec:	90 e0       	ldi	r25, 0x00	; 0
    d5ee:	0e 94 3d 67 	call	0xce7a	; 0xce7a <drawlevel>
setheadline();
    d5f2:	0e 94 bd 5d 	call	0xbb7a	; 0xbb7a <setheadline>
MapSprite2(0 ,melli0 ,0);
    d5f6:	40 e0       	ldi	r20, 0x00	; 0
    d5f8:	63 ee       	ldi	r22, 0xE3	; 227
    d5fa:	76 e5       	ldi	r23, 0x56	; 86
    d5fc:	80 e0       	ldi	r24, 0x00	; 0
    d5fe:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
MapSprite2(spriteInd ,man0,0);
    d602:	40 e0       	ldi	r20, 0x00	; 0
    d604:	63 eb       	ldi	r22, 0xB3	; 179
    d606:	76 e5       	ldi	r23, 0x56	; 86
    d608:	87 e0       	ldi	r24, 0x07	; 7
    d60a:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    d60e:	40 e0       	ldi	r20, 0x00	; 0
    d610:	65 e8       	ldi	r22, 0x85	; 133
    d612:	76 e5       	ldi	r23, 0x56	; 86
    d614:	8e e0       	ldi	r24, 0x0E	; 14
    d616:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
score = 0;
    d61a:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <score+0x1>
    d61e:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <score>
leveltime = 99;
    d622:	83 e6       	ldi	r24, 0x63	; 99
    d624:	80 93 fc 09 	sts	0x09FC, r24	; 0x8009fc <leveltime>
time = 0;
    d628:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    d62c:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    d630:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    d634:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
lives = 3;    
    d638:	83 e0       	ldi	r24, 0x03	; 3
    d63a:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
level = 0;
    d63e:	10 92 8c 09 	sts	0x098C, r1	; 0x80098c <level>
bonus = 0;
    d642:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    d646:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
scrolltiles = 0;
    d64a:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
Screen.scrollX = 0;
    d64e:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
destX = 0;
    d652:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <destX>
Levelx = 0;
    d656:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
setheadline();
    d65a:	0e 94 bd 5d 	call	0xbb7a	; 0xbb7a <setheadline>
printheadlineintro();
    d65e:	0e 94 a4 5a 	call	0xb548	; 0xb548 <printheadlineintro>
player.direction = 'r';
    d662:	82 e7       	ldi	r24, 0x72	; 114
    d664:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <player+0xa>
player.action = 'w';
    d668:	87 e7       	ldi	r24, 0x77	; 119
    d66a:	80 93 6a 09 	sts	0x096A, r24	; 0x80096a <player+0x9>
player.facing = 0;
    d66e:	10 92 69 09 	sts	0x0969, r1	; 0x800969 <player+0x8>
    d672:	10 92 68 09 	sts	0x0968, r1	; 0x800968 <player+0x7>
player.ximpulse = 1; 
    d676:	c0 93 6f 09 	sts	0x096F, r28	; 0x80096f <player+0xe>
FadeIn(1, true);
    d67a:	61 e0       	ldi	r22, 0x01	; 1
    d67c:	81 e0       	ldi	r24, 0x01	; 1
    d67e:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
{
player.action = 'j';
    d682:	da e6       	ldi	r29, 0x6A	; 106
player.direction = 'r';
player.action = 'w';
player.facing = 0;
player.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    d684:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    d688:	88 23       	and	r24, r24
    d68a:	09 f4       	brne	.+2      	; 0xd68e <playintro+0x102>
    d68c:	f6 c0       	rjmp	.+492    	; 0xd87a <playintro+0x2ee>
{
moveplayer();  
    d68e:	0e 94 97 60 	call	0xc12e	; 0xc12e <moveplayer>
moveplayer2();
    d692:	0e 94 9a 63 	call	0xc734	; 0xc734 <moveplayer2>
movemonster(); 
    d696:	0e 94 32 5e 	call	0xbc64	; 0xbc64 <movemonster>
WaitVsync(1); 
    d69a:	81 e0       	ldi	r24, 0x01	; 1
    d69c:	90 e0       	ldi	r25, 0x00	; 0
    d69e:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
drawmonster();       
    d6a2:	0e 94 ca 5d 	call	0xbb94	; 0xbb94 <drawmonster>
movelevel();
    d6a6:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <movelevel>
drawplayer();
    d6aa:	0e 94 b2 56 	call	0xad64	; 0xad64 <drawplayer>
drawplayer2();        
    d6ae:	0e 94 68 57 	call	0xaed0	; 0xaed0 <drawplayer2>
  



player.ximpulse = 1;
    d6b2:	c0 93 6f 09 	sts	0x096F, r28	; 0x80096f <player+0xe>
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    d6b6:	40 91 9b 09 	lds	r20, 0x099B	; 0x80099b <time>
    d6ba:	50 91 9c 09 	lds	r21, 0x099C	; 0x80099c <time+0x1>
    d6be:	60 91 9d 09 	lds	r22, 0x099D	; 0x80099d <time+0x2>
    d6c2:	70 91 9e 09 	lds	r23, 0x099E	; 0x80099e <time+0x3>
    d6c6:	43 3d       	cpi	r20, 0xD3	; 211
    d6c8:	51 05       	cpc	r21, r1
    d6ca:	61 05       	cpc	r22, r1
    d6cc:	71 05       	cpc	r23, r1
    d6ce:	28 f4       	brcc	.+10     	; 0xd6da <playintro+0x14e>
    d6d0:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    d6d4:	81 11       	cpse	r24, r1
    d6d6:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xe>
    lx = 12 + destX;
    d6da:	80 91 c1 09 	lds	r24, 0x09C1	; 0x8009c1 <destX>
    d6de:	90 e0       	ldi	r25, 0x00	; 0
    d6e0:	9c 01       	movw	r18, r24
    d6e2:	24 5f       	subi	r18, 0xF4	; 244
    d6e4:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    d6e6:	20 32       	cpi	r18, 0x20	; 32
    d6e8:	31 05       	cpc	r19, r1
    d6ea:	2c f4       	brge	.+10     	; 0xd6f6 <playintro+0x16a>



player.ximpulse = 1;
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    lx = 12 + destX;
    d6ec:	30 93 02 0a 	sts	0x0A02, r19	; 0x800a02 <lx+0x1>
    d6f0:	20 93 01 0a 	sts	0x0A01, r18	; 0x800a01 <lx>
    d6f4:	05 c0       	rjmp	.+10     	; 0xd700 <playintro+0x174>
    if (lx >= 32 ) lx = lx - 32;
    d6f6:	44 97       	sbiw	r24, 0x14	; 20
    d6f8:	90 93 02 0a 	sts	0x0A02, r25	; 0x800a02 <lx+0x1>
    d6fc:	80 93 01 0a 	sts	0x0A01, r24	; 0x800a01 <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    d700:	4c 33       	cpi	r20, 0x3C	; 60
    d702:	51 05       	cpc	r21, r1
    d704:	61 05       	cpc	r22, r1
    d706:	71 05       	cpc	r23, r1
    d708:	29 f0       	breq	.+10     	; 0xd714 <playintro+0x188>
    d70a:	40 3f       	cpi	r20, 0xF0	; 240
    d70c:	51 05       	cpc	r21, r1
    d70e:	61 05       	cpc	r22, r1
    d710:	71 05       	cpc	r23, r1
    d712:	59 f4       	brne	.+22     	; 0xd72a <playintro+0x19e>
    d714:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    d718:	88 23       	and	r24, r24
    d71a:	39 f0       	breq	.+14     	; 0xd72a <playintro+0x19e>
    d71c:	40 e1       	ldi	r20, 0x10	; 16
    d71e:	56 e8       	ldi	r21, 0x86	; 134
    d720:	62 e1       	ldi	r22, 0x12	; 18
    d722:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d726:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    d72a:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    d72e:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    d732:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    d736:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    d73a:	86 39       	cpi	r24, 0x96	; 150
    d73c:	91 05       	cpc	r25, r1
    d73e:	a1 05       	cpc	r26, r1
    d740:	b1 05       	cpc	r27, r1
    d742:	31 f0       	breq	.+12     	; 0xd750 <playintro+0x1c4>
    d744:	8a 34       	cpi	r24, 0x4A	; 74
    d746:	91 40       	sbci	r25, 0x01	; 1
    d748:	a1 05       	cpc	r26, r1
    d74a:	b1 05       	cpc	r27, r1
    d74c:	09 f0       	breq	.+2      	; 0xd750 <playintro+0x1c4>
    d74e:	44 c0       	rjmp	.+136    	; 0xd7d8 <playintro+0x24c>
    d750:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    d754:	88 23       	and	r24, r24
    d756:	09 f4       	brne	.+2      	; 0xd75a <playintro+0x1ce>
    d758:	3f c0       	rjmp	.+126    	; 0xd7d8 <playintro+0x24c>
    DrawMap2(  lx,  18 ,nb );   
    d75a:	43 e6       	ldi	r20, 0x63	; 99
    d75c:	56 e8       	ldi	r21, 0x86	; 134
    d75e:	62 e1       	ldi	r22, 0x12	; 18
    d760:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d764:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    d768:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d76c:	43 e6       	ldi	r20, 0x63	; 99
    d76e:	56 e8       	ldi	r21, 0x86	; 134
    d770:	62 e1       	ldi	r22, 0x12	; 18
    d772:	8f 5f       	subi	r24, 0xFF	; 255
    d774:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    d778:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d77c:	43 e6       	ldi	r20, 0x63	; 99
    d77e:	56 e8       	ldi	r21, 0x86	; 134
    d780:	62 e1       	ldi	r22, 0x12	; 18
    d782:	8e 5f       	subi	r24, 0xFE	; 254
    d784:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    d788:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d78c:	43 e6       	ldi	r20, 0x63	; 99
    d78e:	56 e8       	ldi	r21, 0x86	; 134
    d790:	62 e1       	ldi	r22, 0x12	; 18
    d792:	8d 5f       	subi	r24, 0xFD	; 253
    d794:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    d798:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d79c:	43 e6       	ldi	r20, 0x63	; 99
    d79e:	56 e8       	ldi	r21, 0x86	; 134
    d7a0:	62 e1       	ldi	r22, 0x12	; 18
    d7a2:	8c 5f       	subi	r24, 0xFC	; 252
    d7a4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    d7a8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d7ac:	43 e6       	ldi	r20, 0x63	; 99
    d7ae:	56 e8       	ldi	r21, 0x86	; 134
    d7b0:	62 e1       	ldi	r22, 0x12	; 18
    d7b2:	8b 5f       	subi	r24, 0xFB	; 251
    d7b4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    d7b8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d7bc:	43 e6       	ldi	r20, 0x63	; 99
    d7be:	56 e8       	ldi	r21, 0x86	; 134
    d7c0:	62 e1       	ldi	r22, 0x12	; 18
    d7c2:	8a 5f       	subi	r24, 0xFA	; 250
    d7c4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    d7c8:	80 91 01 0a 	lds	r24, 0x0A01	; 0x800a01 <lx>
    d7cc:	43 e6       	ldi	r20, 0x63	; 99
    d7ce:	56 e8       	ldi	r21, 0x86	; 134
    d7d0:	62 e1       	ldi	r22, 0x12	; 18
    d7d2:	89 5f       	subi	r24, 0xF9	; 249
    d7d4:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
    
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
    d7d8:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    d7dc:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    d7e0:	85 39       	cpi	r24, 0x95	; 149
    d7e2:	91 05       	cpc	r25, r1
    d7e4:	31 f5       	brne	.+76     	; 0xd832 <playintro+0x2a6>
    d7e6:	80 91 06 0a 	lds	r24, 0x0A06	; 0x800a06 <scrolltiles>
    d7ea:	8e 30       	cpi	r24, 0x0E	; 14
    d7ec:	31 f4       	brne	.+12     	; 0xd7fa <playintro+0x26e>
    d7ee:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    d7f2:	82 30       	cpi	r24, 0x02	; 2
    d7f4:	09 f0       	breq	.+2      	; 0xd7f8 <playintro+0x26c>
    d7f6:	46 cf       	rjmp	.-372    	; 0xd684 <playintro+0xf8>
    d7f8:	0c c0       	rjmp	.+24     	; 0xd812 <playintro+0x286>
    d7fa:	87 31       	cpi	r24, 0x17	; 23
    d7fc:	29 f0       	breq	.+10     	; 0xd808 <playintro+0x27c>
    d7fe:	80 32       	cpi	r24, 0x20	; 32
    d800:	19 f0       	breq	.+6      	; 0xd808 <playintro+0x27c>
    d802:	8a 32       	cpi	r24, 0x2A	; 42
    d804:	09 f0       	breq	.+2      	; 0xd808 <playintro+0x27c>
    d806:	3e cf       	rjmp	.-388    	; 0xd684 <playintro+0xf8>
    d808:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    d80c:	8a 30       	cpi	r24, 0x0A	; 10
    d80e:	09 f0       	breq	.+2      	; 0xd812 <playintro+0x286>
    d810:	39 cf       	rjmp	.-398    	; 0xd684 <playintro+0xf8>
{
player.action = 'j';
    d812:	d0 93 6a 09 	sts	0x096A, r29	; 0x80096a <player+0x9>
player.yimpulse = 0;
    d816:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
player.jumping = true;
    d81a:	c0 93 71 09 	sts	0x0971, r28	; 0x800971 <player+0x10>
player.touchground = false;
    d81e:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
player.jumpreleased = false;
    d822:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <player+0x11>
player.jumpcounter++ ; 
    d826:	80 91 74 09 	lds	r24, 0x0974	; 0x800974 <player+0x13>
    d82a:	8f 5f       	subi	r24, 0xFF	; 255
    d82c:	80 93 74 09 	sts	0x0974, r24	; 0x800974 <player+0x13>
    d830:	29 cf       	rjmp	.-430    	; 0xd684 <playintro+0xf8>
};  
if ( player.x  == 160 ) time = 0;   
    d832:	80 3a       	cpi	r24, 0xA0	; 160
    d834:	91 05       	cpc	r25, r1
    d836:	49 f4       	brne	.+18     	; 0xd84a <playintro+0x2be>
    d838:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    d83c:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    d840:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    d844:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
    d848:	1d cf       	rjmp	.-454    	; 0xd684 <playintro+0xf8>
if ( player.x >= 206 ) player.ximpulse = 0;
    d84a:	8e 3c       	cpi	r24, 0xCE	; 206
    d84c:	91 05       	cpc	r25, r1
    d84e:	1c f0       	brlt	.+6      	; 0xd856 <playintro+0x2ca>
    d850:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xe>
    d854:	04 c0       	rjmp	.+8      	; 0xd85e <playintro+0x2d2>
if ( player.x >= 180 && time > 420 ) { 
    d856:	84 3b       	cpi	r24, 0xB4	; 180
    d858:	91 05       	cpc	r25, r1
    d85a:	0c f4       	brge	.+2      	; 0xd85e <playintro+0x2d2>
    d85c:	13 cf       	rjmp	.-474    	; 0xd684 <playintro+0xf8>
    d85e:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    d862:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    d866:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    d86a:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    d86e:	85 3a       	cpi	r24, 0xA5	; 165
    d870:	91 40       	sbci	r25, 0x01	; 1
    d872:	a1 05       	cpc	r26, r1
    d874:	b1 05       	cpc	r27, r1
    d876:	08 f4       	brcc	.+2      	; 0xd87a <playintro+0x2ee>
    d878:	05 cf       	rjmp	.-502    	; 0xd684 <playintro+0xf8>
                                 
                                      break; };
};

FadeOut(5,true); 
    d87a:	61 e0       	ldi	r22, 0x01	; 1
    d87c:	85 e0       	ldi	r24, 0x05	; 5
    d87e:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
player.x = 8;
    d882:	88 e0       	ldi	r24, 0x08	; 8
    d884:	90 e0       	ldi	r25, 0x00	; 0
    d886:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    d88a:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player.y = 191;
    d88e:	8f eb       	ldi	r24, 0xBF	; 191
    d890:	90 e0       	ldi	r25, 0x00	; 0
    d892:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    d896:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    d89a:	03 e0       	ldi	r16, 0x03	; 3
    d89c:	22 e0       	ldi	r18, 0x02	; 2
    d89e:	4a ea       	ldi	r20, 0xAA	; 170
    d8a0:	61 e0       	ldi	r22, 0x01	; 1
    d8a2:	80 e0       	ldi	r24, 0x00	; 0
    d8a4:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>

}
    d8a8:	df 91       	pop	r29
    d8aa:	cf 91       	pop	r28
    d8ac:	0f 91       	pop	r16
    d8ae:	08 95       	ret

0000d8b0 <showgetready>:

void showgetready()
{
    d8b0:	0f 93       	push	r16
FadeOut(0, true);
    d8b2:	61 e0       	ldi	r22, 0x01	; 1
    d8b4:	80 e0       	ldi	r24, 0x00	; 0
    d8b6:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
Screen.scrollX = 0;
    d8ba:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d8be:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>

printheadline();
    d8c2:	0e 94 5f 5a 	call	0xb4be	; 0xb4be <printheadline>
printtileint( 26 ,0,99,2); 
    d8c6:	22 e0       	ldi	r18, 0x02	; 2
    d8c8:	30 e0       	ldi	r19, 0x00	; 0
    d8ca:	43 e6       	ldi	r20, 0x63	; 99
    d8cc:	50 e0       	ldi	r21, 0x00	; 0
    d8ce:	60 e0       	ldi	r22, 0x00	; 0
    d8d0:	70 e0       	ldi	r23, 0x00	; 0
    d8d2:	8a e1       	ldi	r24, 0x1A	; 26
    d8d4:	90 e0       	ldi	r25, 0x00	; 0
    d8d6:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d8da:	03 e0       	ldi	r16, 0x03	; 3
    d8dc:	22 e0       	ldi	r18, 0x02	; 2
    d8de:	4c ee       	ldi	r20, 0xEC	; 236
    d8e0:	6c ee       	ldi	r22, 0xEC	; 236
    d8e2:	80 e0       	ldi	r24, 0x00	; 0
    d8e4:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d8e8:	02 e0       	ldi	r16, 0x02	; 2
    d8ea:	22 e0       	ldi	r18, 0x02	; 2
    d8ec:	4c ee       	ldi	r20, 0xEC	; 236
    d8ee:	6c ee       	ldi	r22, 0xEC	; 236
    d8f0:	8e e0       	ldi	r24, 0x0E	; 14
    d8f2:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    d8f6:	44 e2       	ldi	r20, 0x24	; 36
    d8f8:	56 e8       	ldi	r21, 0x86	; 134
    d8fa:	6a e0       	ldi	r22, 0x0A	; 10
    d8fc:	8b e0       	ldi	r24, 0x0B	; 11
    d8fe:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
WaitVsync(1);  
    d902:	81 e0       	ldi	r24, 0x01	; 1
    d904:	90 e0       	ldi	r25, 0x00	; 0
    d906:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
FadeIn(0, true);
    d90a:	61 e0       	ldi	r22, 0x01	; 1
    d90c:	80 e0       	ldi	r24, 0x00	; 0
    d90e:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>
time = 0;
    d912:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    d916:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    d91a:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    d91e:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
while ( time < 240 )
    d922:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    d926:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    d92a:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    d92e:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    d932:	80 3f       	cpi	r24, 0xF0	; 240
    d934:	91 05       	cpc	r25, r1
    d936:	a1 05       	cpc	r26, r1
    d938:	b1 05       	cpc	r27, r1
    d93a:	80 f4       	brcc	.+32     	; 0xd95c <showgetready+0xac>
{ time++;    
    d93c:	01 96       	adiw	r24, 0x01	; 1
    d93e:	a1 1d       	adc	r26, r1
    d940:	b1 1d       	adc	r27, r1
    d942:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <time>
    d946:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <time+0x1>
    d94a:	a0 93 9d 09 	sts	0x099D, r26	; 0x80099d <time+0x2>
    d94e:	b0 93 9e 09 	sts	0x099E, r27	; 0x80099e <time+0x3>
WaitVsync(1);    
    d952:	81 e0       	ldi	r24, 0x01	; 1
    d954:	90 e0       	ldi	r25, 0x00	; 0
    d956:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    d95a:	e3 cf       	rjmp	.-58     	; 0xd922 <showgetready+0x72>
};
 FadeOut(0, true);    
    d95c:	61 e0       	ldi	r22, 0x01	; 1
    d95e:	80 e0       	ldi	r24, 0x00	; 0
};
    d960:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d962:	0c 94 69 56 	jmp	0xacd2	; 0xacd2 <FadeOut>

0000d966 <showgameover>:
};

void showgameover()
{
    d966:	0f 93       	push	r16
FadeOut(0, true);
    d968:	61 e0       	ldi	r22, 0x01	; 1
    d96a:	80 e0       	ldi	r24, 0x00	; 0
    d96c:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
Screen.scrollX = 0;
    d970:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d974:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d978:	03 e0       	ldi	r16, 0x03	; 3
    d97a:	22 e0       	ldi	r18, 0x02	; 2
    d97c:	4c ee       	ldi	r20, 0xEC	; 236
    d97e:	6c ee       	ldi	r22, 0xEC	; 236
    d980:	80 e0       	ldi	r24, 0x00	; 0
    d982:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d986:	02 e0       	ldi	r16, 0x02	; 2
    d988:	22 e0       	ldi	r18, 0x02	; 2
    d98a:	4c ee       	ldi	r20, 0xEC	; 236
    d98c:	6c ee       	ldi	r22, 0xEC	; 236
    d98e:	8e e0       	ldi	r24, 0x0E	; 14
    d990:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    d994:	47 e0       	ldi	r20, 0x07	; 7
    d996:	56 e8       	ldi	r21, 0x86	; 134
    d998:	6a e0       	ldi	r22, 0x0A	; 10
    d99a:	8b e0       	ldi	r24, 0x0B	; 11
    d99c:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
WaitVsync(1);  
    d9a0:	81 e0       	ldi	r24, 0x01	; 1
    d9a2:	90 e0       	ldi	r25, 0x00	; 0
    d9a4:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
FadeIn(0, true);
    d9a8:	61 e0       	ldi	r22, 0x01	; 1
    d9aa:	80 e0       	ldi	r24, 0x00	; 0
    d9ac:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>
time = 0;
    d9b0:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    d9b4:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    d9b8:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    d9bc:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
while ( time < 240 )
    d9c0:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    d9c4:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    d9c8:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    d9cc:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    d9d0:	80 3f       	cpi	r24, 0xF0	; 240
    d9d2:	91 05       	cpc	r25, r1
    d9d4:	a1 05       	cpc	r26, r1
    d9d6:	b1 05       	cpc	r27, r1
    d9d8:	80 f4       	brcc	.+32     	; 0xd9fa <showgameover+0x94>
{ time++;    
    d9da:	01 96       	adiw	r24, 0x01	; 1
    d9dc:	a1 1d       	adc	r26, r1
    d9de:	b1 1d       	adc	r27, r1
    d9e0:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <time>
    d9e4:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <time+0x1>
    d9e8:	a0 93 9d 09 	sts	0x099D, r26	; 0x80099d <time+0x2>
    d9ec:	b0 93 9e 09 	sts	0x099E, r27	; 0x80099e <time+0x3>
WaitVsync(1);    
    d9f0:	81 e0       	ldi	r24, 0x01	; 1
    d9f2:	90 e0       	ldi	r25, 0x00	; 0
    d9f4:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    d9f8:	e3 cf       	rjmp	.-58     	; 0xd9c0 <showgameover+0x5a>
};
 FadeOut(0, true);    
    d9fa:	61 e0       	ldi	r22, 0x01	; 1
    d9fc:	80 e0       	ldi	r24, 0x00	; 0
};
    d9fe:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    da00:	0c 94 69 56 	jmp	0xacd2	; 0xacd2 <FadeOut>

0000da04 <showtimesup>:
};
void showtimesup()
{
    da04:	0f 93       	push	r16
FadeOut(0, true);
    da06:	61 e0       	ldi	r22, 0x01	; 1
    da08:	80 e0       	ldi	r24, 0x00	; 0
    da0a:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
Screen.scrollX = 0;
    da0e:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    da12:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    da16:	03 e0       	ldi	r16, 0x03	; 3
    da18:	22 e0       	ldi	r18, 0x02	; 2
    da1a:	4c ee       	ldi	r20, 0xEC	; 236
    da1c:	6c ee       	ldi	r22, 0xEC	; 236
    da1e:	80 e0       	ldi	r24, 0x00	; 0
    da20:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    da24:	02 e0       	ldi	r16, 0x02	; 2
    da26:	22 e0       	ldi	r18, 0x02	; 2
    da28:	4c ee       	ldi	r20, 0xEC	; 236
    da2a:	6c ee       	ldi	r22, 0xEC	; 236
    da2c:	8e e0       	ldi	r24, 0x0E	; 14
    da2e:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    da32:	4f ef       	ldi	r20, 0xFF	; 255
    da34:	55 e8       	ldi	r21, 0x85	; 133
    da36:	6a e0       	ldi	r22, 0x0A	; 10
    da38:	8b e0       	ldi	r24, 0x0B	; 11
    da3a:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
WaitVsync(1);  
    da3e:	81 e0       	ldi	r24, 0x01	; 1
    da40:	90 e0       	ldi	r25, 0x00	; 0
    da42:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
FadeIn(0, true);
    da46:	61 e0       	ldi	r22, 0x01	; 1
    da48:	80 e0       	ldi	r24, 0x00	; 0
    da4a:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>
time = 0;
    da4e:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    da52:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    da56:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    da5a:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
while ( time < 240 )
    da5e:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    da62:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    da66:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    da6a:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    da6e:	80 3f       	cpi	r24, 0xF0	; 240
    da70:	91 05       	cpc	r25, r1
    da72:	a1 05       	cpc	r26, r1
    da74:	b1 05       	cpc	r27, r1
    da76:	80 f4       	brcc	.+32     	; 0xda98 <showtimesup+0x94>
{ time++;    
    da78:	01 96       	adiw	r24, 0x01	; 1
    da7a:	a1 1d       	adc	r26, r1
    da7c:	b1 1d       	adc	r27, r1
    da7e:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <time>
    da82:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <time+0x1>
    da86:	a0 93 9d 09 	sts	0x099D, r26	; 0x80099d <time+0x2>
    da8a:	b0 93 9e 09 	sts	0x099E, r27	; 0x80099e <time+0x3>
WaitVsync(1);    
    da8e:	81 e0       	ldi	r24, 0x01	; 1
    da90:	90 e0       	ldi	r25, 0x00	; 0
    da92:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    da96:	e3 cf       	rjmp	.-58     	; 0xda5e <showtimesup+0x5a>
};
 FadeOut(0, true);    
    da98:	61 e0       	ldi	r22, 0x01	; 1
    da9a:	80 e0       	ldi	r24, 0x00	; 0
};
    da9c:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    da9e:	0c 94 69 56 	jmp	0xacd2	; 0xacd2 <FadeOut>

0000daa2 <showcongratulation>:
};
void showcongratulation()
{
    daa2:	0f 93       	push	r16
FadeOut(0, true);
    daa4:	61 e0       	ldi	r22, 0x01	; 1
    daa6:	80 e0       	ldi	r24, 0x00	; 0
    daa8:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
Screen.scrollX = 0;
    daac:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    dab0:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    dab4:	03 e0       	ldi	r16, 0x03	; 3
    dab6:	22 e0       	ldi	r18, 0x02	; 2
    dab8:	4c ee       	ldi	r20, 0xEC	; 236
    daba:	6c ee       	ldi	r22, 0xEC	; 236
    dabc:	80 e0       	ldi	r24, 0x00	; 0
    dabe:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    dac2:	02 e0       	ldi	r16, 0x02	; 2
    dac4:	22 e0       	ldi	r18, 0x02	; 2
    dac6:	4c ee       	ldi	r20, 0xEC	; 236
    dac8:	6c ee       	ldi	r22, 0xEC	; 236
    daca:	8e e0       	ldi	r24, 0x0E	; 14
    dacc:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    dad0:	43 ef       	ldi	r20, 0xF3	; 243
    dad2:	55 e8       	ldi	r21, 0x85	; 133
    dad4:	6a e0       	ldi	r22, 0x0A	; 10
    dad6:	89 e0       	ldi	r24, 0x09	; 9
    dad8:	0e 94 c2 55 	call	0xab84	; 0xab84 <DrawMap>
FadeIn(0, true);
    dadc:	61 e0       	ldi	r22, 0x01	; 1
    dade:	80 e0       	ldi	r24, 0x00	; 0
    dae0:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>
time = 0;
    dae4:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    dae8:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    daec:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    daf0:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
while ( time < 480 )
    daf4:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <time>
    daf8:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <time+0x1>
    dafc:	a0 91 9d 09 	lds	r26, 0x099D	; 0x80099d <time+0x2>
    db00:	b0 91 9e 09 	lds	r27, 0x099E	; 0x80099e <time+0x3>
    db04:	80 3e       	cpi	r24, 0xE0	; 224
    db06:	21 e0       	ldi	r18, 0x01	; 1
    db08:	92 07       	cpc	r25, r18
    db0a:	a1 05       	cpc	r26, r1
    db0c:	b1 05       	cpc	r27, r1
    db0e:	80 f4       	brcc	.+32     	; 0xdb30 <showcongratulation+0x8e>
{ time++;    
    db10:	01 96       	adiw	r24, 0x01	; 1
    db12:	a1 1d       	adc	r26, r1
    db14:	b1 1d       	adc	r27, r1
    db16:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <time>
    db1a:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <time+0x1>
    db1e:	a0 93 9d 09 	sts	0x099D, r26	; 0x80099d <time+0x2>
    db22:	b0 93 9e 09 	sts	0x099E, r27	; 0x80099e <time+0x3>
WaitVsync(1);    
    db26:	81 e0       	ldi	r24, 0x01	; 1
    db28:	90 e0       	ldi	r25, 0x00	; 0
    db2a:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    db2e:	e2 cf       	rjmp	.-60     	; 0xdaf4 <showcongratulation+0x52>
};
 FadeOut(0, true);    
    db30:	61 e0       	ldi	r22, 0x01	; 1
    db32:	80 e0       	ldi	r24, 0x00	; 0
};
    db34:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    db36:	0c 94 69 56 	jmp	0xacd2	; 0xacd2 <FadeOut>

0000db3a <main>:
};
int main(){ 
ClearVram();    
    db3a:	0e 94 05 49 	call	0x920a	; 0x920a <ClearVram>
FadeOut(0, true);
    db3e:	61 e0       	ldi	r22, 0x01	; 1
    db40:	80 e0       	ldi	r24, 0x00	; 0
    db42:	0e 94 69 56 	call	0xacd2	; 0xacd2 <FadeOut>
SetTileTable(uMTiles);
    db46:	8b ee       	ldi	r24, 0xEB	; 235
    db48:	96 e5       	ldi	r25, 0x56	; 86
    db4a:	0e 94 20 49 	call	0x9240	; 0x9240 <SetTileTable>
SetSpritesTileTable(uMSprites);
    db4e:	83 e3       	ldi	r24, 0x33	; 51
    db50:	90 e4       	ldi	r25, 0x40	; 64
    db52:	0e 94 00 49 	call	0x9200	; 0x9200 <SetSpritesTileTable>
InitMusicPlayer(patches);
    db56:	84 ec       	ldi	r24, 0xC4	; 196
    db58:	9e e3       	ldi	r25, 0x3E	; 62
    db5a:	0e 94 8a 4a 	call	0x9514	; 0x9514 <InitMusicPlayer>
Screen.scrollY=0;  
    db5e:	10 92 5f 08 	sts	0x085F, r1	; 0x80085f <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    db62:	10 92 5b 08 	sts	0x085B, r1	; 0x80085b <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    db66:	8e e9       	ldi	r24, 0x9E	; 158
    db68:	96 e5       	ldi	r25, 0x56	; 86
    db6a:	0e 94 5a 49 	call	0x92b4	; 0x92b4 <SetUserPostVsyncCallback>
while(1)
{
introplaying = true; 
    db6e:	d1 e0       	ldi	r29, 0x01	; 1
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    db70:	88 e0       	ldi	r24, 0x08	; 8
    db72:	e8 2e       	mov	r14, r24
    db74:	f1 2c       	mov	r15, r1
player.y = 191;
    db76:	9f eb       	ldi	r25, 0xBF	; 191
    db78:	c9 2e       	mov	r12, r25
    db7a:	d1 2c       	mov	r13, r1
isplaying = true;
while (isplaying)
{

showgetready();
isplaying = true;
    db7c:	c1 e0       	ldi	r28, 0x01	; 1
finished = false;
died = false;
timeisup = false;    
Levelx = 0;
scrolltiles = 0;
player2.x = 21;
    db7e:	25 e1       	ldi	r18, 0x15	; 21
    db80:	82 2e       	mov	r8, r18
    db82:	91 2c       	mov	r9, r1
player2.y = 191;
    db84:	3f eb       	ldi	r19, 0xBF	; 191
    db86:	a3 2e       	mov	r10, r19
    db88:	b1 2c       	mov	r11, r1
player.x = 8;
    db8a:	48 e0       	ldi	r20, 0x08	; 8
    db8c:	64 2e       	mov	r6, r20
    db8e:	71 2c       	mov	r7, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
introplaying = true; 
    db90:	d0 93 76 09 	sts	0x0976, r29	; 0x800976 <introplaying>
Levelx = 0;
    db94:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
scrolltiles = 0;
    db98:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
player.x = 8;
    db9c:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    dba0:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    dba4:	d0 92 64 09 	sts	0x0964, r13	; 0x800964 <player+0x3>
    dba8:	c0 92 63 09 	sts	0x0963, r12	; 0x800963 <player+0x2>
destX = 0;
    dbac:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <destX>
level = 0;
    dbb0:	10 92 8c 09 	sts	0x098C, r1	; 0x80098c <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    dbb4:	02 e0       	ldi	r16, 0x02	; 2
    dbb6:	22 e0       	ldi	r18, 0x02	; 2
    dbb8:	4c ee       	ldi	r20, 0xEC	; 236
    dbba:	6c ee       	ldi	r22, 0xEC	; 236
    dbbc:	8e e0       	ldi	r24, 0x0E	; 14
    dbbe:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);  
    dbc2:	03 e0       	ldi	r16, 0x03	; 3
    dbc4:	22 e0       	ldi	r18, 0x02	; 2
    dbc6:	4c ee       	ldi	r20, 0xEC	; 236
    dbc8:	6c ee       	ldi	r22, 0xEC	; 236
    dbca:	80 e0       	ldi	r24, 0x00	; 0
    dbcc:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
while(introplaying) playintro();
    dbd0:	80 91 76 09 	lds	r24, 0x0976	; 0x800976 <introplaying>
    dbd4:	88 23       	and	r24, r24
    dbd6:	19 f0       	breq	.+6      	; 0xdbde <main+0xa4>
    dbd8:	0e 94 c6 6a 	call	0xd58c	; 0xd58c <playintro>
    dbdc:	f9 cf       	rjmp	.-14     	; 0xdbd0 <main+0x96>
    
score = 0;
    dbde:	10 92 7d 09 	sts	0x097D, r1	; 0x80097d <score+0x1>
    dbe2:	10 92 7c 09 	sts	0x097C, r1	; 0x80097c <score>
lives = 3; 
    dbe6:	83 e0       	ldi	r24, 0x03	; 3
    dbe8:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
level = startlevel;
    dbec:	d0 93 8c 09 	sts	0x098C, r29	; 0x80098c <level>
isplaying = true;
    dbf0:	d0 93 fb 09 	sts	0x09FB, r29	; 0x8009fb <isplaying>
exitgame = false;
    dbf4:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <exitgame>
Levelx = 0;
    dbf8:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
scrolltiles = 0;
    dbfc:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
player.x = 8;
    dc00:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    dc04:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    dc08:	d0 92 64 09 	sts	0x0964, r13	; 0x800964 <player+0x3>
    dc0c:	c0 92 63 09 	sts	0x0963, r12	; 0x800963 <player+0x2>
destX = 0;
    dc10:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <destX>
score = 0;
StartSong(midisong);
    dc14:	8b e6       	ldi	r24, 0x6B	; 107
    dc16:	9a e3       	ldi	r25, 0x3A	; 58
    dc18:	0e 94 a5 4a 	call	0x954a	; 0x954a <StartSong>
MapSprite2(0 ,melli0 ,0);
MapSprite2(spriteInd ,man0 ,0);
MapSprite2(owlIndex ,owl0 ,0);   
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
MoveSprite(0 , - 20 , -20 ,2 ,3);    
leveltime = 99;
    dc1c:	13 e6       	ldi	r17, 0x63	; 99
player.x = 8;
player.y = 191;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    dc1e:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    dc22:	88 23       	and	r24, r24
    dc24:	09 f4       	brne	.+2      	; 0xdc28 <main+0xee>
    dc26:	0e c1       	rjmp	.+540    	; 0xde44 <main+0x30a>
{
isplaying = true;
    dc28:	d0 93 fb 09 	sts	0x09FB, r29	; 0x8009fb <isplaying>
while (isplaying)
    dc2c:	80 91 fb 09 	lds	r24, 0x09FB	; 0x8009fb <isplaying>
    dc30:	88 23       	and	r24, r24
    dc32:	a9 f3       	breq	.-22     	; 0xdc1e <main+0xe4>
{

showgetready();
    dc34:	0e 94 58 6c 	call	0xd8b0	; 0xd8b0 <showgetready>
isplaying = true;
    dc38:	c0 93 fb 09 	sts	0x09FB, r28	; 0x8009fb <isplaying>
finished = false;
    dc3c:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <finished>
died = false;
    dc40:	10 92 00 0a 	sts	0x0A00, r1	; 0x800a00 <died>
timeisup = false;    
    dc44:	10 92 55 09 	sts	0x0955, r1	; 0x800955 <timeisup>
Levelx = 0;
    dc48:	10 92 ff 09 	sts	0x09FF, r1	; 0x8009ff <Levelx>
scrolltiles = 0;
    dc4c:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
player2.x = 21;
    dc50:	90 92 a1 09 	sts	0x09A1, r9	; 0x8009a1 <player2+0x1>
    dc54:	80 92 a0 09 	sts	0x09A0, r8	; 0x8009a0 <player2>
player2.y = 191;
    dc58:	b0 92 a3 09 	sts	0x09A3, r11	; 0x8009a3 <player2+0x3>
    dc5c:	a0 92 a2 09 	sts	0x09A2, r10	; 0x8009a2 <player2+0x2>
player.x = 8;
    dc60:	70 92 62 09 	sts	0x0962, r7	; 0x800962 <player+0x1>
    dc64:	60 92 61 09 	sts	0x0961, r6	; 0x800961 <player>
player.y = 191;
    dc68:	b0 92 64 09 	sts	0x0964, r11	; 0x800964 <player+0x3>
    dc6c:	a0 92 63 09 	sts	0x0963, r10	; 0x800963 <player+0x2>
destX = 0;
    dc70:	10 92 c1 09 	sts	0x09C1, r1	; 0x8009c1 <destX>
player2.touchground = true;
    dc74:	c0 93 ad 09 	sts	0x09AD, r28	; 0x8009ad <player2+0xd>
player.touchground = true;
    dc78:	c0 93 6e 09 	sts	0x096E, r28	; 0x80096e <player+0xd>
player.jumping = false;
    dc7c:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x10>
player.jumpreleased = true;
    dc80:	c0 93 72 09 	sts	0x0972, r28	; 0x800972 <player+0x11>
initlevel();
    dc84:	0e 94 4e 59 	call	0xb29c	; 0xb29c <initlevel>
initmonster();
    dc88:	0e 94 50 6a 	call	0xd4a0	; 0xd4a0 <initmonster>
MapSprite2(0 ,melli0 ,0);
    dc8c:	40 e0       	ldi	r20, 0x00	; 0
    dc8e:	63 ee       	ldi	r22, 0xE3	; 227
    dc90:	76 e5       	ldi	r23, 0x56	; 86
    dc92:	80 e0       	ldi	r24, 0x00	; 0
    dc94:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
MapSprite2(spriteInd ,man0 ,0);
    dc98:	40 e0       	ldi	r20, 0x00	; 0
    dc9a:	63 eb       	ldi	r22, 0xB3	; 179
    dc9c:	76 e5       	ldi	r23, 0x56	; 86
    dc9e:	87 e0       	ldi	r24, 0x07	; 7
    dca0:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    dca4:	40 e0       	ldi	r20, 0x00	; 0
    dca6:	65 e8       	ldi	r22, 0x85	; 133
    dca8:	76 e5       	ldi	r23, 0x56	; 86
    dcaa:	8e e0       	ldi	r24, 0x0E	; 14
    dcac:	0e 94 48 55 	call	0xaa90	; 0xaa90 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    dcb0:	02 e0       	ldi	r16, 0x02	; 2
    dcb2:	22 e0       	ldi	r18, 0x02	; 2
    dcb4:	4c ee       	ldi	r20, 0xEC	; 236
    dcb6:	6c ee       	ldi	r22, 0xEC	; 236
    dcb8:	8e e0       	ldi	r24, 0x0E	; 14
    dcba:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);    
    dcbe:	03 e0       	ldi	r16, 0x03	; 3
    dcc0:	22 e0       	ldi	r18, 0x02	; 2
    dcc2:	4c ee       	ldi	r20, 0xEC	; 236
    dcc4:	6c ee       	ldi	r22, 0xEC	; 236
    dcc6:	80 e0       	ldi	r24, 0x00	; 0
    dcc8:	0e 94 95 55 	call	0xab2a	; 0xab2a <MoveSprite>
leveltime = 99;
    dccc:	10 93 fc 09 	sts	0x09FC, r17	; 0x8009fc <leveltime>
time = 0;
    dcd0:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <time>
    dcd4:	10 92 9c 09 	sts	0x099C, r1	; 0x80099c <time+0x1>
    dcd8:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <time+0x2>
    dcdc:	10 92 9e 09 	sts	0x099E, r1	; 0x80099e <time+0x3>
bonus = 0;
    dce0:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    dce4:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
scrolltiles = 0;
    dce8:	10 92 06 0a 	sts	0x0A06, r1	; 0x800a06 <scrolltiles>
Screen.scrollX = 0;
    dcec:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
setheadline();    
    dcf0:	0e 94 bd 5d 	call	0xbb7a	; 0xbb7a <setheadline>
drawlevel(Levelx);
    dcf4:	80 91 ff 09 	lds	r24, 0x09FF	; 0x8009ff <Levelx>
    dcf8:	90 e0       	ldi	r25, 0x00	; 0
    dcfa:	0e 94 3d 67 	call	0xce7a	; 0xce7a <drawlevel>
printheadline();   
    dcfe:	0e 94 5f 5a 	call	0xb4be	; 0xb4be <printheadline>
FadeIn(1, true);   
    dd02:	61 e0       	ldi	r22, 0x01	; 1
    dd04:	81 e0       	ldi	r24, 0x01	; 1
    dd06:	0e 94 5d 56 	call	0xacba	; 0xacba <FadeIn>

play = true;
    dd0a:	c0 93 8d 09 	sts	0x098D, r28	; 0x80098d <play>

while(play)
    dd0e:	80 91 8d 09 	lds	r24, 0x098D	; 0x80098d <play>
    dd12:	88 23       	and	r24, r24
    dd14:	09 f4       	brne	.+2      	; 0xdd18 <main+0x1de>
    dd16:	80 c0       	rjmp	.+256    	; 0xde18 <main+0x2de>
{
    
moveplayer(); 
    dd18:	0e 94 97 60 	call	0xc12e	; 0xc12e <moveplayer>
moveplayer2();
    dd1c:	0e 94 9a 63 	call	0xc734	; 0xc734 <moveplayer2>
movemonster();
    dd20:	0e 94 32 5e 	call	0xbc64	; 0xbc64 <movemonster>
WaitVsync(1); 
    dd24:	81 e0       	ldi	r24, 0x01	; 1
    dd26:	90 e0       	ldi	r25, 0x00	; 0
    dd28:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
drawmonster();   
    dd2c:	0e 94 ca 5d 	call	0xbb94	; 0xbb94 <drawmonster>
movelevel();
    dd30:	0e 94 57 6a 	call	0xd4ae	; 0xd4ae <movelevel>
drawplayer(); 
    dd34:	0e 94 b2 56 	call	0xad64	; 0xad64 <drawplayer>
drawplayer2(); 
    dd38:	0e 94 68 57 	call	0xaed0	; 0xaed0 <drawplayer2>
//drawplayer();   

//movemonster();
//drawmonster();    

updatetime(time);
    dd3c:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <time>
    dd40:	70 91 9c 09 	lds	r23, 0x099C	; 0x80099c <time+0x1>
    dd44:	80 91 9d 09 	lds	r24, 0x099D	; 0x80099d <time+0x2>
    dd48:	90 91 9e 09 	lds	r25, 0x099E	; 0x80099e <time+0x3>
    dd4c:	0e 94 91 6a 	call	0xd522	; 0xd522 <updatetime>
    if ( player.y > 240) 
    dd50:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    dd54:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    dd58:	81 3f       	cpi	r24, 0xF1	; 241
    dd5a:	91 05       	cpc	r25, r1
    dd5c:	c4 f0       	brlt	.+48     	; 0xdd8e <main+0x254>
    {
    died = true;
    dd5e:	c0 93 00 0a 	sts	0x0A00, r28	; 0x800a00 <died>
    lives--;    
    dd62:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    dd66:	81 50       	subi	r24, 0x01	; 1
    dd68:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
    isplaying = false; 
    dd6c:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    dd70:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    bonus = 0; 
    dd74:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    dd78:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
    TriggerFx(9,0xff,true);
    dd7c:	41 e0       	ldi	r20, 0x01	; 1
    dd7e:	6f ef       	ldi	r22, 0xFF	; 255
    dd80:	89 e0       	ldi	r24, 0x09	; 9
    dd82:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240); 
    dd86:	80 ef       	ldi	r24, 0xF0	; 240
    dd88:	90 e0       	ldi	r25, 0x00	; 0
    dd8a:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>

    };

    if (timeisup)
    dd8e:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <timeisup>
    dd92:	88 23       	and	r24, r24
    dd94:	19 f1       	breq	.+70     	; 0xdddc <main+0x2a2>
    {
    printtileint( 26 ,0,leveltime,2);
    dd96:	40 91 fc 09 	lds	r20, 0x09FC	; 0x8009fc <leveltime>
    dd9a:	50 e0       	ldi	r21, 0x00	; 0
    dd9c:	22 e0       	ldi	r18, 0x02	; 2
    dd9e:	30 e0       	ldi	r19, 0x00	; 0
    dda0:	60 e0       	ldi	r22, 0x00	; 0
    dda2:	70 e0       	ldi	r23, 0x00	; 0
    dda4:	8a e1       	ldi	r24, 0x1A	; 26
    dda6:	90 e0       	ldi	r25, 0x00	; 0
    dda8:	0e 94 1c 58 	call	0xb038	; 0xb038 <printtileint>
    TriggerFx(9,0xff,true);
    ddac:	41 e0       	ldi	r20, 0x01	; 1
    ddae:	6f ef       	ldi	r22, 0xFF	; 255
    ddb0:	89 e0       	ldi	r24, 0x09	; 9
    ddb2:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240);   
    ddb6:	80 ef       	ldi	r24, 0xF0	; 240
    ddb8:	90 e0       	ldi	r25, 0x00	; 0
    ddba:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    showtimesup();
    ddbe:	0e 94 02 6d 	call	0xda04	; 0xda04 <showtimesup>
    lives--;    
    ddc2:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    ddc6:	81 50       	subi	r24, 0x01	; 1
    ddc8:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <lives>
    bonus = 0;  
    ddcc:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <bonus+0x1>
    ddd0:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <bonus>
    isplaying = false; 
    ddd4:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    ddd8:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    };
      if (finished)
    dddc:	80 91 fa 09 	lds	r24, 0x09FA	; 0x8009fa <finished>
    dde0:	88 23       	and	r24, r24
    dde2:	09 f4       	brne	.+2      	; 0xdde6 <main+0x2ac>
    dde4:	94 cf       	rjmp	.-216    	; 0xdd0e <main+0x1d4>
    {
    TriggerFx(10,0xff,true);      
    dde6:	41 e0       	ldi	r20, 0x01	; 1
    dde8:	6f ef       	ldi	r22, 0xFF	; 255
    ddea:	8a e0       	ldi	r24, 0x0A	; 10
    ddec:	0e 94 82 4b 	call	0x9704	; 0x9704 <TriggerFx>
    WaitVsync(240);   
    ddf0:	80 ef       	ldi	r24, 0xF0	; 240
    ddf2:	90 e0       	ldi	r25, 0x00	; 0
    ddf4:	0e 94 01 56 	call	0xac02	; 0xac02 <WaitVsync>
    level++;    
    ddf8:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <level>
    ddfc:	8f 5f       	subi	r24, 0xFF	; 255
    ddfe:	80 93 8c 09 	sts	0x098C, r24	; 0x80098c <level>
    StartSong(midisong);
    de02:	8b e6       	ldi	r24, 0x6B	; 107
    de04:	9a e3       	ldi	r25, 0x3A	; 58
    de06:	0e 94 a5 4a 	call	0x954a	; 0x954a <StartSong>
    isplaying = false; 
    de0a:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    de0e:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    finished = false;
    de12:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <finished>
    de16:	7b cf       	rjmp	.-266    	; 0xdd0e <main+0x1d4>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    de18:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <lives>
    de1c:	81 11       	cpse	r24, r1
    de1e:	02 c0       	rjmp	.+4      	; 0xde24 <main+0x2ea>
    de20:	0e 94 b3 6c 	call	0xd966	; 0xd966 <showgameover>

if  (level > maxlevel  ) 
    de24:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <level>
    de28:	8a 30       	cpi	r24, 0x0A	; 10
    de2a:	08 f4       	brcc	.+2      	; 0xde2e <main+0x2f4>
    de2c:	ff ce       	rjmp	.-514    	; 0xdc2c <main+0xf2>
{   showcongratulation();
    de2e:	0e 94 51 6d 	call	0xdaa2	; 0xdaa2 <showcongratulation>
    isplaying = false; 
    de32:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <isplaying>
    play = false;
    de36:	10 92 8d 09 	sts	0x098D, r1	; 0x80098d <play>
    finished = false;
    de3a:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <finished>
    lives = 0;
    de3e:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <lives>
    de42:	f4 ce       	rjmp	.-536    	; 0xdc2c <main+0xf2>
 
};
};
};
StopSong();
    de44:	0e 94 ce 4a 	call	0x959c	; 0x959c <StopSong>

    
};
    de48:	a3 ce       	rjmp	.-698    	; 0xdb90 <main+0x56>

0000de4a <__udivmodhi4>:
    de4a:	aa 1b       	sub	r26, r26
    de4c:	bb 1b       	sub	r27, r27
    de4e:	51 e1       	ldi	r21, 0x11	; 17
    de50:	07 c0       	rjmp	.+14     	; 0xde60 <__udivmodhi4_ep>

0000de52 <__udivmodhi4_loop>:
    de52:	aa 1f       	adc	r26, r26
    de54:	bb 1f       	adc	r27, r27
    de56:	a6 17       	cp	r26, r22
    de58:	b7 07       	cpc	r27, r23
    de5a:	10 f0       	brcs	.+4      	; 0xde60 <__udivmodhi4_ep>
    de5c:	a6 1b       	sub	r26, r22
    de5e:	b7 0b       	sbc	r27, r23

0000de60 <__udivmodhi4_ep>:
    de60:	88 1f       	adc	r24, r24
    de62:	99 1f       	adc	r25, r25
    de64:	5a 95       	dec	r21
    de66:	a9 f7       	brne	.-22     	; 0xde52 <__udivmodhi4_loop>
    de68:	80 95       	com	r24
    de6a:	90 95       	com	r25
    de6c:	bc 01       	movw	r22, r24
    de6e:	cd 01       	movw	r24, r26
    de70:	08 95       	ret

0000de72 <__divmodhi4>:
    de72:	97 fb       	bst	r25, 7
    de74:	07 2e       	mov	r0, r23
    de76:	16 f4       	brtc	.+4      	; 0xde7c <__divmodhi4+0xa>
    de78:	00 94       	com	r0
    de7a:	07 d0       	rcall	.+14     	; 0xde8a <__divmodhi4_neg1>
    de7c:	77 fd       	sbrc	r23, 7
    de7e:	09 d0       	rcall	.+18     	; 0xde92 <__divmodhi4_neg2>
    de80:	0e 94 25 6f 	call	0xde4a	; 0xde4a <__udivmodhi4>
    de84:	07 fc       	sbrc	r0, 7
    de86:	05 d0       	rcall	.+10     	; 0xde92 <__divmodhi4_neg2>
    de88:	3e f4       	brtc	.+14     	; 0xde98 <__divmodhi4_exit>

0000de8a <__divmodhi4_neg1>:
    de8a:	90 95       	com	r25
    de8c:	81 95       	neg	r24
    de8e:	9f 4f       	sbci	r25, 0xFF	; 255
    de90:	08 95       	ret

0000de92 <__divmodhi4_neg2>:
    de92:	70 95       	com	r23
    de94:	61 95       	neg	r22
    de96:	7f 4f       	sbci	r23, 0xFF	; 255

0000de98 <__divmodhi4_exit>:
    de98:	08 95       	ret

0000de9a <__udivmodsi4>:
    de9a:	a1 e2       	ldi	r26, 0x21	; 33
    de9c:	1a 2e       	mov	r1, r26
    de9e:	aa 1b       	sub	r26, r26
    dea0:	bb 1b       	sub	r27, r27
    dea2:	fd 01       	movw	r30, r26
    dea4:	0d c0       	rjmp	.+26     	; 0xdec0 <__udivmodsi4_ep>

0000dea6 <__udivmodsi4_loop>:
    dea6:	aa 1f       	adc	r26, r26
    dea8:	bb 1f       	adc	r27, r27
    deaa:	ee 1f       	adc	r30, r30
    deac:	ff 1f       	adc	r31, r31
    deae:	a2 17       	cp	r26, r18
    deb0:	b3 07       	cpc	r27, r19
    deb2:	e4 07       	cpc	r30, r20
    deb4:	f5 07       	cpc	r31, r21
    deb6:	20 f0       	brcs	.+8      	; 0xdec0 <__udivmodsi4_ep>
    deb8:	a2 1b       	sub	r26, r18
    deba:	b3 0b       	sbc	r27, r19
    debc:	e4 0b       	sbc	r30, r20
    debe:	f5 0b       	sbc	r31, r21

0000dec0 <__udivmodsi4_ep>:
    dec0:	66 1f       	adc	r22, r22
    dec2:	77 1f       	adc	r23, r23
    dec4:	88 1f       	adc	r24, r24
    dec6:	99 1f       	adc	r25, r25
    dec8:	1a 94       	dec	r1
    deca:	69 f7       	brne	.-38     	; 0xdea6 <__udivmodsi4_loop>
    decc:	60 95       	com	r22
    dece:	70 95       	com	r23
    ded0:	80 95       	com	r24
    ded2:	90 95       	com	r25
    ded4:	9b 01       	movw	r18, r22
    ded6:	ac 01       	movw	r20, r24
    ded8:	bd 01       	movw	r22, r26
    deda:	cf 01       	movw	r24, r30
    dedc:	08 95       	ret

0000dede <__itoa_ncheck>:
    dede:	bb 27       	eor	r27, r27
    dee0:	4a 30       	cpi	r20, 0x0A	; 10
    dee2:	31 f4       	brne	.+12     	; 0xdef0 <__itoa_ncheck+0x12>
    dee4:	99 23       	and	r25, r25
    dee6:	22 f4       	brpl	.+8      	; 0xdef0 <__itoa_ncheck+0x12>
    dee8:	bd e2       	ldi	r27, 0x2D	; 45
    deea:	90 95       	com	r25
    deec:	81 95       	neg	r24
    deee:	9f 4f       	sbci	r25, 0xFF	; 255
    def0:	0c 94 7b 6f 	jmp	0xdef6	; 0xdef6 <__utoa_common>

0000def4 <__utoa_ncheck>:
    def4:	bb 27       	eor	r27, r27

0000def6 <__utoa_common>:
    def6:	fb 01       	movw	r30, r22
    def8:	55 27       	eor	r21, r21
    defa:	aa 27       	eor	r26, r26
    defc:	88 0f       	add	r24, r24
    defe:	99 1f       	adc	r25, r25
    df00:	aa 1f       	adc	r26, r26
    df02:	a4 17       	cp	r26, r20
    df04:	10 f0       	brcs	.+4      	; 0xdf0a <__utoa_common+0x14>
    df06:	a4 1b       	sub	r26, r20
    df08:	83 95       	inc	r24
    df0a:	50 51       	subi	r21, 0x10	; 16
    df0c:	b9 f7       	brne	.-18     	; 0xdefc <__utoa_common+0x6>
    df0e:	a0 5d       	subi	r26, 0xD0	; 208
    df10:	aa 33       	cpi	r26, 0x3A	; 58
    df12:	08 f0       	brcs	.+2      	; 0xdf16 <__utoa_common+0x20>
    df14:	a9 5d       	subi	r26, 0xD9	; 217
    df16:	a1 93       	st	Z+, r26
    df18:	00 97       	sbiw	r24, 0x00	; 0
    df1a:	79 f7       	brne	.-34     	; 0xdefa <__utoa_common+0x4>
    df1c:	b1 11       	cpse	r27, r1
    df1e:	b1 93       	st	Z+, r27
    df20:	11 92       	st	Z+, r1
    df22:	cb 01       	movw	r24, r22
    df24:	0c 94 94 6f 	jmp	0xdf28	; 0xdf28 <strrev>

0000df28 <strrev>:
    df28:	dc 01       	movw	r26, r24
    df2a:	fc 01       	movw	r30, r24
    df2c:	67 2f       	mov	r22, r23
    df2e:	71 91       	ld	r23, Z+
    df30:	77 23       	and	r23, r23
    df32:	e1 f7       	brne	.-8      	; 0xdf2c <strrev+0x4>
    df34:	32 97       	sbiw	r30, 0x02	; 2
    df36:	04 c0       	rjmp	.+8      	; 0xdf40 <strrev+0x18>
    df38:	7c 91       	ld	r23, X
    df3a:	6d 93       	st	X+, r22
    df3c:	70 83       	st	Z, r23
    df3e:	62 91       	ld	r22, -Z
    df40:	ae 17       	cp	r26, r30
    df42:	bf 07       	cpc	r27, r31
    df44:	c8 f3       	brcs	.-14     	; 0xdf38 <strrev+0x10>
    df46:	08 95       	ret

0000df48 <_exit>:
    df48:	f8 94       	cli

0000df4a <__stop_program>:
    df4a:	ff cf       	rjmp	.-2      	; 0xdf4a <__stop_program>
