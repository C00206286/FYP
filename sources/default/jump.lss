
jump.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  0000d9b6  0000dab6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000d9b6  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008fb  00800104  00800104  0000daba  2**1
                  ALLOC
  3 .noinit       00000401  008009ff  008009ff  0000db00  2**8
                  CONTENTS, READONLY
  4 .comment      00000011  00000000  00000000  0000df01  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000df14  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 000004d8  00000000  00000000  0000df50  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00007910  00000000  00000000  0000e428  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000013a0  00000000  00000000  00015d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00005774  00000000  00000000  000170d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000c34  00000000  00000000  0001c84c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000014fb  00000000  00000000  0001d480  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00005104  00000000  00000000  0001e97b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000538  00000000  00000000  00023a80  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e0 41 	jmp	0x83c0	; 0x83c0 <__ctors_end>
       4:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
       8:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
       c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      10:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      14:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      18:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      1c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      20:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      24:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      28:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      2c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      30:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      34:	0c 94 96 45 	jmp	0x8b2c	; 0x8b2c <__vector_13>
      38:	0c 94 d5 45 	jmp	0x8baa	; 0x8baa <__vector_14>
      3c:	0c 94 01 43 	jmp	0x8602	; 0x8602 <__vector_15>
      40:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      44:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      48:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      4c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      50:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      54:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      58:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      5c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      60:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      64:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      68:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>
      6c:	0c 94 4b 42 	jmp	0x8496	; 0x8496 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	81 00       	.word	0x0081	; ????
      72:	45 00       	.word	0x0045	; ????
      74:	5d ff       	.word	0xff5d	; ????
      76:	5e 10       	cpse	r5, r14
      78:	27 ff       	sbrs	r18, 7
      7a:	2a d2       	rcall	.+1108   	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
      7c:	2b 7d       	andi	r18, 0xDB	; 219
      7e:	21 0c       	add	r2, r1
      80:	22 fb       	bst	r18, 2
      82:	85 00       	.word	0x0085	; ????
      84:	84 00       	.word	0x0084	; ????
      86:	89 03       	fmulsu	r16, r17
      88:	88 8d       	ldd	r24, Y+24	; 0x18
      8a:	81 09       	sbc	r24, r1
      8c:	6f 02       	muls	r22, r31
      8e:	44 42       	sbci	r20, 0x24	; 36
      90:	47 00       	.word	0x0047	; ????
      92:	45 01       	movw	r8, r10
      94:	b0 83       	st	Z, r27
      96:	b3 00       	.word	0x00b3	; ????
      98:	b1 01       	movw	r22, r2
      9a:	24 b9       	out	0x04, r18	; 4
      9c:	25 57       	subi	r18, 0x75	; 117
      9e:	8a 1d       	adc	r24, r10
      a0:	8b 03       	fmulsu	r16, r19

000000a2 <eeprom_format_table>:
      a2:	5a 55 01 20 01 01 00 38 08 00 00 00 00 00 00 00     ZU. ...8........
	...

000000c2 <patchCommands>:
      c2:	14 48 17 48 73 48 77 48 7e 48 1f 48 24 48 29 48     .H.HsHwH~H.H$H)H
      d2:	86 48 2c 48 2f 48 32 48 6d 48 70 48 96 48           .H,H/H2HmHpH.H

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <map_uzeboxlogo2>:
      ec:	05 03 00 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f     ................
	...

000000fd <map_uzeboxlogo>:
      fd:	05 04 00 01 02 03 04 05 06 07 08 09 0a 0b 0c 0d     ................
     10d:	00 0e 0f 10 11 12                                   ......

00000113 <logo_tileset>:
	...
     16f:	00 00 00 49 00 00 00 00 00 49 52 52 00 00 00 49     ...I.....IRR...I
     17f:	52 53 1c 25 00 49 52 52 24 25 25 1b 52 52 5c 2d     RS.%.IRR$%%.RR\-
     18f:	2d 1c 12 12 00 00 00 00 00 00 00 00 00 00 00 00     -...............
     19f:	40 49 49 49 00 40 49 49 52 5b 5b 5b 4a 52 52 5b     @III.@IIR[[[JRR[
     1af:	1c 1c 13 12 5b 1c 24 1c 12 09 09 09 24 1b 12 09     ....[.$.....$...
     1bf:	09 09 09 0a 0a 0a 0a 0a 0a 0a 0a 13 0a 0a 12 0a     ................
     1cf:	0a 12 13 0a 00 00 00 00 00 00 00 00 92 52 52 52     .............RRR
     1df:	52 52 52 49 13 12 13 09 00 1c 1b 13 0a 12 12 40     RRRI...........@
     1ef:	1b 65 64 1c 09 0a 00 09 24 1b 1c 65 12 00 00 25     .ed.....$..e...%
     1ff:	1c 1c 1c 1c 01 00 25 24 1c 1c 1c 1c 00 24 25 24     ......%$.....$%$
     20f:	24 24 1c 1c 00 00 00 00 00 00 00 00 49 40 00 00     $$..........I@..
     21f:	00 00 00 00 52 49 49 00 00 00 00 00 1c 5b 4a 48     ....RII......[JH
     22f:	00 00 00 00 1c 25 52 49 00 00 00 00 65 24 64 49     .....%RI....e$dI
     23f:	00 00 00 00 65 25 64 49 00 00 00 00 6d 2e 5c 49     ....e%dI....m.\I
	...
     257:	00 00 40 52 00 00 00 00 00 49 52 5c 00 00 00 00     ..@R.....IR\....
     267:	53 52 24 25 00 00 00 53 52 25 25 25 00 00 4a 52     SR$%...SR%%%..JR
     277:	25 25 1b 00 00 00 5b 25 13 00 00 1b 00 5b 53 00     %%....[%.....[S.
     287:	0a 1c 37 37 09 5b 1c 65 7f 37 2e 2e 52 2e 2e 1c     ..77.[.e.7..R...
     297:	13 13 12 00 2e 25 1b 13 12 00 00 12 1c 1c 12 00     .....%..........
     2a7:	00 12 25 1c 12 00 00 12 2e 37 1c 13 00 13 2e 37     ..%......7.....7
     2b7:	36 1c 13 1b 37 37 2e 2e 25 13 1c 1c 2e 2e 2e 2e     6...77..%.......
     2c7:	1b 1c 1c 1c 6e 6e 6e 1c 1c 1c 1c 1c 09 13 13 12     ....nnn.........
     2d7:	12 13 13 00 13 13 13 13 13 1c 00 09 13 13 13 13     ................
     2e7:	1c 01 00 37 13 13 13 1c 13 00 2e 2e 1b 1b 1c 1c     ...7............
     2f7:	00 1c 77 2e 1b 1b 25 00 13 7f 25 1c 1c 1c 01 0a     ..w...%...%.....
     307:	37 24 1c 1c 1c 13 0a 2e 25 25 09 00 13 2e 24 25     7$......%%....$%
     317:	25 25 25 25 2e 25 25 25 25 25 25 25 25 25 2d 2e     %%%%.%%%%%%%%%-.
     327:	25 1b 1c 1c 2e 2e 25 1c 13 25 1b 13 25 1c 1c 1c     %.....%..%..%...
     337:	1c 01 09 52 1c 1c 13 00 01 1c 5b 5c 0a 00 01 65     ...R......[\...e
     347:	77 5c 1b 00 01 6e 7f 6e 52 1b 00 00 6d 1c 52 49     w\...n.nR...m.RI
     357:	00 00 00 00 1c 13 53 00 00 00 00 00 1c 52 4a 00     ......S......RJ.
     367:	00 00 00 00 5b 5b 00 00 00 00 00 00 5c 00 00 00     ....[[......\...
	...
     393:	13 5b 7f 77 6e 6e 6e 6e 13 65 77 76 6e 6e 6e 6e     .[.wnnnn.ewvnnnn
     3a3:	1b 65 77 76 76 76 6e 77 1b 5b bf 76 b6 76 76 76     .ewvvvnw.[.v.vvv
     3b3:	09 13 6d bf b7 b6 b7 65 00 1b 12 5c 76 bf 76 6d     ..m....e...\v.vm
     3c3:	00 00 12 1b 12 5b 5b 5c 00 00 00 00 09 0a 12 13     .....[[\........
     3d3:	6e 77 24 1c 1c 1c 1c 1c 77 25 1c 1c 1c 1c 24 25     nw$.....w%....$%
     3e3:	6e 1c 1c 1c 24 25 25 1b 1c 1c 24 25 25 13 00 00     n...$%%...$%%...
     3f3:	64 6d 6d 1b 00 09 6e bf 6d 5b 09 12 6e bf 6d 5b     dmm...n.m[..n.m[
     403:	5b 12 5b 64 5b 12 13 12 13 1b 12 12 09 01 00 00     [.[d[...........
     413:	1c 24 2e 1c 09 00 09 6e 25 24 01 00 09 76 7f 7f     .$.....n%$...v..
     423:	00 00 12 77 7f 7f 64 12 64 bf bf 77 5b 12 1b 09     ...w..d.d..w[...
     433:	bf 6d 5b 12 1b 09 00 00 12 13 1b 09 00 00 00 00     .m[.............
     443:	09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     453:	7f 7f 53 13 13 00 00 00 64 12 1b 01 00 00 00 00     ..S.....d.......
     463:	1b 12 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     49b:	26 00 00 00 26 00 26 26 2f 00 00 00 2f 00 00 00     &...&.&&/.../...
     4ab:	37 00 00 00 37 00 00 00 ff 00 00 00 ff 00 00 00     7...7...........
     4bb:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     4cb:	00 26 26 00 00 00 26 26 00 00 00 00 00 00 00 00     .&&...&&........
     4db:	26 26 26 00 26 26 26 26 00 00 2f 00 2f 00 00 00     &&&.&&&&.././...
     4eb:	00 37 00 00 37 00 00 00 ff 00 00 00 ff ff ff ff     .7..7...........
     4fb:	00 00 00 00 bf 00 00 00 00 00 00 00 37 00 00 00     ............7...
     50b:	26 26 26 00 26 26 26 26 00 00 00 00 00 00 00 00     &&&.&&&&........
     51b:	26 00 26 26 26 26 00 00 00 00 2f 00 00 00 2f 00     &.&&&&..../.../.
     52b:	00 00 37 00 00 00 37 00 00 00 ff ff ff ff 00 00     ..7...7.........
     53b:	00 00 bf 00 00 00 bf 00 00 00 37 00 00 00 37 00     ..........7...7.
     54b:	26 00 26 26 26 26 00 00 00 00 00 00 00 00 00 00     &.&&&&..........
     55b:	00 00 26 26 26 00 26 00 00 2f 00 00 2f 00 2f 00     ..&&&.&../.././.
     56b:	37 00 00 00 37 00 00 37 ff 00 00 00 ff 00 00 00     7...7..7........
     57b:	bf 00 00 00 bf 00 00 bf 37 00 00 37 00 00 37 00     ........7..7..7.
     58b:	26 26 26 00 00 00 26 00 00 00 00 00 00 00 00 00     &&&...&.........
     59b:	00 00 26 00 00 00 00 00 00 00 2f 00 00 00 00 00     ..&......./.....
     5ab:	00 37 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     .7..............
     5bb:	00 bf 00 00 00 00 00 00 00 00 37 00 00 00 00 00     ..........7.....
     5cb:	00 00 26 00 00 00 00 00 00 00 00 00 00 00 00 00     ..&.............
	...
     5ef:	00 00 00 e4 00 00 00 00 09 9b ed f6 00 00 00 9b     ................
     5ff:	a4 ad bf bf 00 52 9b a4 76 7f 7f b7 5b 9b 6d 77     .....R..v...[.mw
     60f:	7f 76 6e b7 00 00 00 00 00 00 00 00 00 00 00 00     .vn.............
     61f:	5b b6 f6 f6 00 5b f6 ff ff ff ff bf f6 ff ff ff     [....[..........
     62f:	ff bf bf ae ff bf ff ff ff b7 ad 65 bf bf ff ff     ...........e....
     63f:	b7 b6 ad 65 b7 bf ff ff bf b7 ae 6e b7 bf ff ff     ...e.......n....
     64f:	bf b7 b7 65 00 00 00 00 00 00 00 00 f6 f6 ed ed     ...e............
     65f:	ad a4 a4 9b b6 6d 6d 5c 52 6e 65 64 65 65 65 52     .....mm\RnedeeeR
     66f:	65 76 6d 25 5c 5c 52 53 6e 24 65 6e 65 52 52 6e     evm%\\RSn$eneRRn
     67f:	25 25 24 25 5b 52 77 2d 25 25 25 24 52 6e 6e 2d     %%$%[Rw-%%%$Rnn-
     68f:	25 25 25 25 00 00 00 00 00 00 00 00 9b 49 00 00     %%%%.........I..
     69f:	00 00 00 00 a4 9b 92 00 00 00 00 00 25 64 93 49     ............%d.I
     6af:	00 00 00 00 65 2e 9b 52 00 00 00 00 6d 25 65 52     ....e..R....m%eR
     6bf:	00 00 00 00 6d 2d 65 52 00 00 00 00 6e 2e 64 52     ....m-eR....n.dR
	...
     6d7:	00 00 49 5b 00 00 00 00 00 4a 5b 65 00 00 00 00     ..I[.....J[e....
     6e7:	5b 9b 6d 2d 00 00 00 5b 5b 2d 2e 25 00 00 52 5b     [.m-...[[-.%..R[
     6f7:	2e 2e 1c 09 00 01 5b 2d 1c 01 09 1c 00 5c 5b 01     ......[-.....\[.
     707:	4a 65 77 7f 4a 5b 1c 6e 7f 77 77 76 9b 77 77 6d     Jew.J[.n.wwv.wwm
     717:	65 6e 6e a4 77 6e 65 65 65 5b a4 b7 25 25 5c 52     enn.wneee[..%%\R
     727:	52 6d bf bf 13 09 49 64 7f bf bf bf 09 5c 7f 7f     Rm....Id.....\..
     737:	bf bf b7 bf 7f 7f 77 7f 7f b7 bf bf 77 77 7f 7f     ......w.....ww..
     747:	6e b7 bf bf 77 7f 7f 6e 77 bf bf bf b6 ff ff ff     n...w..nw.......
     757:	bf bf b7 5b bf ff ff ff bf bf a4 64 bf ff ff ff     ...[.......d....
     767:	bf ad a4 7f bf ff ff ff bf a4 bf 7f ff ff ff bf     ................
     777:	ad bf bf bf ff ff ff b6 bf bf bf 77 ff ff f7 bf     ...........w....
     787:	bf bf 77 77 ff ff ff bf bf bf 64 52 6d 7f 6e 2e     ..ww......dRm.n.
     797:	2d 2d 25 6e 7f 76 6e 6e 6e 2e 25 65 77 77 77 76     --%n.vnnn.%ewwwv
     7a7:	2e 1c 25 24 7f 77 6e 25 1c 25 1c 1b 77 65 25 25     ..%$.wn%.%..we%%
     7b7:	1c 09 0a 5b 6e 6e 1c 09 49 25 64 64 5b 49 4a 6e     ...[nn..I%dd[IJn
     7c7:	7f 64 5c 00 53 77 bf 77 5b 5c 00 00 6e 25 5b 4a     .d\.Sw.w[\..n%[J
     7d7:	00 00 00 00 1c 1b 5b 00 00 00 00 00 24 5b 53 00     ......[.....$[S.
     7e7:	00 00 00 00 5b 5c 00 00 00 00 00 00 64 00 00 00     ....[\......d...
	...
     813:	5b 5c 7f bf 77 76 77 77 5c 6d 7f b7 77 77 77 77     [\..wvww\m..wwww
     823:	5c 6d 7f bf 77 77 77 bf 5c 64 bf bf bf bf bf 7f     \m..www.\d......
     833:	0a 5c 6e bf bf bf bf 76 00 65 64 6d bf bf bf bf     .\n....v.edm....
     843:	00 00 5b 6d 64 6d ad b6 00 00 00 00 12 5b 64 6d     ..[mdm.......[dm
     853:	77 7f 6e 6e 77 bf bf bf 7f 76 6d 76 77 bf bf bf     w.nnw....vmvw...
     863:	77 6d 6e 76 7f bf bf bf 6d 6e 76 7f bf b7 ad f6     wmnv....mnv.....
     873:	76 bf bf 76 a4 ad ff ff bf b6 64 ad ff ff ff ff     v..v......d.....
     883:	b6 ad bf ff ff ff ff f6 ad b6 ad 64 5b 52 00 00     ...........d[R..
     893:	ff ff bf bf ad 5b 64 bf ff ff b6 ad ad bf ff bf     .....[d.........
     8a3:	ff f6 ff ff ff ff bf 64 ff ff ff ff bf b6 76 5b     .......d......v[
     8b3:	ff ff ff bf bf 5b 00 00 ff ff ff 5c 00 00 00 00     .....[.....\....
     8c3:	a4 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     8d3:	bf bf 64 5c 5c 00 00 00 6e 5c 65 49 00 00 00 00     ..d\\...n\eI....
     8e3:	6d 5b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     m[..............
	...

00000913 <logoInitPatches>:
     913:	00 00 00 1c 09 00 00 00 00                          .........

0000091c <initPatch>:
     91c:	00 02 08 00 08 55 04 08 5a 00 00 f8 00 09 90 00     .....U..Z.......
     92c:	0a 1e 32 05 00 00 ff                                ..2....

00000933 <level9>:
	...
     93b:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     983:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     993:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     9a3:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     9c3:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     9df:	25 26 00 00 00 00 00 00 00 25 25 00 00 00 00 00     %&.......%%.....
	...
     a07:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     a1f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
     a6b:	00 00 25 26 03 03 03 00 00 00 00 00 00 00 00 00     ..%&............
	...
     ac3:	00 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     b67:	00 00 29 00 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
     b77:	00 00 00 00 00 00 02 02 02 00 00 00 00 00 00 00     ................
     b87:	00 00 00 00 00 03 03 00 00 00 00 00 00 00 00 00     ................
	...
     b9f:	00 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .)..............
	...
     bc3:	29 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00     )...............
     bd3:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
     bf7:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
	...
     c1b:	00 00 29 00 00 00 00 00 00 00 07 00 00 00 00 02     ..).............
     c2b:	02 02 02 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     c4f:	00 00 00 29 29 29 29 29 00 00 00 00 00 00 00 00     ...)))))........
	...
     c67:	04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     c77:	27 00 00 00 00 00 00 0a 07 00 00 00 00 00 00 00     '...............
	...
     cab:	00 00 29 29 29 00 00 00 00 00 00 00 00 00 00 00     ..)))...........
     cbb:	00 00 00 00 00 04 04 00 00 29 00 00 29 00 00 29     .........)..)..)
	...
     cd7:	00 07 07 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ce7:	1f 21 00 00 00 00 00 00 00 00 00 27 27 00 00 27     .!.........''..'
     cf7:	27 00 00 00 00 00 00 00 00 33 00 00 00 00 00 00     '........3......
     d07:	00 29 00 00 00 00 00 00 19 1a 00 00 00 00 00 00     .)..............
     d17:	00 00 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
     d27:	00 00 00 1d 1d 1d 00 00 00 00 0a 07 07 1e 1e 00     ................
	...
     d3f:	00 00 20 22 00 00 00 00 00 00 00 00 32 00 00 00     .. "........2...
	...
     d57:	07 07 07 07 00 00 00 00 00 00 00 07 00 00 00 00     ................
     d67:	00 00 1b 1c 01 01 01 01 01 01 01 01 01 01 05 00     ................
     d77:	00 08 00 00 08 00 00 08 00 00 06 01 01 01 01 01     ................
     d87:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
     d97:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 05 00     ................
     da7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
     db7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
	...

00000e1f <level8>:
	...
     e27:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
     e6f:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
     e7f:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
     e8f:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
     eaf:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
     ecb:	25 26 00 00 00 00 00 00 00 25 26 00 23 24 00 00     %&.......%&.#$..
	...
     ef3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
     f0b:	00 25 26 00 00 00 00 00 00 00 00 00 00 23 24 00     .%&..........#$.
	...
     f2f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
     f3f:	29 29 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ))..............
	...
     f57:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
     f6f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
     f97:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
     faf:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
     fd3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     fef:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
     fff:	00 00 00 00 00 00 02 02 02 02 02 02 02 00 00 00     ................
	...
    101f:	02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    102f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1047:	00 00 07 07 07 07 00 00 00 09 00 00 00 00 00 00     ................
	...
    1077:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1087:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    109f:	00 00 09 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    10cf:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    10df:	00 00 00 00 04 04 00 00 00 00 00 00 00 00 00 00     ................
    10ef:	00 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    10ff:	00 00 00 00 00 00 00 09 00 00 00 00 00 00 00 00     ................
    110f:	00 00 00 00 00 00 00 29 00 00 00 00 00 00 00 00     .......)........
	...
    112b:	00 00 04 00 04 00 00 00 00 00 32 00 00 00 00 00     ..........2.....
    113b:	00 04 04 04 00 00 00 27 27 27 00 00 00 00 00 00     .......'''......
    114b:	00 00 29 00 00 00 00 00 09 00 00 00 00 00 00 00     ..).............
	...
    116b:	00 04 00 00 29 04 29 00 00 04 00 00 00 00 00 29     ....).)........)
    117b:	00 00 29 00 00 00 00 00 00 00 04 00 04 00 04 00     ..).............
    118b:	00 00 03 03 03 00 00 00 00 00 00 04 04 04 00 00     ................
	...
    11a7:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    11b7:	00 00 00 00 00 09 00 00 00 00 00 00 00 00 00 04     ................
    11c7:	00 00 04 04 04 00 00 04 00 00 00 00 00 00 00 00     ................
    11d7:	00 00 00 00 00 00 04 00 04 00 04 00 04 00 00 00     ................
	...
    11ef:	04 04 04 04 00 00 00 00 00 00 00 00 19 1a 00 00     ................
    11ff:	00 00 00 00 07 07 07 00 00 00 00 00 00 00 00 00     ................
	...
    1217:	00 1e 00 00 00 00 00 00 00 04 00 00 00 04 00 00     ................
    1227:	00 04 00 00 00 00 1d 00 00 1d 00 00 1d 00 00 00     ................
    1237:	04 00 04 00 04 00 04 00 00 00 00 00 00 00 00 00     ................
    1247:	00 00 04 04 04 04 00 00 00 00 00 00 00 00 1b 1c     ................
    1257:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    126f:	00 00 00 06 01 01 01 01 01 01 01 05 00 00 00 00     ................
    127f:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    128f:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    129f:	01 01 01 01 01 01 01 05 00 00 00 00 00 00 00 00     ................
    12af:	06 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000130b <level7>:
	...
    1313:	00 00 23 24 00 00 00 00 00 00 00 00 00 23 24 00     ..#$.........#$.
	...
    135b:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
    136b:	00 00 00 00 25 26 00 00 00 00 00 00 00 00 00 25     ....%&.........%
    137b:	26 00 00 00 00 00 00 00 00 00 23 24 00 00 00 00     &.........#$....
	...
    139b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    13b7:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
	...
    13d3:	03 03 00 00 00 00 00 00 00 00 00 00 25 26 00 00     ............%&..
	...
    13eb:	23 24 00 00 00 00 00 00 00 00 00 00 00 25 26 00     #$...........%&.
	...
    1443:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1487:	00 00 32 00 00 00 00 00 00 00 00 00 00 00 00 00     ..2.............
	...
    14db:	00 29 00 00 00 02 02 02 02 00 00 00 00 00 00 00     .)..............
    14eb:	00 00 00 03 03 03 03 03 00 00 00 00 00 00 00 00     ................
	...
    1507:	00 03 29 03 00 00 00 00 00 00 00 00 00 00 00 00     ..).............
	...
    1533:	00 00 27 27 27 00 00 00 00 00 00 00 00 00 00 00     ..'''...........
	...
    156b:	00 32 00 00 27 00 00 00 00 00 00 00 00 00 00 00     .2..'...........
	...
    15bb:	00 29 29 29 00 00 00 00 00 00 0b 0c 00 00 00 00     .)))............
    15cb:	00 0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    15e3:	00 00 27 27 00 00 00 00 00 00 00 00 00 00 00 00     ..''............
    15f3:	00 0b 0c 00 00 00 00 00 00 02 02 03 02 02 00 00     ................
	...
    161f:	0f 10 00 00 00 00 00 0f 10 00 00 00 00 00 00 00     ................
	...
    163b:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    164b:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    166f:	00 03 29 03 00 00 00 00 00 09 0f 10 00 00 00 00     ..).............
    167f:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    168f:	00 00 00 00 00 27 27 27 00 00 00 00 00 00 00 00     .....'''........
	...
    16a7:	00 0f 10 00 00 00 00 00 00 00 00 00 00 00 1f 21     ...............!
	...
    16bf:	00 1f 21 00 00 00 00 00 00 00 00 00 00 00 00 00     ..!.............
    16cf:	00 00 07 09 0f 10 00 00 00 00 00 0f 10 00 00 00     ................
    16df:	00 15 16 00 00 00 00 00 19 1a 00 00 00 00 00 00     ................
	...
    16ff:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
    170f:	20 22 00 00 00 00 00 00 00 00 00 20 22 00 00 00      "......... "...
	...
    1727:	00 00 00 0a 07 09 0d 0e 00 00 00 00 00 0d 0e 00     ................
    1737:	00 00 00 17 18 00 00 00 00 00 1b 1c 01 01 01 05     ................
	...
    175b:	06 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    176b:	01 01 05 00 06 01 01 01 01 01 01 01 05 00 06 01     ................
    177b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    178b:	00 00 00 06 01 01 01 01 01 01 01 01 01 01 01 01     ................
    179b:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000017f7 <level6>:
	...
    180b:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1847:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1863:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1887:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    18a3:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    18b3:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    18cb:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    18e3:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1903:	19 1a 00 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    1913:	00 03 03 02 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    192f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 03     ..%&............
    193f:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    195b:	00 00 1b 1c 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19b3:	00 00 00 32 0b 0c 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    19e3:	00 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    19ff:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
    1a0f:	00 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1f:	00 00 00 03 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a4b:	00 03 03 03 00 00 00 00 00 00 00 00 00 00 04 00     ................
	...
    1a67:	00 00 04 04 0f 10 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a8b:	00 04 00 00 00 00 00 00 00 00 02 02 00 00 00 00     ................
    1a9b:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ab3:	04 00 00 00 00 29 00 00 00 00 00 00 00 00 00 04     .....)..........
    1ac3:	04 04 0f 10 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ae3:	00 00 00 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1b0b:	00 04 04 00 00 00 29 00 29 00 00 00 00 00 00 00     ......).).......
    1b1b:	04 04 04 04 0f 10 00 00 00 00 00 00 29 29 00 00     ............))..
    1b2b:	00 00 00 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
    1b3b:	00 00 00 04 00 04 00 00 00 00 02 02 02 00 00 00     ................
	...
    1b57:	00 00 00 03 03 03 00 00 00 00 00 00 00 00 00 04     ................
    1b67:	04 00 00 29 00 29 00 29 00 00 00 00 00 04 04 04     ...).).)........
    1b77:	04 04 0f 10 00 00 00 00 15 16 04 04 1f 21 00 00     .............!..
	...
    1b8f:	00 1f 21 00 00 15 16 00 00 04 00 04 00 00 00 00     ..!.............
	...
    1bab:	02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1bbb:	15 16 00 00 04 04 04 00 00 00 29 00 29 00 00 00     ..........).)...
    1bcb:	00 00 04 04 04 04 04 04 0f 10 00 00 00 00 17 18     ................
    1bdb:	04 04 20 22 00 00 00 00 00 00 00 00 00 00 32 20     .. "..........2 
    1beb:	22 00 00 17 18 04 00 04 00 04 00 00 00 00 00 00     "...............
	...
    1c13:	00 00 17 18 00 00 04 04 04 00 00 00 00 29 00 00     .............)..
    1c23:	00 00 00 04 04 04 04 04 04 04 0d 0e 01 01 01 01     ................
    1c33:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c43:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c53:	01 01 01 01 05 00 00 00 00 00 00 00 00 00 06 05     ................
    1c63:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    1c73:	01 01 01 05 00 00 00 08 00 00 06 01 01 01 01 01     ................
    1c83:	01 01 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
	...

00001ce3 <level5>:
	...
    1cf7:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    1d33:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    1d4f:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    1d73:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    1d8f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    1d9f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1db7:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    1dcf:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    1df7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e1b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    1e47:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    1e9f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    1eaf:	00 00 00 00 00 00 03 00 00 00 00 00 00 00 00 03     ................
    1ebf:	03 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1eeb:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    1f23:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
	...
    1f43:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    1f67:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 00 00     ...2............
	...
    1f7f:	00 02 02 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
	...
    1f9b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    1fbf:	00 00 00 02 02 02 00 00 00 00 00 00 00 02 02 02     ................
	...
    1fdb:	00 00 04 00 00 00 00 00 00 00 04 00 00 04 00 00     ................
    1feb:	00 00 32 00 00 00 00 00 00 00 00 00 04 04 04 00     ..2.............
    1ffb:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
    200b:	00 00 00 00 00 29 00 00 00 29 00 00 00 00 00 00     .....)...)......
	...
    2033:	04 00 00 00 04 00 00 00 00 00 00 00 00 00 00 04     ................
    2043:	00 00 00 03 02 03 03 02 00 00 00 00 00 04 04 04     ................
    2053:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
    2063:	00 00 00 00 00 00 00 04 00 32 00 04 00 00 00 00     .........2......
    2073:	00 04 00 00 00 00 00 00 04 1f 21 00 00 15 16 00     ..........!.....
	...
    208b:	00 00 04 00 00 00 04 00 02 00 00 04 00 00 00 00     ................
    209b:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 04     ................
    20ab:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    20bb:	00 00 00 00 19 1a 00 00 00 04 04 04 04 04 00 00     ................
    20cb:	00 00 00 04 00 00 00 00 00 00 04 20 22 00 00 17     ........... "...
    20db:	18 00 00 00 00 00 00 00 00 00 00 00 04 00 00 00     ................
    20eb:	04 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00     ................
	...
    2103:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 00 00     ................
    2113:	29 00 00 00 00 00 1b 1c 01 05 00 00 00 00 00 00     )...............
    2123:	00 00 06 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2133:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    2143:	01 01 05 00 00 00 00 00 00 00 00 00 00 06 01 01     ................
    2153:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    2163:	05 00 08 00 08 00 06 01 05 00 06 01 01 01 01 01     ................
    2173:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

000021cf <level4>:
	...
    21e3:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    221f:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    223b:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    225f:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    227b:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
	...
    22a3:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    22bb:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2307:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2333:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    238b:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    23df:	00 00 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    23f7:	00 00 03 00 00 03 00 00 00 00 00 00 00 00 00 00     ................
	...
    241b:	00 02 02 02 02 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    243b:	04 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    248f:	00 00 04 00 00 00 04 04 00 00 00 00 00 00 00 00     ................
	...
    24b3:	00 00 00 29 29 29 00 00 00 00 00 00 00 0b 0c 00     ...)))..........
	...
    24eb:	04 04 00 00 04 04 00 00 00 00 04 00 00 00 00 00     ................
	...
    2507:	03 00 00 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2517:	00 00 00 0f 10 00 00 00 00 00 00 00 00 00 00 00     ................
    2527:	03 03 03 02 02 02 03 03 03 00 00 00 00 00 00 00     ................
	...
    253f:	00 04 04 00 00 00 04 04 00 00 04 04 00 00 00 00     ................
	...
    2557:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    2567:	00 1f 21 00 33 15 16 00 00 00 00 00 00 0f 10 00     ..!.3...........
	...
    2593:	00 00 00 04 04 00 00 04 04 00 00 00 04 04 00 00     ................
    25a3:	04 04 00 00 04 00 00 00 19 1a 00 00 00 00 17 18     ................
    25b3:	00 00 20 22 00 00 00 00 00 00 00 00 00 00 00 20     .. "........... 
    25c3:	22 00 02 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    25eb:	00 04 04 00 00 04 04 00 00 04 04 00 00 00 04 04     ................
    25fb:	00 00 04 04 00 00 00 00 00 00 1b 1c 01 01 01 01     ................
    260b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    261b:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    262b:	01 01 01 01 05 00 06 01 01 01 01 01 05 00 06 05     ................
    263b:	00 06 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    264b:	01 01 01 01 01 01 01 01 01 01 01 01 01 05 00 00     ................
    265b:	00 00 00 00 06 01 00 00 00 00 00 00 00 00 00 00     ................
	...

000026bb <level3>:
	...
    26cf:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    270b:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    2727:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    274b:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2767:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    2777:	23 24 00 00 00 00 00 00 00 00 00 00 29 00 00 00     #$..........)...
	...
    278f:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    27a7:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
    27b7:	00 00 00 33 00 00 00 00 00 00 00 00 00 00 00 00     ...3............
	...
    27cf:	00 00 25 26 00 00 00 00 00 00 00 00 00 29 29 29     ..%&.........)))
	...
    27f3:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    280f:	00 00 07 07 07 07 00 00 00 00 00 00 00 00 00 00     ................
    281f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
    282f:	00 00 00 00 00 00 29 29 29 29 29 00 00 00 00 00     ......))))).....
    283f:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2877:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    288f:	07 07 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28a7:	07 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ef:	00 07 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    290b:	07 07 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    291b:	00 00 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    2957:	0b 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2973:	00 00 00 07 07 00 00 00 00 00 00 29 00 00 00 00     ...........)....
	...
    2997:	00 00 32 00 00 00 07 07 07 07 07 00 00 00 00 00     ..2.............
    29a7:	00 00 00 00 00 0b 0c 00 00 00 0f 10 00 00 00 00     ................
	...
    29cf:	07 07 07 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    29ef:	00 00 07 07 07 00 00 00 00 00 00 00 00 00 00 00     ................
    29ff:	00 00 00 00 00 00 00 0f 10 00 00 00 0f 10 00 00     ................
    2a0f:	00 00 00 00 00 07 07 07 00 00 00 00 00 00 04 04     ................
    2a1f:	00 00 04 04 00 00 00 00 00 07 07 07 07 00 00 00     ................
    2a2f:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    2a5f:	00 0f 10 00 00 00 0f 10 00 00 00 00 00 00 00 00     ................
	...
    2a7f:	00 00 07 07 07 07 07 00 00 00 00 00 00 29 00 00     .............)..
	...
    2a97:	19 1a 00 00 00 00 00 00 00 07 07 07 00 00 00 00     ................
	...
    2ab7:	00 00 00 0d 0e 00 00 00 0d 0e 00 00 00 00 00 00     ................
	...
    2ad7:	00 00 00 07 07 07 07 07 07 00 00 00 00 00 00 29     ...............)
    2ae7:	00 00 00 00 29 00 29 00 29 00 1b 1c 01 01 01 05     ....).).).......
	...
    2b13:	00 06 05 00 00 00 06 05 00 00 00 00 00 00 00 00     ................
    2b23:	00 00 00 00 00 06 01 01 01 01 01 01 01 01 01 01     ................
    2b33:	01 01 01 01 01 01 01 01 05 00 08 00 00 06 01 01     ................
    2b43:	01 01 05 00 08 00 08 00 06 01 00 00 00 00 00 00     ................
	...

00002ba7 <level2>:
	...
    2bbb:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2bf7:	00 00 23 24 00 00 00 00 00 00 00 23 24 00 00 00     ..#$.......#$...
	...
    2c13:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    2c37:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    2c53:	25 26 00 00 00 00 00 00 00 25 26 00 00 00 00 00     %&.......%&.....
    2c63:	00 23 24 00 00 00 00 00 00 00 00 00 00 00 00 00     .#$.............
	...
    2c7b:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    2c93:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    2cbb:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 00 00     ...%&...........
	...
    2cdf:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    2d0b:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    2d63:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
    2d73:	00 00 29 29 00 00 00 00 00 00 00 00 00 00 00 00     ..))............
	...
    2dcf:	29 29 00 00 03 02 02 00 00 00 00 00 00 00 00 00     ))..............
    2ddf:	00 00 00 00 00 00 32 00 00 00 00 29 29 00 00 00     ......2....))...
	...
    2dfb:	02 02 02 03 02 02 02 00 00 00 00 00 00 00 00 00     ................
	...
    2e27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2e37:	00 00 00 00 00 04 04 04 04 04 00 00 00 02 02 00     ................
	...
    2e67:	33 00 00 00 00 00 00 00 00 00 00 00 00 00 19 1a     3...............
	...
    2e87:	00 00 00 32 00 00 00 00 00 00 00 00 00 00 04 04     ...2............
	...
    2eaf:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 04     2...............
    2ebf:	04 04 04 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2ecf:	1b 1c 00 00 03 00 00 00 00 00 00 07 07 00 00 00     ................
    2edf:	00 03 02 03 03 02 00 00 00 00 00 00 00 00 00 04     ................
    2eef:	04 04 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    2eff:	00 00 00 00 00 29 29 00 00 00 02 02 02 03 02 02     .....)).........
    2f0f:	02 00 00 00 00 00 00 00 04 04 04 04 04 00 00 00     ................
	...
    2f27:	00 00 07 07 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2f3f:	00 1f 21 00 00 00 00 00 04 04 04 04 00 0b 0c 00     ..!.............
    2f4f:	02 02 02 02 02 02 00 00 00 00 00 00 00 00 00 29     ...............)
    2f5f:	29 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     )...............
    2f6f:	00 04 04 04 04 04 04 00 00 00 00 00 15 16 00 00     ................
    2f7f:	00 00 00 07 07 07 00 00 00 00 00 07 07 07 00 00     ................
	...
    2f97:	00 00 00 20 22 00 00 04 04 04 04 04 04 04 00 0d     ... "...........
    2fa7:	0e 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2fb7:	00 29 29 00 00 00 00 00 00 00 00 00 00 00 00 00     .)).............
    2fc7:	00 00 04 04 04 04 04 04 04 00 00 00 00 00 17 18     ................
    2fd7:	00 00 00 00 07 07 07 07 01 01 01 05 00 00 00 00     ................
    2fe7:	00 00 00 00 00 00 06 01 01 01 01 01 01 01 01 01     ................
    2ff7:	01 01 01 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    3007:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3017:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3027:	01 01 05 00 00 08 00 06 01 01 01 01 01 01 01 01     ................
    3037:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

00003093 <level1>:
    3093:	01 01 01 01 01 01 01 01 00 00 00 00 00 00 00 00     ................
    30a3:	00 00 00 00 00 23 24 00 00 00 00 00 00 00 00 00     .....#$.........
	...
    30e3:	00 00 23 24 00 00 00 00 00 00 00 00 23 24 00 00     ..#$........#$..
	...
    30ff:	00 00 00 25 26 00 00 00 00 00 00 00 00 00 23 24     ...%&.........#$
	...
    3123:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    313f:	25 26 00 00 00 00 00 00 00 00 25 26 00 00 00 00     %&........%&....
    314f:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    3167:	25 26 00 00 00 00 00 00 00 00 00 00 23 24 00 00     %&..........#$..
	...
    317f:	00 25 26 00 00 00 00 00 00 00 00 00 00 00 00 00     .%&.............
	...
    31a7:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31cb:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    31f7:	23 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00     #$..............
	...
    324f:	00 00 25 26 00 00 00 00 00 00 00 00 00 00 00 00     ..%&............
	...
    3267:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    329b:	32 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     2...............
	...
    32bb:	00 00 00 02 03 02 00 00 00 01 00 00 00 00 00 00     ................
	...
    32d3:	00 00 00 29 29 00 00 00 00 00 00 00 00 00 00 00     ...))...........
    32e3:	00 00 03 02 02 03 03 02 00 00 00 00 00 00 00 00     ................
    32f3:	00 00 04 00 00 00 00 00 00 29 00 00 00 00 00 00     .........)......
	...
    331b:	00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00     ................
    332b:	00 00 00 00 02 02 02 02 00 00 00 00 00 00 00 00     ................
	...
    334b:	00 00 00 04 04 00 00 00 00 00 29 00 00 00 00 00     ..........).....
	...
    336f:	32 00 00 00 00 00 00 32 00 01 00 00 00 00 00 00     2......2........
    337f:	00 00 00 00 00 0b 0c 00 00 00 00 00 00 00 00 00     ................
	...
    339b:	32 00 00 00 00 00 00 00 00 00 00 00 04 04 04 00     2...............
    33ab:	00 00 00 29 00 00 00 00 00 00 00 00 00 00 00 00     ...)............
	...
    33cb:	02 03 02 03 03 02 00 01 00 00 00 00 00 00 00 00     ................
    33db:	00 00 00 0d 0e 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    33f3:	03 02 02 03 00 02 00 00 00 00 00 00 00 04 04 04     ................
    3403:	04 00 00 00 29 00 00 00 00 00 00 00 00 00 00 00     ....)...........
	...
    341b:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    342b:	00 1f 21 00 00 15 16 00 00 00 00 00 00 0b 0c 00     ..!.............
	...
    3457:	00 00 00 04 04 04 04 00 00 00 00 00 00 00 00 00     ................
    3467:	1f 21 00 00 00 00 00 00 19 1a 00 00 00 00 17 18     .!..............
    3477:	00 00 20 22 00 00 32 00 32 00 32 00 00 00 00 20     .. "..2.2.2.... 
    3487:	22 00 00 17 18 00 00 00 00 00 00 0d 0e 00 00 00     "...............
	...
    34b3:	00 04 04 04 04 00 00 00 00 00 00 00 00 00 20 22     .............. "
    34c3:	00 00 00 00 00 00 1b 1c 01 01 01 01 01 01 01 01     ................
    34d3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34e3:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    34f3:	05 00 06 01 01 01 01 01 05 00 06 05 00 06 01 01     ................
    3503:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3513:	05 00 08 00 08 00 06 01 01 01 01 01 01 01 01 01     ................
    3523:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...

0000357f <intro0>:
	...
    3587:	00 00 00 23 24 00 00 00 00 00 00 00 00 00 00 00     ...#$...........
	...
    35cf:	23 24 00 00 00 00 00 00 00 00 00 00 04 00 00 00     #$..............
    35df:	04 00 00 00 00 25 26 00 00 00 00 00 00 00 00 04     .....%&.........
	...
    35f7:	04 04 04 04 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    360f:	00 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    361f:	00 00 04 00 00 00 00 00 00 00 25 26 00 00 00 00     ..........%&....
    362f:	00 00 00 00 00 00 04 04 00 04 04 00 00 00 00 00     ................
    363f:	00 04 00 00 04 00 00 04 00 04 00 00 00 00 32 00     ..............2.
    364f:	00 00 04 00 00 00 04 00 00 00 00 00 00 00 04 00     ................
    365f:	00 00 00 00 33 00 00 00 00 00 00 04 00 00 00 00     ....3...........
	...
    367b:	04 00 23 24 00 00 00 00 00 00 00 00 00 00 00 00     ..#$............
    368b:	00 00 00 00 04 00 04 00 04 00 00 04 04 00 00 04     ................
    369b:	00 00 04 00 00 00 00 00 00 00 04 04 04 00 00 00     ................
    36ab:	04 00 00 00 04 00 00 04 04 00 00 04 04 04 00 04     ................
    36bb:	00 04 04 00 00 04 04 00 00 04 00 00 00 00 04 04     ................
    36cb:	00 00 04 04 04 00 00 00 04 04 04 00 25 26 00 00     ............%&..
	...
    36e3:	23 24 00 00 00 00 04 00 00 00 04 00 04 00 00 04     #$..............
    36f3:	00 04 00 00 04 00 00 04 00 00 00 04 00 00 00 00     ................
    3703:	00 00 04 04 04 04 00 00 04 00 00 04 00 00 04 00     ................
    3713:	00 04 04 00 00 00 04 00 00 04 00 04 00 00 00 00     ................
    3723:	00 00 04 00 04 00 00 04 00 04 00 00 04 00 00 00     ................
	...
    373b:	00 00 25 26 00 00 00 00 04 00 00 00 04 00 04 04     ..%&............
    374b:	04 04 00 04 00 00 04 00 00 04 00 00 00 00 04 04     ................
    375b:	00 00 00 00 04 00 04 00 00 00 04 04 04 04 00 00     ................
    376b:	04 00 00 04 00 00 00 00 04 00 00 04 00 04 00 00     ................
    377b:	00 00 04 04 04 00 04 00 00 04 00 04 00 00 04 00     ................
	...
    379b:	00 00 04 00 00 00 04 00 04 00 00 00 00 04 00 00     ................
    37ab:	04 00 00 04 00 00 00 00 00 00 04 00 00 00 04 00     ................
    37bb:	00 04 00 00 04 00 00 00 00 00 04 00 00 04 00 00     ................
    37cb:	00 00 04 00 00 04 00 04 00 00 00 04 00 00 04 00     ................
    37db:	04 00 00 04 00 04 00 00 04 00 00 00 00 00 00 00     ................
	...
    37f7:	04 00 00 00 04 00 00 04 04 00 00 04 04 00 04 04     ................
    3807:	00 04 00 00 00 04 03 04 00 00 00 00 04 00 00 00     ................
    3817:	03 00 00 04 04 00 00 00 00 03 00 04 00 00 00 00     ................
    3827:	00 04 04 00 00 04 04 04 00 00 04 04 04 00 04 00     ................
    3837:	00 04 00 00 04 04 04 00 00 00 00 00 00 00 00 00     ................
	...
    3907:	15 16 00 00 1f 21 00 00 00 00 00 00 00 00 00 00     .....!..........
    3917:	00 1f 21 00 00 15 16 00 00 00 00 00 00 00 00 00     ..!.............
	...
    392f:	00 15 16 00 00 00 00 00 00 00 00 00 00 15 16 00     ................
    393f:	00 00 00 00 00 00 1f 21 00 00 00 00 00 00 00 00     .......!........
    394f:	00 00 00 00 1f 21 00 00 00 00 00 00 19 1a 00 00     .....!..........
    395f:	00 00 17 18 00 00 20 22 00 00 00 00 00 00 00 00     ...... "........
    396f:	00 00 00 20 22 00 00 17 18 00 00 00 00 00 00 00     ... "...........
	...
    3987:	00 00 00 17 18 00 00 00 00 00 00 00 00 00 00 17     ................
    3997:	18 00 00 00 00 00 00 00 20 22 00 00 00 00 00 00     ........ "......
    39a7:	29 29 29 29 00 00 20 22 00 00 00 00 00 00 1b 1c     )))).. "........
    39b7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39c7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    39d7:	05 00 06 01 01 01 01 01 01 01 05 00 06 01 01 01     ................
    39e7:	01 01 01 05 00 06 05 00 06 01 01 01 01 01 01 01     ................
    39f7:	01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01     ................
    3a07:	01 01 01 01 01 01 01 01 01 01 00 00 00 00 00 00     ................
	...

00003a6b <midisong>:
    3a6b:	00 c0 00 00 b0 07 72 00 07 7c 00 90 24 6e 14 24     ......r..|..$n.$
    3a7b:	6e 0b 24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3a8b:	0a 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0b     .)n.-n.0n.$n.$n.
    3a9b:	24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a 29     $n.(n.+n.)n.)n.)
    3aab:	6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e     n.-n.0n.$n.$n.$n
    3abb:	15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e 15     .(n.+n.)n.)n.)n.
    3acb:	2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d     -n.0n.)n.)n.)n.-
    3adb:	6e 0b 30 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3aeb:	0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00     .0n.$n.$n.$n.4n.
    3afb:	28 6e 0a 3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c     (n.;n.+n.<n.)n.<
    3b0b:	6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b 30 6e     n.)n.)n.4n.-n.0n
    3b1b:	15 24 6e 15 24 6e 0a 24 6e 15 34 6e 00 28 6e 0a     .$n.$n.$n.4n.(n.
    3b2b:	3b 6e 00 2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     ;n.+n.<n.)n.<n.)
    3b3b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0b 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3b4b:	14 24 6e 0b 24 6e 15 34 6e 00 28 6e 0a 3b 6e 00     .$n.$n.4n.(n.;n.
    3b5b:	2b 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29 6e 0a 29     +n.<n.)n.<n.)n.)
    3b6b:	6e 15 34 6e 00 2d 6e 0a 30 6e 15 3c 6e 00 29 6e     n.4n.-n.0n.<n.)n
    3b7b:	15 3c 6e 00 29 6e 0b 29 6e 14 34 6e 00 2d 6e 0b     .<n.)n.)n.4n.-n.
    3b8b:	32 6e 00 30 6e 15 3c 6e 00 29 6e 15 3c 6e 00 29     2n.0n.<n.)n.<n.)
    3b9b:	6e 0a 29 6e 15 34 6e 00 2d 6e 0a 30 6e 15 24 6e     n.)n.4n.-n.0n.$n
    3bab:	15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e 15 29 6e 14     .$n.$n.(n.+n.)n.
    3bbb:	29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24     )n.)n.-n.0n.$n.$
    3bcb:	6e 0a 24 6e 15 28 6e 0b 2b 6e 14 29 6e 15 29 6e     n.$n.(n.+n.)n.)n
    3bdb:	0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a     .)n.-n.0n.$n.$n.
    3beb:	24 6e 15 28 6e 0a 2b 6e 15 29 6e 15 29 6e 0b 29     $n.(n.+n.)n.)n.)
    3bfb:	6e 14 2d 6e 0b 30 6e 15 29 6e 15 29 6e 0a 29 6e     n.-n.0n.)n.)n.)n
    3c0b:	15 2d 6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15     .-n.0n.)n.)n.)n.
    3c1b:	2d 6e 0b 30 6e 15 24 6e 14 24 6e 0b 24 6e 15 28     -n.0n.$n.$n.$n.(
    3c2b:	6e 0a 2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.+n.)n.)n.)n.-n
    3c3b:	0a 30 6e 15 24 6e 15 24 6e 0b 24 6e 14 28 6e 0b     .0n.$n.$n.$n.(n.
    3c4b:	2b 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0a 30     +n.)n.)n.)n.-n.0
    3c5b:	6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0b 2b 6e     n.$n.$n.$n.(n.+n
    3c6b:	15 29 6e 14 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15     .)n.)n.)n.-n.0n.
    3c7b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 29     )n.)n.)n.-n.0n.)
    3c8b:	6e 15 29 6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e     n.)n.)n.-n.0n.$n
    3c9b:	15 24 6e 0a 24 6e 15 24 6e 0a 24 6e 0b 24 6e 0a     .$n.$n.$n.$n.$n.
    3cab:	24 6e 15 24 6e 0b 24 6e 34 24 6e 15 24 6e 0a 24     $n.$n.$n4$n.$n.$
    3cbb:	6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29 6e     n.(n.(n.(n.+n.)n
    3ccb:	0a 26 6e 15 28 6e 0b 26 6e 15 24 6e 14 24 6e 0b     .&n.(n.&n.$n.$n.
    3cdb:	24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3ceb:	6e 0a 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3cfb:	0b 24 6e 14 28 6e 0b 28 6e 0a 28 6e 0b 2b 6e 15     .$n.(n.(n.(n.+n.
    3d0b:	29 6e 0a 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3d1b:	6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14 29 6e     n.&n.(n.&n.+n.)n
    3d2b:	0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e 0a     .&n.(n.&n.$n.$n.
    3d3b:	24 6e 15 28 6e 0b 28 6e 0a 28 6e 0a 2b 6e 15 29     $n.(n.(n.(n.+n.)
    3d4b:	6e 0b 26 6e 15 28 6e 0a 26 6e 15 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3d5b:	0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e 15     .$n.(n.(n.(n.+n.
    3d6b:	29 6e 0b 26 6e 14 28 6e 0b 26 6e 15 24 6e 15 24     )n.&n.(n.&n.$n.$
    3d7b:	6e 0a 24 6e 15 28 6e 0a 28 6e 0b 28 6e 0a 2b 6e     n.$n.(n.(n.(n.+n
    3d8b:	15 29 6e 0a 26 6e 15 28 6e 0b 26 6e 15 2b 6e 14     .)n.&n.(n.&n.+n.
    3d9b:	29 6e 0b 26 6e 15 28 6e 0a 26 6e 15 2b 6e 15 29     )n.&n.(n.&n.+n.)
    3dab:	6e 0a 26 6e 15 28 6e 0b 26 6e 14 24 6e 15 24 6e     n.&n.(n.&n.$n.$n
    3dbb:	0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e 15 29 6e 0a     .$n.(n.+n.)n.)n.
    3dcb:	29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24     )n.-n.0n.$n.$n.$
    3ddb:	6e 15 28 6e 0b 2b 6e 15 29 6e 14 29 6e 0b 29 6e     n.(n.+n.)n.)n.)n
    3deb:	15 2d 6e 0a 30 6e 15 24 6e 15 24 6e 0a 24 6e 15     .-n.0n.$n.$n.$n.
    3dfb:	28 6e 0b 2b 6e 14 29 6e 15 29 6e 0b 29 6e 15 2d     (n.+n.)n.)n.)n.-
    3e0b:	6e 0a 30 6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e     n.0n.)n.)n.)n.-n
    3e1b:	0a 30 6e 15 29 6e 15 29 6e 0b 29 6e 14 2d 6e 0b     .0n.)n.)n.)n.-n.
    3e2b:	30 6e 15 24 6e 15 24 6e 0a 24 6e 15 28 6e 0a 2b     0n.$n.$n.$n.(n.+
    3e3b:	6e 15 29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e     n.)n.)n.)n.-n.0n
    3e4b:	15 24 6e 14 24 6e 0b 24 6e 15 28 6e 0a 2b 6e 15     .$n.$n.$n.(n.+n.
    3e5b:	29 6e 15 29 6e 0a 29 6e 15 2d 6e 0b 30 6e 14 24     )n.)n.)n.-n.0n.$
    3e6b:	6e 15 24 6e 0b 24 6e 14 28 6e 0b 2b 6e 15 29 6e     n.$n.$n.(n.+n.)n
    3e7b:	15 29 6e 0a 29 6e 15 2d 6e 0a 30 6e 15 29 6e 15     .)n.)n.-n.0n.)n.
    3e8b:	29 6e 0a 29 6e 15 2d 6e 0b 30 6e 15 29 6e 14 29     )n.)n.-n.0n.)n.)
    3e9b:	6e 0b 29 6e 15 2d 6e 0a 30 6e 15 24 6e 15 24 6e     n.)n.-n.0n.$n.$n
    3eab:	0a 24 6e 15 24 6e 0b 24 6e 0a 24 6e 0a 24 6e 15     .$n.$n.$n.$n.$n.
    3ebb:	24 6e 0b 24 6e 0a ff 2f 00                          $n.$n../.

00003ec4 <patches>:
    3ec4:	00 00 00 20 40 00 00 00 00 00 00 00 20 40 00 00     ... @....... @..
    3ed4:	00 00 00 00 00 20 40 00 00 00 00 00 00 00 20 40     ..... @....... @
    3ee4:	00 00 00 00 00 00 00 d2 3f 00 00 00 00 00 00 00     ........?.......
    3ef4:	c4 3f 00 00 00 00 00 00 00 aa 3f 00 00 00 00 00     .?........?.....
    3f04:	00 00 96 3f 00 00 00 00 00 00 00 7f 3f 00 00 00     ...?........?...
    3f14:	00 00 00 00 62 3f 00 00 00 00 00 00 00 27 3f 00     ....b?.......'?.
    3f24:	00 00 00                                            ...

00003f27 <fxlevelcompleted>:
    3f27:	00 02 03 00 07 80 00 08 4c 02 04 0a 02 04 08 02     ........L.......
    3f37:	04 06 02 04 04 02 04 02 00 08 38 02 03 05 02 04     ..........8.....
    3f47:	02 02 03 05 02 03 05 02 04 02 02 03 05 00 00 f8     ................
    3f57:	04 03 05 04 04 05 04 03 05 00 ff                    ...........

00003f62 <fxlivelost>:
    3f62:	00 02 01 00 07 80 00 00 fd 00 08 2d 05 04 05 02     ...........-....
    3f72:	04 01 05 04 05 02 04 02 0a 05 00 00 ff              .............

00003f7f <fxenemy>:
    3f7f:	00 07 80 00 02 02 00 08 40 03 03 04 02 03 04 02     ........@.......
    3f8f:	04 08 02 05 00 00 ff                                .......

00003f96 <fxpoint>:
    3f96:	00 02 02 00 07 90 02 03 06 02 03 02 01 03 01 00     ................
    3fa6:	00 f6 00 ff                                         ....

00003faa <fxgameover1>:
    3faa:	00 02 04 00 00 fc 03 08 5a 03 08 60 03 08 5a 03     ........Z..`..Z.
    3fba:	08 60 03 08 5a 01 05 00 00 ff                       .`..Z.....

00003fc4 <fxhit>:
    3fc4:	00 02 06 00 07 40 00 08 28 00 00 f0 00 ff           .....@..(.....

00003fd2 <fxjump>:
    3fd2:	00 02 06 00 08 32 00 07 70 00 00 fc 04 03 01 04     .....2..p.......
    3fe2:	03 01 03 03 01 03 03 01 03 03 01 03 03 01 03 03     ................
    3ff2:	01 03 03 01 03 03 01 03 03 01 01 03 01 01 03 01     ................
    4002:	01 05 00 00 ff                                      .....

00004007 <patch03>:
    4007:	00 01 01 00 07 90 00 00 e2 08 05 00 00 ff           ..............

00004015 <patch02>:
    4015:	00 02 02 01 06 00 01 00 e0 00 ff                    ...........

00004020 <patch01>:
    4020:	00 02 06 00 07 40 00 00 f6 00 ff                    .....@.....

0000402b <patch00>:
    402b:	00 02 04 00 00 dd 00 ff                             ........

00004033 <uMSprites>:
    4033:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    4043:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    4053:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 f8 d8 d8 d8     ....A......A....
    4063:	fe fe fe 41 f8 d8 d8 b7 fe fe fe 41 f8 d8 b7 ff     ...A.......A....
    4073:	41 41 41 fe fe fe fe fe 41 f8 f8 41 fe fe fe fe     AAA.....A..A....
    4083:	d8 41 f8 f8 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4093:	d8 d8 41 f8 f8 d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    40a3:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    40b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    40c3:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    40d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    40e3:	fe fe fe 41 f8 d8 d8 d8 fe fe fe 41 f8 d8 d8 b7     ...A.......A....
    40f3:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4103:	41 f8 f8 41 fe fe fe fe d8 41 f8 f8 41 fe fe fe     A..A.....A..A...
    4113:	d8 d8 41 41 41 41 fe fe d8 d8 41 f8 f8 d8 41 fe     ..AAAA....A...A.
    4123:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    4133:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    4143:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    4153:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 f8 d8 d8     .....A......A...
    4163:	fe fe fe fe 41 f8 d8 d8 fe fe fe 41 41 f8 d8 b7     ....A......AA...
    4173:	fe 41 41 41 fe fe fe fe 41 41 f8 f8 41 fe fe fe     .AAA....AA..A...
    4183:	d8 d8 41 f8 f8 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4193:	d8 d8 d8 41 f8 f8 d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    41a3:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    41b3:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 f8     .AA...AAA..AAAA.
    41c3:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    41d3:	41 d8 41 f8 d8 d8 d8 d8 41 d8 41 f8 d8 d8 d8 d8     A.A.....A.A.....
    41e3:	41 d8 41 f8 d8 b7 ff ff 41 f8 41 d8 b7 ff ff 41     A.A.....A.A....A
    41f3:	41 fe fe fe fe fe fe fe f8 41 fe fe fe 41 41 fe     A........A...AA.
    4203:	f8 f8 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4213:	41 f8 f8 d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    4223:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 f8 41 fe     ....A..AA.A.A.A.
    4233:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4243:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    4253:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    4263:	fe fe fe fe 41 f8 d8 d8 fe fe fe fe 41 f8 d8 d8     ....A.......A...
    4273:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4283:	41 41 f8 f8 41 fe fe fe d8 d8 41 f8 f8 41 fe fe     AA..A.....A..A..
    4293:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 f8 f8 d8 41     ...AAAA....A...A
    42a3:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    42b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41 41     ..............AA
    42c3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 d8 d8 d8     .....A......A...
    42d3:	fe fe fe fe 41 d8 d8 d8 fe fe fe 41 1f d8 d8 d8     ....A......A....
    42e3:	fe fe fe 41 1f d8 d8 b7 fe fe fe 41 1f d8 b7 ff     ...A.......A....
    42f3:	41 41 41 fe fe fe fe fe 41 1f 1f 41 fe fe fe fe     AAA.....A..A....
    4303:	d8 41 1f 1f 41 fe fe fe d8 d8 41 41 41 41 fe fe     .A..A.....AAAA..
    4313:	d8 d8 41 1f 1f d8 41 fe d8 d8 d8 41 41 d8 41 fe     ..A...A....AA.A.
    4323:	ff ff ff d8 d8 ff 41 fe ff 41 41 b7 41 ff 41 fe     ......A..AA.A.A.
    4333:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4343:	fe fe fe fe fe fe 41 41 fe fe fe fe fe 41 d8 d8     ......AA.....A..
    4353:	fe fe fe fe 41 d8 d8 d8 fe fe fe fe 41 d8 d8 d8     ....A.......A...
    4363:	fe fe fe 41 1f d8 d8 d8 fe fe fe 41 1f d8 d8 b7     ...A.......A....
    4373:	fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe fe     ........AAA.....
    4383:	41 1f 1f 41 fe fe fe fe d8 41 1f 1f 41 fe fe fe     A..A.....A..A...
    4393:	d8 d8 41 41 41 41 fe fe d8 d8 41 1f 1f d8 41 fe     ..AAAA....A...A.
    43a3:	d8 d8 d8 41 41 d8 41 fe ff ff ff d8 d8 ff 41 fe     ...AA.A.......A.
    43b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe 41     ...............A
    43c3:	fe fe fe fe fe fe 41 d8 fe fe fe fe fe 41 d8 d8     ......A......A..
    43d3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe 41 1f d8 d8     .....A......A...
    43e3:	fe fe fe fe 41 1f d8 d8 fe fe fe 41 41 1f d8 b7     ....A......AA...
    43f3:	fe 41 41 41 fe fe fe fe 41 41 1f 1f 41 fe fe fe     .AAA....AA..A...
    4403:	d8 d8 41 1f 1f 41 fe fe d8 d8 d8 41 41 41 41 fe     ..A..A.....AAAA.
    4413:	d8 d8 d8 41 1f 1f d8 41 d8 d8 d8 d8 41 41 d8 41     ...A...A....AA.A
    4423:	b7 ff ff ff d8 d8 ff 41 ff ff 41 41 b7 41 ff 41     .......A..AA.A.A
    4433:	fe 41 41 fe fe fe 41 41 41 d8 d8 41 41 41 41 1f     .AA...AAA..AAAA.
    4443:	41 d8 d8 41 d8 d8 d8 41 41 d8 41 41 d8 d8 d8 d8     A..A...AA.AA....
    4453:	41 d8 41 1f d8 d8 d8 d8 41 d8 41 1f d8 d8 d8 d8     A.A.....A.A.....
    4463:	41 d8 41 1f d8 b7 ff ff 41 1f 41 d8 b7 ff ff 41     A.A.....A.A....A
    4473:	41 fe fe fe fe fe fe fe 1f 41 fe fe fe 41 41 fe     A........A...AA.
    4483:	1f 1f 41 fe 41 d8 d8 41 41 41 41 41 d8 d8 d8 41     ..A.A..AAAAA...A
    4493:	41 1f 1f d8 41 d8 d8 41 d8 41 41 d8 41 d8 d8 41     A...A..A.AA.A..A
    44a3:	ff d8 d8 ff 41 d8 d8 41 41 b7 41 ff 41 1f 41 fe     ....A..AA.A.A.A.
    44b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    44c3:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe 41 d8     .......A......A.
    44d3:	fe fe fe fe fe 41 d8 d8 fe fe fe fe fe 41 d8 d8     .....A.......A..
    44e3:	fe fe fe fe 41 1f d8 d8 fe fe fe fe 41 1f d8 d8     ....A.......A...
    44f3:	fe fe fe fe fe fe fe fe fe 41 41 41 fe fe fe fe     .........AAA....
    4503:	41 41 1f 1f 41 fe fe fe d8 d8 41 1f 1f 41 fe fe     AA..A.....A..A..
    4513:	d8 d8 d8 41 41 41 41 fe d8 d8 d8 41 1f 1f d8 41     ...AAAA....A...A
    4523:	d8 d8 d8 d8 41 41 d8 41 b7 ff ff ff d8 d8 ff 41     ....AA.A.......A
    4533:	fe fe fe 03 fe fe fe fe fe fe fe 03 03 fe fe fe     ................
    4543:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    4553:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff ff 03 03     ................
    4563:	fe fe fe 03 ff 00 03 03 fe fe fe 03 ff ff 27 27     ..............''
    4573:	fe fe fe 03 fe fe fe fe fe fe 03 03 fe fe fe fe     ................
    4583:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4593:	1c 1c 1c 1c fe fe fe fe 03 ff ff 03 fe fe fe fe     ................
    45a3:	03 00 ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    45b3:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    45c3:	fe fe fe 03 03 03 fe fe fe fe fe 1c 03 03 03 03     ................
    45d3:	fe fe fe 1c 1c 1c 1c 03 fe fe fe 03 ff 00 03 03     ................
    45e3:	fe fe fe 03 ff ff 03 03 fe fe fe 03 ff ff 27 27     ..............''
    45f3:	fe fe fe fe fe fe fe fe fe fe 03 03 03 fe fe fe     ................
    4603:	fe 03 03 03 fe fe fe fe 03 03 03 1c fe fe fe fe     ................
    4613:	1c 1c 1c 1c fe fe fe fe 03 00 ff 03 fe fe fe fe     ................
    4623:	03 ff ff 03 fe fe fe fe 27 ff ff 03 fe fe fe fe     ........'.......
    4633:	fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00 fe     ................
    4643:	00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00 fe     ................
    4653:	00 ff 00 00 00 ff 00 fe 00 ff ff 00 ff ff 00 18     ................
    4663:	00 ff ff ff ff ff 00 39 fe 00 00 00 00 00 39 39     .......9......99
    4673:	fe fe 00 00 00 00 00 fe fe 00 ff 00 00 00 ff 00     ................
    4683:	fe 00 ff ff ff ff ff 00 fe 00 ff ff 00 ff ff 00     ................
    4693:	fe 00 ff 00 00 00 ff 00 18 00 ff ff 00 ff ff 00     ................
    46a3:	39 00 ff ff ff ff ff 00 39 39 00 00 00 00 00 fe     9.......99......
    46b3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    46c3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    46d3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    46e3:	fe 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00 fe     ................
    46f3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4703:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4713:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4723:	fe 00 00 00 00 00 00 fe fe 00 ff ff ff ff ff 00     ................
    4733:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    4743:	fe 41 41 f8 f8 41 d8 b7 41 d8 f8 f8 f8 f8 41 b7     .AA..A..A.....A.
    4753:	41 d8 d8 f8 f8 f8 f8 41 41 d8 d8 f8 41 f8 f8 f8     A......AA...A...
    4763:	41 d8 41 41 41 f8 f8 f8 41 d8 d8 41 41 f8 f8 f8     A.AAA...A..AA...
    4773:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4783:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 f8 f8 41     AAAA.AA.....A..A
    4793:	41 41 41 41 f8 f8 d8 41 f8 f8 f8 f8 41 f8 d8 41     AAAA...A....A..A
    47a3:	f8 f8 f8 f8 41 41 d8 41 f8 f8 f8 f8 41 d8 d8 41     ....AA.A....A..A
    47b3:	fe 41 41 41 f8 d8 b7 ff 41 41 41 f8 41 d8 b7 ff     .AAA....AAA.A...
    47c3:	41 d8 41 f8 41 d8 b7 b7 41 d8 d8 41 f8 41 d8 b7     A.A.A...A..A.A..
    47d3:	41 d8 41 41 f8 f8 41 b7 41 d8 41 fe 41 f8 f8 41     A.AA..A.A.A.A..A
    47e3:	41 d8 41 fe 41 d8 f8 f8 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    47f3:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4803:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4813:	b7 b7 b7 b7 41 f8 41 fe 41 41 41 41 f8 f8 d8 41     ....A.A.AAAA...A
    4823:	f8 f8 f8 41 f8 d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4833:	fe fe 41 f8 f8 41 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..A..A...A...A..
    4843:	41 f8 f8 f8 f8 f8 41 d8 41 f8 f8 f8 41 f8 f8 41     A.....A.A...A..A
    4853:	fe 41 d8 d8 d8 41 f8 f8 fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4863:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4873:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4883:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4893:	41 41 41 41 41 41 fe fe f8 f8 f8 f8 41 d8 41 fe     AAAAAA......A.A.
    48a3:	41 f8 f8 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    48b3:	41 f8 41 41 b7 ff ff 41 41 f8 f8 41 b7 b7 ff ff     A.AA...AA..A....
    48c3:	41 f8 f8 f8 d8 b7 b7 41 fe 41 f8 f8 41 b7 41 41     A......A.A..A.AA
    48d3:	fe 41 f8 f8 f8 41 b7 41 fe fe 41 f8 f8 f8 f8 f8     .A...A.A..A.....
    48e3:	fe fe 41 f8 f8 f8 f8 f8 fe fe 41 f8 f8 f8 f8 f8     ..A.......A.....
    48f3:	41 b7 41 ff 41 f8 41 fe ff b7 ff b7 41 f8 41 fe     A.A.A.A.....A.A.
    4903:	41 41 b7 41 f8 41 fe fe 41 41 41 f8 41 fe fe fe     AA.A.A..AAA.A...
    4913:	41 41 f8 f8 41 fe fe fe f8 f8 f8 41 fe fe fe fe     AA..A......A....
    4923:	f8 f8 f8 41 fe fe fe fe f8 f8 f8 41 41 41 fe fe     ...A.......AAA..
    4933:	fe fe 41 41 41 f8 d8 b7 fe 41 f8 f8 f8 41 d8 b7     ..AAA....A...A..
    4943:	41 d8 d8 f8 f8 f8 41 b7 41 d8 d8 f8 f8 41 f8 f8     A.....A.A....A..
    4953:	41 d8 41 41 41 f8 f8 f8 41 41 fe fe 41 f8 f8 f8     A.AAA...AA..A...
    4963:	fe fe fe fe 41 f8 41 d8 fe fe 41 41 41 d8 f8 41     ....A.A...AAA..A
    4973:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4983:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4993:	f8 d8 b7 b7 b7 41 41 41 f8 f8 41 41 41 d8 d8 41     .....AAA..AAA..A
    49a3:	f8 f8 d8 d8 d8 d8 d8 41 d8 f8 d8 d8 d8 d8 d8 41     .......A.......A
    49b3:	fe fe fe fe 41 d8 b7 ff fe fe fe 41 41 d8 b7 b7     ....A......AA...
    49c3:	fe 41 41 1f 1f 41 d8 b7 41 d8 1f 1f 1f 1f 41 b7     .AA..A..A.....A.
    49d3:	41 d8 d8 1f 1f 1f 1f 41 41 d8 d8 1f 41 1f 1f 1f     A......AA...A...
    49e3:	41 d8 41 41 41 1f 1f 1f 41 d8 d8 41 41 1f 1f 1f     A.AAA...A..AA...
    49f3:	ff 41 41 b7 41 ff 41 fe ff ff ff b7 ff b7 41 fe     .AA.A.A.......A.
    4a03:	41 41 41 41 b7 41 41 fe b7 b7 b7 b7 41 1f 1f 41     AAAA.AA.....A..A
    4a13:	41 41 41 41 1f 1f d8 41 1f 1f 1f 1f 41 1f d8 41     AAAA...A....A..A
    4a23:	1f 1f 1f 1f 41 41 d8 41 1f 1f 1f 1f 41 d8 d8 41     ....AA.A....A..A
    4a33:	fe 41 41 41 1f d8 b7 ff 41 41 41 1f 41 d8 b7 ff     .AAA....AAA.A...
    4a43:	41 d8 41 1f 41 d8 b7 b7 41 d8 d8 41 1f 41 d8 b7     A.A.A...A..A.A..
    4a53:	41 d8 41 41 1f 1f 41 b7 41 d8 41 fe 41 1f 1f 41     A.AA..A.A.A.A..A
    4a63:	41 d8 41 fe 41 d8 1f 1f 41 41 41 fe 41 d8 d8 d8     A.A.A...AAA.A...
    4a73:	ff 41 41 b7 41 ff 41 fe ff 41 41 b7 41 ff 41 fe     .AA.A.A..AA.A.A.
    4a83:	ff ff ff b7 ff b7 41 fe 41 41 41 41 b7 41 fe fe     ......A.AAAA.A..
    4a93:	b7 b7 b7 b7 41 1f 41 fe 41 41 41 41 1f 1f d8 41     ....A.A.AAAA...A
    4aa3:	1f 1f 1f 41 1f d8 d8 41 d8 d8 d8 41 41 d8 d8 41     ...A...A...AA..A
    4ab3:	fe fe 41 1f 1f 41 d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..A..A...A...A..
    4ac3:	41 1f 1f 1f 1f 1f 41 d8 41 1f 1f 1f 41 1f 1f 41     A.....A.A...A..A
    4ad3:	fe 41 d8 d8 d8 41 1f 1f fe 41 d8 d8 d8 d8 41 41     .A...A...A....AA
    4ae3:	fe fe 41 d8 d8 41 d8 d8 fe fe fe 41 d8 d8 d8 d8     ..A..A.....A....
    4af3:	ff ff 41 41 b7 41 ff 41 b7 ff ff ff b7 ff b7 41     ..AA.A.A.......A
    4b03:	b7 41 41 41 41 b7 41 fe b7 b7 b7 b7 b7 41 fe fe     .AAAA.A......A..
    4b13:	41 41 41 41 41 41 fe fe 1f 1f 1f 1f 41 d8 41 fe     AAAAAA......A.A.
    4b23:	41 1f 1f 41 d8 d8 41 fe 41 d8 41 41 41 41 fe fe     A..A..A.A.AAAA..
    4b33:	41 1f 41 41 b7 ff ff 41 41 1f 1f 41 b7 b7 ff ff     A.AA...AA..A....
    4b43:	41 1f 1f 1f d8 b7 b7 41 fe 41 1f 1f 41 b7 41 41     A......A.A..A.AA
    4b53:	fe 41 1f 1f 1f 41 b7 41 fe fe 41 1f 1f 1f 1f 1f     .A...A.A..A.....
    4b63:	fe fe 41 1f 1f 1f 1f 1f fe fe 41 1f 1f 1f 1f 1f     ..A.......A.....
    4b73:	41 b7 41 ff 41 1f 41 fe ff b7 ff b7 41 1f 41 fe     A.A.A.A.....A.A.
    4b83:	41 41 b7 41 1f 41 fe fe 41 41 41 1f 41 fe fe fe     AA.A.A..AAA.A...
    4b93:	41 41 1f 1f 41 fe fe fe 1f 1f 1f 41 fe fe fe fe     AA..A......A....
    4ba3:	1f 1f 1f 41 fe fe fe fe 1f 1f 1f 41 41 41 fe fe     ...A.......AAA..
    4bb3:	fe fe 41 41 41 1f d8 b7 fe 41 1f 1f 1f 41 d8 b7     ..AAA....A...A..
    4bc3:	41 d8 d8 1f 1f 1f 41 b7 41 d8 d8 1f 1f 41 1f 1f     A.....A.A....A..
    4bd3:	41 d8 41 41 41 1f 1f 1f 41 41 fe fe 41 1f 1f 1f     A.AAA...AA..A...
    4be3:	fe fe fe fe 41 1f 41 d8 fe fe 41 41 41 d8 1f 41     ....A.A...AAA..A
    4bf3:	ff ff 41 41 b7 41 ff 41 ff ff 41 41 b7 41 ff 41     ..AA.A.A..AA.A.A
    4c03:	b7 ff ff ff b7 ff b7 41 b7 41 41 41 41 b7 41 fe     .......A.AAAA.A.
    4c13:	1f d8 b7 b7 b7 41 41 41 1f 1f 41 41 41 d8 d8 41     .....AAA..AAA..A
    4c23:	1f 1f d8 d8 d8 d8 d8 41 d8 1f d8 d8 d8 d8 d8 41     .......A.......A
    4c33:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4c43:	fe fe 1c 1c 1c 1c 03 03 fe fe 1c 1c 1c 1c 03 03     ................
    4c53:	fe fe 1c 1c 1c 03 03 ff fe fe 1c 1c 03 03 ff ff     ................
    4c63:	fe fe 1c fe ff ff ff ff fe fe fe fe fe 27 27 fe     .............''.
    4c73:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4c83:	03 1c 1c 1c 1c fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4c93:	03 03 1c 1c 1c fe fe fe ff 03 03 1c 1c fe fe fe     ................
    4ca3:	27 27 ff fe 1c fe fe fe fe fe fe fe fe fe fe fe     ''..............
    4cb3:	fe fe fe 1c 1c 03 03 27 fe fe 1c 1c 1c 1c 03 03     .......'........
    4cc3:	fe 1c 1c 1c 1c 03 03 03 1c 1c 1c 1c 03 03 03 03     ................
    4cd3:	1c 1c fe 03 03 03 03 ff fe fe fe fe 03 03 ff ff     ................
    4ce3:	fe fe fe fe ff ff ff ff fe fe fe fe 27 27 fe fe     ............''..
    4cf3:	03 03 1c 1c fe fe fe fe 03 1c 1c 1c 1c fe fe fe     ................
    4d03:	03 03 1c 1c 1c 1c fe fe 03 03 03 1c 1c 1c 1c fe     ................
    4d13:	03 03 03 03 fe 1c 1c fe ff 03 03 fe fe fe fe fe     ................
    4d23:	ff ff ff fe fe fe fe fe fe 27 27 fe fe fe fe fe     .........''.....
    4d33:	fe fe 18 39 39 39 39 39 fe fe 18 39 18 18 18 18     ...99999...9....
    4d43:	fe 18 39 18 18 00 00 00 fe 39 18 18 00 18 18 18     ..9......9......
    4d53:	fe 39 18 00 18 18 18 18 39 18 18 18 18 18 18 18     .9......9.......
    4d63:	18 10 10 fe 10 18 10 fe 18 10 fe fe fe 10 fe fe     ................
    4d73:	39 39 39 39 39 18 fe fe 18 18 18 18 39 18 fe fe     99999.......9...
    4d83:	00 00 00 18 18 39 18 fe 18 18 18 00 18 18 39 fe     .....9........9.
    4d93:	18 18 18 18 00 18 39 fe 18 18 18 18 18 18 18 39     ......9........9
    4da3:	10 18 10 fe 10 18 18 39 fe 10 fe fe fe 10 10 18     .......9........
    4db3:	00 ff 00 00 00 ff 00 18 00 ff ff ff ff ff 00 39     ...............9
    4dc3:	fe 00 00 00 00 00 39 39 fe fe 18 39 39 39 39 39     ......99...99999
    4dd3:	fe fe 18 39 18 18 18 18 fe 18 39 18 18 00 00 00     ...9......9.....
    4de3:	18 39 00 00 00 18 18 10 10 10 18 10 10 10 18 18     .9..............
    4df3:	18 00 ff 00 00 00 ff 00 39 00 ff ff ff ff ff 00     ........9.......
    4e03:	39 39 00 00 00 00 00 fe 39 39 39 39 39 18 fe fe     99......99999...
    4e13:	18 18 18 18 39 18 fe fe 00 00 00 18 18 39 18 fe     ....9........9..
    4e23:	10 18 18 00 00 00 39 18 18 18 10 10 10 18 10 10     ......9.........
    4e33:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    4e43:	fe fe fe 41 f8 f8 d8 d8 fe fe 41 d8 d8 f8 f8 f8     ...A......A.....
    4e53:	fe 41 41 d8 d8 d8 f8 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    4e63:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    4e73:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    4e83:	d8 d8 f8 f8 f8 41 fe fe 41 f8 f8 f8 d8 41 fe fe     .....A..A....A..
    4e93:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    4ea3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    4eb3:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 f8 41 41 d8     ..AAAA...A.A.AA.
    4ec3:	41 d8 d8 f8 f8 f8 41 41 41 d8 41 d8 f8 f8 41 fe     A.....AAA.A...A.
    4ed3:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    4ee3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    4ef3:	d8 d8 d8 41 fe 41 41 fe f8 f8 f8 41 fe fe fe fe     ...A.AA....A....
    4f03:	41 f8 d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    4f13:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    4f23:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    4f33:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 f8     ....A..A.....AA.
    4f43:	fe fe fe fe 41 41 f8 f8 fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    4f53:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    4f63:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    4f73:	d8 41 f8 41 fe fe fe fe f8 41 f8 41 fe fe fe fe     .A.A.....A.A....
    4f83:	f8 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    4f93:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    4fa3:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    4fb3:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    4fc3:	fe fe 41 f8 f8 d8 d8 d8 fe fe 41 f8 f8 f8 f8 41     ..A.......A....A
    4fd3:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    4fe3:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    4ff3:	d8 d8 d8 f8 f8 f8 41 fe d8 d8 f8 f8 f8 d8 41 fe     ......A.......A.
    5003:	d8 f8 f8 f8 d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    5013:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    5023:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5033:	fe 41 41 f8 d8 d8 d8 d8 fe 41 d8 f8 f8 d8 d8 d8     .AA......A......
    5043:	41 d8 d8 d8 f8 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    5053:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    5063:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    5073:	41 41 41 41 41 41 41 41 d8 f8 f8 f8 41 fe fe fe     AAAAAAAA....A...
    5083:	f8 f8 f8 d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5093:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    50a3:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    50b3:	41 d8 d8 41 41 d8 d8 d8 41 41 41 09 41 d8 d8 d8     A..AA...AAA.A...
    50c3:	fe fe fe 41 1f 1f d8 d8 fe fe 41 d8 d8 1f 1f 1f     ...A......A.....
    50d3:	fe 41 41 d8 d8 d8 1f 41 41 d8 d8 d8 d8 d8 41 ff     .AA....AA.....A.
    50e3:	41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     AAAAAAA.........
    50f3:	d8 d8 d8 d8 41 d8 d8 41 d8 d8 d8 d8 41 41 41 41     ....A..A....AAAA
    5103:	d8 d8 1f 1f 1f 41 fe fe 41 1f 1f 1f d8 41 fe fe     .....A..A....A..
    5113:	41 41 d8 d8 d8 41 fe fe 41 d8 d8 d8 d8 d8 41 41     AA...A..A.....AA
    5123:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    5133:	fe fe 41 41 41 41 d8 d8 fe 41 d8 41 1f 41 41 d8     ..AAAA...A.A.AA.
    5143:	41 d8 d8 1f 1f 1f 41 41 41 d8 41 d8 1f 1f 41 fe     A.....AAA.A...A.
    5153:	fe 41 41 41 09 41 fe fe fe fe fe fe ff fe fe fe     .AAA.A..........
    5163:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5173:	d8 d8 d8 41 fe 41 41 fe 1f 1f 1f 41 fe fe fe fe     ...A.AA....A....
    5183:	41 1f d8 d8 41 fe fe fe 41 d8 d8 d8 41 fe fe fe     A...A...A...A...
    5193:	41 d8 d8 41 41 41 fe fe fe 41 d8 d8 d8 d8 41 fe     A..AAA...A....A.
    51a3:	fe 41 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     .AAAAAA.........
    51b3:	fe fe fe fe 41 d8 d8 41 fe fe fe fe fe 41 41 1f     ....A..A.....AA.
    51c3:	fe fe fe fe 41 41 1f 1f fe fe fe 41 d8 d8 d8 d8     ....AA.....A....
    51d3:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 41 41     ..A.......A...AA
    51e3:	fe fe fe 41 d8 d8 d8 d8 fe fe fe fe fe fe fe fe     ...A............
    51f3:	d8 41 1f 41 fe fe fe fe 1f 41 1f 41 fe fe fe fe     .A.A.....A.A....
    5203:	1f 41 41 fe fe fe fe fe d8 41 fe fe fe fe fe fe     .AA......A......
    5213:	41 fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe     A.......A.......
    5223:	d8 41 fe fe fe fe fe fe fe fe fe fe fe fe fe fe     .A..............
    5233:	fe fe 41 d8 d8 d8 d8 d8 fe fe 41 d8 d8 d8 d8 d8     ..A.......A.....
    5243:	fe fe 41 1f 1f d8 d8 d8 fe fe 41 1f 1f 1f 1f 41     ..A.......A....A
    5253:	fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41 fe     ..A...A...AAAAA.
    5263:	fe fe 41 41 41 41 41 fe fe fe fe fe fe fe fe fe     ..AAAAA.........
    5273:	d8 d8 d8 1f 1f 1f 41 fe d8 d8 1f 1f 1f d8 41 fe     ......A.......A.
    5283:	d8 1f 1f 1f d8 d8 41 fe 41 41 41 d8 d8 d8 41 41     ......A.AAA...AA
    5293:	fe fe fe 41 d8 d8 d8 41 fe fe fe 41 41 41 41 41     ...A...A...AAAAA
    52a3:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    52b3:	fe 41 41 1f d8 d8 d8 d8 fe 41 d8 1f 1f d8 d8 d8     .AA......A......
    52c3:	41 d8 d8 d8 1f 41 41 41 41 d8 41 d8 41 fe fe fe     A....AAAA.A.A...
    52d3:	fe 41 41 41 fe fe fe fe fe fe fe fe fe fe fe 41     .AAA...........A
    52e3:	fe fe fe fe fe fe fe 41 fe fe fe fe fe fe fe fe     .......A........
    52f3:	41 41 41 41 41 41 41 41 d8 1f 1f 1f 41 fe fe fe     AAAAAAAA....A...
    5303:	1f 1f 1f d8 d8 41 fe fe 41 d8 d8 d8 d8 41 fe fe     .....A..A....A..
    5313:	41 d8 d8 d8 41 41 41 fe d8 d8 d8 d8 d8 d8 d8 41     A...AAA........A
    5323:	41 41 41 41 41 41 41 41 fe fe fe fe fe fe fe fe     AAAAAAAA........
    5333:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5343:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5353:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................
    5363:	fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe fe     ................

00005373 <blob1>:
    5373:	02 02 1a 1b 36 37                                   ....67

00005379 <blob0>:
    5379:	02 02 18 19 34 35                                   ....45

0000537f <owl1>:
    537f:	02 02 16 17 32 33                                   ....23

00005385 <owl0>:
    5385:	02 02 14 15 30 31                                   ....01

0000538b <man4>:
    538b:	02 03 12 13 2e 2f 4a 4b                             ...../JK

00005393 <man3>:
    5393:	02 03 10 11 2c 2d 48 49                             ....,-HI

0000539b <man2>:
    539b:	02 03 0e 0f 2a 2b 46 47                             ....*+FG

000053a3 <man1>:
    53a3:	02 03 0c 0d 28 29 44 45                             ....()DE

000053ab <man0>:
    53ab:	02 03 0a 0b 26 27 42 43                             ....&'BC

000053b3 <melli4>:
    53b3:	02 03 08 09 24 25 40 41                             ....$%@A

000053bb <melli3>:
    53bb:	02 03 06 07 22 23 3e 3f                             ...."#>?

000053c3 <melli2>:
    53c3:	02 03 04 05 20 21 3c 3d                             .... !<=

000053cb <melli1>:
    53cb:	02 03 02 03 1e 1f 3a 3b                             ......:;

000053d3 <melli0>:
    53d3:	02 03 00 01 1c 1d 38 39                             ......89

000053db <uMTiles>:
    53db:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    53eb:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    53fb:	ad 65 65 65 65 65 5c 01 77 66 65 65 65 66 5c 02     .eeeee\.wfeeef\.
    540b:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    541b:	66 6e 5d 02 f6 6e 66 66 5d 5d 5c 02 6e 5d 5d 5d     fn]..nff]]\.n]]]
    542b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    543b:	ae 65 65 65 65 65 5c 01 77 65 65 65 65 66 5c 02     .eeeee\.weeeef\.
    544b:	1d 0b 0b 14 0b 0b 0b 01 13 0b 0b 0a 53 0b 0b 0b     ............S...
    545b:	77 77 76 6e 6e 6e 6e 6e 6e 6e 6e 66 6e 66 66 66     wwvnnnnnnnnfnfff
    546b:	6e 5d 5d 1d 1d 5d 5d 65 6e 5d 5d 5d 5d 1d 15 ae     n]]..]]en]]]]...
    547b:	6e 65 1d ae b6 66 5d b6 6e 65 5d 5d b7 f6 f6 77     ne...f].ne]]...w
    548b:	6e 65 5d 1d 65 bf fe 77 6e 65 5d 5d 1d 6e b7 77     ne].e..wne]].n.w
    549b:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 66 6e 66 6e 66 0b     nnnnnnn]nnfnfnf.
    54ab:	5d 5d 5d 1d 5d 65 5c 02 5d 0b 1d 5d 5d 5d 14 02     ]]].]e\.]..]]]..
    54bb:	76 13 65 b7 65 14 14 02 7f 76 b7 76 13 5d 14 02     v.e.e....v.v.]..
    54cb:	77 7f 7f 1c 14 5d 14 02 77 7f 6d 0b 5d 5d 14 02     w....]..w.m.]]..
    54db:	1d 1d 1d 1d 1d 00 00 1c 1d 1d 1d 1d 1c 00 00 00     ................
    54eb:	1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    54fb:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    550b:	1c 1c 1c 1c 1c 00 00 00 1c 1c 1c 1c 00 00 00 00     ................
    551b:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    552b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    553b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 1c     ................
    554b:	1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 00 00 00 1d     ................
    555b:	1c 1d 1d 1d 1c 1d 1d 00 1d 1d 1d 1c 1c 00 00 1c     ................
    556b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00     ................
    557b:	1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c 1c 00 00 e4     ................
    558b:	1d 1c 1c 1c 1c 00 e4 e4 1d 1c 1c 1c 00 00 e4 e4     ................
    559b:	00 1d 1d 1d 1d 00 00 1c 00 1d 1d 1d 1c 00 00 00     ................
    55ab:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1c 1c 1c 1c 1c 00     ................
    55bb:	00 00 00 1c 1c 1c 1c 00 e4 00 00 1c 1c 1c 1c 00     ................
    55cb:	e4 e4 00 00 1c 00 00 00 e4 e4 e4 00 00 00 00 00     ................
    55db:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 5d     wwwwnnnnnnnnnnn]
    55eb:	77 6e 0a 0a 0a 14 5d 0a 6e 6e 0a 14 14 5d 6e 0a     wn....].nn...]n.
    55fb:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    560b:	6e 6e 0a 14 14 6e 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...nn.nn...nn.
    561b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    562b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    563b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    564b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    565b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 a4     ................
    566b:	e4 e4 e4 e4 e4 9c 53 14 e4 e4 e4 e4 5b 0b 0b 0a     ......S.....[...
    567b:	e4 e4 a4 65 65 65 5c 01 e4 e4 65 65 65 66 5c 02     ...eee\...eeef\.
    568b:	e4 9c 0b 14 0b 0b 0b 01 e4 53 0b 0a 53 0b 0b 0b     .........S..S...
    569b:	e4 a4 e4 e4 e4 e4 a5 a5 5d 5d 5c 02 6e 5d 5d 5d     ........]]\.n]]]
    56ab:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    56bb:	ae 65 65 65 65 65 5c 01 77 65 65 65 5b 13 09 00     .eeeee\.weee[...
    56cb:	1d 0b 0b 0a 00 00 00 00 13 0b 01 00 00 00 00 00     ................
    56db:	66 6e 5d 02 f6 6e 66 a4 5d 5d 5c 02 6e 5d 5d 5d     fn]..nf.]]\.n]]]
    56eb:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    56fb:	ad 65 65 65 65 65 5c 01 00 00 09 53 5c 66 5c 02     .eeeee\....S\f\.
    570b:	00 00 00 00 00 0a 0b 01 00 00 00 00 00 00 01 0b     ................
    571b:	e4 e4 e4 e4 e4 e4 e4 e4 9d e4 e4 e4 e4 e4 e4 e4     ................
    572b:	0b 0b 53 9b e4 e4 e4 e4 53 0b 0b 0b 9c e4 e4 e4     ..S.....S.......
    573b:	ae 65 65 65 65 e4 e4 e4 77 65 65 65 65 a5 e4 e4     .eeee...weeee...
    574b:	1d 0b 0b 14 0b 0b 9c e4 13 0b 0b 0a 53 0b 0b 9c     ............S...
    575b:	66 6e 5d 02 f6 6e 5d 01 5d 5d 5c 02 6e 5d 54 00     fn]..n].]]\.n]T.
    576b:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    577b:	ad 65 65 65 65 65 53 00 77 66 65 65 65 66 52 00     .eeeeeS.wfeeefR.
    578b:	1d 0b 0b 14 0b 0b 0a 00 13 0b 0b 0a 53 0b 0a 00     ............S...
	...
    57db:	00 09 5d 02 f6 6e 66 66 00 09 5c 02 6e 5d 5d 5d     ..]..nff..\.n]]]
    57eb:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    57fb:	00 00 65 65 65 65 5c 01 00 00 65 65 65 66 5c 02     ..eeee\...eeef\.
    580b:	00 00 0b 14 0b 0b 0b 01 00 00 0b 0a 53 0b 0b 0b     ............S...
    581b:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    582b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    583b:	ad 65 65 65 65 65 5c 01 6f 65 5d 65 65 65 5c 02     .eeeee\.oe]eee\.
    584b:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    585b:	65 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     ee\..eeeef\.weee
    586b:	0b 0b 0b 01 1d 0b 0b 14 53 0b 0b 0b 13 0b 0b 0a     ........S.......
    587b:	ae 65 65 65 65 65 5c 01 77 65 5d 65 65 65 5c 02     .eeeee\.we]eee\.
    588b:	65 14 14 14 14 14 0b 02 0a 0a 0a 0a 0a 0a 0a 0a     e...............
    589b:	6e 65 5d 5d 1d ae b6 77 6e 65 5d 1d 65 ff ff b6     ne]]...wne].e...
    58ab:	6e 65 5d 5d ff 76 6e f6 6e 5d 1d ae 76 13 13 f6     ne]].vn.n]..v...
    58bb:	6e 65 5d 65 13 14 14 ae 6e 5d 5c 1c 14 5c 5d 5d     ne]e....n]\..\]]
    58cb:	65 0b 0a 0a 0b 0a 0a 0a 0a 02 02 02 02 02 02 02     e...............
    58db:	77 77 6e 5d 5d 5d 14 02 77 7f 7f 65 5c 5d 14 02     wwn]]]..w..e\]..
    58eb:	77 6e 76 7f 65 5d 14 02 76 13 13 76 65 5d 14 02     wnv.e]..v..ve]..
    58fb:	65 14 14 13 13 5d 5c 02 54 5c 5d 14 14 5c 14 02     e....]\.T\]..\..
    590b:	0a 0a 0a 0b 0b 0a 0a 0a 02 02 02 02 02 02 02 0a     ................
    591b:	1c 1c 1c 00 00 00 00 00 1c 00 00 00 1d 1c 1c 00     ................
    592b:	00 00 00 1d 1d 1c 1c 1c 00 1d 1d 1d 1c 1c 1c 1c     ................
    593b:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    594b:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 00     ................
    595b:	1c 1c 1c 00 1c 1c 1c 1c 00 00 00 1d 1d 1d 1d 00     ................
    596b:	00 1d 1d 1d 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 1c     ................
    597b:	00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c     ................
    598b:	00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00     ................
    599b:	1c 1c 1c 00 1c e4 e4 e4 00 00 00 1c 00 e4 e4 e4     ................
    59ab:	00 1d 1d 1c 00 e4 e4 e4 00 1d 1d 1c 00 e4 e4 e4     ................
    59bb:	00 1d 1c 00 00 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    59cb:	00 1d 1c 00 e4 e4 e4 e4 00 1d 1c 00 e4 e4 e4 e4     ................
    59db:	e4 e4 e4 00 00 00 00 00 e4 e4 e4 00 00 1d 1d 00     ................
    59eb:	e4 e4 e4 e4 00 1d 1c 1c e4 e4 e4 e4 00 1d 1c 1c     ................
    59fb:	e4 e4 e4 e4 00 1c 1c 00 e4 e4 e4 e4 00 1c 1c 1c     ................
    5a0b:	e4 e4 e4 e4 00 1c 1c 1c e4 e4 e4 e4 00 1d 1c 00     ................
    5a1b:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 6e 6e 0a     nn...wn.nn...nn.
    5a2b:	6e 6e 0a 14 14 77 6e 0a 6e 6e 0a 14 14 77 6e 0a     nn...wn.nn...wn.
    5a3b:	6e 6e 14 5d 77 77 6e 0a 6e 6e 5d 6e 6e 6e 6e 0a     nn.]wwn.nn]nnnn.
    5a4b:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    5a5b:	a5 65 5c 01 ae 65 65 65 65 66 5c 02 77 65 65 65     .e\..eeeef\.weee
    5a6b:	0b 0b 0b 01 1d 0b 0b 0a 53 0b 0b 0b 13 0b 0b 01     ........S.......
    5a7b:	ad 65 65 65 65 65 5b 00 6f 65 5d 65 65 65 53 00     .eeeee[.oe]eeeS.
    5a8b:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 09 00     e...............
    5a9b:	5c 09 00 00 00 00 00 00 12 00 00 00 00 00 00 00     \...............
	...
    5adf:	00 00 00 12 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    5b1b:	65 65 5c 01 ae 65 65 65 53 66 5c 02 77 65 65 65     ee\..eeeSf\.weee
    5b2b:	00 0a 0b 01 1d 0b 0b 14 00 0a 0b 0b 13 0b 0b 0a     ................
    5b3b:	00 12 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5b4b:	00 01 14 14 14 14 0b 02 00 00 0a 0a 0a 0a 0a 0a     ................
    5b5b:	65 65 5c 01 ae 65 5b 00 65 66 5c 02 77 65 5b 00     ee\..e[.ef\.we[.
    5b6b:	0b 0b 0b 01 1d 0b 0a 00 53 0b 0b 0b 13 0b 0a 00     ........S.......
    5b7b:	ad 65 65 65 65 65 53 00 6f 65 5d 65 65 65 53 00     .eeeeeS.oe]eeeS.
    5b8b:	65 14 14 14 14 14 0a 00 0a 0a 0a 0a 0a 0a 0a 01     e...............
    5b9b:	00 00 5c 01 ae 65 65 65 00 00 5c 02 77 65 65 65     ..\..eee..\.weee
    5bab:	00 00 0b 01 1d 0b 0b 14 00 00 0b 0b 13 0b 0b 0a     ................
    5bbb:	00 09 65 65 65 65 5c 01 00 09 5d 65 65 65 5c 02     ..eeee\...]eee\.
    5bcb:	00 09 14 14 14 14 0b 02 00 01 0a 0a 0a 0a 0a 0a     ................
    5bdb:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 00 00 00     ................
    5beb:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5bfb:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5c0b:	1c 1c 1c 00 00 1d 1d 1c 1c 1c 1c 00 00 1d 1d 1c     ................
    5c1b:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5c2b:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5c3b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5c4b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 1c 00 1d 1d 1c     ................
    5c5b:	00 1d 1d 1c 1c 1c 1c 00 1c 00 00 1d 1c 1c 00 00     ................
    5c6b:	1c 1c 1c 00 1d 00 00 1d 1c 1c 1c 00 00 1d 1d 1d     ................
    5c7b:	1c 1c 1c 1c 00 1d 1d 1c 1c 1c 1c 1c 00 1d 1c 1c     ................
    5c8b:	1c 1c 1c 1c 00 1d 00 00 1c 1c 1c 00 00 00 00 e4     ................
    5c9b:	00 00 00 e4 e4 e4 e4 e4 1d 1c 00 e4 e4 e4 e4 e4     ................
    5cab:	1d 1c 00 e4 e4 e4 e4 e4 1c 1c 00 e4 e4 e4 e4 e4     ................
    5cbb:	00 00 00 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    5ccb:	00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5cdb:	e4 e4 e4 e4 00 00 1d 00 e4 e4 e4 e4 e4 00 00 00     ................
    5ceb:	e4 e4 e4 e4 e4 e4 00 1d e4 e4 e4 e4 e4 e4 00 1d     ................
    5cfb:	e4 e4 e4 e4 e4 e4 00 1c e4 e4 e4 e4 e4 e4 00 00     ................
    5d0b:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    5d1b:	00 00 00 1d 1c 00 00 00 1d 00 00 00 00 00 00 1d     ................
    5d2b:	1d 1d 1d 00 1d 1d 1d 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5d3b:	1c 1c 1c 00 1d 1c 1c 1c 1c 1c 1c 00 1d 1c 1c 1c     ................
    5d4b:	1c 1c 1c 00 1d 1c 1c 1c 00 00 00 1c 00 1d 1d 1c     ................
    5d5b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad     ................
    5d6b:	e4 e4 e4 e4 e4 e4 ad b6 e4 e4 e4 e4 e4 e4 ad f6     ................
    5d7b:	e4 e4 e4 e4 e4 ad f6 ff e4 e4 e4 e4 e4 ad f6 ff     ................
    5d8b:	e4 e4 e4 e4 e4 b6 ff ff e4 e4 e4 e4 e4 ad f6 ff     ................
    5d9b:	ad ad b6 ad ad e4 e4 e4 f6 f6 ff ff f6 ad e4 e4     ................
    5dab:	ff ff ff ff ff f6 e4 e4 ff ff ff ff ff ff ad e4     ................
    5dbb:	ff ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    5dcb:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    5ddb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5deb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5dfb:	e4 e4 e4 e4 e4 e4 e4 e4 a4 ad ad ad ad e4 e4 e4     ................
    5e0b:	ad f6 f6 ff f6 ad e4 e4 f6 ff ff ff ff f6 ad e4     ................
    5e1b:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    5e2b:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    5e3b:	e4 e4 1a 63 64 6d 6d 76 e4 e4 1a 63 63 6d 64 6d     ...cdmmv...ccmdm
    5e4b:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    5e5b:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    5e6b:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    5e7b:	6e 77 b7 b7 b7 77 b7 76 76 b7 b7 b7 b7 b7 6e 6e     nw...w.vv.....nn
    5e8b:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    5e9b:	1b 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6e 6d 76     ..mmvww...dcmnmv
    5eab:	1a 63 64 1a 64 6d 6d 6e 11 1a 63 64 6d 6e 6e 77     .cd.dmmn..cdmnnw
    5ebb:	e4 11 11 1a 63 1a 63 1b e4 e4 11 11 19 63 1b 64     ....c.c......c.d
    5ecb:	e4 e4 11 63 63 6c 6d 6d e4 e4 19 64 63 64 6e 6d     ...cclmm...dcdnm
    5edb:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 6e 77 77     .......ww...vnww
    5eeb:	77 b7 b7 76 6e 77 76 76 77 b7 bf b7 77 77 77 77     w..vnwvvw...wwww
    5efb:	64 64 64 63 64 64 64 64 65 63 6d 6d 6c 6d 6c 6c     dddcddddecmmlmll
    5f0b:	76 76 b7 b7 b7 77 77 76 6e b7 b7 b7 77 77 76 76     vv...wwvn...wwvv
    5f1b:	77 77 76 6e 6e 76 6e 6d 6e 6e 76 6e 6d 6d 64 64     wwvnnvnmnnvnmmdd
    5f2b:	6e 6e 6e 6d 6d 6d 64 6d 77 76 6e 76 64 6d 63 63     nnnmmmdmwvnvdmcc
    5f3b:	64 64 64 23 1a 1a 1a 11 63 63 63 1a 1a 19 11 08     ddd#....ccc.....
    5f4b:	76 76 6d 6d 6d 6d 1b 1a 6e 6d 76 6d 64 64 63 63     vvmmmm..nmvmddcc
    5f5b:	1b 64 6c 1a 1a 63 11 11 63 64 63 11 11 1a 11 11     .dl..c..cdc.....
    5f6b:	63 63 1a 11 11 11 11 11 63 1a 1a 1a 19 11 11 11     cc......c.......
    5f7b:	11 11 11 11 11 11 11 e4 11 11 11 11 11 11 e4 e4     ................
    5f8b:	63 1a 08 11 11 11 e4 e4 19 19 11 11 11 11 e4 e4     c...............
    5f9b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5fab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5fbb:	e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4 e4 e4 15 16     ................
    5fcb:	e4 e4 e4 e4 0c 15 16 1f e4 e4 e4 14 15 16 1f 67     ...............g
    5fdb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5feb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    5ffb:	14 14 14 e4 e4 e4 e4 e4 16 1d 14 14 14 e4 e4 e4     ................
    600b:	1f 1f 16 15 0c e4 e4 e4 5f 67 66 15 14 14 e4 e4     ........_gf.....
    601b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 15 15 15     ................
    602b:	e4 e4 14 14 16 16 1f 1f e4 14 15 1d 1f 1f 67 67     ..............gg
    603b:	e4 15 16 1e 1f 17 5f 67 14 15 16 17 1f 67 67 1f     ......_g.....gg.
    604b:	0c 1d 1e 17 17 6e 6f 1f 0c 5d 6e 17 17 6e 67 1f     .....no..]n..ng.
    605b:	e4 e4 e4 e4 e4 e4 e4 e4 14 14 e4 e4 e4 e4 e4 e4     ................
    606b:	16 0d 0c e4 e4 e4 e4 e4 17 16 15 14 e4 e4 e4 e4     ................
    607b:	1f 77 5e 15 14 e4 e4 e4 1f 77 66 16 15 14 e4 e4     .w^......wf.....
    608b:	1f 1f 1f 17 1d 1d 0c e4 1f 17 17 1f 5e 15 14 e4     ............^...
    609b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    60ab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 74 74     ..............tt
    60bb:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4 74 74 74     .....ttt.....ttt
    60cb:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 74 74 74 74 74     .....ttt...ttttt
    60db:	e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 74 74 e4 e4     ........t...tt..
    60eb:	74 e4 74 74 74 74 e4 74 74 74 e4 e4 74 74 74 e4     t.tttt.ttt..ttt.
    60fb:	74 e4 74 74 74 74 74 74 74 74 74 74 74 74 74 74     t.tttttttttttttt
    610b:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    611b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 74 e4 e4 e4 e4 e4 e4     .........t......
    612b:	e4 74 e4 e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 e4     .t......ttt.....
    613b:	74 74 74 e4 e4 e4 74 e4 74 74 74 74 e4 74 e4 e4     ttt...t.tttt.t..
    614b:	74 74 74 e4 74 74 74 e4 e4 74 74 74 74 74 74 e4     ttt.ttt..tttttt.
    615b:	77 77 77 77 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e 6e     wwwwnnnnnnnnnnnn
    616b:	77 6e 0a 0a 0a 0a 0a 0a 6e 6e 0a 14 14 14 14 14     wn......nn......
    617b:	6e 6e 0a 14 14 14 14 14 6e 6e 0a 14 14 5d 5d 5d     nn......nn...]]]
    618b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    619b:	6e 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e 6e 5d 0a     nnnnnnn]nnnnnn].
    61ab:	0a 0a 0a 0a 14 5d 0a 0a 14 14 14 14 5d 6e 0a 0a     .....]......]n..
    61bb:	14 14 14 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ....nn..]]].nn..
    61cb:	5d 5d 5d 14 6e 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].nn..]]].nn..
    61db:	e4 e4 e4 e4 e4 e4 e4 08 e4 e4 e4 e4 e4 e4 e4 a3     ................
    61eb:	e4 e4 e4 e4 e4 e4 51 fd e4 e4 e4 e4 e4 00 eb f5     ......Q.........
    61fb:	e4 e4 e4 e4 e4 a3 f4 f4 e4 e4 e4 e4 52 f4 f4 f5     ............R...
    620b:	e4 e4 e4 00 ec f4 f4 fd e4 e4 e4 00 a3 e3 e3 ec     ................
    621b:	00 e4 e4 e4 e4 e4 e4 e4 9a e4 e4 e4 e4 e4 e4 e4     ................
    622b:	eb 49 e4 e4 e4 e4 e4 e4 e3 9a 00 e4 e4 e4 e4 e4     .I..............
    623b:	a3 db 9a e4 e4 e4 e4 e4 e3 e3 e3 51 e4 e4 e4 e4     ...........Q....
    624b:	ec eb e3 a3 00 e4 e4 e4 9a 92 9b 9a 00 e4 e4 e4     ................
    625b:	e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4 00     ................
    626b:	e4 e4 e4 e4 e4 e4 00 3f e4 e4 e4 e4 e4 00 3f 3f     .......?......??
    627b:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 00 3f     .....???.....?.?
    628b:	e4 e4 e4 e4 00 3f 00 3f e4 e4 e4 e4 00 3f 00 3f     .....?.?.....?.?
    629b:	00 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    62ab:	3f 00 e4 e4 e4 e4 e4 e4 3f 3f 00 e4 e4 e4 e4 e4     ?.......??......
    62bb:	3f 3f 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ???.....?.?.....
    62cb:	3f 00 3f 00 e4 e4 e4 e4 3f 00 3f 00 e4 e4 e4 e4     ?.?.....?.?.....
    62db:	e4 e4 e4 e4 a4 ad ad f6 e4 e4 e4 ad ad f6 f6 b6     ................
    62eb:	e4 e4 ad f6 ff ff ff ff e4 ad f6 ff ff ff ff ff     ................
    62fb:	e4 ad ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    630b:	ad f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff     ................
    631b:	ff ff ff ff ff ff ff ad f6 ff ff ff ff ff ff ad     ................
    632b:	f6 ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    633b:	ff ff ff ff ff ff f6 f6 ff ff ff ff ff ff b6 ff     ................
    634b:	ff ff ff ff ff f6 f6 ff ff ff ff ff ff f6 ff ff     ................
    635b:	f6 ff ff ff ff ff f6 e4 ff ff ff ff ff ff ff ad     ................
    636b:	ff ff ff ff ff ff ff b6 ff ff ff ff ff ff ff f6     ................
    637b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    638b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff b6     ................
    639b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63ab:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    63bb:	a4 ad ad ad ad ad e4 e4 a4 b6 f6 ff ff b6 ad e4     ................
    63cb:	ad ff ff ff ff ff b6 e4 b6 ff ff ff ff ff ff ad     ................
    63db:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    63eb:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    63fb:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    640b:	e4 e4 1a 63 63 6d 6d 6d e4 e4 11 1a 6d 64 64 6d     ...ccmmm....mddm
    641b:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    642b:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    643b:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    644b:	6e 77 b7 b7 77 77 77 6e 6e 77 b7 b7 77 f7 6e 6d     nw..wwwnnw..w.nm
    645b:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    646b:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 64 6d 6e 6d     ....cmmm...cdmnm
    647b:	e4 e4 1a 64 1a 64 6d 6d e4 e4 1a 63 63 6d 6d 6d     ...d.dmm...ccmmm
    648b:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    649b:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    64ab:	6d 77 b7 b7 77 77 77 6e 6d 76 b7 b7 b7 b7 6e 76     mw..wwwnmv....nv
    64bb:	6e 76 b7 b7 76 76 6e 6e 6e 77 b7 b7 77 77 77 6e     nv..vvnnnw..wwwn
    64cb:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    64db:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    64eb:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    64fb:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    650b:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    651b:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    652b:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    653b:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    654b:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    655b:	e4 e4 e4 14 66 1f 1f 67 e4 e4 14 16 27 1f 1f 1f     ....f..g....'...
    656b:	e4 e4 15 1e 17 1f 5f 67 e4 14 15 27 17 17 5f be     ......_g...'.._.
    657b:	e4 14 16 1e 1f 1f 1f 6e e4 14 16 1e 1e 67 17 16     .......n.....g..
    658b:	e4 14 15 1e 16 1e 16 16 e4 e4 14 15 16 16 16 1e     ................
    659b:	1f 6e 6e 16 1c 0c e4 e4 1f 1f 1e 16 1d 14 e4 e4     .nn.............
    65ab:	1f 17 17 16 15 14 14 e4 1f 17 1e 15 14 14 e4 e4     ................
    65bb:	1f 16 1d 15 14 14 e4 e4 17 16 15 14 0c e4 e4 e4     ................
    65cb:	16 15 0d 14 e4 e4 e4 e4 15 0c 14 5c e4 e4 e4 e4     ...........\....
    65db:	0c 1d 66 17 1f 1f 1f 1f 14 15 16 1f 1f 1f 1f 1f     ..f.............
    65eb:	e4 15 16 17 1f 1f 1f 1f e4 14 15 16 1e 1e 1f 1f     ................
    65fb:	e4 e4 15 16 16 1f 1f 1f e4 e4 14 15 16 17 1f 1f     ................
    660b:	e4 5b 64 14 15 16 16 1e e4 5b 6d 64 14 14 14 15     .[d......[md....
    661b:	5f 1f 17 27 1e 0d 14 e4 6f 6f 17 17 1e 15 14 14     _..'....oo......
    662b:	6f 6e 17 17 6e 65 0c 14 1f 1f 1f 17 6e 65 0c 14     on..ne......ne..
    663b:	17 17 1f 17 16 15 14 14 1e 17 1e 1e 16 15 14 e4     ................
    664b:	1e 16 1e 16 15 14 14 e4 16 16 16 15 14 14 e4 e4     ................
    665b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    666b:	e4 e4 e4 e4 e4 74 74 74 e4 e4 e4 e4 74 74 e4 74     .....ttt....tt.t
    667b:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    668b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 e4 74 74 74 74     ...ttttt....tttt
    669b:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    66ab:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    66bb:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    66cb:	74 74 74 74 74 74 74 74 74 74 74 74 74 74 74 74     tttttttttttttttt
    66db:	74 74 74 74 74 74 e4 e4 74 74 74 74 74 e4 e4 e4     tttttt..ttttt...
    66eb:	74 74 74 74 74 e4 74 e4 74 74 74 74 74 74 e4 e4     ttttt.t.tttttt..
    66fb:	74 74 74 74 74 74 74 e4 74 74 74 74 74 74 e4 e4     ttttttt.tttttt..
    670b:	74 74 74 74 74 74 e4 74 74 74 74 74 74 74 74 e4     tttttt.tttttttt.
    671b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 5d 5d 5d     nn...]]]nn...]]]
    672b:	6e 6e 0a 14 14 5d 5d 5d 6e 6e 0a 14 14 14 14 14     nn...]]]nn......
    673b:	6e 6e 14 5d 6e 6e 6e 6e 6e 6e 5d 6e 6e 6e 6e 6e     nn.]nnnnnn]nnnnn
    674b:	6e 5d 0a 0a 0a 0a 0a 0a 5d 0a 0a 0a 0a 0a 0a 0a     n]......].......
    675b:	5d 5d 5d 14 77 6e 0a 0a 5d 5d 5d 14 6e 6e 0a 0a     ]]].wn..]]].nn..
    676b:	5d 5d 5d 14 77 6e 0a 0a 14 14 14 14 77 6e 0a 0a     ]]].wn......wn..
    677b:	6e 6e 77 77 77 6e 0a 0a 6e 6e 6e 6e 6e 6e 0a 0a     nnwwwn..nnnnnn..
    678b:	0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a 0a     ................
    679b:	e4 e4 e4 e4 49 e3 9a e3 e4 e4 e4 e4 e4 92 db eb     ....I...........
    67ab:	e4 e4 e4 e4 e4 00 9a e3 e4 e4 e4 e4 e4 e4 49 eb     ..............I.
    67bb:	e4 e4 e4 e4 e4 e4 e4 9a e4 e4 e4 e4 e4 e4 e4 00     ................
    67cb:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    67db:	92 89 9a 49 e4 e4 e4 e4 92 92 51 e4 e4 e4 e4 e4     ...I......Q.....
    67eb:	9a 92 00 e4 e4 e4 e4 e4 db 49 e4 e4 e4 e4 e4 e4     .........I......
    67fb:	92 e4 e4 e4 e4 e4 e4 e4 00 e4 e4 e4 e4 e4 e4 e4     ................
    680b:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    681b:	e4 e4 e4 e4 00 3f 3f 3f e4 e4 e4 e4 00 3f 3f 3f     .....???.....???
    682b:	e4 e4 e4 e4 00 3f 3f 3f e4 00 e4 e4 00 3f 3f 3f     .....???.....???
    683b:	00 3f 00 00 00 3f 3f 00 00 3f 3f 3f 3f 3f 3f 00     .?...??..??????.
    684b:	e4 00 3f 3f 3f 3f 00 00 e4 e4 00 00 00 00 00 e4     ..????..........
    685b:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 e4 e4     ???.....???.....
    686b:	3f 3f 3f 00 e4 e4 e4 e4 3f 3f 3f 00 e4 e4 00 e4     ???.....???.....
    687b:	00 3f 3f 00 00 00 3f 00 00 3f 3f 3f 3f 3f 3f 00     .??...?..??????.
    688b:	00 00 3f 3f 3f 3f 00 e4 e4 00 00 00 00 00 e4 e4     ..????..........
    689b:	b6 f6 ff ff ff ff ff ff b6 f6 ff ff ff ff ff ff     ................
    68ab:	b6 f6 ff ff ff ff ff ff ad f6 ff ff ff ff ff ff     ................
    68bb:	ad f6 f6 ff ff ff ff ff ad f6 f6 ff ff ff ff ff     ................
    68cb:	e4 ad f6 f6 ff ff ff ff e4 ad b6 f6 f6 f6 f6 ff     ................
    68db:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    68eb:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    68fb:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    690b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    691b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    692b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff f6     ................
    693b:	ff ff ff ff ff ff ff f6 ff ff ff ff ff ff ff f6     ................
    694b:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    695b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    696b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    697b:	ff ff ff ff ff ff ff ad ff ff ff ff ff ff ff ad     ................
    698b:	ff ff ff ff ff ff f6 a4 ff ff ff ff ff ff ad e4     ................
    699b:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    69ab:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    69bb:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    69cb:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    69db:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    69eb:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    69fb:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    6a0b:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6a1b:	e4 e4 1a 63 63 6d 64 6d e4 e4 1a 64 63 64 64 76     ...ccmdm...dcddv
    6a2b:	e4 e4 11 1a 63 6d 6d 6d e4 e4 1a 63 63 6d 64 6d     ....cmmm...ccmdm
    6a3b:	e4 e4 1a 64 63 64 64 76 e4 e4 11 1a 63 6d 6d 6d     ...dcddv....cmmm
    6a4b:	e4 e4 1a 63 64 6d 6e 6d e4 e4 1a 64 1a 64 6d 6d     ...cdmnm...d.dmm
    6a5b:	76 b7 b7 b7 b7 b7 6e 6e 77 6e b7 b7 77 77 77 77     v.....nnwn..wwww
    6a6b:	6d 77 b7 b7 77 77 77 6e 76 b7 b7 b7 b7 b7 6e 6e     mw..wwwnv.....nn
    6a7b:	77 6e b7 b7 77 77 77 77 6d 77 b7 b7 77 77 77 6e     wn..wwwwmw..wwwn
    6a8b:	6d 76 b7 b7 b7 b7 6e 76 6e 76 b7 b7 76 76 6e 6e     mv....nvnv..vvnn
    6a9b:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6aab:	6e 6e 6d 64 6c 6d 63 63 6e 6e 6d 64 6d 63 6d 63     nnmdlmccnnmdmcmc
    6abb:	6e 76 6d 64 6d 64 63 1b 6e 6e 6d 64 6c 6d 63 63     nvmdmdc.nnmdlmcc
    6acb:	76 6e 6d 76 64 64 63 64 6e 6e 6d 6d 64 64 64 1b     vnmvddcdnnmmddd.
    6adb:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6aeb:	63 11 1a 19 11 11 e4 e4 1a 63 19 19 11 11 e4 e4     c........c......
    6afb:	63 1a 11 11 11 11 e4 e4 63 11 1a 19 11 11 e4 e4     c.......c.......
    6b0b:	64 1a 11 11 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     d.......c.......
    6b1b:	e4 e4 e4 14 15 15 15 14 e4 e4 e4 e4 14 14 14 14     ................
    6b2b:	e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4 5b     .......[.......[
    6b3b:	e4 14 0c 14 e4 e4 e4 5b 14 16 1e 5e 1c e4 e4 5b     .......[...^...[
    6b4b:	1e 1f 67 67 15 0c e4 5b 16 67 1f 1e 15 0c e4 5b     ..gg...[.g.....[
    6b5b:	14 14 5c 64 64 e4 e4 e4 14 64 6d 6d 64 13 e4 e4     ..\dd....dmmd...
    6b6b:	64 6d 76 76 1c 15 5e 14 6d 6e bf 65 0c 67 67 1e     dmvv..^.mn.e.gg.
    6b7b:	6d 76 6e 0c 16 67 67 1f 6d 6d 65 15 1f 17 67 1f     mvn..gg.mme...g.
    6b8b:	65 6d 5c 15 1e 17 1f 1f 64 6e 6d 14 16 1f 1f 1f     em\.....dnm.....
    6b9b:	5b 64 6d 6d 64 64 5c 14 5b 64 6d 6e 76 6d 6d 63     [dmmdd\.[dmnvmmc
    6bab:	14 5c 6d 6e 77 76 76 64 15 14 6d 76 77 76 76 64     .\mnwvvd..mvwvvd
    6bbb:	1f 1d 1d b7 77 6e 6e 6d 67 1e 0c 6e bf 76 6d 65     ....wnnmg..n.vme
    6bcb:	67 1e 0c 65 bf bf 6d 64 16 1d 14 65 bf 77 6e 64     g..e..md...e.wnd
    6bdb:	14 15 14 14 0c e4 e4 e4 13 0c 14 e4 e4 e4 e4 e4     ................
    6beb:	e4 e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     ........[.......
    6bfb:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6c0b:	5b e4 e4 e4 e4 e4 e4 e4 5b e4 e4 e4 e4 e4 e4 e4     [.......[.......
    6c1b:	e4 e4 e4 74 74 74 74 74 e4 e4 e4 74 74 74 e4 74     ...ttttt...ttt.t
    6c2b:	e4 e4 e4 e4 74 e4 74 74 e4 e4 e4 74 74 e4 e4 74     ....t.tt...tt..t
    6c3b:	e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4 74 74 74     ......tt.....ttt
    6c4b:	e4 e4 e4 e4 e4 74 e4 74 e4 e4 e4 e4 e4 e4 e4 74     .....t.t.......t
    6c5b:	74 74 74 1d 74 74 74 74 1d 74 74 1d 74 74 74 74     ttt.tttt.tt.tttt
    6c6b:	1c 1d 1d 1d 74 74 74 1d 74 1c 1c 1c 74 74 74 1c     ....ttt.t...ttt.
    6c7b:	74 1d 1d 1c 1d 1c 1c 1c 74 74 74 1c 1c 1c 1c 1c     t.......ttt.....
    6c8b:	e4 74 74 1d 1c 1c 1c 74 74 e4 e4 74 1c 1c 1c e4     .tt....tt..t....
    6c9b:	74 1d 1d 74 74 74 74 74 1d 1d 1d 74 74 74 74 e4     t..ttttt...tttt.
    6cab:	1c 74 74 74 74 e4 74 e4 74 74 74 74 e4 e4 74 e4     .tttt.t.tttt..t.
    6cbb:	1c 1c 1c 74 74 e4 e4 e4 1d 74 74 74 74 e4 e4 e4     ...tt....tttt...
    6ccb:	e4 74 74 e4 e4 e4 e4 e4 e4 74 74 e4 e4 e4 e4 e4     .tt......tt.....
	...
    6ce3:	00 1d 1d 1c 1c 1c 1c 00 e4 00 1d 1d 1c 1c 00 e4     ................
    6cf3:	e4 e4 00 1d 1c 00 e4 e4 e4 e4 e4 00 00 e4 e4 e4     ................
    6d03:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d13:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 00 00 00 e4     ................
    6d23:	e4 00 1d 1c 1c 1c 00 e4 e4 e4 00 1d 1d 00 e4 e4     ................
    6d33:	e4 e4 e4 00 00 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d43:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d53:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 00 e4 00 00 00     ................
    6d63:	e4 00 1d 00 e4 00 1c 00 e4 e4 00 e4 e4 e4 00 e4     ................
    6d73:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d83:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6d93:	e4 e4 e4 e4 e4 e4 e4 e4 e4 00 00 e4 e4 00 00 e4     ................
    6da3:	e4 1c e4 e4 e4 1c e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6db3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6dc3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6dd3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ad b6 f6 f6 f6 f6     ................
    6de3:	e4 e4 e4 ad ad ad b6 b6 e4 e4 e4 e4 e4 ad a4 a4     ................
    6df3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e03:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e13:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6e23:	b6 b6 b6 b6 b6 b6 b6 b6 a4 a4 a4 a4 ad ad ad ad     ................
    6e33:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e43:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e53:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 f6 f6 f6     ................
    6e63:	b6 b6 b6 b6 b6 b6 b6 b6 ad ad ad ad ad ad a4 a4     ................
    6e73:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e83:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6e93:	e4 e4 e4 e4 e4 e4 e4 e4 f6 f6 f6 f6 f6 b6 ad e4     ................
    6ea3:	b6 b6 b6 b6 ad ad e4 e4 a4 a4 a4 a4 a4 e4 e4 e4     ................
    6eb3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ec3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    6ed3:	e4 e4 e4 e4 e4 e4 e4 e4 6e 6e 6d 64 6c 6d 63 63     ........nnmdlmcc
    6ee3:	6e 6e 6d 64 6d 63 6d 63 6e 76 6d 64 6d 64 63 1b     nnmdmcmcnvmdmdc.
    6ef3:	6e 6e 6d 64 6c 6d 63 63 76 6e 6d 76 64 64 63 64     nnmdlmccvnmvddcd
    6f03:	6e 6e 6d 6d 64 64 64 1b 6e 6e 6d 64 64 63 63 63     nnmmddd.nnmddccc
    6f13:	76 6d 6c 6d 6d 6d 64 63 63 11 1a 19 11 11 e4 e4     vmlmmmdcc.......
    6f23:	1a 63 19 19 11 11 e4 e4 63 1a 11 11 11 11 e4 e4     .c......c.......
    6f33:	63 11 1a 19 11 11 e4 e4 64 1a 11 11 11 11 e4 e4     c.......d.......
    6f43:	63 1a 11 11 11 11 e4 e4 11 1a 19 19 11 11 e4 e4     c...............
    6f53:	23 1a 11 19 11 09 e4 e4 e4 e4 1a 63 63 6d 6d 6d     #..........ccmmm
    6f63:	e4 e4 11 1a 6d 64 64 6d e4 e4 1a 63 64 6d 6d 76     ....mddm...cdmmv
    6f73:	e4 1a 6d 6d 76 77 77 b7 11 1a 64 63 6d 6d 6d 76     ..mmvww...dcmmmv
    6f83:	1a 63 1b 64 6d 64 76 76 11 1a 64 63 64 6d 76 76     .c.dmdvv..dcdmvv
    6f93:	1a 1a 1b 64 6d 6e 6e 76 6e 77 b7 b7 77 77 77 6e     ...dmnnvnw..wwwn
    6fa3:	6e 77 b7 b7 77 f7 6e 6d 6e 77 b7 b7 b7 77 b7 76     nw..w.nmnw...w.v
    6fb3:	b7 b7 b7 b7 b7 b7 b7 77 77 b7 b7 b7 76 76 77 76     .......ww...vvwv
    6fc3:	77 b7 b7 b7 b7 6e 6e 76 6e b7 b7 77 76 6e 6e 76     w....nnvn..wvnnv
    6fd3:	77 b7 b7 77 76 77 77 76 6e 6e 6d 64 64 63 63 63     w..wvwwvnnmddccc
    6fe3:	76 6d 6c 6d 6d 6d 64 63 6e 6e 76 6d 64 63 6d 64     vmlmmmdcnnvmdcmd
    6ff3:	77 77 76 6e 76 76 6e 6d 6e 6e 6e 6d 6d 64 64 63     wwvnvvnmnnnmmddc
    7003:	6e 6e 6d 6d 64 6d 64 64 76 6e 6e 6e 6d 64 64 63     nnmmdmddvnnnmddc
    7013:	6e 6e 6d 76 6d 63 63 6c 11 1a 19 19 11 11 e4 e4     nnmvmccl........
    7023:	23 1a 11 19 11 09 e4 e4 63 1a 1a 11 11 11 e4 e4     #.......c.......
    7033:	1b 6c 6d 19 1a 63 11 e4 64 63 1a 11 11 11 11 11     .lm..c..dc......
    7043:	64 1a 1b 1a 19 11 11 11 1a 63 1a 11 11 11 11 11     d........c......
    7053:	63 1b 1a 11 19 11 11 11 15 1e 16 15 14 13 e4 e4     c...............
    7063:	14 14 14 0c 1c 5b e4 e4 e4 e4 5b 5c 64 64 e4 e4     .....[....[\dd..
    7073:	e4 e4 5b 6d 6e 64 5b e4 e4 e4 5b 64 6e 65 5b e4     ..[mnd[...[dne[.
    7083:	e4 e4 e4 5c 6d 65 5b e4 e4 e4 e4 5b 65 6d 5b e4     ...\me[....[em[.
    7093:	e4 e4 e4 e4 64 65 5b e4 5c 6d 76 65 0c 16 1e 16     ....de[.\mve....
    70a3:	5b 64 76 76 5c 14 14 14 5b 64 6d 6e 64 5c 5c 5c     [dvv\...[dmnd\\\
    70b3:	e4 5c 6d 65 5b 6d 76 6d e4 5b 64 64 5b 6d 76 6e     .\me[mvm.[dd[mvn
    70c3:	e4 e4 5c 64 64 64 6e 6e e4 e4 5b 65 64 5b 6d 65     ..\dddnn..[ed[me
    70d3:	e4 e4 e4 64 6d 5c 6d 64 0d 0c 1c 76 bf 76 6e 64     ...dm\md...v.vnd
    70e3:	0c 14 6d 77 76 6e 6d 5b 5b 6d 76 76 6d 6d 64 5b     ..mwvnm[[mvvmmd[
    70f3:	64 6d bf 76 6d 64 5c e4 64 64 76 76 65 64 5b e4     dm.vmd\.ddvved[.
    7103:	5b 64 76 76 6d 5b e4 e4 5b 6d 76 6e 65 5b e4 e4     [dvvm[..[mvne[..
    7113:	64 6e 76 6d 64 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     dnvmd...........
    7123:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff e4 e4     ................
    7133:	e4 ff e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4     ................
    7143:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7153:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7163:	e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7173:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7183:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7193:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    71a3:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    71b3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    71c3:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    71d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    71e3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    71f3:	e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7203:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7213:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7223:	e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7233:	e4 ff e4 e4 ff e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7243:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7253:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7263:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    7273:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7283:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7293:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4     ................
    72a3:	e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    72b3:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    72c3:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    72d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    72e3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    72f3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7303:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7313:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7323:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7333:	e4 e4 ff ff ff e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7343:	e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7353:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7363:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    7373:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7383:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4     ................
    7393:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73a3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73b3:	e4 e4 ff ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73c3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    73d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    73e3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    73f3:	e4 e4 ff ff ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff     ................
    7403:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    7413:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    7423:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7433:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7443:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4 ff ff     ................
    7453:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    7463:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff     ................
    7473:	e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 ff e4 e4     ................
    7483:	e4 ff e4 ff e4 e4 ff e4 ff e4 e4 ff e4 e4 e4 ff     ................
    7493:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    74a3:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    74b3:	e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4     ................
    74c3:	e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    74d3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4 ff     ................
    74e3:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    74f3:	ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff e4     ................
    7503:	ff e4 e4 e4 ff e4 ff e4 ff ff ff ff e4 e4 e4 ff     ................
    7513:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff ff e4 e4     ................
    7523:	e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff e4     ................
    7533:	e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff     ................
    7543:	e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4 e4     ................
    7553:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    7563:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7573:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    7583:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7593:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    75a3:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4     ................
    75b3:	e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    75c3:	ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    75d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    75e3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    75f3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7603:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    7613:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 ff     ................
    7623:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff     ................
    7633:	e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7643:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7653:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    7663:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7673:	ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 ff e4 e4     ................
    7683:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff ff ff     ................
    7693:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    76a3:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    76b3:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    76c3:	e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    76d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    76e3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff e4 e4     ................
    76f3:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7703:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7713:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff     ................
    7723:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7733:	ff e4 e4 ff ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7743:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff ff     ................
    7753:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff ff ff ff ff     ................
    7763:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7773:	ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7783:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 ff e4 e4     ................
    7793:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff     ................
    77a3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    77b3:	e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 ff     ................
    77c3:	e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    77d3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4     ................
    77e3:	e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4     ................
    77f3:	ff e4 e4 ff ff ff e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7803:	ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4     ................
    7813:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff ff     ................
    7823:	e4 e4 ff e4 e4 e4 ff e4 e4 ff e4 ff e4 e4 ff e4     ................
    7833:	e4 ff e4 ff e4 e4 ff e4 ff ff ff ff ff e4 ff e4     ................
    7843:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7853:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7863:	e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 ff     ................
    7873:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7883:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7893:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    78a3:	ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    78b3:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    78c3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    78d3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 ff e4 ff     ................
    78e3:	ff e4 e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff     ................
    78f3:	ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4     ................
    7903:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    7913:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    7923:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7933:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7943:	e4 e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    7953:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff     ................
    7963:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7973:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7983:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7993:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    79a3:	e4 ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff     ................
    79b3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    79c3:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    79d3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    79e3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    79f3:	ff ff e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7a03:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4 e4 e4     ................
    7a13:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 ff     ................
    7a23:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7a33:	e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7a43:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7a53:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff ff     ................
    7a63:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4     ................
    7a73:	ff ff ff e4 e4 ff ff ff e4 ff e4 e4 e4 ff e4 e4     ................
    7a83:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff     ................
    7a93:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4     ................
    7aa3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7ab3:	e4 e4 e4 ff ff ff e4 e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7ac3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    7ad3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4 ff     ................
    7ae3:	e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 ff e4     ................
    7af3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 ff ff ff     ................
    7b03:	e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4     ................
    7b13:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4     ................
    7b23:	e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4 ff     ................
    7b33:	ff e4 e4 ff ff ff ff e4 ff ff e4 ff e4 ff e4 e4     ................
    7b43:	e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff     ................
    7b53:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 e4     ................
    7b63:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7b73:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7b83:	e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4     ................
    7b93:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7ba3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 14 e4 e4 e4 e4     ................
    7bb3:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 e4 0f e4 e4 e4 e4     ................
    7bc3:	e4 e4 e4 0f e4 e4 e4 e4 e4 e4 0f 0f 0f e4 e4 e4     ................
    7bd3:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7be3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4     ................
    7bf3:	e4 ff e4 e4 e4 e4 e4 e4 e4 f6 f6 e4 e4 e4 e4 e4     ................
    7c03:	e4 ad ad f6 e4 e4 e4 e4 e4 ad a4 ad f6 e4 e4 e4     ................
    7c13:	e4 ad a4 a4 ad f6 e4 e4 e4 ff ff ff e4 e4 e4 e4     ................
    7c23:	ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7c33:	ff e4 e4 ff ff e4 e4 ff ff e4 e4 e4 ff e4 ff ff     ................
    7c43:	ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4     ................
    7c53:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    7c63:	ff e4 e4 e4 ff ff e4 ff e4 ff e4 e4 ff e4 ff e4     ................
    7c73:	e4 ff e4 e4 ff e4 e4 e4 ff ff ff e4 ff e4 e4 e4     ................
    7c83:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7c93:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7ca3:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7cb3:	ff e4 ff ff ff e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7cc3:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff ff ff ff e4 e4     ................
    7cd3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4     ................
    7ce3:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7cf3:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7d03:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4     ................
    7d13:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff     ................
    7d23:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    7d33:	e4 e4 ff e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 ff     ................
    7d43:	e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff     ................
    7d53:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 ff ff ff ff     ................
    7d63:	e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4     ................
    7d73:	ff ff e4 e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4     ................
    7d83:	e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4     ................
    7d93:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7da3:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7db3:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7dc3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7dd3:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4 ff e4     ................
    7de3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7df3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7e03:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    7e13:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 ff e4 ff ff     ................
    7e23:	ff ff e4 ff ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    7e33:	ff e4 e4 e4 ff e4 ff ff ff e4 e4 e4 ff e4 ff e4     ................
    7e43:	ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff ff     ................
    7e53:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 ff e4 e4 ff ff     ................
    7e63:	e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4     ................
    7e73:	ff e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 e4 e4 e4     ................
    7e83:	e4 e4 e4 e4 e4 ff e4 e4 ff ff e4 e4 e4 e4 ff ff     ................
    7e93:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 ff e4     ................
    7ea3:	e4 ff e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4     ................
    7eb3:	ff e4 e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4     ................
    7ec3:	e4 ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    7ed3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff ff ff ff     ................
    7ee3:	e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4     ................
    7ef3:	e4 e4 ff e4 ff ff ff ff e4 e4 ff e4 ff e4 e4 e4     ................
    7f03:	e4 e4 ff e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    7f13:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7f23:	ff e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4     ................
    7f33:	e4 e4 ff e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7f43:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4     ................
    7f53:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 e4     ................
    7f63:	e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7f73:	e4 ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 e4 ff     ................
    7f83:	e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 e4     ................
    7f93:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff e4 e4 ff ff e4     ................
    7fa3:	e4 e4 e4 ff e4 ff ff e4 e4 e4 e4 ff e4 ff e4 ff     ................
    7fb3:	e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4 ff e4 e4     ................
    7fc3:	e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4 ff e4 e4     ................
    7fd3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4     ................
    7fe3:	e4 ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 e4     ................
    7ff3:	e4 ff e4 ff e4 e4 ff ff ff ff e4 ff e4 e4 e4 ff     ................
    8003:	ff ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4     ................
    8013:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff e4 e4 e4     ................
    8023:	e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4     ................
    8033:	e4 ff ff ff ff e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff     ................
    8043:	e4 ff e4 e4 ff e4 e4 ff e4 ff e4 e4 e4 ff e4 ff     ................
    8053:	e4 e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff ff     ................
    8063:	e4 ff e4 e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8073:	ff e4 ff e4 e4 e4 ff e4 ff ff ff ff e4 e4 ff e4     ................
    8083:	e4 e4 e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4     ................
    8093:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 ff e4     ................
    80a3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    80b3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4     ................
    80c3:	e4 e4 ff e4 e4 e4 ff e4 e4 e4 e4 ff ff ff e4 e4     ................
    80d3:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 e4 e4 e4 e4 ff     ................
    80e3:	ff e4 e4 e4 e4 e4 e4 ff ff e4 e4 e4 e4 e4 ff e4     ................
    80f3:	ff e4 e4 e4 e4 e4 ff e4 ff e4 e4 e4 e4 ff ff ff     ................
    8103:	ff e4 e4 e4 e4 ff e4 e4 ff ff ff ff e4 ff e4 e4     ................
    8113:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 ff ff ff ff ff e4     ................
    8123:	e4 e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4 ff e4 e4 e4     ................
    8133:	ff e4 e4 e4 ff e4 e4 e4 ff ff e4 e4 ff e4 e4 e4     ................
    8143:	e4 ff e4 e4 ff e4 e4 e4 e4 ff e4 e4 ff e4 e4 e4     ................
    8153:	e4 e4 e4 e4 e4 e4 e4 e4 ff e4 e4 ff ff ff e4 e4     ................
    8163:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8173:	ff e4 ff e4 e4 e4 ff e4 ff e4 ff e4 e4 e4 ff e4     ................
    8183:	ff e4 ff e4 e4 e4 ff e4 ff e4 e4 ff ff ff e4 e4     ................
    8193:	e4 e4 e4 e4 e4 e4 e4 e4 ff ff e4 e4 ff e4 ff e4     ................
    81a3:	ff ff e4 e4 ff e4 ff e4 ff e4 ff e4 ff e4 ff e4     ................
    81b3:	ff e4 ff e4 ff e4 ff e4 ff e4 e4 ff ff e4 ff e4     ................
    81c3:	ff e4 e4 ff ff e4 e4 e4 ff e4 e4 e4 ff e4 ff e4     ................
    81d3:	e4 e4 e4 e4 e4 e4 e4 e4 e4 e4 0f 0c 0f e4 e4 e4     ................
    81e3:	e4 e4 0f 0c 0f e4 e4 e4 e4 e4 0f 0c 0f 0f e4 e4     ................
    81f3:	e4 e4 0f 0c 0c 0f e4 e4 e4 0f 0f 0c 0c 0f 0f e4     ................
    8203:	e4 0f 0c 0c 0c 0c 0f e4 e4 0f 0c 0c 0c 0c 0f e4     ................
    8213:	0f 0f 0c 0c 0c 0c 0f 0f e4 ad a4 a4 a4 ad f6 e4     ................
    8223:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    8233:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
    8243:	e4 ad a4 a4 a4 a4 f6 e4 e4 ad a4 a4 a4 a4 f6 e4     ................
	...

0000825b <spike1>:
    825b:	01 02 a0 b9                                         ....

0000825f <spike0>:
    825f:	01 02 9f b8                                         ....

00008263 <congra0>:
    8263:	0a 01 ae af b0 b1 b2 b3 b4 b5 b6 b7                 ............

0000826f <timeup0>:
    826f:	06 01 a8 a9 aa ab ac ad                             ........

00008277 <over0>:
    8277:	07 01 a1 a2 a3 a4 a5 a6 a7                          .........

00008280 <press0>:
    8280:	08 01 99 9a 95 87 9b 9c 9d 9e                       ..........

0000828a <time0>:
    828a:	03 01 96 97 98                                      .....

0000828f <live0>:
    828f:	03 01 94 8a 95                                      .....

00008294 <get0>:
    8294:	07 01 8d 8e 8f 90 91 92 93                          .........

0000829d <x0>:
    829d:	01 01 8c                                            ...

000082a0 <level0>:
    82a0:	04 01 88 89 8a 8b                                   ......

000082a6 <bonus0>:
    82a6:	04 01 84 85 86 87                                   ......

000082ac <score0>:
    82ac:	04 01 80 81 82 83                                   ......

000082b2 <nm>:
    82b2:	01 01 7f                                            ...

000082b5 <n9>:
    82b5:	01 01 7e                                            ..~

000082b8 <n8>:
    82b8:	01 01 7d                                            ..}

000082bb <n7>:
    82bb:	01 01 7c                                            ..|

000082be <n6>:
    82be:	01 01 7b                                            ..{

000082c1 <n5>:
    82c1:	01 01 7a                                            ..z

000082c4 <n4>:
    82c4:	01 01 79                                            ..y

000082c7 <n3>:
    82c7:	01 01 78                                            ..x

000082ca <n2>:
    82ca:	01 01 77                                            ..w

000082cd <n1>:
    82cd:	01 01 76                                            ..v

000082d0 <n0>:
    82d0:	01 01 75                                            ..u

000082d3 <nb>:
    82d3:	01 01 09                                            ...

000082d6 <bridge3>:
    82d6:	01 01 67                                            ..g

000082d9 <bridge2>:
    82d9:	01 01 66                                            ..f

000082dc <bridge1>:
    82dc:	01 01 65                                            ..e

000082df <bridge0>:
    82df:	01 01 64                                            ..d

000082e2 <mush3>:
    82e2:	02 02 5f 60 74 09                                   .._`t.

000082e8 <mush2>:
    82e8:	02 02 5d 5e 72 73                                   ..]^rs

000082ee <mush1>:
    82ee:	02 02 31 32 48 49                                   ..12HI

000082f4 <mush0>:
    82f4:	02 02 2f 30 46 47                                   ../0FG

000082fa <tube5>:
    82fa:	02 02 57 58 6c 6d                                   ..WXlm

00008300 <tube4>:
    8300:	02 02 29 2a 40 41                                   ..)*@A

00008306 <tube3>:
    8306:	02 02 5b 5c 70 71                                   ..[\pq

0000830c <tube2>:
    830c:	02 02 59 5a 6e 6f                                   ..YZno

00008312 <tube1>:
    8312:	02 02 2d 2e 44 45                                   ..-.DE

00008318 <tube0>:
    8318:	02 02 2b 2c 42 43                                   ..+,BC

0000831e <cloud3>:
    831e:	02 02 55 56 6a 6b                                   ..UVjk

00008324 <cloud2>:
    8324:	02 02 53 54 68 69                                   ..SThi

0000832a <cloud1>:
    832a:	02 02 28 09 3e 3f                                   ..(.>?

00008330 <cloud0>:
    8330:	02 02 26 27 3c 3d                                   ..&'<=

00008336 <bush4>:
    8336:	02 02 4c 09 63 09                                   ..L.c.

0000833c <bush3>:
    833c:	02 02 09 09 35 09                                   ....5.

00008342 <bush2>:
    8342:	02 02 4a 4b 61 62                                   ..JKab

00008348 <bush1>:
    8348:	02 02 09 09 33 34                                   ....34

0000834e <blue>:
    834e:	01 01 09                                            ...

00008351 <banana>:
    8351:	02 02 3a 3b 51 52                                   ..:;QR

00008357 <diamond0>:
    8357:	02 02 38 39 4f 50                                   ..89OP

0000835d <block3>:
    835d:	02 02 08 08 19 19                                   ......

00008363 <block2>:
    8363:	02 02 36 37 4d 4e                                   ..67MN

00008369 <door3>:
    8369:	02 02 0f 10 0f 1f                                   ......

0000836f <door2>:
    836f:	02 02 0e 0f 1e 0f                                   ......

00008375 <door1>:
    8375:	02 02 0c 0d 1c 1d                                   ......

0000837b <door0>:
    837b:	02 02 0a 0b 1a 1b                                   ......

00008381 <block5>:
    8381:	02 02 09 08 09 19                                   ......

00008387 <block4>:
    8387:	02 02 08 09 19 09                                   ......

0000838d <ground3>:
    838d:	02 03 07 06 18 17 24 23                             ......$#

00008395 <ground2>:
    8395:	02 03 07 05 18 16 24 25                             ......$%

0000839d <ground1>:
    839d:	02 03 04 06 15 17 22 23                             ......"#

000083a5 <ground>:
    83a5:	02 03 04 05 15 16 20 21                             ...... !

000083ad <block1>:
    83ad:	02 02 02 03 13 14                                   ......

000083b3 <block0>:
    83b3:	02 02 00 01 11 12                                   ......

000083b9 <bigblue0>:
    83b9:	02 02 09 09 09 09 00                                .......

000083c0 <__ctors_end>:
    83c0:	11 24       	eor	r1, r1
    83c2:	1f be       	out	0x3f, r1	; 63
    83c4:	cf ef       	ldi	r28, 0xFF	; 255
    83c6:	d0 e1       	ldi	r29, 0x10	; 16
    83c8:	de bf       	out	0x3e, r29	; 62
    83ca:	cd bf       	out	0x3d, r28	; 61

000083cc <__do_copy_data>:
    83cc:	11 e0       	ldi	r17, 0x01	; 1
    83ce:	a0 e0       	ldi	r26, 0x00	; 0
    83d0:	b1 e0       	ldi	r27, 0x01	; 1
    83d2:	e6 eb       	ldi	r30, 0xB6	; 182
    83d4:	f9 ed       	ldi	r31, 0xD9	; 217
    83d6:	02 c0       	rjmp	.+4      	; 0x83dc <__do_copy_data+0x10>
    83d8:	05 90       	lpm	r0, Z+
    83da:	0d 92       	st	X+, r0
    83dc:	a4 30       	cpi	r26, 0x04	; 4
    83de:	b1 07       	cpc	r27, r17
    83e0:	d9 f7       	brne	.-10     	; 0x83d8 <__do_copy_data+0xc>

000083e2 <__do_clear_bss>:
    83e2:	29 e0       	ldi	r18, 0x09	; 9
    83e4:	a4 e0       	ldi	r26, 0x04	; 4
    83e6:	b1 e0       	ldi	r27, 0x01	; 1
    83e8:	01 c0       	rjmp	.+2      	; 0x83ec <.do_clear_bss_start>

000083ea <.do_clear_bss_loop>:
    83ea:	1d 92       	st	X+, r1

000083ec <.do_clear_bss_start>:
    83ec:	af 3f       	cpi	r26, 0xFF	; 255
    83ee:	b2 07       	cpc	r27, r18
    83f0:	e1 f7       	brne	.-8      	; 0x83ea <.do_clear_bss_loop>

000083f2 <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    83f2:	14 be       	out	0x34, r1	; 52
    83f4:	0f b6       	in	r0, 0x3f	; 63
    83f6:	f8 94       	cli
    83f8:	a8 95       	wdr
    83fa:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    83fe:	88 61       	ori	r24, 0x18	; 24
    8400:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    8404:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    8408:	0f be       	out	0x3f, r0	; 63

0000840a <Initialize>:
    840a:	f8 94       	cli
    840c:	80 e7       	ldi	r24, 0x70	; 112
    840e:	90 e0       	ldi	r25, 0x00	; 0
    8410:	42 ea       	ldi	r20, 0xA2	; 162
    8412:	50 e0       	ldi	r21, 0x00	; 0
    8414:	fc 01       	movw	r30, r24
    8416:	25 91       	lpm	r18, Z+
    8418:	34 91       	lpm	r19, Z
    841a:	f9 01       	movw	r30, r18
    841c:	ff 27       	eor	r31, r31
    841e:	30 83       	st	Z, r19
    8420:	02 96       	adiw	r24, 0x02	; 2
    8422:	48 17       	cp	r20, r24
    8424:	59 07       	cpc	r21, r25
    8426:	b1 f7       	brne	.-20     	; 0x8414 <Initialize+0xa>
    8428:	0e 94 fd 47 	call	0x8ffa	; 0x8ffa <isEepromFormatted>
    842c:	81 11       	cpse	r24, r1
    842e:	02 c0       	rjmp	.+4      	; 0x8434 <Initialize+0x2a>
    8430:	0e 94 db 47 	call	0x8fb6	; 0x8fb6 <FormatEeprom>
    8434:	81 e0       	ldi	r24, 0x01	; 1
    8436:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <tr4_barrel_lo>
    843a:	80 93 8d 08 	sts	0x088D, r24	; 0x80088d <tr4_barrel_hi>
    843e:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_params>
    8442:	10 92 78 08 	sts	0x0878, r1	; 0x800878 <mixer>
    8446:	10 92 7e 08 	sts	0x087E, r1	; 0x80087e <tr2_vol>
    844a:	10 92 84 08 	sts	0x0884, r1	; 0x800884 <tr3_vol>
    844e:	10 92 8a 08 	sts	0x088A, r1	; 0x80088a <tr4_vol>
    8452:	10 92 90 08 	sts	0x0890, r1	; 0x800890 <tr5_vol>
    8456:	10 92 62 08 	sts	0x0862, r1	; 0x800862 <sync_phase>
    845a:	10 92 64 08 	sts	0x0864, r1	; 0x800864 <sync_flags>
    845e:	92 e1       	ldi	r25, 0x12	; 18
    8460:	90 93 63 08 	sts	0x0863, r25	; 0x800863 <sync_pulse>
    8464:	90 ee       	ldi	r25, 0xE0	; 224
    8466:	90 93 6a 08 	sts	0x086A, r25	; 0x80086a <render_lines_count>
    846a:	98 e1       	ldi	r25, 0x18	; 24
    846c:	90 93 69 08 	sts	0x0869, r25	; 0x800869 <first_render_line>
    8470:	10 92 6e 08 	sts	0x086E, r1	; 0x80086e <joypad1_status_hi+0x1>
    8474:	10 92 6d 08 	sts	0x086D, r1	; 0x80086d <joypad1_status_hi>
    8478:	10 92 72 08 	sts	0x0872, r1	; 0x800872 <joypad2_status_hi+0x1>
    847c:	10 92 71 08 	sts	0x0871, r1	; 0x800871 <joypad2_status_hi>
    8480:	80 93 77 08 	sts	0x0877, r24	; 0x800877 <sound_enabled>
    8484:	0e 94 ae 53 	call	0xa75c	; 0xa75c <InitializeVideoMode>
    8488:	78 94       	sei
    848a:	0e 94 18 54 	call	0xa830	; 0xa830 <DisplayLogo>
    848e:	0e 94 d2 6a 	call	0xd5a4	; 0xd5a4 <main>
    8492:	0c 94 d9 6c 	jmp	0xd9b2	; 0xd9b2 <_exit>

00008496 <__bad_interrupt>:
    8496:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000849a <sub_video_mode3>:
;****************************
.section .text.SetUserPreVsyncCallback
SetUserPreVsyncCallback:
	sts pre_vsync_user_callback+0,r24
	sts pre_vsync_user_callback+1,r25
	ret
    849a:	03 e8       	ldi	r16, 0x83	; 131
    849c:	0a 95       	dec	r16
    849e:	f1 f7       	brne	.-4      	; 0x849c <sub_video_mode3+0x2>
    84a0:	00 c0       	rjmp	.+0      	; 0x84a2 <sub_video_mode3+0x8>
    84a2:	00 91 4e 08 	lds	r16, 0x084E	; 0x80084e <user_ram_tiles_c>
    84a6:	ec ef       	ldi	r30, 0xFC	; 252
    84a8:	f7 e0       	ldi	r31, 0x07	; 7
    84aa:	23 e0       	ldi	r18, 0x03	; 3
    84ac:	02 9f       	mul	r16, r18
    84ae:	e0 0d       	add	r30, r0
    84b0:	f1 1d       	adc	r31, r1
    84b2:	20 91 4d 08 	lds	r18, 0x084D	; 0x80084d <free_tile_index>
    84b6:	3c e3       	ldi	r19, 0x3C	; 60
    84b8:	32 1b       	sub	r19, r18
    84ba:	30 0f       	add	r19, r16
    84bc:	20 17       	cp	r18, r16
    84be:	51 f0       	breq	.+20     	; 0x84d4 <no_ramtiles>
    84c0:	00 00       	nop
	...

000084c4 <upd_loop>:
    84c4:	a1 91       	ld	r26, Z+
    84c6:	b1 91       	ld	r27, Z+
    84c8:	1c 91       	ld	r17, X
    84ca:	11 93       	st	Z+, r17
    84cc:	0c 93       	st	X, r16
    84ce:	03 95       	inc	r16
    84d0:	02 17       	cp	r16, r18
    84d2:	c0 f3       	brcs	.-16     	; 0x84c4 <upd_loop>

000084d4 <no_ramtiles>:
    84d4:	13 e0       	ldi	r17, 0x03	; 3
    84d6:	1a 95       	dec	r17
    84d8:	f1 f7       	brne	.-4      	; 0x84d6 <no_ramtiles+0x2>
    84da:	00 c0       	rjmp	.+0      	; 0x84dc <no_ramtiles+0x8>
    84dc:	3a 95       	dec	r19
    84de:	d1 f7       	brne	.-12     	; 0x84d4 <no_ramtiles>
    84e0:	c0 e0       	ldi	r28, 0x00	; 0
    84e2:	da e0       	ldi	r29, 0x0A	; 10
    84e4:	20 91 5e 08 	lds	r18, 0x085E	; 0x80085e <screen_scrollX>
    84e8:	92 2f       	mov	r25, r18
    84ea:	28 7f       	andi	r18, 0xF8	; 248
    84ec:	c2 0f       	add	r28, r18
    84ee:	6e 01       	movw	r12, r28
    84f0:	00 91 5f 08 	lds	r16, 0x085F	; 0x80085f <screen_scrollY>
    84f4:	60 2f       	mov	r22, r16
    84f6:	06 95       	lsr	r16
    84f8:	06 95       	lsr	r16
    84fa:	06 95       	lsr	r16
    84fc:	10 91 60 08 	lds	r17, 0x0860	; 0x800860 <screen_scrollHeight>
    8500:	10 1b       	sub	r17, r16
    8502:	f1 2e       	mov	r15, r17
    8504:	10 2f       	mov	r17, r16
    8506:	06 95       	lsr	r16
    8508:	06 95       	lsr	r16
    850a:	06 95       	lsr	r16
    850c:	d0 0f       	add	r29, r16
    850e:	17 70       	andi	r17, 0x07	; 7
    8510:	c1 0f       	add	r28, r17
    8512:	67 70       	andi	r22, 0x07	; 7
    8514:	40 91 5c 08 	lds	r20, 0x085C	; 0x80085c <overlay_tile_table>
    8518:	50 91 5d 08 	lds	r21, 0x085D	; 0x80085d <overlay_tile_table+0x1>
    851c:	60 90 58 08 	lds	r6, 0x0858	; 0x800858 <tile_table_lo>
    8520:	70 90 59 08 	lds	r7, 0x0859	; 0x800859 <tile_table_hi>
    8524:	d3 01       	movw	r26, r6
    8526:	5e 01       	movw	r10, r28
    8528:	76 2f       	mov	r23, r22
    852a:	8f 2d       	mov	r24, r15
    852c:	99 2e       	mov	r9, r25
    852e:	00 91 60 08 	lds	r16, 0x0860	; 0x800860 <screen_scrollHeight>
    8532:	20 2f       	mov	r18, r16
    8534:	06 95       	lsr	r16
    8536:	06 95       	lsr	r16
    8538:	06 95       	lsr	r16
    853a:	03 95       	inc	r16
    853c:	27 70       	andi	r18, 0x07	; 7
    853e:	30 91 5b 08 	lds	r19, 0x085B	; 0x80085b <Screen>
    8542:	30 30       	cpi	r19, 0x00	; 0
    8544:	0f b6       	in	r0, 0x3f	; 63
    8546:	01 fe       	sbrs	r0, 1
    8548:	66 27       	eor	r22, r22
    854a:	01 fe       	sbrs	r0, 1
    854c:	c2 2f       	mov	r28, r18
    854e:	01 fe       	sbrs	r0, 1
    8550:	d0 2f       	mov	r29, r16
    8552:	01 fe       	sbrs	r0, 1
    8554:	8f ef       	ldi	r24, 0xFF	; 255
    8556:	01 fe       	sbrs	r0, 1
    8558:	99 24       	eor	r9, r9
    855a:	01 fe       	sbrs	r0, 1
    855c:	da 01       	movw	r26, r20
    855e:	80 90 6a 08 	lds	r8, 0x086A	; 0x80086a <render_lines_count>
    8562:	07 e0       	ldi	r16, 0x07	; 7
    8564:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8568:	01 e0       	ldi	r16, 0x01	; 1
    856a:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    856e:	01 e0       	ldi	r16, 0x01	; 1
    8570:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>

00008574 <next_tile_line>:
    8574:	08 e0       	ldi	r16, 0x08	; 8
    8576:	60 9f       	mul	r22, r16
    8578:	8d 01       	movw	r16, r26
    857a:	00 5c       	subi	r16, 0xC0	; 192
    857c:	16 40       	sbci	r17, 0x06	; 6
    857e:	00 0d       	add	r16, r0
    8580:	11 1d       	adc	r17, r1
    8582:	18 01       	movw	r2, r16
    8584:	0c e3       	ldi	r16, 0x3C	; 60
    8586:	11 e0       	ldi	r17, 0x01	; 1
    8588:	00 0d       	add	r16, r0
    858a:	11 1d       	adc	r17, r1
    858c:	28 01       	movw	r4, r16
    858e:	00 e4       	ldi	r16, 0x40	; 64
    8590:	e0 2e       	mov	r14, r16
    8592:	03 e9       	ldi	r16, 0x93	; 147
    8594:	1a ef       	ldi	r17, 0xFA	; 250
    8596:	cf 93       	push	r28
    8598:	df 93       	push	r29
    859a:	58 81       	ld	r21, Y
    859c:	c8 5f       	subi	r28, 0xF8	; 248
    859e:	48 81       	ld	r20, Y
    85a0:	c8 5f       	subi	r28, 0xF8	; 248
    85a2:	a5 d3       	rcall	.+1866   	; 0x8cee <hsync_pulse>
    85a4:	2c e0       	ldi	r18, 0x0C	; 12
    85a6:	2a 95       	dec	r18
    85a8:	f1 f7       	brne	.-4      	; 0x85a6 <next_tile_line+0x32>
    85aa:	20 e1       	ldi	r18, 0x10	; 16
    85ac:	2a 95       	dec	r18
    85ae:	f1 f7       	brne	.-4      	; 0x85ac <next_tile_line+0x38>
    85b0:	10 93 85 00 	sts	0x0085, r17	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    85b4:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    85b8:	78 94       	sei
    85ba:	00 27       	eor	r16, r16
    85bc:	5e 9d       	mul	r21, r14
    85be:	5b 31       	cpi	r21, 0x1B	; 27
    85c0:	f1 01       	movw	r30, r2
    85c2:	08 f4       	brcc	.+2      	; 0x85c6 <next_tile_line+0x52>
    85c4:	f2 01       	movw	r30, r4
    85c6:	00 1f       	adc	r16, r16
    85c8:	e0 0d       	add	r30, r0
    85ca:	f1 1d       	adc	r31, r1
    85cc:	29 2d       	mov	r18, r9
    85ce:	27 70       	andi	r18, 0x07	; 7
    85d0:	11 24       	eor	r1, r1
    85d2:	e2 0f       	add	r30, r18
    85d4:	f1 1d       	adc	r31, r1
    85d6:	4e 9d       	mul	r20, r14
    85d8:	4b 31       	cpi	r20, 0x1B	; 27
    85da:	a1 01       	movw	r20, r2
    85dc:	08 f4       	brcc	.+2      	; 0x85e0 <next_tile_line+0x6c>
    85de:	a2 01       	movw	r20, r4
    85e0:	00 1f       	adc	r16, r16
    85e2:	40 0d       	add	r20, r0
    85e4:	51 1d       	adc	r21, r1
    85e6:	1a e1       	ldi	r17, 0x1A	; 26
    85e8:	01 9f       	mul	r16, r17
    85ea:	00 2d       	mov	r16, r0
    85ec:	13 e0       	ldi	r17, 0x03	; 3
    85ee:	21 9f       	mul	r18, r17
    85f0:	11 27       	eor	r17, r17
    85f2:	06 5b       	subi	r16, 0xB6	; 182
    85f4:	1c 4b       	sbci	r17, 0xBC	; 188
    85f6:	00 0e       	add	r0, r16
    85f8:	11 1e       	adc	r1, r17
    85fa:	11 27       	eor	r17, r17
    85fc:	0f 92       	push	r0
    85fe:	1f 92       	push	r1
    8600:	08 95       	ret

00008602 <__vector_15>:
    8602:	18 b9       	out	0x08, r17	; 8
    8604:	0f 90       	pop	r0
    8606:	0f 90       	pop	r0
    8608:	df 91       	pop	r29
    860a:	cf 91       	pop	r28
    860c:	03 e1       	ldi	r16, 0x13	; 19
    860e:	0a 95       	dec	r16
    8610:	f1 f7       	brne	.-4      	; 0x860e <__vector_15+0xc>
    8612:	00 c0       	rjmp	.+0      	; 0x8614 <__vector_15+0x12>
    8614:	63 95       	inc	r22
    8616:	8a 94       	dec	r8
    8618:	f9 f0       	breq	.+62     	; 0x8658 <text_frame_end>
    861a:	68 30       	cpi	r22, 0x08	; 8
    861c:	29 f0       	breq	.+10     	; 0x8628 <next_tile_row>
    861e:	07 e0       	ldi	r16, 0x07	; 7
    8620:	0a 95       	dec	r16
    8622:	f1 f7       	brne	.-4      	; 0x8620 <__vector_15+0x1e>
    8624:	00 c0       	rjmp	.+0      	; 0x8626 <__vector_15+0x24>
    8626:	a6 cf       	rjmp	.-180    	; 0x8574 <next_tile_line>

00008628 <next_tile_row>:
    8628:	66 27       	eor	r22, r22
    862a:	0c 2f       	mov	r16, r28
    862c:	07 70       	andi	r16, 0x07	; 7
    862e:	07 30       	cpi	r16, 0x07	; 7
    8630:	11 f0       	breq	.+4      	; 0x8636 <next_tile_row+0xe>
    8632:	c3 95       	inc	r28
    8634:	02 c0       	rjmp	.+4      	; 0x863a <next_tile_row+0x12>
    8636:	c8 7f       	andi	r28, 0xF8	; 248
    8638:	d3 95       	inc	r29
    863a:	8a 95       	dec	r24
    863c:	09 f4       	brne	.+2      	; 0x8640 <next_tile_row+0x18>
    863e:	e6 01       	movw	r28, r12
    8640:	3a 95       	dec	r19
    8642:	09 f4       	brne	.+2      	; 0x8646 <next_tile_row+0x1e>
    8644:	67 2f       	mov	r22, r23
    8646:	09 f4       	brne	.+2      	; 0x864a <next_tile_row+0x22>
    8648:	e5 01       	movw	r28, r10
    864a:	09 f4       	brne	.+2      	; 0x864e <next_tile_row+0x26>
    864c:	8f 2d       	mov	r24, r15
    864e:	09 f4       	brne	.+2      	; 0x8652 <next_tile_row+0x2a>
    8650:	99 2e       	mov	r9, r25
    8652:	09 f4       	brne	.+2      	; 0x8656 <next_tile_row+0x2e>
    8654:	d3 01       	movw	r26, r6
    8656:	8e cf       	rjmp	.-228    	; 0x8574 <next_tile_line>

00008658 <text_frame_end>:
    8658:	20 e1       	ldi	r18, 0x10	; 16
    865a:	2a 95       	dec	r18
    865c:	f1 f7       	brne	.-4      	; 0x865a <text_frame_end+0x2>
    865e:	00 e0       	ldi	r16, 0x00	; 0
    8660:	00 93 85 00 	sts	0x0085, r16	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    8664:	0c e2       	ldi	r16, 0x2C	; 44
    8666:	00 93 84 00 	sts	0x0084, r16	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    866a:	41 d3       	rcall	.+1666   	; 0x8cee <hsync_pulse>
    866c:	11 24       	eor	r1, r1
    866e:	0e 94 1c 45 	call	0x8a38	; 0x8a38 <RestoreBackground>
    8672:	e0 91 64 08 	lds	r30, 0x0864	; 0x800864 <sync_flags>
    8676:	42 e0       	ldi	r20, 0x02	; 2
    8678:	e1 60       	ori	r30, 0x01	; 1
    867a:	e4 27       	eor	r30, r20
    867c:	e0 93 64 08 	sts	0x0864, r30	; 0x800864 <sync_flags>
    8680:	07 e0       	ldi	r16, 0x07	; 7
    8682:	00 93 36 00 	sts	0x0036, r16	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8686:	09 e0       	ldi	r16, 0x09	; 9
    8688:	00 93 81 00 	sts	0x0081, r16	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    868c:	02 e0       	ldi	r16, 0x02	; 2
    868e:	00 93 6f 00 	sts	0x006F, r16	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8692:	08 95       	ret

00008694 <romrom_e>:
    8694:	00 c0       	rjmp	.+0      	; 0x8696 <romrom_e+0x2>
    8696:	05 91       	lpm	r16, Z+
    8698:	08 b9       	out	0x08, r16	; 8
    869a:	00 c0       	rjmp	.+0      	; 0x869c <romrom_e+0x8>
    869c:	05 91       	lpm	r16, Z+
    869e:	08 b9       	out	0x08, r16	; 8
    86a0:	00 c0       	rjmp	.+0      	; 0x86a2 <romrom_e+0xe>
    86a2:	05 91       	lpm	r16, Z+
    86a4:	08 b9       	out	0x08, r16	; 8
    86a6:	00 c0       	rjmp	.+0      	; 0x86a8 <romrom_e+0x14>
    86a8:	05 91       	lpm	r16, Z+
    86aa:	08 b9       	out	0x08, r16	; 8
    86ac:	00 c0       	rjmp	.+0      	; 0x86ae <romrom_e+0x1a>
    86ae:	05 91       	lpm	r16, Z+
    86b0:	08 b9       	out	0x08, r16	; 8
    86b2:	00 c0       	rjmp	.+0      	; 0x86b4 <romrom_e+0x20>
    86b4:	05 91       	lpm	r16, Z+
    86b6:	08 b9       	out	0x08, r16	; 8
    86b8:	00 c0       	rjmp	.+0      	; 0x86ba <romrom_e+0x26>
    86ba:	05 91       	lpm	r16, Z+
    86bc:	08 b9       	out	0x08, r16	; 8
    86be:	00 00       	nop
    86c0:	05 91       	lpm	r16, Z+
    86c2:	fa 01       	movw	r30, r20
    86c4:	08 b9       	out	0x08, r16	; 8
    86c6:	56 c0       	rjmp	.+172    	; 0x8774 <romloop_px0>

000086c8 <romram_e>:
    86c8:	00 c0       	rjmp	.+0      	; 0x86ca <romram_e+0x2>
    86ca:	05 91       	lpm	r16, Z+
    86cc:	08 b9       	out	0x08, r16	; 8
    86ce:	00 c0       	rjmp	.+0      	; 0x86d0 <romram_e+0x8>
    86d0:	05 91       	lpm	r16, Z+
    86d2:	08 b9       	out	0x08, r16	; 8
    86d4:	00 c0       	rjmp	.+0      	; 0x86d6 <romram_e+0xe>
    86d6:	05 91       	lpm	r16, Z+
    86d8:	08 b9       	out	0x08, r16	; 8
    86da:	00 c0       	rjmp	.+0      	; 0x86dc <romram_e+0x14>
    86dc:	05 91       	lpm	r16, Z+
    86de:	08 b9       	out	0x08, r16	; 8
    86e0:	00 c0       	rjmp	.+0      	; 0x86e2 <romram_e+0x1a>
    86e2:	05 91       	lpm	r16, Z+
    86e4:	08 b9       	out	0x08, r16	; 8
    86e6:	00 c0       	rjmp	.+0      	; 0x86e8 <romram_e+0x20>
    86e8:	05 91       	lpm	r16, Z+
    86ea:	08 b9       	out	0x08, r16	; 8
    86ec:	00 c0       	rjmp	.+0      	; 0x86ee <romram_e+0x26>
    86ee:	05 91       	lpm	r16, Z+
    86f0:	08 b9       	out	0x08, r16	; 8
    86f2:	00 00       	nop
    86f4:	05 91       	lpm	r16, Z+
    86f6:	fa 01       	movw	r30, r20
    86f8:	08 b9       	out	0x08, r16	; 8
    86fa:	59 c0       	rjmp	.+178    	; 0x87ae <ramloop_px0>

000086fc <ramrom_e>:
    86fc:	04 91       	lpm	r16, Z
    86fe:	01 91       	ld	r16, Z+
    8700:	08 b9       	out	0x08, r16	; 8
    8702:	04 91       	lpm	r16, Z
    8704:	01 91       	ld	r16, Z+
    8706:	08 b9       	out	0x08, r16	; 8
    8708:	04 91       	lpm	r16, Z
    870a:	01 91       	ld	r16, Z+
    870c:	08 b9       	out	0x08, r16	; 8
    870e:	04 91       	lpm	r16, Z
    8710:	01 91       	ld	r16, Z+
    8712:	08 b9       	out	0x08, r16	; 8
    8714:	04 91       	lpm	r16, Z
    8716:	01 91       	ld	r16, Z+
    8718:	08 b9       	out	0x08, r16	; 8
    871a:	04 91       	lpm	r16, Z
    871c:	01 91       	ld	r16, Z+
    871e:	08 b9       	out	0x08, r16	; 8
    8720:	04 91       	lpm	r16, Z
    8722:	01 91       	ld	r16, Z+
    8724:	08 b9       	out	0x08, r16	; 8
    8726:	00 c0       	rjmp	.+0      	; 0x8728 <ramrom_e+0x2c>
    8728:	01 91       	ld	r16, Z+
    872a:	fa 01       	movw	r30, r20
    872c:	08 b9       	out	0x08, r16	; 8
    872e:	22 c0       	rjmp	.+68     	; 0x8774 <romloop_px0>

00008730 <ramram_e>:
    8730:	04 91       	lpm	r16, Z
    8732:	01 91       	ld	r16, Z+
    8734:	08 b9       	out	0x08, r16	; 8
    8736:	04 91       	lpm	r16, Z
    8738:	01 91       	ld	r16, Z+
    873a:	08 b9       	out	0x08, r16	; 8
    873c:	04 91       	lpm	r16, Z
    873e:	01 91       	ld	r16, Z+
    8740:	08 b9       	out	0x08, r16	; 8
    8742:	04 91       	lpm	r16, Z
    8744:	01 91       	ld	r16, Z+
    8746:	08 b9       	out	0x08, r16	; 8
    8748:	04 91       	lpm	r16, Z
    874a:	01 91       	ld	r16, Z+
    874c:	08 b9       	out	0x08, r16	; 8
    874e:	04 91       	lpm	r16, Z
    8750:	01 91       	ld	r16, Z+
    8752:	08 b9       	out	0x08, r16	; 8
    8754:	04 91       	lpm	r16, Z
    8756:	01 91       	ld	r16, Z+
    8758:	08 b9       	out	0x08, r16	; 8
    875a:	00 c0       	rjmp	.+0      	; 0x875c <ramram_e+0x2c>
    875c:	01 91       	ld	r16, Z+
    875e:	fa 01       	movw	r30, r20
    8760:	08 b9       	out	0x08, r16	; 8
    8762:	25 c0       	rjmp	.+74     	; 0x87ae <ramloop_px0>

00008764 <romloop>:
    8764:	05 91       	lpm	r16, Z+
    8766:	08 b9       	out	0x08, r16	; 8
    8768:	02 0c       	add	r0, r2
    876a:	00 00       	nop
    876c:	05 91       	lpm	r16, Z+
    876e:	08 b9       	out	0x08, r16	; 8
    8770:	13 1c       	adc	r1, r3
    8772:	f0 01       	movw	r30, r0

00008774 <romloop_px0>:
    8774:	05 91       	lpm	r16, Z+
    8776:	08 b9       	out	0x08, r16	; 8
    8778:	00 c0       	rjmp	.+0      	; 0x877a <romloop_px0+0x6>
    877a:	05 91       	lpm	r16, Z+
    877c:	08 b9       	out	0x08, r16	; 8
    877e:	48 81       	ld	r20, Y
    8780:	05 91       	lpm	r16, Z+
    8782:	08 b9       	out	0x08, r16	; 8
    8784:	c8 5f       	subi	r28, 0xF8	; 248
    8786:	00 00       	nop
    8788:	05 91       	lpm	r16, Z+
    878a:	08 b9       	out	0x08, r16	; 8
    878c:	4e 9d       	mul	r20, r14
    878e:	05 91       	lpm	r16, Z+
    8790:	08 b9       	out	0x08, r16	; 8
    8792:	4b 31       	cpi	r20, 0x1B	; 27
    8794:	00 00       	nop
    8796:	05 91       	lpm	r16, Z+
    8798:	08 b9       	out	0x08, r16	; 8
    879a:	20 f7       	brcc	.-56     	; 0x8764 <romloop>
    879c:	00 00       	nop
    879e:	05 91       	lpm	r16, Z+
    87a0:	08 b9       	out	0x08, r16	; 8
    87a2:	04 0c       	add	r0, r4
    87a4:	00 00       	nop
    87a6:	05 91       	lpm	r16, Z+
    87a8:	08 b9       	out	0x08, r16	; 8
    87aa:	15 1c       	adc	r1, r5
    87ac:	f0 01       	movw	r30, r0

000087ae <ramloop_px0>:
    87ae:	00 00       	nop
    87b0:	01 91       	ld	r16, Z+
    87b2:	08 b9       	out	0x08, r16	; 8
    87b4:	48 81       	ld	r20, Y
    87b6:	00 00       	nop
    87b8:	01 91       	ld	r16, Z+
    87ba:	08 b9       	out	0x08, r16	; 8
    87bc:	c8 5f       	subi	r28, 0xF8	; 248
    87be:	4e 9d       	mul	r20, r14
    87c0:	01 91       	ld	r16, Z+
    87c2:	08 b9       	out	0x08, r16	; 8
    87c4:	04 91       	lpm	r16, Z
    87c6:	01 91       	ld	r16, Z+
    87c8:	08 b9       	out	0x08, r16	; 8
    87ca:	04 91       	lpm	r16, Z
    87cc:	01 91       	ld	r16, Z+
    87ce:	08 b9       	out	0x08, r16	; 8
    87d0:	4b 31       	cpi	r20, 0x1B	; 27
    87d2:	00 c0       	rjmp	.+0      	; 0x87d4 <ramloop_px0+0x26>
    87d4:	01 91       	ld	r16, Z+
    87d6:	08 b9       	out	0x08, r16	; 8
    87d8:	50 f4       	brcc	.+20     	; 0x87ee <ramloop_tr>
    87da:	00 00       	nop
    87dc:	04 0c       	add	r0, r4
    87de:	01 91       	ld	r16, Z+
    87e0:	08 b9       	out	0x08, r16	; 8
    87e2:	15 1c       	adc	r1, r5
    87e4:	00 00       	nop
    87e6:	01 91       	ld	r16, Z+
    87e8:	f0 01       	movw	r30, r0
    87ea:	08 b9       	out	0x08, r16	; 8
    87ec:	e0 cf       	rjmp	.-64     	; 0x87ae <ramloop_px0>

000087ee <ramloop_tr>:
    87ee:	02 0c       	add	r0, r2
    87f0:	01 91       	ld	r16, Z+
    87f2:	08 b9       	out	0x08, r16	; 8
    87f4:	13 1c       	adc	r1, r3
    87f6:	00 00       	nop
    87f8:	01 91       	ld	r16, Z+
    87fa:	f0 01       	movw	r30, r0
    87fc:	08 b9       	out	0x08, r16	; 8
    87fe:	ba cf       	rjmp	.-140    	; 0x8774 <romloop_px0>

00008800 <CopyFlashTile>:
    8800:	20 e4       	ldi	r18, 0x40	; 64
    8802:	e0 91 58 08 	lds	r30, 0x0858	; 0x800858 <tile_table_lo>
    8806:	f0 91 59 08 	lds	r31, 0x0859	; 0x800859 <tile_table_hi>
    880a:	82 9f       	mul	r24, r18
    880c:	e0 0d       	add	r30, r0
    880e:	f1 1d       	adc	r31, r1
    8810:	ac e3       	ldi	r26, 0x3C	; 60
    8812:	b1 e0       	ldi	r27, 0x01	; 1
    8814:	62 9f       	mul	r22, r18
    8816:	a0 0d       	add	r26, r0
    8818:	b1 1d       	adc	r27, r1
    881a:	15 90       	lpm	r1, Z+
    881c:	1d 92       	st	X+, r1
    881e:	15 90       	lpm	r1, Z+
    8820:	1d 92       	st	X+, r1
    8822:	15 90       	lpm	r1, Z+
    8824:	1d 92       	st	X+, r1
    8826:	15 90       	lpm	r1, Z+
    8828:	1d 92       	st	X+, r1
    882a:	15 90       	lpm	r1, Z+
    882c:	1d 92       	st	X+, r1
    882e:	15 90       	lpm	r1, Z+
    8830:	1d 92       	st	X+, r1
    8832:	15 90       	lpm	r1, Z+
    8834:	1d 92       	st	X+, r1
    8836:	15 90       	lpm	r1, Z+
    8838:	1d 92       	st	X+, r1
    883a:	15 90       	lpm	r1, Z+
    883c:	1d 92       	st	X+, r1
    883e:	15 90       	lpm	r1, Z+
    8840:	1d 92       	st	X+, r1
    8842:	15 90       	lpm	r1, Z+
    8844:	1d 92       	st	X+, r1
    8846:	15 90       	lpm	r1, Z+
    8848:	1d 92       	st	X+, r1
    884a:	15 90       	lpm	r1, Z+
    884c:	1d 92       	st	X+, r1
    884e:	15 90       	lpm	r1, Z+
    8850:	1d 92       	st	X+, r1
    8852:	15 90       	lpm	r1, Z+
    8854:	1d 92       	st	X+, r1
    8856:	15 90       	lpm	r1, Z+
    8858:	1d 92       	st	X+, r1
    885a:	15 90       	lpm	r1, Z+
    885c:	1d 92       	st	X+, r1
    885e:	15 90       	lpm	r1, Z+
    8860:	1d 92       	st	X+, r1
    8862:	15 90       	lpm	r1, Z+
    8864:	1d 92       	st	X+, r1
    8866:	15 90       	lpm	r1, Z+
    8868:	1d 92       	st	X+, r1
    886a:	15 90       	lpm	r1, Z+
    886c:	1d 92       	st	X+, r1
    886e:	15 90       	lpm	r1, Z+
    8870:	1d 92       	st	X+, r1
    8872:	15 90       	lpm	r1, Z+
    8874:	1d 92       	st	X+, r1
    8876:	15 90       	lpm	r1, Z+
    8878:	1d 92       	st	X+, r1
    887a:	15 90       	lpm	r1, Z+
    887c:	1d 92       	st	X+, r1
    887e:	15 90       	lpm	r1, Z+
    8880:	1d 92       	st	X+, r1
    8882:	15 90       	lpm	r1, Z+
    8884:	1d 92       	st	X+, r1
    8886:	15 90       	lpm	r1, Z+
    8888:	1d 92       	st	X+, r1
    888a:	15 90       	lpm	r1, Z+
    888c:	1d 92       	st	X+, r1
    888e:	15 90       	lpm	r1, Z+
    8890:	1d 92       	st	X+, r1
    8892:	15 90       	lpm	r1, Z+
    8894:	1d 92       	st	X+, r1
    8896:	15 90       	lpm	r1, Z+
    8898:	1d 92       	st	X+, r1
    889a:	15 90       	lpm	r1, Z+
    889c:	1d 92       	st	X+, r1
    889e:	15 90       	lpm	r1, Z+
    88a0:	1d 92       	st	X+, r1
    88a2:	15 90       	lpm	r1, Z+
    88a4:	1d 92       	st	X+, r1
    88a6:	15 90       	lpm	r1, Z+
    88a8:	1d 92       	st	X+, r1
    88aa:	15 90       	lpm	r1, Z+
    88ac:	1d 92       	st	X+, r1
    88ae:	15 90       	lpm	r1, Z+
    88b0:	1d 92       	st	X+, r1
    88b2:	15 90       	lpm	r1, Z+
    88b4:	1d 92       	st	X+, r1
    88b6:	15 90       	lpm	r1, Z+
    88b8:	1d 92       	st	X+, r1
    88ba:	15 90       	lpm	r1, Z+
    88bc:	1d 92       	st	X+, r1
    88be:	15 90       	lpm	r1, Z+
    88c0:	1d 92       	st	X+, r1
    88c2:	15 90       	lpm	r1, Z+
    88c4:	1d 92       	st	X+, r1
    88c6:	15 90       	lpm	r1, Z+
    88c8:	1d 92       	st	X+, r1
    88ca:	15 90       	lpm	r1, Z+
    88cc:	1d 92       	st	X+, r1
    88ce:	15 90       	lpm	r1, Z+
    88d0:	1d 92       	st	X+, r1
    88d2:	15 90       	lpm	r1, Z+
    88d4:	1d 92       	st	X+, r1
    88d6:	15 90       	lpm	r1, Z+
    88d8:	1d 92       	st	X+, r1
    88da:	15 90       	lpm	r1, Z+
    88dc:	1d 92       	st	X+, r1
    88de:	15 90       	lpm	r1, Z+
    88e0:	1d 92       	st	X+, r1
    88e2:	15 90       	lpm	r1, Z+
    88e4:	1d 92       	st	X+, r1
    88e6:	15 90       	lpm	r1, Z+
    88e8:	1d 92       	st	X+, r1
    88ea:	15 90       	lpm	r1, Z+
    88ec:	1d 92       	st	X+, r1
    88ee:	15 90       	lpm	r1, Z+
    88f0:	1d 92       	st	X+, r1
    88f2:	15 90       	lpm	r1, Z+
    88f4:	1d 92       	st	X+, r1
    88f6:	15 90       	lpm	r1, Z+
    88f8:	1d 92       	st	X+, r1
    88fa:	15 90       	lpm	r1, Z+
    88fc:	1d 92       	st	X+, r1
    88fe:	15 90       	lpm	r1, Z+
    8900:	1d 92       	st	X+, r1
    8902:	15 90       	lpm	r1, Z+
    8904:	1d 92       	st	X+, r1
    8906:	15 90       	lpm	r1, Z+
    8908:	1d 92       	st	X+, r1
    890a:	15 90       	lpm	r1, Z+
    890c:	1d 92       	st	X+, r1
    890e:	15 90       	lpm	r1, Z+
    8910:	1d 92       	st	X+, r1
    8912:	15 90       	lpm	r1, Z+
    8914:	1d 92       	st	X+, r1
    8916:	15 90       	lpm	r1, Z+
    8918:	1d 92       	st	X+, r1
    891a:	11 24       	eor	r1, r1
    891c:	08 95       	ret

0000891e <CopyRamTile>:
    891e:	20 e4       	ldi	r18, 0x40	; 64
    8920:	ec e3       	ldi	r30, 0x3C	; 60
    8922:	f1 e0       	ldi	r31, 0x01	; 1
    8924:	82 9f       	mul	r24, r18
    8926:	e0 0d       	add	r30, r0
    8928:	f1 1d       	adc	r31, r1
    892a:	ac e3       	ldi	r26, 0x3C	; 60
    892c:	b1 e0       	ldi	r27, 0x01	; 1
    892e:	62 9f       	mul	r22, r18
    8930:	a0 0d       	add	r26, r0
    8932:	b1 1d       	adc	r27, r1
    8934:	11 90       	ld	r1, Z+
    8936:	1d 92       	st	X+, r1
    8938:	11 90       	ld	r1, Z+
    893a:	1d 92       	st	X+, r1
    893c:	11 90       	ld	r1, Z+
    893e:	1d 92       	st	X+, r1
    8940:	11 90       	ld	r1, Z+
    8942:	1d 92       	st	X+, r1
    8944:	11 90       	ld	r1, Z+
    8946:	1d 92       	st	X+, r1
    8948:	11 90       	ld	r1, Z+
    894a:	1d 92       	st	X+, r1
    894c:	11 90       	ld	r1, Z+
    894e:	1d 92       	st	X+, r1
    8950:	11 90       	ld	r1, Z+
    8952:	1d 92       	st	X+, r1
    8954:	11 90       	ld	r1, Z+
    8956:	1d 92       	st	X+, r1
    8958:	11 90       	ld	r1, Z+
    895a:	1d 92       	st	X+, r1
    895c:	11 90       	ld	r1, Z+
    895e:	1d 92       	st	X+, r1
    8960:	11 90       	ld	r1, Z+
    8962:	1d 92       	st	X+, r1
    8964:	11 90       	ld	r1, Z+
    8966:	1d 92       	st	X+, r1
    8968:	11 90       	ld	r1, Z+
    896a:	1d 92       	st	X+, r1
    896c:	11 90       	ld	r1, Z+
    896e:	1d 92       	st	X+, r1
    8970:	11 90       	ld	r1, Z+
    8972:	1d 92       	st	X+, r1
    8974:	11 90       	ld	r1, Z+
    8976:	1d 92       	st	X+, r1
    8978:	11 90       	ld	r1, Z+
    897a:	1d 92       	st	X+, r1
    897c:	11 90       	ld	r1, Z+
    897e:	1d 92       	st	X+, r1
    8980:	11 90       	ld	r1, Z+
    8982:	1d 92       	st	X+, r1
    8984:	11 90       	ld	r1, Z+
    8986:	1d 92       	st	X+, r1
    8988:	11 90       	ld	r1, Z+
    898a:	1d 92       	st	X+, r1
    898c:	11 90       	ld	r1, Z+
    898e:	1d 92       	st	X+, r1
    8990:	11 90       	ld	r1, Z+
    8992:	1d 92       	st	X+, r1
    8994:	11 90       	ld	r1, Z+
    8996:	1d 92       	st	X+, r1
    8998:	11 90       	ld	r1, Z+
    899a:	1d 92       	st	X+, r1
    899c:	11 90       	ld	r1, Z+
    899e:	1d 92       	st	X+, r1
    89a0:	11 90       	ld	r1, Z+
    89a2:	1d 92       	st	X+, r1
    89a4:	11 90       	ld	r1, Z+
    89a6:	1d 92       	st	X+, r1
    89a8:	11 90       	ld	r1, Z+
    89aa:	1d 92       	st	X+, r1
    89ac:	11 90       	ld	r1, Z+
    89ae:	1d 92       	st	X+, r1
    89b0:	11 90       	ld	r1, Z+
    89b2:	1d 92       	st	X+, r1
    89b4:	11 90       	ld	r1, Z+
    89b6:	1d 92       	st	X+, r1
    89b8:	11 90       	ld	r1, Z+
    89ba:	1d 92       	st	X+, r1
    89bc:	11 90       	ld	r1, Z+
    89be:	1d 92       	st	X+, r1
    89c0:	11 90       	ld	r1, Z+
    89c2:	1d 92       	st	X+, r1
    89c4:	11 90       	ld	r1, Z+
    89c6:	1d 92       	st	X+, r1
    89c8:	11 90       	ld	r1, Z+
    89ca:	1d 92       	st	X+, r1
    89cc:	11 90       	ld	r1, Z+
    89ce:	1d 92       	st	X+, r1
    89d0:	11 90       	ld	r1, Z+
    89d2:	1d 92       	st	X+, r1
    89d4:	11 90       	ld	r1, Z+
    89d6:	1d 92       	st	X+, r1
    89d8:	11 90       	ld	r1, Z+
    89da:	1d 92       	st	X+, r1
    89dc:	11 90       	ld	r1, Z+
    89de:	1d 92       	st	X+, r1
    89e0:	11 90       	ld	r1, Z+
    89e2:	1d 92       	st	X+, r1
    89e4:	11 90       	ld	r1, Z+
    89e6:	1d 92       	st	X+, r1
    89e8:	11 90       	ld	r1, Z+
    89ea:	1d 92       	st	X+, r1
    89ec:	11 90       	ld	r1, Z+
    89ee:	1d 92       	st	X+, r1
    89f0:	11 90       	ld	r1, Z+
    89f2:	1d 92       	st	X+, r1
    89f4:	11 90       	ld	r1, Z+
    89f6:	1d 92       	st	X+, r1
    89f8:	11 90       	ld	r1, Z+
    89fa:	1d 92       	st	X+, r1
    89fc:	11 90       	ld	r1, Z+
    89fe:	1d 92       	st	X+, r1
    8a00:	11 90       	ld	r1, Z+
    8a02:	1d 92       	st	X+, r1
    8a04:	11 90       	ld	r1, Z+
    8a06:	1d 92       	st	X+, r1
    8a08:	11 90       	ld	r1, Z+
    8a0a:	1d 92       	st	X+, r1
    8a0c:	11 90       	ld	r1, Z+
    8a0e:	1d 92       	st	X+, r1
    8a10:	11 90       	ld	r1, Z+
    8a12:	1d 92       	st	X+, r1
    8a14:	11 90       	ld	r1, Z+
    8a16:	1d 92       	st	X+, r1
    8a18:	11 90       	ld	r1, Z+
    8a1a:	1d 92       	st	X+, r1
    8a1c:	11 90       	ld	r1, Z+
    8a1e:	1d 92       	st	X+, r1
    8a20:	11 90       	ld	r1, Z+
    8a22:	1d 92       	st	X+, r1
    8a24:	11 90       	ld	r1, Z+
    8a26:	1d 92       	st	X+, r1
    8a28:	11 90       	ld	r1, Z+
    8a2a:	1d 92       	st	X+, r1
    8a2c:	11 90       	ld	r1, Z+
    8a2e:	1d 92       	st	X+, r1
    8a30:	11 90       	ld	r1, Z+
    8a32:	1d 92       	st	X+, r1
    8a34:	11 24       	eor	r1, r1
    8a36:	08 95       	ret

00008a38 <RestoreBackground>:
    8a38:	e0 91 4e 08 	lds	r30, 0x084E	; 0x80084e <user_ram_tiles_c>
    8a3c:	8e 2f       	mov	r24, r30
    8a3e:	ee 0f       	add	r30, r30
    8a40:	e8 0f       	add	r30, r24
    8a42:	ff 27       	eor	r31, r31
    8a44:	e4 50       	subi	r30, 0x04	; 4
    8a46:	f8 4f       	sbci	r31, 0xF8	; 248
    8a48:	00 90 4d 08 	lds	r0, 0x084D	; 0x80084d <free_tile_index>
    8a4c:	80 19       	sub	r24, r0
    8a4e:	30 f4       	brcc	.+12     	; 0x8a5c <rbg_exit>

00008a50 <rbg_loop>:
    8a50:	a1 91       	ld	r26, Z+
    8a52:	b1 91       	ld	r27, Z+
    8a54:	01 90       	ld	r0, Z+
    8a56:	0c 92       	st	X, r0
    8a58:	83 95       	inc	r24
    8a5a:	d1 f7       	brne	.-12     	; 0x8a50 <rbg_loop>

00008a5c <rbg_exit>:
    8a5c:	08 95       	ret

00008a5e <BlitSpritePart>:
    8a5e:	98 e0       	ldi	r25, 0x08	; 8
    8a60:	79 9f       	mul	r23, r25
    8a62:	a1 2d       	mov	r26, r1
    8a64:	bb 27       	eor	r27, r27
    8a66:	a0 5b       	subi	r26, 0xB0	; 176
    8a68:	b7 4f       	sbci	r27, 0xF7	; 247
    8a6a:	ed 91       	ld	r30, X+
    8a6c:	fd 91       	ld	r31, X+

00008a6e <bsp_send>:
    8a6e:	90 e4       	ldi	r25, 0x40	; 64
    8a70:	69 9f       	mul	r22, r25
    8a72:	e0 0d       	add	r30, r0
    8a74:	f1 1d       	adc	r31, r1
    8a76:	89 9f       	mul	r24, r25
    8a78:	d0 01       	movw	r26, r0
    8a7a:	a4 5c       	subi	r26, 0xC4	; 196
    8a7c:	be 4f       	sbci	r27, 0xFE	; 254
    8a7e:	90 e0       	ldi	r25, 0x00	; 0
    8a80:	40 fd       	sbrc	r20, 0
    8a82:	09 c0       	rjmp	.+18     	; 0x8a96 <x_2nd_tile>
    8a84:	82 2f       	mov	r24, r18
    8a86:	48 e0       	ldi	r20, 0x08	; 8
    8a88:	42 1b       	sub	r20, r18
    8a8a:	70 ff       	sbrs	r23, 0
    8a8c:	0a c0       	rjmp	.+20     	; 0x8aa2 <x_1st_tile_nxf>
    8a8e:	17 96       	adiw	r26, 0x07	; 7

00008a90 <x_2nd_tile_nxf>:
    8a90:	e8 0f       	add	r30, r24
    8a92:	f9 1f       	adc	r31, r25
    8a94:	08 c0       	rjmp	.+16     	; 0x8aa6 <x_check_end>

00008a96 <x_2nd_tile>:
    8a96:	88 e0       	ldi	r24, 0x08	; 8
    8a98:	82 1b       	sub	r24, r18
    8a9a:	42 2f       	mov	r20, r18
    8a9c:	70 ff       	sbrs	r23, 0
    8a9e:	f8 cf       	rjmp	.-16     	; 0x8a90 <x_2nd_tile_nxf>
    8aa0:	11 97       	sbiw	r26, 0x01	; 1

00008aa2 <x_1st_tile_nxf>:
    8aa2:	a2 0f       	add	r26, r18
    8aa4:	b9 1f       	adc	r27, r25

00008aa6 <x_check_end>:
    8aa6:	68 e0       	ldi	r22, 0x08	; 8
    8aa8:	28 e0       	ldi	r18, 0x08	; 8
    8aaa:	23 1b       	sub	r18, r19
    8aac:	50 fd       	sbrc	r21, 0
    8aae:	09 c0       	rjmp	.+18     	; 0x8ac2 <y_2nd_tile>
    8ab0:	63 9f       	mul	r22, r19
    8ab2:	a0 0d       	add	r26, r0
    8ab4:	b1 1d       	adc	r27, r1
    8ab6:	71 fd       	sbrc	r23, 1
    8ab8:	e8 5c       	subi	r30, 0xC8	; 200
    8aba:	71 fd       	sbrc	r23, 1
    8abc:	ff 4f       	sbci	r31, 0xFF	; 255
    8abe:	12 2e       	mov	r1, r18
    8ac0:	08 c0       	rjmp	.+16     	; 0x8ad2 <y_check_end>

00008ac2 <y_2nd_tile>:
    8ac2:	13 2e       	mov	r1, r19
    8ac4:	1a 94       	dec	r1
    8ac6:	71 ff       	sbrs	r23, 1
    8ac8:	12 2e       	mov	r1, r18
    8aca:	61 9d       	mul	r22, r1
    8acc:	e0 0d       	add	r30, r0
    8ace:	f1 1d       	adc	r31, r1
    8ad0:	13 2e       	mov	r1, r19

00008ad2 <y_check_end>:
    8ad2:	71 fd       	sbrc	r23, 1
    8ad4:	40 97       	sbiw	r24, 0x10	; 16
    8ad6:	70 fd       	sbrc	r23, 0
    8ad8:	05 c0       	rjmp	.+10     	; 0x8ae4 <x_diff_xf>
    8ada:	57 ef       	ldi	r21, 0xF7	; 247
    8adc:	54 0f       	add	r21, r20
    8ade:	70 e0       	ldi	r23, 0x00	; 0
    8ae0:	61 e0       	ldi	r22, 0x01	; 1
    8ae2:	04 c0       	rjmp	.+8      	; 0x8aec <x_diff_end>

00008ae4 <x_diff_xf>:
    8ae4:	59 ef       	ldi	r21, 0xF9	; 249
    8ae6:	54 1b       	sub	r21, r20
    8ae8:	7f ef       	ldi	r23, 0xFF	; 255
    8aea:	6f ef       	ldi	r22, 0xFF	; 255

00008aec <x_diff_end>:
    8aec:	3e ef       	ldi	r19, 0xFE	; 254
    8aee:	04 2e       	mov	r0, r20
    8af0:	46 95       	lsr	r20
    8af2:	30 f4       	brcc	.+12     	; 0x8b00 <x_loop1>
    8af4:	61 f0       	breq	.+24     	; 0x8b0e <x_loopx>

00008af6 <x_loop0>:
    8af6:	25 91       	lpm	r18, Z+
    8af8:	23 13       	cpse	r18, r19
    8afa:	2c 93       	st	X, r18
    8afc:	a6 0f       	add	r26, r22
    8afe:	b7 1f       	adc	r27, r23

00008b00 <x_loop1>:
    8b00:	25 91       	lpm	r18, Z+
    8b02:	23 13       	cpse	r18, r19
    8b04:	2c 93       	st	X, r18
    8b06:	a6 0f       	add	r26, r22
    8b08:	b7 1f       	adc	r27, r23
    8b0a:	41 50       	subi	r20, 0x01	; 1
    8b0c:	a1 f7       	brne	.-24     	; 0x8af6 <x_loop0>

00008b0e <x_loopx>:
    8b0e:	25 91       	lpm	r18, Z+
    8b10:	23 13       	cpse	r18, r19
    8b12:	2c 93       	st	X, r18
    8b14:	1a 94       	dec	r1
    8b16:	49 f0       	breq	.+18     	; 0x8b2a <loop_e>
    8b18:	e8 0f       	add	r30, r24
    8b1a:	f9 1f       	adc	r31, r25
    8b1c:	a5 1b       	sub	r26, r21
    8b1e:	bf 4f       	sbci	r27, 0xFF	; 255
    8b20:	40 2d       	mov	r20, r0
    8b22:	46 95       	lsr	r20
    8b24:	68 f7       	brcc	.-38     	; 0x8b00 <x_loop1>
    8b26:	39 f7       	brne	.-50     	; 0x8af6 <x_loop0>
    8b28:	f2 cf       	rjmp	.-28     	; 0x8b0e <x_loopx>

00008b2a <loop_e>:
    8b2a:	08 95       	ret

00008b2c <__vector_13>:
    8b2c:	0f 92       	push	r0
    8b2e:	1f 92       	push	r1
    8b30:	ef 93       	push	r30
    8b32:	ff 93       	push	r31
    8b34:	ff b7       	in	r31, 0x3f	; 63
    8b36:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8b3a:	ff 93       	push	r31
    8b3c:	e2 fd       	sbrc	r30, 2
    8b3e:	04 c0       	rjmp	.+8      	; 0x8b48 <__vector_13+0x1c>
    8b40:	e1 fd       	sbrc	r30, 1
    8b42:	02 c0       	rjmp	.+4      	; 0x8b48 <__vector_13+0x1c>
    8b44:	00 00       	nop
    8b46:	00 c0       	rjmp	.+0      	; 0x8b48 <__vector_13+0x1c>
    8b48:	e0 ff       	sbrs	r30, 0
    8b4a:	00 c0       	rjmp	.+0      	; 0x8b4c <__vector_13+0x20>
    8b4c:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8b50:	ea 95       	dec	r30
    8b52:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8b56:	f0 91 62 08 	lds	r31, 0x0862	; 0x800862 <sync_phase>
    8b5a:	f0 fd       	sbrc	r31, 0
    8b5c:	51 c0       	rjmp	.+162    	; 0x8c00 <sync_hsync>
    8b5e:	ec 30       	cpi	r30, 0x0C	; 12
    8b60:	98 f0       	brcs	.+38     	; 0x8b88 <sync_eq>
    8b62:	f3 e0       	ldi	r31, 0x03	; 3
    8b64:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8b68:	fd e8       	ldi	r31, 0x8D	; 141
    8b6a:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8b6e:	e0 fb       	bst	r30, 0
    8b70:	28 98       	cbi	0x05, 0	; 5
    8b72:	26 f4       	brtc	.+8      	; 0x8b7c <sync_pre_eq_no_sound_update>
    8b74:	e1 e0       	ldi	r30, 0x01	; 1
    8b76:	0e 94 88 46 	call	0x8d10	; 0x8d10 <update_sound>
    8b7a:	b2 c0       	rjmp	.+356    	; 0x8ce0 <sync_end>

00008b7c <sync_pre_eq_no_sound_update>:
    8b7c:	e5 e1       	ldi	r30, 0x15	; 21
    8b7e:	ea 95       	dec	r30
    8b80:	f1 f7       	brne	.-4      	; 0x8b7e <sync_pre_eq_no_sound_update+0x2>
    8b82:	00 00       	nop
    8b84:	28 9a       	sbi	0x05, 0	; 5
    8b86:	ac c0       	rjmp	.+344    	; 0x8ce0 <sync_end>

00008b88 <sync_eq>:
    8b88:	e6 30       	cpi	r30, 0x06	; 6
    8b8a:	08 f1       	brcs	.+66     	; 0x8bce <sync_post_eq>
    8b8c:	00 c0       	rjmp	.+0      	; 0x8b8e <sync_eq+0x6>
    8b8e:	00 c0       	rjmp	.+0      	; 0x8b90 <sync_eq+0x8>
    8b90:	28 98       	cbi	0x05, 0	; 5
    8b92:	e0 fb       	bst	r30, 0
    8b94:	e4 e0       	ldi	r30, 0x04	; 4
    8b96:	16 f4       	brtc	.+4      	; 0x8b9c <sync_eq_skip>
    8b98:	0e 94 88 46 	call	0x8d10	; 0x8d10 <update_sound>

00008b9c <sync_eq_skip>:
    8b9c:	e4 e0       	ldi	r30, 0x04	; 4
    8b9e:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    8ba2:	e6 e0       	ldi	r30, 0x06	; 6
    8ba4:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8ba8:	9b c0       	rjmp	.+310    	; 0x8ce0 <sync_end>

00008baa <__vector_14>:
    8baa:	ef 93       	push	r30
    8bac:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    8bb0:	e2 fd       	sbrc	r30, 2
    8bb2:	04 c0       	rjmp	.+8      	; 0x8bbc <__vector_14+0x12>
    8bb4:	e1 fd       	sbrc	r30, 1
    8bb6:	02 c0       	rjmp	.+4      	; 0x8bbc <__vector_14+0x12>
    8bb8:	00 00       	nop
    8bba:	00 c0       	rjmp	.+0      	; 0x8bbc <__vector_14+0x12>
    8bbc:	e0 ff       	sbrs	r30, 0
    8bbe:	00 c0       	rjmp	.+0      	; 0x8bc0 <__vector_14+0x16>
    8bc0:	e2 e0       	ldi	r30, 0x02	; 2
    8bc2:	00 00       	nop
    8bc4:	28 9a       	sbi	0x05, 0	; 5
    8bc6:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    8bca:	ef 91       	pop	r30
    8bcc:	18 95       	reti

00008bce <sync_post_eq>:
    8bce:	00 c0       	rjmp	.+0      	; 0x8bd0 <sync_post_eq+0x2>
    8bd0:	e0 fb       	bst	r30, 0
    8bd2:	28 98       	cbi	0x05, 0	; 5
    8bd4:	26 f4       	brtc	.+8      	; 0x8bde <sync_post_eq_no_sound_update>
    8bd6:	e1 e0       	ldi	r30, 0x01	; 1
    8bd8:	0e 94 88 46 	call	0x8d10	; 0x8d10 <update_sound>
    8bdc:	05 c0       	rjmp	.+10     	; 0x8be8 <sync_pre_eq_cont>

00008bde <sync_post_eq_no_sound_update>:
    8bde:	e5 e1       	ldi	r30, 0x15	; 21
    8be0:	ea 95       	dec	r30
    8be2:	f1 f7       	brne	.-4      	; 0x8be0 <sync_post_eq_no_sound_update+0x2>
    8be4:	00 00       	nop
    8be6:	28 9a       	sbi	0x05, 0	; 5

00008be8 <sync_pre_eq_cont>:
    8be8:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8bec:	e0 30       	cpi	r30, 0x00	; 0
    8bee:	09 f0       	breq	.+2      	; 0x8bf2 <sync_pre_eq_cont+0xa>
    8bf0:	77 c0       	rjmp	.+238    	; 0x8ce0 <sync_end>
    8bf2:	ed ef       	ldi	r30, 0xFD	; 253
    8bf4:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8bf8:	e1 e0       	ldi	r30, 0x01	; 1
    8bfa:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_phase>
    8bfe:	70 c0       	rjmp	.+224    	; 0x8ce0 <sync_end>

00008c00 <sync_hsync>:
    8c00:	e7 e0       	ldi	r30, 0x07	; 7
    8c02:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    8c06:	eb e1       	ldi	r30, 0x1B	; 27
    8c08:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    8c0c:	00 c0       	rjmp	.+0      	; 0x8c0e <sync_hsync+0xe>
    8c0e:	28 98       	cbi	0x05, 0	; 5
    8c10:	e2 e0       	ldi	r30, 0x02	; 2
    8c12:	00 c0       	rjmp	.+0      	; 0x8c14 <sync_hsync+0x14>
    8c14:	0e 94 88 46 	call	0x8d10	; 0x8d10 <update_sound>
    8c18:	fd ef       	ldi	r31, 0xFD	; 253
    8c1a:	00 90 69 08 	lds	r0, 0x0869	; 0x800869 <first_render_line>
    8c1e:	f0 19       	sub	r31, r0
    8c20:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8c24:	ef 17       	cp	r30, r31
    8c26:	d8 f4       	brcc	.+54     	; 0x8c5e <no_render>
    8c28:	fd ef       	ldi	r31, 0xFD	; 253
    8c2a:	00 90 69 08 	lds	r0, 0x0869	; 0x800869 <first_render_line>
    8c2e:	f0 19       	sub	r31, r0
    8c30:	00 90 6a 08 	lds	r0, 0x086A	; 0x80086a <render_lines_count>
    8c34:	f0 19       	sub	r31, r0
    8c36:	ef 17       	cp	r30, r31
    8c38:	90 f0       	brcs	.+36     	; 0x8c5e <no_render>
    8c3a:	ed e1       	ldi	r30, 0x1D	; 29
    8c3c:	ff 27       	eor	r31, r31

00008c3e <push_loop>:
    8c3e:	00 80       	ld	r0, Z
    8c40:	0f 92       	push	r0
    8c42:	ea 95       	dec	r30
    8c44:	e1 f7       	brne	.-8      	; 0x8c3e <push_loop>
    8c46:	0d e0       	ldi	r16, 0x0D	; 13
    8c48:	0a 95       	dec	r16
    8c4a:	f1 f7       	brne	.-4      	; 0x8c48 <push_loop+0xa>
    8c4c:	00 c0       	rjmp	.+0      	; 0x8c4e <push_loop+0x10>
    8c4e:	0e 94 4d 42 	call	0x849a	; 0x849a <sub_video_mode3>
    8c52:	e1 e0       	ldi	r30, 0x01	; 1
    8c54:	ff 27       	eor	r31, r31

00008c56 <pop_loop>:
    8c56:	0f 90       	pop	r0
    8c58:	01 92       	st	Z+, r0
    8c5a:	ee 31       	cpi	r30, 0x1E	; 30
    8c5c:	e0 f3       	brcs	.-8      	; 0x8c56 <pop_loop>

00008c5e <no_render>:
    8c5e:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8c62:	e0 30       	cpi	r30, 0x00	; 0
    8c64:	09 f0       	breq	.+2      	; 0x8c68 <no_render+0xa>
    8c66:	3c c0       	rjmp	.+120    	; 0x8ce0 <sync_end>
    8c68:	2f 93       	push	r18
    8c6a:	3f 93       	push	r19
    8c6c:	4f 93       	push	r20
    8c6e:	5f 93       	push	r21
    8c70:	6f 93       	push	r22
    8c72:	7f 93       	push	r23
    8c74:	8f 93       	push	r24
    8c76:	9f 93       	push	r25
    8c78:	af 93       	push	r26
    8c7a:	bf 93       	push	r27
    8c7c:	78 94       	sei
    8c7e:	11 24       	eor	r1, r1
    8c80:	ee 27       	eor	r30, r30
    8c82:	e0 93 62 08 	sts	0x0862, r30	; 0x800862 <sync_phase>
    8c86:	e2 e1       	ldi	r30, 0x12	; 18
    8c88:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8c8c:	80 91 73 08 	lds	r24, 0x0873	; 0x800873 <vsync_counter>
    8c90:	90 91 74 08 	lds	r25, 0x0874	; 0x800874 <vsync_counter+0x1>
    8c94:	01 96       	adiw	r24, 0x01	; 1
    8c96:	80 93 73 08 	sts	0x0873, r24	; 0x800873 <vsync_counter>
    8c9a:	90 93 74 08 	sts	0x0874, r25	; 0x800874 <vsync_counter+0x1>
    8c9e:	e0 91 65 08 	lds	r30, 0x0865	; 0x800865 <pre_vsync_user_callback>
    8ca2:	f0 91 66 08 	lds	r31, 0x0866	; 0x800866 <pre_vsync_user_callback+0x1>
    8ca6:	e1 15       	cp	r30, r1
    8ca8:	f1 05       	cpc	r31, r1
    8caa:	09 f0       	breq	.+2      	; 0x8cae <no_render+0x50>
    8cac:	09 95       	icall
    8cae:	0e 94 cb 47 	call	0x8f96	; 0x8f96 <ReadControllers>
    8cb2:	0e 94 9a 54 	call	0xa934	; 0xa934 <VideoModeVsync>
    8cb6:	0e 94 82 46 	call	0x8d04	; 0x8d04 <process_music>
    8cba:	11 24       	eor	r1, r1
    8cbc:	e0 91 67 08 	lds	r30, 0x0867	; 0x800867 <post_vsync_user_callback>
    8cc0:	f0 91 68 08 	lds	r31, 0x0868	; 0x800868 <post_vsync_user_callback+0x1>
    8cc4:	e1 15       	cp	r30, r1
    8cc6:	f1 05       	cpc	r31, r1
    8cc8:	09 f0       	breq	.+2      	; 0x8ccc <no_render+0x6e>
    8cca:	09 95       	icall
    8ccc:	bf 91       	pop	r27
    8cce:	af 91       	pop	r26
    8cd0:	9f 91       	pop	r25
    8cd2:	8f 91       	pop	r24
    8cd4:	7f 91       	pop	r23
    8cd6:	6f 91       	pop	r22
    8cd8:	5f 91       	pop	r21
    8cda:	4f 91       	pop	r20
    8cdc:	3f 91       	pop	r19
    8cde:	2f 91       	pop	r18

00008ce0 <sync_end>:
    8ce0:	ef 91       	pop	r30
    8ce2:	ef bf       	out	0x3f, r30	; 63
    8ce4:	ff 91       	pop	r31
    8ce6:	ef 91       	pop	r30
    8ce8:	1f 90       	pop	r1
    8cea:	0f 90       	pop	r0
    8cec:	18 95       	reti

00008cee <hsync_pulse>:
    8cee:	28 98       	cbi	0x05, 0	; 5
    8cf0:	e2 e0       	ldi	r30, 0x02	; 2
    8cf2:	00 c0       	rjmp	.+0      	; 0x8cf4 <hsync_pulse+0x6>
    8cf4:	0e 94 88 46 	call	0x8d10	; 0x8d10 <update_sound>
    8cf8:	e0 91 63 08 	lds	r30, 0x0863	; 0x800863 <sync_pulse>
    8cfc:	ea 95       	dec	r30
    8cfe:	e0 93 63 08 	sts	0x0863, r30	; 0x800863 <sync_pulse>
    8d02:	08 95       	ret

00008d04 <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    8d04:	e0 91 77 08 	lds	r30, 0x0877	; 0x800877 <sound_enabled>
    8d08:	e0 fd       	sbrc	r30, 0
    8d0a:	0e 94 40 4a 	call	0x9480	; 0x9480 <ProcessMusic>
    8d0e:	08 95       	ret

00008d10 <update_sound>:
    8d10:	2f 93       	push	r18
    8d12:	1f 93       	push	r17
    8d14:	0f 93       	push	r16
    8d16:	2e 2f       	mov	r18, r30
    8d18:	10 91 7b 08 	lds	r17, 0x087B	; 0x80087b <tr1_pos_frac>
    8d1c:	e0 91 7c 08 	lds	r30, 0x087C	; 0x80087c <tr1_pos_lo>
    8d20:	f0 91 7d 08 	lds	r31, 0x087D	; 0x80087d <tr1_pos_hi>
    8d24:	00 91 79 08 	lds	r16, 0x0879	; 0x800879 <tr1_step_lo>
    8d28:	10 0f       	add	r17, r16
    8d2a:	00 91 7a 08 	lds	r16, 0x087A	; 0x80087a <tr1_step_hi>
    8d2e:	e0 1f       	adc	r30, r16
    8d30:	04 91       	lpm	r16, Z
    8d32:	e0 93 7c 08 	sts	0x087C, r30	; 0x80087c <tr1_pos_lo>
    8d36:	10 93 7b 08 	sts	0x087B, r17	; 0x80087b <tr1_pos_frac>
    8d3a:	10 91 78 08 	lds	r17, 0x0878	; 0x800878 <mixer>
    8d3e:	01 03       	mulsu	r16, r17
    8d40:	00 08       	sbc	r0, r0
    8d42:	10 91 81 08 	lds	r17, 0x0881	; 0x800881 <tr2_pos_frac>
    8d46:	e0 91 82 08 	lds	r30, 0x0882	; 0x800882 <tr2_pos_lo>
    8d4a:	f0 91 83 08 	lds	r31, 0x0883	; 0x800883 <tr2_pos_hi>
    8d4e:	00 91 7f 08 	lds	r16, 0x087F	; 0x80087f <tr2_step_lo>
    8d52:	10 0f       	add	r17, r16
    8d54:	00 91 80 08 	lds	r16, 0x0880	; 0x800880 <tr2_step_hi>
    8d58:	e0 1f       	adc	r30, r16
    8d5a:	04 91       	lpm	r16, Z
    8d5c:	e0 93 82 08 	sts	0x0882, r30	; 0x800882 <tr2_pos_lo>
    8d60:	10 93 81 08 	sts	0x0881, r17	; 0x800881 <tr2_pos_frac>
    8d64:	f0 01       	movw	r30, r0
    8d66:	10 91 7e 08 	lds	r17, 0x087E	; 0x80087e <tr2_vol>
    8d6a:	01 03       	mulsu	r16, r17
    8d6c:	00 08       	sbc	r0, r0
    8d6e:	1f 0e       	add	r1, r31
    8d70:	10 91 87 08 	lds	r17, 0x0887	; 0x800887 <tr3_pos_frac>
    8d74:	20 fd       	sbrc	r18, 0
    8d76:	28 9a       	sbi	0x05, 0	; 5
    8d78:	0e 1e       	adc	r0, r30
    8d7a:	e0 91 88 08 	lds	r30, 0x0888	; 0x800888 <tr3_pos_lo>
    8d7e:	f0 91 89 08 	lds	r31, 0x0889	; 0x800889 <tr3_pos_hi>
    8d82:	00 91 85 08 	lds	r16, 0x0885	; 0x800885 <tr3_step_lo>
    8d86:	10 0f       	add	r17, r16
    8d88:	00 91 86 08 	lds	r16, 0x0886	; 0x800886 <tr3_step_hi>
    8d8c:	e0 1f       	adc	r30, r16
    8d8e:	04 91       	lpm	r16, Z
    8d90:	e0 93 88 08 	sts	0x0888, r30	; 0x800888 <tr3_pos_lo>
    8d94:	10 93 87 08 	sts	0x0887, r17	; 0x800887 <tr3_pos_frac>
    8d98:	f0 01       	movw	r30, r0
    8d9a:	10 91 84 08 	lds	r17, 0x0884	; 0x800884 <tr3_vol>
    8d9e:	01 03       	mulsu	r16, r17
    8da0:	00 08       	sbc	r0, r0
    8da2:	1f 0e       	add	r1, r31
    8da4:	0e 1e       	adc	r0, r30
    8da6:	00 91 8c 08 	lds	r16, 0x088C	; 0x80088c <tr4_barrel_lo>
    8daa:	10 91 8d 08 	lds	r17, 0x088D	; 0x80088d <tr4_barrel_hi>
    8dae:	f0 91 8a 08 	lds	r31, 0x088A	; 0x80088a <tr4_vol>
    8db2:	f6 95       	lsr	r31
    8db4:	88 94       	clc
    8db6:	00 fd       	sbrc	r16, 0
    8db8:	f1 95       	neg	r31
    8dba:	ee 0b       	sbc	r30, r30
    8dbc:	1f 0e       	add	r1, r31
    8dbe:	0e 1e       	adc	r0, r30
    8dc0:	e0 91 8e 08 	lds	r30, 0x088E	; 0x80088e <tr4_divider>
    8dc4:	e2 50       	subi	r30, 0x02	; 2
    8dc6:	20 f0       	brcs	.+8      	; 0x8dd0 <ch4_shift>
    8dc8:	e4 91       	lpm	r30, Z
    8dca:	e4 91       	lpm	r30, Z
    8dcc:	e4 91       	lpm	r30, Z
    8dce:	0a c0       	rjmp	.+20     	; 0x8de4 <ch4_end>

00008dd0 <ch4_shift>:
    8dd0:	e0 2f       	mov	r30, r16
    8dd2:	16 95       	lsr	r17
    8dd4:	07 95       	ror	r16
    8dd6:	e0 27       	eor	r30, r16
    8dd8:	e0 fb       	bst	r30, 0
    8dda:	16 f9       	bld	r17, 6
    8ddc:	e0 91 8b 08 	lds	r30, 0x088B	; 0x80088b <tr4_params>
    8de0:	e0 ff       	sbrs	r30, 0
    8de2:	06 f9       	bld	r16, 6

00008de4 <ch4_end>:
    8de4:	00 93 8c 08 	sts	0x088C, r16	; 0x80088c <tr4_barrel_lo>
    8de8:	10 93 8d 08 	sts	0x088D, r17	; 0x80088d <tr4_barrel_hi>
    8dec:	e0 93 8e 08 	sts	0x088E, r30	; 0x80088e <tr4_divider>
    8df0:	10 e0       	ldi	r17, 0x00	; 0
    8df2:	e0 91 93 08 	lds	r30, 0x0893	; 0x800893 <tr5_pos_frac>
    8df6:	f0 91 91 08 	lds	r31, 0x0891	; 0x800891 <tr5_step_lo>
    8dfa:	21 fd       	sbrc	r18, 1
    8dfc:	28 9a       	sbi	0x05, 0	; 5
    8dfe:	ef 0f       	add	r30, r31
    8e00:	e0 93 93 08 	sts	0x0893, r30	; 0x800893 <tr5_pos_frac>
    8e04:	e0 91 94 08 	lds	r30, 0x0894	; 0x800894 <tr5_pos_lo>
    8e08:	f0 91 95 08 	lds	r31, 0x0895	; 0x800895 <tr5_pos_hi>
    8e0c:	00 91 92 08 	lds	r16, 0x0892	; 0x800892 <tr5_step_hi>
    8e10:	e0 1f       	adc	r30, r16
    8e12:	f1 1f       	adc	r31, r17
    8e14:	00 91 98 08 	lds	r16, 0x0898	; 0x800898 <tr5_loop_end_lo>
    8e18:	10 91 99 08 	lds	r17, 0x0899	; 0x800899 <tr5_loop_end_hi>
    8e1c:	e0 17       	cp	r30, r16
    8e1e:	f1 07       	cpc	r31, r17
    8e20:	18 f4       	brcc	.+6      	; 0x8e28 <ch5_reset>
    8e22:	04 91       	lpm	r16, Z
    8e24:	00 c0       	rjmp	.+0      	; 0x8e26 <ch4_end+0x42>
    8e26:	06 c0       	rjmp	.+12     	; 0x8e34 <ch5_nores>

00008e28 <ch5_reset>:
    8e28:	00 91 96 08 	lds	r16, 0x0896	; 0x800896 <tr5_loop_len_lo>
    8e2c:	10 91 97 08 	lds	r17, 0x0897	; 0x800897 <tr5_loop_len_hi>
    8e30:	e0 1b       	sub	r30, r16
    8e32:	f1 0b       	sbc	r31, r17

00008e34 <ch5_nores>:
    8e34:	e0 93 94 08 	sts	0x0894, r30	; 0x800894 <tr5_pos_lo>
    8e38:	f0 93 95 08 	sts	0x0895, r31	; 0x800895 <tr5_pos_hi>
    8e3c:	04 91       	lpm	r16, Z
    8e3e:	f0 01       	movw	r30, r0
    8e40:	10 91 90 08 	lds	r17, 0x0890	; 0x800890 <tr5_vol>
    8e44:	01 03       	mulsu	r16, r17
    8e46:	00 08       	sbc	r0, r0
    8e48:	1f 0e       	add	r1, r31
    8e4a:	0e 1e       	adc	r0, r30
    8e4c:	f0 01       	movw	r30, r0
    8e4e:	0f 91       	pop	r16
    8e50:	1f 91       	pop	r17
    8e52:	f0 58       	subi	r31, 0x80	; 128
    8e54:	ef 4f       	sbci	r30, 0xFF	; 255
    8e56:	1a f4       	brpl	.+6      	; 0x8e5e <ch5_nores+0x2a>
    8e58:	f0 e0       	ldi	r31, 0x00	; 0
    8e5a:	00 00       	nop
    8e5c:	03 c0       	rjmp	.+6      	; 0x8e64 <ch5_nores+0x30>
    8e5e:	e0 30       	cpi	r30, 0x00	; 0
    8e60:	09 f0       	breq	.+2      	; 0x8e64 <ch5_nores+0x30>
    8e62:	ff ef       	ldi	r31, 0xFF	; 255
    8e64:	f0 93 b3 00 	sts	0x00B3, r31	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    8e68:	2f 91       	pop	r18
    8e6a:	08 95       	ret

00008e6c <SetSpritesTileTable>:
    8e6c:	80 93 50 08 	sts	0x0850, r24	; 0x800850 <sprites_tile_banks>
    8e70:	90 93 51 08 	sts	0x0851, r25	; 0x800851 <sprites_tile_banks+0x1>
    8e74:	08 95       	ret

00008e76 <ClearVram>:
    8e76:	e0 e2       	ldi	r30, 0x20	; 32
    8e78:	f4 e0       	ldi	r31, 0x04	; 4
    8e7a:	a0 e0       	ldi	r26, 0x00	; 0
    8e7c:	ba e0       	ldi	r27, 0x0A	; 10
    8e7e:	6b e1       	ldi	r22, 0x1B	; 27

00008e80 <fill_vram_loop>:
    8e80:	6d 93       	st	X+, r22
    8e82:	31 97       	sbiw	r30, 0x01	; 1
    8e84:	e9 f7       	brne	.-6      	; 0x8e80 <fill_vram_loop>
    8e86:	11 24       	eor	r1, r1
    8e88:	08 95       	ret

00008e8a <SetTile>:
    8e8a:	8f 71       	andi	r24, 0x1F	; 31
    8e8c:	76 2f       	mov	r23, r22
    8e8e:	66 95       	lsr	r22
    8e90:	66 95       	lsr	r22
    8e92:	66 95       	lsr	r22
    8e94:	28 e0       	ldi	r18, 0x08	; 8
    8e96:	82 9f       	mul	r24, r18
    8e98:	d0 01       	movw	r26, r0
    8e9a:	a0 50       	subi	r26, 0x00	; 0
    8e9c:	b6 4f       	sbci	r27, 0xF6	; 246
    8e9e:	b6 0f       	add	r27, r22
    8ea0:	77 70       	andi	r23, 0x07	; 7
    8ea2:	a7 0f       	add	r26, r23
    8ea4:	45 5e       	subi	r20, 0xE5	; 229
    8ea6:	4c 93       	st	X, r20
    8ea8:	11 24       	eor	r1, r1
    8eaa:	08 95       	ret

00008eac <SetTileTable>:
    8eac:	80 93 58 08 	sts	0x0858, r24	; 0x800858 <tile_table_lo>
    8eb0:	90 93 59 08 	sts	0x0859, r25	; 0x800859 <tile_table_hi>
    8eb4:	08 95       	ret

00008eb6 <GetVsyncFlag>:
    8eb6:	80 91 64 08 	lds	r24, 0x0864	; 0x800864 <sync_flags>
    8eba:	81 70       	andi	r24, 0x01	; 1
    8ebc:	08 95       	ret

00008ebe <ClearVsyncFlag>:
    8ebe:	20 91 64 08 	lds	r18, 0x0864	; 0x800864 <sync_flags>
    8ec2:	2e 7f       	andi	r18, 0xFE	; 254
    8ec4:	20 93 64 08 	sts	0x0864, r18	; 0x800864 <sync_flags>
    8ec8:	08 95       	ret

00008eca <ReadJoypad>:
    8eca:	88 23       	and	r24, r24
    8ecc:	29 f4       	brne	.+10     	; 0x8ed8 <rj_p2>
    8ece:	80 91 6b 08 	lds	r24, 0x086B	; 0x80086b <joypad1_status_lo>
    8ed2:	90 91 6c 08 	lds	r25, 0x086C	; 0x80086c <joypad1_status_lo+0x1>
    8ed6:	08 95       	ret

00008ed8 <rj_p2>:
    8ed8:	80 91 6f 08 	lds	r24, 0x086F	; 0x80086f <joypad2_status_lo>
    8edc:	90 91 70 08 	lds	r25, 0x0870	; 0x800870 <joypad2_status_lo+0x1>
    8ee0:	08 95       	ret

00008ee2 <SoftReset>:
    8ee2:	e0 e6       	ldi	r30, 0x60	; 96
    8ee4:	f0 e0       	ldi	r31, 0x00	; 0
    8ee6:	80 81       	ld	r24, Z
    8ee8:	83 fd       	sbrc	r24, 3
    8eea:	08 95       	ret
    8eec:	88 e1       	ldi	r24, 0x18	; 24
    8eee:	98 e0       	ldi	r25, 0x08	; 8
    8ef0:	f8 94       	cli
    8ef2:	80 83       	st	Z, r24
    8ef4:	90 83       	st	Z, r25
    8ef6:	78 94       	sei
    8ef8:	ff cf       	rjmp	.-2      	; 0x8ef8 <SoftReset+0x16>

00008efa <WriteEeprom>:
    8efa:	f9 99       	sbic	0x1f, 1	; 31
    8efc:	fe cf       	rjmp	.-4      	; 0x8efa <WriteEeprom>
    8efe:	92 bd       	out	0x22, r25	; 34
    8f00:	81 bd       	out	0x21, r24	; 33
    8f02:	60 bd       	out	0x20, r22	; 32
    8f04:	f8 94       	cli
    8f06:	fa 9a       	sbi	0x1f, 2	; 31
    8f08:	f9 9a       	sbi	0x1f, 1	; 31
    8f0a:	78 94       	sei
    8f0c:	08 95       	ret

00008f0e <ReadEeprom>:
    8f0e:	f9 99       	sbic	0x1f, 1	; 31
    8f10:	fe cf       	rjmp	.-4      	; 0x8f0e <ReadEeprom>
    8f12:	92 bd       	out	0x22, r25	; 34
    8f14:	81 bd       	out	0x21, r24	; 33
    8f16:	f8 94       	cli
    8f18:	f8 9a       	sbi	0x1f, 0	; 31
    8f1a:	80 b5       	in	r24, 0x20	; 32
    8f1c:	78 94       	sei
    8f1e:	08 95       	ret

00008f20 <SetUserPostVsyncCallback>:
; C callable
; r25:r24 - pointer to C function: void ptr*(void)
;****************************
.section .text.SetUserPostVsyncCallback
SetUserPostVsyncCallback:
	sts post_vsync_user_callback+0,r24
    8f20:	80 93 67 08 	sts	0x0867, r24	; 0x800867 <post_vsync_user_callback>
	sts post_vsync_user_callback+1,r25
    8f24:	90 93 68 08 	sts	0x0868, r25	; 0x800868 <post_vsync_user_callback+0x1>
	ret
    8f28:	08 95       	ret

00008f2a <ReadButtons>:
    8f2a:	12 9a       	sbi	0x02, 2	; 2
    8f2c:	c8 95       	lpm
    8f2e:	c8 95       	lpm
    8f30:	c8 95       	lpm
    8f32:	c8 95       	lpm
    8f34:	12 98       	cbi	0x02, 2	; 2
    8f36:	40 e1       	ldi	r20, 0x10	; 16
    8f38:	80 e0       	ldi	r24, 0x00	; 0
    8f3a:	90 e0       	ldi	r25, 0x00	; 0
    8f3c:	20 e0       	ldi	r18, 0x00	; 0
    8f3e:	30 e0       	ldi	r19, 0x00	; 0
    8f40:	36 95       	lsr	r19
    8f42:	27 95       	ror	r18
    8f44:	96 95       	lsr	r25
    8f46:	87 95       	ror	r24
    8f48:	c8 95       	lpm
    8f4a:	c8 95       	lpm
    8f4c:	c8 95       	lpm
    8f4e:	c8 95       	lpm
    8f50:	13 98       	cbi	0x02, 3	; 2
    8f52:	00 9b       	sbis	0x00, 0	; 0
    8f54:	30 68       	ori	r19, 0x80	; 128
    8f56:	01 9b       	sbis	0x00, 1	; 0
    8f58:	90 68       	ori	r25, 0x80	; 128
    8f5a:	13 9a       	sbi	0x02, 3	; 2
    8f5c:	c8 95       	lpm
    8f5e:	c8 95       	lpm
    8f60:	c8 95       	lpm
    8f62:	c8 95       	lpm
    8f64:	41 50       	subi	r20, 0x01	; 1
    8f66:	61 f7       	brne	.-40     	; 0x8f40 <ReadButtons+0x16>
    8f68:	30 93 6c 08 	sts	0x086C, r19	; 0x80086c <joypad1_status_lo+0x1>
    8f6c:	20 93 6b 08 	sts	0x086B, r18	; 0x80086b <joypad1_status_lo>
    8f70:	90 93 70 08 	sts	0x0870, r25	; 0x800870 <joypad2_status_lo+0x1>
    8f74:	80 93 6f 08 	sts	0x086F, r24	; 0x80086f <joypad2_status_lo>
    8f78:	80 91 6b 08 	lds	r24, 0x086B	; 0x80086b <joypad1_status_lo>
    8f7c:	90 91 6c 08 	lds	r25, 0x086C	; 0x80086c <joypad1_status_lo+0x1>
    8f80:	0f 97       	sbiw	r24, 0x0f	; 15
    8f82:	31 f0       	breq	.+12     	; 0x8f90 <ReadButtons+0x66>
    8f84:	80 91 6f 08 	lds	r24, 0x086F	; 0x80086f <joypad2_status_lo>
    8f88:	90 91 70 08 	lds	r25, 0x0870	; 0x800870 <joypad2_status_lo+0x1>
    8f8c:	0f 97       	sbiw	r24, 0x0f	; 15
    8f8e:	11 f4       	brne	.+4      	; 0x8f94 <ReadButtons+0x6a>
    8f90:	0c 94 71 47 	jmp	0x8ee2	; 0x8ee2 <SoftReset>
    8f94:	08 95       	ret

00008f96 <ReadControllers>:
    8f96:	10 92 9c 08 	sts	0x089C, r1	; 0x80089c <joypadsConnectionStatus>
    8f9a:	00 99       	sbic	0x00, 0	; 0
    8f9c:	03 c0       	rjmp	.+6      	; 0x8fa4 <ReadControllers+0xe>
    8f9e:	81 e0       	ldi	r24, 0x01	; 1
    8fa0:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    8fa4:	01 99       	sbic	0x00, 1	; 0
    8fa6:	05 c0       	rjmp	.+10     	; 0x8fb2 <ReadControllers+0x1c>
    8fa8:	80 91 9c 08 	lds	r24, 0x089C	; 0x80089c <joypadsConnectionStatus>
    8fac:	82 60       	ori	r24, 0x02	; 2
    8fae:	80 93 9c 08 	sts	0x089C, r24	; 0x80089c <joypadsConnectionStatus>
    8fb2:	0c 94 95 47 	jmp	0x8f2a	; 0x8f2a <ReadButtons>

00008fb6 <FormatEeprom>:
    8fb6:	cf 93       	push	r28
    8fb8:	df 93       	push	r29
    8fba:	c0 e0       	ldi	r28, 0x00	; 0
    8fbc:	d0 e0       	ldi	r29, 0x00	; 0
    8fbe:	fe 01       	movw	r30, r28
    8fc0:	ee 55       	subi	r30, 0x5E	; 94
    8fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    8fc4:	64 91       	lpm	r22, Z
    8fc6:	ce 01       	movw	r24, r28
    8fc8:	0e 94 7d 47 	call	0x8efa	; 0x8efa <WriteEeprom>
    8fcc:	21 96       	adiw	r28, 0x01	; 1
    8fce:	c0 32       	cpi	r28, 0x20	; 32
    8fd0:	d1 05       	cpc	r29, r1
    8fd2:	a9 f7       	brne	.-22     	; 0x8fbe <FormatEeprom+0x8>
    8fd4:	c0 e2       	ldi	r28, 0x20	; 32
    8fd6:	d0 e0       	ldi	r29, 0x00	; 0
    8fd8:	6f ef       	ldi	r22, 0xFF	; 255
    8fda:	ce 01       	movw	r24, r28
    8fdc:	0e 94 7d 47 	call	0x8efa	; 0x8efa <WriteEeprom>
    8fe0:	6f ef       	ldi	r22, 0xFF	; 255
    8fe2:	ce 01       	movw	r24, r28
    8fe4:	01 96       	adiw	r24, 0x01	; 1
    8fe6:	0e 94 7d 47 	call	0x8efa	; 0x8efa <WriteEeprom>
    8fea:	a0 96       	adiw	r28, 0x20	; 32
    8fec:	c1 15       	cp	r28, r1
    8fee:	88 e0       	ldi	r24, 0x08	; 8
    8ff0:	d8 07       	cpc	r29, r24
    8ff2:	91 f7       	brne	.-28     	; 0x8fd8 <FormatEeprom+0x22>
    8ff4:	df 91       	pop	r29
    8ff6:	cf 91       	pop	r28
    8ff8:	08 95       	ret

00008ffa <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    8ffa:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    8ffc:	80 e0       	ldi	r24, 0x00	; 0
    8ffe:	90 e0       	ldi	r25, 0x00	; 0
    9000:	0e 94 87 47 	call	0x8f0e	; 0x8f0e <ReadEeprom>
    9004:	c8 2f       	mov	r28, r24
    9006:	81 e0       	ldi	r24, 0x01	; 1
    9008:	90 e0       	ldi	r25, 0x00	; 0
    900a:	0e 94 87 47 	call	0x8f0e	; 0x8f0e <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    900e:	28 2f       	mov	r18, r24
    9010:	30 e0       	ldi	r19, 0x00	; 0
    9012:	32 2f       	mov	r19, r18
    9014:	22 27       	eor	r18, r18
    9016:	2c 0f       	add	r18, r28
    9018:	31 1d       	adc	r19, r1
    901a:	81 e0       	ldi	r24, 0x01	; 1
    901c:	2a 35       	cpi	r18, 0x5A	; 90
    901e:	35 45       	sbci	r19, 0x55	; 85
    9020:	09 f0       	breq	.+2      	; 0x9024 <isEepromFormatted+0x2a>
    9022:	80 e0       	ldi	r24, 0x00	; 0
}
    9024:	cf 91       	pop	r28
    9026:	08 95       	ret

00009028 <PatchCommand00>:
	songSpeed = speed;
}

u8 GetSongSpeed(){
	return songSpeed;
}
    9028:	fc 01       	movw	r30, r24
    902a:	67 87       	std	Z+15, r22	; 0x0f
    902c:	08 95       	ret

0000902e <PatchCommand01>:
    902e:	e8 e7       	ldi	r30, 0x78	; 120
    9030:	f8 e0       	ldi	r31, 0x08	; 8
    9032:	81 e0       	ldi	r24, 0x01	; 1
    9034:	91 e0       	ldi	r25, 0x01	; 1
    9036:	95 8b       	std	Z+21, r25	; 0x15
    9038:	84 8b       	std	Z+20, r24	; 0x14
    903a:	63 8b       	std	Z+19, r22	; 0x13
    903c:	08 95       	ret

0000903e <PatchCommand05>:
    903e:	fc 01       	movw	r30, r24
    9040:	90 81       	ld	r25, Z
    9042:	9f 75       	andi	r25, 0x5F	; 95
    9044:	90 83       	st	Z, r25
    9046:	08 95       	ret

00009048 <PatchCommand06>:
    9048:	fc 01       	movw	r30, r24
    904a:	90 81       	ld	r25, Z
    904c:	90 64       	ori	r25, 0x40	; 64
    904e:	90 83       	st	Z, r25
    9050:	08 95       	ret

00009052 <PatchCommand07>:
    9052:	fc 01       	movw	r30, r24
    9054:	66 87       	std	Z+14, r22	; 0x0e
    9056:	08 95       	ret

00009058 <PatchCommand09>:
    9058:	fc 01       	movw	r30, r24
    905a:	62 87       	std	Z+10, r22	; 0x0a
    905c:	08 95       	ret

0000905e <PatchCommand10>:
    905e:	fc 01       	movw	r30, r24
    9060:	63 87       	std	Z+11, r22	; 0x0b
    9062:	08 95       	ret

00009064 <PatchCommand11>:
    9064:	cf 93       	push	r28
    9066:	df 93       	push	r29
    9068:	ec 01       	movw	r28, r24
    906a:	26 2f       	mov	r18, r22
    906c:	89 81       	ldd	r24, Y+1	; 0x01
    906e:	90 e0       	ldi	r25, 0x00	; 0
    9070:	fc 01       	movw	r30, r24
    9072:	ee 0f       	add	r30, r30
    9074:	ff 1f       	adc	r31, r31
    9076:	e6 56       	subi	r30, 0x66	; 102
    9078:	f7 46       	sbci	r31, 0x67	; 103
    907a:	45 91       	lpm	r20, Z+
    907c:	54 91       	lpm	r21, Z
    907e:	fc 01       	movw	r30, r24
    9080:	e6 0f       	add	r30, r22
    9082:	f1 1d       	adc	r31, r1
    9084:	67 fd       	sbrc	r22, 7
    9086:	fa 95       	dec	r31
    9088:	ee 0f       	add	r30, r30
    908a:	ff 1f       	adc	r31, r31
    908c:	e6 56       	subi	r30, 0x66	; 102
    908e:	f7 46       	sbci	r31, 0x67	; 103
    9090:	85 91       	lpm	r24, Z+
    9092:	94 91       	lpm	r25, Z
    9094:	84 1b       	sub	r24, r20
    9096:	95 0b       	sbc	r25, r21
    9098:	68 85       	ldd	r22, Y+8	; 0x08
    909a:	70 e0       	ldi	r23, 0x00	; 0
    909c:	0e 94 6e 6c 	call	0xd8dc	; 0xd8dc <__divmodhi4>
    90a0:	61 15       	cp	r22, r1
    90a2:	71 05       	cpc	r23, r1
    90a4:	11 f4       	brne	.+4      	; 0x90aa <PatchCommand11+0x46>
    90a6:	61 e0       	ldi	r22, 0x01	; 1
    90a8:	70 e0       	ldi	r23, 0x00	; 0
    90aa:	ea 81       	ldd	r30, Y+2	; 0x02
    90ac:	86 e0       	ldi	r24, 0x06	; 6
    90ae:	e8 9f       	mul	r30, r24
    90b0:	f0 01       	movw	r30, r0
    90b2:	11 24       	eor	r1, r1
    90b4:	e8 58       	subi	r30, 0x88	; 136
    90b6:	f7 4f       	sbci	r31, 0xF7	; 247
    90b8:	81 81       	ldd	r24, Z+1	; 0x01
    90ba:	92 81       	ldd	r25, Z+2	; 0x02
    90bc:	86 0f       	add	r24, r22
    90be:	97 1f       	adc	r25, r23
    90c0:	92 83       	std	Z+2, r25	; 0x02
    90c2:	81 83       	std	Z+1, r24	; 0x01
    90c4:	7e 83       	std	Y+6, r23	; 0x06
    90c6:	6d 83       	std	Y+5, r22	; 0x05
    90c8:	88 81       	ld	r24, Y
    90ca:	88 60       	ori	r24, 0x08	; 8
    90cc:	88 83       	st	Y, r24
    90ce:	89 81       	ldd	r24, Y+1	; 0x01
    90d0:	28 0f       	add	r18, r24
    90d2:	2f 83       	std	Y+7, r18	; 0x07
    90d4:	df 91       	pop	r29
    90d6:	cf 91       	pop	r28
    90d8:	08 95       	ret

000090da <PatchCommand12>:
    90da:	fc 01       	movw	r30, r24
    90dc:	60 87       	std	Z+8, r22	; 0x08
    90de:	08 95       	ret

000090e0 <PatchCommand13>:
    90e0:	fc 01       	movw	r30, r24
    90e2:	64 83       	std	Z+4, r22	; 0x04
    90e4:	08 95       	ret

000090e6 <PatchCommand02>:
    90e6:	fc 01       	movw	r30, r24
    90e8:	82 81       	ldd	r24, Z+2	; 0x02
    90ea:	0c 94 30 4c 	jmp	0x9860	; 0x9860 <SetMixerWave>

000090ee <PatchCommand03>:
    90ee:	fc 01       	movw	r30, r24
    90f0:	91 81       	ldd	r25, Z+1	; 0x01
    90f2:	69 0f       	add	r22, r25
    90f4:	61 83       	std	Z+1, r22	; 0x01
    90f6:	82 81       	ldd	r24, Z+2	; 0x02
    90f8:	0c 94 19 4c 	jmp	0x9832	; 0x9832 <SetMixerNote>

000090fc <PatchCommand04>:
    90fc:	fc 01       	movw	r30, r24
    90fe:	91 81       	ldd	r25, Z+1	; 0x01
    9100:	96 1b       	sub	r25, r22
    9102:	69 2f       	mov	r22, r25
    9104:	91 83       	std	Z+1, r25	; 0x01
    9106:	82 81       	ldd	r24, Z+2	; 0x02
    9108:	0c 94 19 4c 	jmp	0x9832	; 0x9832 <SetMixerNote>

0000910c <PatchCommand08>:
    910c:	1f 93       	push	r17
    910e:	cf 93       	push	r28
    9110:	df 93       	push	r29
    9112:	ec 01       	movw	r28, r24
    9114:	16 2f       	mov	r17, r22
    9116:	8a 81       	ldd	r24, Y+2	; 0x02
    9118:	0e 94 19 4c 	call	0x9832	; 0x9832 <SetMixerNote>
    911c:	19 83       	std	Y+1, r17	; 0x01
    911e:	88 81       	ld	r24, Y
    9120:	87 7f       	andi	r24, 0xF7	; 247
    9122:	88 83       	st	Y, r24
    9124:	df 91       	pop	r29
    9126:	cf 91       	pop	r28
    9128:	1f 91       	pop	r17
    912a:	08 95       	ret

0000912c <PatchCommand14>:
    912c:	dc 01       	movw	r26, r24
    912e:	14 96       	adiw	r26, 0x04	; 4
    9130:	8c 91       	ld	r24, X
    9132:	14 97       	sbiw	r26, 0x04	; 4
    9134:	88 23       	and	r24, r24
    9136:	19 f1       	breq	.+70     	; 0x917e <PatchCommand14+0x52>
    9138:	55 96       	adiw	r26, 0x15	; 21
    913a:	2d 91       	ld	r18, X+
    913c:	3c 91       	ld	r19, X
    913e:	56 97       	sbiw	r26, 0x16	; 22
    9140:	66 23       	and	r22, r22
    9142:	79 f0       	breq	.+30     	; 0x9162 <PatchCommand14+0x36>
    9144:	06 2e       	mov	r0, r22
    9146:	00 0c       	add	r0, r0
    9148:	77 0b       	sbc	r23, r23
    914a:	6f 5f       	subi	r22, 0xFF	; 255
    914c:	7f 4f       	sbci	r23, 0xFF	; 255
    914e:	ab 01       	movw	r20, r22
    9150:	44 0f       	add	r20, r20
    9152:	55 1f       	adc	r21, r21
    9154:	64 0f       	add	r22, r20
    9156:	75 1f       	adc	r23, r21
    9158:	26 1b       	sub	r18, r22
    915a:	37 0b       	sbc	r19, r23
    915c:	09 c0       	rjmp	.+18     	; 0x9170 <PatchCommand14+0x44>
    915e:	ef 3f       	cpi	r30, 0xFF	; 255
    9160:	39 f0       	breq	.+14     	; 0x9170 <PatchCommand14+0x44>
    9162:	23 50       	subi	r18, 0x03	; 3
    9164:	31 09       	sbc	r19, r1
    9166:	f9 01       	movw	r30, r18
    9168:	32 97       	sbiw	r30, 0x02	; 2
    916a:	e4 91       	lpm	r30, Z
    916c:	ed 30       	cpi	r30, 0x0D	; 13
    916e:	b9 f7       	brne	.-18     	; 0x915e <PatchCommand14+0x32>
    9170:	56 96       	adiw	r26, 0x16	; 22
    9172:	3c 93       	st	X, r19
    9174:	2e 93       	st	-X, r18
    9176:	55 97       	sbiw	r26, 0x15	; 21
    9178:	81 50       	subi	r24, 0x01	; 1
    917a:	14 96       	adiw	r26, 0x04	; 4
    917c:	8c 93       	st	X, r24
    917e:	08 95       	ret

00009180 <InitMusicPlayer>:
    9180:	90 93 15 09 	sts	0x0915, r25	; 0x800915 <patchPointers+0x1>
    9184:	80 93 14 09 	sts	0x0914, r24	; 0x800914 <patchPointers>
    9188:	8f e6       	ldi	r24, 0x6F	; 111
    918a:	80 93 17 09 	sts	0x0917, r24	; 0x800917 <masterVolume>
    918e:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
    9192:	ef e9       	ldi	r30, 0x9F	; 159
    9194:	f8 e0       	ldi	r31, 0x08	; 8
    9196:	80 e0       	ldi	r24, 0x00	; 0
    9198:	90 e1       	ldi	r25, 0x10	; 16
    919a:	3f ef       	ldi	r19, 0xFF	; 255
    919c:	28 e1       	ldi	r18, 0x18	; 24
    919e:	82 83       	std	Z+2, r24	; 0x02
    91a0:	90 83       	st	Z, r25
    91a2:	15 86       	std	Z+13, r1	; 0x0d
    91a4:	34 87       	std	Z+12, r19	; 0x0c
    91a6:	10 8a       	std	Z+16, r1	; 0x10
    91a8:	23 87       	std	Z+11, r18	; 0x0b
    91aa:	90 87       	std	Z+8, r25	; 0x08
    91ac:	8f 5f       	subi	r24, 0xFF	; 255
    91ae:	77 96       	adiw	r30, 0x17	; 23
    91b0:	85 30       	cpi	r24, 0x05	; 5
    91b2:	a9 f7       	brne	.-22     	; 0x919e <InitMusicPlayer+0x1e>
    91b4:	08 95       	ret

000091b6 <StartSong>:
    91b6:	ef e9       	ldi	r30, 0x9F	; 159
    91b8:	f8 e0       	ldi	r31, 0x08	; 8
    91ba:	3f ef       	ldi	r19, 0xFF	; 255
    91bc:	20 81       	ld	r18, Z
    91be:	2f 77       	andi	r18, 0x7F	; 127
    91c0:	20 83       	st	Z, r18
    91c2:	33 83       	std	Z+3, r19	; 0x03
    91c4:	77 96       	adiw	r30, 0x17	; 23
    91c6:	29 e0       	ldi	r18, 0x09	; 9
    91c8:	e2 31       	cpi	r30, 0x12	; 18
    91ca:	f2 07       	cpc	r31, r18
    91cc:	b9 f7       	brne	.-18     	; 0x91bc <StartSong+0x6>
    91ce:	01 96       	adiw	r24, 0x01	; 1
    91d0:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    91d4:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    91d8:	90 93 9e 08 	sts	0x089E, r25	; 0x80089e <songStart+0x1>
    91dc:	80 93 9d 08 	sts	0x089D, r24	; 0x80089d <songStart>
    91e0:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    91e4:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    91e8:	10 92 19 09 	sts	0x0919, r1	; 0x800919 <nextDeltaTime+0x1>
    91ec:	10 92 18 09 	sts	0x0918, r1	; 0x800918 <nextDeltaTime>
    91f0:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    91f4:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    91f8:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <songSpeed>
    91fc:	10 92 16 09 	sts	0x0916, r1	; 0x800916 <lastStatus>
    9200:	81 e0       	ldi	r24, 0x01	; 1
    9202:	80 93 76 08 	sts	0x0876, r24	; 0x800876 <playSong>
    9206:	08 95       	ret

00009208 <StopSong>:
    9208:	ef e9       	ldi	r30, 0x9F	; 159
    920a:	f8 e0       	ldi	r31, 0x08	; 8
    920c:	8a ef       	ldi	r24, 0xFA	; 250
    920e:	87 87       	std	Z+15, r24	; 0x0f
    9210:	86 a3       	std	Z+38, r24	; 0x26
    9212:	85 af       	std	Z+61, r24	; 0x3d
    9214:	80 93 f3 08 	sts	0x08F3, r24	; 0x8008f3 <tracks+0x54>
    9218:	80 93 0a 09 	sts	0x090A, r24	; 0x80090a <tracks+0x6b>
    921c:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
    9220:	08 95       	ret

00009222 <ReadVarLen>:


#if MUSIC_ENGINE == MIDI

unsigned int ReadVarLen(const char **songPos)
{
    9222:	dc 01       	movw	r26, r24
    unsigned int value;
    unsigned char c;


    if ( (value = pgm_read_byte((*songPos)++)) & 0x80 )
    9224:	ed 91       	ld	r30, X+
    9226:	fc 91       	ld	r31, X
    9228:	11 97       	sbiw	r26, 0x01	; 1
    922a:	9f 01       	movw	r18, r30
    922c:	2f 5f       	subi	r18, 0xFF	; 255
    922e:	3f 4f       	sbci	r19, 0xFF	; 255
    9230:	11 96       	adiw	r26, 0x01	; 1
    9232:	3c 93       	st	X, r19
    9234:	2e 93       	st	-X, r18
    9236:	e4 91       	lpm	r30, Z
    9238:	e7 fd       	sbrc	r30, 7
    923a:	03 c0       	rjmp	.+6      	; 0x9242 <ReadVarLen+0x20>
    923c:	8e 2f       	mov	r24, r30
    923e:	90 e0       	ldi	r25, 0x00	; 0
    9240:	08 95       	ret
    {
       value &= 0x7F;
    9242:	ef 77       	andi	r30, 0x7F	; 127
    9244:	8e 2f       	mov	r24, r30
    9246:	90 e0       	ldi	r25, 0x00	; 0
       do
       {
         value = (value << 7) + ((c = pgm_read_byte((*songPos)++)) & 0x7F);
    9248:	96 95       	lsr	r25
    924a:	98 2f       	mov	r25, r24
    924c:	88 27       	eor	r24, r24
    924e:	97 95       	ror	r25
    9250:	87 95       	ror	r24
    9252:	2f 5f       	subi	r18, 0xFF	; 255
    9254:	3f 4f       	sbci	r19, 0xFF	; 255
    9256:	f9 01       	movw	r30, r18
    9258:	31 97       	sbiw	r30, 0x01	; 1
    925a:	e4 91       	lpm	r30, Z
    925c:	4e 2f       	mov	r20, r30
    925e:	4f 77       	andi	r20, 0x7F	; 127
    9260:	84 0f       	add	r24, r20
    9262:	91 1d       	adc	r25, r1
       } while (c & 0x80);
    9264:	e7 fd       	sbrc	r30, 7
    9266:	f0 cf       	rjmp	.-32     	; 0x9248 <ReadVarLen+0x26>
    9268:	2d 93       	st	X+, r18
    926a:	3c 93       	st	X, r19
    }


    return value;
}
    926c:	08 95       	ret

0000926e <TriggerCommon>:
#endif




void TriggerCommon(Track* track,u8 patch,u8 volume,u8 note){
    926e:	ff 92       	push	r15
    9270:	0f 93       	push	r16
    9272:	1f 93       	push	r17
    9274:	cf 93       	push	r28
    9276:	df 93       	push	r29
    9278:	ec 01       	movw	r28, r24
    927a:	16 2f       	mov	r17, r22
    927c:	02 2f       	mov	r16, r18
		
	bool isFx = (track->flags&TRACK_FLAGS_PRIORITY);
    927e:	88 81       	ld	r24, Y
    9280:	28 2f       	mov	r18, r24
    9282:	20 78       	andi	r18, 0x80	; 128
    9284:	f2 2e       	mov	r15, r18

	track->envelopeStep=0; 
    9286:	1f 86       	std	Y+15, r1	; 0x0f
	track->envelopeVol=0xff; 
    9288:	9f ef       	ldi	r25, 0xFF	; 255
    928a:	9e 87       	std	Y+14, r25	; 0x0e
	track->noteVol=volume;
    928c:	4d 87       	std	Y+13, r20	; 0x0d
	track->patchPlayingTime=0;
    928e:	1c 8a       	std	Y+20, r1	; 0x14
	track->flags&=(~(TRACK_FLAGS_HOLD_ENV|TRACK_FLAGS_SLIDING));
    9290:	87 7b       	andi	r24, 0xB7	; 183
    9292:	88 83       	st	Y, r24
	track->tremoloLevel=0;
    9294:	1a 86       	std	Y+10, r1	; 0x0a
	track->tremoloPos=0;
    9296:	19 86       	std	Y+9, r1	; 0x09
	track->note=note;
    9298:	09 83       	std	Y+1, r16	; 0x01
	track->loopCount=0;
    929a:	1c 82       	std	Y+4, r1	; 0x04

#if MUSIC_ENGINE == MIDI || MUSIC_ENGINE == STREAM
	track->expressionVol=DEFAULT_EXPRESSION_VOL;
    929c:	9b 83       	std	Y+3, r25	; 0x03
#endif

	#if SOUND_MIXER == MIXER_TYPE_INLINE

		if(track->channel==3){
    929e:	8a 81       	ldd	r24, Y+2	; 0x02
    92a0:	83 30       	cpi	r24, 0x03	; 3
    92a2:	69 f4       	brne	.+26     	; 0x92be <TriggerCommon+0x50>
			//noise channel		
			if(!isFx) patch=note;			
    92a4:	21 11       	cpse	r18, r1
    92a6:	01 c0       	rjmp	.+2      	; 0x92aa <TriggerCommon+0x3c>
    92a8:	10 2f       	mov	r17, r16
			mixer.channels.type.noise.barrel=0x0101;				
    92aa:	81 e0       	ldi	r24, 0x01	; 1
    92ac:	91 e0       	ldi	r25, 0x01	; 1
    92ae:	90 93 8d 08 	sts	0x088D, r25	; 0x80088d <tr4_barrel_hi>
    92b2:	80 93 8c 08 	sts	0x088C, r24	; 0x80088c <tr4_barrel_lo>
			mixer.channels.type.noise.params=1; //default (15bits,no divider)
    92b6:	81 e0       	ldi	r24, 0x01	; 1
    92b8:	80 93 8b 08 	sts	0x088B, r24	; 0x80088b <tr4_params>
    92bc:	36 c0       	rjmp	.+108    	; 0x932a <TriggerCommon+0xbc>

		#if SOUND_CHANNEL_5_ENABLE==1		

		}else if(track->channel==4){
    92be:	84 30       	cpi	r24, 0x04	; 4
    92c0:	69 f5       	brne	.+90     	; 0x931c <TriggerCommon+0xae>
				//PCM channel					
				mixer.channels.type.pcm.positionFrac=0;
    92c2:	10 92 93 08 	sts	0x0893, r1	; 0x800893 <tr5_pos_frac>
				const char *pos=(const char*)pgm_read_word(&(patchPointers[patch].pcmData));
    92c6:	80 91 14 09 	lds	r24, 0x0914	; 0x800914 <patchPointers>
    92ca:	90 91 15 09 	lds	r25, 0x0915	; 0x800915 <patchPointers+0x1>
    92ce:	e9 e0       	ldi	r30, 0x09	; 9
    92d0:	6e 9f       	mul	r22, r30
    92d2:	80 0d       	add	r24, r0
    92d4:	91 1d       	adc	r25, r1
    92d6:	11 24       	eor	r1, r1
    92d8:	fc 01       	movw	r30, r24
    92da:	31 96       	adiw	r30, 0x01	; 1
    92dc:	45 91       	lpm	r20, Z+
    92de:	54 91       	lpm	r21, Z
				mixer.channels.type.pcm.position=pos;				
    92e0:	50 93 95 08 	sts	0x0895, r21	; 0x800895 <tr5_pos_hi>
    92e4:	40 93 94 08 	sts	0x0894, r20	; 0x800894 <tr5_pos_lo>
				mixer.pcmLoopLenght=pgm_read_word(&(patchPointers[patch].loopEnd))-pgm_read_word(&(patchPointers[patch].loopStart));
    92e8:	9c 01       	movw	r18, r24
    92ea:	29 5f       	subi	r18, 0xF9	; 249
    92ec:	3f 4f       	sbci	r19, 0xFF	; 255
    92ee:	f9 01       	movw	r30, r18
    92f0:	65 91       	lpm	r22, Z+
    92f2:	74 91       	lpm	r23, Z
    92f4:	05 96       	adiw	r24, 0x05	; 5
    92f6:	fc 01       	movw	r30, r24
    92f8:	85 91       	lpm	r24, Z+
    92fa:	94 91       	lpm	r25, Z
    92fc:	68 1b       	sub	r22, r24
    92fe:	79 0b       	sbc	r23, r25
    9300:	70 93 97 08 	sts	0x0897, r23	; 0x800897 <tr5_loop_len_hi>
    9304:	60 93 96 08 	sts	0x0896, r22	; 0x800896 <tr5_loop_len_lo>
				mixer.pcmLoopEnd=pos+pgm_read_word(&(patchPointers[patch].loopEnd));
    9308:	f9 01       	movw	r30, r18
    930a:	85 91       	lpm	r24, Z+
    930c:	94 91       	lpm	r25, Z
    930e:	48 0f       	add	r20, r24
    9310:	59 1f       	adc	r21, r25
    9312:	50 93 99 08 	sts	0x0899, r21	; 0x800899 <tr5_loop_end_hi>
    9316:	40 93 98 08 	sts	0x0898, r20	; 0x800898 <tr5_loop_end_lo>
    931a:	03 c0       	rjmp	.+6      	; 0x9322 <TriggerCommon+0xb4>
				SetMixerNote(track->channel,note);
		#endif	

		}else{					
			//wave channels					
			SetMixerWave(track->channel,0);//default wave
    931c:	60 e0       	ldi	r22, 0x00	; 0
    931e:	0e 94 30 4c 	call	0x9860	; 0x9860 <SetMixerWave>
			SetMixerNote(track->channel,note);
    9322:	60 2f       	mov	r22, r16
    9324:	8a 81       	ldd	r24, Y+2	; 0x02
    9326:	0e 94 19 4c 	call	0x9832	; 0x9832 <SetMixerNote>

		#endif

	#endif //SOUND_MIXER == MIXER_TYPE_INLINE

	if(isFx){
    932a:	ff 20       	and	r15, r15
    932c:	11 f0       	breq	.+4      	; 0x9332 <TriggerCommon+0xc4>
		track->fxPatchNo=patch;
    932e:	19 8b       	std	Y+17, r17	; 0x11
    9330:	01 c0       	rjmp	.+2      	; 0x9334 <TriggerCommon+0xc6>
	}else{
		track->patchNo=patch;	
    9332:	18 8b       	std	Y+16, r17	; 0x10
	}

	const char *pos = (const char*)pgm_read_word(&(patchPointers[patch].cmdStream));
    9334:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    9338:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    933c:	29 e0       	ldi	r18, 0x09	; 9
    933e:	12 9f       	mul	r17, r18
    9340:	e0 0d       	add	r30, r0
    9342:	f1 1d       	adc	r31, r1
    9344:	11 24       	eor	r1, r1
    9346:	33 96       	adiw	r30, 0x03	; 3
    9348:	85 91       	lpm	r24, Z+
    934a:	94 91       	lpm	r25, Z
	if(pos==NULL){
    934c:	00 97       	sbiw	r24, 0x00	; 0
    934e:	19 f4       	brne	.+6      	; 0x9356 <TriggerCommon+0xe8>
		track->patchCommandStreamPos=NULL;
    9350:	1e 8a       	std	Y+22, r1	; 0x16
    9352:	1d 8a       	std	Y+21, r1	; 0x15
    9354:	07 c0       	rjmp	.+14     	; 0x9364 <TriggerCommon+0xf6>
	}else{
		track->patchCurrDeltaTime=0;
    9356:	1b 8a       	std	Y+19, r1	; 0x13
		track->patchNextDeltaTime=pgm_read_byte(pos++);
    9358:	fc 01       	movw	r30, r24
    935a:	24 91       	lpm	r18, Z
    935c:	2a 8b       	std	Y+18, r18	; 0x12
		track->patchCommandStreamPos=pos;
    935e:	01 96       	adiw	r24, 0x01	; 1
    9360:	9e 8b       	std	Y+22, r25	; 0x16
    9362:	8d 8b       	std	Y+21, r24	; 0x15
	}

}
    9364:	df 91       	pop	r29
    9366:	cf 91       	pop	r28
    9368:	1f 91       	pop	r17
    936a:	0f 91       	pop	r16
    936c:	ff 90       	pop	r15
    936e:	08 95       	ret

00009370 <TriggerFx>:

/* Trigger a sound effect.
 * Method allocates the channel based on priority.
 * Retrig: if this fx if already playing on a track, reuse same track.
 */
void TriggerFx(unsigned char patch,unsigned char volume,bool retrig){
    9370:	cf 93       	push	r28
    9372:	df 93       	push	r29
	unsigned char channel;
	
	unsigned char type=(unsigned char)pgm_read_byte(&(patchPointers[patch].type));
    9374:	e0 91 14 09 	lds	r30, 0x0914	; 0x800914 <patchPointers>
    9378:	f0 91 15 09 	lds	r31, 0x0915	; 0x800915 <patchPointers+0x1>
    937c:	99 e0       	ldi	r25, 0x09	; 9
    937e:	89 9f       	mul	r24, r25
    9380:	e0 0d       	add	r30, r0
    9382:	f1 1d       	adc	r31, r1
    9384:	11 24       	eor	r1, r1
    9386:	e4 91       	lpm	r30, Z

	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
    9388:	e1 30       	cpi	r30, 0x01	; 1
    938a:	e9 f0       	breq	.+58     	; 0x93c6 <TriggerFx+0x56>
		//noise or PCM channel fx		
		channel=3;
	}else if(type==2){
    938c:	e2 30       	cpi	r30, 0x02	; 2
    938e:	e9 f0       	breq	.+58     	; 0x93ca <TriggerFx+0x5a>
		channel=4;
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
    9390:	90 91 b6 08 	lds	r25, 0x08B6	; 0x8008b6 <tracks+0x17>
    9394:	97 ff       	sbrs	r25, 7
    9396:	1b c0       	rjmp	.+54     	; 0x93ce <TriggerFx+0x5e>
    9398:	90 91 c7 08 	lds	r25, 0x08C7	; 0x8008c7 <tracks+0x28>
    939c:	89 13       	cpse	r24, r25
    939e:	02 c0       	rjmp	.+4      	; 0x93a4 <TriggerFx+0x34>
    93a0:	41 11       	cpse	r20, r1
    93a2:	15 c0       	rjmp	.+42     	; 0x93ce <TriggerFx+0x5e>
		channel=1;
	}else if( (tracks[2].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[2].fxPatchNo==patch && (tracks[2].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing				
    93a4:	90 91 cd 08 	lds	r25, 0x08CD	; 0x8008cd <tracks+0x2e>
    93a8:	97 ff       	sbrs	r25, 7
    93aa:	13 c0       	rjmp	.+38     	; 0x93d2 <TriggerFx+0x62>
    93ac:	90 91 de 08 	lds	r25, 0x08DE	; 0x8008de <tracks+0x3f>
    93b0:	89 13       	cpse	r24, r25
    93b2:	02 c0       	rjmp	.+4      	; 0x93b8 <TriggerFx+0x48>
    93b4:	41 11       	cpse	r20, r1
    93b6:	0d c0       	rjmp	.+26     	; 0x93d2 <TriggerFx+0x62>
		channel=2;
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
    93b8:	20 91 ca 08 	lds	r18, 0x08CA	; 0x8008ca <tracks+0x2b>
    93bc:	90 91 e1 08 	lds	r25, 0x08E1	; 0x8008e1 <tracks+0x42>
    93c0:	92 17       	cp	r25, r18
    93c2:	38 f4       	brcc	.+14     	; 0x93d2 <TriggerFx+0x62>
    93c4:	04 c0       	rjmp	.+8      	; 0x93ce <TriggerFx+0x5e>
	//find the channel to play the fx
	//try to steal voice 2 then 1
	//never steal voice 0, reserve it for lead melodies
	if(type==1 || (type==2 && MIXER_CHAN4_TYPE == 1)){
		//noise or PCM channel fx		
		channel=3;
    93c6:	c3 e0       	ldi	r28, 0x03	; 3
    93c8:	05 c0       	rjmp	.+10     	; 0x93d4 <TriggerFx+0x64>
	}else if(type==2){
		channel=4;
    93ca:	c4 e0       	ldi	r28, 0x04	; 4
    93cc:	03 c0       	rjmp	.+6      	; 0x93d4 <TriggerFx+0x64>
	}else if( (tracks[1].flags&TRACK_FLAGS_PRIORITY)==0 || (tracks[1].fxPatchNo==patch && (tracks[1].flags&TRACK_FLAGS_PRIORITY)!=0 && retrig==true)){ //fx already playing
		channel=1;
    93ce:	c1 e0       	ldi	r28, 0x01	; 1
    93d0:	01 c0       	rjmp	.+2      	; 0x93d4 <TriggerFx+0x64>
	}else{
		//both channels have fx playing, use the oldest one
		if(tracks[1].patchPlayingTime>tracks[2].patchPlayingTime){
			channel=1;
		}else{
			channel=2;
    93d2:	c2 e0       	ldi	r28, 0x02	; 2
		}
	}				

	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
    93d4:	97 e1       	ldi	r25, 0x17	; 23
    93d6:	c9 9f       	mul	r28, r25
    93d8:	e0 01       	movw	r28, r0
    93da:	11 24       	eor	r1, r1
    93dc:	c1 56       	subi	r28, 0x61	; 97
    93de:	d7 4f       	sbci	r29, 0xF7	; 247
    93e0:	90 e8       	ldi	r25, 0x80	; 128
    93e2:	98 83       	st	Y, r25
	track->patchCommandStreamPos = NULL;
    93e4:	1e 8a       	std	Y+22, r1	; 0x16
    93e6:	1d 8a       	std	Y+21, r1	; 0x15
	TriggerCommon(track,patch,volume,80);
    93e8:	20 e5       	ldi	r18, 0x50	; 80
    93ea:	46 2f       	mov	r20, r22
    93ec:	68 2f       	mov	r22, r24
    93ee:	ce 01       	movw	r24, r28
    93f0:	0e 94 37 49 	call	0x926e	; 0x926e <TriggerCommon>
	track->flags|=TRACK_FLAGS_PLAYING;
    93f4:	88 81       	ld	r24, Y
    93f6:	80 62       	ori	r24, 0x20	; 32
    93f8:	88 83       	st	Y, r24
}
    93fa:	df 91       	pop	r29
    93fc:	cf 91       	pop	r28
    93fe:	08 95       	ret

00009400 <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    9400:	cf 93       	push	r28
    9402:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    9404:	a8 2f       	mov	r26, r24
    9406:	b0 e0       	ldi	r27, 0x00	; 0
    9408:	97 e1       	ldi	r25, 0x17	; 23
    940a:	89 9f       	mul	r24, r25
    940c:	f0 01       	movw	r30, r0
    940e:	11 24       	eor	r1, r1
    9410:	e1 56       	subi	r30, 0x61	; 97
    9412:	f7 4f       	sbci	r31, 0xF7	; 247
    9414:	80 81       	ld	r24, Z
    9416:	85 ff       	sbrs	r24, 5
    9418:	02 c0       	rjmp	.+4      	; 0x941e <TriggerNote+0x1e>
    941a:	87 fd       	sbrc	r24, 7
    941c:	2e c0       	rjmp	.+92     	; 0x947a <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    941e:	21 11       	cpse	r18, r1
    9420:	18 c0       	rjmp	.+48     	; 0x9452 <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    9422:	97 e1       	ldi	r25, 0x17	; 23
    9424:	9a 9f       	mul	r25, r26
    9426:	f0 01       	movw	r30, r0
    9428:	9b 9f       	mul	r25, r27
    942a:	f0 0d       	add	r31, r0
    942c:	11 24       	eor	r1, r1
    942e:	e1 56       	subi	r30, 0x61	; 97
    9430:	f7 4f       	sbci	r31, 0xF7	; 247
    9432:	97 85       	ldd	r25, Z+15	; 0x0f
    9434:	91 11       	cpse	r25, r1
    9436:	02 c0       	rjmp	.+4      	; 0x943c <TriggerNote+0x3c>
    9438:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    943a:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    943c:	97 e1       	ldi	r25, 0x17	; 23
    943e:	9a 9f       	mul	r25, r26
    9440:	f0 01       	movw	r30, r0
    9442:	9b 9f       	mul	r25, r27
    9444:	f0 0d       	add	r31, r0
    9446:	11 24       	eor	r1, r1
    9448:	e1 56       	subi	r30, 0x61	; 97
    944a:	f7 4f       	sbci	r31, 0xF7	; 247
    944c:	8f 7b       	andi	r24, 0xBF	; 191
    944e:	80 83       	st	Z, r24
    9450:	14 c0       	rjmp	.+40     	; 0x947a <TriggerNote+0x7a>
    9452:	82 2f       	mov	r24, r18
    9454:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    9456:	97 e1       	ldi	r25, 0x17	; 23
    9458:	9a 9f       	mul	r25, r26
    945a:	e0 01       	movw	r28, r0
    945c:	9b 9f       	mul	r25, r27
    945e:	d0 0d       	add	r29, r0
    9460:	11 24       	eor	r1, r1
    9462:	c1 56       	subi	r28, 0x61	; 97
    9464:	d7 4f       	sbci	r29, 0xF7	; 247
    9466:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    9468:	1e 8a       	std	Y+22, r1	; 0x16
    946a:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    946c:	48 2f       	mov	r20, r24
    946e:	ce 01       	movw	r24, r28
    9470:	0e 94 37 49 	call	0x926e	; 0x926e <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    9474:	88 81       	ld	r24, Y
    9476:	80 62       	ori	r24, 0x20	; 32
    9478:	88 83       	st	Y, r24
		}

	}
}
    947a:	df 91       	pop	r29
    947c:	cf 91       	pop	r28
    947e:	08 95       	ret

00009480 <ProcessMusic>:
	}

#endif


void ProcessMusic(void){
    9480:	ef 92       	push	r14
    9482:	ff 92       	push	r15
    9484:	0f 93       	push	r16
    9486:	1f 93       	push	r17
    9488:	cf 93       	push	r28
    948a:	df 93       	push	r29
    948c:	cf e9       	ldi	r28, 0x9F	; 159
    948e:	d8 e0       	ldi	r29, 0x08	; 8
    9490:	08 e7       	ldi	r16, 0x78	; 120
    9492:	18 e0       	ldi	r17, 0x08	; 8
    9494:	98 01       	movw	r18, r16
    9496:	de 01       	movw	r26, r28
	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//update envelope
		if(track->envelopeStep!=0){
    9498:	1f 96       	adiw	r26, 0x0f	; 15
    949a:	8c 91       	ld	r24, X
    949c:	1f 97       	sbiw	r26, 0x0f	; 15
    949e:	88 23       	and	r24, r24
    94a0:	a9 f0       	breq	.+42     	; 0x94cc <ProcessMusic+0x4c>
			vol=track->envelopeVol+track->envelopeStep;		
    94a2:	1e 96       	adiw	r26, 0x0e	; 14
    94a4:	4c 91       	ld	r20, X
    94a6:	1e 97       	sbiw	r26, 0x0e	; 14
    94a8:	08 2e       	mov	r0, r24
    94aa:	00 0c       	add	r0, r0
    94ac:	99 0b       	sbc	r25, r25
    94ae:	84 0f       	add	r24, r20
    94b0:	91 1d       	adc	r25, r1
    94b2:	8f 3f       	cpi	r24, 0xFF	; 255
    94b4:	91 05       	cpc	r25, r1
    94b6:	19 f0       	breq	.+6      	; 0x94be <ProcessMusic+0x3e>
    94b8:	14 f0       	brlt	.+4      	; 0x94be <ProcessMusic+0x3e>
    94ba:	8f ef       	ldi	r24, 0xFF	; 255
    94bc:	90 e0       	ldi	r25, 0x00	; 0
			if(vol<0){
				vol=0;			
			}else if(vol>0xff){
				vol=0xff;						
			}
			track->envelopeVol=vol;
    94be:	97 ff       	sbrs	r25, 7
    94c0:	02 c0       	rjmp	.+4      	; 0x94c6 <ProcessMusic+0x46>
    94c2:	80 e0       	ldi	r24, 0x00	; 0
    94c4:	90 e0       	ldi	r25, 0x00	; 0
    94c6:	1e 96       	adiw	r26, 0x0e	; 14
    94c8:	8c 93       	st	X, r24
    94ca:	1e 97       	sbiw	r26, 0x0e	; 14
		}

		//if volumes reaches zero and no more patch command, explicitly end playing on track
		//if(vol==0 && track->patchCommandStreamPos==NULL) track->flags&=~(TRACK_FLAGS_PLAYING);

		if(track->flags & TRACK_FLAGS_SLIDING){
    94cc:	6c 91       	ld	r22, X
    94ce:	63 ff       	sbrs	r22, 3
    94d0:	26 c0       	rjmp	.+76     	; 0x951e <ProcessMusic+0x9e>

			mixer.channels.all[trackNo].step+=track->slideStep;
    94d2:	15 96       	adiw	r26, 0x05	; 5
    94d4:	4d 91       	ld	r20, X+
    94d6:	5c 91       	ld	r21, X
    94d8:	16 97       	sbiw	r26, 0x06	; 6
    94da:	f9 01       	movw	r30, r18
    94dc:	81 81       	ldd	r24, Z+1	; 0x01
    94de:	92 81       	ldd	r25, Z+2	; 0x02
    94e0:	84 0f       	add	r24, r20
    94e2:	95 1f       	adc	r25, r21
    94e4:	92 83       	std	Z+2, r25	; 0x02
    94e6:	81 83       	std	Z+1, r24	; 0x01
			u16 tStep=pgm_read_word(&(steptable[track->slideNote]));
    94e8:	17 96       	adiw	r26, 0x07	; 7
    94ea:	ec 91       	ld	r30, X
    94ec:	17 97       	sbiw	r26, 0x07	; 7
    94ee:	f0 e0       	ldi	r31, 0x00	; 0
    94f0:	ee 0f       	add	r30, r30
    94f2:	ff 1f       	adc	r31, r31
    94f4:	e6 56       	subi	r30, 0x66	; 102
    94f6:	f7 46       	sbci	r31, 0x67	; 103
    94f8:	e5 90       	lpm	r14, Z+
    94fa:	f4 90       	lpm	r15, Z

			if((track->slideStep>0 && mixer.channels.all[trackNo].step>=tStep) || 
    94fc:	14 16       	cp	r1, r20
    94fe:	15 06       	cpc	r1, r21
    9500:	24 f4       	brge	.+8      	; 0x950a <ProcessMusic+0x8a>
    9502:	8e 15       	cp	r24, r14
    9504:	9f 05       	cpc	r25, r15
    9506:	30 f4       	brcc	.+12     	; 0x9514 <ProcessMusic+0x94>
    9508:	0a c0       	rjmp	.+20     	; 0x951e <ProcessMusic+0x9e>
    950a:	45 2b       	or	r20, r21
    950c:	41 f0       	breq	.+16     	; 0x951e <ProcessMusic+0x9e>
				(track->slideStep<0 && mixer.channels.all[trackNo].step<=tStep))
    950e:	e8 16       	cp	r14, r24
    9510:	f9 06       	cpc	r15, r25
    9512:	28 f0       	brcs	.+10     	; 0x951e <ProcessMusic+0x9e>
			{					
				mixer.channels.all[trackNo].step = tStep;					
    9514:	f9 01       	movw	r30, r18
    9516:	f2 82       	std	Z+2, r15	; 0x02
    9518:	e1 82       	std	Z+1, r14	; 0x01
				track->flags &= ~(TRACK_FLAGS_SLIDING);	
    951a:	67 7f       	andi	r22, 0xF7	; 247
    951c:	6c 93       	st	X, r22
    951e:	57 96       	adiw	r26, 0x17	; 23
    9520:	2a 5f       	subi	r18, 0xFA	; 250
    9522:	3f 4f       	sbci	r19, 0xFF	; 255
	u8 channel;
	Track* track;


	//process patches envelopes & pitch slides
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    9524:	f9 e0       	ldi	r31, 0x09	; 9
    9526:	a2 31       	cpi	r26, 0x12	; 18
    9528:	bf 07       	cpc	r27, r31
    952a:	09 f0       	breq	.+2      	; 0x952e <ProcessMusic+0xae>
    952c:	b5 cf       	rjmp	.-150    	; 0x9498 <ProcessMusic+0x18>
	}



	//Process song MIDI notes
	if(playSong){
    952e:	80 91 76 08 	lds	r24, 0x0876	; 0x800876 <playSong>
    9532:	88 23       	and	r24, r24
    9534:	09 f4       	brne	.+2      	; 0x9538 <ProcessMusic+0xb8>
    9536:	cc c0       	rjmp	.+408    	; 0x96d0 <ProcessMusic+0x250>
							}else if(c1==CONTROLER_EXPRESSION){
								tracks[channel].expressionVol=c2<<1;
							}else if(c1==CONTROLER_TREMOLO){
								tracks[channel].tremoloLevel=c2<<1;
							}else if(c1==CONTROLER_TREMOLO_RATE){
								tracks[channel].tremoloRate=c2<<1;
    9538:	87 e1       	ldi	r24, 0x17	; 23
    953a:	f8 2e       	mov	r15, r24
	if(playSong){
	
		#if MUSIC_ENGINE == MIDI
			
			//process all simultaneous events
			while(currDeltaTime==nextDeltaTime){
    953c:	80 91 12 09 	lds	r24, 0x0912	; 0x800912 <currDeltaTime>
    9540:	90 91 13 09 	lds	r25, 0x0913	; 0x800913 <currDeltaTime+0x1>
    9544:	20 91 18 09 	lds	r18, 0x0918	; 0x800918 <nextDeltaTime>
    9548:	30 91 19 09 	lds	r19, 0x0919	; 0x800919 <nextDeltaTime+0x1>
    954c:	82 17       	cp	r24, r18
    954e:	93 07       	cpc	r25, r19
    9550:	09 f0       	breq	.+2      	; 0x9554 <ProcessMusic+0xd4>
    9552:	b9 c0       	rjmp	.+370    	; 0x96c6 <ProcessMusic+0x246>

				c1=pgm_read_byte(songPos++);
    9554:	20 91 1b 09 	lds	r18, 0x091B	; 0x80091b <songPos>
    9558:	30 91 1c 09 	lds	r19, 0x091C	; 0x80091c <songPos+0x1>
    955c:	b9 01       	movw	r22, r18
    955e:	6f 5f       	subi	r22, 0xFF	; 255
    9560:	7f 4f       	sbci	r23, 0xFF	; 255
    9562:	70 93 1c 09 	sts	0x091C, r23	; 0x80091c <songPos+0x1>
    9566:	60 93 1b 09 	sts	0x091B, r22	; 0x80091b <songPos>
    956a:	f9 01       	movw	r30, r18
    956c:	44 91       	lpm	r20, Z
			
				if(c1==0xff){
    956e:	4f 3f       	cpi	r20, 0xFF	; 255
    9570:	79 f5       	brne	.+94     	; 0x95d0 <ProcessMusic+0x150>
					//META data type event

					c1=pgm_read_byte(songPos++);
    9572:	a9 01       	movw	r20, r18
    9574:	4e 5f       	subi	r20, 0xFE	; 254
    9576:	5f 4f       	sbci	r21, 0xFF	; 255
    9578:	50 93 1c 09 	sts	0x091C, r21	; 0x80091c <songPos+0x1>
    957c:	40 93 1b 09 	sts	0x091B, r20	; 0x80091b <songPos>
    9580:	fb 01       	movw	r30, r22
    9582:	64 91       	lpm	r22, Z

				
					if(c1==0x2f){ //end of song
    9584:	6f 32       	cpi	r22, 0x2F	; 47
    9586:	19 f4       	brne	.+6      	; 0x958e <ProcessMusic+0x10e>
						playSong=false;
    9588:	10 92 76 08 	sts	0x0876, r1	; 0x800876 <playSong>
						break;	
    958c:	9c c0       	rjmp	.+312    	; 0x96c6 <ProcessMusic+0x246>
					}else if(c1==0x6){ //marker
    958e:	66 30       	cpi	r22, 0x06	; 6
    9590:	09 f0       	breq	.+2      	; 0x9594 <ProcessMusic+0x114>
    9592:	8c c0       	rjmp	.+280    	; 0x96ac <ProcessMusic+0x22c>
						c1=pgm_read_byte(songPos++); //read len
    9594:	fa 01       	movw	r30, r20
    9596:	44 91       	lpm	r20, Z
						c2=pgm_read_byte(songPos++); //read data
    9598:	c9 01       	movw	r24, r18
    959a:	04 96       	adiw	r24, 0x04	; 4
    959c:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    95a0:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
				
					if(c1==0x2f){ //end of song
						playSong=false;
						break;	
					}else if(c1==0x6){ //marker
						c1=pgm_read_byte(songPos++); //read len
    95a4:	f9 01       	movw	r30, r18
    95a6:	33 96       	adiw	r30, 0x03	; 3
						c2=pgm_read_byte(songPos++); //read data
    95a8:	e4 91       	lpm	r30, Z
						if(c2=='S'){ //loop start
    95aa:	e3 35       	cpi	r30, 0x53	; 83
    95ac:	29 f4       	brne	.+10     	; 0x95b8 <ProcessMusic+0x138>
							loopStart=songPos;
    95ae:	90 93 1e 09 	sts	0x091E, r25	; 0x80091e <loopStart+0x1>
    95b2:	80 93 1d 09 	sts	0x091D, r24	; 0x80091d <loopStart>
    95b6:	7a c0       	rjmp	.+244    	; 0x96ac <ProcessMusic+0x22c>
						}else if(c2=='E'){//loop end
    95b8:	e5 34       	cpi	r30, 0x45	; 69
    95ba:	09 f0       	breq	.+2      	; 0x95be <ProcessMusic+0x13e>
    95bc:	77 c0       	rjmp	.+238    	; 0x96ac <ProcessMusic+0x22c>
							songPos=loopStart;
    95be:	80 91 1d 09 	lds	r24, 0x091D	; 0x80091d <loopStart>
    95c2:	90 91 1e 09 	lds	r25, 0x091E	; 0x80091e <loopStart+0x1>
    95c6:	90 93 1c 09 	sts	0x091C, r25	; 0x80091c <songPos+0x1>
    95ca:	80 93 1b 09 	sts	0x091B, r24	; 0x80091b <songPos>
    95ce:	6e c0       	rjmp	.+220    	; 0x96ac <ProcessMusic+0x22c>
					}
				

				}else{

					if(c1&0x80) lastStatus=c1;					
    95d0:	47 fd       	sbrc	r20, 7
    95d2:	40 93 16 09 	sts	0x0916, r20	; 0x800916 <lastStatus>
					channel=lastStatus&0x0f;
    95d6:	90 91 16 09 	lds	r25, 0x0916	; 0x800916 <lastStatus>
    95da:	89 2f       	mov	r24, r25
    95dc:	8f 70       	andi	r24, 0x0F	; 15
				
					//get next data byte		
					if(c1&0x80) c1=pgm_read_byte(songPos++); 
    95de:	47 ff       	sbrs	r20, 7
    95e0:	08 c0       	rjmp	.+16     	; 0x95f2 <ProcessMusic+0x172>
    95e2:	2e 5f       	subi	r18, 0xFE	; 254
    95e4:	3f 4f       	sbci	r19, 0xFF	; 255
    95e6:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    95ea:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    95ee:	fb 01       	movw	r30, r22
    95f0:	44 91       	lpm	r20, Z

					switch(lastStatus&0xf0){
    95f2:	90 7f       	andi	r25, 0xF0	; 240
    95f4:	90 3b       	cpi	r25, 0xB0	; 176
    95f6:	e1 f0       	breq	.+56     	; 0x9630 <ProcessMusic+0x1b0>
    95f8:	90 3c       	cpi	r25, 0xC0	; 192
    95fa:	09 f4       	brne	.+2      	; 0x95fe <ProcessMusic+0x17e>
    95fc:	51 c0       	rjmp	.+162    	; 0x96a0 <ProcessMusic+0x220>
    95fe:	90 39       	cpi	r25, 0x90	; 144
    9600:	09 f0       	breq	.+2      	; 0x9604 <ProcessMusic+0x184>
    9602:	54 c0       	rjmp	.+168    	; 0x96ac <ProcessMusic+0x22c>

						//note-on
						case 0x90:
							//c1 = note						
							c2=pgm_read_byte(songPos++)<<1; //get volume
    9604:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    9608:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    960c:	9f 01       	movw	r18, r30
    960e:	2f 5f       	subi	r18, 0xFF	; 255
    9610:	3f 4f       	sbci	r19, 0xFF	; 255
    9612:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    9616:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    961a:	24 91       	lpm	r18, Z
						
							if(tracks[channel].flags|TRACK_FLAGS_ALLOCATED){ //allocated==true
								TriggerNote(channel,tracks[channel].patchNo,c1,c2);
    961c:	22 0f       	add	r18, r18
    961e:	f8 9e       	mul	r15, r24
    9620:	f0 01       	movw	r30, r0
    9622:	11 24       	eor	r1, r1
    9624:	e1 56       	subi	r30, 0x61	; 97
    9626:	f7 4f       	sbci	r31, 0xF7	; 247
    9628:	60 89       	ldd	r22, Z+16	; 0x10
    962a:	0e 94 00 4a 	call	0x9400	; 0x9400 <TriggerNote>
    962e:	3e c0       	rjmp	.+124    	; 0x96ac <ProcessMusic+0x22c>
							break;

						//controllers
						case 0xb0:
							///c1 = controller #
							c2=pgm_read_byte(songPos++); //get controller value
    9630:	e0 91 1b 09 	lds	r30, 0x091B	; 0x80091b <songPos>
    9634:	f0 91 1c 09 	lds	r31, 0x091C	; 0x80091c <songPos+0x1>
    9638:	9f 01       	movw	r18, r30
    963a:	2f 5f       	subi	r18, 0xFF	; 255
    963c:	3f 4f       	sbci	r19, 0xFF	; 255
    963e:	30 93 1c 09 	sts	0x091C, r19	; 0x80091c <songPos+0x1>
    9642:	20 93 1b 09 	sts	0x091B, r18	; 0x80091b <songPos>
    9646:	e4 91       	lpm	r30, Z
						
							if(c1==CONTROLER_VOL){
    9648:	47 30       	cpi	r20, 0x07	; 7
    964a:	49 f4       	brne	.+18     	; 0x965e <ProcessMusic+0x1de>
								tracks[channel].trackVol=c2<<1;
    964c:	f8 9e       	mul	r15, r24
    964e:	d0 01       	movw	r26, r0
    9650:	11 24       	eor	r1, r1
    9652:	a1 56       	subi	r26, 0x61	; 97
    9654:	b7 4f       	sbci	r27, 0xF7	; 247
    9656:	ee 0f       	add	r30, r30
    9658:	1c 96       	adiw	r26, 0x0c	; 12
    965a:	ec 93       	st	X, r30
    965c:	27 c0       	rjmp	.+78     	; 0x96ac <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_EXPRESSION){
    965e:	4b 30       	cpi	r20, 0x0B	; 11
    9660:	49 f4       	brne	.+18     	; 0x9674 <ProcessMusic+0x1f4>
								tracks[channel].expressionVol=c2<<1;
    9662:	f8 9e       	mul	r15, r24
    9664:	d0 01       	movw	r26, r0
    9666:	11 24       	eor	r1, r1
    9668:	a1 56       	subi	r26, 0x61	; 97
    966a:	b7 4f       	sbci	r27, 0xF7	; 247
    966c:	ee 0f       	add	r30, r30
    966e:	13 96       	adiw	r26, 0x03	; 3
    9670:	ec 93       	st	X, r30
    9672:	1c c0       	rjmp	.+56     	; 0x96ac <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO){
    9674:	4c 35       	cpi	r20, 0x5C	; 92
    9676:	49 f4       	brne	.+18     	; 0x968a <ProcessMusic+0x20a>
								tracks[channel].tremoloLevel=c2<<1;
    9678:	f8 9e       	mul	r15, r24
    967a:	d0 01       	movw	r26, r0
    967c:	11 24       	eor	r1, r1
    967e:	a1 56       	subi	r26, 0x61	; 97
    9680:	b7 4f       	sbci	r27, 0xF7	; 247
    9682:	ee 0f       	add	r30, r30
    9684:	1a 96       	adiw	r26, 0x0a	; 10
    9686:	ec 93       	st	X, r30
    9688:	11 c0       	rjmp	.+34     	; 0x96ac <ProcessMusic+0x22c>
							}else if(c1==CONTROLER_TREMOLO_RATE){
    968a:	44 36       	cpi	r20, 0x64	; 100
    968c:	79 f4       	brne	.+30     	; 0x96ac <ProcessMusic+0x22c>
								tracks[channel].tremoloRate=c2<<1;
    968e:	f8 9e       	mul	r15, r24
    9690:	d0 01       	movw	r26, r0
    9692:	11 24       	eor	r1, r1
    9694:	a1 56       	subi	r26, 0x61	; 97
    9696:	b7 4f       	sbci	r27, 0xF7	; 247
    9698:	ee 0f       	add	r30, r30
    969a:	1b 96       	adiw	r26, 0x0b	; 11
    969c:	ec 93       	st	X, r30
    969e:	06 c0       	rjmp	.+12     	; 0x96ac <ProcessMusic+0x22c>
							break;

						//program change
						case 0xc0:
							// c1 = patch #						
							tracks[channel].patchNo=c1;
    96a0:	f8 9e       	mul	r15, r24
    96a2:	f0 01       	movw	r30, r0
    96a4:	11 24       	eor	r1, r1
    96a6:	e1 56       	subi	r30, 0x61	; 97
    96a8:	f7 4f       	sbci	r31, 0xF7	; 247
    96aa:	40 8b       	std	Z+16, r20	; 0x10


				}//end if(c1==0xff)

				//read next delta time
				nextDeltaTime=ReadVarLen(&songPos);			
    96ac:	8b e1       	ldi	r24, 0x1B	; 27
    96ae:	99 e0       	ldi	r25, 0x09	; 9
    96b0:	0e 94 11 49 	call	0x9222	; 0x9222 <ReadVarLen>
    96b4:	90 93 19 09 	sts	0x0919, r25	; 0x800919 <nextDeltaTime+0x1>
    96b8:	80 93 18 09 	sts	0x0918, r24	; 0x800918 <nextDeltaTime>
				currDeltaTime=0;
    96bc:	10 92 13 09 	sts	0x0913, r1	; 0x800913 <currDeltaTime+0x1>
    96c0:	10 92 12 09 	sts	0x0912, r1	; 0x800912 <currDeltaTime>
    96c4:	3b cf       	rjmp	.-394    	; 0x953c <ProcessMusic+0xbc>
					}
				#endif

			}//end while
		
			currDeltaTime++;
    96c6:	01 96       	adiw	r24, 0x01	; 1
    96c8:	90 93 13 09 	sts	0x0913, r25	; 0x800913 <currDeltaTime+0x1>
    96cc:	80 93 12 09 	sts	0x0912, r24	; 0x800912 <currDeltaTime>
					tmp-=128; //convert to unsigned

					tVol=(track->tremoloLevel*tmp)+0x100;
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    96d0:	ee 24       	eor	r14, r14
    96d2:	ea 94       	dec	r14
    96d4:	f1 2c       	mov	r15, r1
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
		track=&tracks[trackNo];

		//process patch command stream
		if((track->flags & TRACK_FLAGS_PLAYING) && (track->patchCommandStreamPos!=NULL) && ((track->flags & TRACK_FLAGS_HOLD_ENV)==0)){
    96d6:	88 81       	ld	r24, Y
    96d8:	85 ff       	sbrs	r24, 5
    96da:	37 c0       	rjmp	.+110    	; 0x974a <ProcessMusic+0x2ca>
    96dc:	2d 89       	ldd	r18, Y+21	; 0x15
    96de:	3e 89       	ldd	r19, Y+22	; 0x16
    96e0:	23 2b       	or	r18, r19
    96e2:	09 f4       	brne	.+2      	; 0x96e6 <ProcessMusic+0x266>
    96e4:	32 c0       	rjmp	.+100    	; 0x974a <ProcessMusic+0x2ca>
    96e6:	86 fd       	sbrc	r24, 6
    96e8:	30 c0       	rjmp	.+96     	; 0x974a <ProcessMusic+0x2ca>

			//process all simultaneous events
			while(track->patchCurrDeltaTime==track->patchNextDeltaTime){
    96ea:	9b 89       	ldd	r25, Y+19	; 0x13
    96ec:	8a 89       	ldd	r24, Y+18	; 0x12
    96ee:	98 13       	cpse	r25, r24
    96f0:	2a c0       	rjmp	.+84     	; 0x9746 <ProcessMusic+0x2c6>

				c1=pgm_read_byte(track->patchCommandStreamPos++);
    96f2:	ed 89       	ldd	r30, Y+21	; 0x15
    96f4:	fe 89       	ldd	r31, Y+22	; 0x16
    96f6:	bf 01       	movw	r22, r30
    96f8:	6f 5f       	subi	r22, 0xFF	; 255
    96fa:	7f 4f       	sbci	r23, 0xFF	; 255
    96fc:	7e 8b       	std	Y+22, r23	; 0x16
    96fe:	6d 8b       	std	Y+21, r22	; 0x15
    9700:	84 91       	lpm	r24, Z
				if(c1==PATCH_END){
    9702:	8f 3f       	cpi	r24, 0xFF	; 255
    9704:	31 f4       	brne	.+12     	; 0x9712 <ProcessMusic+0x292>
					//end of stream!
					track->flags&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    9706:	88 81       	ld	r24, Y
    9708:	8f 77       	andi	r24, 0x7F	; 127
    970a:	88 83       	st	Y, r24
					track->patchCommandStreamPos=NULL;
    970c:	1e 8a       	std	Y+22, r1	; 0x16
    970e:	1d 8a       	std	Y+21, r1	; 0x15
					break;
    9710:	1a c0       	rjmp	.+52     	; 0x9746 <ProcessMusic+0x2c6>

				}else{
					c2=pgm_read_byte(track->patchCommandStreamPos++);
    9712:	32 96       	adiw	r30, 0x02	; 2
    9714:	fe 8b       	std	Y+22, r31	; 0x16
    9716:	ed 8b       	std	Y+21, r30	; 0x15
    9718:	fb 01       	movw	r30, r22
    971a:	64 91       	lpm	r22, Z
					//invoke patch command function
					((PatchCommand)pgm_read_word(&patchCommands[c1]))(track,c2);
    971c:	e8 2f       	mov	r30, r24
    971e:	f0 e0       	ldi	r31, 0x00	; 0
    9720:	ee 0f       	add	r30, r30
    9722:	ff 1f       	adc	r31, r31
    9724:	ee 53       	subi	r30, 0x3E	; 62
    9726:	ff 4f       	sbci	r31, 0xFF	; 255
    9728:	25 91       	lpm	r18, Z+
    972a:	34 91       	lpm	r19, Z
    972c:	ce 01       	movw	r24, r28
    972e:	f9 01       	movw	r30, r18
    9730:	09 95       	icall
				}

				//read next delta time
				track->patchNextDeltaTime=pgm_read_byte(track->patchCommandStreamPos++);
    9732:	ed 89       	ldd	r30, Y+21	; 0x15
    9734:	fe 89       	ldd	r31, Y+22	; 0x16
    9736:	cf 01       	movw	r24, r30
    9738:	01 96       	adiw	r24, 0x01	; 1
    973a:	9e 8b       	std	Y+22, r25	; 0x16
    973c:	8d 8b       	std	Y+21, r24	; 0x15
    973e:	e4 91       	lpm	r30, Z
    9740:	ea 8b       	std	Y+18, r30	; 0x12
				track->patchCurrDeltaTime=0;
    9742:	1b 8a       	std	Y+19, r1	; 0x13
    9744:	d2 cf       	rjmp	.-92     	; 0x96ea <ProcessMusic+0x26a>
			}

			track->patchCurrDeltaTime++;
    9746:	9f 5f       	subi	r25, 0xFF	; 255
    9748:	9b 8b       	std	Y+19, r25	; 0x13
		}

		if(track->flags & TRACK_FLAGS_PLAYING){
    974a:	98 81       	ld	r25, Y
    974c:	95 ff       	sbrs	r25, 5
    974e:	5e c0       	rjmp	.+188    	; 0x980c <ProcessMusic+0x38c>

			if(track->patchPlayingTime<0xff){
    9750:	8c 89       	ldd	r24, Y+20	; 0x14
    9752:	8f 3f       	cpi	r24, 0xFF	; 255
    9754:	11 f0       	breq	.+4      	; 0x975a <ProcessMusic+0x2da>
				track->patchPlayingTime++;
    9756:	8f 5f       	subi	r24, 0xFF	; 255
    9758:	8c 8b       	std	Y+20, r24	; 0x14
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
    975a:	97 fd       	sbrc	r25, 7
    975c:	02 c0       	rjmp	.+4      	; 0x9762 <ProcessMusic+0x2e2>
				//if an FX, use full track volume.
				trackVol=0xff;
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
    975e:	9c 85       	ldd	r25, Y+12	; 0x0c
    9760:	01 c0       	rjmp	.+2      	; 0x9764 <ProcessMusic+0x2e4>
			}

			//compute final frame volume
			if(track->flags&TRACK_FLAGS_PRIORITY){
				//if an FX, use full track volume.
				trackVol=0xff;
    9762:	9f ef       	ldi	r25, 0xFF	; 255
			}else{
				//if regular note, apply MIDI track volume
				trackVol= track->trackVol;
			}
			if(track->noteVol!=0 && track->envelopeVol!=0 && trackVol!=0 && masterVolume!=0){
    9764:	8d 85       	ldd	r24, Y+13	; 0x0d
    9766:	49 85       	ldd	r20, Y+9	; 0x09
    9768:	88 23       	and	r24, r24
    976a:	09 f4       	brne	.+2      	; 0x976e <ProcessMusic+0x2ee>
    976c:	49 c0       	rjmp	.+146    	; 0x9800 <ProcessMusic+0x380>
    976e:	6e 85       	ldd	r22, Y+14	; 0x0e
    9770:	66 23       	and	r22, r22
    9772:	09 f4       	brne	.+2      	; 0x9776 <ProcessMusic+0x2f6>
    9774:	45 c0       	rjmp	.+138    	; 0x9800 <ProcessMusic+0x380>
    9776:	99 23       	and	r25, r25
    9778:	09 f4       	brne	.+2      	; 0x977c <ProcessMusic+0x2fc>
    977a:	42 c0       	rjmp	.+132    	; 0x9800 <ProcessMusic+0x380>
    977c:	50 91 17 09 	lds	r21, 0x0917	; 0x800917 <masterVolume>
    9780:	55 23       	and	r21, r21
    9782:	09 f4       	brne	.+2      	; 0x9786 <ProcessMusic+0x306>
    9784:	3d c0       	rjmp	.+122    	; 0x9800 <ProcessMusic+0x380>

				uVol=(track->noteVol*trackVol)+0x100;
    9786:	89 9f       	mul	r24, r25
    9788:	c0 01       	movw	r24, r0
    978a:	11 24       	eor	r1, r1
    978c:	93 95       	inc	r25
				uVol>>=8;
				
				uVol=(uVol*track->envelopeVol)+0x100;
    978e:	89 2f       	mov	r24, r25
    9790:	99 27       	eor	r25, r25
    9792:	68 9f       	mul	r22, r24
    9794:	90 01       	movw	r18, r0
    9796:	69 9f       	mul	r22, r25
    9798:	30 0d       	add	r19, r0
    979a:	11 24       	eor	r1, r1
    979c:	33 95       	inc	r19
				uVol>>=8;
				
				#if MUSIC_ENGINE == MIDI
					uVol=(uVol*track->expressionVol)+0x100;
    979e:	23 2f       	mov	r18, r19
    97a0:	33 27       	eor	r19, r19
    97a2:	6b 81       	ldd	r22, Y+3	; 0x03
    97a4:	62 9f       	mul	r22, r18
    97a6:	c0 01       	movw	r24, r0
    97a8:	63 9f       	mul	r22, r19
    97aa:	90 0d       	add	r25, r0
    97ac:	11 24       	eor	r1, r1
    97ae:	93 95       	inc	r25
					uVol>>=8;
				#endif
				
				uVol=(uVol*masterVolume)+0x100;
    97b0:	89 2f       	mov	r24, r25
    97b2:	99 27       	eor	r25, r25
    97b4:	58 9f       	mul	r21, r24
    97b6:	90 01       	movw	r18, r0
    97b8:	59 9f       	mul	r21, r25
    97ba:	30 0d       	add	r19, r0
    97bc:	11 24       	eor	r1, r1
    97be:	33 95       	inc	r19
				uVol>>=8;
    97c0:	23 2f       	mov	r18, r19
    97c2:	33 27       	eor	r19, r19

				if(track->tremoloLevel>0){
    97c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    97c6:	88 23       	and	r24, r24
    97c8:	e9 f0       	breq	.+58     	; 0x9804 <ProcessMusic+0x384>
					#if (INCLUDE_DEFAULT_WAVES != 0)
						tmp=pgm_read_byte(&(waves[track->tremoloPos]));
    97ca:	e4 2f       	mov	r30, r20
    97cc:	f0 e0       	ldi	r31, 0x00	; 0
    97ce:	e0 50       	subi	r30, 0x00	; 0
    97d0:	f6 46       	sbci	r31, 0x66	; 102
    97d2:	e4 91       	lpm	r30, Z
					#else
						tmp=0;
					#endif
					tmp-=128; //convert to unsigned
    97d4:	e0 58       	subi	r30, 0x80	; 128

					tVol=(track->tremoloLevel*tmp)+0x100;
    97d6:	8e 9f       	mul	r24, r30
    97d8:	f0 01       	movw	r30, r0
    97da:	11 24       	eor	r1, r1
    97dc:	f3 95       	inc	r31
					tVol>>=8;
					
					uVol=(uVol*(0xff-tVol))+0x100;
    97de:	ef 2f       	mov	r30, r31
    97e0:	ff 27       	eor	r31, r31
    97e2:	b7 01       	movw	r22, r14
    97e4:	6e 1b       	sub	r22, r30
    97e6:	7f 0b       	sbc	r23, r31
    97e8:	62 9f       	mul	r22, r18
    97ea:	c0 01       	movw	r24, r0
    97ec:	63 9f       	mul	r22, r19
    97ee:	90 0d       	add	r25, r0
    97f0:	72 9f       	mul	r23, r18
    97f2:	90 0d       	add	r25, r0
    97f4:	11 24       	eor	r1, r1
    97f6:	9c 01       	movw	r18, r24
    97f8:	33 95       	inc	r19
					uVol>>=8;
    97fa:	23 2f       	mov	r18, r19
    97fc:	33 27       	eor	r19, r19
    97fe:	02 c0       	rjmp	.+4      	; 0x9804 <ProcessMusic+0x384>
				}

			
			}else{
				uVol=0;
    9800:	20 e0       	ldi	r18, 0x00	; 0
    9802:	30 e0       	ldi	r19, 0x00	; 0
			}	

			track->tremoloPos+=track->tremoloRate;	
    9804:	8b 85       	ldd	r24, Y+11	; 0x0b
    9806:	48 0f       	add	r20, r24
    9808:	49 87       	std	Y+9, r20	; 0x09
    980a:	02 c0       	rjmp	.+4      	; 0x9810 <ProcessMusic+0x390>

		}else{
			uVol=0;
    980c:	20 e0       	ldi	r18, 0x00	; 0
    980e:	30 e0       	ldi	r19, 0x00	; 0
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
    9810:	f8 01       	movw	r30, r16
    9812:	20 83       	st	Z, r18
    9814:	67 96       	adiw	r28, 0x17	; 23
    9816:	0a 5f       	subi	r16, 0xFA	; 250
    9818:	1f 4f       	sbci	r17, 0xFF	; 255


	//
	// Process patches command streams & final volume
	//
	for(unsigned char trackNo=0;trackNo<CHANNELS;trackNo++){
    981a:	f9 e0       	ldi	r31, 0x09	; 9
    981c:	c2 31       	cpi	r28, 0x12	; 18
    981e:	df 07       	cpc	r29, r31
    9820:	09 f0       	breq	.+2      	; 0x9824 <ProcessMusic+0x3a4>
    9822:	59 cf       	rjmp	.-334    	; 0x96d6 <ProcessMusic+0x256>
		}
		
		mixer.channels.all[trackNo].volume=(uVol&0xff);
	}
	
}
    9824:	df 91       	pop	r29
    9826:	cf 91       	pop	r28
    9828:	1f 91       	pop	r17
    982a:	0f 91       	pop	r16
    982c:	ff 90       	pop	r15
    982e:	ef 90       	pop	r14
    9830:	08 95       	ret

00009832 <SetMixerNote>:
    9832:	99 27       	eor	r25, r25
    9834:	77 27       	eor	r23, r23
    9836:	83 30       	cpi	r24, 0x03	; 3
    9838:	09 f4       	brne	.+2      	; 0x983c <set_note_waves>
    983a:	08 95       	ret

0000983c <set_note_waves>:
    983c:	ea e9       	ldi	r30, 0x9A	; 154
    983e:	f8 e9       	ldi	r31, 0x98	; 152
    9840:	66 0f       	add	r22, r22
    9842:	77 1f       	adc	r23, r23
    9844:	e6 0f       	add	r30, r22
    9846:	f7 1f       	adc	r31, r23
    9848:	a5 91       	lpm	r26, Z+
    984a:	b4 91       	lpm	r27, Z
    984c:	e8 e7       	ldi	r30, 0x78	; 120
    984e:	f8 e0       	ldi	r31, 0x08	; 8
    9850:	26 e0       	ldi	r18, 0x06	; 6
    9852:	28 9f       	mul	r18, r24
    9854:	e0 0d       	add	r30, r0
    9856:	f1 1d       	adc	r31, r1
    9858:	a1 83       	std	Z+1, r26	; 0x01
    985a:	b2 83       	std	Z+2, r27	; 0x02
    985c:	11 24       	eor	r1, r1
    985e:	08 95       	ret

00009860 <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    9860:	99 27       	eor	r25, r25
	clr r23
    9862:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    9864:	e8 e7       	ldi	r30, 0x78	; 120
	ldi ZH,hi8(mixerStruct)
    9866:	f8 e0       	ldi	r31, 0x08	; 8
	ldi r18,CHANNEL_STRUCT_SIZE
    9868:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    986a:	28 9f       	mul	r18, r24
	add ZL,r0
    986c:	e0 0d       	add	r30, r0
	adc ZH,r1
    986e:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    9870:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    9872:	31 f4       	brne	.+12     	; 0x9880 <smw1>
	lds r22,tr4_params
    9874:	60 91 8b 08 	lds	r22, 0x088B	; 0x80088b <tr4_params>
	andi r22,0xfe;
    9878:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    987a:	60 93 8b 08 	sts	0x088B, r22	; 0x80088b <tr4_params>
	rjmp esmw	
    987e:	0b c0       	rjmp	.+22     	; 0x9896 <esmw>

00009880 <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    9880:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    9882:	31 f4       	brne	.+12     	; 0x9890 <smw2>
	lds r22,tr4_params
    9884:	60 91 8b 08 	lds	r22, 0x088B	; 0x80088b <tr4_params>
	ori r22,0xfe;
    9888:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    988a:	60 93 8b 08 	sts	0x088B, r22	; 0x80088b <tr4_params>
	rjmp esmw
    988e:	03 c0       	rjmp	.+6      	; 0x9896 <esmw>

00009890 <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    9890:	7a e9       	ldi	r23, 0x9A	; 154
	add r23,r22
    9892:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    9894:	75 83       	std	Z+5, r23	; 0x05

00009896 <esmw>:
#endif

esmw:
	clr r1	
    9896:	11 24       	eor	r1, r1
	ret
    9898:	08 95       	ret

0000989a <steptable>:
    989a:	22 00       	.word	0x0022	; ????
    989c:	24 00       	.word	0x0024	; ????
    989e:	26 00       	.word	0x0026	; ????
    98a0:	28 00       	.word	0x0028	; ????
    98a2:	2b 00       	.word	0x002b	; ????
    98a4:	2d 00       	.word	0x002d	; ????
    98a6:	30 00       	.word	0x0030	; ????
    98a8:	33 00       	.word	0x0033	; ????
    98aa:	36 00       	.word	0x0036	; ????
    98ac:	39 00       	.word	0x0039	; ????
    98ae:	3d 00       	.word	0x003d	; ????
    98b0:	40 00       	.word	0x0040	; ????
    98b2:	44 00       	.word	0x0044	; ????
    98b4:	48 00       	.word	0x0048	; ????
    98b6:	4c 00       	.word	0x004c	; ????
    98b8:	51 00       	.word	0x0051	; ????
    98ba:	56 00       	.word	0x0056	; ????
    98bc:	5b 00       	.word	0x005b	; ????
    98be:	60 00       	.word	0x0060	; ????
    98c0:	66 00       	.word	0x0066	; ????
    98c2:	6c 00       	.word	0x006c	; ????
    98c4:	73 00       	.word	0x0073	; ????
    98c6:	79 00       	.word	0x0079	; ????
    98c8:	81 00       	.word	0x0081	; ????
    98ca:	88 00       	.word	0x0088	; ????
    98cc:	90 00       	.word	0x0090	; ????
    98ce:	99 00       	.word	0x0099	; ????
    98d0:	a2 00       	.word	0x00a2	; ????
    98d2:	ac 00       	.word	0x00ac	; ????
    98d4:	b6 00       	.word	0x00b6	; ????
    98d6:	c1 00       	.word	0x00c1	; ????
    98d8:	cc 00       	.word	0x00cc	; ????
    98da:	d8 00       	.word	0x00d8	; ????
    98dc:	e5 00       	.word	0x00e5	; ????
    98de:	f3 00       	.word	0x00f3	; ????
    98e0:	01 01       	movw	r0, r2
    98e2:	10 01       	movw	r2, r0
    98e4:	21 01       	movw	r4, r2
    98e6:	32 01       	movw	r6, r4
    98e8:	44 01       	movw	r8, r8
    98ea:	57 01       	movw	r10, r14
    98ec:	6c 01       	movw	r12, r24
    98ee:	81 01       	movw	r16, r2
    98f0:	98 01       	movw	r18, r16
    98f2:	b0 01       	movw	r22, r0
    98f4:	ca 01       	movw	r24, r20
    98f6:	e5 01       	movw	r28, r10
    98f8:	02 02       	muls	r16, r18
    98fa:	21 02       	muls	r18, r17
    98fc:	41 02       	muls	r20, r17
    98fe:	64 02       	muls	r22, r20
    9900:	88 02       	muls	r24, r24
    9902:	ae 02       	muls	r26, r30
    9904:	d7 02       	muls	r29, r23
    9906:	03 03       	mulsu	r16, r19
    9908:	30 03       	mulsu	r19, r16
    990a:	61 03       	mulsu	r22, r17
    990c:	94 03       	fmuls	r17, r20
    990e:	cb 03       	fmulsu	r20, r19
    9910:	05 04       	cpc	r0, r5
    9912:	42 04       	cpc	r4, r2
    9914:	83 04       	cpc	r8, r3
    9916:	c7 04       	cpc	r12, r7
    9918:	10 05       	cpc	r17, r0
    991a:	5d 05       	cpc	r21, r13
    991c:	af 05       	cpc	r26, r15
    991e:	05 06       	cpc	r0, r21
    9920:	61 06       	cpc	r6, r17
    9922:	c2 06       	cpc	r12, r18
    9924:	29 07       	cpc	r18, r25
    9926:	96 07       	cpc	r25, r22
    9928:	09 08       	sbc	r0, r9
    992a:	83 08       	sbc	r8, r3
    992c:	05 09       	sbc	r16, r5
    992e:	8e 09       	sbc	r24, r14
    9930:	20 0a       	sbc	r2, r16
    9932:	ba 0a       	sbc	r11, r26
    9934:	5d 0b       	sbc	r21, r29
    9936:	0a 0c       	add	r0, r10
    9938:	c1 0c       	add	r12, r1
    993a:	84 0d       	add	r24, r4
    993c:	51 0e       	add	r5, r17
    993e:	2b 0f       	add	r18, r27
    9940:	12 10       	cpse	r1, r2
    9942:	07 11       	cpse	r16, r7
    9944:	0a 12       	cpse	r0, r26
    9946:	1d 13       	cpse	r17, r29
    9948:	40 14       	cp	r4, r0
    994a:	74 15       	cp	r23, r4
    994c:	ba 16       	cp	r11, r26
    994e:	14 18       	sub	r1, r4
    9950:	83 19       	sub	r24, r3
    9952:	07 1b       	sub	r16, r23
    9954:	a3 1c       	adc	r10, r3
    9956:	57 1e       	adc	r5, r23
    9958:	24 20       	and	r2, r4
    995a:	0e 22       	and	r0, r30
    995c:	14 24       	eor	r1, r4
    995e:	39 26       	eor	r3, r25
    9960:	7f 28       	or	r7, r15
    9962:	e8 2a       	or	r14, r24
    9964:	75 2d       	mov	r23, r5
    9966:	29 30       	cpi	r18, 0x09	; 9
    9968:	06 33       	cpi	r16, 0x36	; 54
    996a:	0f 36       	cpi	r16, 0x6F	; 111
    996c:	45 39       	cpi	r20, 0x95	; 149
    996e:	ad 3c       	cpi	r26, 0xCD	; 205
    9970:	49 40       	sbci	r20, 0x09	; 9
    9972:	1b 44       	sbci	r17, 0x4B	; 75
    9974:	28 48       	sbci	r18, 0x88	; 136
    9976:	73 4c       	sbci	r23, 0xC3	; 195
    9978:	fe 50       	subi	r31, 0x0E	; 14
    997a:	cf 55       	subi	r28, 0x5F	; 95
    997c:	ea 5a       	subi	r30, 0xAA	; 170
    997e:	51 60       	ori	r21, 0x01	; 1
    9980:	0c 66       	ori	r16, 0x6C	; 108
    9982:	1d 6c       	ori	r17, 0xCD	; 205
    9984:	8b 72       	andi	r24, 0x2B	; 43
    9986:	5a 79       	andi	r21, 0x9A	; 154
    9988:	92 80       	ldd	r9, Z+2	; 0x02
    998a:	37 88       	ldd	r3, Z+23	; 0x17
    998c:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <_end+0x8ae5>
    9990:	fd a1       	ldd	r31, Y+37	; 0x25
    9992:	9f ab       	std	Y+55, r25	; 0x37
    9994:	d3 b5       	in	r29, 0x23	; 35
    9996:	a3 c0       	rjmp	.+326    	; 0x9ade <waves+0xde>
	...

00009a00 <waves>:
    9a00:	00 03       	mulsu	r16, r16
    9a02:	06 09       	sbc	r16, r6
    9a04:	0c 10       	cpse	r0, r12
    9a06:	13 16       	cp	r1, r19
    9a08:	19 1c       	adc	r1, r9
    9a0a:	1f 22       	and	r1, r31
    9a0c:	25 28       	or	r2, r5
    9a0e:	2b 2e       	mov	r2, r27
    9a10:	31 33       	cpi	r19, 0x31	; 49
    9a12:	36 39       	cpi	r19, 0x96	; 150
    9a14:	3c 3f       	cpi	r19, 0xFC	; 252
    9a16:	41 44       	sbci	r20, 0x41	; 65
    9a18:	47 49       	sbci	r20, 0x97	; 151
    9a1a:	4c 4e       	sbci	r20, 0xEC	; 236
    9a1c:	51 53       	subi	r21, 0x31	; 49
    9a1e:	55 58       	subi	r21, 0x85	; 133
    9a20:	5a 5c       	subi	r21, 0xCA	; 202
    9a22:	5e 60       	ori	r21, 0x0E	; 14
    9a24:	62 64       	ori	r22, 0x42	; 66
    9a26:	66 68       	ori	r22, 0x86	; 134
    9a28:	6a 6b       	ori	r22, 0xBA	; 186
    9a2a:	6d 6f       	ori	r22, 0xFD	; 253
    9a2c:	70 71       	andi	r23, 0x10	; 16
    9a2e:	73 74       	andi	r23, 0x43	; 67
    9a30:	75 76       	andi	r23, 0x65	; 101
    9a32:	78 79       	andi	r23, 0x98	; 152
    9a34:	7a 7a       	andi	r23, 0xAA	; 170
    9a36:	7b 7c       	andi	r23, 0xCB	; 203
    9a38:	7d 7d       	andi	r23, 0xDD	; 221
    9a3a:	7e 7e       	andi	r23, 0xEE	; 238
    9a3c:	7e 7f       	andi	r23, 0xFE	; 254
    9a3e:	7f 7f       	andi	r23, 0xFF	; 255
    9a40:	7f 7f       	andi	r23, 0xFF	; 255
    9a42:	7f 7f       	andi	r23, 0xFF	; 255
    9a44:	7e 7e       	andi	r23, 0xEE	; 238
    9a46:	7e 7d       	andi	r23, 0xDE	; 222
    9a48:	7d 7c       	andi	r23, 0xCD	; 205
    9a4a:	7b 7a       	andi	r23, 0xAB	; 171
    9a4c:	7a 79       	andi	r23, 0x9A	; 154
    9a4e:	78 76       	andi	r23, 0x68	; 104
    9a50:	75 74       	andi	r23, 0x45	; 69
    9a52:	73 71       	andi	r23, 0x13	; 19
    9a54:	70 6f       	ori	r23, 0xF0	; 240
    9a56:	6d 6b       	ori	r22, 0xBD	; 189
    9a58:	6a 68       	ori	r22, 0x8A	; 138
    9a5a:	66 64       	ori	r22, 0x46	; 70
    9a5c:	62 60       	ori	r22, 0x02	; 2
    9a5e:	5e 5c       	subi	r21, 0xCE	; 206
    9a60:	5a 58       	subi	r21, 0x8A	; 138
    9a62:	55 53       	subi	r21, 0x35	; 53
    9a64:	51 4e       	sbci	r21, 0xE1	; 225
    9a66:	4c 49       	sbci	r20, 0x9C	; 156
    9a68:	47 44       	sbci	r20, 0x47	; 71
    9a6a:	41 3f       	cpi	r20, 0xF1	; 241
    9a6c:	3c 39       	cpi	r19, 0x9C	; 156
    9a6e:	36 33       	cpi	r19, 0x36	; 54
    9a70:	31 2e       	mov	r3, r17
    9a72:	2b 28       	or	r2, r11
    9a74:	25 22       	and	r2, r21
    9a76:	1f 1c       	adc	r1, r15
    9a78:	19 16       	cp	r1, r25
    9a7a:	13 10       	cpse	r1, r3
    9a7c:	0c 09       	sbc	r16, r12
    9a7e:	06 03       	mulsu	r16, r22
    9a80:	00 fd       	sbrc	r16, 0
    9a82:	fa f7       	brpl	.-2      	; 0x9a82 <waves+0x82>
    9a84:	f4 f0       	brlt	.+60     	; 0x9ac2 <waves+0xc2>
    9a86:	ed ea       	ldi	r30, 0xAD	; 173
    9a88:	e7 e4       	ldi	r30, 0x47	; 71
    9a8a:	e1 de       	rcall	.-574    	; 0x984e <set_note_waves+0x12>
    9a8c:	db d8       	rcall	.-3658   	; 0x8c44 <push_loop+0x6>
    9a8e:	d5 d2       	rcall	.+1450   	; 0xa03a <waves+0x63a>
    9a90:	cf cd       	rjmp	.-1122   	; 0x9630 <ProcessMusic+0x1b0>
    9a92:	ca c7       	rjmp	.+3988   	; 0xaa28 <drawplayer+0xc4>
    9a94:	c4 c1       	rjmp	.+904    	; 0x9e1e <waves+0x41e>
    9a96:	bf bc       	out	0x2f, r11	; 47
    9a98:	b9 b7       	in	r27, 0x39	; 57
    9a9a:	b4 b2       	in	r11, 0x14	; 20
    9a9c:	af ad       	ldd	r26, Y+63	; 0x3f
    9a9e:	ab a8       	ldd	r10, Y+51	; 0x33
    9aa0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    9aa2:	a2 a0       	ldd	r10, Z+34	; 0x22
    9aa4:	9e 9c       	mul	r9, r14
    9aa6:	9a 98       	cbi	0x13, 2	; 19
    9aa8:	96 95       	lsr	r25
    9aaa:	93 91       	.word	0x9193	; ????
    9aac:	90 8f       	std	Z+24, r25	; 0x18
    9aae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    9ab0:	8b 8a       	std	Y+19, r8	; 0x13
    9ab2:	88 87       	std	Y+8, r24	; 0x08
    9ab4:	86 86       	std	Z+14, r8	; 0x0e
    9ab6:	85 84       	ldd	r8, Z+13	; 0x0d
    9ab8:	83 83       	std	Z+3, r24	; 0x03
    9aba:	82 82       	std	Z+2, r8	; 0x02
    9abc:	82 81       	ldd	r24, Z+2	; 0x02
    9abe:	81 81       	ldd	r24, Z+1	; 0x01
    9ac0:	81 81       	ldd	r24, Z+1	; 0x01
    9ac2:	81 81       	ldd	r24, Z+1	; 0x01
    9ac4:	82 82       	std	Z+2, r8	; 0x02
    9ac6:	82 83       	std	Z+2, r24	; 0x02
    9ac8:	83 84       	ldd	r8, Z+11	; 0x0b
    9aca:	85 86       	std	Z+13, r8	; 0x0d
    9acc:	86 87       	std	Z+14, r24	; 0x0e
    9ace:	88 8a       	std	Y+16, r8	; 0x10
    9ad0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    9ad2:	8d 8f       	std	Y+29, r24	; 0x1d
    9ad4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <_end+0x8793>
    9ad8:	96 98       	cbi	0x12, 6	; 18
    9ada:	9a 9c       	mul	r9, r10
    9adc:	9e a0       	ldd	r9, Y+38	; 0x26
    9ade:	a2 a4       	ldd	r10, Z+42	; 0x2a
    9ae0:	a6 a8       	ldd	r10, Z+54	; 0x36
    9ae2:	ab ad       	ldd	r26, Y+59	; 0x3b
    9ae4:	af b2       	in	r10, 0x1f	; 31
    9ae6:	b4 b7       	in	r27, 0x34	; 52
    9ae8:	b9 bc       	out	0x29, r11	; 41
    9aea:	bf c1       	rjmp	.+894    	; 0x9e6a <waves+0x46a>
    9aec:	c4 c7       	rjmp	.+3976   	; 0xaa76 <drawplayer+0x112>
    9aee:	ca cd       	rjmp	.-1132   	; 0x9684 <ProcessMusic+0x204>
    9af0:	cf d2       	rcall	.+1438   	; 0xa090 <waves+0x690>
    9af2:	d5 d8       	rcall	.-3670   	; 0x8c9e <no_render+0x40>
    9af4:	db de       	rcall	.-586    	; 0x98ac <steptable+0x12>
    9af6:	e1 e4       	ldi	r30, 0x41	; 65
    9af8:	e7 ea       	ldi	r30, 0xA7	; 167
    9afa:	ed f0       	brhs	.+58     	; 0x9b36 <waves+0x136>
    9afc:	f4 f7       	brge	.-4      	; 0x9afa <waves+0xfa>
    9afe:	fa fd       	.word	0xfdfa	; ????
    9b00:	80 81       	ld	r24, Z
    9b02:	82 83       	std	Z+2, r24	; 0x02
    9b04:	84 85       	ldd	r24, Z+12	; 0x0c
    9b06:	86 87       	std	Z+14, r24	; 0x0e
    9b08:	88 89       	ldd	r24, Y+16	; 0x10
    9b0a:	8a 8b       	std	Y+18, r24	; 0x12
    9b0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    9b0e:	8e 8f       	std	Y+30, r24	; 0x1e
    9b10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <_end+0x8592>
    9b14:	94 95       	.word	0x9594	; ????
    9b16:	96 97       	sbiw	r26, 0x26	; 38
    9b18:	98 99       	sbic	0x13, 0	; 19
    9b1a:	9a 9b       	sbis	0x13, 2	; 19
    9b1c:	9c 9d       	mul	r25, r12
    9b1e:	9e 9f       	mul	r25, r30
    9b20:	a0 a1       	ldd	r26, Z+32	; 0x20
    9b22:	a2 a3       	std	Z+34, r26	; 0x22
    9b24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    9b26:	a6 a7       	std	Z+46, r26	; 0x2e
    9b28:	a8 a9       	ldd	r26, Y+48	; 0x30
    9b2a:	aa ab       	std	Y+50, r26	; 0x32
    9b2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    9b2e:	ae af       	std	Y+62, r26	; 0x3e
    9b30:	b0 b1       	in	r27, 0x00	; 0
    9b32:	b2 b3       	in	r27, 0x12	; 18
    9b34:	b4 b5       	in	r27, 0x24	; 36
    9b36:	b6 b7       	in	r27, 0x36	; 54
    9b38:	b8 b9       	out	0x08, r27	; 8
    9b3a:	ba bb       	out	0x1a, r27	; 26
    9b3c:	bc bd       	out	0x2c, r27	; 44
    9b3e:	be bf       	out	0x3e, r27	; 62
    9b40:	c0 c1       	rjmp	.+896    	; 0x9ec2 <waves+0x4c2>
    9b42:	c2 c3       	rjmp	.+1924   	; 0xa2c8 <waves+0x8c8>
    9b44:	c4 c5       	rjmp	.+2952   	; 0xa6ce <MapSprite2+0x3e>
    9b46:	c6 c7       	rjmp	.+3980   	; 0xaad4 <drawplayer2+0x18>
    9b48:	c8 c9       	rjmp	.-3184   	; 0x8eda <rj_p2+0x2>
    9b4a:	ca cb       	rjmp	.-2156   	; 0x92e0 <TriggerCommon+0x72>
    9b4c:	cc cd       	rjmp	.-1128   	; 0x96e6 <ProcessMusic+0x266>
    9b4e:	ce cf       	rjmp	.-100    	; 0x9aec <waves+0xec>
    9b50:	d0 d1       	rcall	.+928    	; 0x9ef2 <waves+0x4f2>
    9b52:	d2 d3       	rcall	.+1956   	; 0xa2f8 <waves+0x8f8>
    9b54:	d4 d5       	rcall	.+2984   	; 0xa6fe <MapSprite2+0x6e>
    9b56:	d6 d7       	rcall	.+4012   	; 0xab04 <drawplayer2+0x48>
    9b58:	d8 d9       	rcall	.-3152   	; 0x8f0a <WriteEeprom+0x10>
    9b5a:	da db       	rcall	.-2124   	; 0x9310 <TriggerCommon+0xa2>
    9b5c:	dc dd       	rcall	.-1096   	; 0x9716 <ProcessMusic+0x296>
    9b5e:	de df       	rcall	.-68     	; 0x9b1c <waves+0x11c>
    9b60:	e0 e1       	ldi	r30, 0x10	; 16
    9b62:	e2 e3       	ldi	r30, 0x32	; 50
    9b64:	e4 e5       	ldi	r30, 0x54	; 84
    9b66:	e6 e7       	ldi	r30, 0x76	; 118
    9b68:	e8 e9       	ldi	r30, 0x98	; 152
    9b6a:	ea eb       	ldi	r30, 0xBA	; 186
    9b6c:	ec ed       	ldi	r30, 0xDC	; 220
    9b6e:	ee ef       	ldi	r30, 0xFE	; 254
    9b70:	f0 f1       	brcs	.+124    	; 0x9bee <waves+0x1ee>
    9b72:	f2 f3       	brmi	.-4      	; 0x9b70 <waves+0x170>
    9b74:	f4 f5       	brge	.+124    	; 0x9bf2 <waves+0x1f2>
    9b76:	f6 f7       	brtc	.-4      	; 0x9b74 <waves+0x174>
    9b78:	f8 f9       	.word	0xf9f8	; ????
    9b7a:	fa fb       	.word	0xfbfa	; ????
    9b7c:	fc fd       	.word	0xfdfc	; ????
    9b7e:	fe ff       	.word	0xfffe	; ????
    9b80:	00 01       	movw	r0, r0
    9b82:	02 03       	mulsu	r16, r18
    9b84:	04 05       	cpc	r16, r4
    9b86:	06 07       	cpc	r16, r22
    9b88:	08 09       	sbc	r16, r8
    9b8a:	0a 0b       	sbc	r16, r26
    9b8c:	0c 0d       	add	r16, r12
    9b8e:	0e 0f       	add	r16, r30
    9b90:	10 11       	cpse	r17, r0
    9b92:	12 13       	cpse	r17, r18
    9b94:	14 15       	cp	r17, r4
    9b96:	16 17       	cp	r17, r22
    9b98:	18 19       	sub	r17, r8
    9b9a:	1a 1b       	sub	r17, r26
    9b9c:	1c 1d       	adc	r17, r12
    9b9e:	1e 1f       	adc	r17, r30
    9ba0:	20 21       	and	r18, r0
    9ba2:	22 23       	and	r18, r18
    9ba4:	24 25       	eor	r18, r4
    9ba6:	26 27       	eor	r18, r22
    9ba8:	28 29       	or	r18, r8
    9baa:	2a 2b       	or	r18, r26
    9bac:	2c 2d       	mov	r18, r12
    9bae:	2e 2f       	mov	r18, r30
    9bb0:	30 31       	cpi	r19, 0x10	; 16
    9bb2:	32 33       	cpi	r19, 0x32	; 50
    9bb4:	34 35       	cpi	r19, 0x54	; 84
    9bb6:	36 37       	cpi	r19, 0x76	; 118
    9bb8:	38 39       	cpi	r19, 0x98	; 152
    9bba:	3a 3b       	cpi	r19, 0xBA	; 186
    9bbc:	3c 3d       	cpi	r19, 0xDC	; 220
    9bbe:	3e 3f       	cpi	r19, 0xFE	; 254
    9bc0:	40 41       	sbci	r20, 0x10	; 16
    9bc2:	42 43       	sbci	r20, 0x32	; 50
    9bc4:	44 45       	sbci	r20, 0x54	; 84
    9bc6:	46 47       	sbci	r20, 0x76	; 118
    9bc8:	48 49       	sbci	r20, 0x98	; 152
    9bca:	4a 4b       	sbci	r20, 0xBA	; 186
    9bcc:	4c 4d       	sbci	r20, 0xDC	; 220
    9bce:	4e 4f       	sbci	r20, 0xFE	; 254
    9bd0:	50 51       	subi	r21, 0x10	; 16
    9bd2:	52 53       	subi	r21, 0x32	; 50
    9bd4:	54 55       	subi	r21, 0x54	; 84
    9bd6:	56 57       	subi	r21, 0x76	; 118
    9bd8:	58 59       	subi	r21, 0x98	; 152
    9bda:	5a 5b       	subi	r21, 0xBA	; 186
    9bdc:	5c 5d       	subi	r21, 0xDC	; 220
    9bde:	5e 5f       	subi	r21, 0xFE	; 254
    9be0:	60 61       	ori	r22, 0x10	; 16
    9be2:	62 63       	ori	r22, 0x32	; 50
    9be4:	64 65       	ori	r22, 0x54	; 84
    9be6:	66 67       	ori	r22, 0x76	; 118
    9be8:	68 69       	ori	r22, 0x98	; 152
    9bea:	6a 6b       	ori	r22, 0xBA	; 186
    9bec:	6c 6d       	ori	r22, 0xDC	; 220
    9bee:	6e 6f       	ori	r22, 0xFE	; 254
    9bf0:	70 71       	andi	r23, 0x10	; 16
    9bf2:	72 73       	andi	r23, 0x32	; 50
    9bf4:	74 75       	andi	r23, 0x54	; 84
    9bf6:	76 77       	andi	r23, 0x76	; 118
    9bf8:	78 79       	andi	r23, 0x98	; 152
    9bfa:	7a 7b       	andi	r23, 0xBA	; 186
    9bfc:	7c 7d       	andi	r23, 0xDC	; 220
    9bfe:	7e 7f       	andi	r23, 0xFE	; 254
    9c00:	00 02       	muls	r16, r16
    9c02:	04 06       	cpc	r0, r20
    9c04:	08 0a       	sbc	r0, r24
    9c06:	0c 0e       	add	r0, r28
    9c08:	10 12       	cpse	r1, r16
    9c0a:	14 16       	cp	r1, r20
    9c0c:	18 1a       	sub	r1, r24
    9c0e:	1c 1e       	adc	r1, r28
    9c10:	20 22       	and	r2, r16
    9c12:	24 26       	eor	r2, r20
    9c14:	28 2a       	or	r2, r24
    9c16:	2c 2e       	mov	r2, r28
    9c18:	30 32       	cpi	r19, 0x20	; 32
    9c1a:	34 36       	cpi	r19, 0x64	; 100
    9c1c:	38 3a       	cpi	r19, 0xA8	; 168
    9c1e:	3c 3e       	cpi	r19, 0xEC	; 236
    9c20:	40 42       	sbci	r20, 0x20	; 32
    9c22:	44 46       	sbci	r20, 0x64	; 100
    9c24:	48 4a       	sbci	r20, 0xA8	; 168
    9c26:	4c 4e       	sbci	r20, 0xEC	; 236
    9c28:	50 52       	subi	r21, 0x20	; 32
    9c2a:	54 56       	subi	r21, 0x64	; 100
    9c2c:	58 5a       	subi	r21, 0xA8	; 168
    9c2e:	5c 5e       	subi	r21, 0xEC	; 236
    9c30:	60 62       	ori	r22, 0x20	; 32
    9c32:	64 66       	ori	r22, 0x64	; 100
    9c34:	68 6a       	ori	r22, 0xA8	; 168
    9c36:	6c 6e       	ori	r22, 0xEC	; 236
    9c38:	70 72       	andi	r23, 0x20	; 32
    9c3a:	74 76       	andi	r23, 0x64	; 100
    9c3c:	78 7a       	andi	r23, 0xA8	; 168
    9c3e:	7c 7e       	andi	r23, 0xEC	; 236
    9c40:	7f 7d       	andi	r23, 0xDF	; 223
    9c42:	7b 79       	andi	r23, 0x9B	; 155
    9c44:	77 75       	andi	r23, 0x57	; 87
    9c46:	73 71       	andi	r23, 0x13	; 19
    9c48:	6f 6d       	ori	r22, 0xDF	; 223
    9c4a:	6b 69       	ori	r22, 0x9B	; 155
    9c4c:	67 65       	ori	r22, 0x57	; 87
    9c4e:	63 61       	ori	r22, 0x13	; 19
    9c50:	5f 5d       	subi	r21, 0xDF	; 223
    9c52:	5b 59       	subi	r21, 0x9B	; 155
    9c54:	57 55       	subi	r21, 0x57	; 87
    9c56:	53 51       	subi	r21, 0x13	; 19
    9c58:	4f 4d       	sbci	r20, 0xDF	; 223
    9c5a:	4b 49       	sbci	r20, 0x9B	; 155
    9c5c:	47 45       	sbci	r20, 0x57	; 87
    9c5e:	43 41       	sbci	r20, 0x13	; 19
    9c60:	3f 3d       	cpi	r19, 0xDF	; 223
    9c62:	3b 39       	cpi	r19, 0x9B	; 155
    9c64:	37 35       	cpi	r19, 0x57	; 87
    9c66:	33 31       	cpi	r19, 0x13	; 19
    9c68:	2f 2d       	mov	r18, r15
    9c6a:	2b 29       	or	r18, r11
    9c6c:	27 25       	eor	r18, r7
    9c6e:	23 21       	and	r18, r3
    9c70:	1f 1d       	adc	r17, r15
    9c72:	1b 19       	sub	r17, r11
    9c74:	17 15       	cp	r17, r7
    9c76:	13 11       	cpse	r17, r3
    9c78:	0f 0d       	add	r16, r15
    9c7a:	0b 09       	sbc	r16, r11
    9c7c:	07 05       	cpc	r16, r7
    9c7e:	03 01       	movw	r0, r6
    9c80:	ff fd       	.word	0xfdff	; ????
    9c82:	fb f9       	.word	0xf9fb	; ????
    9c84:	f7 f5       	brid	.+124    	; 0x9d02 <waves+0x302>
    9c86:	f3 f1       	brvs	.+124    	; 0x9d04 <waves+0x304>
    9c88:	ef ed       	ldi	r30, 0xDF	; 223
    9c8a:	eb e9       	ldi	r30, 0x9B	; 155
    9c8c:	e7 e5       	ldi	r30, 0x57	; 87
    9c8e:	e3 e1       	ldi	r30, 0x13	; 19
    9c90:	df dd       	rcall	.-1090   	; 0x9850 <set_note_waves+0x14>
    9c92:	db d9       	rcall	.-3146   	; 0x904a <PatchCommand06+0x2>
    9c94:	d7 d5       	rcall	.+2990   	; 0xa844 <DisplayLogo+0x14>
    9c96:	d3 d1       	rcall	.+934    	; 0xa03e <waves+0x63e>
    9c98:	cf cd       	rjmp	.-1122   	; 0x9838 <SetMixerNote+0x6>
    9c9a:	cb c9       	rjmp	.-3178   	; 0x9032 <PatchCommand01+0x4>
    9c9c:	c7 c5       	rjmp	.+2958   	; 0xa82c <WaitVsync+0x2a>
    9c9e:	c3 c1       	rjmp	.+902    	; 0xa026 <waves+0x626>
    9ca0:	bf bd       	out	0x2f, r27	; 47
    9ca2:	bb b9       	out	0x0b, r27	; 11
    9ca4:	b7 b5       	in	r27, 0x27	; 39
    9ca6:	b3 b1       	in	r27, 0x03	; 3
    9ca8:	af ad       	ldd	r26, Y+63	; 0x3f
    9caa:	ab a9       	ldd	r26, Y+51	; 0x33
    9cac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    9cae:	a3 a1       	ldd	r26, Z+35	; 0x23
    9cb0:	9f 9d       	mul	r25, r15
    9cb2:	9b 99       	sbic	0x13, 3	; 19
    9cb4:	97 95       	ror	r25
    9cb6:	93 91       	.word	0x9193	; ????
    9cb8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    9cba:	8b 89       	ldd	r24, Y+19	; 0x13
    9cbc:	87 85       	ldd	r24, Z+15	; 0x0f
    9cbe:	83 81       	ldd	r24, Z+3	; 0x03
    9cc0:	80 82       	st	Z, r8
    9cc2:	84 86       	std	Z+12, r8	; 0x0c
    9cc4:	88 8a       	std	Y+16, r8	; 0x10
    9cc6:	8c 8e       	std	Y+28, r8	; 0x1c
    9cc8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <_end+0x8894>
    9ccc:	98 9a       	sbi	0x13, 0	; 19
    9cce:	9c 9e       	mul	r9, r28
    9cd0:	a0 a2       	std	Z+32, r10	; 0x20
    9cd2:	a4 a6       	std	Z+44, r10	; 0x2c
    9cd4:	a8 aa       	std	Y+48, r10	; 0x30
    9cd6:	ac ae       	std	Y+60, r10	; 0x3c
    9cd8:	b0 b2       	in	r11, 0x10	; 16
    9cda:	b4 b6       	in	r11, 0x34	; 52
    9cdc:	b8 ba       	out	0x18, r11	; 24
    9cde:	bc be       	out	0x3c, r11	; 60
    9ce0:	c0 c2       	rjmp	.+1408   	; 0xa262 <waves+0x862>
    9ce2:	c4 c6       	rjmp	.+3464   	; 0xaa6c <drawplayer+0x108>
    9ce4:	c8 ca       	rjmp	.-2672   	; 0x9276 <TriggerCommon+0x8>
    9ce6:	cc ce       	rjmp	.-616    	; 0x9a80 <waves+0x80>
    9ce8:	d0 d2       	rcall	.+1440   	; 0xa28a <waves+0x88a>
    9cea:	d4 d6       	rcall	.+3496   	; 0xaa94 <drawplayer+0x130>
    9cec:	d8 da       	rcall	.-2640   	; 0x929e <TriggerCommon+0x30>
    9cee:	dc de       	rcall	.-584    	; 0x9aa8 <waves+0xa8>
    9cf0:	e0 e2       	ldi	r30, 0x20	; 32
    9cf2:	e4 e6       	ldi	r30, 0x64	; 100
    9cf4:	e8 ea       	ldi	r30, 0xA8	; 168
    9cf6:	ec ee       	ldi	r30, 0xEC	; 236
    9cf8:	f0 f2       	brcs	.-68     	; 0x9cb6 <waves+0x2b6>
    9cfa:	f4 f6       	brge	.-68     	; 0x9cb8 <waves+0x2b8>
    9cfc:	f8 fa       	.word	0xfaf8	; ????
    9cfe:	fc fe       	.word	0xfefc	; ????
    9d00:	7f 7f       	andi	r23, 0xFF	; 255
    9d02:	7f 7f       	andi	r23, 0xFF	; 255
    9d04:	7f 7f       	andi	r23, 0xFF	; 255
    9d06:	7f 7f       	andi	r23, 0xFF	; 255
    9d08:	7f 7f       	andi	r23, 0xFF	; 255
    9d0a:	7f 7f       	andi	r23, 0xFF	; 255
    9d0c:	7f 7f       	andi	r23, 0xFF	; 255
    9d0e:	7f 7f       	andi	r23, 0xFF	; 255
    9d10:	7f 7f       	andi	r23, 0xFF	; 255
    9d12:	7f 7f       	andi	r23, 0xFF	; 255
    9d14:	7f 7f       	andi	r23, 0xFF	; 255
    9d16:	7f 7f       	andi	r23, 0xFF	; 255
    9d18:	7f 7f       	andi	r23, 0xFF	; 255
    9d1a:	7f 7f       	andi	r23, 0xFF	; 255
    9d1c:	7f 7f       	andi	r23, 0xFF	; 255
    9d1e:	7f 7f       	andi	r23, 0xFF	; 255
    9d20:	7f 7f       	andi	r23, 0xFF	; 255
    9d22:	7f 7f       	andi	r23, 0xFF	; 255
    9d24:	7f 7f       	andi	r23, 0xFF	; 255
    9d26:	7f 7f       	andi	r23, 0xFF	; 255
    9d28:	7f 7f       	andi	r23, 0xFF	; 255
    9d2a:	7f 7f       	andi	r23, 0xFF	; 255
    9d2c:	7f 7f       	andi	r23, 0xFF	; 255
    9d2e:	7f 7f       	andi	r23, 0xFF	; 255
    9d30:	7f 7f       	andi	r23, 0xFF	; 255
    9d32:	7f 7f       	andi	r23, 0xFF	; 255
    9d34:	7f 7f       	andi	r23, 0xFF	; 255
    9d36:	7f 7f       	andi	r23, 0xFF	; 255
    9d38:	7f 7f       	andi	r23, 0xFF	; 255
    9d3a:	7f 7f       	andi	r23, 0xFF	; 255
    9d3c:	7f 7f       	andi	r23, 0xFF	; 255
    9d3e:	7f 7f       	andi	r23, 0xFF	; 255
    9d40:	80 80       	ld	r8, Z
    9d42:	80 80       	ld	r8, Z
    9d44:	80 80       	ld	r8, Z
    9d46:	80 80       	ld	r8, Z
    9d48:	80 80       	ld	r8, Z
    9d4a:	80 80       	ld	r8, Z
    9d4c:	80 80       	ld	r8, Z
    9d4e:	80 80       	ld	r8, Z
    9d50:	80 80       	ld	r8, Z
    9d52:	80 80       	ld	r8, Z
    9d54:	80 80       	ld	r8, Z
    9d56:	80 80       	ld	r8, Z
    9d58:	80 80       	ld	r8, Z
    9d5a:	80 80       	ld	r8, Z
    9d5c:	80 80       	ld	r8, Z
    9d5e:	80 80       	ld	r8, Z
    9d60:	80 80       	ld	r8, Z
    9d62:	80 80       	ld	r8, Z
    9d64:	80 80       	ld	r8, Z
    9d66:	80 80       	ld	r8, Z
    9d68:	80 80       	ld	r8, Z
    9d6a:	80 80       	ld	r8, Z
    9d6c:	80 80       	ld	r8, Z
    9d6e:	80 80       	ld	r8, Z
    9d70:	80 80       	ld	r8, Z
    9d72:	80 80       	ld	r8, Z
    9d74:	80 80       	ld	r8, Z
    9d76:	80 80       	ld	r8, Z
    9d78:	80 80       	ld	r8, Z
    9d7a:	80 80       	ld	r8, Z
    9d7c:	80 80       	ld	r8, Z
    9d7e:	80 80       	ld	r8, Z
    9d80:	80 80       	ld	r8, Z
    9d82:	80 80       	ld	r8, Z
    9d84:	80 80       	ld	r8, Z
    9d86:	80 80       	ld	r8, Z
    9d88:	80 80       	ld	r8, Z
    9d8a:	80 80       	ld	r8, Z
    9d8c:	80 80       	ld	r8, Z
    9d8e:	80 80       	ld	r8, Z
    9d90:	80 80       	ld	r8, Z
    9d92:	80 80       	ld	r8, Z
    9d94:	80 80       	ld	r8, Z
    9d96:	80 80       	ld	r8, Z
    9d98:	80 80       	ld	r8, Z
    9d9a:	80 80       	ld	r8, Z
    9d9c:	80 80       	ld	r8, Z
    9d9e:	80 80       	ld	r8, Z
    9da0:	80 80       	ld	r8, Z
    9da2:	80 80       	ld	r8, Z
    9da4:	80 80       	ld	r8, Z
    9da6:	80 80       	ld	r8, Z
    9da8:	80 80       	ld	r8, Z
    9daa:	80 80       	ld	r8, Z
    9dac:	80 80       	ld	r8, Z
    9dae:	80 80       	ld	r8, Z
    9db0:	80 80       	ld	r8, Z
    9db2:	80 80       	ld	r8, Z
    9db4:	80 80       	ld	r8, Z
    9db6:	80 80       	ld	r8, Z
    9db8:	80 80       	ld	r8, Z
    9dba:	80 80       	ld	r8, Z
    9dbc:	80 80       	ld	r8, Z
    9dbe:	80 80       	ld	r8, Z
    9dc0:	80 80       	ld	r8, Z
    9dc2:	80 80       	ld	r8, Z
    9dc4:	80 80       	ld	r8, Z
    9dc6:	80 80       	ld	r8, Z
    9dc8:	80 80       	ld	r8, Z
    9dca:	80 80       	ld	r8, Z
    9dcc:	80 80       	ld	r8, Z
    9dce:	80 80       	ld	r8, Z
    9dd0:	80 80       	ld	r8, Z
    9dd2:	80 80       	ld	r8, Z
    9dd4:	80 80       	ld	r8, Z
    9dd6:	80 80       	ld	r8, Z
    9dd8:	80 80       	ld	r8, Z
    9dda:	80 80       	ld	r8, Z
    9ddc:	80 80       	ld	r8, Z
    9dde:	80 80       	ld	r8, Z
    9de0:	80 80       	ld	r8, Z
    9de2:	80 80       	ld	r8, Z
    9de4:	80 80       	ld	r8, Z
    9de6:	80 80       	ld	r8, Z
    9de8:	80 80       	ld	r8, Z
    9dea:	80 80       	ld	r8, Z
    9dec:	80 80       	ld	r8, Z
    9dee:	80 80       	ld	r8, Z
    9df0:	80 80       	ld	r8, Z
    9df2:	80 80       	ld	r8, Z
    9df4:	80 80       	ld	r8, Z
    9df6:	80 80       	ld	r8, Z
    9df8:	80 80       	ld	r8, Z
    9dfa:	80 80       	ld	r8, Z
    9dfc:	80 80       	ld	r8, Z
    9dfe:	80 80       	ld	r8, Z
    9e00:	7f 7f       	andi	r23, 0xFF	; 255
    9e02:	7f 7f       	andi	r23, 0xFF	; 255
    9e04:	7f 7f       	andi	r23, 0xFF	; 255
    9e06:	7f 7f       	andi	r23, 0xFF	; 255
    9e08:	7f 7f       	andi	r23, 0xFF	; 255
    9e0a:	7f 7f       	andi	r23, 0xFF	; 255
    9e0c:	7f 7f       	andi	r23, 0xFF	; 255
    9e0e:	7f 7f       	andi	r23, 0xFF	; 255
    9e10:	7f 7f       	andi	r23, 0xFF	; 255
    9e12:	7f 7f       	andi	r23, 0xFF	; 255
    9e14:	7f 7f       	andi	r23, 0xFF	; 255
    9e16:	7f 7f       	andi	r23, 0xFF	; 255
    9e18:	7f 7f       	andi	r23, 0xFF	; 255
    9e1a:	7f 7f       	andi	r23, 0xFF	; 255
    9e1c:	7f 7f       	andi	r23, 0xFF	; 255
    9e1e:	7f 7f       	andi	r23, 0xFF	; 255
    9e20:	7f 7f       	andi	r23, 0xFF	; 255
    9e22:	7f 7f       	andi	r23, 0xFF	; 255
    9e24:	7f 7f       	andi	r23, 0xFF	; 255
    9e26:	7f 7f       	andi	r23, 0xFF	; 255
    9e28:	7f 7f       	andi	r23, 0xFF	; 255
    9e2a:	7f 7f       	andi	r23, 0xFF	; 255
    9e2c:	7f 7f       	andi	r23, 0xFF	; 255
    9e2e:	7f 7f       	andi	r23, 0xFF	; 255
    9e30:	7f 7f       	andi	r23, 0xFF	; 255
    9e32:	7f 7f       	andi	r23, 0xFF	; 255
    9e34:	7f 7f       	andi	r23, 0xFF	; 255
    9e36:	7f 7f       	andi	r23, 0xFF	; 255
    9e38:	7f 7f       	andi	r23, 0xFF	; 255
    9e3a:	7f 7f       	andi	r23, 0xFF	; 255
    9e3c:	7f 7f       	andi	r23, 0xFF	; 255
    9e3e:	7f 7f       	andi	r23, 0xFF	; 255
    9e40:	7f 7f       	andi	r23, 0xFF	; 255
    9e42:	7f 7f       	andi	r23, 0xFF	; 255
    9e44:	7f 7f       	andi	r23, 0xFF	; 255
    9e46:	7f 7f       	andi	r23, 0xFF	; 255
    9e48:	7f 7f       	andi	r23, 0xFF	; 255
    9e4a:	7f 7f       	andi	r23, 0xFF	; 255
    9e4c:	7f 7f       	andi	r23, 0xFF	; 255
    9e4e:	7f 7f       	andi	r23, 0xFF	; 255
    9e50:	7f 7f       	andi	r23, 0xFF	; 255
    9e52:	7f 7f       	andi	r23, 0xFF	; 255
    9e54:	7f 7f       	andi	r23, 0xFF	; 255
    9e56:	7f 7f       	andi	r23, 0xFF	; 255
    9e58:	7f 7f       	andi	r23, 0xFF	; 255
    9e5a:	7f 7f       	andi	r23, 0xFF	; 255
    9e5c:	7f 7f       	andi	r23, 0xFF	; 255
    9e5e:	7f 7f       	andi	r23, 0xFF	; 255
    9e60:	7f 7f       	andi	r23, 0xFF	; 255
    9e62:	7f 7f       	andi	r23, 0xFF	; 255
    9e64:	7f 7f       	andi	r23, 0xFF	; 255
    9e66:	7f 7f       	andi	r23, 0xFF	; 255
    9e68:	7f 7f       	andi	r23, 0xFF	; 255
    9e6a:	7f 7f       	andi	r23, 0xFF	; 255
    9e6c:	7f 7f       	andi	r23, 0xFF	; 255
    9e6e:	7f 7f       	andi	r23, 0xFF	; 255
    9e70:	7f 7f       	andi	r23, 0xFF	; 255
    9e72:	7f 7f       	andi	r23, 0xFF	; 255
    9e74:	7f 7f       	andi	r23, 0xFF	; 255
    9e76:	7f 7f       	andi	r23, 0xFF	; 255
    9e78:	7f 7f       	andi	r23, 0xFF	; 255
    9e7a:	7f 7f       	andi	r23, 0xFF	; 255
    9e7c:	7f 7f       	andi	r23, 0xFF	; 255
    9e7e:	7f 7f       	andi	r23, 0xFF	; 255
    9e80:	80 80       	ld	r8, Z
    9e82:	80 80       	ld	r8, Z
    9e84:	80 80       	ld	r8, Z
    9e86:	80 80       	ld	r8, Z
    9e88:	80 80       	ld	r8, Z
    9e8a:	80 80       	ld	r8, Z
    9e8c:	80 80       	ld	r8, Z
    9e8e:	80 80       	ld	r8, Z
    9e90:	80 80       	ld	r8, Z
    9e92:	80 80       	ld	r8, Z
    9e94:	80 80       	ld	r8, Z
    9e96:	80 80       	ld	r8, Z
    9e98:	80 80       	ld	r8, Z
    9e9a:	80 80       	ld	r8, Z
    9e9c:	80 80       	ld	r8, Z
    9e9e:	80 80       	ld	r8, Z
    9ea0:	80 80       	ld	r8, Z
    9ea2:	80 80       	ld	r8, Z
    9ea4:	80 80       	ld	r8, Z
    9ea6:	80 80       	ld	r8, Z
    9ea8:	80 80       	ld	r8, Z
    9eaa:	80 80       	ld	r8, Z
    9eac:	80 80       	ld	r8, Z
    9eae:	80 80       	ld	r8, Z
    9eb0:	80 80       	ld	r8, Z
    9eb2:	80 80       	ld	r8, Z
    9eb4:	80 80       	ld	r8, Z
    9eb6:	80 80       	ld	r8, Z
    9eb8:	80 80       	ld	r8, Z
    9eba:	80 80       	ld	r8, Z
    9ebc:	80 80       	ld	r8, Z
    9ebe:	80 80       	ld	r8, Z
    9ec0:	80 80       	ld	r8, Z
    9ec2:	80 80       	ld	r8, Z
    9ec4:	80 80       	ld	r8, Z
    9ec6:	80 80       	ld	r8, Z
    9ec8:	80 80       	ld	r8, Z
    9eca:	80 80       	ld	r8, Z
    9ecc:	80 80       	ld	r8, Z
    9ece:	80 80       	ld	r8, Z
    9ed0:	80 80       	ld	r8, Z
    9ed2:	80 80       	ld	r8, Z
    9ed4:	80 80       	ld	r8, Z
    9ed6:	80 80       	ld	r8, Z
    9ed8:	80 80       	ld	r8, Z
    9eda:	80 80       	ld	r8, Z
    9edc:	80 80       	ld	r8, Z
    9ede:	80 80       	ld	r8, Z
    9ee0:	80 80       	ld	r8, Z
    9ee2:	80 80       	ld	r8, Z
    9ee4:	80 80       	ld	r8, Z
    9ee6:	80 80       	ld	r8, Z
    9ee8:	80 80       	ld	r8, Z
    9eea:	80 80       	ld	r8, Z
    9eec:	80 80       	ld	r8, Z
    9eee:	80 80       	ld	r8, Z
    9ef0:	80 80       	ld	r8, Z
    9ef2:	80 80       	ld	r8, Z
    9ef4:	80 80       	ld	r8, Z
    9ef6:	80 80       	ld	r8, Z
    9ef8:	80 80       	ld	r8, Z
    9efa:	80 80       	ld	r8, Z
    9efc:	80 80       	ld	r8, Z
    9efe:	80 80       	ld	r8, Z
    9f00:	7f 7f       	andi	r23, 0xFF	; 255
    9f02:	7f 7f       	andi	r23, 0xFF	; 255
    9f04:	7f 7f       	andi	r23, 0xFF	; 255
    9f06:	7f 7f       	andi	r23, 0xFF	; 255
    9f08:	7f 7f       	andi	r23, 0xFF	; 255
    9f0a:	7f 7f       	andi	r23, 0xFF	; 255
    9f0c:	7f 7f       	andi	r23, 0xFF	; 255
    9f0e:	7f 7f       	andi	r23, 0xFF	; 255
    9f10:	7f 7f       	andi	r23, 0xFF	; 255
    9f12:	7f 7f       	andi	r23, 0xFF	; 255
    9f14:	7f 7f       	andi	r23, 0xFF	; 255
    9f16:	7f 7f       	andi	r23, 0xFF	; 255
    9f18:	7f 7f       	andi	r23, 0xFF	; 255
    9f1a:	7f 7f       	andi	r23, 0xFF	; 255
    9f1c:	7f 7f       	andi	r23, 0xFF	; 255
    9f1e:	7f 7f       	andi	r23, 0xFF	; 255
    9f20:	7f 7f       	andi	r23, 0xFF	; 255
    9f22:	7f 7f       	andi	r23, 0xFF	; 255
    9f24:	7f 7f       	andi	r23, 0xFF	; 255
    9f26:	7f 7f       	andi	r23, 0xFF	; 255
    9f28:	7f 7f       	andi	r23, 0xFF	; 255
    9f2a:	7f 7f       	andi	r23, 0xFF	; 255
    9f2c:	7f 7f       	andi	r23, 0xFF	; 255
    9f2e:	7f 7f       	andi	r23, 0xFF	; 255
    9f30:	7f 7f       	andi	r23, 0xFF	; 255
    9f32:	7f 7f       	andi	r23, 0xFF	; 255
    9f34:	7f 7f       	andi	r23, 0xFF	; 255
    9f36:	7f 7f       	andi	r23, 0xFF	; 255
    9f38:	7f 7f       	andi	r23, 0xFF	; 255
    9f3a:	7f 7f       	andi	r23, 0xFF	; 255
    9f3c:	7f 7f       	andi	r23, 0xFF	; 255
    9f3e:	7f 7f       	andi	r23, 0xFF	; 255
    9f40:	7f 7f       	andi	r23, 0xFF	; 255
    9f42:	7f 7f       	andi	r23, 0xFF	; 255
    9f44:	7f 7f       	andi	r23, 0xFF	; 255
    9f46:	7f 7f       	andi	r23, 0xFF	; 255
    9f48:	7f 7f       	andi	r23, 0xFF	; 255
    9f4a:	7f 7f       	andi	r23, 0xFF	; 255
    9f4c:	7f 7f       	andi	r23, 0xFF	; 255
    9f4e:	7f 7f       	andi	r23, 0xFF	; 255
    9f50:	7f 7f       	andi	r23, 0xFF	; 255
    9f52:	7f 7f       	andi	r23, 0xFF	; 255
    9f54:	7f 7f       	andi	r23, 0xFF	; 255
    9f56:	7f 7f       	andi	r23, 0xFF	; 255
    9f58:	7f 7f       	andi	r23, 0xFF	; 255
    9f5a:	7f 7f       	andi	r23, 0xFF	; 255
    9f5c:	7f 7f       	andi	r23, 0xFF	; 255
    9f5e:	7f 7f       	andi	r23, 0xFF	; 255
    9f60:	7f 7f       	andi	r23, 0xFF	; 255
    9f62:	7f 7f       	andi	r23, 0xFF	; 255
    9f64:	7f 7f       	andi	r23, 0xFF	; 255
    9f66:	7f 7f       	andi	r23, 0xFF	; 255
    9f68:	7f 7f       	andi	r23, 0xFF	; 255
    9f6a:	7f 7f       	andi	r23, 0xFF	; 255
    9f6c:	7f 7f       	andi	r23, 0xFF	; 255
    9f6e:	7f 7f       	andi	r23, 0xFF	; 255
    9f70:	7f 7f       	andi	r23, 0xFF	; 255
    9f72:	7f 7f       	andi	r23, 0xFF	; 255
    9f74:	7f 7f       	andi	r23, 0xFF	; 255
    9f76:	7f 7f       	andi	r23, 0xFF	; 255
    9f78:	7f 7f       	andi	r23, 0xFF	; 255
    9f7a:	7f 7f       	andi	r23, 0xFF	; 255
    9f7c:	7f 7f       	andi	r23, 0xFF	; 255
    9f7e:	7f 7f       	andi	r23, 0xFF	; 255
    9f80:	7f 7f       	andi	r23, 0xFF	; 255
    9f82:	7f 7f       	andi	r23, 0xFF	; 255
    9f84:	7f 7f       	andi	r23, 0xFF	; 255
    9f86:	7f 7f       	andi	r23, 0xFF	; 255
    9f88:	7f 7f       	andi	r23, 0xFF	; 255
    9f8a:	7f 7f       	andi	r23, 0xFF	; 255
    9f8c:	7f 7f       	andi	r23, 0xFF	; 255
    9f8e:	7f 7f       	andi	r23, 0xFF	; 255
    9f90:	7f 7f       	andi	r23, 0xFF	; 255
    9f92:	7f 7f       	andi	r23, 0xFF	; 255
    9f94:	7f 7f       	andi	r23, 0xFF	; 255
    9f96:	7f 7f       	andi	r23, 0xFF	; 255
    9f98:	7f 7f       	andi	r23, 0xFF	; 255
    9f9a:	7f 7f       	andi	r23, 0xFF	; 255
    9f9c:	7f 7f       	andi	r23, 0xFF	; 255
    9f9e:	7f 7f       	andi	r23, 0xFF	; 255
    9fa0:	7f 7f       	andi	r23, 0xFF	; 255
    9fa2:	7f 7f       	andi	r23, 0xFF	; 255
    9fa4:	7f 7f       	andi	r23, 0xFF	; 255
    9fa6:	7f 7f       	andi	r23, 0xFF	; 255
    9fa8:	7f 7f       	andi	r23, 0xFF	; 255
    9faa:	7f 7f       	andi	r23, 0xFF	; 255
    9fac:	7f 7f       	andi	r23, 0xFF	; 255
    9fae:	7f 7f       	andi	r23, 0xFF	; 255
    9fb0:	7f 7f       	andi	r23, 0xFF	; 255
    9fb2:	7f 7f       	andi	r23, 0xFF	; 255
    9fb4:	7f 7f       	andi	r23, 0xFF	; 255
    9fb6:	7f 7f       	andi	r23, 0xFF	; 255
    9fb8:	7f 7f       	andi	r23, 0xFF	; 255
    9fba:	7f 7f       	andi	r23, 0xFF	; 255
    9fbc:	7f 7f       	andi	r23, 0xFF	; 255
    9fbe:	7f 7f       	andi	r23, 0xFF	; 255
    9fc0:	80 80       	ld	r8, Z
    9fc2:	80 80       	ld	r8, Z
    9fc4:	80 80       	ld	r8, Z
    9fc6:	80 80       	ld	r8, Z
    9fc8:	80 80       	ld	r8, Z
    9fca:	80 80       	ld	r8, Z
    9fcc:	80 80       	ld	r8, Z
    9fce:	80 80       	ld	r8, Z
    9fd0:	80 80       	ld	r8, Z
    9fd2:	80 80       	ld	r8, Z
    9fd4:	80 80       	ld	r8, Z
    9fd6:	80 80       	ld	r8, Z
    9fd8:	80 80       	ld	r8, Z
    9fda:	80 80       	ld	r8, Z
    9fdc:	80 80       	ld	r8, Z
    9fde:	80 80       	ld	r8, Z
    9fe0:	80 80       	ld	r8, Z
    9fe2:	80 80       	ld	r8, Z
    9fe4:	80 80       	ld	r8, Z
    9fe6:	80 80       	ld	r8, Z
    9fe8:	80 80       	ld	r8, Z
    9fea:	80 80       	ld	r8, Z
    9fec:	80 80       	ld	r8, Z
    9fee:	80 80       	ld	r8, Z
    9ff0:	80 80       	ld	r8, Z
    9ff2:	80 80       	ld	r8, Z
    9ff4:	80 80       	ld	r8, Z
    9ff6:	80 80       	ld	r8, Z
    9ff8:	80 80       	ld	r8, Z
    9ffa:	80 80       	ld	r8, Z
    9ffc:	80 80       	ld	r8, Z
    9ffe:	80 80       	ld	r8, Z
    a000:	03 09       	sbc	r16, r3
    a002:	13 1e       	adc	r1, r19
    a004:	28 31       	cpi	r18, 0x18	; 24
    a006:	3a 40       	sbci	r19, 0x0A	; 10
    a008:	46 4c       	sbci	r20, 0xC6	; 198
    a00a:	50 54       	subi	r21, 0x40	; 64
    a00c:	58 5b       	subi	r21, 0xB8	; 184
    a00e:	5e 61       	ori	r21, 0x1E	; 30
    a010:	63 65       	ori	r22, 0x53	; 83
    a012:	67 69       	ori	r22, 0x97	; 151
    a014:	6b 6c       	ori	r22, 0xCB	; 203
    a016:	6e 6f       	ori	r22, 0xFE	; 254
    a018:	70 71       	andi	r23, 0x10	; 16
    a01a:	72 73       	andi	r23, 0x32	; 50
    a01c:	74 75       	andi	r23, 0x54	; 84
    a01e:	76 77       	andi	r23, 0x76	; 118
    a020:	77 78       	andi	r23, 0x87	; 135
    a022:	79 79       	andi	r23, 0x99	; 153
    a024:	7a 7a       	andi	r23, 0xAA	; 170
    a026:	7b 7b       	andi	r23, 0xBB	; 187
    a028:	7c 7c       	andi	r23, 0xCC	; 204
    a02a:	7c 7d       	andi	r23, 0xDC	; 220
    a02c:	7d 7d       	andi	r23, 0xDD	; 221
    a02e:	7e 7e       	andi	r23, 0xEE	; 238
    a030:	7e 7e       	andi	r23, 0xEE	; 238
    a032:	7f 7f       	andi	r23, 0xFF	; 255
    a034:	7f 7f       	andi	r23, 0xFF	; 255
    a036:	7f 7f       	andi	r23, 0xFF	; 255
    a038:	7f 7f       	andi	r23, 0xFF	; 255
    a03a:	7f 7f       	andi	r23, 0xFF	; 255
    a03c:	7f 7f       	andi	r23, 0xFF	; 255
    a03e:	7f 7f       	andi	r23, 0xFF	; 255
    a040:	7f 7f       	andi	r23, 0xFF	; 255
    a042:	7f 7f       	andi	r23, 0xFF	; 255
    a044:	7f 7f       	andi	r23, 0xFF	; 255
    a046:	7f 7f       	andi	r23, 0xFF	; 255
    a048:	7f 7f       	andi	r23, 0xFF	; 255
    a04a:	7f 7f       	andi	r23, 0xFF	; 255
    a04c:	7f 7e       	andi	r23, 0xEF	; 239
    a04e:	7e 7e       	andi	r23, 0xEE	; 238
    a050:	7e 7d       	andi	r23, 0xDE	; 222
    a052:	7d 7d       	andi	r23, 0xDD	; 221
    a054:	7c 7c       	andi	r23, 0xCC	; 204
    a056:	7c 7b       	andi	r23, 0xBC	; 188
    a058:	7b 7a       	andi	r23, 0xAB	; 171
    a05a:	7a 79       	andi	r23, 0x9A	; 154
    a05c:	79 78       	andi	r23, 0x89	; 137
    a05e:	77 77       	andi	r23, 0x77	; 119
    a060:	76 75       	andi	r23, 0x56	; 86
    a062:	74 73       	andi	r23, 0x34	; 52
    a064:	72 71       	andi	r23, 0x12	; 18
    a066:	70 6f       	ori	r23, 0xF0	; 240
    a068:	6e 6c       	ori	r22, 0xCE	; 206
    a06a:	6b 69       	ori	r22, 0x9B	; 155
    a06c:	67 65       	ori	r22, 0x57	; 87
    a06e:	63 61       	ori	r22, 0x13	; 19
    a070:	5e 5b       	subi	r21, 0xBE	; 190
    a072:	58 54       	subi	r21, 0x48	; 72
    a074:	50 4c       	sbci	r21, 0xC0	; 192
    a076:	46 40       	sbci	r20, 0x06	; 6
    a078:	3a 31       	cpi	r19, 0x1A	; 26
    a07a:	28 1e       	adc	r2, r24
    a07c:	13 09       	sbc	r17, r3
    a07e:	03 00       	.word	0x0003	; ????
    a080:	c6 cc       	rjmp	.-1652   	; 0x9a0e <waves+0xe>
    a082:	d5 db       	rcall	.-2134   	; 0x982e <ProcessMusic+0x3ae>
    a084:	df e3       	ldi	r29, 0x3F	; 63
    a086:	e5 e7       	ldi	r30, 0x75	; 117
    a088:	e9 ea       	ldi	r30, 0xA9	; 169
    a08a:	eb ec       	ldi	r30, 0xCB	; 203
    a08c:	ed ee       	ldi	r30, 0xED	; 237
    a08e:	ef ef       	ldi	r30, 0xFF	; 255
    a090:	f0 f0       	brcs	.+60     	; 0xa0ce <waves+0x6ce>
    a092:	f0 f1       	brcs	.+124    	; 0xa110 <waves+0x710>
    a094:	f1 f1       	breq	.+124    	; 0xa112 <waves+0x712>
    a096:	f1 f2       	breq	.-68     	; 0xa054 <waves+0x654>
    a098:	f2 f2       	brmi	.-68     	; 0xa056 <waves+0x656>
    a09a:	f2 f2       	brmi	.-68     	; 0xa058 <waves+0x658>
    a09c:	f2 f2       	brmi	.-68     	; 0xa05a <waves+0x65a>
    a09e:	f2 f3       	brmi	.-4      	; 0xa09c <waves+0x69c>
    a0a0:	f3 f3       	brvs	.-4      	; 0xa09e <waves+0x69e>
    a0a2:	f3 f3       	brvs	.-4      	; 0xa0a0 <waves+0x6a0>
    a0a4:	f3 f3       	brvs	.-4      	; 0xa0a2 <waves+0x6a2>
    a0a6:	f3 f3       	brvs	.-4      	; 0xa0a4 <waves+0x6a4>
    a0a8:	f3 f3       	brvs	.-4      	; 0xa0a6 <waves+0x6a6>
    a0aa:	f3 f3       	brvs	.-4      	; 0xa0a8 <waves+0x6a8>
    a0ac:	f3 f3       	brvs	.-4      	; 0xa0aa <waves+0x6aa>
    a0ae:	f3 f3       	brvs	.-4      	; 0xa0ac <waves+0x6ac>
    a0b0:	f3 f3       	brvs	.-4      	; 0xa0ae <waves+0x6ae>
    a0b2:	f3 f3       	brvs	.-4      	; 0xa0b0 <waves+0x6b0>
    a0b4:	f3 f3       	brvs	.-4      	; 0xa0b2 <waves+0x6b2>
    a0b6:	f3 f3       	brvs	.-4      	; 0xa0b4 <waves+0x6b4>
    a0b8:	f3 f3       	brvs	.-4      	; 0xa0b6 <waves+0x6b6>
    a0ba:	f3 f3       	brvs	.-4      	; 0xa0b8 <waves+0x6b8>
    a0bc:	f3 f3       	brvs	.-4      	; 0xa0ba <waves+0x6ba>
    a0be:	f3 f3       	brvs	.-4      	; 0xa0bc <waves+0x6bc>
    a0c0:	f3 f3       	brvs	.-4      	; 0xa0be <waves+0x6be>
    a0c2:	f3 f3       	brvs	.-4      	; 0xa0c0 <waves+0x6c0>
    a0c4:	f3 f3       	brvs	.-4      	; 0xa0c2 <waves+0x6c2>
    a0c6:	f3 f3       	brvs	.-4      	; 0xa0c4 <waves+0x6c4>
    a0c8:	f3 f3       	brvs	.-4      	; 0xa0c6 <waves+0x6c6>
    a0ca:	f3 f3       	brvs	.-4      	; 0xa0c8 <waves+0x6c8>
    a0cc:	f3 f3       	brvs	.-4      	; 0xa0ca <waves+0x6ca>
    a0ce:	f3 f3       	brvs	.-4      	; 0xa0cc <waves+0x6cc>
    a0d0:	f3 f3       	brvs	.-4      	; 0xa0ce <waves+0x6ce>
    a0d2:	f3 f3       	brvs	.-4      	; 0xa0d0 <waves+0x6d0>
    a0d4:	f3 f3       	brvs	.-4      	; 0xa0d2 <waves+0x6d2>
    a0d6:	f3 f3       	brvs	.-4      	; 0xa0d4 <waves+0x6d4>
    a0d8:	f3 f3       	brvs	.-4      	; 0xa0d6 <waves+0x6d6>
    a0da:	f3 f3       	brvs	.-4      	; 0xa0d8 <waves+0x6d8>
    a0dc:	f3 f3       	brvs	.-4      	; 0xa0da <waves+0x6da>
    a0de:	f3 f3       	brvs	.-4      	; 0xa0dc <waves+0x6dc>
    a0e0:	f2 f2       	brmi	.-68     	; 0xa09e <waves+0x69e>
    a0e2:	f2 f2       	brmi	.-68     	; 0xa0a0 <waves+0x6a0>
    a0e4:	f2 f2       	brmi	.-68     	; 0xa0a2 <waves+0x6a2>
    a0e6:	f2 f2       	brmi	.-68     	; 0xa0a4 <waves+0x6a4>
    a0e8:	f1 f1       	breq	.+124    	; 0xa166 <waves+0x766>
    a0ea:	f1 f1       	breq	.+124    	; 0xa168 <waves+0x768>
    a0ec:	f0 f0       	brcs	.+60     	; 0xa12a <waves+0x72a>
    a0ee:	f0 ef       	ldi	r31, 0xF0	; 240
    a0f0:	ef ee       	ldi	r30, 0xEF	; 239
    a0f2:	ed ec       	ldi	r30, 0xCD	; 205
    a0f4:	eb ea       	ldi	r30, 0xAB	; 171
    a0f6:	e9 e7       	ldi	r30, 0x79	; 121
    a0f8:	e5 e3       	ldi	r30, 0x35	; 53
    a0fa:	df db       	rcall	.-2114   	; 0x98ba <steptable+0x20>
    a0fc:	d5 cc       	rjmp	.-1622   	; 0x9aa8 <waves+0xa8>
    a0fe:	c6 00       	.word	0x00c6	; ????
    a100:	00 28       	or	r0, r0
    a102:	3d 42       	sbci	r19, 0x2D	; 45
    a104:	30 2d       	mov	r19, r0
    a106:	2c 2b       	or	r18, r28
    a108:	2c 2d       	mov	r18, r12
    a10a:	2e 2f       	mov	r18, r30
    a10c:	30 32       	cpi	r19, 0x20	; 32
    a10e:	33 35       	cpi	r19, 0x53	; 83
    a110:	37 39       	cpi	r19, 0x97	; 151
    a112:	3b 3d       	cpi	r19, 0xDB	; 219
    a114:	3f 41       	sbci	r19, 0x1F	; 31
    a116:	43 45       	sbci	r20, 0x53	; 83
    a118:	48 4a       	sbci	r20, 0xA8	; 168
    a11a:	4c 4e       	sbci	r20, 0xEC	; 236
    a11c:	50 53       	subi	r21, 0x30	; 48
    a11e:	55 57       	subi	r21, 0x75	; 117
    a120:	59 5b       	subi	r21, 0xB9	; 185
    a122:	5d 5f       	subi	r21, 0xFD	; 253
    a124:	61 63       	ori	r22, 0x31	; 49
    a126:	65 67       	ori	r22, 0x75	; 117
    a128:	69 6b       	ori	r22, 0xB9	; 185
    a12a:	6c 6e       	ori	r22, 0xEC	; 236
    a12c:	70 71       	andi	r23, 0x10	; 16
    a12e:	73 74       	andi	r23, 0x43	; 67
    a130:	75 77       	andi	r23, 0x75	; 117
    a132:	78 79       	andi	r23, 0x98	; 152
    a134:	7a 7b       	andi	r23, 0xBA	; 186
    a136:	7c 7d       	andi	r23, 0xDC	; 220
    a138:	7d 7e       	andi	r23, 0xED	; 237
    a13a:	7e 7f       	andi	r23, 0xFE	; 254
    a13c:	7f 7f       	andi	r23, 0xFF	; 255
    a13e:	7f 7f       	andi	r23, 0xFF	; 255
    a140:	7f 7f       	andi	r23, 0xFF	; 255
    a142:	7f 7f       	andi	r23, 0xFF	; 255
    a144:	7f 7f       	andi	r23, 0xFF	; 255
    a146:	7e 7e       	andi	r23, 0xEE	; 238
    a148:	7d 7d       	andi	r23, 0xDD	; 221
    a14a:	7c 7b       	andi	r23, 0xBC	; 188
    a14c:	7a 79       	andi	r23, 0x9A	; 154
    a14e:	78 77       	andi	r23, 0x78	; 120
    a150:	75 74       	andi	r23, 0x45	; 69
    a152:	73 71       	andi	r23, 0x13	; 19
    a154:	70 6e       	ori	r23, 0xE0	; 224
    a156:	6c 6b       	ori	r22, 0xBC	; 188
    a158:	69 67       	ori	r22, 0x79	; 121
    a15a:	65 63       	ori	r22, 0x35	; 53
    a15c:	61 5f       	subi	r22, 0xF1	; 241
    a15e:	5d 5b       	subi	r21, 0xBD	; 189
    a160:	59 57       	subi	r21, 0x79	; 121
    a162:	55 53       	subi	r21, 0x35	; 53
    a164:	50 4e       	sbci	r21, 0xE0	; 224
    a166:	4c 4a       	sbci	r20, 0xAC	; 172
    a168:	48 45       	sbci	r20, 0x58	; 88
    a16a:	43 41       	sbci	r20, 0x13	; 19
    a16c:	3f 3d       	cpi	r19, 0xDF	; 223
    a16e:	3b 39       	cpi	r19, 0x9B	; 155
    a170:	37 35       	cpi	r19, 0x57	; 87
    a172:	33 32       	cpi	r19, 0x23	; 35
    a174:	30 2f       	mov	r19, r16
    a176:	2e 2d       	mov	r18, r14
    a178:	2c 2b       	or	r18, r28
    a17a:	2c 2d       	mov	r18, r12
    a17c:	30 42       	sbci	r19, 0x20	; 32
    a17e:	3d 28       	or	r3, r13
    a180:	00 e9       	ldi	r16, 0x90	; 144
    a182:	e5 fe       	sbrs	r14, 5
    a184:	d4 d7       	rcall	.+4008   	; 0xb12e <printheadlineintro+0x46>
    a186:	d7 d7       	rcall	.+4014   	; 0xb136 <updatepoints+0x6>
    a188:	d6 d4       	rcall	.+2476   	; 0xab36 <drawplayer2+0x7a>
    a18a:	d2 d0       	rcall	.+420    	; 0xa330 <waves+0x930>
    a18c:	ce cc       	rjmp	.-1636   	; 0x9b2a <waves+0x12a>
    a18e:	ca c8       	rjmp	.-3692   	; 0x9324 <TriggerCommon+0xb6>
    a190:	c6 c3       	rjmp	.+1932   	; 0xa91e <ProcessFading+0x34>
    a192:	c1 bf       	out	0x31, r28	; 49
    a194:	bd ba       	out	0x1d, r11	; 29
    a196:	b8 b6       	in	r11, 0x38	; 56
    a198:	b4 b1       	in	r27, 0x04	; 4
    a19a:	af ad       	ldd	r26, Y+63	; 0x3f
    a19c:	ab a9       	ldd	r26, Y+51	; 0x33
    a19e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    a1a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    a1a2:	9f 9e       	mul	r9, r31
    a1a4:	9c 9a       	sbi	0x13, 4	; 19
    a1a6:	99 97       	sbiw	r26, 0x29	; 41
    a1a8:	95 94       	asr	r9
    a1aa:	93 91       	.word	0x9193	; ????
    a1ac:	90 8f       	std	Z+24, r25	; 0x18
    a1ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a1b0:	8b 8a       	std	Y+19, r8	; 0x13
    a1b2:	89 88       	ldd	r8, Y+17	; 0x11
    a1b4:	88 87       	std	Y+8, r24	; 0x08
    a1b6:	86 85       	ldd	r24, Z+14	; 0x0e
    a1b8:	85 84       	ldd	r8, Z+13	; 0x0d
    a1ba:	84 84       	ldd	r8, Z+12	; 0x0c
    a1bc:	83 83       	std	Z+3, r24	; 0x03
    a1be:	83 83       	std	Z+3, r24	; 0x03
    a1c0:	83 83       	std	Z+3, r24	; 0x03
    a1c2:	83 83       	std	Z+3, r24	; 0x03
    a1c4:	83 84       	ldd	r8, Z+11	; 0x0b
    a1c6:	84 84       	ldd	r8, Z+12	; 0x0c
    a1c8:	85 85       	ldd	r24, Z+13	; 0x0d
    a1ca:	86 87       	std	Z+14, r24	; 0x0e
    a1cc:	88 88       	ldd	r8, Y+16	; 0x10
    a1ce:	89 8a       	std	Y+17, r8	; 0x11
    a1d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    a1d2:	8d 8f       	std	Y+29, r24	; 0x1d
    a1d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <_end+0x8693>
    a1d8:	95 97       	sbiw	r26, 0x25	; 37
    a1da:	99 9a       	sbi	0x13, 1	; 19
    a1dc:	9c 9e       	mul	r9, r28
    a1de:	9f a1       	ldd	r25, Y+39	; 0x27
    a1e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    a1e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    a1e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    a1e6:	af b1       	in	r26, 0x0f	; 15
    a1e8:	b4 b6       	in	r11, 0x34	; 52
    a1ea:	b8 ba       	out	0x18, r11	; 24
    a1ec:	bd bf       	out	0x3d, r27	; 61
    a1ee:	c1 c3       	rjmp	.+1922   	; 0xa972 <drawplayer+0xe>
    a1f0:	c6 c8       	rjmp	.-3700   	; 0x937e <TriggerFx+0xe>
    a1f2:	ca cc       	rjmp	.-1644   	; 0x9b88 <waves+0x188>
    a1f4:	ce d0       	rcall	.+412    	; 0xa392 <waves+0x992>
    a1f6:	d2 d4       	rcall	.+2468   	; 0xab9c <drawplayer2+0xe0>
    a1f8:	d6 d7       	rcall	.+4012   	; 0xb1a6 <checkcollide+0x54>
    a1fa:	d7 d7       	rcall	.+4014   	; 0xb1aa <checkcollide+0x58>
    a1fc:	d4 fe       	sbrs	r13, 4
    a1fe:	e5 e9       	ldi	r30, 0x95	; 149
    a200:	f9 f8       	.word	0xf8f9	; ????
    a202:	f9 f5       	brne	.+126    	; 0xa282 <waves+0x882>
    a204:	eb e1       	ldi	r30, 0x1B	; 27
    a206:	dd de       	rcall	.-582    	; 0x9fc2 <waves+0x5c2>
    a208:	e0 e2       	ldi	r30, 0x20	; 32
    a20a:	e4 e5       	ldi	r30, 0x54	; 84
    a20c:	e6 e5       	ldi	r30, 0x56	; 86
    a20e:	e4 e2       	ldi	r30, 0x24	; 36
    a210:	de d9       	rcall	.-3140   	; 0x95ce <ProcessMusic+0x14e>
    a212:	d2 ca       	rjmp	.-2652   	; 0x97b8 <ProcessMusic+0x338>
    a214:	c1 b7       	in	r28, 0x31	; 49
    a216:	ac a2       	std	Y+36, r10	; 0x24
    a218:	99 91       	ld	r25, Y+
    a21a:	8a 86       	std	Y+10, r8	; 0x0a
    a21c:	83 81       	ldd	r24, Z+3	; 0x03
    a21e:	80 80       	ld	r8, Z
    a220:	81 82       	std	Z+1, r8	; 0x01
    a222:	83 85       	ldd	r24, Z+11	; 0x0b
    a224:	86 88       	ldd	r8, Z+22	; 0x16
    a226:	8a 8c       	ldd	r8, Y+26	; 0x1a
    a228:	8d 8f       	std	Y+29, r24	; 0x1d
    a22a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <_end+0x8793>
    a22e:	96 97       	sbiw	r26, 0x26	; 38
    a230:	98 99       	sbic	0x13, 0	; 19
    a232:	9a 9b       	sbis	0x13, 2	; 19
    a234:	9b 9c       	mul	r9, r11
    a236:	9d 9d       	mul	r25, r13
    a238:	9d 9e       	mul	r9, r29
    a23a:	9e 9e       	mul	r9, r30
    a23c:	9f 9f       	mul	r25, r31
    a23e:	9f 9f       	mul	r25, r31
    a240:	9f 9f       	mul	r25, r31
    a242:	9f 9e       	mul	r9, r31
    a244:	9e 9e       	mul	r9, r30
    a246:	9d 9d       	mul	r25, r13
    a248:	9d 9c       	mul	r9, r13
    a24a:	9b 9b       	sbis	0x13, 3	; 19
    a24c:	9a 99       	sbic	0x13, 2	; 19
    a24e:	98 97       	sbiw	r26, 0x28	; 40
    a250:	96 95       	lsr	r25
    a252:	93 92       	.word	0x9293	; ????
    a254:	90 8f       	std	Z+24, r25	; 0x18
    a256:	8d 8c       	ldd	r8, Y+29	; 0x1d
    a258:	8a 88       	ldd	r8, Y+18	; 0x12
    a25a:	86 85       	ldd	r24, Z+14	; 0x0e
    a25c:	83 82       	std	Z+3, r8	; 0x03
    a25e:	81 80       	ldd	r8, Z+1	; 0x01
    a260:	80 81       	ld	r24, Z
    a262:	83 86       	std	Z+11, r8	; 0x0b
    a264:	8a 91       	ld	r24, -Y
    a266:	99 a2       	std	Y+33, r9	; 0x21
    a268:	ac b7       	in	r26, 0x3c	; 60
    a26a:	c1 ca       	rjmp	.-2686   	; 0x97ee <ProcessMusic+0x36e>
    a26c:	d2 d9       	rcall	.-3164   	; 0x9612 <ProcessMusic+0x192>
    a26e:	de e2       	ldi	r29, 0x2E	; 46
    a270:	e4 e5       	ldi	r30, 0x54	; 84
    a272:	e6 e5       	ldi	r30, 0x56	; 86
    a274:	e4 e2       	ldi	r30, 0x24	; 36
    a276:	e0 de       	rcall	.-576    	; 0xa038 <waves+0x638>
    a278:	dd e1       	ldi	r29, 0x1D	; 29
    a27a:	eb f5       	brvc	.+122    	; 0xa2f6 <waves+0x8f6>
    a27c:	f9 f8       	.word	0xf8f9	; ????
    a27e:	f9 00       	.word	0x00f9	; ????
    a280:	07 08       	sbc	r0, r7
    a282:	07 0b       	sbc	r16, r23
    a284:	15 1f       	adc	r17, r21
    a286:	23 22       	and	r2, r19
    a288:	20 1e       	adc	r2, r16
    a28a:	1c 1b       	sub	r17, r28
    a28c:	1a 1b       	sub	r17, r26
    a28e:	1c 1e       	adc	r1, r28
    a290:	22 27       	eor	r18, r18
    a292:	2e 36       	cpi	r18, 0x6E	; 110
    a294:	3f 49       	sbci	r19, 0x9F	; 159
    a296:	54 5e       	subi	r21, 0xE4	; 228
    a298:	67 6f       	ori	r22, 0xF7	; 247
    a29a:	76 7a       	andi	r23, 0xA6	; 166
    a29c:	7e 7f       	andi	r23, 0xFE	; 254
    a29e:	7f 7f       	andi	r23, 0xFF	; 255
    a2a0:	7f 7e       	andi	r23, 0xEF	; 239
    a2a2:	7d 7b       	andi	r23, 0xBD	; 189
    a2a4:	7a 78       	andi	r23, 0x8A	; 138
    a2a6:	76 74       	andi	r23, 0x46	; 70
    a2a8:	73 71       	andi	r23, 0x13	; 19
    a2aa:	70 6e       	ori	r23, 0xE0	; 224
    a2ac:	6d 6b       	ori	r22, 0xBD	; 189
    a2ae:	6a 69       	ori	r22, 0x9A	; 154
    a2b0:	68 67       	ori	r22, 0x78	; 120
    a2b2:	66 65       	ori	r22, 0x56	; 86
    a2b4:	65 64       	ori	r22, 0x45	; 69
    a2b6:	64 63       	ori	r22, 0x34	; 52
    a2b8:	63 62       	ori	r22, 0x23	; 35
    a2ba:	62 62       	ori	r22, 0x22	; 34
    a2bc:	61 61       	ori	r22, 0x11	; 17
    a2be:	61 61       	ori	r22, 0x11	; 17
    a2c0:	61 61       	ori	r22, 0x11	; 17
    a2c2:	61 62       	ori	r22, 0x21	; 33
    a2c4:	62 62       	ori	r22, 0x22	; 34
    a2c6:	63 63       	ori	r22, 0x33	; 51
    a2c8:	63 64       	ori	r22, 0x43	; 67
    a2ca:	65 65       	ori	r22, 0x55	; 85
    a2cc:	66 67       	ori	r22, 0x76	; 118
    a2ce:	68 69       	ori	r22, 0x98	; 152
    a2d0:	6a 6b       	ori	r22, 0xBA	; 186
    a2d2:	6d 6e       	ori	r22, 0xED	; 237
    a2d4:	70 71       	andi	r23, 0x10	; 16
    a2d6:	73 74       	andi	r23, 0x43	; 67
    a2d8:	76 78       	andi	r23, 0x86	; 134
    a2da:	7a 7b       	andi	r23, 0xBA	; 186
    a2dc:	7d 7e       	andi	r23, 0xED	; 237
    a2de:	7f 7f       	andi	r23, 0xFF	; 255
    a2e0:	7f 7f       	andi	r23, 0xFF	; 255
    a2e2:	7e 7a       	andi	r23, 0xAE	; 174
    a2e4:	76 6f       	ori	r23, 0xF6	; 246
    a2e6:	67 5e       	subi	r22, 0xE7	; 231
    a2e8:	54 49       	sbci	r21, 0x94	; 148
    a2ea:	3f 36       	cpi	r19, 0x6F	; 111
    a2ec:	2e 27       	eor	r18, r30
    a2ee:	22 1e       	adc	r2, r18
    a2f0:	1c 1b       	sub	r17, r28
    a2f2:	1a 1b       	sub	r17, r26
    a2f4:	1c 1e       	adc	r1, r28
    a2f6:	20 22       	and	r2, r16
    a2f8:	23 1f       	adc	r18, r19
    a2fa:	15 0b       	sbc	r17, r21
    a2fc:	07 08       	sbc	r0, r7
    a2fe:	07 00       	.word	0x0007	; ????
    a300:	1f 31       	cpi	r17, 0x1F	; 31
    a302:	3d 44       	sbci	r19, 0x4D	; 77
    a304:	4e 53       	subi	r20, 0x3E	; 62
    a306:	54 56       	subi	r21, 0x64	; 100
    a308:	5a 5f       	subi	r21, 0xFA	; 250
    a30a:	64 69       	ori	r22, 0x94	; 148
    a30c:	6e 74       	andi	r22, 0x4E	; 78
    a30e:	76 79       	andi	r23, 0x96	; 150
    a310:	7c 7f       	andi	r23, 0xFC	; 252
    a312:	7f 7f       	andi	r23, 0xFF	; 255
    a314:	7f 7f       	andi	r23, 0xFF	; 255
    a316:	7f 7f       	andi	r23, 0xFF	; 255
    a318:	7f 7f       	andi	r23, 0xFF	; 255
    a31a:	7f 7f       	andi	r23, 0xFF	; 255
    a31c:	7f 7f       	andi	r23, 0xFF	; 255
    a31e:	7f 7f       	andi	r23, 0xFF	; 255
    a320:	7f 7f       	andi	r23, 0xFF	; 255
    a322:	7f 7f       	andi	r23, 0xFF	; 255
    a324:	7f 7f       	andi	r23, 0xFF	; 255
    a326:	7f 7f       	andi	r23, 0xFF	; 255
    a328:	7f 7f       	andi	r23, 0xFF	; 255
    a32a:	7f 7f       	andi	r23, 0xFF	; 255
    a32c:	7f 7f       	andi	r23, 0xFF	; 255
    a32e:	7f 7f       	andi	r23, 0xFF	; 255
    a330:	7f 7f       	andi	r23, 0xFF	; 255
    a332:	7f 7f       	andi	r23, 0xFF	; 255
    a334:	7f 7f       	andi	r23, 0xFF	; 255
    a336:	7f 7f       	andi	r23, 0xFF	; 255
    a338:	7f 7f       	andi	r23, 0xFF	; 255
    a33a:	7f 7f       	andi	r23, 0xFF	; 255
    a33c:	7f 7f       	andi	r23, 0xFF	; 255
    a33e:	7f 7f       	andi	r23, 0xFF	; 255
    a340:	7f 7f       	andi	r23, 0xFF	; 255
    a342:	7f 7f       	andi	r23, 0xFF	; 255
    a344:	7f 7f       	andi	r23, 0xFF	; 255
    a346:	7f 7f       	andi	r23, 0xFF	; 255
    a348:	7f 7f       	andi	r23, 0xFF	; 255
    a34a:	7f 7f       	andi	r23, 0xFF	; 255
    a34c:	7f 7f       	andi	r23, 0xFF	; 255
    a34e:	7f 7f       	andi	r23, 0xFF	; 255
    a350:	7f 7f       	andi	r23, 0xFF	; 255
    a352:	7f 7f       	andi	r23, 0xFF	; 255
    a354:	7f 7f       	andi	r23, 0xFF	; 255
    a356:	7f 7f       	andi	r23, 0xFF	; 255
    a358:	7f 7f       	andi	r23, 0xFF	; 255
    a35a:	7f 7f       	andi	r23, 0xFF	; 255
    a35c:	7f 7f       	andi	r23, 0xFF	; 255
    a35e:	7f 7f       	andi	r23, 0xFF	; 255
    a360:	7f 7f       	andi	r23, 0xFF	; 255
    a362:	7f 7f       	andi	r23, 0xFF	; 255
    a364:	7f 7f       	andi	r23, 0xFF	; 255
    a366:	7f 7f       	andi	r23, 0xFF	; 255
    a368:	7f 7f       	andi	r23, 0xFF	; 255
    a36a:	7f 7f       	andi	r23, 0xFF	; 255
    a36c:	7f 7f       	andi	r23, 0xFF	; 255
    a36e:	7f 7f       	andi	r23, 0xFF	; 255
    a370:	7f 7f       	andi	r23, 0xFF	; 255
    a372:	7f 7f       	andi	r23, 0xFF	; 255
    a374:	7f 7f       	andi	r23, 0xFF	; 255
    a376:	7f 7f       	andi	r23, 0xFF	; 255
    a378:	7f 7f       	andi	r23, 0xFF	; 255
    a37a:	7f 7c       	andi	r23, 0xCF	; 207
    a37c:	78 71       	andi	r23, 0x18	; 24
    a37e:	68 4c       	sbci	r22, 0xC8	; 200
    a380:	2c 1c       	adc	r2, r12
    a382:	12 0c       	add	r1, r2
    a384:	0a 0b       	sbc	r16, r26
    a386:	0a 05       	cpc	r16, r10
    a388:	fd f3       	brhs	.-2      	; 0xa388 <waves+0x988>
    a38a:	e9 df       	rcall	.-46     	; 0xa35e <waves+0x95e>
    a38c:	d4 ca       	rjmp	.-2648   	; 0x9936 <steptable+0x9c>
    a38e:	c0 b7       	in	r28, 0x30	; 48
    a390:	ae a6       	std	Y+46, r10	; 0x2e
    a392:	9e 97       	sbiw	r26, 0x2e	; 46
    a394:	91 8b       	std	Z+17, r25	; 0x11
    a396:	86 85       	ldd	r24, Z+14	; 0x0e
    a398:	82 80       	ldd	r8, Z+2	; 0x02
    a39a:	80 80       	ld	r8, Z
    a39c:	80 80       	ld	r8, Z
    a39e:	80 80       	ld	r8, Z
    a3a0:	80 80       	ld	r8, Z
    a3a2:	80 80       	ld	r8, Z
    a3a4:	80 80       	ld	r8, Z
    a3a6:	80 80       	ld	r8, Z
    a3a8:	80 80       	ld	r8, Z
    a3aa:	80 80       	ld	r8, Z
    a3ac:	80 80       	ld	r8, Z
    a3ae:	80 80       	ld	r8, Z
    a3b0:	80 80       	ld	r8, Z
    a3b2:	80 80       	ld	r8, Z
    a3b4:	80 80       	ld	r8, Z
    a3b6:	80 80       	ld	r8, Z
    a3b8:	80 80       	ld	r8, Z
    a3ba:	80 80       	ld	r8, Z
    a3bc:	80 80       	ld	r8, Z
    a3be:	80 80       	ld	r8, Z
    a3c0:	80 80       	ld	r8, Z
    a3c2:	80 80       	ld	r8, Z
    a3c4:	80 80       	ld	r8, Z
    a3c6:	80 80       	ld	r8, Z
    a3c8:	80 80       	ld	r8, Z
    a3ca:	80 80       	ld	r8, Z
    a3cc:	80 80       	ld	r8, Z
    a3ce:	80 80       	ld	r8, Z
    a3d0:	80 80       	ld	r8, Z
    a3d2:	80 80       	ld	r8, Z
    a3d4:	80 80       	ld	r8, Z
    a3d6:	80 80       	ld	r8, Z
    a3d8:	80 80       	ld	r8, Z
    a3da:	80 80       	ld	r8, Z
    a3dc:	80 80       	ld	r8, Z
    a3de:	80 80       	ld	r8, Z
    a3e0:	80 80       	ld	r8, Z
    a3e2:	80 80       	ld	r8, Z
    a3e4:	80 80       	ld	r8, Z
    a3e6:	80 80       	ld	r8, Z
    a3e8:	80 80       	ld	r8, Z
    a3ea:	80 80       	ld	r8, Z
    a3ec:	80 80       	ld	r8, Z
    a3ee:	80 80       	ld	r8, Z
    a3f0:	80 80       	ld	r8, Z
    a3f2:	80 80       	ld	r8, Z
    a3f4:	80 87       	std	Z+8, r24	; 0x08
    a3f6:	91 9d       	mul	r25, r1
    a3f8:	ac c4       	rjmp	.+2392   	; 0xad52 <printtileint+0x142>
    a3fa:	cb d4       	rcall	.+2454   	; 0xad92 <printtileint+0x182>
    a3fc:	dd f2       	brhs	.-74     	; 0xa3b4 <waves+0x9b4>
    a3fe:	fa fa       	.word	0xfafa	; ????

0000a400 <ProcessSprites>:
	for(cy=0;cy<height;cy++){
		for(cx=0;cx<width;cx++){		
			SetFont(x+cx,y+cy,(tile-32));
		}
	}
}
    a400:	2f 92       	push	r2
    a402:	3f 92       	push	r3
    a404:	4f 92       	push	r4
    a406:	5f 92       	push	r5
    a408:	6f 92       	push	r6
    a40a:	7f 92       	push	r7
    a40c:	8f 92       	push	r8
    a40e:	9f 92       	push	r9
    a410:	af 92       	push	r10
    a412:	bf 92       	push	r11
    a414:	cf 92       	push	r12
    a416:	df 92       	push	r13
    a418:	ef 92       	push	r14
    a41a:	ff 92       	push	r15
    a41c:	0f 93       	push	r16
    a41e:	1f 93       	push	r17
    a420:	cf 93       	push	r28
    a422:	df 93       	push	r29
    a424:	00 d0       	rcall	.+0      	; 0xa426 <ProcessSprites+0x26>
    a426:	00 d0       	rcall	.+0      	; 0xa428 <ProcessSprites+0x28>
    a428:	00 d0       	rcall	.+0      	; 0xa42a <ProcessSprites+0x2a>
    a42a:	cd b7       	in	r28, 0x3d	; 61
    a42c:	de b7       	in	r29, 0x3e	; 62
    a42e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    a432:	88 23       	and	r24, r24
    a434:	09 f4       	brne	.+2      	; 0xa438 <ProcessSprites+0x38>
    a436:	f9 c0       	rjmp	.+498    	; 0xa62a <ProcessSprites+0x22a>
    a438:	80 91 4f 08 	lds	r24, 0x084F	; 0x80084f <user_ram_tiles_c_tmp>
    a43c:	80 93 4e 08 	sts	0x084E, r24	; 0x80084e <user_ram_tiles_c>
    a440:	80 93 4d 08 	sts	0x084D, r24	; 0x80084d <free_tile_index>
    a444:	04 e0       	ldi	r16, 0x04	; 4
    a446:	11 e0       	ldi	r17, 0x01	; 1
    a448:	f8 01       	movw	r30, r16
    a44a:	f3 81       	ldd	r31, Z+3	; 0x03
    a44c:	fb 83       	std	Y+3, r31	; 0x03
    a44e:	f2 ff       	sbrs	r31, 2
    a450:	20 c0       	rjmp	.+64     	; 0xa492 <ProcessSprites+0x92>
    a452:	0c 5f       	subi	r16, 0xFC	; 252
    a454:	1f 4f       	sbci	r17, 0xFF	; 255
    a456:	21 e0       	ldi	r18, 0x01	; 1
    a458:	0c 33       	cpi	r16, 0x3C	; 60
    a45a:	12 07       	cpc	r17, r18
    a45c:	a9 f7       	brne	.-22     	; 0xa448 <ProcessSprites+0x48>
    a45e:	26 96       	adiw	r28, 0x06	; 6
    a460:	0f b6       	in	r0, 0x3f	; 63
    a462:	f8 94       	cli
    a464:	de bf       	out	0x3e, r29	; 62
    a466:	0f be       	out	0x3f, r0	; 63
    a468:	cd bf       	out	0x3d, r28	; 61
    a46a:	df 91       	pop	r29
    a46c:	cf 91       	pop	r28
    a46e:	1f 91       	pop	r17
    a470:	0f 91       	pop	r16
    a472:	ff 90       	pop	r15
    a474:	ef 90       	pop	r14
    a476:	df 90       	pop	r13
    a478:	cf 90       	pop	r12
    a47a:	bf 90       	pop	r11
    a47c:	af 90       	pop	r10
    a47e:	9f 90       	pop	r9
    a480:	8f 90       	pop	r8
    a482:	7f 90       	pop	r7
    a484:	6f 90       	pop	r6
    a486:	5f 90       	pop	r5
    a488:	4f 90       	pop	r4
    a48a:	3f 90       	pop	r3
    a48c:	2f 90       	pop	r2
    a48e:	0c 94 1c 45 	jmp	0x8a38	; 0x8a38 <RestoreBackground>
    a492:	f8 01       	movw	r30, r16
    a494:	51 81       	ldd	r21, Z+1	; 0x01
    a496:	40 81       	ld	r20, Z
    a498:	20 91 5e 08 	lds	r18, 0x085E	; 0x80085e <screen_scrollX>
    a49c:	24 0f       	add	r18, r20
    a49e:	30 91 5f 08 	lds	r19, 0x085F	; 0x80085f <screen_scrollY>
    a4a2:	85 2f       	mov	r24, r21
    a4a4:	90 e0       	ldi	r25, 0x00	; 0
    a4a6:	83 0f       	add	r24, r19
    a4a8:	91 1d       	adc	r25, r1
    a4aa:	30 91 60 08 	lds	r19, 0x0860	; 0x800860 <screen_scrollHeight>
    a4ae:	33 0f       	add	r19, r19
    a4b0:	33 0f       	add	r19, r19
    a4b2:	33 0f       	add	r19, r19
    a4b4:	31 50       	subi	r19, 0x01	; 1
    a4b6:	35 17       	cp	r19, r21
    a4b8:	08 f4       	brcc	.+2      	; 0xa4bc <ProcessSprites+0xbc>
    a4ba:	9a 95       	dec	r25
    a4bc:	32 2e       	mov	r3, r18
    a4be:	36 94       	lsr	r3
    a4c0:	36 94       	lsr	r3
    a4c2:	36 94       	lsr	r3
    a4c4:	27 70       	andi	r18, 0x07	; 7
    a4c6:	19 f0       	breq	.+6      	; 0xa4ce <ProcessSprites+0xce>
    a4c8:	f2 e0       	ldi	r31, 0x02	; 2
    a4ca:	f9 83       	std	Y+1, r31	; 0x01
    a4cc:	02 c0       	rjmp	.+4      	; 0xa4d2 <ProcessSprites+0xd2>
    a4ce:	31 e0       	ldi	r19, 0x01	; 1
    a4d0:	39 83       	std	Y+1, r19	; 0x01
    a4d2:	bc 01       	movw	r22, r24
    a4d4:	e3 e0       	ldi	r30, 0x03	; 3
    a4d6:	76 95       	lsr	r23
    a4d8:	67 95       	ror	r22
    a4da:	ea 95       	dec	r30
    a4dc:	e1 f7       	brne	.-8      	; 0xa4d6 <ProcessSprites+0xd6>
    a4de:	26 2e       	mov	r2, r22
    a4e0:	87 70       	andi	r24, 0x07	; 7
    a4e2:	19 f0       	breq	.+6      	; 0xa4ea <ProcessSprites+0xea>
    a4e4:	62 e0       	ldi	r22, 0x02	; 2
    a4e6:	6a 83       	std	Y+2, r22	; 0x02
    a4e8:	02 c0       	rjmp	.+4      	; 0xa4ee <ProcessSprites+0xee>
    a4ea:	71 e0       	ldi	r23, 0x01	; 1
    a4ec:	7a 83       	std	Y+2, r23	; 0x02
    a4ee:	68 2e       	mov	r6, r24
    a4f0:	71 2c       	mov	r7, r1
    a4f2:	76 2c       	mov	r7, r6
    a4f4:	66 24       	eor	r6, r6
    a4f6:	62 0e       	add	r6, r18
    a4f8:	71 1c       	adc	r7, r1
    a4fa:	fb 81       	ldd	r31, Y+3	; 0x03
    a4fc:	ef 2f       	mov	r30, r31
    a4fe:	f0 e0       	ldi	r31, 0x00	; 0
    a500:	7e 2f       	mov	r23, r30
    a502:	66 27       	eor	r22, r22
    a504:	f8 01       	movw	r30, r16
    a506:	92 81       	ldd	r25, Z+2	; 0x02
    a508:	69 0f       	add	r22, r25
    a50a:	71 1d       	adc	r23, r1
    a50c:	7e 83       	std	Y+6, r23	; 0x06
    a50e:	6d 83       	std	Y+5, r22	; 0x05
    a510:	c1 2c       	mov	r12, r1
    a512:	d1 2c       	mov	r13, r1
    a514:	97 e0       	ldi	r25, 0x07	; 7
    a516:	95 0f       	add	r25, r21
    a518:	98 1b       	sub	r25, r24
    a51a:	9b 83       	std	Y+3, r25	; 0x03
    a51c:	87 e0       	ldi	r24, 0x07	; 7
    a51e:	84 0f       	add	r24, r20
    a520:	82 1b       	sub	r24, r18
    a522:	8c 83       	std	Y+4, r24	; 0x04
    a524:	8c 2d       	mov	r24, r12
    a526:	90 91 60 08 	lds	r25, 0x0860	; 0x800860 <screen_scrollHeight>
    a52a:	91 11       	cpse	r25, r1
    a52c:	07 c0       	rjmp	.+14     	; 0xa53c <ProcessSprites+0x13c>
    a52e:	ff ef       	ldi	r31, 0xFF	; 255
    a530:	cf 1a       	sub	r12, r31
    a532:	df 0a       	sbc	r13, r31
    a534:	2a 81       	ldd	r18, Y+2	; 0x02
    a536:	c2 16       	cp	r12, r18
    a538:	a8 f3       	brcs	.-22     	; 0xa524 <ProcessSprites+0x124>
    a53a:	8b cf       	rjmp	.-234    	; 0xa452 <ProcessSprites+0x52>
    a53c:	29 2f       	mov	r18, r25
    a53e:	22 0f       	add	r18, r18
    a540:	22 0f       	add	r18, r18
    a542:	22 0f       	add	r18, r18
    a544:	21 50       	subi	r18, 0x01	; 1
    a546:	3b 81       	ldd	r19, Y+3	; 0x03
    a548:	48 e0       	ldi	r20, 0x08	; 8
    a54a:	c4 9e       	mul	r12, r20
    a54c:	30 0d       	add	r19, r0
    a54e:	11 24       	eor	r1, r1
    a550:	32 17       	cp	r19, r18
    a552:	68 f7       	brcc	.-38     	; 0xa52e <ProcessSprites+0x12e>
    a554:	82 0d       	add	r24, r2
    a556:	89 17       	cp	r24, r25
    a558:	10 f0       	brcs	.+4      	; 0xa55e <ProcessSprites+0x15e>
    a55a:	89 1b       	sub	r24, r25
    a55c:	fc cf       	rjmp	.-8      	; 0xa556 <ProcessSprites+0x156>
    a55e:	e8 2e       	mov	r14, r24
    a560:	e6 94       	lsr	r14
    a562:	e6 94       	lsr	r14
    a564:	e6 94       	lsr	r14
    a566:	f1 2c       	mov	r15, r1
    a568:	fe 2c       	mov	r15, r14
    a56a:	ee 24       	eor	r14, r14
    a56c:	87 70       	andi	r24, 0x07	; 7
    a56e:	e8 0e       	add	r14, r24
    a570:	f1 1c       	adc	r15, r1
    a572:	9c 2c       	mov	r9, r12
    a574:	88 24       	eor	r8, r8
    a576:	41 2c       	mov	r4, r1
    a578:	8c 81       	ldd	r24, Y+4	; 0x04
    a57a:	68 e0       	ldi	r22, 0x08	; 8
    a57c:	46 9e       	mul	r4, r22
    a57e:	80 0d       	add	r24, r0
    a580:	11 24       	eor	r1, r1
    a582:	87 3e       	cpi	r24, 0xE7	; 231
    a584:	08 f0       	brcs	.+2      	; 0xa588 <ProcessSprites+0x188>
    a586:	49 c0       	rjmp	.+146    	; 0xa61a <ProcessSprites+0x21a>
    a588:	83 2d       	mov	r24, r3
    a58a:	84 0d       	add	r24, r4
    a58c:	88 0f       	add	r24, r24
    a58e:	88 0f       	add	r24, r24
    a590:	88 0f       	add	r24, r24
    a592:	f7 01       	movw	r30, r14
    a594:	e8 0f       	add	r30, r24
    a596:	f1 1d       	adc	r31, r1
    a598:	9f 01       	movw	r18, r30
    a59a:	20 50       	subi	r18, 0x00	; 0
    a59c:	36 4f       	sbci	r19, 0xF6	; 246
    a59e:	59 01       	movw	r10, r18
    a5a0:	f9 01       	movw	r30, r18
    a5a2:	50 80       	ld	r5, Z
    a5a4:	80 91 4e 08 	lds	r24, 0x084E	; 0x80084e <user_ram_tiles_c>
    a5a8:	fa e1       	ldi	r31, 0x1A	; 26
    a5aa:	f5 15       	cp	r31, r5
    a5ac:	10 f0       	brcs	.+4      	; 0xa5b2 <ProcessSprites+0x1b2>
    a5ae:	58 16       	cp	r5, r24
    a5b0:	48 f5       	brcc	.+82     	; 0xa604 <ProcessSprites+0x204>
    a5b2:	60 91 4d 08 	lds	r22, 0x084D	; 0x80084d <free_tile_index>
    a5b6:	6b 31       	cpi	r22, 0x1B	; 27
    a5b8:	10 f5       	brcc	.+68     	; 0xa5fe <ProcessSprites+0x1fe>
    a5ba:	2a e1       	ldi	r18, 0x1A	; 26
    a5bc:	25 15       	cp	r18, r5
    a5be:	28 f4       	brcc	.+10     	; 0xa5ca <ProcessSprites+0x1ca>
    a5c0:	85 ee       	ldi	r24, 0xE5	; 229
    a5c2:	85 0d       	add	r24, r5
    a5c4:	0e 94 00 44 	call	0x8800	; 0x8800 <CopyFlashTile>
    a5c8:	05 c0       	rjmp	.+10     	; 0xa5d4 <ProcessSprites+0x1d4>
    a5ca:	58 16       	cp	r5, r24
    a5cc:	18 f4       	brcc	.+6      	; 0xa5d4 <ProcessSprites+0x1d4>
    a5ce:	85 2d       	mov	r24, r5
    a5d0:	0e 94 8f 44 	call	0x891e	; 0x891e <CopyRamTile>
    a5d4:	80 91 4d 08 	lds	r24, 0x084D	; 0x80084d <free_tile_index>
    a5d8:	e8 2f       	mov	r30, r24
    a5da:	f0 e0       	ldi	r31, 0x00	; 0
    a5dc:	9f 01       	movw	r18, r30
    a5de:	22 0f       	add	r18, r18
    a5e0:	33 1f       	adc	r19, r19
    a5e2:	e2 0f       	add	r30, r18
    a5e4:	f3 1f       	adc	r31, r19
    a5e6:	e4 50       	subi	r30, 0x04	; 4
    a5e8:	f8 4f       	sbci	r31, 0xF8	; 248
    a5ea:	b1 82       	std	Z+1, r11	; 0x01
    a5ec:	a0 82       	st	Z, r10
    a5ee:	52 82       	std	Z+2, r5	; 0x02
    a5f0:	f5 01       	movw	r30, r10
    a5f2:	80 83       	st	Z, r24
    a5f4:	91 e0       	ldi	r25, 0x01	; 1
    a5f6:	98 0f       	add	r25, r24
    a5f8:	90 93 4d 08 	sts	0x084D, r25	; 0x80084d <free_tile_index>
    a5fc:	58 2e       	mov	r5, r24
    a5fe:	fa e1       	ldi	r31, 0x1A	; 26
    a600:	f5 15       	cp	r31, r5
    a602:	58 f0       	brcs	.+22     	; 0xa61a <ProcessSprites+0x21a>
    a604:	80 91 4e 08 	lds	r24, 0x084E	; 0x80084e <user_ram_tiles_c>
    a608:	58 16       	cp	r5, r24
    a60a:	38 f0       	brcs	.+14     	; 0xa61a <ProcessSprites+0x21a>
    a60c:	93 01       	movw	r18, r6
    a60e:	a4 01       	movw	r20, r8
    a610:	6d 81       	ldd	r22, Y+5	; 0x05
    a612:	7e 81       	ldd	r23, Y+6	; 0x06
    a614:	85 2d       	mov	r24, r5
    a616:	0e 94 2f 45 	call	0x8a5e	; 0x8a5e <BlitSpritePart>
    a61a:	43 94       	inc	r4
    a61c:	2f ef       	ldi	r18, 0xFF	; 255
    a61e:	82 1a       	sub	r8, r18
    a620:	92 0a       	sbc	r9, r18
    a622:	39 81       	ldd	r19, Y+1	; 0x01
    a624:	43 12       	cpse	r4, r19
    a626:	a8 cf       	rjmp	.-176    	; 0xa578 <ProcessSprites+0x178>
    a628:	82 cf       	rjmp	.-252    	; 0xa52e <ProcessSprites+0x12e>
    a62a:	26 96       	adiw	r28, 0x06	; 6
    a62c:	0f b6       	in	r0, 0x3f	; 63
    a62e:	f8 94       	cli
    a630:	de bf       	out	0x3e, r29	; 62
    a632:	0f be       	out	0x3f, r0	; 63
    a634:	cd bf       	out	0x3d, r28	; 61
    a636:	df 91       	pop	r29
    a638:	cf 91       	pop	r28
    a63a:	1f 91       	pop	r17
    a63c:	0f 91       	pop	r16
    a63e:	ff 90       	pop	r15
    a640:	ef 90       	pop	r14
    a642:	df 90       	pop	r13
    a644:	cf 90       	pop	r12
    a646:	bf 90       	pop	r11
    a648:	af 90       	pop	r10
    a64a:	9f 90       	pop	r9
    a64c:	8f 90       	pop	r8
    a64e:	7f 90       	pop	r7
    a650:	6f 90       	pop	r6
    a652:	5f 90       	pop	r5
    a654:	4f 90       	pop	r4
    a656:	3f 90       	pop	r3
    a658:	2f 90       	pop	r2
    a65a:	08 95       	ret

0000a65c <Scroll>:
    a65c:	90 91 60 08 	lds	r25, 0x0860	; 0x800860 <screen_scrollHeight>
    a660:	29 2f       	mov	r18, r25
    a662:	22 0f       	add	r18, r18
    a664:	22 0f       	add	r18, r18
    a666:	22 0f       	add	r18, r18
    a668:	90 91 5f 08 	lds	r25, 0x085F	; 0x80085f <screen_scrollY>
    a66c:	96 0f       	add	r25, r22
    a66e:	90 93 5f 08 	sts	0x085F, r25	; 0x80085f <screen_scrollY>
    a672:	30 91 5e 08 	lds	r19, 0x085E	; 0x80085e <screen_scrollX>
    a676:	83 0f       	add	r24, r19
    a678:	80 93 5e 08 	sts	0x085E, r24	; 0x80085e <screen_scrollX>
    a67c:	92 17       	cp	r25, r18
    a67e:	38 f0       	brcs	.+14     	; 0xa68e <Scroll+0x32>
    a680:	67 fd       	sbrc	r22, 7
    a682:	02 c0       	rjmp	.+4      	; 0xa688 <Scroll+0x2c>
    a684:	92 1b       	sub	r25, r18
    a686:	01 c0       	rjmp	.+2      	; 0xa68a <Scroll+0x2e>
    a688:	92 0f       	add	r25, r18
    a68a:	90 93 5f 08 	sts	0x085F, r25	; 0x80085f <screen_scrollY>
    a68e:	08 95       	ret

0000a690 <MapSprite2>:
    a690:	df 92       	push	r13
    a692:	ef 92       	push	r14
    a694:	ff 92       	push	r15
    a696:	0f 93       	push	r16
    a698:	1f 93       	push	r17
    a69a:	cf 93       	push	r28
    a69c:	df 93       	push	r29
    a69e:	fb 01       	movw	r30, r22
    a6a0:	14 91       	lpm	r17, Z
    a6a2:	31 96       	adiw	r30, 0x01	; 1
    a6a4:	54 91       	lpm	r21, Z
    a6a6:	2f ef       	ldi	r18, 0xFF	; 255
    a6a8:	21 0f       	add	r18, r17
    a6aa:	e4 2f       	mov	r30, r20
    a6ac:	e1 70       	andi	r30, 0x01	; 1
    a6ae:	40 ff       	sbrs	r20, 0
    a6b0:	03 c0       	rjmp	.+6      	; 0xa6b8 <MapSprite2+0x28>
    a6b2:	92 2f       	mov	r25, r18
    a6b4:	df ef       	ldi	r29, 0xFF	; 255
    a6b6:	02 c0       	rjmp	.+4      	; 0xa6bc <MapSprite2+0x2c>
    a6b8:	d1 e0       	ldi	r29, 0x01	; 1
    a6ba:	90 e0       	ldi	r25, 0x00	; 0
    a6bc:	41 ff       	sbrs	r20, 1
    a6be:	04 c0       	rjmp	.+8      	; 0xa6c8 <MapSprite2+0x38>
    a6c0:	3f ef       	ldi	r19, 0xFF	; 255
    a6c2:	35 0f       	add	r19, r21
    a6c4:	0f ef       	ldi	r16, 0xFF	; 255
    a6c6:	02 c0       	rjmp	.+4      	; 0xa6cc <MapSprite2+0x3c>
    a6c8:	01 e0       	ldi	r16, 0x01	; 1
    a6ca:	30 e0       	ldi	r19, 0x00	; 0
    a6cc:	ee 23       	and	r30, r30
    a6ce:	11 f0       	breq	.+4      	; 0xa6d4 <MapSprite2+0x44>
    a6d0:	e2 2e       	mov	r14, r18
    a6d2:	01 c0       	rjmp	.+2      	; 0xa6d6 <MapSprite2+0x46>
    a6d4:	e1 2c       	mov	r14, r1
    a6d6:	c0 e0       	ldi	r28, 0x00	; 0
    a6d8:	c5 17       	cp	r28, r21
    a6da:	f9 f0       	breq	.+62     	; 0xa71a <MapSprite2+0x8a>
    a6dc:	31 03       	mulsu	r19, r17
    a6de:	d0 01       	movw	r26, r0
    a6e0:	11 24       	eor	r1, r1
    a6e2:	d8 2e       	mov	r13, r24
    a6e4:	d1 0e       	add	r13, r17
    a6e6:	8d 15       	cp	r24, r13
    a6e8:	a1 f0       	breq	.+40     	; 0xa712 <MapSprite2+0x82>
    a6ea:	fd 01       	movw	r30, r26
    a6ec:	e9 0f       	add	r30, r25
    a6ee:	f1 1d       	adc	r31, r1
    a6f0:	97 fd       	sbrc	r25, 7
    a6f2:	fa 95       	dec	r31
    a6f4:	32 96       	adiw	r30, 0x02	; 2
    a6f6:	e6 0f       	add	r30, r22
    a6f8:	f7 1f       	adc	r31, r23
    a6fa:	f4 90       	lpm	r15, Z
    a6fc:	24 e0       	ldi	r18, 0x04	; 4
    a6fe:	82 9f       	mul	r24, r18
    a700:	f0 01       	movw	r30, r0
    a702:	11 24       	eor	r1, r1
    a704:	ec 5f       	subi	r30, 0xFC	; 252
    a706:	fe 4f       	sbci	r31, 0xFE	; 254
    a708:	f2 82       	std	Z+2, r15	; 0x02
    a70a:	8f 5f       	subi	r24, 0xFF	; 255
    a70c:	43 83       	std	Z+3, r20	; 0x03
    a70e:	9d 0f       	add	r25, r29
    a710:	ea cf       	rjmp	.-44     	; 0xa6e6 <MapSprite2+0x56>
    a712:	30 0f       	add	r19, r16
    a714:	cf 5f       	subi	r28, 0xFF	; 255
    a716:	9e 2d       	mov	r25, r14
    a718:	df cf       	rjmp	.-66     	; 0xa6d8 <MapSprite2+0x48>
    a71a:	df 91       	pop	r29
    a71c:	cf 91       	pop	r28
    a71e:	1f 91       	pop	r17
    a720:	0f 91       	pop	r16
    a722:	ff 90       	pop	r15
    a724:	ef 90       	pop	r14
    a726:	df 90       	pop	r13
    a728:	08 95       	ret

0000a72a <MoveSprite>:
    a72a:	0f 93       	push	r16
    a72c:	30 e0       	ldi	r19, 0x00	; 0
    a72e:	30 17       	cp	r19, r16
    a730:	99 f0       	breq	.+38     	; 0xa758 <MoveSprite+0x2e>
    a732:	58 2f       	mov	r21, r24
    a734:	52 0f       	add	r21, r18
    a736:	96 2f       	mov	r25, r22
    a738:	85 17       	cp	r24, r21
    a73a:	59 f0       	breq	.+22     	; 0xa752 <MoveSprite+0x28>
    a73c:	74 e0       	ldi	r23, 0x04	; 4
    a73e:	87 9f       	mul	r24, r23
    a740:	f0 01       	movw	r30, r0
    a742:	11 24       	eor	r1, r1
    a744:	ec 5f       	subi	r30, 0xFC	; 252
    a746:	fe 4f       	sbci	r31, 0xFE	; 254
    a748:	90 83       	st	Z, r25
    a74a:	41 83       	std	Z+1, r20	; 0x01
    a74c:	8f 5f       	subi	r24, 0xFF	; 255
    a74e:	98 5f       	subi	r25, 0xF8	; 248
    a750:	f3 cf       	rjmp	.-26     	; 0xa738 <MoveSprite+0xe>
    a752:	3f 5f       	subi	r19, 0xFF	; 255
    a754:	48 5f       	subi	r20, 0xF8	; 248
    a756:	eb cf       	rjmp	.-42     	; 0xa72e <MoveSprite+0x4>
    a758:	0f 91       	pop	r16
    a75a:	08 95       	ret

0000a75c <InitializeVideoMode>:
    a75c:	e4 e0       	ldi	r30, 0x04	; 4
    a75e:	f1 e0       	ldi	r31, 0x01	; 1
    a760:	80 ee       	ldi	r24, 0xE0	; 224
    a762:	80 83       	st	Z, r24
    a764:	81 83       	std	Z+1, r24	; 0x01
    a766:	34 96       	adiw	r30, 0x04	; 4
    a768:	91 e0       	ldi	r25, 0x01	; 1
    a76a:	ec 33       	cpi	r30, 0x3C	; 60
    a76c:	f9 07       	cpc	r31, r25
    a76e:	c9 f7       	brne	.-14     	; 0xa762 <InitializeVideoMode+0x6>
    a770:	80 e2       	ldi	r24, 0x20	; 32
    a772:	80 93 60 08 	sts	0x0860, r24	; 0x800860 <screen_scrollHeight>
    a776:	10 92 5b 08 	sts	0x085B, r1	; 0x80085b <Screen>
    a77a:	10 92 4d 08 	sts	0x084D, r1	; 0x80084d <free_tile_index>
    a77e:	10 92 4f 08 	sts	0x084F, r1	; 0x80084f <user_ram_tiles_c_tmp>
    a782:	08 95       	ret

0000a784 <DrawMap>:
    a784:	7f 92       	push	r7
    a786:	8f 92       	push	r8
    a788:	9f 92       	push	r9
    a78a:	af 92       	push	r10
    a78c:	bf 92       	push	r11
    a78e:	cf 92       	push	r12
    a790:	df 92       	push	r13
    a792:	ef 92       	push	r14
    a794:	ff 92       	push	r15
    a796:	0f 93       	push	r16
    a798:	1f 93       	push	r17
    a79a:	cf 93       	push	r28
    a79c:	df 93       	push	r29
    a79e:	98 2e       	mov	r9, r24
    a7a0:	86 2e       	mov	r8, r22
    a7a2:	fa 01       	movw	r30, r20
    a7a4:	e4 90       	lpm	r14, Z
    a7a6:	31 96       	adiw	r30, 0x01	; 1
    a7a8:	f4 90       	lpm	r15, Z
    a7aa:	ae 2c       	mov	r10, r14
    a7ac:	b1 2c       	mov	r11, r1
    a7ae:	ea 01       	movw	r28, r20
    a7b0:	22 96       	adiw	r28, 0x02	; 2
    a7b2:	10 e0       	ldi	r17, 0x00	; 0
    a7b4:	1f 15       	cp	r17, r15
    a7b6:	b9 f0       	breq	.+46     	; 0xa7e6 <DrawMap+0x62>
    a7b8:	6e 01       	movw	r12, r28
    a7ba:	00 e0       	ldi	r16, 0x00	; 0
    a7bc:	71 2e       	mov	r7, r17
    a7be:	78 0c       	add	r7, r8
    a7c0:	0e 15       	cp	r16, r14
    a7c2:	69 f0       	breq	.+26     	; 0xa7de <DrawMap+0x5a>
    a7c4:	f6 01       	movw	r30, r12
    a7c6:	44 91       	lpm	r20, Z
    a7c8:	50 e0       	ldi	r21, 0x00	; 0
    a7ca:	67 2d       	mov	r22, r7
    a7cc:	80 2f       	mov	r24, r16
    a7ce:	89 0d       	add	r24, r9
    a7d0:	0e 94 45 47 	call	0x8e8a	; 0x8e8a <SetTile>
    a7d4:	0f 5f       	subi	r16, 0xFF	; 255
    a7d6:	ff ef       	ldi	r31, 0xFF	; 255
    a7d8:	cf 1a       	sub	r12, r31
    a7da:	df 0a       	sbc	r13, r31
    a7dc:	f1 cf       	rjmp	.-30     	; 0xa7c0 <DrawMap+0x3c>
    a7de:	1f 5f       	subi	r17, 0xFF	; 255
    a7e0:	ca 0d       	add	r28, r10
    a7e2:	db 1d       	adc	r29, r11
    a7e4:	e7 cf       	rjmp	.-50     	; 0xa7b4 <DrawMap+0x30>
    a7e6:	df 91       	pop	r29
    a7e8:	cf 91       	pop	r28
    a7ea:	1f 91       	pop	r17
    a7ec:	0f 91       	pop	r16
    a7ee:	ff 90       	pop	r15
    a7f0:	ef 90       	pop	r14
    a7f2:	df 90       	pop	r13
    a7f4:	cf 90       	pop	r12
    a7f6:	bf 90       	pop	r11
    a7f8:	af 90       	pop	r10
    a7fa:	9f 90       	pop	r9
    a7fc:	8f 90       	pop	r8
    a7fe:	7f 90       	pop	r7
    a800:	08 95       	ret

0000a802 <WaitVsync>:

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
    a802:	0f 93       	push	r16
    a804:	1f 93       	push	r17
    a806:	cf 93       	push	r28
    a808:	df 93       	push	r29
    a80a:	8c 01       	movw	r16, r24
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a80c:	c0 e0       	ldi	r28, 0x00	; 0
    a80e:	d0 e0       	ldi	r29, 0x00	; 0
    a810:	c0 17       	cp	r28, r16
    a812:	d1 07       	cpc	r29, r17
    a814:	44 f4       	brge	.+16     	; 0xa826 <WaitVsync+0x24>
		while(!GetVsyncFlag());
    a816:	0e 94 5b 47 	call	0x8eb6	; 0x8eb6 <GetVsyncFlag>
    a81a:	88 23       	and	r24, r24
    a81c:	e1 f3       	breq	.-8      	; 0xa816 <WaitVsync+0x14>
		ClearVsyncFlag();		
    a81e:	0e 94 5f 47 	call	0x8ebe	; 0x8ebe <ClearVsyncFlag>

//Wait for the beginning of next frame (60hz)
void WaitVsync(int count){
	int i;
	//ClearVsyncFlag();
	for(i=0;i<count;i++){
    a822:	21 96       	adiw	r28, 0x01	; 1
    a824:	f5 cf       	rjmp	.-22     	; 0xa810 <WaitVsync+0xe>
		while(!GetVsyncFlag());
		ClearVsyncFlag();		
	}
}
    a826:	df 91       	pop	r29
    a828:	cf 91       	pop	r28
    a82a:	1f 91       	pop	r17
    a82c:	0f 91       	pop	r16
    a82e:	08 95       	ret

0000a830 <DisplayLogo>:
void DisplayLogo(){

	#if (INTRO_LOGO != 0)
	#define LOGO_X_POS ((SCREEN_TILES_H / 2U) - 2U)

	InitMusicPlayer(logoInitPatches);
    a830:	83 e1       	ldi	r24, 0x13	; 19
    a832:	99 e0       	ldi	r25, 0x09	; 9
    a834:	0e 94 c0 48 	call	0x9180	; 0x9180 <InitMusicPlayer>
	SetTileTable(logo_tileset);
    a838:	83 e1       	ldi	r24, 0x13	; 19
    a83a:	91 e0       	ldi	r25, 0x01	; 1
    a83c:	0e 94 56 47 	call	0x8eac	; 0x8eac <SetTileTable>

	/* Draw logo */
	ClearVram();
    a840:	0e 94 3b 47 	call	0x8e76	; 0x8e76 <ClearVram>
	WaitVsync(15U);
    a844:	8f e0       	ldi	r24, 0x0F	; 15
    a846:	90 e0       	ldi	r25, 0x00	; 0
    a848:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>

	#if (INTRO_LOGO == 1)
	TriggerFx(0U, 0xFFU, true);
    a84c:	41 e0       	ldi	r20, 0x01	; 1
    a84e:	6f ef       	ldi	r22, 0xFF	; 255
    a850:	80 e0       	ldi	r24, 0x00	; 0
    a852:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
	#endif

	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a856:	4d ef       	ldi	r20, 0xFD	; 253
    a858:	50 e0       	ldi	r21, 0x00	; 0
    a85a:	6c e0       	ldi	r22, 0x0C	; 12
    a85c:	8c e0       	ldi	r24, 0x0C	; 12
    a85e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
	WaitVsync(3);
    a862:	83 e0       	ldi	r24, 0x03	; 3
    a864:	90 e0       	ldi	r25, 0x00	; 0
    a866:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo2);
    a86a:	4c ee       	ldi	r20, 0xEC	; 236
    a86c:	50 e0       	ldi	r21, 0x00	; 0
    a86e:	6c e0       	ldi	r22, 0x0C	; 12
    a870:	8c e0       	ldi	r24, 0x0C	; 12
    a872:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
	WaitVsync(2);
    a876:	82 e0       	ldi	r24, 0x02	; 2
    a878:	90 e0       	ldi	r25, 0x00	; 0
    a87a:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
	DrawMap2(LOGO_X_POS, 12U, map_uzeboxlogo);
    a87e:	4d ef       	ldi	r20, 0xFD	; 253
    a880:	50 e0       	ldi	r21, 0x00	; 0
    a882:	6c e0       	ldi	r22, 0x0C	; 12
    a884:	8c e0       	ldi	r24, 0x0C	; 12
    a886:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
	#if (INTRO_LOGO == 2)
	SetMasterVolume(0xC0U);
	TriggerNote(3U, 0U, 16U, 0xFFU);
	#endif

	WaitVsync(65U);
    a88a:	81 e4       	ldi	r24, 0x41	; 65
    a88c:	90 e0       	ldi	r25, 0x00	; 0
    a88e:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
	ClearVram();
    a892:	0e 94 3b 47 	call	0x8e76	; 0x8e76 <ClearVram>
	WaitVsync(20U);
    a896:	84 e1       	ldi	r24, 0x14	; 20
    a898:	90 e0       	ldi	r25, 0x00	; 0
    a89a:	0c 94 01 54 	jmp	0xa802	; 0xa802 <WaitVsync>

0000a89e <doFade>:
char fadeDir;
bool volatile fadeActive;


void doFade(unsigned char speed,bool blocking){
	fadeSpeed=speed;
    a89e:	80 93 20 09 	sts	0x0920, r24	; 0x800920 <fadeSpeed>
	currFadeFrame=0;
    a8a2:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <currFadeFrame>
	fadeActive=true;
    a8a6:	81 e0       	ldi	r24, 0x01	; 1
    a8a8:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <fadeActive>
		
	if(blocking){
    a8ac:	66 23       	and	r22, r22
    a8ae:	21 f0       	breq	.+8      	; 0xa8b8 <doFade+0x1a>
		while(fadeActive==true);
    a8b0:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    a8b4:	81 11       	cpse	r24, r1
    a8b6:	fc cf       	rjmp	.-8      	; 0xa8b0 <doFade+0x12>
    a8b8:	08 95       	ret

0000a8ba <FadeIn>:
	
	
}

void FadeIn(unsigned char speed,bool blocking){
	if(speed==0){
    a8ba:	81 11       	cpse	r24, r1
    a8bc:	03 c0       	rjmp	.+6      	; 0xa8c4 <FadeIn+0xa>
		DDRC=0xff;
    a8be:	8f ef       	ldi	r24, 0xFF	; 255
    a8c0:	87 b9       	out	0x07, r24	; 7
		return;
    a8c2:	08 95       	ret
	}
	fadeStep=1;
    a8c4:	91 e0       	ldi	r25, 0x01	; 1
    a8c6:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=1;
    a8ca:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    a8ce:	0c 94 4f 54 	jmp	0xa89e	; 0xa89e <doFade>

0000a8d2 <FadeOut>:
}

void FadeOut(unsigned char speed,bool blocking){
	if(speed==0){
    a8d2:	81 11       	cpse	r24, r1
    a8d4:	02 c0       	rjmp	.+4      	; 0xa8da <FadeOut+0x8>
		DDRC=0;
    a8d6:	17 b8       	out	0x07, r1	; 7
		return;
    a8d8:	08 95       	ret
	}
	
	fadeStep=FADER_STEPS;
    a8da:	9c e0       	ldi	r25, 0x0C	; 12
    a8dc:	90 93 24 09 	sts	0x0924, r25	; 0x800924 <fadeStep>
	fadeDir=-1;
    a8e0:	9f ef       	ldi	r25, 0xFF	; 255
    a8e2:	90 93 21 09 	sts	0x0921, r25	; 0x800921 <fadeDir>
	doFade(speed,blocking);
    a8e6:	0c 94 4f 54 	jmp	0xa89e	; 0xa89e <doFade>

0000a8ea <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    a8ea:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <fadeActive>
    a8ee:	88 23       	and	r24, r24
    a8f0:	01 f1       	breq	.+64     	; 0xa932 <ProcessFading+0x48>
		if(currFadeFrame==0){
    a8f2:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <currFadeFrame>
    a8f6:	81 11       	cpse	r24, r1
    a8f8:	19 c0       	rjmp	.+50     	; 0xa92c <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    a8fa:	80 91 20 09 	lds	r24, 0x0920	; 0x800920 <fadeSpeed>
    a8fe:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    a902:	e0 91 24 09 	lds	r30, 0x0924	; 0x800924 <fadeStep>
    a906:	f0 e0       	ldi	r31, 0x00	; 0
    a908:	e1 52       	subi	r30, 0x21	; 33
    a90a:	ff 4f       	sbci	r31, 0xFF	; 255
    a90c:	e4 91       	lpm	r30, Z
    a90e:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    a910:	90 91 24 09 	lds	r25, 0x0924	; 0x800924 <fadeStep>
    a914:	80 91 21 09 	lds	r24, 0x0921	; 0x800921 <fadeDir>
    a918:	89 0f       	add	r24, r25
    a91a:	80 93 24 09 	sts	0x0924, r24	; 0x800924 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    a91e:	88 23       	and	r24, r24
    a920:	11 f0       	breq	.+4      	; 0xa926 <ProcessFading+0x3c>
    a922:	8d 30       	cpi	r24, 0x0D	; 13
    a924:	31 f4       	brne	.+12     	; 0xa932 <ProcessFading+0x48>
				fadeActive=false;
    a926:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <fadeActive>
    a92a:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    a92c:	81 50       	subi	r24, 0x01	; 1
    a92e:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <currFadeFrame>
    a932:	08 95       	ret

0000a934 <VideoModeVsync>:
/*
** Callback invoked during hsync
*/
void VideoModeVsync(){

	ProcessFading();
    a934:	0e 94 75 54 	call	0xa8ea	; 0xa8ea <ProcessFading>
	#if (SPRITES_VSYNC_PROCESS != 0)
	ProcessSprites();
    a938:	0c 94 00 52 	jmp	0xa400	; 0xa400 <ProcessSprites>

0000a93c <vsync_callback>:
};
}
}

void vsync_callback() {
	time++;
    a93c:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    a940:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    a944:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    a948:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    a94c:	01 96       	adiw	r24, 0x01	; 1
    a94e:	a1 1d       	adc	r26, r1
    a950:	b1 1d       	adc	r27, r1
    a952:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <time>
    a956:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <time+0x1>
    a95a:	a0 93 99 09 	sts	0x0999, r26	; 0x800999 <time+0x2>
    a95e:	b0 93 9a 09 	sts	0x099A, r27	; 0x80099a <time+0x3>
    a962:	08 95       	ret

0000a964 <drawplayer>:
return;
  
}

void drawplayer()
{
    a964:	0f 93       	push	r16
 
if  ( player.jumping == false  )
    a966:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0xd>
    a96a:	81 11       	cpse	r24, r1
    a96c:	74 c0       	rjmp	.+232    	; 0xaa56 <drawplayer+0xf2>
{
if (player.direction == 'r' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,0);
    a96e:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    a972:	82 37       	cpi	r24, 0x72	; 114
    a974:	49 f4       	brne	.+18     	; 0xa988 <drawplayer+0x24>
    a976:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    a97a:	81 11       	cpse	r24, r1
    a97c:	05 c0       	rjmp	.+10     	; 0xa988 <drawplayer+0x24>
    a97e:	40 e0       	ldi	r20, 0x00	; 0
    a980:	63 ed       	ldi	r22, 0xD3	; 211
    a982:	73 e5       	ldi	r23, 0x53	; 83
    a984:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'l' && player.aniframe == 0 ) MapSprite2(0 ,melli0 ,1);
    a988:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    a98c:	8c 36       	cpi	r24, 0x6C	; 108
    a98e:	49 f4       	brne	.+18     	; 0xa9a2 <drawplayer+0x3e>
    a990:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    a994:	81 11       	cpse	r24, r1
    a996:	05 c0       	rjmp	.+10     	; 0xa9a2 <drawplayer+0x3e>
    a998:	41 e0       	ldi	r20, 0x01	; 1
    a99a:	63 ed       	ldi	r22, 0xD3	; 211
    a99c:	73 e5       	ldi	r23, 0x53	; 83
    a99e:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,0);
    a9a2:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    a9a6:	82 37       	cpi	r24, 0x72	; 114
    a9a8:	59 f4       	brne	.+22     	; 0xa9c0 <drawplayer+0x5c>
    a9aa:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    a9ae:	81 50       	subi	r24, 0x01	; 1
    a9b0:	88 30       	cpi	r24, 0x08	; 8
    a9b2:	30 f4       	brcc	.+12     	; 0xa9c0 <drawplayer+0x5c>
    a9b4:	40 e0       	ldi	r20, 0x00	; 0
    a9b6:	6b ec       	ldi	r22, 0xCB	; 203
    a9b8:	73 e5       	ldi	r23, 0x53	; 83
    a9ba:	80 e0       	ldi	r24, 0x00	; 0
    a9bc:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,0);    
    a9c0:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    a9c4:	82 37       	cpi	r24, 0x72	; 114
    a9c6:	59 f4       	brne	.+22     	; 0xa9de <drawplayer+0x7a>
    a9c8:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    a9cc:	89 50       	subi	r24, 0x09	; 9
    a9ce:	88 30       	cpi	r24, 0x08	; 8
    a9d0:	30 f4       	brcc	.+12     	; 0xa9de <drawplayer+0x7a>
    a9d2:	40 e0       	ldi	r20, 0x00	; 0
    a9d4:	63 ec       	ldi	r22, 0xC3	; 195
    a9d6:	73 e5       	ldi	r23, 0x53	; 83
    a9d8:	80 e0       	ldi	r24, 0x00	; 0
    a9da:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'r' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,0);  
    a9de:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    a9e2:	82 37       	cpi	r24, 0x72	; 114
    a9e4:	59 f4       	brne	.+22     	; 0xa9fc <drawplayer+0x98>
    a9e6:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    a9ea:	81 51       	subi	r24, 0x11	; 17
    a9ec:	88 30       	cpi	r24, 0x08	; 8
    a9ee:	30 f4       	brcc	.+12     	; 0xa9fc <drawplayer+0x98>
    a9f0:	40 e0       	ldi	r20, 0x00	; 0
    a9f2:	63 eb       	ldi	r22, 0xB3	; 179
    a9f4:	73 e5       	ldi	r23, 0x53	; 83
    a9f6:	80 e0       	ldi	r24, 0x00	; 0
    a9f8:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>

if (player.direction == 'l' && player.aniframe > 0 && player.aniframe  <= 8 )  MapSprite2(0 ,melli1 ,1);
    a9fc:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    aa00:	8c 36       	cpi	r24, 0x6C	; 108
    aa02:	59 f4       	brne	.+22     	; 0xaa1a <drawplayer+0xb6>
    aa04:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    aa08:	81 50       	subi	r24, 0x01	; 1
    aa0a:	88 30       	cpi	r24, 0x08	; 8
    aa0c:	30 f4       	brcc	.+12     	; 0xaa1a <drawplayer+0xb6>
    aa0e:	41 e0       	ldi	r20, 0x01	; 1
    aa10:	6b ec       	ldi	r22, 0xCB	; 203
    aa12:	73 e5       	ldi	r23, 0x53	; 83
    aa14:	80 e0       	ldi	r24, 0x00	; 0
    aa16:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 8 && player.aniframe <= 16 ) MapSprite2(0 ,melli2 ,1);    
    aa1a:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    aa1e:	8c 36       	cpi	r24, 0x6C	; 108
    aa20:	59 f4       	brne	.+22     	; 0xaa38 <drawplayer+0xd4>
    aa22:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    aa26:	89 50       	subi	r24, 0x09	; 9
    aa28:	88 30       	cpi	r24, 0x08	; 8
    aa2a:	30 f4       	brcc	.+12     	; 0xaa38 <drawplayer+0xd4>
    aa2c:	41 e0       	ldi	r20, 0x01	; 1
    aa2e:	63 ec       	ldi	r22, 0xC3	; 195
    aa30:	73 e5       	ldi	r23, 0x53	; 83
    aa32:	80 e0       	ldi	r24, 0x00	; 0
    aa34:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'l' && player.aniframe > 16 && player.aniframe <= 24 ) MapSprite2(0 ,melli4 ,1);  
    aa38:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    aa3c:	8c 36       	cpi	r24, 0x6C	; 108
    aa3e:	59 f4       	brne	.+22     	; 0xaa56 <drawplayer+0xf2>
    aa40:	80 91 71 09 	lds	r24, 0x0971	; 0x800971 <player+0x10>
    aa44:	81 51       	subi	r24, 0x11	; 17
    aa46:	88 30       	cpi	r24, 0x08	; 8
    aa48:	a0 f4       	brcc	.+40     	; 0xaa72 <drawplayer+0x10e>
    aa4a:	41 e0       	ldi	r20, 0x01	; 1
    aa4c:	63 eb       	ldi	r22, 0xB3	; 179
    aa4e:	73 e5       	ldi	r23, 0x53	; 83
    aa50:	80 e0       	ldi	r24, 0x00	; 0
    aa52:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
};

if (player.direction == 'r' && player.jumping == true  ) MapSprite2(0 ,melli3 ,0);   
    aa56:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    aa5a:	82 37       	cpi	r24, 0x72	; 114
    aa5c:	51 f4       	brne	.+20     	; 0xaa72 <drawplayer+0x10e>
    aa5e:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0xd>
    aa62:	88 23       	and	r24, r24
    aa64:	31 f0       	breq	.+12     	; 0xaa72 <drawplayer+0x10e>
    aa66:	40 e0       	ldi	r20, 0x00	; 0
    aa68:	6b eb       	ldi	r22, 0xBB	; 187
    aa6a:	73 e5       	ldi	r23, 0x53	; 83
    aa6c:	80 e0       	ldi	r24, 0x00	; 0
    aa6e:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,melli3 ,1); 
    aa72:	80 91 68 09 	lds	r24, 0x0968	; 0x800968 <player+0x7>
    aa76:	8c 36       	cpi	r24, 0x6C	; 108
    aa78:	51 f4       	brne	.+20     	; 0xaa8e <drawplayer+0x12a>
    aa7a:	80 91 6e 09 	lds	r24, 0x096E	; 0x80096e <player+0xd>
    aa7e:	88 23       	and	r24, r24
    aa80:	31 f0       	breq	.+12     	; 0xaa8e <drawplayer+0x12a>
    aa82:	41 e0       	ldi	r20, 0x01	; 1
    aa84:	6b eb       	ldi	r22, 0xBB	; 187
    aa86:	73 e5       	ldi	r23, 0x53	; 83
    aa88:	80 e0       	ldi	r24, 0x00	; 0
    aa8a:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    aa8e:	40 91 63 09 	lds	r20, 0x0963	; 0x800963 <player+0x2>
    aa92:	45 51       	subi	r20, 0x15	; 21
    aa94:	60 91 61 09 	lds	r22, 0x0961	; 0x800961 <player>
    aa98:	67 50       	subi	r22, 0x07	; 7
    aa9a:	03 e0       	ldi	r16, 0x03	; 3
    aa9c:	22 e0       	ldi	r18, 0x02	; 2
    aa9e:	80 e0       	ldi	r24, 0x00	; 0
    aaa0:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>



aniframe++;
    aaa4:	80 91 fb 09 	lds	r24, 0x09FB	; 0x8009fb <aniframe>
    aaa8:	8f 5f       	subi	r24, 0xFF	; 255
if ( aniframe > 20 ) aniframe = 0;     
    aaaa:	85 31       	cpi	r24, 0x15	; 21
    aaac:	18 f4       	brcc	.+6      	; 0xaab4 <drawplayer+0x150>
if (player.direction == 'l' && player.jumping == true ) MapSprite2(0 ,melli3 ,1); 
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);



aniframe++;
    aaae:	80 93 fb 09 	sts	0x09FB, r24	; 0x8009fb <aniframe>
    aab2:	02 c0       	rjmp	.+4      	; 0xaab8 <drawplayer+0x154>
if ( aniframe > 20 ) aniframe = 0;     
    aab4:	10 92 fb 09 	sts	0x09FB, r1	; 0x8009fb <aniframe>


}
    aab8:	0f 91       	pop	r16
    aaba:	08 95       	ret

0000aabc <drawplayer2>:
void drawplayer2()
{
    aabc:	0f 93       	push	r16
 
if  ( player2.jumping == false  )
    aabe:	80 91 a9 09 	lds	r24, 0x09A9	; 0x8009a9 <player2+0xd>
    aac2:	81 11       	cpse	r24, r1
    aac4:	76 c0       	rjmp	.+236    	; 0xabb2 <drawplayer2+0xf6>
{
if (player2.direction == 'r' && player2.aniframe == 0 ) MapSprite2(spriteInd ,man0 ,0);
    aac6:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    aaca:	82 37       	cpi	r24, 0x72	; 114
    aacc:	51 f4       	brne	.+20     	; 0xaae2 <drawplayer2+0x26>
    aace:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    aad2:	81 11       	cpse	r24, r1
    aad4:	06 c0       	rjmp	.+12     	; 0xaae2 <drawplayer2+0x26>
    aad6:	40 e0       	ldi	r20, 0x00	; 0
    aad8:	6b ea       	ldi	r22, 0xAB	; 171
    aada:	73 e5       	ldi	r23, 0x53	; 83
    aadc:	86 e0       	ldi	r24, 0x06	; 6
    aade:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe == 0 ) MapSprite2(spriteInd,man0 ,1);
    aae2:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    aae6:	8c 36       	cpi	r24, 0x6C	; 108
    aae8:	51 f4       	brne	.+20     	; 0xaafe <drawplayer2+0x42>
    aaea:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    aaee:	81 11       	cpse	r24, r1
    aaf0:	06 c0       	rjmp	.+12     	; 0xaafe <drawplayer2+0x42>
    aaf2:	41 e0       	ldi	r20, 0x01	; 1
    aaf4:	6b ea       	ldi	r22, 0xAB	; 171
    aaf6:	73 e5       	ldi	r23, 0x53	; 83
    aaf8:	86 e0       	ldi	r24, 0x06	; 6
    aafa:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,0);
    aafe:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab02:	82 37       	cpi	r24, 0x72	; 114
    ab04:	59 f4       	brne	.+22     	; 0xab1c <drawplayer2+0x60>
    ab06:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ab0a:	81 50       	subi	r24, 0x01	; 1
    ab0c:	88 30       	cpi	r24, 0x08	; 8
    ab0e:	30 f4       	brcc	.+12     	; 0xab1c <drawplayer2+0x60>
    ab10:	40 e0       	ldi	r20, 0x00	; 0
    ab12:	63 ea       	ldi	r22, 0xA3	; 163
    ab14:	73 e5       	ldi	r23, 0x53	; 83
    ab16:	86 e0       	ldi	r24, 0x06	; 6
    ab18:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,0);    
    ab1c:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab20:	82 37       	cpi	r24, 0x72	; 114
    ab22:	59 f4       	brne	.+22     	; 0xab3a <drawplayer2+0x7e>
    ab24:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ab28:	89 50       	subi	r24, 0x09	; 9
    ab2a:	88 30       	cpi	r24, 0x08	; 8
    ab2c:	30 f4       	brcc	.+12     	; 0xab3a <drawplayer2+0x7e>
    ab2e:	40 e0       	ldi	r20, 0x00	; 0
    ab30:	6b e9       	ldi	r22, 0x9B	; 155
    ab32:	73 e5       	ldi	r23, 0x53	; 83
    ab34:	86 e0       	ldi	r24, 0x06	; 6
    ab36:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'r' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,0);  
    ab3a:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab3e:	82 37       	cpi	r24, 0x72	; 114
    ab40:	59 f4       	brne	.+22     	; 0xab58 <drawplayer2+0x9c>
    ab42:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ab46:	81 51       	subi	r24, 0x11	; 17
    ab48:	88 30       	cpi	r24, 0x08	; 8
    ab4a:	30 f4       	brcc	.+12     	; 0xab58 <drawplayer2+0x9c>
    ab4c:	40 e0       	ldi	r20, 0x00	; 0
    ab4e:	6b e8       	ldi	r22, 0x8B	; 139
    ab50:	73 e5       	ldi	r23, 0x53	; 83
    ab52:	86 e0       	ldi	r24, 0x06	; 6
    ab54:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>

if (player2.direction == 'l' && player2.aniframe > 0 && player2.aniframe  <= 8 )  MapSprite2(spriteInd ,man1 ,1);
    ab58:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab5c:	8c 36       	cpi	r24, 0x6C	; 108
    ab5e:	59 f4       	brne	.+22     	; 0xab76 <drawplayer2+0xba>
    ab60:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ab64:	81 50       	subi	r24, 0x01	; 1
    ab66:	88 30       	cpi	r24, 0x08	; 8
    ab68:	30 f4       	brcc	.+12     	; 0xab76 <drawplayer2+0xba>
    ab6a:	41 e0       	ldi	r20, 0x01	; 1
    ab6c:	63 ea       	ldi	r22, 0xA3	; 163
    ab6e:	73 e5       	ldi	r23, 0x53	; 83
    ab70:	86 e0       	ldi	r24, 0x06	; 6
    ab72:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 8 && player2.aniframe <= 16 ) MapSprite2(spriteInd ,man2 ,1);    
    ab76:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab7a:	8c 36       	cpi	r24, 0x6C	; 108
    ab7c:	59 f4       	brne	.+22     	; 0xab94 <drawplayer2+0xd8>
    ab7e:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ab82:	89 50       	subi	r24, 0x09	; 9
    ab84:	88 30       	cpi	r24, 0x08	; 8
    ab86:	30 f4       	brcc	.+12     	; 0xab94 <drawplayer2+0xd8>
    ab88:	41 e0       	ldi	r20, 0x01	; 1
    ab8a:	6b e9       	ldi	r22, 0x9B	; 155
    ab8c:	73 e5       	ldi	r23, 0x53	; 83
    ab8e:	86 e0       	ldi	r24, 0x06	; 6
    ab90:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'l' && player2.aniframe > 16 && player2.aniframe <= 24 ) MapSprite2(spriteInd ,man4 ,1);  
    ab94:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    ab98:	8c 36       	cpi	r24, 0x6C	; 108
    ab9a:	59 f4       	brne	.+22     	; 0xabb2 <drawplayer2+0xf6>
    ab9c:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    aba0:	81 51       	subi	r24, 0x11	; 17
    aba2:	88 30       	cpi	r24, 0x08	; 8
    aba4:	a0 f4       	brcc	.+40     	; 0xabce <drawplayer2+0x112>
    aba6:	41 e0       	ldi	r20, 0x01	; 1
    aba8:	6b e8       	ldi	r22, 0x8B	; 139
    abaa:	73 e5       	ldi	r23, 0x53	; 83
    abac:	86 e0       	ldi	r24, 0x06	; 6
    abae:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
};

if (player2.direction == 'r' && player2.jumping == true  ) MapSprite2(spriteInd ,man3 ,0);   
    abb2:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    abb6:	82 37       	cpi	r24, 0x72	; 114
    abb8:	51 f4       	brne	.+20     	; 0xabce <drawplayer2+0x112>
    abba:	80 91 a9 09 	lds	r24, 0x09A9	; 0x8009a9 <player2+0xd>
    abbe:	88 23       	and	r24, r24
    abc0:	31 f0       	breq	.+12     	; 0xabce <drawplayer2+0x112>
    abc2:	40 e0       	ldi	r20, 0x00	; 0
    abc4:	63 e9       	ldi	r22, 0x93	; 147
    abc6:	73 e5       	ldi	r23, 0x53	; 83
    abc8:	86 e0       	ldi	r24, 0x06	; 6
    abca:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
if (player2.direction == 'l' && player2.jumping == true ) MapSprite2(spriteInd ,man3 ,1); 
    abce:	80 91 a3 09 	lds	r24, 0x09A3	; 0x8009a3 <player2+0x7>
    abd2:	8c 36       	cpi	r24, 0x6C	; 108
    abd4:	51 f4       	brne	.+20     	; 0xabea <drawplayer2+0x12e>
    abd6:	80 91 a9 09 	lds	r24, 0x09A9	; 0x8009a9 <player2+0xd>
    abda:	88 23       	and	r24, r24
    abdc:	31 f0       	breq	.+12     	; 0xabea <drawplayer2+0x12e>
    abde:	41 e0       	ldi	r20, 0x01	; 1
    abe0:	63 e9       	ldi	r22, 0x93	; 147
    abe2:	73 e5       	ldi	r23, 0x53	; 83
    abe4:	86 e0       	ldi	r24, 0x06	; 6
    abe6:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MoveSprite(spriteInd ,player2.x -7 ,player2.y - 21  ,2 ,3);
    abea:	40 91 9e 09 	lds	r20, 0x099E	; 0x80099e <player2+0x2>
    abee:	45 51       	subi	r20, 0x15	; 21
    abf0:	60 91 9c 09 	lds	r22, 0x099C	; 0x80099c <player2>
    abf4:	67 50       	subi	r22, 0x07	; 7
    abf6:	03 e0       	ldi	r16, 0x03	; 3
    abf8:	22 e0       	ldi	r18, 0x02	; 2
    abfa:	86 e0       	ldi	r24, 0x06	; 6
    abfc:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
if ( player2.aniframe > 20 ) player2.aniframe = 0;     
    ac00:	80 91 ac 09 	lds	r24, 0x09AC	; 0x8009ac <player2+0x10>
    ac04:	85 31       	cpi	r24, 0x15	; 21
    ac06:	10 f0       	brcs	.+4      	; 0xac0c <drawplayer2+0x150>
    ac08:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <player2+0x10>


}
    ac0c:	0f 91       	pop	r16
    ac0e:	08 95       	ret

0000ac10 <printtileint>:

void printtileint(int x, int y, int z,int l)
{
    ac10:	ef 92       	push	r14
    ac12:	ff 92       	push	r15
    ac14:	1f 93       	push	r17
    ac16:	cf 93       	push	r28
    ac18:	df 93       	push	r29
    ac1a:	cd b7       	in	r28, 0x3d	; 61
    ac1c:	de b7       	in	r29, 0x3e	; 62
    ac1e:	2a 97       	sbiw	r28, 0x0a	; 10
    ac20:	0f b6       	in	r0, 0x3f	; 63
    ac22:	f8 94       	cli
    ac24:	de bf       	out	0x3e, r29	; 62
    ac26:	0f be       	out	0x3f, r0	; 63
    ac28:	cd bf       	out	0x3d, r28	; 61
    ac2a:	18 2f       	mov	r17, r24
    ac2c:	fa 01       	movw	r30, r20
    ac2e:	79 01       	movw	r14, r18
unsigned char str[10];
str[0] = ' ';   
    ac30:	90 e2       	ldi	r25, 0x20	; 32
    ac32:	99 83       	std	Y+1, r25	; 0x01
str[1] = ' ';   
    ac34:	9a 83       	std	Y+2, r25	; 0x02
str[2] = ' ';   
    ac36:	9b 83       	std	Y+3, r25	; 0x03
str[3] = ' ';   
    ac38:	9c 83       	std	Y+4, r25	; 0x04
str[4] = ' ';   
    ac3a:	9d 83       	std	Y+5, r25	; 0x05
str[5] = ' ';   
    ac3c:	9e 83       	std	Y+6, r25	; 0x06
str[6] = ' ';   
    ac3e:	9f 83       	std	Y+7, r25	; 0x07
str[7] = ' ';   
    ac40:	98 87       	std	Y+8, r25	; 0x08
str[8] = ' ';
    ac42:	99 87       	std	Y+9, r25	; 0x09
str[9] = ' ';   
    ac44:	9a 87       	std	Y+10, r25	; 0x0a
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    ac46:	4a e0       	ldi	r20, 0x0A	; 10
    ac48:	be 01       	movw	r22, r28
    ac4a:	6f 5f       	subi	r22, 0xFF	; 255
    ac4c:	7f 4f       	sbci	r23, 0xFF	; 255
    ac4e:	cf 01       	movw	r24, r30
    ac50:	0e 94 a4 6c 	call	0xd948	; 0xd948 <__itoa_ncheck>
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    ac54:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <lx+0x1>
    ac58:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <lx>
    ac5c:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ac60:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ac64:	86 30       	cpi	r24, 0x06	; 6
    ac66:	91 05       	cpc	r25, r1
    ac68:	0c f0       	brlt	.+2      	; 0xac6c <printtileint+0x5c>
    ac6a:	f8 c0       	rjmp	.+496    	; 0xae5c <printtileint+0x24c>
    ac6c:	8e 15       	cp	r24, r14
    ac6e:	9f 05       	cpc	r25, r15
    ac70:	0c f0       	brlt	.+2      	; 0xac74 <printtileint+0x64>
    ac72:	f4 c0       	rjmp	.+488    	; 0xae5c <printtileint+0x24c>
{
//DrawMap2(x + i  + scrolltiles / 2,y, nb ); 
DrawMap2( lx + x,VRAM_TILES_V, nb ); 
    ac74:	43 ed       	ldi	r20, 0xD3	; 211
    ac76:	52 e8       	ldi	r21, 0x82	; 130
    ac78:	60 e2       	ldi	r22, 0x20	; 32
    ac7a:	81 0f       	add	r24, r17
    ac7c:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '0' ) DrawMap2(lx + x,VRAM_TILES_V, n0 );  
    ac80:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ac84:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ac88:	e1 e0       	ldi	r30, 0x01	; 1
    ac8a:	f0 e0       	ldi	r31, 0x00	; 0
    ac8c:	ec 0f       	add	r30, r28
    ac8e:	fd 1f       	adc	r31, r29
    ac90:	e8 0f       	add	r30, r24
    ac92:	f9 1f       	adc	r31, r25
    ac94:	20 81       	ld	r18, Z
    ac96:	20 33       	cpi	r18, 0x30	; 48
    ac98:	31 f4       	brne	.+12     	; 0xaca6 <printtileint+0x96>
    ac9a:	40 ed       	ldi	r20, 0xD0	; 208
    ac9c:	52 e8       	ldi	r21, 0x82	; 130
    ac9e:	60 e2       	ldi	r22, 0x20	; 32
    aca0:	81 0f       	add	r24, r17
    aca2:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '1' ) DrawMap2(lx + x,VRAM_TILES_V, n1 ); 
    aca6:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    acaa:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    acae:	e1 e0       	ldi	r30, 0x01	; 1
    acb0:	f0 e0       	ldi	r31, 0x00	; 0
    acb2:	ec 0f       	add	r30, r28
    acb4:	fd 1f       	adc	r31, r29
    acb6:	e8 0f       	add	r30, r24
    acb8:	f9 1f       	adc	r31, r25
    acba:	20 81       	ld	r18, Z
    acbc:	21 33       	cpi	r18, 0x31	; 49
    acbe:	31 f4       	brne	.+12     	; 0xaccc <printtileint+0xbc>
    acc0:	4d ec       	ldi	r20, 0xCD	; 205
    acc2:	52 e8       	ldi	r21, 0x82	; 130
    acc4:	60 e2       	ldi	r22, 0x20	; 32
    acc6:	81 0f       	add	r24, r17
    acc8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '2' ) DrawMap2(lx + x,VRAM_TILES_V, n2 ); 
    accc:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    acd0:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    acd4:	e1 e0       	ldi	r30, 0x01	; 1
    acd6:	f0 e0       	ldi	r31, 0x00	; 0
    acd8:	ec 0f       	add	r30, r28
    acda:	fd 1f       	adc	r31, r29
    acdc:	e8 0f       	add	r30, r24
    acde:	f9 1f       	adc	r31, r25
    ace0:	20 81       	ld	r18, Z
    ace2:	22 33       	cpi	r18, 0x32	; 50
    ace4:	31 f4       	brne	.+12     	; 0xacf2 <printtileint+0xe2>
    ace6:	4a ec       	ldi	r20, 0xCA	; 202
    ace8:	52 e8       	ldi	r21, 0x82	; 130
    acea:	60 e2       	ldi	r22, 0x20	; 32
    acec:	81 0f       	add	r24, r17
    acee:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '3' ) DrawMap2(lx + x,VRAM_TILES_V, n3 ); 
    acf2:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    acf6:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    acfa:	e1 e0       	ldi	r30, 0x01	; 1
    acfc:	f0 e0       	ldi	r31, 0x00	; 0
    acfe:	ec 0f       	add	r30, r28
    ad00:	fd 1f       	adc	r31, r29
    ad02:	e8 0f       	add	r30, r24
    ad04:	f9 1f       	adc	r31, r25
    ad06:	20 81       	ld	r18, Z
    ad08:	23 33       	cpi	r18, 0x33	; 51
    ad0a:	31 f4       	brne	.+12     	; 0xad18 <printtileint+0x108>
    ad0c:	47 ec       	ldi	r20, 0xC7	; 199
    ad0e:	52 e8       	ldi	r21, 0x82	; 130
    ad10:	60 e2       	ldi	r22, 0x20	; 32
    ad12:	81 0f       	add	r24, r17
    ad14:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '4' ) DrawMap2(lx + x,VRAM_TILES_V, n4); 
    ad18:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ad1c:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ad20:	e1 e0       	ldi	r30, 0x01	; 1
    ad22:	f0 e0       	ldi	r31, 0x00	; 0
    ad24:	ec 0f       	add	r30, r28
    ad26:	fd 1f       	adc	r31, r29
    ad28:	e8 0f       	add	r30, r24
    ad2a:	f9 1f       	adc	r31, r25
    ad2c:	20 81       	ld	r18, Z
    ad2e:	24 33       	cpi	r18, 0x34	; 52
    ad30:	31 f4       	brne	.+12     	; 0xad3e <printtileint+0x12e>
    ad32:	44 ec       	ldi	r20, 0xC4	; 196
    ad34:	52 e8       	ldi	r21, 0x82	; 130
    ad36:	60 e2       	ldi	r22, 0x20	; 32
    ad38:	81 0f       	add	r24, r17
    ad3a:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '5' ) DrawMap2(lx + x,VRAM_TILES_V, n5 ); 
    ad3e:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ad42:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ad46:	e1 e0       	ldi	r30, 0x01	; 1
    ad48:	f0 e0       	ldi	r31, 0x00	; 0
    ad4a:	ec 0f       	add	r30, r28
    ad4c:	fd 1f       	adc	r31, r29
    ad4e:	e8 0f       	add	r30, r24
    ad50:	f9 1f       	adc	r31, r25
    ad52:	20 81       	ld	r18, Z
    ad54:	25 33       	cpi	r18, 0x35	; 53
    ad56:	31 f4       	brne	.+12     	; 0xad64 <printtileint+0x154>
    ad58:	41 ec       	ldi	r20, 0xC1	; 193
    ad5a:	52 e8       	ldi	r21, 0x82	; 130
    ad5c:	60 e2       	ldi	r22, 0x20	; 32
    ad5e:	81 0f       	add	r24, r17
    ad60:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '6' ) DrawMap2(lx + x,VRAM_TILES_V, n6 ); 
    ad64:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ad68:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ad6c:	e1 e0       	ldi	r30, 0x01	; 1
    ad6e:	f0 e0       	ldi	r31, 0x00	; 0
    ad70:	ec 0f       	add	r30, r28
    ad72:	fd 1f       	adc	r31, r29
    ad74:	e8 0f       	add	r30, r24
    ad76:	f9 1f       	adc	r31, r25
    ad78:	20 81       	ld	r18, Z
    ad7a:	26 33       	cpi	r18, 0x36	; 54
    ad7c:	31 f4       	brne	.+12     	; 0xad8a <printtileint+0x17a>
    ad7e:	4e eb       	ldi	r20, 0xBE	; 190
    ad80:	52 e8       	ldi	r21, 0x82	; 130
    ad82:	60 e2       	ldi	r22, 0x20	; 32
    ad84:	81 0f       	add	r24, r17
    ad86:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '7' ) DrawMap2(lx + x,VRAM_TILES_V, n7 ); 
    ad8a:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ad8e:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ad92:	e1 e0       	ldi	r30, 0x01	; 1
    ad94:	f0 e0       	ldi	r31, 0x00	; 0
    ad96:	ec 0f       	add	r30, r28
    ad98:	fd 1f       	adc	r31, r29
    ad9a:	e8 0f       	add	r30, r24
    ad9c:	f9 1f       	adc	r31, r25
    ad9e:	20 81       	ld	r18, Z
    ada0:	27 33       	cpi	r18, 0x37	; 55
    ada2:	31 f4       	brne	.+12     	; 0xadb0 <printtileint+0x1a0>
    ada4:	4b eb       	ldi	r20, 0xBB	; 187
    ada6:	52 e8       	ldi	r21, 0x82	; 130
    ada8:	60 e2       	ldi	r22, 0x20	; 32
    adaa:	81 0f       	add	r24, r17
    adac:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '8' ) DrawMap2(lx + x,VRAM_TILES_V, n8 ); 
    adb0:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    adb4:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    adb8:	e1 e0       	ldi	r30, 0x01	; 1
    adba:	f0 e0       	ldi	r31, 0x00	; 0
    adbc:	ec 0f       	add	r30, r28
    adbe:	fd 1f       	adc	r31, r29
    adc0:	e8 0f       	add	r30, r24
    adc2:	f9 1f       	adc	r31, r25
    adc4:	20 81       	ld	r18, Z
    adc6:	28 33       	cpi	r18, 0x38	; 56
    adc8:	31 f4       	brne	.+12     	; 0xadd6 <printtileint+0x1c6>
    adca:	48 eb       	ldi	r20, 0xB8	; 184
    adcc:	52 e8       	ldi	r21, 0x82	; 130
    adce:	60 e2       	ldi	r22, 0x20	; 32
    add0:	81 0f       	add	r24, r17
    add2:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '9' ) DrawMap2(lx + x,VRAM_TILES_V, n9 );
    add6:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    adda:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    adde:	e1 e0       	ldi	r30, 0x01	; 1
    ade0:	f0 e0       	ldi	r31, 0x00	; 0
    ade2:	ec 0f       	add	r30, r28
    ade4:	fd 1f       	adc	r31, r29
    ade6:	e8 0f       	add	r30, r24
    ade8:	f9 1f       	adc	r31, r25
    adea:	20 81       	ld	r18, Z
    adec:	29 33       	cpi	r18, 0x39	; 57
    adee:	31 f4       	brne	.+12     	; 0xadfc <printtileint+0x1ec>
    adf0:	45 eb       	ldi	r20, 0xB5	; 181
    adf2:	52 e8       	ldi	r21, 0x82	; 130
    adf4:	60 e2       	ldi	r22, 0x20	; 32
    adf6:	81 0f       	add	r24, r17
    adf8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == '-' ) DrawMap2(lx + x,VRAM_TILES_V, nm );    
    adfc:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ae00:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ae04:	e1 e0       	ldi	r30, 0x01	; 1
    ae06:	f0 e0       	ldi	r31, 0x00	; 0
    ae08:	ec 0f       	add	r30, r28
    ae0a:	fd 1f       	adc	r31, r29
    ae0c:	e8 0f       	add	r30, r24
    ae0e:	f9 1f       	adc	r31, r25
    ae10:	20 81       	ld	r18, Z
    ae12:	2d 32       	cpi	r18, 0x2D	; 45
    ae14:	31 f4       	brne	.+12     	; 0xae22 <printtileint+0x212>
    ae16:	42 eb       	ldi	r20, 0xB2	; 178
    ae18:	52 e8       	ldi	r21, 0x82	; 130
    ae1a:	60 e2       	ldi	r22, 0x20	; 32
    ae1c:	81 0f       	add	r24, r17
    ae1e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    ae22:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ae26:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ae2a:	e1 e0       	ldi	r30, 0x01	; 1
    ae2c:	f0 e0       	ldi	r31, 0x00	; 0
    ae2e:	ec 0f       	add	r30, r28
    ae30:	fd 1f       	adc	r31, r29
    ae32:	e8 0f       	add	r30, r24
    ae34:	f9 1f       	adc	r31, r25
    ae36:	20 81       	ld	r18, Z
    ae38:	20 32       	cpi	r18, 0x20	; 32
    ae3a:	31 f4       	brne	.+12     	; 0xae48 <printtileint+0x238>
    ae3c:	43 ed       	ldi	r20, 0xD3	; 211
    ae3e:	52 e8       	ldi	r21, 0x82	; 130
    ae40:	60 e2       	ldi	r22, 0x20	; 32
    ae42:	81 0f       	add	r24, r17
    ae44:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
str[7] = ' ';   
str[8] = ' ';
str[9] = ' ';   
//DrawMap2(0,VRAM_TILES_V,n1);
itoa(z, str, 10);
for ( lx = 0; lx < 6 && lx < l; lx++) 
    ae48:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    ae4c:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    ae50:	01 96       	adiw	r24, 0x01	; 1
    ae52:	90 93 fa 09 	sts	0x09FA, r25	; 0x8009fa <lx+0x1>
    ae56:	80 93 f9 09 	sts	0x09F9, r24	; 0x8009f9 <lx>
    ae5a:	00 cf       	rjmp	.-512    	; 0xac5c <printtileint+0x4c>
if (str[lx] == ' ' ) DrawMap2(lx + x,VRAM_TILES_V, nb ); 
    

};
    
}
    ae5c:	2a 96       	adiw	r28, 0x0a	; 10
    ae5e:	0f b6       	in	r0, 0x3f	; 63
    ae60:	f8 94       	cli
    ae62:	de bf       	out	0x3e, r29	; 62
    ae64:	0f be       	out	0x3f, r0	; 63
    ae66:	cd bf       	out	0x3d, r28	; 61
    ae68:	df 91       	pop	r29
    ae6a:	cf 91       	pop	r28
    ae6c:	1f 91       	pop	r17
    ae6e:	ff 90       	pop	r15
    ae70:	ef 90       	pop	r14
    ae72:	08 95       	ret

0000ae74 <initlevel>:

void initlevel()
{
    ae74:	ee eb       	ldi	r30, 0xBE	; 190
    ae76:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
    ae78:	80 e0       	ldi	r24, 0x00	; 0
    ae7a:	90 e0       	ldi	r25, 0x00	; 0
    ae7c:	11 92       	st	Z+, r1
    ae7e:	11 92       	st	Z+, r1
    ae80:	01 96       	adiw	r24, 0x01	; 1
    ae82:	89 31       	cpi	r24, 0x19	; 25
    ae84:	91 05       	cpc	r25, r1
    ae86:	d1 f7       	brne	.-12     	; 0xae7c <initlevel+0x8>
    ae88:	e5 e2       	ldi	r30, 0x25	; 37
    ae8a:	f9 e0       	ldi	r31, 0x09	; 9
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    ae8c:	80 e0       	ldi	r24, 0x00	; 0
    ae8e:	90 e0       	ldi	r25, 0x00	; 0
    ae90:	11 82       	std	Z+1, r1	; 0x01
    ae92:	10 82       	st	Z, r1
    ae94:	12 82       	std	Z+2, r1	; 0x02
    ae96:	13 82       	std	Z+3, r1	; 0x03
    ae98:	01 96       	adiw	r24, 0x01	; 1
    ae9a:	34 96       	adiw	r30, 0x04	; 4
    ae9c:	8c 30       	cpi	r24, 0x0C	; 12
    ae9e:	91 05       	cpc	r25, r1
    aea0:	b9 f7       	brne	.-18     	; 0xae90 <initlevel+0x1c>
    for (lx = 0; lx < 32; lx++)
    aea2:	10 92 fa 09 	sts	0x09FA, r1	; 0x8009fa <lx+0x1>
    aea6:	10 92 f9 09 	sts	0x09F9, r1	; 0x8009f9 <lx>
    aeaa:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    aeae:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    aeb2:	80 97       	sbiw	r24, 0x20	; 32
    aeb4:	2c f5       	brge	.+74     	; 0xaf00 <initlevel+0x8c>
     		{
                for (  ly = 0; ly < 28; ly++ )
    aeb6:	10 92 74 09 	sts	0x0974, r1	; 0x800974 <ly+0x1>
    aeba:	10 92 73 09 	sts	0x0973, r1	; 0x800973 <ly>
    aebe:	60 91 73 09 	lds	r22, 0x0973	; 0x800973 <ly>
    aec2:	70 91 74 09 	lds	r23, 0x0974	; 0x800974 <ly+0x1>
    aec6:	6c 31       	cpi	r22, 0x1C	; 28
    aec8:	71 05       	cpc	r23, r1
    aeca:	84 f4       	brge	.+32     	; 0xaeec <initlevel+0x78>
                {
          	         DrawMap2(lx ,ly ,blue);
    aecc:	4e e4       	ldi	r20, 0x4E	; 78
    aece:	53 e8       	ldi	r21, 0x83	; 131
    aed0:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    aed4:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
     		{
                for (  ly = 0; ly < 28; ly++ )
    aed8:	80 91 73 09 	lds	r24, 0x0973	; 0x800973 <ly>
    aedc:	90 91 74 09 	lds	r25, 0x0974	; 0x800974 <ly+0x1>
    aee0:	01 96       	adiw	r24, 0x01	; 1
    aee2:	90 93 74 09 	sts	0x0974, r25	; 0x800974 <ly+0x1>
    aee6:	80 93 73 09 	sts	0x0973, r24	; 0x800973 <ly>
    aeea:	e9 cf       	rjmp	.-46     	; 0xaebe <initlevel+0x4a>

void initlevel()
{
  for (lx = 0; lx < maxdiamonds; lx ++ ) diamonds[lx] = 0;      
  for (lx = 0; lx < maxbridges; lx ++ ) {bridges[lx].id = 0; bridges[lx].l = 0; bridges[lx].r = 0; }; 
    for (lx = 0; lx < 32; lx++)
    aeec:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    aef0:	90 91 fa 09 	lds	r25, 0x09FA	; 0x8009fa <lx+0x1>
    aef4:	01 96       	adiw	r24, 0x01	; 1
    aef6:	90 93 fa 09 	sts	0x09FA, r25	; 0x8009fa <lx+0x1>
    aefa:	80 93 f9 09 	sts	0x09F9, r24	; 0x8009f9 <lx>
    aefe:	d5 cf       	rjmp	.-86     	; 0xaeaa <initlevel+0x36>
                for (  ly = 0; ly < 28; ly++ )
                {
          	         DrawMap2(lx ,ly ,blue);
                }
     		}
}
    af00:	08 95       	ret

0000af02 <makeBanana>:
if(destX>=32)destX=0; 
}


void makeBanana(int x, int y,int z)
{
    af02:	0f 93       	push	r16
    af04:	1f 93       	push	r17
    af06:	cf 93       	push	r28
    af08:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    af0a:	20 91 f7 09 	lds	r18, 0x09F7	; 0x8009f7 <Levelx>
    af0e:	82 0f       	add	r24, r18
    af10:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    af12:	8b 01       	movw	r16, r22
    af14:	54 e0       	ldi	r21, 0x04	; 4
    af16:	15 95       	asr	r17
    af18:	07 95       	ror	r16
    af1a:	5a 95       	dec	r21
    af1c:	e1 f7       	brne	.-8      	; 0xaf16 <makeBanana+0x14>
lx = lx * 2 + destX;
    af1e:	ec 01       	movw	r28, r24
    af20:	64 e0       	ldi	r22, 0x04	; 4
    af22:	d5 95       	asr	r29
    af24:	c7 95       	ror	r28
    af26:	6a 95       	dec	r22
    af28:	e1 f7       	brne	.-8      	; 0xaf22 <makeBanana+0x20>
    af2a:	cc 0f       	add	r28, r28
    af2c:	dd 1f       	adc	r29, r29
    af2e:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    af32:	c8 0f       	add	r28, r24
    af34:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    af36:	c0 32       	cpi	r28, 0x20	; 32
    af38:	d1 05       	cpc	r29, r1
    af3a:	0c f0       	brlt	.+2      	; 0xaf3e <makeBanana+0x3c>
    af3c:	a0 97       	sbiw	r28, 0x20	; 32
DrawMap2(  (lx - 2)    ,  ly *  2    ,banana );
    af3e:	60 2f       	mov	r22, r16
    af40:	66 0f       	add	r22, r22
    af42:	41 e5       	ldi	r20, 0x51	; 81
    af44:	53 e8       	ldi	r21, 0x83	; 131
    af46:	8c 2f       	mov	r24, r28
    af48:	82 50       	subi	r24, 0x02	; 2
    af4a:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
bananax = (lx - 2);
    af4e:	22 97       	sbiw	r28, 0x02	; 2
    af50:	d0 93 bb 09 	sts	0x09BB, r29	; 0x8009bb <bananax+0x1>
    af54:	c0 93 ba 09 	sts	0x09BA, r28	; 0x8009ba <bananax>
bananay = ly * 2;
    af58:	00 0f       	add	r16, r16
    af5a:	11 1f       	adc	r17, r17
    af5c:	10 93 77 09 	sts	0x0977, r17	; 0x800977 <bananay+0x1>
    af60:	00 93 76 09 	sts	0x0976, r16	; 0x800976 <bananay>
bananaxs[banspwncnt] = bananax;
    af64:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <banspwncnt>
    af68:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <banspwncnt+0x1>
    af6c:	9c 01       	movw	r18, r24
    af6e:	22 0f       	add	r18, r18
    af70:	33 1f       	adc	r19, r19
    af72:	f9 01       	movw	r30, r18
    af74:	e6 58       	subi	r30, 0x86	; 134
    af76:	f6 4f       	sbci	r31, 0xF6	; 246
    af78:	d1 83       	std	Z+1, r29	; 0x01
    af7a:	c0 83       	st	Z, r28
bananays[banspwncnt] = bananay;
    af7c:	f9 01       	movw	r30, r18
    af7e:	e6 57       	subi	r30, 0x76	; 118
    af80:	f6 4f       	sbci	r31, 0xF6	; 246
    af82:	11 83       	std	Z+1, r17	; 0x01
    af84:	00 83       	st	Z, r16
banspwncnt = banspwncnt + 1;
    af86:	01 96       	adiw	r24, 0x01	; 1
    af88:	90 93 9b 08 	sts	0x089B, r25	; 0x80089b <banspwncnt+0x1>
    af8c:	80 93 9a 08 	sts	0x089A, r24	; 0x80089a <banspwncnt>
}
    af90:	df 91       	pop	r29
    af92:	cf 91       	pop	r28
    af94:	1f 91       	pop	r17
    af96:	0f 91       	pop	r16
    af98:	08 95       	ret

0000af9a <checkBanana>:
void checkBanana(int x,int y,int z)
{
    af9a:	8f 92       	push	r8
    af9c:	9f 92       	push	r9
    af9e:	af 92       	push	r10
    afa0:	bf 92       	push	r11
    afa2:	cf 92       	push	r12
    afa4:	df 92       	push	r13
    afa6:	ef 92       	push	r14
    afa8:	ff 92       	push	r15
    afaa:	1f 93       	push	r17
    afac:	cf 93       	push	r28
    afae:	df 93       	push	r29
int lx;
int ly;
lx = x + Levelx;
    afb0:	20 91 f7 09 	lds	r18, 0x09F7	; 0x8009f7 <Levelx>
    afb4:	82 0f       	add	r24, r18
    afb6:	91 1d       	adc	r25, r1
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
    afb8:	34 e0       	ldi	r19, 0x04	; 4
    afba:	75 95       	asr	r23
    afbc:	67 95       	ror	r22
    afbe:	3a 95       	dec	r19
    afc0:	e1 f7       	brne	.-8      	; 0xafba <checkBanana+0x20>
lx = lx * 2 + destX;
    afc2:	ec 01       	movw	r28, r24
    afc4:	44 e0       	ldi	r20, 0x04	; 4
    afc6:	d5 95       	asr	r29
    afc8:	c7 95       	ror	r28
    afca:	4a 95       	dec	r20
    afcc:	e1 f7       	brne	.-8      	; 0xafc6 <checkBanana+0x2c>
    afce:	cc 0f       	add	r28, r28
    afd0:	dd 1f       	adc	r29, r29
    afd2:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    afd6:	c8 0f       	add	r28, r24
    afd8:	d1 1d       	adc	r29, r1
if (lx >= 32 ) lx = lx - 32;
    afda:	c0 32       	cpi	r28, 0x20	; 32
    afdc:	d1 05       	cpc	r29, r1
    afde:	0c f0       	brlt	.+2      	; 0xafe2 <checkBanana+0x48>
    afe0:	a0 97       	sbiw	r28, 0x20	; 32
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
for(int i = 0; i < banspwncnt; i++)
{
	if(bananaxs[i] == lx && bananays[i] == (ly *  2) -2)
    afe2:	61 50       	subi	r22, 0x01	; 1
    afe4:	71 09       	sbc	r23, r1
    afe6:	5b 01       	movw	r10, r22
    afe8:	aa 0c       	add	r10, r10
    afea:	bb 1c       	adc	r11, r11
	{   
	DrawMap2(  lx    ,  (ly *  2) -2,block0 );
    afec:	16 2f       	mov	r17, r22
    afee:	11 0f       	add	r17, r17
    aff0:	9a e8       	ldi	r25, 0x8A	; 138
    aff2:	c9 2e       	mov	r12, r25
    aff4:	99 e0       	ldi	r25, 0x09	; 9
    aff6:	d9 2e       	mov	r13, r25
    aff8:	2a e7       	ldi	r18, 0x7A	; 122
    affa:	82 2e       	mov	r8, r18
    affc:	29 e0       	ldi	r18, 0x09	; 9
    affe:	92 2e       	mov	r9, r18
lx = lx >> 4;
ly = ly >> 4;  
lx = lx * 2 + destX;
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
for(int i = 0; i < banspwncnt; i++)
    b000:	e1 2c       	mov	r14, r1
    b002:	f1 2c       	mov	r15, r1
    b004:	80 91 9a 08 	lds	r24, 0x089A	; 0x80089a <banspwncnt>
    b008:	90 91 9b 08 	lds	r25, 0x089B	; 0x80089b <banspwncnt+0x1>
    b00c:	e8 16       	cp	r14, r24
    b00e:	f9 06       	cpc	r15, r25
    b010:	d4 f4       	brge	.+52     	; 0xb046 <checkBanana+0xac>
{
	if(bananaxs[i] == lx && bananays[i] == (ly *  2) -2)
    b012:	f4 01       	movw	r30, r8
    b014:	81 91       	ld	r24, Z+
    b016:	91 91       	ld	r25, Z+
    b018:	4f 01       	movw	r8, r30
    b01a:	c8 17       	cp	r28, r24
    b01c:	d9 07       	cpc	r29, r25
    b01e:	61 f4       	brne	.+24     	; 0xb038 <checkBanana+0x9e>
    b020:	f6 01       	movw	r30, r12
    b022:	80 81       	ld	r24, Z
    b024:	91 81       	ldd	r25, Z+1	; 0x01
    b026:	8a 15       	cp	r24, r10
    b028:	9b 05       	cpc	r25, r11
    b02a:	31 f4       	brne	.+12     	; 0xb038 <checkBanana+0x9e>
	{   
	DrawMap2(  lx    ,  (ly *  2) -2,block0 );
    b02c:	43 eb       	ldi	r20, 0xB3	; 179
    b02e:	53 e8       	ldi	r21, 0x83	; 131
    b030:	61 2f       	mov	r22, r17
    b032:	8c 2f       	mov	r24, r28
    b034:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
lx = lx >> 4;
ly = ly >> 4;  
lx = lx * 2 + destX;
if (lx >= 32 ) lx = lx - 32;
//DrawMap2(  lx    ,  (ly *  2) -2,block0 );
for(int i = 0; i < banspwncnt; i++)
    b038:	ff ef       	ldi	r31, 0xFF	; 255
    b03a:	ef 1a       	sub	r14, r31
    b03c:	ff 0a       	sbc	r15, r31
    b03e:	82 e0       	ldi	r24, 0x02	; 2
    b040:	c8 0e       	add	r12, r24
    b042:	d1 1c       	adc	r13, r1
    b044:	df cf       	rjmp	.-66     	; 0xb004 <checkBanana+0x6a>
	if(bananaxs[i] == lx && bananays[i] == (ly *  2) -2)
	{   
	DrawMap2(  lx    ,  (ly *  2) -2,block0 );
	}
}
}
    b046:	df 91       	pop	r29
    b048:	cf 91       	pop	r28
    b04a:	1f 91       	pop	r17
    b04c:	ff 90       	pop	r15
    b04e:	ef 90       	pop	r14
    b050:	df 90       	pop	r13
    b052:	cf 90       	pop	r12
    b054:	bf 90       	pop	r11
    b056:	af 90       	pop	r10
    b058:	9f 90       	pop	r9
    b05a:	8f 90       	pop	r8
    b05c:	08 95       	ret

0000b05e <printheadline>:
if (bl > 0 && bl <= 20 ) return 1; else return 0;
}

void printheadline()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b05e:	4c ea       	ldi	r20, 0xAC	; 172
    b060:	52 e8       	ldi	r21, 0x82	; 130
    b062:	60 e2       	ldi	r22, 0x20	; 32
    b064:	80 e0       	ldi	r24, 0x00	; 0
    b066:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
printtileint( 4 ,0,score,4);
    b06a:	40 91 78 09 	lds	r20, 0x0978	; 0x800978 <score>
    b06e:	50 91 79 09 	lds	r21, 0x0979	; 0x800979 <score+0x1>
    b072:	24 e0       	ldi	r18, 0x04	; 4
    b074:	30 e0       	ldi	r19, 0x00	; 0
    b076:	60 e0       	ldi	r22, 0x00	; 0
    b078:	70 e0       	ldi	r23, 0x00	; 0
    b07a:	84 e0       	ldi	r24, 0x04	; 4
    b07c:	90 e0       	ldi	r25, 0x00	; 0
    b07e:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b082:	4f e8       	ldi	r20, 0x8F	; 143
    b084:	52 e8       	ldi	r21, 0x82	; 130
    b086:	60 e2       	ldi	r22, 0x20	; 32
    b088:	8b e0       	ldi	r24, 0x0B	; 11
    b08a:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
printtileint( 14 ,0,lives,1);  
    b08e:	40 91 ad 09 	lds	r20, 0x09AD	; 0x8009ad <lives>
    b092:	50 e0       	ldi	r21, 0x00	; 0
    b094:	21 e0       	ldi	r18, 0x01	; 1
    b096:	30 e0       	ldi	r19, 0x00	; 0
    b098:	60 e0       	ldi	r22, 0x00	; 0
    b09a:	70 e0       	ldi	r23, 0x00	; 0
    b09c:	8e e0       	ldi	r24, 0x0E	; 14
    b09e:	90 e0       	ldi	r25, 0x00	; 0
    b0a0:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
DrawMap2(16,VRAM_TILES_V, level0 ); 
    b0a4:	40 ea       	ldi	r20, 0xA0	; 160
    b0a6:	52 e8       	ldi	r21, 0x82	; 130
    b0a8:	60 e2       	ldi	r22, 0x20	; 32
    b0aa:	80 e1       	ldi	r24, 0x10	; 16
    b0ac:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
printtileint( 20 ,0, level,1);  
    b0b0:	40 91 88 09 	lds	r20, 0x0988	; 0x800988 <level>
    b0b4:	50 e0       	ldi	r21, 0x00	; 0
    b0b6:	21 e0       	ldi	r18, 0x01	; 1
    b0b8:	30 e0       	ldi	r19, 0x00	; 0
    b0ba:	60 e0       	ldi	r22, 0x00	; 0
    b0bc:	70 e0       	ldi	r23, 0x00	; 0
    b0be:	84 e1       	ldi	r24, 0x14	; 20
    b0c0:	90 e0       	ldi	r25, 0x00	; 0
    b0c2:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
DrawMap2(23,VRAM_TILES_V, time0 );
    b0c6:	4a e8       	ldi	r20, 0x8A	; 138
    b0c8:	52 e8       	ldi	r21, 0x82	; 130
    b0ca:	60 e2       	ldi	r22, 0x20	; 32
    b0cc:	87 e1       	ldi	r24, 0x17	; 23
    b0ce:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
printtileint( 26 ,0,leveltime,2); 
    b0d2:	40 91 f4 09 	lds	r20, 0x09F4	; 0x8009f4 <leveltime>
    b0d6:	50 e0       	ldi	r21, 0x00	; 0
    b0d8:	22 e0       	ldi	r18, 0x02	; 2
    b0da:	30 e0       	ldi	r19, 0x00	; 0
    b0dc:	60 e0       	ldi	r22, 0x00	; 0
    b0de:	70 e0       	ldi	r23, 0x00	; 0
    b0e0:	8a e1       	ldi	r24, 0x1A	; 26
    b0e2:	90 e0       	ldi	r25, 0x00	; 0
    b0e4:	0c 94 08 56 	jmp	0xac10	; 0xac10 <printtileint>

0000b0e8 <printheadlineintro>:
}
void printheadlineintro()
{
DrawMap2(0,VRAM_TILES_V, score0 );  
    b0e8:	4c ea       	ldi	r20, 0xAC	; 172
    b0ea:	52 e8       	ldi	r21, 0x82	; 130
    b0ec:	60 e2       	ldi	r22, 0x20	; 32
    b0ee:	80 e0       	ldi	r24, 0x00	; 0
    b0f0:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
printtileint( 4 ,0,score,4);
    b0f4:	40 91 78 09 	lds	r20, 0x0978	; 0x800978 <score>
    b0f8:	50 91 79 09 	lds	r21, 0x0979	; 0x800979 <score+0x1>
    b0fc:	24 e0       	ldi	r18, 0x04	; 4
    b0fe:	30 e0       	ldi	r19, 0x00	; 0
    b100:	60 e0       	ldi	r22, 0x00	; 0
    b102:	70 e0       	ldi	r23, 0x00	; 0
    b104:	84 e0       	ldi	r24, 0x04	; 4
    b106:	90 e0       	ldi	r25, 0x00	; 0
    b108:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
//DrawMap2(8,VRAM_TILES_V, bonus0 );      
//printtileint( 12 ,0,bonus,1);   
DrawMap2(11,VRAM_TILES_V, live0 ); 
    b10c:	4f e8       	ldi	r20, 0x8F	; 143
    b10e:	52 e8       	ldi	r21, 0x82	; 130
    b110:	60 e2       	ldi	r22, 0x20	; 32
    b112:	8b e0       	ldi	r24, 0x0B	; 11
    b114:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>

DrawMap2(16,VRAM_TILES_V, level0 ); 
    b118:	40 ea       	ldi	r20, 0xA0	; 160
    b11a:	52 e8       	ldi	r21, 0x82	; 130
    b11c:	60 e2       	ldi	r22, 0x20	; 32
    b11e:	80 e1       	ldi	r24, 0x10	; 16
    b120:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
  
DrawMap2(23,VRAM_TILES_V, time0 );
    b124:	4a e8       	ldi	r20, 0x8A	; 138
    b126:	52 e8       	ldi	r21, 0x82	; 130
    b128:	60 e2       	ldi	r22, 0x20	; 32
    b12a:	87 e1       	ldi	r24, 0x17	; 23
    b12c:	0c 94 c2 53 	jmp	0xa784	; 0xa784 <DrawMap>

0000b130 <updatepoints>:

}
void updatepoints()
{
if (introplaying) return;
    b130:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    b134:	81 11       	cpse	r24, r1
    b136:	0c c0       	rjmp	.+24     	; 0xb150 <updatepoints+0x20>
printtileint( 4 ,0,score,4);
    b138:	40 91 78 09 	lds	r20, 0x0978	; 0x800978 <score>
    b13c:	50 91 79 09 	lds	r21, 0x0979	; 0x800979 <score+0x1>
    b140:	24 e0       	ldi	r18, 0x04	; 4
    b142:	30 e0       	ldi	r19, 0x00	; 0
    b144:	60 e0       	ldi	r22, 0x00	; 0
    b146:	70 e0       	ldi	r23, 0x00	; 0
    b148:	84 e0       	ldi	r24, 0x04	; 4
    b14a:	90 e0       	ldi	r25, 0x00	; 0
    b14c:	0c 94 08 56 	jmp	0xac10	; 0xac10 <printtileint>
    b150:	08 95       	ret

0000b152 <checkcollide>:
	DrawMap2(  lx    ,  (ly *  2) -2,block0 );
	}
}
}
int checkcollide(int x, int y,int z)
{
    b152:	af 92       	push	r10
    b154:	bf 92       	push	r11
    b156:	cf 92       	push	r12
    b158:	df 92       	push	r13
    b15a:	ef 92       	push	r14
    b15c:	ff 92       	push	r15
    b15e:	0f 93       	push	r16
    b160:	1f 93       	push	r17
    b162:	cf 93       	push	r28
    b164:	df 93       	push	r29
    b166:	6c 01       	movw	r12, r24
    b168:	5b 01       	movw	r10, r22
int lx;
int ly;
char bl;
lx = x + Levelx;
    b16a:	90 91 f7 09 	lds	r25, 0x09F7	; 0x8009f7 <Levelx>
    b16e:	86 01       	movw	r16, r12
    b170:	09 0f       	add	r16, r25
    b172:	11 1d       	adc	r17, r1
ly = y;
lx = lx >> 4;
    b174:	84 e0       	ldi	r24, 0x04	; 4
    b176:	15 95       	asr	r17
    b178:	07 95       	ror	r16
    b17a:	8a 95       	dec	r24
    b17c:	e1 f7       	brne	.-8      	; 0xb176 <checkcollide+0x24>
ly = ly >> 4;  
    b17e:	7b 01       	movw	r14, r22
    b180:	24 e0       	ldi	r18, 0x04	; 4
    b182:	f5 94       	asr	r15
    b184:	e7 94       	ror	r14
    b186:	2a 95       	dec	r18
    b188:	e1 f7       	brne	.-8      	; 0xb182 <checkcollide+0x30>
if (level == 0 ) bl=pgm_read_byte(&(intro0[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b18a:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <level>
    b18e:	81 11       	cpse	r24, r1
    b190:	0f c0       	rjmp	.+30     	; 0xb1b0 <checkcollide+0x5e>
    b192:	8a e5       	ldi	r24, 0x5A	; 90
    b194:	8e 9d       	mul	r24, r14
    b196:	f0 01       	movw	r30, r0
    b198:	8f 9d       	mul	r24, r15
    b19a:	f0 0d       	add	r31, r0
    b19c:	11 24       	eor	r1, r1
    b19e:	e0 0f       	add	r30, r16
    b1a0:	f1 1f       	adc	r31, r17
    b1a2:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b1a6:	e8 0f       	add	r30, r24
    b1a8:	f1 1d       	adc	r31, r1
    b1aa:	e1 58       	subi	r30, 0x81	; 129
    b1ac:	fa 4c       	sbci	r31, 0xCA	; 202
    b1ae:	98 c0       	rjmp	.+304    	; 0xb2e0 <checkcollide+0x18e>
if (level == 1 ) bl=pgm_read_byte(&(level1[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b1b0:	81 30       	cpi	r24, 0x01	; 1
    b1b2:	79 f4       	brne	.+30     	; 0xb1d2 <checkcollide+0x80>
    b1b4:	8a e5       	ldi	r24, 0x5A	; 90
    b1b6:	8e 9d       	mul	r24, r14
    b1b8:	f0 01       	movw	r30, r0
    b1ba:	8f 9d       	mul	r24, r15
    b1bc:	f0 0d       	add	r31, r0
    b1be:	11 24       	eor	r1, r1
    b1c0:	e0 0f       	add	r30, r16
    b1c2:	f1 1f       	adc	r31, r17
    b1c4:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b1c8:	e8 0f       	add	r30, r24
    b1ca:	f1 1d       	adc	r31, r1
    b1cc:	ed 56       	subi	r30, 0x6D	; 109
    b1ce:	ff 4c       	sbci	r31, 0xCF	; 207
    b1d0:	87 c0       	rjmp	.+270    	; 0xb2e0 <checkcollide+0x18e>
if (level == 2 ) bl=pgm_read_byte(&(level2[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b1d2:	82 30       	cpi	r24, 0x02	; 2
    b1d4:	79 f4       	brne	.+30     	; 0xb1f4 <checkcollide+0xa2>
    b1d6:	8a e5       	ldi	r24, 0x5A	; 90
    b1d8:	8e 9d       	mul	r24, r14
    b1da:	f0 01       	movw	r30, r0
    b1dc:	8f 9d       	mul	r24, r15
    b1de:	f0 0d       	add	r31, r0
    b1e0:	11 24       	eor	r1, r1
    b1e2:	e0 0f       	add	r30, r16
    b1e4:	f1 1f       	adc	r31, r17
    b1e6:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b1ea:	e8 0f       	add	r30, r24
    b1ec:	f1 1d       	adc	r31, r1
    b1ee:	e9 55       	subi	r30, 0x59	; 89
    b1f0:	f4 4d       	sbci	r31, 0xD4	; 212
    b1f2:	76 c0       	rjmp	.+236    	; 0xb2e0 <checkcollide+0x18e>
if (level == 3 ) bl=pgm_read_byte(&(level3[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b1f4:	83 30       	cpi	r24, 0x03	; 3
    b1f6:	79 f4       	brne	.+30     	; 0xb216 <checkcollide+0xc4>
    b1f8:	8a e5       	ldi	r24, 0x5A	; 90
    b1fa:	8e 9d       	mul	r24, r14
    b1fc:	f0 01       	movw	r30, r0
    b1fe:	8f 9d       	mul	r24, r15
    b200:	f0 0d       	add	r31, r0
    b202:	11 24       	eor	r1, r1
    b204:	e0 0f       	add	r30, r16
    b206:	f1 1f       	adc	r31, r17
    b208:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b20c:	e8 0f       	add	r30, r24
    b20e:	f1 1d       	adc	r31, r1
    b210:	e5 54       	subi	r30, 0x45	; 69
    b212:	f9 4d       	sbci	r31, 0xD9	; 217
    b214:	65 c0       	rjmp	.+202    	; 0xb2e0 <checkcollide+0x18e>
if (level == 4 ) bl=pgm_read_byte(&(level4[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b216:	84 30       	cpi	r24, 0x04	; 4
    b218:	79 f4       	brne	.+30     	; 0xb238 <checkcollide+0xe6>
    b21a:	8a e5       	ldi	r24, 0x5A	; 90
    b21c:	8e 9d       	mul	r24, r14
    b21e:	f0 01       	movw	r30, r0
    b220:	8f 9d       	mul	r24, r15
    b222:	f0 0d       	add	r31, r0
    b224:	11 24       	eor	r1, r1
    b226:	e0 0f       	add	r30, r16
    b228:	f1 1f       	adc	r31, r17
    b22a:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b22e:	e8 0f       	add	r30, r24
    b230:	f1 1d       	adc	r31, r1
    b232:	e1 53       	subi	r30, 0x31	; 49
    b234:	fe 4d       	sbci	r31, 0xDE	; 222
    b236:	54 c0       	rjmp	.+168    	; 0xb2e0 <checkcollide+0x18e>
if (level == 5 ) bl=pgm_read_byte(&(level5[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b238:	85 30       	cpi	r24, 0x05	; 5
    b23a:	79 f4       	brne	.+30     	; 0xb25a <checkcollide+0x108>
    b23c:	8a e5       	ldi	r24, 0x5A	; 90
    b23e:	8e 9d       	mul	r24, r14
    b240:	f0 01       	movw	r30, r0
    b242:	8f 9d       	mul	r24, r15
    b244:	f0 0d       	add	r31, r0
    b246:	11 24       	eor	r1, r1
    b248:	e0 0f       	add	r30, r16
    b24a:	f1 1f       	adc	r31, r17
    b24c:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b250:	e8 0f       	add	r30, r24
    b252:	f1 1d       	adc	r31, r1
    b254:	ed 51       	subi	r30, 0x1D	; 29
    b256:	f3 4e       	sbci	r31, 0xE3	; 227
    b258:	43 c0       	rjmp	.+134    	; 0xb2e0 <checkcollide+0x18e>
if (level == 6 ) bl=pgm_read_byte(&(level6[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b25a:	86 30       	cpi	r24, 0x06	; 6
    b25c:	79 f4       	brne	.+30     	; 0xb27c <checkcollide+0x12a>
    b25e:	8a e5       	ldi	r24, 0x5A	; 90
    b260:	8e 9d       	mul	r24, r14
    b262:	f0 01       	movw	r30, r0
    b264:	8f 9d       	mul	r24, r15
    b266:	f0 0d       	add	r31, r0
    b268:	11 24       	eor	r1, r1
    b26a:	e0 0f       	add	r30, r16
    b26c:	f1 1f       	adc	r31, r17
    b26e:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b272:	e8 0f       	add	r30, r24
    b274:	f1 1d       	adc	r31, r1
    b276:	e9 50       	subi	r30, 0x09	; 9
    b278:	f8 4e       	sbci	r31, 0xE8	; 232
    b27a:	32 c0       	rjmp	.+100    	; 0xb2e0 <checkcollide+0x18e>
if (level == 7 ) bl=pgm_read_byte(&(level7[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b27c:	87 30       	cpi	r24, 0x07	; 7
    b27e:	79 f4       	brne	.+30     	; 0xb29e <checkcollide+0x14c>
    b280:	8a e5       	ldi	r24, 0x5A	; 90
    b282:	8e 9d       	mul	r24, r14
    b284:	f0 01       	movw	r30, r0
    b286:	8f 9d       	mul	r24, r15
    b288:	f0 0d       	add	r31, r0
    b28a:	11 24       	eor	r1, r1
    b28c:	e0 0f       	add	r30, r16
    b28e:	f1 1f       	adc	r31, r17
    b290:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b294:	e8 0f       	add	r30, r24
    b296:	f1 1d       	adc	r31, r1
    b298:	e5 5f       	subi	r30, 0xF5	; 245
    b29a:	fc 4e       	sbci	r31, 0xEC	; 236
    b29c:	21 c0       	rjmp	.+66     	; 0xb2e0 <checkcollide+0x18e>
if (level == 8 ) bl=pgm_read_byte(&(level8[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b29e:	88 30       	cpi	r24, 0x08	; 8
    b2a0:	79 f4       	brne	.+30     	; 0xb2c0 <checkcollide+0x16e>
    b2a2:	8a e5       	ldi	r24, 0x5A	; 90
    b2a4:	8e 9d       	mul	r24, r14
    b2a6:	f0 01       	movw	r30, r0
    b2a8:	8f 9d       	mul	r24, r15
    b2aa:	f0 0d       	add	r31, r0
    b2ac:	11 24       	eor	r1, r1
    b2ae:	e0 0f       	add	r30, r16
    b2b0:	f1 1f       	adc	r31, r17
    b2b2:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b2b6:	e8 0f       	add	r30, r24
    b2b8:	f1 1d       	adc	r31, r1
    b2ba:	e1 5e       	subi	r30, 0xE1	; 225
    b2bc:	f1 4f       	sbci	r31, 0xF1	; 241
    b2be:	10 c0       	rjmp	.+32     	; 0xb2e0 <checkcollide+0x18e>
if (level == 9 ) bl=pgm_read_byte(&(level9[((ly  ) *levelwidth)+ ( lx )  + scrolltiles]));
    b2c0:	89 30       	cpi	r24, 0x09	; 9
    b2c2:	79 f4       	brne	.+30     	; 0xb2e2 <checkcollide+0x190>
    b2c4:	8a e5       	ldi	r24, 0x5A	; 90
    b2c6:	8e 9d       	mul	r24, r14
    b2c8:	f0 01       	movw	r30, r0
    b2ca:	8f 9d       	mul	r24, r15
    b2cc:	f0 0d       	add	r31, r0
    b2ce:	11 24       	eor	r1, r1
    b2d0:	e0 0f       	add	r30, r16
    b2d2:	f1 1f       	adc	r31, r17
    b2d4:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    b2d8:	e8 0f       	add	r30, r24
    b2da:	f1 1d       	adc	r31, r1
    b2dc:	ed 5c       	subi	r30, 0xCD	; 205
    b2de:	f6 4f       	sbci	r31, 0xF6	; 246
    b2e0:	c4 91       	lpm	r28, Z
    
if (bl == 26 || bl == 28 ) finished = true;
    b2e2:	ca 31       	cpi	r28, 0x1A	; 26
    b2e4:	11 f0       	breq	.+4      	; 0xb2ea <checkcollide+0x198>
    b2e6:	cc 31       	cpi	r28, 0x1C	; 28
    b2e8:	19 f4       	brne	.+6      	; 0xb2f0 <checkcollide+0x19e>
    b2ea:	81 e0       	ldi	r24, 0x01	; 1
    b2ec:	80 93 f2 09 	sts	0x09F2, r24	; 0x8009f2 <finished>
if ((bl == 29 || bl == 30 ) && z == 3 && play == true ) { 
    b2f0:	83 ee       	ldi	r24, 0xE3	; 227
    b2f2:	8c 0f       	add	r24, r28
    b2f4:	82 30       	cpi	r24, 0x02	; 2
    b2f6:	18 f5       	brcc	.+70     	; 0xb33e <checkcollide+0x1ec>
    b2f8:	43 30       	cpi	r20, 0x03	; 3
    b2fa:	51 05       	cpc	r21, r1
    b2fc:	09 f0       	breq	.+2      	; 0xb300 <checkcollide+0x1ae>
    b2fe:	ea c0       	rjmp	.+468    	; 0xb4d4 <checkcollide+0x382>
    b300:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <play>
    b304:	88 23       	and	r24, r24
    b306:	09 f4       	brne	.+2      	; 0xb30a <checkcollide+0x1b8>
    b308:	fd c0       	rjmp	.+506    	; 0xb504 <checkcollide+0x3b2>
    died = true;
    b30a:	81 e0       	ldi	r24, 0x01	; 1
    b30c:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <died>
    lives--;    
    b310:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    b314:	81 50       	subi	r24, 0x01	; 1
    b316:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
    isplaying = false; 
    b31a:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    b31e:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    bonus = 0;  
    b322:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    b326:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
    TriggerFx(9,0xff,true);
    b32a:	41 e0       	ldi	r20, 0x01	; 1
    b32c:	6f ef       	ldi	r22, 0xFF	; 255
    b32e:	89 e0       	ldi	r24, 0x09	; 9
    b330:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240);     
    b334:	80 ef       	ldi	r24, 0xF0	; 240
    b336:	90 e0       	ldi	r25, 0x00	; 0
    b338:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    b33c:	e3 c0       	rjmp	.+454    	; 0xb504 <checkcollide+0x3b2>
};
    
    
if (bl == 41 && z == 1 ) { 
    b33e:	c9 32       	cpi	r28, 0x29	; 41
    b340:	09 f0       	breq	.+2      	; 0xb344 <checkcollide+0x1f2>
    b342:	69 c0       	rjmp	.+210    	; 0xb416 <checkcollide+0x2c4>
    b344:	41 30       	cpi	r20, 0x01	; 1
    b346:	51 05       	cpc	r21, r1
    b348:	09 f0       	breq	.+2      	; 0xb34c <checkcollide+0x1fa>
    b34a:	d5 c1       	rjmp	.+938    	; 0xb6f6 <checkcollide+0x5a4>

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b34c:	2a e5       	ldi	r18, 0x5A	; 90
    b34e:	2e 9d       	mul	r18, r14
    b350:	c0 01       	movw	r24, r0
    b352:	2f 9d       	mul	r18, r15
    b354:	90 0d       	add	r25, r0
    b356:	11 24       	eor	r1, r1
    b358:	80 0f       	add	r24, r16
    b35a:	91 1f       	adc	r25, r17
    b35c:	20 91 fe 09 	lds	r18, 0x09FE	; 0x8009fe <scrolltiles>
    b360:	82 0f       	add	r24, r18
    b362:	91 1d       	adc	r25, r1
    b364:	90 93 bd 09 	sts	0x09BD, r25	; 0x8009bd <dp+0x1>
    b368:	80 93 bc 09 	sts	0x09BC, r24	; 0x8009bc <dp>
    b36c:	ee eb       	ldi	r30, 0xBE	; 190
    b36e:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b370:	c1 2c       	mov	r12, r1
    b372:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b374:	21 91       	ld	r18, Z+
    b376:	31 91       	ld	r19, Z+
    b378:	82 17       	cp	r24, r18
    b37a:	93 07       	cpc	r25, r19
    b37c:	09 f4       	brne	.+2      	; 0xb380 <checkcollide+0x22e>
    b37e:	bb c1       	rjmp	.+886    	; 0xb6f6 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    b380:	23 2b       	or	r18, r19
    b382:	09 f0       	breq	.+2      	; 0xb386 <checkcollide+0x234>
    b384:	3f c0       	rjmp	.+126    	; 0xb404 <checkcollide+0x2b2>
    score = score + 5 ;
    b386:	80 91 78 09 	lds	r24, 0x0978	; 0x800978 <score>
    b38a:	90 91 79 09 	lds	r25, 0x0979	; 0x800979 <score+0x1>
    b38e:	05 96       	adiw	r24, 0x05	; 5
    b390:	90 93 79 09 	sts	0x0979, r25	; 0x800979 <score+0x1>
    b394:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <score>
    bonus++;
    b398:	80 91 f0 09 	lds	r24, 0x09F0	; 0x8009f0 <bonus>
    b39c:	90 91 f1 09 	lds	r25, 0x09F1	; 0x8009f1 <bonus+0x1>
    b3a0:	01 96       	adiw	r24, 0x01	; 1
    b3a2:	90 93 f1 09 	sts	0x09F1, r25	; 0x8009f1 <bonus+0x1>
    b3a6:	80 93 f0 09 	sts	0x09F0, r24	; 0x8009f0 <bonus>
    updatepoints();
    b3aa:	0e 94 98 58 	call	0xb130	; 0xb130 <updatepoints>
    TriggerFx(7,0xff,true);
    b3ae:	41 e0       	ldi	r20, 0x01	; 1
    b3b0:	6f ef       	ldi	r22, 0xFF	; 255
    b3b2:	87 e0       	ldi	r24, 0x07	; 7
    b3b4:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
        
    lx = lx * 2 + destX;
    b3b8:	00 0f       	add	r16, r16
    b3ba:	11 1f       	adc	r17, r17
    b3bc:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    b3c0:	08 0f       	add	r16, r24
    b3c2:	11 1d       	adc	r17, r1
    if (lx >= 32 ) lx = lx - 32;
    b3c4:	00 32       	cpi	r16, 0x20	; 32
    b3c6:	11 05       	cpc	r17, r1
    b3c8:	14 f0       	brlt	.+4      	; 0xb3ce <checkcollide+0x27c>
    b3ca:	00 52       	subi	r16, 0x20	; 32
    b3cc:	11 09       	sbc	r17, r1
    DrawMap2(  lx    ,  ly *  2    ,nb );
    b3ce:	ee 0c       	add	r14, r14
    b3d0:	43 ed       	ldi	r20, 0xD3	; 211
    b3d2:	52 e8       	ldi	r21, 0x82	; 130
    b3d4:	6e 2d       	mov	r22, r14
    b3d6:	80 2f       	mov	r24, r16
    b3d8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2    ,nb );
    b3dc:	d1 e0       	ldi	r29, 0x01	; 1
    b3de:	d0 0f       	add	r29, r16
    b3e0:	43 ed       	ldi	r20, 0xD3	; 211
    b3e2:	52 e8       	ldi	r21, 0x82	; 130
    b3e4:	6e 2d       	mov	r22, r14
    b3e6:	8d 2f       	mov	r24, r29
    b3e8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx    ,  ly *  2 + 1,nb );
    b3ec:	e3 94       	inc	r14
    b3ee:	43 ed       	ldi	r20, 0xD3	; 211
    b3f0:	52 e8       	ldi	r21, 0x82	; 130
    b3f2:	6e 2d       	mov	r22, r14
    b3f4:	80 2f       	mov	r24, r16
    b3f6:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 1,  ly *  2 + 1,nb );        
    b3fa:	43 ed       	ldi	r20, 0xD3	; 211
    b3fc:	52 e8       	ldi	r21, 0x82	; 130
    b3fe:	6e 2d       	mov	r22, r14
    b400:	8d 2f       	mov	r24, r29
    b402:	5a c0       	rjmp	.+180    	; 0xb4b8 <checkcollide+0x366>
    
    
if (bl == 41 && z == 1 ) { 

dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi < maxdiamonds; xi ++ )
    b404:	2f ef       	ldi	r18, 0xFF	; 255
    b406:	c2 1a       	sub	r12, r18
    b408:	d2 0a       	sbc	r13, r18
    b40a:	29 e1       	ldi	r18, 0x19	; 25
    b40c:	c2 16       	cp	r12, r18
    b40e:	d1 04       	cpc	r13, r1
    b410:	09 f0       	breq	.+2      	; 0xb414 <checkcollide+0x2c2>
    b412:	b0 cf       	rjmp	.-160    	; 0xb374 <checkcollide+0x222>
    b414:	70 c1       	rjmp	.+736    	; 0xb6f6 <checkcollide+0x5a4>
    diamonds[xi] = dp;
    break;
    };
    };
};    
if (bl == 3 && z == 2 ) { 
    b416:	c3 30       	cpi	r28, 0x03	; 3
    b418:	09 f0       	breq	.+2      	; 0xb41c <checkcollide+0x2ca>
    b41a:	5c c0       	rjmp	.+184    	; 0xb4d4 <checkcollide+0x382>
    b41c:	42 30       	cpi	r20, 0x02	; 2
    b41e:	51 05       	cpc	r21, r1
    b420:	09 f0       	breq	.+2      	; 0xb424 <checkcollide+0x2d2>
    b422:	69 c1       	rjmp	.+722    	; 0xb6f6 <checkcollide+0x5a4>
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    b424:	2a e5       	ldi	r18, 0x5A	; 90
    b426:	2e 9d       	mul	r18, r14
    b428:	c0 01       	movw	r24, r0
    b42a:	2f 9d       	mul	r18, r15
    b42c:	90 0d       	add	r25, r0
    b42e:	11 24       	eor	r1, r1
    b430:	80 0f       	add	r24, r16
    b432:	91 1f       	adc	r25, r17
    b434:	20 91 fe 09 	lds	r18, 0x09FE	; 0x8009fe <scrolltiles>
    b438:	82 0f       	add	r24, r18
    b43a:	91 1d       	adc	r25, r1
    b43c:	90 93 bd 09 	sts	0x09BD, r25	; 0x8009bd <dp+0x1>
    b440:	80 93 bc 09 	sts	0x09BC, r24	; 0x8009bc <dp>
    b444:	ee eb       	ldi	r30, 0xBE	; 190
    b446:	f9 e0       	ldi	r31, 0x09	; 9
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b448:	c1 2c       	mov	r12, r1
    b44a:	d1 2c       	mov	r13, r1
    {
    if (diamonds[xi] == dp) {break;return 0;}   
    b44c:	21 91       	ld	r18, Z+
    b44e:	31 91       	ld	r19, Z+
    b450:	82 17       	cp	r24, r18
    b452:	93 07       	cpc	r25, r19
    b454:	09 f4       	brne	.+2      	; 0xb458 <checkcollide+0x306>
    b456:	4f c1       	rjmp	.+670    	; 0xb6f6 <checkcollide+0x5a4>
    if (diamonds[xi] == 0 ) {
    b458:	23 2b       	or	r18, r19
    b45a:	09 f0       	breq	.+2      	; 0xb45e <checkcollide+0x30c>
    b45c:	4a c0       	rjmp	.+148    	; 0xb4f2 <checkcollide+0x3a0>
    score = score + 5 ;
    b45e:	80 91 78 09 	lds	r24, 0x0978	; 0x800978 <score>
    b462:	90 91 79 09 	lds	r25, 0x0979	; 0x800979 <score+0x1>
    b466:	05 96       	adiw	r24, 0x05	; 5
    b468:	90 93 79 09 	sts	0x0979, r25	; 0x800979 <score+0x1>
    b46c:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <score>
    bonus++;
    b470:	80 91 f0 09 	lds	r24, 0x09F0	; 0x8009f0 <bonus>
    b474:	90 91 f1 09 	lds	r25, 0x09F1	; 0x8009f1 <bonus+0x1>
    b478:	01 96       	adiw	r24, 0x01	; 1
    b47a:	90 93 f1 09 	sts	0x09F1, r25	; 0x8009f1 <bonus+0x1>
    b47e:	80 93 f0 09 	sts	0x09F0, r24	; 0x8009f0 <bonus>
    updatepoints();
    b482:	0e 94 98 58 	call	0xb130	; 0xb130 <updatepoints>
    TriggerFx(7,0xff,true);
    b486:	41 e0       	ldi	r20, 0x01	; 1
    b488:	6f ef       	ldi	r22, 0xFF	; 255
    b48a:	87 e0       	ldi	r24, 0x07	; 7
    b48c:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    lx = lx * 2 + destX;
    b490:	c8 01       	movw	r24, r16
    b492:	88 0f       	add	r24, r24
    b494:	99 1f       	adc	r25, r25
    b496:	20 91 b9 09 	lds	r18, 0x09B9	; 0x8009b9 <destX>
    b49a:	82 0f       	add	r24, r18
    b49c:	91 1d       	adc	r25, r1
    if (lx >= 32 ) lx = lx - 32;
    b49e:	80 32       	cpi	r24, 0x20	; 32
    b4a0:	91 05       	cpc	r25, r1
    b4a2:	0c f0       	brlt	.+2      	; 0xb4a6 <checkcollide+0x354>
    b4a4:	80 97       	sbiw	r24, 0x20	; 32
    //DrawMap2(  lx    ,  ly *  2    ,banana );
    bananaCount = bananaCount + 1;
    b4a6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <bananaCount>
    b4aa:	9f 5f       	subi	r25, 0xFF	; 255
    b4ac:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <bananaCount>
    DrawMap2(  lx    ,  ly *  2    ,block2 );      
    b4b0:	6e 2d       	mov	r22, r14
    b4b2:	66 0f       	add	r22, r22
    b4b4:	43 e6       	ldi	r20, 0x63	; 99
    b4b6:	53 e8       	ldi	r21, 0x83	; 131
    b4b8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    diamonds[xi] = dp;
    b4bc:	f6 01       	movw	r30, r12
    b4be:	ee 0f       	add	r30, r30
    b4c0:	ff 1f       	adc	r31, r31
    b4c2:	e2 54       	subi	r30, 0x42	; 66
    b4c4:	f6 4f       	sbci	r31, 0xF6	; 246
    b4c6:	80 91 bc 09 	lds	r24, 0x09BC	; 0x8009bc <dp>
    b4ca:	90 91 bd 09 	lds	r25, 0x09BD	; 0x8009bd <dp+0x1>
    b4ce:	91 83       	std	Z+1, r25	; 0x01
    b4d0:	80 83       	st	Z, r24
    break;
    b4d2:	11 c1       	rjmp	.+546    	; 0xb6f6 <checkcollide+0x5a4>
    };
    };
}; 
if (bl == 9 )
    b4d4:	c9 30       	cpi	r28, 0x09	; 9
    b4d6:	b1 f4       	brne	.+44     	; 0xb504 <checkcollide+0x3b2>
{
lx = x + Levelx;
    b4d8:	c9 0e       	add	r12, r25
    b4da:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b4dc:	8f e0       	ldi	r24, 0x0F	; 15
    b4de:	c8 22       	and	r12, r24
    b4e0:	dd 24       	eor	r13, r13
    b4e2:	81 e0       	ldi	r24, 0x01	; 1
    b4e4:	90 e0       	ldi	r25, 0x00	; 0
    b4e6:	29 e0       	ldi	r18, 0x09	; 9
    b4e8:	c2 16       	cp	r12, r18
    b4ea:	d1 04       	cpc	r13, r1
    b4ec:	0c f4       	brge	.+2      	; 0xb4f0 <checkcollide+0x39e>
    b4ee:	0a c1       	rjmp	.+532    	; 0xb704 <checkcollide+0x5b2>
    b4f0:	08 c1       	rjmp	.+528    	; 0xb702 <checkcollide+0x5b0>
    };
    };
};    
if (bl == 3 && z == 2 ) { 
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;
    for (int xi = 0; xi  < maxdiamonds; xi ++ )
    b4f2:	2f ef       	ldi	r18, 0xFF	; 255
    b4f4:	c2 1a       	sub	r12, r18
    b4f6:	d2 0a       	sbc	r13, r18
    b4f8:	29 e1       	ldi	r18, 0x19	; 25
    b4fa:	c2 16       	cp	r12, r18
    b4fc:	d1 04       	cpc	r13, r1
    b4fe:	09 f0       	breq	.+2      	; 0xb502 <checkcollide+0x3b0>
    b500:	a5 cf       	rjmp	.-182    	; 0xb44c <checkcollide+0x2fa>
    b502:	f9 c0       	rjmp	.+498    	; 0xb6f6 <checkcollide+0x5a4>
lx = lx << 4;
ly = ly - lx;
if (ly <= 8  ) return 1; else return 0;  
}
    
if (bl == 10 )
    b504:	ca 30       	cpi	r28, 0x0A	; 10
    b506:	79 f4       	brne	.+30     	; 0xb526 <checkcollide+0x3d4>
{
lx = x + Levelx;
    b508:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    b50c:	c8 0e       	add	r12, r24
    b50e:	d1 1c       	adc	r13, r1
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b510:	8f e0       	ldi	r24, 0x0F	; 15
    b512:	c8 22       	and	r12, r24
    b514:	dd 24       	eor	r13, r13
    b516:	81 e0       	ldi	r24, 0x01	; 1
    b518:	90 e0       	ldi	r25, 0x00	; 0
    b51a:	29 e0       	ldi	r18, 0x09	; 9
    b51c:	c2 16       	cp	r12, r18
    b51e:	d1 04       	cpc	r13, r1
    b520:	0c f0       	brlt	.+2      	; 0xb524 <checkcollide+0x3d2>
    b522:	f0 c0       	rjmp	.+480    	; 0xb704 <checkcollide+0x5b2>
    b524:	ee c0       	rjmp	.+476    	; 0xb702 <checkcollide+0x5b0>
}
 

    
    
if (bl == 39 )
    b526:	c7 32       	cpi	r28, 0x27	; 39
    b528:	09 f0       	breq	.+2      	; 0xb52c <checkcollide+0x3da>
    b52a:	e5 c0       	rjmp	.+458    	; 0xb6f6 <checkcollide+0x5a4>
{
lx = y;
ly = y;
lx = lx >> 4;
lx = lx << 4;
    b52c:	c7 01       	movw	r24, r14
    b52e:	f4 e0       	ldi	r31, 0x04	; 4
    b530:	88 0f       	add	r24, r24
    b532:	99 1f       	adc	r25, r25
    b534:	fa 95       	dec	r31
    b536:	e1 f7       	brne	.-8      	; 0xb530 <checkcollide+0x3de>
ly = ly - lx;
        
if (ly < 5  ) 
    b538:	a8 1a       	sub	r10, r24
    b53a:	b9 0a       	sbc	r11, r25
    b53c:	85 e0       	ldi	r24, 0x05	; 5
    b53e:	a8 16       	cp	r10, r24
    b540:	b1 04       	cpc	r11, r1
    b542:	0c f0       	brlt	.+2      	; 0xb546 <checkcollide+0x3f4>
    b544:	7d c0       	rjmp	.+250    	; 0xb640 <checkcollide+0x4ee>
{
lx = x + Levelx;
    b546:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    b54a:	c8 0e       	add	r12, r24
    b54c:	d1 1c       	adc	r13, r1
ly = y;
lx = lx >> 4;
    b54e:	86 01       	movw	r16, r12
    b550:	e4 e0       	ldi	r30, 0x04	; 4
    b552:	15 95       	asr	r17
    b554:	07 95       	ror	r16
    b556:	ea 95       	dec	r30
    b558:	e1 f7       	brne	.-8      	; 0xb552 <checkcollide+0x400>
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
    b55a:	2a e5       	ldi	r18, 0x5A	; 90
    b55c:	2e 9d       	mul	r18, r14
    b55e:	c0 01       	movw	r24, r0
    b560:	2f 9d       	mul	r18, r15
    b562:	90 0d       	add	r25, r0
    b564:	11 24       	eor	r1, r1
    b566:	80 0f       	add	r24, r16
    b568:	91 1f       	adc	r25, r17
    b56a:	20 91 fe 09 	lds	r18, 0x09FE	; 0x8009fe <scrolltiles>
    b56e:	82 0f       	add	r24, r18
    b570:	91 1d       	adc	r25, r1
    b572:	90 93 bd 09 	sts	0x09BD, r25	; 0x8009bd <dp+0x1>
    b576:	80 93 bc 09 	sts	0x09BC, r24	; 0x8009bc <dp>
    b57a:	e5 e2       	ldi	r30, 0x25	; 37
    b57c:	f9 e0       	ldi	r31, 0x09	; 9
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b57e:	20 e0       	ldi	r18, 0x00	; 0
    b580:	30 e0       	ldi	r19, 0x00	; 0
     {
     if (bridges[xi].id == dp)         
    b582:	40 81       	ld	r20, Z
    b584:	51 81       	ldd	r21, Z+1	; 0x01
    b586:	84 17       	cp	r24, r20
    b588:	95 07       	cpc	r25, r21
    b58a:	09 f0       	breq	.+2      	; 0xb58e <checkcollide+0x43c>
    b58c:	9e c0       	rjmp	.+316    	; 0xb6ca <checkcollide+0x578>
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b58e:	c8 01       	movw	r24, r16
    b590:	54 e0       	ldi	r21, 0x04	; 4
    b592:	88 0f       	add	r24, r24
    b594:	99 1f       	adc	r25, r25
    b596:	5a 95       	dec	r21
    b598:	e1 f7       	brne	.-8      	; 0xb592 <checkcollide+0x440>
    b59a:	c8 1a       	sub	r12, r24
    b59c:	d9 0a       	sbc	r13, r25
    b59e:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <destX>
    b5a2:	e9 01       	movw	r28, r18
    b5a4:	cc 0f       	add	r28, r28
    b5a6:	dd 1f       	adc	r29, r29
    b5a8:	cc 0f       	add	r28, r28
    b5aa:	dd 1f       	adc	r29, r29
    b5ac:	00 0f       	add	r16, r16
    b5ae:	11 1f       	adc	r17, r17
        {
        bridges[xi].r++;    
    b5b0:	fe 01       	movw	r30, r28
    b5b2:	eb 5d       	subi	r30, 0xDB	; 219
    b5b4:	f6 4f       	sbci	r31, 0xF6	; 246
       lx = x + Levelx;
       ly = x + Levelx;
       lx = lx >> 4;
       lx = lx << 4;
       ly = ly - lx;          
        if (ly <= 8 )
    b5b6:	29 e0       	ldi	r18, 0x09	; 9
    b5b8:	c2 16       	cp	r12, r18
    b5ba:	d1 04       	cpc	r13, r1
    b5bc:	0c f0       	brlt	.+2      	; 0xb5c0 <checkcollide+0x46e>
    b5be:	43 c0       	rjmp	.+134    	; 0xb646 <checkcollide+0x4f4>
        {
        bridges[xi].r++;    
    b5c0:	83 81       	ldd	r24, Z+3	; 0x03
    b5c2:	21 e0       	ldi	r18, 0x01	; 1
    b5c4:	28 0f       	add	r18, r24
    b5c6:	23 83       	std	Z+3, r18	; 0x03
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b5c8:	09 0f       	add	r16, r25
    b5ca:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b5cc:	00 32       	cpi	r16, 0x20	; 32
    b5ce:	11 05       	cpc	r17, r1
    b5d0:	14 f0       	brlt	.+4      	; 0xb5d6 <checkcollide+0x484>
    b5d2:	00 52       	subi	r16, 0x20	; 32
    b5d4:	11 09       	sbc	r17, r1
        if ( bridges[xi].r >  0 && bridges[xi].r <= 8  )  DrawMap2(  lx    ,     ly *  2    ,bridge1 );
    b5d6:	88 30       	cpi	r24, 0x08	; 8
    b5d8:	38 f4       	brcc	.+14     	; 0xb5e8 <checkcollide+0x496>
    b5da:	4c ed       	ldi	r20, 0xDC	; 220
    b5dc:	52 e8       	ldi	r21, 0x82	; 130
    b5de:	6e 2d       	mov	r22, r14
    b5e0:	66 0f       	add	r22, r22
    b5e2:	80 2f       	mov	r24, r16
    b5e4:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].r >  8 && bridges[xi].r <= 16  )  DrawMap2(  lx    ,     ly *  2    ,bridge2 ); 
    b5e8:	fe 01       	movw	r30, r28
    b5ea:	eb 5d       	subi	r30, 0xDB	; 219
    b5ec:	f6 4f       	sbci	r31, 0xF6	; 246
    b5ee:	83 81       	ldd	r24, Z+3	; 0x03
    b5f0:	89 50       	subi	r24, 0x09	; 9
    b5f2:	88 30       	cpi	r24, 0x08	; 8
    b5f4:	38 f4       	brcc	.+14     	; 0xb604 <checkcollide+0x4b2>
    b5f6:	49 ed       	ldi	r20, 0xD9	; 217
    b5f8:	52 e8       	ldi	r21, 0x82	; 130
    b5fa:	6e 2d       	mov	r22, r14
    b5fc:	66 0f       	add	r22, r22
    b5fe:	80 2f       	mov	r24, r16
    b600:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].r > 16 && bridges[xi].r < 24  )  DrawMap2(  lx    ,     ly *  2    ,bridge3 );     
    b604:	fe 01       	movw	r30, r28
    b606:	eb 5d       	subi	r30, 0xDB	; 219
    b608:	f6 4f       	sbci	r31, 0xF6	; 246
    b60a:	83 81       	ldd	r24, Z+3	; 0x03
    b60c:	81 51       	subi	r24, 0x11	; 17
    b60e:	87 30       	cpi	r24, 0x07	; 7
    b610:	38 f4       	brcc	.+14     	; 0xb620 <checkcollide+0x4ce>
    b612:	46 ed       	ldi	r20, 0xD6	; 214
    b614:	52 e8       	ldi	r21, 0x82	; 130
    b616:	6e 2d       	mov	r22, r14
    b618:	66 0f       	add	r22, r22
    b61a:	80 2f       	mov	r24, r16
    b61c:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].r >= 24 ) { bridges[xi].r = 24;DrawMap2(  lx    ,     ly *  2    ,nb ); return 0;};
    b620:	fe 01       	movw	r30, r28
    b622:	eb 5d       	subi	r30, 0xDB	; 219
    b624:	f6 4f       	sbci	r31, 0xF6	; 246
    b626:	83 81       	ldd	r24, Z+3	; 0x03
    b628:	88 31       	cpi	r24, 0x18	; 24
    b62a:	08 f4       	brcc	.+2      	; 0xb62e <checkcollide+0x4dc>
    b62c:	5b c0       	rjmp	.+182    	; 0xb6e4 <checkcollide+0x592>
    b62e:	88 e1       	ldi	r24, 0x18	; 24
    b630:	83 83       	std	Z+3, r24	; 0x03
    b632:	6e 2d       	mov	r22, r14
    b634:	66 0f       	add	r22, r22
    b636:	43 ed       	ldi	r20, 0xD3	; 211
    b638:	52 e8       	ldi	r21, 0x82	; 130
    b63a:	80 2f       	mov	r24, r16
    b63c:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    b640:	80 e0       	ldi	r24, 0x00	; 0
    b642:	90 e0       	ldi	r25, 0x00	; 0
    b644:	5f c0       	rjmp	.+190    	; 0xb704 <checkcollide+0x5b2>
        }
        else
        {
        bridges[xi].l++;
    b646:	82 81       	ldd	r24, Z+2	; 0x02
    b648:	21 e0       	ldi	r18, 0x01	; 1
    b64a:	28 0f       	add	r18, r24
    b64c:	22 83       	std	Z+2, r18	; 0x02
        lx = x + Levelx;
        ly = y;
        lx = lx >> 4;
        ly = ly >> 4;
        lx = lx * 2 + destX;
    b64e:	09 0f       	add	r16, r25
    b650:	11 1d       	adc	r17, r1
        if (lx >= 32 ) lx = lx - 32;
    b652:	00 32       	cpi	r16, 0x20	; 32
    b654:	11 05       	cpc	r17, r1
    b656:	14 f0       	brlt	.+4      	; 0xb65c <checkcollide+0x50a>
    b658:	00 52       	subi	r16, 0x20	; 32
    b65a:	11 09       	sbc	r17, r1
        if ( bridges[xi].l > 0 && bridges[xi].l <=  8  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge1 );
    b65c:	88 30       	cpi	r24, 0x08	; 8
    b65e:	40 f4       	brcc	.+16     	; 0xb670 <checkcollide+0x51e>
    b660:	4c ed       	ldi	r20, 0xDC	; 220
    b662:	52 e8       	ldi	r21, 0x82	; 130
    b664:	6e 2d       	mov	r22, r14
    b666:	66 0f       	add	r22, r22
    b668:	81 e0       	ldi	r24, 0x01	; 1
    b66a:	80 0f       	add	r24, r16
    b66c:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].l > 8 && bridges[xi].l <= 16 )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge2 ); 
    b670:	fe 01       	movw	r30, r28
    b672:	eb 5d       	subi	r30, 0xDB	; 219
    b674:	f6 4f       	sbci	r31, 0xF6	; 246
    b676:	82 81       	ldd	r24, Z+2	; 0x02
    b678:	89 50       	subi	r24, 0x09	; 9
    b67a:	88 30       	cpi	r24, 0x08	; 8
    b67c:	40 f4       	brcc	.+16     	; 0xb68e <checkcollide+0x53c>
    b67e:	49 ed       	ldi	r20, 0xD9	; 217
    b680:	52 e8       	ldi	r21, 0x82	; 130
    b682:	6e 2d       	mov	r22, r14
    b684:	66 0f       	add	r22, r22
    b686:	81 e0       	ldi	r24, 0x01	; 1
    b688:	80 0f       	add	r24, r16
    b68a:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].l > 16 && bridges[xi].l <  24  )  DrawMap2(  lx  + 1  ,     ly *  2    ,bridge3 );      
    b68e:	fe 01       	movw	r30, r28
    b690:	eb 5d       	subi	r30, 0xDB	; 219
    b692:	f6 4f       	sbci	r31, 0xF6	; 246
    b694:	82 81       	ldd	r24, Z+2	; 0x02
    b696:	81 51       	subi	r24, 0x11	; 17
    b698:	87 30       	cpi	r24, 0x07	; 7
    b69a:	40 f4       	brcc	.+16     	; 0xb6ac <checkcollide+0x55a>
    b69c:	46 ed       	ldi	r20, 0xD6	; 214
    b69e:	52 e8       	ldi	r21, 0x82	; 130
    b6a0:	6e 2d       	mov	r22, r14
    b6a2:	66 0f       	add	r22, r22
    b6a4:	81 e0       	ldi	r24, 0x01	; 1
    b6a6:	80 0f       	add	r24, r16
    b6a8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
        if ( bridges[xi].l >= 24) { bridges[xi].l = 24;DrawMap2(  lx  + 1  ,  ly *  2    ,nb ); return 0;}; 
    b6ac:	fe 01       	movw	r30, r28
    b6ae:	eb 5d       	subi	r30, 0xDB	; 219
    b6b0:	f6 4f       	sbci	r31, 0xF6	; 246
    b6b2:	82 81       	ldd	r24, Z+2	; 0x02
    b6b4:	88 31       	cpi	r24, 0x18	; 24
    b6b6:	b0 f0       	brcs	.+44     	; 0xb6e4 <checkcollide+0x592>
    b6b8:	88 e1       	ldi	r24, 0x18	; 24
    b6ba:	82 83       	std	Z+2, r24	; 0x02
    b6bc:	6e 2d       	mov	r22, r14
    b6be:	66 0f       	add	r22, r22
    b6c0:	43 ed       	ldi	r20, 0xD3	; 211
    b6c2:	52 e8       	ldi	r21, 0x82	; 130
    b6c4:	81 e0       	ldi	r24, 0x01	; 1
    b6c6:	80 0f       	add	r24, r16
    b6c8:	b9 cf       	rjmp	.-142    	; 0xb63c <checkcollide+0x4ea>
        
        return 1; 
     };
         
         
     if (bridges[xi].id == 0 ) { bridges[xi].id = dp;bridges[xi].l = 0;bridges[xi].r = 0;return 1;};
    b6ca:	45 2b       	or	r20, r21
    b6cc:	69 f4       	brne	.+26     	; 0xb6e8 <checkcollide+0x596>
    b6ce:	22 0f       	add	r18, r18
    b6d0:	33 1f       	adc	r19, r19
    b6d2:	22 0f       	add	r18, r18
    b6d4:	33 1f       	adc	r19, r19
    b6d6:	f9 01       	movw	r30, r18
    b6d8:	eb 5d       	subi	r30, 0xDB	; 219
    b6da:	f6 4f       	sbci	r31, 0xF6	; 246
    b6dc:	91 83       	std	Z+1, r25	; 0x01
    b6de:	80 83       	st	Z, r24
    b6e0:	12 82       	std	Z+2, r1	; 0x02
    b6e2:	13 82       	std	Z+3, r1	; 0x03
    b6e4:	81 e0       	ldi	r24, 0x01	; 1
    b6e6:	ad cf       	rjmp	.-166    	; 0xb642 <checkcollide+0x4f0>
lx = x + Levelx;
ly = y;
lx = lx >> 4;
ly = ly >> 4;  
dp = ((ly  ) *levelwidth)+ ( lx )  + scrolltiles;    
     for (int xi = 0; xi  < maxbridges; xi ++ )
    b6e8:	2f 5f       	subi	r18, 0xFF	; 255
    b6ea:	3f 4f       	sbci	r19, 0xFF	; 255
    b6ec:	34 96       	adiw	r30, 0x04	; 4
    b6ee:	2c 30       	cpi	r18, 0x0C	; 12
    b6f0:	31 05       	cpc	r19, r1
    b6f2:	09 f0       	breq	.+2      	; 0xb6f6 <checkcollide+0x5a4>
    b6f4:	46 cf       	rjmp	.-372    	; 0xb582 <checkcollide+0x430>
   
} else return 0;  
}    

    
if (bl > 0 && bl <= 20 ) return 1; else return 0;
    b6f6:	ef ef       	ldi	r30, 0xFF	; 255
    b6f8:	ec 0f       	add	r30, r28
    b6fa:	81 e0       	ldi	r24, 0x01	; 1
    b6fc:	90 e0       	ldi	r25, 0x00	; 0
    b6fe:	e4 31       	cpi	r30, 0x14	; 20
    b700:	08 f0       	brcs	.+2      	; 0xb704 <checkcollide+0x5b2>
    b702:	80 e0       	ldi	r24, 0x00	; 0
}
    b704:	df 91       	pop	r29
    b706:	cf 91       	pop	r28
    b708:	1f 91       	pop	r17
    b70a:	0f 91       	pop	r16
    b70c:	ff 90       	pop	r15
    b70e:	ef 90       	pop	r14
    b710:	df 90       	pop	r13
    b712:	cf 90       	pop	r12
    b714:	bf 90       	pop	r11
    b716:	af 90       	pop	r10
    b718:	08 95       	ret

0000b71a <setheadline>:
printtileint( 4 ,0,score,4);
//printtileint( 12 ,0,bonus,2);   
}

void setheadline()
{
    b71a:	cf 93       	push	r28
    b71c:	c0 e0       	ldi	r28, 0x00	; 0
for (int x = 0; x < 32; x++) DrawMap2(x,VRAM_TILES_V,nb);
    b71e:	43 ed       	ldi	r20, 0xD3	; 211
    b720:	52 e8       	ldi	r21, 0x82	; 130
    b722:	60 e2       	ldi	r22, 0x20	; 32
    b724:	8c 2f       	mov	r24, r28
    b726:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    b72a:	cf 5f       	subi	r28, 0xFF	; 255
    b72c:	c0 32       	cpi	r28, 0x20	; 32
    b72e:	b9 f7       	brne	.-18     	; 0xb71e <setheadline+0x4>
}
    b730:	cf 91       	pop	r28
    b732:	08 95       	ret

0000b734 <drawmonster>:

void drawmonster()
{
    b734:	0f 93       	push	r16
if (owl.onscreen)
    b736:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <owl+0x9>
    b73a:	88 23       	and	r24, r24
    b73c:	81 f1       	breq	.+96     	; 0xb79e <drawmonster+0x6a>
{
if (!owl.alive) { MapSprite2(owlIndex , owl1 ,0); MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);return;}; 
    b73e:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <owl+0xa>
    b742:	81 11       	cpse	r24, r1
    b744:	0d c0       	rjmp	.+26     	; 0xb760 <drawmonster+0x2c>
    b746:	40 e0       	ldi	r20, 0x00	; 0
    b748:	6f e7       	ldi	r22, 0x7F	; 127
    b74a:	73 e5       	ldi	r23, 0x53	; 83
    b74c:	8c e0       	ldi	r24, 0x0C	; 12
    b74e:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
    b752:	02 e0       	ldi	r16, 0x02	; 2
    b754:	22 e0       	ldi	r18, 0x02	; 2
    b756:	40 91 b0 09 	lds	r20, 0x09B0	; 0x8009b0 <owl+0x2>
    b75a:	60 91 ae 09 	lds	r22, 0x09AE	; 0x8009ae <owl>
    b75e:	33 c0       	rjmp	.+102    	; 0xb7c6 <drawmonster+0x92>
if (aniframe < 10 ) 
    b760:	80 91 fb 09 	lds	r24, 0x09FB	; 0x8009fb <aniframe>
    b764:	8a 30       	cpi	r24, 0x0A	; 10
    b766:	58 f4       	brcc	.+22     	; 0xb77e <drawmonster+0x4a>
{
    MoveSprite(owlIndex , owl.x, owl.y  ,2 ,2);
    b768:	02 e0       	ldi	r16, 0x02	; 2
    b76a:	22 e0       	ldi	r18, 0x02	; 2
    b76c:	40 91 b0 09 	lds	r20, 0x09B0	; 0x8009b0 <owl+0x2>
    b770:	60 91 ae 09 	lds	r22, 0x09AE	; 0x8009ae <owl>
    b774:	8c e0       	ldi	r24, 0x0C	; 12
    b776:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,0); 
    b77a:	40 e0       	ldi	r20, 0x00	; 0
    b77c:	0b c0       	rjmp	.+22     	; 0xb794 <drawmonster+0x60>
}
else
{
    MoveSprite(owlIndex , owl.x -1 , owl.y  ,2 ,2);
    b77e:	60 91 ae 09 	lds	r22, 0x09AE	; 0x8009ae <owl>
    b782:	61 50       	subi	r22, 0x01	; 1
    b784:	02 e0       	ldi	r16, 0x02	; 2
    b786:	22 e0       	ldi	r18, 0x02	; 2
    b788:	40 91 b0 09 	lds	r20, 0x09B0	; 0x8009b0 <owl+0x2>
    b78c:	8c e0       	ldi	r24, 0x0C	; 12
    b78e:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    MapSprite2(owlIndex , owl0 ,1); 
    b792:	41 e0       	ldi	r20, 0x01	; 1
    b794:	65 e8       	ldi	r22, 0x85	; 133
    b796:	73 e5       	ldi	r23, 0x53	; 83
    b798:	8c e0       	ldi	r24, 0x0C	; 12
    b79a:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
};
};
    
if (blob.onscreen)
    b79e:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    b7a2:	88 23       	and	r24, r24
    b7a4:	69 f1       	breq	.+90     	; 0xb800 <drawmonster+0xcc>
{
if (!blob.alive) { MapSprite2(owlIndex , blob1 ,0);  MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);return;}; 
    b7a6:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0xa>
    b7aa:	81 11       	cpse	r24, r1
    b7ac:	10 c0       	rjmp	.+32     	; 0xb7ce <drawmonster+0x9a>
    b7ae:	40 e0       	ldi	r20, 0x00	; 0
    b7b0:	63 e7       	ldi	r22, 0x73	; 115
    b7b2:	73 e5       	ldi	r23, 0x53	; 83
    b7b4:	8c e0       	ldi	r24, 0x0C	; 12
    b7b6:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
    b7ba:	02 e0       	ldi	r16, 0x02	; 2
    b7bc:	22 e0       	ldi	r18, 0x02	; 2
    b7be:	40 91 58 09 	lds	r20, 0x0958	; 0x800958 <blob+0x2>
    b7c2:	60 91 56 09 	lds	r22, 0x0956	; 0x800956 <blob>
    b7c6:	8c e0       	ldi	r24, 0x0C	; 12
    b7c8:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    b7cc:	19 c0       	rjmp	.+50     	; 0xb800 <drawmonster+0xcc>
if (aniframe < 10 ) 
    b7ce:	80 91 fb 09 	lds	r24, 0x09FB	; 0x8009fb <aniframe>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b7d2:	02 e0       	ldi	r16, 0x02	; 2
    b7d4:	22 e0       	ldi	r18, 0x02	; 2
    b7d6:	40 91 58 09 	lds	r20, 0x0958	; 0x800958 <blob+0x2>
    b7da:	60 91 56 09 	lds	r22, 0x0956	; 0x800956 <blob>
};
    
if (blob.onscreen)
{
if (!blob.alive) { MapSprite2(owlIndex , blob1 ,0);  MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);return;}; 
if (aniframe < 10 ) 
    b7de:	8a 30       	cpi	r24, 0x0A	; 10
    b7e0:	28 f4       	brcc	.+10     	; 0xb7ec <drawmonster+0xb8>
{
    MoveSprite(owlIndex ,blob.x, blob.y  ,2 ,2);
    b7e2:	8c e0       	ldi	r24, 0x0C	; 12
    b7e4:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,0); 
    b7e8:	40 e0       	ldi	r20, 0x00	; 0
    b7ea:	04 c0       	rjmp	.+8      	; 0xb7f4 <drawmonster+0xc0>
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    b7ec:	8c e0       	ldi	r24, 0x0C	; 12
    b7ee:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    MapSprite2(owlIndex ,blob0 ,1); 
    b7f2:	41 e0       	ldi	r20, 0x01	; 1
    b7f4:	69 e7       	ldi	r22, 0x79	; 121
    b7f6:	73 e5       	ldi	r23, 0x53	; 83
    b7f8:	8c e0       	ldi	r24, 0x0C	; 12
};
};    
   
}
    b7fa:	0f 91       	pop	r16
    MapSprite2(owlIndex ,blob0 ,0); 
}
else
{
    MoveSprite(owlIndex ,blob.x , blob.y  ,2 ,2);
    MapSprite2(owlIndex ,blob0 ,1); 
    b7fc:	0c 94 48 53 	jmp	0xa690	; 0xa690 <MapSprite2>
};
};    
   
}
    b800:	0f 91       	pop	r16
    b802:	08 95       	ret

0000b804 <movemonster>:

void movemonster()
{
    b804:	0f 93       	push	r16
if (owl.onscreen) 
    b806:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <owl+0x9>
    b80a:	88 23       	and	r24, r24
    b80c:	09 f4       	brne	.+2      	; 0xb810 <movemonster+0xc>
    b80e:	c1 c0       	rjmp	.+386    	; 0xb992 <movemonster+0x18e>
{
 
    owl.x = owl.x2 >> 2;
    b810:	80 91 b2 09 	lds	r24, 0x09B2	; 0x8009b2 <owl+0x4>
    b814:	90 91 b3 09 	lds	r25, 0x09B3	; 0x8009b3 <owl+0x5>
    oldx = owl.x;
    b818:	9c 01       	movw	r18, r24
    b81a:	35 95       	asr	r19
    b81c:	27 95       	ror	r18
    b81e:	35 95       	asr	r19
    b820:	27 95       	ror	r18
    b822:	30 93 87 09 	sts	0x0987, r19	; 0x800987 <oldx+0x1>
    b826:	20 93 86 09 	sts	0x0986, r18	; 0x800986 <oldx>
    oldy = owl.y; 
    b82a:	20 91 b0 09 	lds	r18, 0x09B0	; 0x8009b0 <owl+0x2>
    b82e:	30 91 b1 09 	lds	r19, 0x09B1	; 0x8009b1 <owl+0x3>
    b832:	30 93 fd 09 	sts	0x09FD, r19	; 0x8009fd <oldy+0x1>
    b836:	20 93 fc 09 	sts	0x09FC, r18	; 0x8009fc <oldy>
    oldx2 = owl.x2;
    b83a:	90 93 f6 09 	sts	0x09F6, r25	; 0x8009f6 <oldx2+0x1>
    b83e:	80 93 f5 09 	sts	0x09F5, r24	; 0x8009f5 <oldx2>
    owl.y = owl.y  + gravity + owl.yimpulse;
    b842:	b9 01       	movw	r22, r18
    b844:	6e 5f       	subi	r22, 0xFE	; 254
    b846:	7f 4f       	sbci	r23, 0xFF	; 255
    b848:	40 91 b6 09 	lds	r20, 0x09B6	; 0x8009b6 <owl+0x8>
    b84c:	64 0f       	add	r22, r20
    b84e:	71 1d       	adc	r23, r1
    b850:	47 fd       	sbrc	r20, 7
    b852:	7a 95       	dec	r23
    b854:	70 93 b1 09 	sts	0x09B1, r23	; 0x8009b1 <owl+0x3>
    b858:	60 93 b0 09 	sts	0x09B0, r22	; 0x8009b0 <owl+0x2>
    
    owl.x2 = owl.x2 + owl.ximpulse;
    b85c:	40 91 b5 09 	lds	r20, 0x09B5	; 0x8009b5 <owl+0x7>
    b860:	84 0f       	add	r24, r20
    b862:	91 1d       	adc	r25, r1
    b864:	47 fd       	sbrc	r20, 7
    b866:	9a 95       	dec	r25
    b868:	90 93 b3 09 	sts	0x09B3, r25	; 0x8009b3 <owl+0x5>
    b86c:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <owl+0x4>
    owl.x = owl.x2 >> 2;
    b870:	95 95       	asr	r25
    b872:	87 95       	ror	r24
    b874:	95 95       	asr	r25
    b876:	87 95       	ror	r24
    b878:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <owl+0x1>
    b87c:	80 93 ae 09 	sts	0x09AE, r24	; 0x8009ae <owl>
    if (owl.y > oldy ) if (checkcollide( owl.x + 3 , owl.y + 16,     0 )&1 || checkcollide( owl.x + 12 , owl.y +16    ,0 )&1) { owl.y = ( owl.y / 16 ) * 16   ;};
    b880:	26 17       	cp	r18, r22
    b882:	37 07       	cpc	r19, r23
    b884:	34 f5       	brge	.+76     	; 0xb8d2 <movemonster+0xce>
    b886:	60 5f       	subi	r22, 0xF0	; 240
    b888:	7f 4f       	sbci	r23, 0xFF	; 255
    b88a:	40 e0       	ldi	r20, 0x00	; 0
    b88c:	50 e0       	ldi	r21, 0x00	; 0
    b88e:	03 96       	adiw	r24, 0x03	; 3
    b890:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    b894:	80 ff       	sbrs	r24, 0
    b896:	0c c0       	rjmp	.+24     	; 0xb8b0 <movemonster+0xac>
    b898:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <owl+0x2>
    b89c:	90 91 b1 09 	lds	r25, 0x09B1	; 0x8009b1 <owl+0x3>
    b8a0:	97 fd       	sbrc	r25, 7
    b8a2:	0f 96       	adiw	r24, 0x0f	; 15
    b8a4:	80 7f       	andi	r24, 0xF0	; 240
    b8a6:	90 93 b1 09 	sts	0x09B1, r25	; 0x8009b1 <owl+0x3>
    b8aa:	80 93 b0 09 	sts	0x09B0, r24	; 0x8009b0 <owl+0x2>
    b8ae:	11 c0       	rjmp	.+34     	; 0xb8d2 <movemonster+0xce>
    b8b0:	60 91 b0 09 	lds	r22, 0x09B0	; 0x8009b0 <owl+0x2>
    b8b4:	70 91 b1 09 	lds	r23, 0x09B1	; 0x8009b1 <owl+0x3>
    b8b8:	60 5f       	subi	r22, 0xF0	; 240
    b8ba:	7f 4f       	sbci	r23, 0xFF	; 255
    b8bc:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    b8c0:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    b8c4:	40 e0       	ldi	r20, 0x00	; 0
    b8c6:	50 e0       	ldi	r21, 0x00	; 0
    b8c8:	0c 96       	adiw	r24, 0x0c	; 12
    b8ca:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    b8ce:	80 fd       	sbrc	r24, 0
    b8d0:	e3 cf       	rjmp	.-58     	; 0xb898 <movemonster+0x94>
    if (owl.x > oldx ) if (checkcollide( owl.x + 12, owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   -1;};
    b8d2:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    b8d6:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    b8da:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    b8de:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    b8e2:	28 17       	cp	r18, r24
    b8e4:	39 07       	cpc	r19, r25
    b8e6:	c4 f4       	brge	.+48     	; 0xb918 <movemonster+0x114>
    b8e8:	60 91 b0 09 	lds	r22, 0x09B0	; 0x8009b0 <owl+0x2>
    b8ec:	70 91 b1 09 	lds	r23, 0x09B1	; 0x8009b1 <owl+0x3>
    b8f0:	68 5f       	subi	r22, 0xF8	; 248
    b8f2:	7f 4f       	sbci	r23, 0xFF	; 255
    b8f4:	40 e0       	ldi	r20, 0x00	; 0
    b8f6:	50 e0       	ldi	r21, 0x00	; 0
    b8f8:	0c 96       	adiw	r24, 0x0c	; 12
    b8fa:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    b8fe:	80 ff       	sbrs	r24, 0
    b900:	0b c0       	rjmp	.+22     	; 0xb918 <movemonster+0x114>
    b902:	80 91 f5 09 	lds	r24, 0x09F5	; 0x8009f5 <oldx2>
    b906:	90 91 f6 09 	lds	r25, 0x09F6	; 0x8009f6 <oldx2+0x1>
    b90a:	90 93 b3 09 	sts	0x09B3, r25	; 0x8009b3 <owl+0x5>
    b90e:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <owl+0x4>
    b912:	8f ef       	ldi	r24, 0xFF	; 255
    b914:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <owl+0x7>
    if (owl.x < oldx ) if (checkcollide( owl.x + 2 , owl.y + 8 ,0 )&1 )  { owl.x2 = oldx2; owl.ximpulse =   +1;};
    b918:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    b91c:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    b920:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    b924:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    b928:	82 17       	cp	r24, r18
    b92a:	93 07       	cpc	r25, r19
    b92c:	c4 f4       	brge	.+48     	; 0xb95e <movemonster+0x15a>
    b92e:	60 91 b0 09 	lds	r22, 0x09B0	; 0x8009b0 <owl+0x2>
    b932:	70 91 b1 09 	lds	r23, 0x09B1	; 0x8009b1 <owl+0x3>
    b936:	68 5f       	subi	r22, 0xF8	; 248
    b938:	7f 4f       	sbci	r23, 0xFF	; 255
    b93a:	40 e0       	ldi	r20, 0x00	; 0
    b93c:	50 e0       	ldi	r21, 0x00	; 0
    b93e:	02 96       	adiw	r24, 0x02	; 2
    b940:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    b944:	80 ff       	sbrs	r24, 0
    b946:	0b c0       	rjmp	.+22     	; 0xb95e <movemonster+0x15a>
    b948:	80 91 f5 09 	lds	r24, 0x09F5	; 0x8009f5 <oldx2>
    b94c:	90 91 f6 09 	lds	r25, 0x09F6	; 0x8009f6 <oldx2+0x1>
    b950:	90 93 b3 09 	sts	0x09B3, r25	; 0x8009b3 <owl+0x5>
    b954:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <owl+0x4>
    b958:	81 e0       	ldi	r24, 0x01	; 1
    b95a:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <owl+0x7>
    if (owl.y > 240 || owl.y < 0 || owl.x < -16 || owl.x > 240 )  {MonsteronScreen = false;MoveSprite(owlIndex,-20,-20,2,2); owl.onscreen = false;};
    b95e:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <owl+0x2>
    b962:	90 91 b1 09 	lds	r25, 0x09B1	; 0x8009b1 <owl+0x3>
    b966:	81 3f       	cpi	r24, 0xF1	; 241
    b968:	91 05       	cpc	r25, r1
    b96a:	40 f4       	brcc	.+16     	; 0xb97c <movemonster+0x178>
    b96c:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    b970:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    b974:	40 96       	adiw	r24, 0x10	; 16
    b976:	81 30       	cpi	r24, 0x01	; 1
    b978:	91 40       	sbci	r25, 0x01	; 1
    b97a:	58 f0       	brcs	.+22     	; 0xb992 <movemonster+0x18e>
    b97c:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <MonsteronScreen>
    b980:	02 e0       	ldi	r16, 0x02	; 2
    b982:	22 e0       	ldi	r18, 0x02	; 2
    b984:	4c ee       	ldi	r20, 0xEC	; 236
    b986:	6c ee       	ldi	r22, 0xEC	; 236
    b988:	8c e0       	ldi	r24, 0x0C	; 12
    b98a:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    b98e:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <owl+0x9>
}
if (blob.onscreen) 
    b992:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    b996:	88 23       	and	r24, r24
    b998:	09 f4       	brne	.+2      	; 0xb99c <movemonster+0x198>
    b99a:	c2 c0       	rjmp	.+388    	; 0xbb20 <movemonster+0x31c>
{
     
    blob.x = blob.x2 >> 2;
    b99c:	80 91 5a 09 	lds	r24, 0x095A	; 0x80095a <blob+0x4>
    b9a0:	90 91 5b 09 	lds	r25, 0x095B	; 0x80095b <blob+0x5>
    oldx = blob.x;
    b9a4:	9c 01       	movw	r18, r24
    b9a6:	35 95       	asr	r19
    b9a8:	27 95       	ror	r18
    b9aa:	35 95       	asr	r19
    b9ac:	27 95       	ror	r18
    b9ae:	30 93 87 09 	sts	0x0987, r19	; 0x800987 <oldx+0x1>
    b9b2:	20 93 86 09 	sts	0x0986, r18	; 0x800986 <oldx>
    oldy = blob.y; 
    b9b6:	20 91 58 09 	lds	r18, 0x0958	; 0x800958 <blob+0x2>
    b9ba:	30 91 59 09 	lds	r19, 0x0959	; 0x800959 <blob+0x3>
    b9be:	30 93 fd 09 	sts	0x09FD, r19	; 0x8009fd <oldy+0x1>
    b9c2:	20 93 fc 09 	sts	0x09FC, r18	; 0x8009fc <oldy>
    oldx2 = blob.x2;
    b9c6:	90 93 f6 09 	sts	0x09F6, r25	; 0x8009f6 <oldx2+0x1>
    b9ca:	80 93 f5 09 	sts	0x09F5, r24	; 0x8009f5 <oldx2>
    blob.y = blob.y  + gravity + blob.yimpulse;
    b9ce:	b9 01       	movw	r22, r18
    b9d0:	6e 5f       	subi	r22, 0xFE	; 254
    b9d2:	7f 4f       	sbci	r23, 0xFF	; 255
    b9d4:	40 91 5e 09 	lds	r20, 0x095E	; 0x80095e <blob+0x8>
    b9d8:	64 0f       	add	r22, r20
    b9da:	71 1d       	adc	r23, r1
    b9dc:	47 fd       	sbrc	r20, 7
    b9de:	7a 95       	dec	r23
    b9e0:	70 93 59 09 	sts	0x0959, r23	; 0x800959 <blob+0x3>
    b9e4:	60 93 58 09 	sts	0x0958, r22	; 0x800958 <blob+0x2>
    blob.x2 = blob.x2 + blob.ximpulse;
    b9e8:	40 91 5d 09 	lds	r20, 0x095D	; 0x80095d <blob+0x7>
    b9ec:	84 0f       	add	r24, r20
    b9ee:	91 1d       	adc	r25, r1
    b9f0:	47 fd       	sbrc	r20, 7
    b9f2:	9a 95       	dec	r25
    b9f4:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    b9f8:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    blob.x = blob.x2 >> 2;
    b9fc:	95 95       	asr	r25
    b9fe:	87 95       	ror	r24
    ba00:	95 95       	asr	r25
    ba02:	87 95       	ror	r24
    ba04:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    ba08:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
    if (blob.y > oldy ) if (checkcollide( blob.x + 3 , blob.y + 16,     0 )&1 || checkcollide( blob.x + 12 , blob.y +16    ,0 )&1) { blob.y = ( blob.y / 16 ) * 16   ;};
    ba0c:	26 17       	cp	r18, r22
    ba0e:	37 07       	cpc	r19, r23
    ba10:	34 f5       	brge	.+76     	; 0xba5e <movemonster+0x25a>
    ba12:	60 5f       	subi	r22, 0xF0	; 240
    ba14:	7f 4f       	sbci	r23, 0xFF	; 255
    ba16:	40 e0       	ldi	r20, 0x00	; 0
    ba18:	50 e0       	ldi	r21, 0x00	; 0
    ba1a:	03 96       	adiw	r24, 0x03	; 3
    ba1c:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    ba20:	80 ff       	sbrs	r24, 0
    ba22:	0c c0       	rjmp	.+24     	; 0xba3c <movemonster+0x238>
    ba24:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    ba28:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    ba2c:	97 fd       	sbrc	r25, 7
    ba2e:	0f 96       	adiw	r24, 0x0f	; 15
    ba30:	80 7f       	andi	r24, 0xF0	; 240
    ba32:	90 93 59 09 	sts	0x0959, r25	; 0x800959 <blob+0x3>
    ba36:	80 93 58 09 	sts	0x0958, r24	; 0x800958 <blob+0x2>
    ba3a:	11 c0       	rjmp	.+34     	; 0xba5e <movemonster+0x25a>
    ba3c:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    ba40:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    ba44:	60 5f       	subi	r22, 0xF0	; 240
    ba46:	7f 4f       	sbci	r23, 0xFF	; 255
    ba48:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    ba4c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    ba50:	40 e0       	ldi	r20, 0x00	; 0
    ba52:	50 e0       	ldi	r21, 0x00	; 0
    ba54:	0c 96       	adiw	r24, 0x0c	; 12
    ba56:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    ba5a:	80 fd       	sbrc	r24, 0
    ba5c:	e3 cf       	rjmp	.-58     	; 0xba24 <movemonster+0x220>
    if (blob.x > oldx ) if (!(checkcollide( blob.x + 17, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   -2;};
    ba5e:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    ba62:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    ba66:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    ba6a:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    ba6e:	28 17       	cp	r18, r24
    ba70:	39 07       	cpc	r19, r25
    ba72:	c4 f4       	brge	.+48     	; 0xbaa4 <movemonster+0x2a0>
    ba74:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    ba78:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    ba7c:	6f 5e       	subi	r22, 0xEF	; 239
    ba7e:	7f 4f       	sbci	r23, 0xFF	; 255
    ba80:	40 e0       	ldi	r20, 0x00	; 0
    ba82:	50 e0       	ldi	r21, 0x00	; 0
    ba84:	41 96       	adiw	r24, 0x11	; 17
    ba86:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    ba8a:	80 fd       	sbrc	r24, 0
    ba8c:	0b c0       	rjmp	.+22     	; 0xbaa4 <movemonster+0x2a0>
    ba8e:	80 91 f5 09 	lds	r24, 0x09F5	; 0x8009f5 <oldx2>
    ba92:	90 91 f6 09 	lds	r25, 0x09F6	; 0x8009f6 <oldx2+0x1>
    ba96:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    ba9a:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    ba9e:	8e ef       	ldi	r24, 0xFE	; 254
    baa0:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
    if (blob.x < oldx ) if (!(checkcollide( blob.x -  1, blob.y + 17 ,0 )&1) )  { blob.x2 = oldx2; blob.ximpulse =   +2;};
    baa4:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    baa8:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    baac:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    bab0:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    bab4:	82 17       	cp	r24, r18
    bab6:	93 07       	cpc	r25, r19
    bab8:	c4 f4       	brge	.+48     	; 0xbaea <movemonster+0x2e6>
    baba:	60 91 58 09 	lds	r22, 0x0958	; 0x800958 <blob+0x2>
    babe:	70 91 59 09 	lds	r23, 0x0959	; 0x800959 <blob+0x3>
    bac2:	6f 5e       	subi	r22, 0xEF	; 239
    bac4:	7f 4f       	sbci	r23, 0xFF	; 255
    bac6:	40 e0       	ldi	r20, 0x00	; 0
    bac8:	50 e0       	ldi	r21, 0x00	; 0
    baca:	01 97       	sbiw	r24, 0x01	; 1
    bacc:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    bad0:	80 fd       	sbrc	r24, 0
    bad2:	0b c0       	rjmp	.+22     	; 0xbaea <movemonster+0x2e6>
    bad4:	80 91 f5 09 	lds	r24, 0x09F5	; 0x8009f5 <oldx2>
    bad8:	90 91 f6 09 	lds	r25, 0x09F6	; 0x8009f6 <oldx2+0x1>
    badc:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    bae0:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    bae4:	82 e0       	ldi	r24, 0x02	; 2
    bae6:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
    if (blob.y > 240 || blob.y < 0 || blob.x <= -16 || blob.x > 240 )  {MonsteronScreen = false; MoveSprite(owlIndex,-20,-20,2,2);blob.onscreen = false;};
    baea:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    baee:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    baf2:	81 3f       	cpi	r24, 0xF1	; 241
    baf4:	91 05       	cpc	r25, r1
    baf6:	48 f4       	brcc	.+18     	; 0xbb0a <movemonster+0x306>
    baf8:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    bafc:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    bb00:	0f 96       	adiw	r24, 0x0f	; 15
    bb02:	8f 3f       	cpi	r24, 0xFF	; 255
    bb04:	91 05       	cpc	r25, r1
    bb06:	61 f0       	breq	.+24     	; 0xbb20 <movemonster+0x31c>
    bb08:	58 f0       	brcs	.+22     	; 0xbb20 <movemonster+0x31c>
    bb0a:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <MonsteronScreen>
    bb0e:	02 e0       	ldi	r16, 0x02	; 2
    bb10:	22 e0       	ldi	r18, 0x02	; 2
    bb12:	4c ee       	ldi	r20, 0xEC	; 236
    bb14:	6c ee       	ldi	r22, 0xEC	; 236
    bb16:	8c e0       	ldi	r24, 0x0C	; 12
    bb18:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
    bb1c:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x9>
}   

    
}
    bb20:	0f 91       	pop	r16
    bb22:	08 95       	ret

0000bb24 <checkmonster>:

void checkmonster(int x, int y,int z)
{
    bb24:	ef 92       	push	r14
    bb26:	ff 92       	push	r15
    bb28:	0f 93       	push	r16
    bb2a:	1f 93       	push	r17
    bb2c:	cf 93       	push	r28
    bb2e:	df 93       	push	r29
if (!MonsteronScreen) return;
    bb30:	20 91 9b 09 	lds	r18, 0x099B	; 0x80099b <MonsteronScreen>
    bb34:	22 23       	and	r18, r18
    bb36:	09 f4       	brne	.+2      	; 0xbb3a <checkmonster+0x16>
    bb38:	c3 c0       	rjmp	.+390    	; 0xbcc0 <checkmonster+0x19c>
    bb3a:	7a 01       	movw	r14, r20
    bb3c:	eb 01       	movw	r28, r22
    bb3e:	8c 01       	movw	r16, r24

if   (owl.onscreen && owl.alive)
    bb40:	80 91 b7 09 	lds	r24, 0x09B7	; 0x8009b7 <owl+0x9>
    bb44:	88 23       	and	r24, r24
    bb46:	09 f4       	brne	.+2      	; 0xbb4a <checkmonster+0x26>
    bb48:	55 c0       	rjmp	.+170    	; 0xbbf4 <checkmonster+0xd0>
    bb4a:	80 91 b8 09 	lds	r24, 0x09B8	; 0x8009b8 <owl+0xa>
    bb4e:	88 23       	and	r24, r24
    bb50:	09 f4       	brne	.+2      	; 0xbb54 <checkmonster+0x30>
    bb52:	50 c0       	rjmp	.+160    	; 0xbbf4 <checkmonster+0xd0>
                    {
   if ( x >= owl.x +4 && x<= owl.x + 11 && y > owl.y+3 &&  y  < owl.y + 15 )
    bb54:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    bb58:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    bb5c:	9c 01       	movw	r18, r24
    bb5e:	2d 5f       	subi	r18, 0xFD	; 253
    bb60:	3f 4f       	sbci	r19, 0xFF	; 255
    bb62:	20 17       	cp	r18, r16
    bb64:	31 07       	cpc	r19, r17
    bb66:	0c f0       	brlt	.+2      	; 0xbb6a <checkmonster+0x46>
    bb68:	45 c0       	rjmp	.+138    	; 0xbbf4 <checkmonster+0xd0>
    bb6a:	0b 96       	adiw	r24, 0x0b	; 11
    bb6c:	80 17       	cp	r24, r16
    bb6e:	91 07       	cpc	r25, r17
    bb70:	0c f4       	brge	.+2      	; 0xbb74 <checkmonster+0x50>
    bb72:	40 c0       	rjmp	.+128    	; 0xbbf4 <checkmonster+0xd0>
    bb74:	80 91 b0 09 	lds	r24, 0x09B0	; 0x8009b0 <owl+0x2>
    bb78:	90 91 b1 09 	lds	r25, 0x09B1	; 0x8009b1 <owl+0x3>
    bb7c:	9c 01       	movw	r18, r24
    bb7e:	2d 5f       	subi	r18, 0xFD	; 253
    bb80:	3f 4f       	sbci	r19, 0xFF	; 255
    bb82:	26 17       	cp	r18, r22
    bb84:	37 07       	cpc	r19, r23
    bb86:	b4 f5       	brge	.+108    	; 0xbbf4 <checkmonster+0xd0>
    bb88:	0e 96       	adiw	r24, 0x0e	; 14
    bb8a:	86 17       	cp	r24, r22
    bb8c:	97 07       	cpc	r25, r23
    bb8e:	94 f1       	brlt	.+100    	; 0xbbf4 <checkmonster+0xd0>
   {
    if ( z== 0)
    bb90:	45 2b       	or	r20, r21
    bb92:	d1 f4       	brne	.+52     	; 0xbbc8 <checkmonster+0xa4>
    {
    died = true;
    bb94:	81 e0       	ldi	r24, 0x01	; 1
    bb96:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <died>
    lives--;    
    bb9a:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    bb9e:	81 50       	subi	r24, 0x01	; 1
    bba0:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
    isplaying = false; 
    bba4:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    bba8:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    bonus = 0;  
    bbac:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    bbb0:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
    TriggerFx(9,0xff,true);
    bbb4:	41 e0       	ldi	r20, 0x01	; 1
    bbb6:	6f ef       	ldi	r22, 0xFF	; 255
    bbb8:	89 e0       	ldi	r24, 0x09	; 9
    bbba:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240); 
    bbbe:	80 ef       	ldi	r24, 0xF0	; 240
    bbc0:	90 e0       	ldi	r25, 0x00	; 0
    bbc2:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    bbc6:	16 c0       	rjmp	.+44     	; 0xbbf4 <checkmonster+0xd0>
    }
       else
       {
        owl.alive = false; 
    bbc8:	10 92 b8 09 	sts	0x09B8, r1	; 0x8009b8 <owl+0xa>
        owl.ximpulse = 0;
    bbcc:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <owl+0x7>
        owl.yimpulse = 0; 
    bbd0:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <owl+0x8>
        score = score + 50;
    bbd4:	80 91 78 09 	lds	r24, 0x0978	; 0x800978 <score>
    bbd8:	90 91 79 09 	lds	r25, 0x0979	; 0x800979 <score+0x1>
    bbdc:	c2 96       	adiw	r24, 0x32	; 50
    bbde:	90 93 79 09 	sts	0x0979, r25	; 0x800979 <score+0x1>
    bbe2:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <score>
        updatepoints();
    bbe6:	0e 94 98 58 	call	0xb130	; 0xb130 <updatepoints>
        TriggerFx(8,0xff,true);
    bbea:	41 e0       	ldi	r20, 0x01	; 1
    bbec:	6f ef       	ldi	r22, 0xFF	; 255
    bbee:	88 e0       	ldi	r24, 0x08	; 8
    bbf0:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
       };
   };     
   };
    
 if   (blob.onscreen && blob.alive)
    bbf4:	80 91 5f 09 	lds	r24, 0x095F	; 0x80095f <blob+0x9>
    bbf8:	88 23       	and	r24, r24
    bbfa:	09 f4       	brne	.+2      	; 0xbbfe <checkmonster+0xda>
    bbfc:	61 c0       	rjmp	.+194    	; 0xbcc0 <checkmonster+0x19c>
    bbfe:	80 91 60 09 	lds	r24, 0x0960	; 0x800960 <blob+0xa>
    bc02:	88 23       	and	r24, r24
    bc04:	09 f4       	brne	.+2      	; 0xbc08 <checkmonster+0xe4>
    bc06:	5c c0       	rjmp	.+184    	; 0xbcc0 <checkmonster+0x19c>
                    {
   if ( x >= blob.x +3 && x<= blob.x + 12 && y > blob.y+1 &&  y  < blob.y + 13 )
    bc08:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    bc0c:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    bc10:	9c 01       	movw	r18, r24
    bc12:	2e 5f       	subi	r18, 0xFE	; 254
    bc14:	3f 4f       	sbci	r19, 0xFF	; 255
    bc16:	20 17       	cp	r18, r16
    bc18:	31 07       	cpc	r19, r17
    bc1a:	0c f0       	brlt	.+2      	; 0xbc1e <checkmonster+0xfa>
    bc1c:	51 c0       	rjmp	.+162    	; 0xbcc0 <checkmonster+0x19c>
    bc1e:	0c 96       	adiw	r24, 0x0c	; 12
    bc20:	80 17       	cp	r24, r16
    bc22:	91 07       	cpc	r25, r17
    bc24:	0c f4       	brge	.+2      	; 0xbc28 <checkmonster+0x104>
    bc26:	4c c0       	rjmp	.+152    	; 0xbcc0 <checkmonster+0x19c>
    bc28:	80 91 58 09 	lds	r24, 0x0958	; 0x800958 <blob+0x2>
    bc2c:	90 91 59 09 	lds	r25, 0x0959	; 0x800959 <blob+0x3>
    bc30:	9c 01       	movw	r18, r24
    bc32:	2f 5f       	subi	r18, 0xFF	; 255
    bc34:	3f 4f       	sbci	r19, 0xFF	; 255
    bc36:	2c 17       	cp	r18, r28
    bc38:	3d 07       	cpc	r19, r29
    bc3a:	0c f0       	brlt	.+2      	; 0xbc3e <checkmonster+0x11a>
    bc3c:	41 c0       	rjmp	.+130    	; 0xbcc0 <checkmonster+0x19c>
    bc3e:	0c 96       	adiw	r24, 0x0c	; 12
    bc40:	8c 17       	cp	r24, r28
    bc42:	9d 07       	cpc	r25, r29
    bc44:	ec f1       	brlt	.+122    	; 0xbcc0 <checkmonster+0x19c>
   {
      if ( z== 0)
    bc46:	ef 28       	or	r14, r15
    bc48:	f9 f4       	brne	.+62     	; 0xbc88 <checkmonster+0x164>
    {
     died = true;
    bc4a:	81 e0       	ldi	r24, 0x01	; 1
    bc4c:	80 93 f8 09 	sts	0x09F8, r24	; 0x8009f8 <died>
    lives--;    
    bc50:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    bc54:	81 50       	subi	r24, 0x01	; 1
    bc56:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
    isplaying = false; 
    bc5a:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    bc5e:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    bonus = 0; 
    bc62:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    bc66:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
    TriggerFx(9,0xff,true);
    bc6a:	41 e0       	ldi	r20, 0x01	; 1
    bc6c:	6f ef       	ldi	r22, 0xFF	; 255
    bc6e:	89 e0       	ldi	r24, 0x09	; 9
    bc70:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240); 
    bc74:	80 ef       	ldi	r24, 0xF0	; 240
    bc76:	90 e0       	ldi	r25, 0x00	; 0
       
    
    
    

}
    bc78:	df 91       	pop	r29
    bc7a:	cf 91       	pop	r28
    bc7c:	1f 91       	pop	r17
    bc7e:	0f 91       	pop	r16
    bc80:	ff 90       	pop	r15
    bc82:	ef 90       	pop	r14
    lives--;    
    isplaying = false; 
    play = false;
    bonus = 0; 
    TriggerFx(9,0xff,true);
    WaitVsync(240); 
    bc84:	0c 94 01 54 	jmp	0xa802	; 0xa802 <WaitVsync>
      }
    else
       {
        blob.alive = false;  
    bc88:	10 92 60 09 	sts	0x0960, r1	; 0x800960 <blob+0xa>
        blob.ximpulse = 0;
    bc8c:	10 92 5d 09 	sts	0x095D, r1	; 0x80095d <blob+0x7>
        blob.yimpulse = 0;
    bc90:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <blob+0x8>
        score = score + 50;
    bc94:	80 91 78 09 	lds	r24, 0x0978	; 0x800978 <score>
    bc98:	90 91 79 09 	lds	r25, 0x0979	; 0x800979 <score+0x1>
    bc9c:	c2 96       	adiw	r24, 0x32	; 50
    bc9e:	90 93 79 09 	sts	0x0979, r25	; 0x800979 <score+0x1>
    bca2:	80 93 78 09 	sts	0x0978, r24	; 0x800978 <score>
        updatepoints();
    bca6:	0e 94 98 58 	call	0xb130	; 0xb130 <updatepoints>
        TriggerFx(8,0xff,true);
    bcaa:	41 e0       	ldi	r20, 0x01	; 1
    bcac:	6f ef       	ldi	r22, 0xFF	; 255
    bcae:	88 e0       	ldi	r24, 0x08	; 8
       
    
    
    

}
    bcb0:	df 91       	pop	r29
    bcb2:	cf 91       	pop	r28
    bcb4:	1f 91       	pop	r17
    bcb6:	0f 91       	pop	r16
    bcb8:	ff 90       	pop	r15
    bcba:	ef 90       	pop	r14
        blob.alive = false;  
        blob.ximpulse = 0;
        blob.yimpulse = 0;
        score = score + 50;
        updatepoints();
        TriggerFx(8,0xff,true);
    bcbc:	0c 94 b8 49 	jmp	0x9370	; 0x9370 <TriggerFx>
       
    
    
    

}
    bcc0:	df 91       	pop	r29
    bcc2:	cf 91       	pop	r28
    bcc4:	1f 91       	pop	r17
    bcc6:	0f 91       	pop	r16
    bcc8:	ff 90       	pop	r15
    bcca:	ef 90       	pop	r14
    bccc:	08 95       	ret

0000bcce <moveplayer>:
bool finished;
bool exitgame;
bool play;

void moveplayer()
{
    bcce:	cf 93       	push	r28
    bcd0:	df 93       	push	r29
unsigned int joy=ReadJoypad(0);
    bcd2:	80 e0       	ldi	r24, 0x00	; 0
    bcd4:	0e 94 65 47 	call	0x8eca	; 0x8eca <ReadJoypad>
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    bcd8:	20 91 72 09 	lds	r18, 0x0972	; 0x800972 <introplaying>
    bcdc:	22 23       	and	r18, r18
    bcde:	29 f0       	breq	.+10     	; 0xbcea <moveplayer+0x1c>
    bce0:	83 ff       	sbrs	r24, 3
    bce2:	6c c0       	rjmp	.+216    	; 0xbdbc <moveplayer+0xee>
    bce4:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <introplaying>
    bce8:	be c2       	rjmp	.+1404   	; 0xc266 <moveplayer+0x598>
if (!introplaying)
{

 
if (joy&BTN_LEFT) { 
    bcea:	86 ff       	sbrs	r24, 6
    bcec:	0f c0       	rjmp	.+30     	; 0xbd0c <moveplayer+0x3e>
player.direction = 'l';
    bcee:	2c e6       	ldi	r18, 0x6C	; 108
    bcf0:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x7>
player.action = 'w';
    bcf4:	27 e7       	ldi	r18, 0x77	; 119
    bcf6:	20 93 67 09 	sts	0x0967, r18	; 0x800967 <player+0x6>
player.facing = 1;
    bcfa:	21 e0       	ldi	r18, 0x01	; 1
    bcfc:	30 e0       	ldi	r19, 0x00	; 0
    bcfe:	30 93 66 09 	sts	0x0966, r19	; 0x800966 <player+0x5>
    bd02:	20 93 65 09 	sts	0x0965, r18	; 0x800965 <player+0x4>
player.ximpulse = -1; 
    bd06:	2f ef       	ldi	r18, 0xFF	; 255
    bd08:	20 93 6c 09 	sts	0x096C, r18	; 0x80096c <player+0xb>
};
if (joy&BTN_RIGHT) {
    bd0c:	87 ff       	sbrs	r24, 7
    bd0e:	0d c0       	rjmp	.+26     	; 0xbd2a <moveplayer+0x5c>
player.direction = 'r';
    bd10:	22 e7       	ldi	r18, 0x72	; 114
    bd12:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x7>
player.action = 'w';
    bd16:	27 e7       	ldi	r18, 0x77	; 119
    bd18:	20 93 67 09 	sts	0x0967, r18	; 0x800967 <player+0x6>
player.facing = 0;
    bd1c:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <player+0x5>
    bd20:	10 92 65 09 	sts	0x0965, r1	; 0x800965 <player+0x4>
player.ximpulse = 1; 
    bd24:	21 e0       	ldi	r18, 0x01	; 1
    bd26:	20 93 6c 09 	sts	0x096C, r18	; 0x80096c <player+0xb>
};
if ( !(joy&BTN_A) ) {
    bd2a:	ec 01       	movw	r28, r24
    bd2c:	cc 27       	eor	r28, r28
    bd2e:	d1 70       	andi	r29, 0x01	; 1
    bd30:	90 fd       	sbrc	r25, 0
    bd32:	09 c0       	rjmp	.+18     	; 0xbd46 <moveplayer+0x78>
player.yimpulse = 0;
    bd34:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
player.jumpreleased = true;
    bd38:	21 e0       	ldi	r18, 0x01	; 1
    bd3a:	20 93 6f 09 	sts	0x096F, r18	; 0x80096f <player+0xe>
player.jumping = false;
    bd3e:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
player.jumpcounter = 0;
    bd42:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
};
if ( joy&BTN_B && player.touchground) {
    bd46:	80 ff       	sbrs	r24, 0
    bd48:	19 c0       	rjmp	.+50     	; 0xbd7c <moveplayer+0xae>
    bd4a:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    bd4e:	88 23       	and	r24, r24
    bd50:	a9 f1       	breq	.+106    	; 0xbdbc <moveplayer+0xee>
	if(bananaCount > 0)
    bd52:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <bananaCount>
    bd56:	88 23       	and	r24, r24
    bd58:	09 f4       	brne	.+2      	; 0xbd5c <moveplayer+0x8e>
    bd5a:	81 c2       	rjmp	.+1282   	; 0xc25e <moveplayer+0x590>
	{
	bananaCount = bananaCount - 1;
    bd5c:	81 50       	subi	r24, 0x01	; 1
    bd5e:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <bananaCount>
	makeBanana( player.x + 4, player.y ,1);
    bd62:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bd66:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bd6a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bd6e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bd72:	41 e0       	ldi	r20, 0x01	; 1
    bd74:	50 e0       	ldi	r21, 0x00	; 0
    bd76:	04 96       	adiw	r24, 0x04	; 4
    bd78:	0e 94 81 57 	call	0xaf02	; 0xaf02 <makeBanana>
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased) {
    bd7c:	cd 2b       	or	r28, r29
    bd7e:	f1 f0       	breq	.+60     	; 0xbdbc <moveplayer+0xee>
    bd80:	80 91 6b 09 	lds	r24, 0x096B	; 0x80096b <player+0xa>
    bd84:	88 23       	and	r24, r24
    bd86:	d1 f0       	breq	.+52     	; 0xbdbc <moveplayer+0xee>
    bd88:	80 91 6f 09 	lds	r24, 0x096F	; 0x80096f <player+0xe>
    bd8c:	88 23       	and	r24, r24
    bd8e:	b1 f0       	breq	.+44     	; 0xbdbc <moveplayer+0xee>
player.action = 'j';
    bd90:	8a e6       	ldi	r24, 0x6A	; 106
    bd92:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
player.yimpulse = 0;
    bd96:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
player.jumping = true;
    bd9a:	81 e0       	ldi	r24, 0x01	; 1
    bd9c:	80 93 6e 09 	sts	0x096E, r24	; 0x80096e <player+0xd>
player.touchground = false;
    bda0:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xa>
player.jumpreleased = false;
    bda4:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xe>
player.jumpcounter++ ; 
    bda8:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xf>
    bdac:	8f 5f       	subi	r24, 0xFF	; 255
    bdae:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xf>
TriggerFx(4,0xff,true);
    bdb2:	41 e0       	ldi	r20, 0x01	; 1
    bdb4:	6f ef       	ldi	r22, 0xFF	; 255
    bdb6:	84 e0       	ldi	r24, 0x04	; 4
    bdb8:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
};
};

oldx = player.x;
    bdbc:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <player>
    bdc0:	30 91 62 09 	lds	r19, 0x0962	; 0x800962 <player+0x1>
    bdc4:	30 93 87 09 	sts	0x0987, r19	; 0x800987 <oldx+0x1>
    bdc8:	20 93 86 09 	sts	0x0986, r18	; 0x800986 <oldx>
oldy = player.y;
    bdcc:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bdd0:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bdd4:	70 93 fd 09 	sts	0x09FD, r23	; 0x8009fd <oldy+0x1>
    bdd8:	60 93 fc 09 	sts	0x09FC, r22	; 0x8009fc <oldy>
if (player.jumpcounter > 0 &&  player.jumpcounter <= 25 )  player.yimpulse = -4;
    bddc:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xf>
    bde0:	9f ef       	ldi	r25, 0xFF	; 255
    bde2:	98 0f       	add	r25, r24
    bde4:	99 31       	cpi	r25, 0x19	; 25
    bde6:	18 f4       	brcc	.+6      	; 0xbdee <moveplayer+0x120>
    bde8:	9c ef       	ldi	r25, 0xFC	; 252
    bdea:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0xc>
if (player.jumpcounter > 25 &&  player.jumpcounter <= 36 )  player.yimpulse = -3;   
    bdee:	96 ee       	ldi	r25, 0xE6	; 230
    bdf0:	98 0f       	add	r25, r24
    bdf2:	9b 30       	cpi	r25, 0x0B	; 11
    bdf4:	18 f4       	brcc	.+6      	; 0xbdfc <moveplayer+0x12e>
    bdf6:	9d ef       	ldi	r25, 0xFD	; 253
    bdf8:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0xc>
if (player.jumpcounter > 36 &&  player.jumpcounter <= 40 ) player.yimpulse = -2;   
    bdfc:	9b ed       	ldi	r25, 0xDB	; 219
    bdfe:	98 0f       	add	r25, r24
    be00:	94 30       	cpi	r25, 0x04	; 4
    be02:	18 f4       	brcc	.+6      	; 0xbe0a <moveplayer+0x13c>
    be04:	9e ef       	ldi	r25, 0xFE	; 254
    be06:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0xc>
if (player.jumpcounter > 40 &&  player.jumpcounter <= 46 ) player.yimpulse = -1;  
    be0a:	97 ed       	ldi	r25, 0xD7	; 215
    be0c:	98 0f       	add	r25, r24
    be0e:	96 30       	cpi	r25, 0x06	; 6
    be10:	20 f4       	brcc	.+8      	; 0xbe1a <moveplayer+0x14c>
    be12:	9f ef       	ldi	r25, 0xFF	; 255
    be14:	90 93 6d 09 	sts	0x096D, r25	; 0x80096d <player+0xc>
    be18:	02 c0       	rjmp	.+4      	; 0xbe1e <moveplayer+0x150>
if ( player.jumpcounter > 0 ) player.jumpcounter++;
    be1a:	88 23       	and	r24, r24
    be1c:	19 f0       	breq	.+6      	; 0xbe24 <moveplayer+0x156>
    be1e:	8f 5f       	subi	r24, 0xFF	; 255
    be20:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xf>
if ( player.jumpcounter > 46 ) player.jumpcounter = 0;
    be24:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xf>
    be28:	8f 32       	cpi	r24, 0x2F	; 47
    be2a:	10 f0       	brcs	.+4      	; 0xbe30 <moveplayer+0x162>
    be2c:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
player.x = player.x + player.ximpulse;
    be30:	80 91 6c 09 	lds	r24, 0x096C	; 0x80096c <player+0xb>
    be34:	a9 01       	movw	r20, r18
    be36:	48 0f       	add	r20, r24
    be38:	51 1d       	adc	r21, r1
    be3a:	87 fd       	sbrc	r24, 7
    be3c:	5a 95       	dec	r21
    be3e:	ca 01       	movw	r24, r20
    be40:	50 93 62 09 	sts	0x0962, r21	; 0x800962 <player+0x1>
    be44:	40 93 61 09 	sts	0x0961, r20	; 0x800961 <player>
player.y = player.y + player.yimpulse + gravity ;
    be48:	40 91 6d 09 	lds	r20, 0x096D	; 0x80096d <player+0xc>
    be4c:	64 0f       	add	r22, r20
    be4e:	71 1d       	adc	r23, r1
    be50:	47 fd       	sbrc	r20, 7
    be52:	7a 95       	dec	r23
    be54:	6e 5f       	subi	r22, 0xFE	; 254
    be56:	7f 4f       	sbci	r23, 0xFF	; 255
    be58:	70 93 64 09 	sts	0x0964, r23	; 0x800964 <player+0x3>
    be5c:	60 93 63 09 	sts	0x0963, r22	; 0x800963 <player+0x2>
if (player.x > oldx ) { player.aniframe++;player.direction = 'r';};
    be60:	28 17       	cp	r18, r24
    be62:	39 07       	cpc	r19, r25
    be64:	3c f4       	brge	.+14     	; 0xbe74 <moveplayer+0x1a6>
    be66:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x10>
    be6a:	2f 5f       	subi	r18, 0xFF	; 255
    be6c:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x10>
    be70:	22 e7       	ldi	r18, 0x72	; 114
    be72:	09 c0       	rjmp	.+18     	; 0xbe86 <moveplayer+0x1b8>
if (player.x < oldx ) { player.aniframe++;player.direction = 'l';};
    be74:	82 17       	cp	r24, r18
    be76:	93 07       	cpc	r25, r19
    be78:	4c f4       	brge	.+18     	; 0xbe8c <moveplayer+0x1be>
    be7a:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x10>
    be7e:	2f 5f       	subi	r18, 0xFF	; 255
    be80:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x10>
    be84:	2c e6       	ldi	r18, 0x6C	; 108
    be86:	20 93 68 09 	sts	0x0968, r18	; 0x800968 <player+0x7>
    be8a:	05 c0       	rjmp	.+10     	; 0xbe96 <moveplayer+0x1c8>
if (player.x == oldx  ) { player.aniframe = 0;};
    be8c:	28 17       	cp	r18, r24
    be8e:	39 07       	cpc	r19, r25
    be90:	11 f4       	brne	.+4      	; 0xbe96 <moveplayer+0x1c8>
    be92:	10 92 71 09 	sts	0x0971, r1	; 0x800971 <player+0x10>
if (player.aniframe > 0 ) player.aniframe++;
    be96:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x10>
    be9a:	22 23       	and	r18, r18
    be9c:	19 f0       	breq	.+6      	; 0xbea4 <moveplayer+0x1d6>
    be9e:	2f 5f       	subi	r18, 0xFF	; 255
    bea0:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x10>
if (player.aniframe>24) player.aniframe = 1;
    bea4:	20 91 71 09 	lds	r18, 0x0971	; 0x800971 <player+0x10>
    bea8:	29 31       	cpi	r18, 0x19	; 25
    beaa:	18 f0       	brcs	.+6      	; 0xbeb2 <moveplayer+0x1e4>
    beac:	21 e0       	ldi	r18, 0x01	; 1
    beae:	20 93 71 09 	sts	0x0971, r18	; 0x800971 <player+0x10>
checkBanana(player.x + 4, player.y ,1);  
    beb2:	41 e0       	ldi	r20, 0x01	; 1
    beb4:	50 e0       	ldi	r21, 0x00	; 0
    beb6:	04 96       	adiw	r24, 0x04	; 4
    beb8:	0e 94 cd 57 	call	0xaf9a	; 0xaf9a <checkBanana>
checkcollide( player.x, player.y - 4 ,1);
    bebc:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bec0:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bec4:	64 50       	subi	r22, 0x04	; 4
    bec6:	71 09       	sbc	r23, r1
    bec8:	41 e0       	ldi	r20, 0x01	; 1
    beca:	50 e0       	ldi	r21, 0x00	; 0
    becc:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bed0:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bed4:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
checkcollide( player.x -3, player.y - 4 ,3);
    bed8:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bedc:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bee0:	64 50       	subi	r22, 0x04	; 4
    bee2:	71 09       	sbc	r23, r1
    bee4:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bee8:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    beec:	43 e0       	ldi	r20, 0x03	; 3
    beee:	50 e0       	ldi	r21, 0x00	; 0
    bef0:	03 97       	sbiw	r24, 0x03	; 3
    bef2:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
checkcollide( player.x +4, player.y - 4 ,3);
    bef6:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    befa:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    befe:	64 50       	subi	r22, 0x04	; 4
    bf00:	71 09       	sbc	r23, r1
    bf02:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bf06:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bf0a:	43 e0       	ldi	r20, 0x03	; 3
    bf0c:	50 e0       	ldi	r21, 0x00	; 0
    bf0e:	04 96       	adiw	r24, 0x04	; 4
    bf10:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
    bf14:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bf18:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bf1c:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    bf20:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    bf24:	68 17       	cp	r22, r24
    bf26:	79 07       	cpc	r23, r25
    bf28:	54 f4       	brge	.+20     	; 0xbf3e <moveplayer+0x270>
    bf2a:	66 51       	subi	r22, 0x16	; 22
    bf2c:	71 09       	sbc	r23, r1
    bf2e:	42 e0       	ldi	r20, 0x02	; 2
    bf30:	50 e0       	ldi	r21, 0x00	; 0
    bf32:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bf36:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bf3a:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
if (player.y > oldy )  player.touchground = false; 
    bf3e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bf42:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bf46:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    bf4a:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    bf4e:	86 17       	cp	r24, r22
    bf50:	97 07       	cpc	r25, r23
    bf52:	8c f5       	brge	.+98     	; 0xbfb6 <moveplayer+0x2e8>
    bf54:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xa>
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
    bf58:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bf5c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bf60:	40 e0       	ldi	r20, 0x00	; 0
    bf62:	50 e0       	ldi	r21, 0x00	; 0
    bf64:	03 97       	sbiw	r24, 0x03	; 3
    bf66:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    bf6a:	80 ff       	sbrs	r24, 0
    bf6c:	15 c0       	rjmp	.+42     	; 0xbf98 <moveplayer+0x2ca>
    bf6e:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    bf72:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    bf76:	97 fd       	sbrc	r25, 7
    bf78:	0f 96       	adiw	r24, 0x0f	; 15
    bf7a:	80 7f       	andi	r24, 0xF0	; 240
    bf7c:	01 97       	sbiw	r24, 0x01	; 1
    bf7e:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    bf82:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    bf86:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
    bf8a:	81 e0       	ldi	r24, 0x01	; 1
    bf8c:	80 93 6b 09 	sts	0x096B, r24	; 0x80096b <player+0xa>
    bf90:	87 e7       	ldi	r24, 0x77	; 119
    bf92:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
    bf96:	0f c0       	rjmp	.+30     	; 0xbfb6 <moveplayer+0x2e8>
    bf98:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bf9c:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bfa0:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bfa4:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bfa8:	40 e0       	ldi	r20, 0x00	; 0
    bfaa:	50 e0       	ldi	r21, 0x00	; 0
    bfac:	04 96       	adiw	r24, 0x04	; 4
    bfae:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    bfb2:	80 fd       	sbrc	r24, 0
    bfb4:	dc cf       	rjmp	.-72     	; 0xbf6e <moveplayer+0x2a0>
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    bfb6:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    bfba:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    bfbe:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    bfc2:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    bfc6:	68 17       	cp	r22, r24
    bfc8:	79 07       	cpc	r23, r25
    bfca:	74 f5       	brge	.+92     	; 0xc028 <moveplayer+0x35a>
    bfcc:	65 51       	subi	r22, 0x15	; 21
    bfce:	71 09       	sbc	r23, r1
    bfd0:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    bfd4:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    bfd8:	40 e0       	ldi	r20, 0x00	; 0
    bfda:	50 e0       	ldi	r21, 0x00	; 0
    bfdc:	03 97       	sbiw	r24, 0x03	; 3
    bfde:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    bfe2:	80 ff       	sbrs	r24, 0
    bfe4:	10 c0       	rjmp	.+32     	; 0xc006 <moveplayer+0x338>
    bfe6:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    bfea:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    bfee:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    bff2:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
    bff6:	10 92 70 09 	sts	0x0970, r1	; 0x800970 <player+0xf>
                                                                                                                                  TriggerFx(5,0xff,true);
    bffa:	41 e0       	ldi	r20, 0x01	; 1
    bffc:	6f ef       	ldi	r22, 0xFF	; 255
    bffe:	85 e0       	ldi	r24, 0x05	; 5
    c000:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    c004:	11 c0       	rjmp	.+34     	; 0xc028 <moveplayer+0x35a>
checkcollide( player.x +4, player.y - 4 ,3);

if (player.y < oldy ) checkcollide( player.x, player.y - 22 ,2);
if (player.y > oldy )  player.touchground = false; 
if (player.y > oldy ) if (checkcollide( player.x - 3 , player.y,     0 )&1 || checkcollide( player.x + 4 , player.y     ,0 )&1) { player.y = ( player.y / 16 ) * 16 - 1;player.jumping = false; player.touchground = true;player.action = 'w' ;};
if (player.y < oldy ) if (checkcollide( player.x - 3 , player.y -21, 0 )&1 || checkcollide( player.x + 4 , player.y - 21,0 )&1)  { player.y = oldy;player.jumpcounter = 0;
    c006:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c00a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c00e:	65 51       	subi	r22, 0x15	; 21
    c010:	71 09       	sbc	r23, r1
    c012:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c016:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c01a:	40 e0       	ldi	r20, 0x00	; 0
    c01c:	50 e0       	ldi	r21, 0x00	; 0
    c01e:	04 96       	adiw	r24, 0x04	; 4
    c020:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c024:	80 fd       	sbrc	r24, 0
    c026:	df cf       	rjmp	.-66     	; 0xbfe6 <moveplayer+0x318>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player.x > oldx ) if (checkcollide( player.x + 5 , player.y - 3 ,0 )&1 || checkcollide( player.x + 5 , player.y - 20,0 )&1)  player.x = oldx;  
    c028:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c02c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c030:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    c034:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    c038:	28 17       	cp	r18, r24
    c03a:	39 07       	cpc	r19, r25
    c03c:	3c f5       	brge	.+78     	; 0xc08c <moveplayer+0x3be>
    c03e:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c042:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c046:	63 50       	subi	r22, 0x03	; 3
    c048:	71 09       	sbc	r23, r1
    c04a:	40 e0       	ldi	r20, 0x00	; 0
    c04c:	50 e0       	ldi	r21, 0x00	; 0
    c04e:	05 96       	adiw	r24, 0x05	; 5
    c050:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c054:	80 ff       	sbrs	r24, 0
    c056:	09 c0       	rjmp	.+18     	; 0xc06a <moveplayer+0x39c>
    c058:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <oldx>
    c05c:	90 91 87 09 	lds	r25, 0x0987	; 0x800987 <oldx+0x1>
    c060:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c064:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c068:	11 c0       	rjmp	.+34     	; 0xc08c <moveplayer+0x3be>
    c06a:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c06e:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c072:	64 51       	subi	r22, 0x14	; 20
    c074:	71 09       	sbc	r23, r1
    c076:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c07a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c07e:	40 e0       	ldi	r20, 0x00	; 0
    c080:	50 e0       	ldi	r21, 0x00	; 0
    c082:	05 96       	adiw	r24, 0x05	; 5
    c084:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c088:	80 fd       	sbrc	r24, 0
    c08a:	e6 cf       	rjmp	.-52     	; 0xc058 <moveplayer+0x38a>
if (player.x < oldx ) if (checkcollide( player.x - 4 , player.y - 3 ,0 )&1 || checkcollide( player.x - 4 , player.y - 20,0 )&1)  player.x = oldx; 
    c08c:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c090:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c094:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    c098:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    c09c:	82 17       	cp	r24, r18
    c09e:	93 07       	cpc	r25, r19
    c0a0:	3c f5       	brge	.+78     	; 0xc0f0 <moveplayer+0x422>
    c0a2:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c0a6:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c0aa:	63 50       	subi	r22, 0x03	; 3
    c0ac:	71 09       	sbc	r23, r1
    c0ae:	40 e0       	ldi	r20, 0x00	; 0
    c0b0:	50 e0       	ldi	r21, 0x00	; 0
    c0b2:	04 97       	sbiw	r24, 0x04	; 4
    c0b4:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c0b8:	80 ff       	sbrs	r24, 0
    c0ba:	09 c0       	rjmp	.+18     	; 0xc0ce <moveplayer+0x400>
    c0bc:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <oldx>
    c0c0:	90 91 87 09 	lds	r25, 0x0987	; 0x800987 <oldx+0x1>
    c0c4:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c0c8:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c0cc:	11 c0       	rjmp	.+34     	; 0xc0f0 <moveplayer+0x422>
    c0ce:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c0d2:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c0d6:	64 51       	subi	r22, 0x14	; 20
    c0d8:	71 09       	sbc	r23, r1
    c0da:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c0de:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c0e2:	40 e0       	ldi	r20, 0x00	; 0
    c0e4:	50 e0       	ldi	r21, 0x00	; 0
    c0e6:	04 97       	sbiw	r24, 0x04	; 4
    c0e8:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c0ec:	80 fd       	sbrc	r24, 0
    c0ee:	e6 cf       	rjmp	.-52     	; 0xc0bc <moveplayer+0x3ee>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,1 );
    c0f0:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c0f4:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c0f8:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c0fc:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c100:	86 17       	cp	r24, r22
    c102:	97 07       	cpc	r25, r23
    c104:	4c f4       	brge	.+18     	; 0xc118 <moveplayer+0x44a>
    c106:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c10a:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c10e:	41 e0       	ldi	r20, 0x01	; 1
    c110:	50 e0       	ldi	r21, 0x00	; 0
    c112:	04 96       	adiw	r24, 0x04	; 4
    c114:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player.y > oldy )   checkmonster(player.x - 4, player.y ,1 );
    c118:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c11c:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c120:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c124:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c128:	86 17       	cp	r24, r22
    c12a:	97 07       	cpc	r25, r23
    c12c:	4c f4       	brge	.+18     	; 0xc140 <moveplayer+0x472>
    c12e:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c132:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c136:	41 e0       	ldi	r20, 0x01	; 1
    c138:	50 e0       	ldi	r21, 0x00	; 0
    c13a:	04 97       	sbiw	r24, 0x04	; 4
    c13c:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player.y > oldy )   checkmonster(player.x , player.y ,1 );
    c140:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c144:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c148:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c14c:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c150:	86 17       	cp	r24, r22
    c152:	97 07       	cpc	r25, r23
    c154:	44 f4       	brge	.+16     	; 0xc166 <moveplayer+0x498>
    c156:	41 e0       	ldi	r20, 0x01	; 1
    c158:	50 e0       	ldi	r21, 0x00	; 0
    c15a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c15e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c162:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player.x +4, player.y -3,0 );
    c166:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c16a:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c16e:	63 50       	subi	r22, 0x03	; 3
    c170:	71 09       	sbc	r23, r1
    c172:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c176:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c17a:	40 e0       	ldi	r20, 0x00	; 0
    c17c:	50 e0       	ldi	r21, 0x00	; 0
    c17e:	04 96       	adiw	r24, 0x04	; 4
    c180:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player.x +4, player.y -19,0 );
    c184:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c188:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c18c:	63 51       	subi	r22, 0x13	; 19
    c18e:	71 09       	sbc	r23, r1
    c190:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c194:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c198:	40 e0       	ldi	r20, 0x00	; 0
    c19a:	50 e0       	ldi	r21, 0x00	; 0
    c19c:	04 96       	adiw	r24, 0x04	; 4
    c19e:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player.x -3, player.y -3 ,0);
    c1a2:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c1a6:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c1aa:	63 50       	subi	r22, 0x03	; 3
    c1ac:	71 09       	sbc	r23, r1
    c1ae:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c1b2:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c1b6:	40 e0       	ldi	r20, 0x00	; 0
    c1b8:	50 e0       	ldi	r21, 0x00	; 0
    c1ba:	03 97       	sbiw	r24, 0x03	; 3
    c1bc:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player.x -3, player.y -19 ,0);  
    c1c0:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c1c4:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c1c8:	63 51       	subi	r22, 0x13	; 19
    c1ca:	71 09       	sbc	r23, r1
    c1cc:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c1d0:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c1d4:	40 e0       	ldi	r20, 0x00	; 0
    c1d6:	50 e0       	ldi	r21, 0x00	; 0
    c1d8:	03 97       	sbiw	r24, 0x03	; 3
    c1da:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player.x , player.y -22 ,0);
    c1de:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c1e2:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c1e6:	66 51       	subi	r22, 0x16	; 22
    c1e8:	71 09       	sbc	r23, r1
    c1ea:	40 e0       	ldi	r20, 0x00	; 0
    c1ec:	50 e0       	ldi	r21, 0x00	; 0
    c1ee:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c1f2:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c1f6:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player.y > oldy )   checkmonster(player.x + 4, player.y ,0 );
    c1fa:	60 91 63 09 	lds	r22, 0x0963	; 0x800963 <player+0x2>
    c1fe:	70 91 64 09 	lds	r23, 0x0964	; 0x800964 <player+0x3>
    c202:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c206:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c20a:	86 17       	cp	r24, r22
    c20c:	97 07       	cpc	r25, r23
    c20e:	4c f4       	brge	.+18     	; 0xc222 <moveplayer+0x554>
    c210:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c214:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c218:	40 e0       	ldi	r20, 0x00	; 0
    c21a:	50 e0       	ldi	r21, 0x00	; 0
    c21c:	04 96       	adiw	r24, 0x04	; 4
    c21e:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
player.ximpulse = 0;    
    c222:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xb>
player.yimpulse = 0;
    c226:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
if ( player.x < 8 ) player.x = 8;
    c22a:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c22e:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c232:	08 97       	sbiw	r24, 0x08	; 8
    c234:	34 f4       	brge	.+12     	; 0xc242 <moveplayer+0x574>
    c236:	88 e0       	ldi	r24, 0x08	; 8
    c238:	90 e0       	ldi	r25, 0x00	; 0
    c23a:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c23e:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
if ( player.x > 232 ) player.x = 232;    
    c242:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    c246:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    c24a:	89 3e       	cpi	r24, 0xE9	; 233
    c24c:	91 05       	cpc	r25, r1
    c24e:	5c f0       	brlt	.+22     	; 0xc266 <moveplayer+0x598>
    c250:	88 ee       	ldi	r24, 0xE8	; 232
    c252:	90 e0       	ldi	r25, 0x00	; 0
    c254:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    c258:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
    c25c:	04 c0       	rjmp	.+8      	; 0xc266 <moveplayer+0x598>
	makeBanana( player.x + 4, player.y ,1);
	};
};    


if (joy&BTN_A && player.touchground && player.jumpreleased) {
    c25e:	cd 2b       	or	r28, r29
    c260:	09 f0       	breq	.+2      	; 0xc264 <moveplayer+0x596>
    c262:	92 cd       	rjmp	.-1244   	; 0xbd88 <moveplayer+0xba>
    c264:	ab cd       	rjmp	.-1194   	; 0xbdbc <moveplayer+0xee>

    

return;
  
}
    c266:	df 91       	pop	r29
    c268:	cf 91       	pop	r28
    c26a:	08 95       	ret

0000c26c <moveplayer2>:

void moveplayer2()
{
unsigned int joy=ReadJoypad(1);
    c26c:	81 e0       	ldi	r24, 0x01	; 1
    c26e:	0e 94 65 47 	call	0x8eca	; 0x8eca <ReadJoypad>
//if (joy&BTN_B) TriggerFx(6,0xff,true);
if (introplaying && joy&BTN_START) { introplaying = false;return;}; 
    c272:	20 91 72 09 	lds	r18, 0x0972	; 0x800972 <introplaying>
    c276:	22 23       	and	r18, r18
    c278:	29 f0       	breq	.+10     	; 0xc284 <moveplayer2+0x18>
    c27a:	83 ff       	sbrs	r24, 3
    c27c:	4d c0       	rjmp	.+154    	; 0xc318 <moveplayer2+0xac>
    c27e:	10 92 72 09 	sts	0x0972, r1	; 0x800972 <introplaying>
    c282:	08 95       	ret
if (!introplaying)
{

 
if (joy&BTN_LEFT) { 
    c284:	86 ff       	sbrs	r24, 6
    c286:	0f c0       	rjmp	.+30     	; 0xc2a6 <moveplayer2+0x3a>
player2.direction = 'l';
    c288:	2c e6       	ldi	r18, 0x6C	; 108
    c28a:	20 93 a3 09 	sts	0x09A3, r18	; 0x8009a3 <player2+0x7>
player2.action = 'w';
    c28e:	27 e7       	ldi	r18, 0x77	; 119
    c290:	20 93 a2 09 	sts	0x09A2, r18	; 0x8009a2 <player2+0x6>
player2.facing = 1;
    c294:	21 e0       	ldi	r18, 0x01	; 1
    c296:	30 e0       	ldi	r19, 0x00	; 0
    c298:	30 93 a1 09 	sts	0x09A1, r19	; 0x8009a1 <player2+0x5>
    c29c:	20 93 a0 09 	sts	0x09A0, r18	; 0x8009a0 <player2+0x4>
player2.ximpulse = -1; 
    c2a0:	2f ef       	ldi	r18, 0xFF	; 255
    c2a2:	20 93 a7 09 	sts	0x09A7, r18	; 0x8009a7 <player2+0xb>
};
if (joy&BTN_RIGHT) {
    c2a6:	87 ff       	sbrs	r24, 7
    c2a8:	0d c0       	rjmp	.+26     	; 0xc2c4 <moveplayer2+0x58>
player2.direction = 'r';
    c2aa:	22 e7       	ldi	r18, 0x72	; 114
    c2ac:	20 93 a3 09 	sts	0x09A3, r18	; 0x8009a3 <player2+0x7>
player2.action = 'w';
    c2b0:	27 e7       	ldi	r18, 0x77	; 119
    c2b2:	20 93 a2 09 	sts	0x09A2, r18	; 0x8009a2 <player2+0x6>
player2.facing = 0;
    c2b6:	10 92 a1 09 	sts	0x09A1, r1	; 0x8009a1 <player2+0x5>
    c2ba:	10 92 a0 09 	sts	0x09A0, r1	; 0x8009a0 <player2+0x4>
player2.ximpulse = 1; 
    c2be:	21 e0       	ldi	r18, 0x01	; 1
    c2c0:	20 93 a7 09 	sts	0x09A7, r18	; 0x8009a7 <player2+0xb>
};
if ( !(joy&BTN_A) ) {
    c2c4:	90 fd       	sbrc	r25, 0
    c2c6:	0a c0       	rjmp	.+20     	; 0xc2dc <moveplayer2+0x70>
player2.yimpulse = 0;
    c2c8:	10 92 a8 09 	sts	0x09A8, r1	; 0x8009a8 <player2+0xc>
player2.jumpreleased = true;
    c2cc:	81 e0       	ldi	r24, 0x01	; 1
    c2ce:	80 93 aa 09 	sts	0x09AA, r24	; 0x8009aa <player2+0xe>
player2.jumping = false;
    c2d2:	10 92 a9 09 	sts	0x09A9, r1	; 0x8009a9 <player2+0xd>
player2.jumpcounter = 0;
    c2d6:	10 92 ab 09 	sts	0x09AB, r1	; 0x8009ab <player2+0xf>
    c2da:	1e c0       	rjmp	.+60     	; 0xc318 <moveplayer2+0xac>
};   


if (joy&BTN_A && player2.touchground && player2.jumpreleased) {
    c2dc:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <player2+0xa>
    c2e0:	88 23       	and	r24, r24
    c2e2:	d1 f0       	breq	.+52     	; 0xc318 <moveplayer2+0xac>
    c2e4:	80 91 aa 09 	lds	r24, 0x09AA	; 0x8009aa <player2+0xe>
    c2e8:	88 23       	and	r24, r24
    c2ea:	b1 f0       	breq	.+44     	; 0xc318 <moveplayer2+0xac>
player2.action = 'j';
    c2ec:	8a e6       	ldi	r24, 0x6A	; 106
    c2ee:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <player2+0x6>
player2.yimpulse = 0;
    c2f2:	10 92 a8 09 	sts	0x09A8, r1	; 0x8009a8 <player2+0xc>
player2.jumping = true;
    c2f6:	81 e0       	ldi	r24, 0x01	; 1
    c2f8:	80 93 a9 09 	sts	0x09A9, r24	; 0x8009a9 <player2+0xd>
player2.touchground = false;
    c2fc:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <player2+0xa>
player2.jumpreleased = false;
    c300:	10 92 aa 09 	sts	0x09AA, r1	; 0x8009aa <player2+0xe>
player2.jumpcounter++ ; 
    c304:	80 91 ab 09 	lds	r24, 0x09AB	; 0x8009ab <player2+0xf>
    c308:	8f 5f       	subi	r24, 0xFF	; 255
    c30a:	80 93 ab 09 	sts	0x09AB, r24	; 0x8009ab <player2+0xf>
TriggerFx(4,0xff,true);
    c30e:	41 e0       	ldi	r20, 0x01	; 1
    c310:	6f ef       	ldi	r22, 0xFF	; 255
    c312:	84 e0       	ldi	r24, 0x04	; 4
    c314:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
};
};

oldx = player2.x;
    c318:	20 91 9c 09 	lds	r18, 0x099C	; 0x80099c <player2>
    c31c:	30 91 9d 09 	lds	r19, 0x099D	; 0x80099d <player2+0x1>
    c320:	30 93 87 09 	sts	0x0987, r19	; 0x800987 <oldx+0x1>
    c324:	20 93 86 09 	sts	0x0986, r18	; 0x800986 <oldx>
oldy = player2.y;
    c328:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c32c:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c330:	70 93 fd 09 	sts	0x09FD, r23	; 0x8009fd <oldy+0x1>
    c334:	60 93 fc 09 	sts	0x09FC, r22	; 0x8009fc <oldy>
if (player2.jumpcounter > 0 &&  player2.jumpcounter <= 25 )  player2.yimpulse = -4;
    c338:	80 91 ab 09 	lds	r24, 0x09AB	; 0x8009ab <player2+0xf>
    c33c:	9f ef       	ldi	r25, 0xFF	; 255
    c33e:	98 0f       	add	r25, r24
    c340:	99 31       	cpi	r25, 0x19	; 25
    c342:	18 f4       	brcc	.+6      	; 0xc34a <moveplayer2+0xde>
    c344:	9c ef       	ldi	r25, 0xFC	; 252
    c346:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <player2+0xc>
if (player2.jumpcounter > 25 &&  player2.jumpcounter <= 36 )  player2.yimpulse = -3;   
    c34a:	96 ee       	ldi	r25, 0xE6	; 230
    c34c:	98 0f       	add	r25, r24
    c34e:	9b 30       	cpi	r25, 0x0B	; 11
    c350:	18 f4       	brcc	.+6      	; 0xc358 <moveplayer2+0xec>
    c352:	9d ef       	ldi	r25, 0xFD	; 253
    c354:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <player2+0xc>
if (player2.jumpcounter > 36 &&  player2.jumpcounter <= 40 ) player2.yimpulse = -2;   
    c358:	9b ed       	ldi	r25, 0xDB	; 219
    c35a:	98 0f       	add	r25, r24
    c35c:	94 30       	cpi	r25, 0x04	; 4
    c35e:	18 f4       	brcc	.+6      	; 0xc366 <moveplayer2+0xfa>
    c360:	9e ef       	ldi	r25, 0xFE	; 254
    c362:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <player2+0xc>
if (player2.jumpcounter > 40 &&  player2.jumpcounter <= 46 ) player2.yimpulse = -1;  
    c366:	97 ed       	ldi	r25, 0xD7	; 215
    c368:	98 0f       	add	r25, r24
    c36a:	96 30       	cpi	r25, 0x06	; 6
    c36c:	20 f4       	brcc	.+8      	; 0xc376 <moveplayer2+0x10a>
    c36e:	9f ef       	ldi	r25, 0xFF	; 255
    c370:	90 93 a8 09 	sts	0x09A8, r25	; 0x8009a8 <player2+0xc>
    c374:	02 c0       	rjmp	.+4      	; 0xc37a <moveplayer2+0x10e>
if ( player2.jumpcounter > 0 ) player2.jumpcounter++;
    c376:	88 23       	and	r24, r24
    c378:	19 f0       	breq	.+6      	; 0xc380 <moveplayer2+0x114>
    c37a:	8f 5f       	subi	r24, 0xFF	; 255
    c37c:	80 93 ab 09 	sts	0x09AB, r24	; 0x8009ab <player2+0xf>
if ( player2.jumpcounter > 46 ) player2.jumpcounter = 0;
    c380:	80 91 ab 09 	lds	r24, 0x09AB	; 0x8009ab <player2+0xf>
    c384:	8f 32       	cpi	r24, 0x2F	; 47
    c386:	10 f0       	brcs	.+4      	; 0xc38c <moveplayer2+0x120>
    c388:	10 92 ab 09 	sts	0x09AB, r1	; 0x8009ab <player2+0xf>
player2.x = player2.x + player2.ximpulse;
    c38c:	80 91 a7 09 	lds	r24, 0x09A7	; 0x8009a7 <player2+0xb>
    c390:	a9 01       	movw	r20, r18
    c392:	48 0f       	add	r20, r24
    c394:	51 1d       	adc	r21, r1
    c396:	87 fd       	sbrc	r24, 7
    c398:	5a 95       	dec	r21
    c39a:	ca 01       	movw	r24, r20
    c39c:	50 93 9d 09 	sts	0x099D, r21	; 0x80099d <player2+0x1>
    c3a0:	40 93 9c 09 	sts	0x099C, r20	; 0x80099c <player2>
player2.y = player2.y + player2.yimpulse + gravity ;
    c3a4:	40 91 a8 09 	lds	r20, 0x09A8	; 0x8009a8 <player2+0xc>
    c3a8:	64 0f       	add	r22, r20
    c3aa:	71 1d       	adc	r23, r1
    c3ac:	47 fd       	sbrc	r20, 7
    c3ae:	7a 95       	dec	r23
    c3b0:	6e 5f       	subi	r22, 0xFE	; 254
    c3b2:	7f 4f       	sbci	r23, 0xFF	; 255
    c3b4:	70 93 9f 09 	sts	0x099F, r23	; 0x80099f <player2+0x3>
    c3b8:	60 93 9e 09 	sts	0x099E, r22	; 0x80099e <player2+0x2>
if (player2.x > oldx ) { player2.aniframe++;player2.direction = 'r';};
    c3bc:	28 17       	cp	r18, r24
    c3be:	39 07       	cpc	r19, r25
    c3c0:	3c f4       	brge	.+14     	; 0xc3d0 <moveplayer2+0x164>
    c3c2:	20 91 ac 09 	lds	r18, 0x09AC	; 0x8009ac <player2+0x10>
    c3c6:	2f 5f       	subi	r18, 0xFF	; 255
    c3c8:	20 93 ac 09 	sts	0x09AC, r18	; 0x8009ac <player2+0x10>
    c3cc:	22 e7       	ldi	r18, 0x72	; 114
    c3ce:	09 c0       	rjmp	.+18     	; 0xc3e2 <moveplayer2+0x176>
if (player2.x < oldx ) { player2.aniframe++;player2.direction = 'l';};
    c3d0:	82 17       	cp	r24, r18
    c3d2:	93 07       	cpc	r25, r19
    c3d4:	4c f4       	brge	.+18     	; 0xc3e8 <moveplayer2+0x17c>
    c3d6:	20 91 ac 09 	lds	r18, 0x09AC	; 0x8009ac <player2+0x10>
    c3da:	2f 5f       	subi	r18, 0xFF	; 255
    c3dc:	20 93 ac 09 	sts	0x09AC, r18	; 0x8009ac <player2+0x10>
    c3e0:	2c e6       	ldi	r18, 0x6C	; 108
    c3e2:	20 93 a3 09 	sts	0x09A3, r18	; 0x8009a3 <player2+0x7>
    c3e6:	05 c0       	rjmp	.+10     	; 0xc3f2 <moveplayer2+0x186>
if (player2.x == oldx  ) { player2.aniframe = 0;};
    c3e8:	28 17       	cp	r18, r24
    c3ea:	39 07       	cpc	r19, r25
    c3ec:	11 f4       	brne	.+4      	; 0xc3f2 <moveplayer2+0x186>
    c3ee:	10 92 ac 09 	sts	0x09AC, r1	; 0x8009ac <player2+0x10>
if (player2.aniframe > 0 ) player2.aniframe++;
    c3f2:	20 91 ac 09 	lds	r18, 0x09AC	; 0x8009ac <player2+0x10>
    c3f6:	22 23       	and	r18, r18
    c3f8:	19 f0       	breq	.+6      	; 0xc400 <moveplayer2+0x194>
    c3fa:	2f 5f       	subi	r18, 0xFF	; 255
    c3fc:	20 93 ac 09 	sts	0x09AC, r18	; 0x8009ac <player2+0x10>
if (player2.aniframe>24) player2.aniframe = 1;
    c400:	20 91 ac 09 	lds	r18, 0x09AC	; 0x8009ac <player2+0x10>
    c404:	29 31       	cpi	r18, 0x19	; 25
    c406:	18 f0       	brcs	.+6      	; 0xc40e <moveplayer2+0x1a2>
    c408:	21 e0       	ldi	r18, 0x01	; 1
    c40a:	20 93 ac 09 	sts	0x09AC, r18	; 0x8009ac <player2+0x10>
checkBanana(player2.x + 4, player2.y ,1); 
    c40e:	41 e0       	ldi	r20, 0x01	; 1
    c410:	50 e0       	ldi	r21, 0x00	; 0
    c412:	04 96       	adiw	r24, 0x04	; 4
    c414:	0e 94 cd 57 	call	0xaf9a	; 0xaf9a <checkBanana>
checkcollide( player2.x, player2.y - 4 ,1);
    c418:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c41c:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c420:	64 50       	subi	r22, 0x04	; 4
    c422:	71 09       	sbc	r23, r1
    c424:	41 e0       	ldi	r20, 0x01	; 1
    c426:	50 e0       	ldi	r21, 0x00	; 0
    c428:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c42c:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c430:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
checkcollide( player2.x -3, player2.y - 4 ,3);
    c434:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c438:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c43c:	64 50       	subi	r22, 0x04	; 4
    c43e:	71 09       	sbc	r23, r1
    c440:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c444:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c448:	43 e0       	ldi	r20, 0x03	; 3
    c44a:	50 e0       	ldi	r21, 0x00	; 0
    c44c:	03 97       	sbiw	r24, 0x03	; 3
    c44e:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
checkcollide( player2.x +4, player2.y - 4 ,3);
    c452:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c456:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c45a:	64 50       	subi	r22, 0x04	; 4
    c45c:	71 09       	sbc	r23, r1
    c45e:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c462:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c466:	43 e0       	ldi	r20, 0x03	; 3
    c468:	50 e0       	ldi	r21, 0x00	; 0
    c46a:	04 96       	adiw	r24, 0x04	; 4
    c46c:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
    c470:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c474:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c478:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c47c:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c480:	68 17       	cp	r22, r24
    c482:	79 07       	cpc	r23, r25
    c484:	54 f4       	brge	.+20     	; 0xc49a <moveplayer2+0x22e>
    c486:	66 51       	subi	r22, 0x16	; 22
    c488:	71 09       	sbc	r23, r1
    c48a:	42 e0       	ldi	r20, 0x02	; 2
    c48c:	50 e0       	ldi	r21, 0x00	; 0
    c48e:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c492:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c496:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
if (player2.y > oldy )  player2.touchground = false; 
    c49a:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c49e:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c4a2:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c4a6:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c4aa:	86 17       	cp	r24, r22
    c4ac:	97 07       	cpc	r25, r23
    c4ae:	8c f5       	brge	.+98     	; 0xc512 <moveplayer2+0x2a6>
    c4b0:	10 92 a6 09 	sts	0x09A6, r1	; 0x8009a6 <player2+0xa>
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
    c4b4:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c4b8:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c4bc:	40 e0       	ldi	r20, 0x00	; 0
    c4be:	50 e0       	ldi	r21, 0x00	; 0
    c4c0:	03 97       	sbiw	r24, 0x03	; 3
    c4c2:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c4c6:	80 ff       	sbrs	r24, 0
    c4c8:	15 c0       	rjmp	.+42     	; 0xc4f4 <moveplayer2+0x288>
    c4ca:	80 91 9e 09 	lds	r24, 0x099E	; 0x80099e <player2+0x2>
    c4ce:	90 91 9f 09 	lds	r25, 0x099F	; 0x80099f <player2+0x3>
    c4d2:	97 fd       	sbrc	r25, 7
    c4d4:	0f 96       	adiw	r24, 0x0f	; 15
    c4d6:	80 7f       	andi	r24, 0xF0	; 240
    c4d8:	01 97       	sbiw	r24, 0x01	; 1
    c4da:	90 93 9f 09 	sts	0x099F, r25	; 0x80099f <player2+0x3>
    c4de:	80 93 9e 09 	sts	0x099E, r24	; 0x80099e <player2+0x2>
    c4e2:	10 92 a9 09 	sts	0x09A9, r1	; 0x8009a9 <player2+0xd>
    c4e6:	81 e0       	ldi	r24, 0x01	; 1
    c4e8:	80 93 a6 09 	sts	0x09A6, r24	; 0x8009a6 <player2+0xa>
    c4ec:	87 e7       	ldi	r24, 0x77	; 119
    c4ee:	80 93 a2 09 	sts	0x09A2, r24	; 0x8009a2 <player2+0x6>
    c4f2:	0f c0       	rjmp	.+30     	; 0xc512 <moveplayer2+0x2a6>
    c4f4:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c4f8:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c4fc:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c500:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c504:	40 e0       	ldi	r20, 0x00	; 0
    c506:	50 e0       	ldi	r21, 0x00	; 0
    c508:	04 96       	adiw	r24, 0x04	; 4
    c50a:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c50e:	80 fd       	sbrc	r24, 0
    c510:	dc cf       	rjmp	.-72     	; 0xc4ca <moveplayer2+0x25e>
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    c512:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c516:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c51a:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c51e:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c522:	68 17       	cp	r22, r24
    c524:	79 07       	cpc	r23, r25
    c526:	74 f5       	brge	.+92     	; 0xc584 <moveplayer2+0x318>
    c528:	65 51       	subi	r22, 0x15	; 21
    c52a:	71 09       	sbc	r23, r1
    c52c:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c530:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c534:	40 e0       	ldi	r20, 0x00	; 0
    c536:	50 e0       	ldi	r21, 0x00	; 0
    c538:	03 97       	sbiw	r24, 0x03	; 3
    c53a:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c53e:	80 ff       	sbrs	r24, 0
    c540:	10 c0       	rjmp	.+32     	; 0xc562 <moveplayer2+0x2f6>
    c542:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c546:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c54a:	90 93 9f 09 	sts	0x099F, r25	; 0x80099f <player2+0x3>
    c54e:	80 93 9e 09 	sts	0x099E, r24	; 0x80099e <player2+0x2>
    c552:	10 92 ab 09 	sts	0x09AB, r1	; 0x8009ab <player2+0xf>
                                                                                                                                  TriggerFx(5,0xff,true);
    c556:	41 e0       	ldi	r20, 0x01	; 1
    c558:	6f ef       	ldi	r22, 0xFF	; 255
    c55a:	85 e0       	ldi	r24, 0x05	; 5
    c55c:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    c560:	11 c0       	rjmp	.+34     	; 0xc584 <moveplayer2+0x318>
checkcollide( player2.x +4, player2.y - 4 ,3);

if (player2.y < oldy ) checkcollide( player2.x, player2.y - 22 ,2);
if (player2.y > oldy )  player2.touchground = false; 
if (player2.y > oldy ) if (checkcollide( player2.x - 3 , player2.y,     0 )&1 || checkcollide( player2.x + 4 , player2.y     ,0 )&1) { player2.y = ( player2.y / 16 ) * 16 - 1;player2.jumping = false; player2.touchground = true;player2.action = 'w' ;};
if (player2.y < oldy ) if (checkcollide( player2.x - 3 , player2.y -21, 0 )&1 || checkcollide( player2.x + 4 , player2.y - 21,0 )&1)  { player2.y = oldy;player2.jumpcounter = 0;
    c562:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c566:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c56a:	65 51       	subi	r22, 0x15	; 21
    c56c:	71 09       	sbc	r23, r1
    c56e:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c572:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c576:	40 e0       	ldi	r20, 0x00	; 0
    c578:	50 e0       	ldi	r21, 0x00	; 0
    c57a:	04 96       	adiw	r24, 0x04	; 4
    c57c:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c580:	80 fd       	sbrc	r24, 0
    c582:	df cf       	rjmp	.-66     	; 0xc542 <moveplayer2+0x2d6>
                                                                                                                                  TriggerFx(5,0xff,true);
                                                                                                                                 };    
if (player2.x > oldx ) if (checkcollide( player2.x + 5 , player2.y - 3 ,0 )&1 || checkcollide( player2.x + 5 , player2.y - 20,0 )&1)  player2.x = oldx;  
    c584:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c588:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c58c:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    c590:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    c594:	28 17       	cp	r18, r24
    c596:	39 07       	cpc	r19, r25
    c598:	3c f5       	brge	.+78     	; 0xc5e8 <moveplayer2+0x37c>
    c59a:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c59e:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c5a2:	63 50       	subi	r22, 0x03	; 3
    c5a4:	71 09       	sbc	r23, r1
    c5a6:	40 e0       	ldi	r20, 0x00	; 0
    c5a8:	50 e0       	ldi	r21, 0x00	; 0
    c5aa:	05 96       	adiw	r24, 0x05	; 5
    c5ac:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c5b0:	80 ff       	sbrs	r24, 0
    c5b2:	09 c0       	rjmp	.+18     	; 0xc5c6 <moveplayer2+0x35a>
    c5b4:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <oldx>
    c5b8:	90 91 87 09 	lds	r25, 0x0987	; 0x800987 <oldx+0x1>
    c5bc:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    c5c0:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
    c5c4:	11 c0       	rjmp	.+34     	; 0xc5e8 <moveplayer2+0x37c>
    c5c6:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c5ca:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c5ce:	64 51       	subi	r22, 0x14	; 20
    c5d0:	71 09       	sbc	r23, r1
    c5d2:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c5d6:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c5da:	40 e0       	ldi	r20, 0x00	; 0
    c5dc:	50 e0       	ldi	r21, 0x00	; 0
    c5de:	05 96       	adiw	r24, 0x05	; 5
    c5e0:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c5e4:	80 fd       	sbrc	r24, 0
    c5e6:	e6 cf       	rjmp	.-52     	; 0xc5b4 <moveplayer2+0x348>
if (player2.x < oldx ) if (checkcollide( player2.x - 4 , player2.y - 3 ,0 )&1 || checkcollide( player2.x - 4 , player2.y - 20,0 )&1)  player2.x = oldx; 
    c5e8:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c5ec:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c5f0:	20 91 86 09 	lds	r18, 0x0986	; 0x800986 <oldx>
    c5f4:	30 91 87 09 	lds	r19, 0x0987	; 0x800987 <oldx+0x1>
    c5f8:	82 17       	cp	r24, r18
    c5fa:	93 07       	cpc	r25, r19
    c5fc:	3c f5       	brge	.+78     	; 0xc64c <moveplayer2+0x3e0>
    c5fe:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c602:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c606:	63 50       	subi	r22, 0x03	; 3
    c608:	71 09       	sbc	r23, r1
    c60a:	40 e0       	ldi	r20, 0x00	; 0
    c60c:	50 e0       	ldi	r21, 0x00	; 0
    c60e:	04 97       	sbiw	r24, 0x04	; 4
    c610:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c614:	80 ff       	sbrs	r24, 0
    c616:	09 c0       	rjmp	.+18     	; 0xc62a <moveplayer2+0x3be>
    c618:	80 91 86 09 	lds	r24, 0x0986	; 0x800986 <oldx>
    c61c:	90 91 87 09 	lds	r25, 0x0987	; 0x800987 <oldx+0x1>
    c620:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    c624:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
    c628:	11 c0       	rjmp	.+34     	; 0xc64c <moveplayer2+0x3e0>
    c62a:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c62e:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c632:	64 51       	subi	r22, 0x14	; 20
    c634:	71 09       	sbc	r23, r1
    c636:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c63a:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c63e:	40 e0       	ldi	r20, 0x00	; 0
    c640:	50 e0       	ldi	r21, 0x00	; 0
    c642:	04 97       	sbiw	r24, 0x04	; 4
    c644:	0e 94 a9 58 	call	0xb152	; 0xb152 <checkcollide>
    c648:	80 fd       	sbrc	r24, 0
    c64a:	e6 cf       	rjmp	.-52     	; 0xc618 <moveplayer2+0x3ac>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,1 );
    c64c:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c650:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c654:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c658:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c65c:	86 17       	cp	r24, r22
    c65e:	97 07       	cpc	r25, r23
    c660:	4c f4       	brge	.+18     	; 0xc674 <moveplayer2+0x408>
    c662:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c666:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c66a:	41 e0       	ldi	r20, 0x01	; 1
    c66c:	50 e0       	ldi	r21, 0x00	; 0
    c66e:	04 96       	adiw	r24, 0x04	; 4
    c670:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x - 4, player2.y ,1 );
    c674:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c678:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c67c:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c680:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c684:	86 17       	cp	r24, r22
    c686:	97 07       	cpc	r25, r23
    c688:	4c f4       	brge	.+18     	; 0xc69c <moveplayer2+0x430>
    c68a:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c68e:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c692:	41 e0       	ldi	r20, 0x01	; 1
    c694:	50 e0       	ldi	r21, 0x00	; 0
    c696:	04 97       	sbiw	r24, 0x04	; 4
    c698:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x , player2.y ,1 );
    c69c:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c6a0:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c6a4:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c6a8:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c6ac:	86 17       	cp	r24, r22
    c6ae:	97 07       	cpc	r25, r23
    c6b0:	44 f4       	brge	.+16     	; 0xc6c2 <moveplayer2+0x456>
    c6b2:	41 e0       	ldi	r20, 0x01	; 1
    c6b4:	50 e0       	ldi	r21, 0x00	; 0
    c6b6:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c6ba:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c6be:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player2.x +4, player2.y -3,0 );
    c6c2:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c6c6:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c6ca:	63 50       	subi	r22, 0x03	; 3
    c6cc:	71 09       	sbc	r23, r1
    c6ce:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c6d2:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c6d6:	40 e0       	ldi	r20, 0x00	; 0
    c6d8:	50 e0       	ldi	r21, 0x00	; 0
    c6da:	04 96       	adiw	r24, 0x04	; 4
    c6dc:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player2.x +4, player2.y -19,0 );
    c6e0:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c6e4:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c6e8:	63 51       	subi	r22, 0x13	; 19
    c6ea:	71 09       	sbc	r23, r1
    c6ec:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c6f0:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c6f4:	40 e0       	ldi	r20, 0x00	; 0
    c6f6:	50 e0       	ldi	r21, 0x00	; 0
    c6f8:	04 96       	adiw	r24, 0x04	; 4
    c6fa:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player2.x -3, player2.y -3 ,0);
    c6fe:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c702:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c706:	63 50       	subi	r22, 0x03	; 3
    c708:	71 09       	sbc	r23, r1
    c70a:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c70e:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c712:	40 e0       	ldi	r20, 0x00	; 0
    c714:	50 e0       	ldi	r21, 0x00	; 0
    c716:	03 97       	sbiw	r24, 0x03	; 3
    c718:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player2.x -3, player2.y -19 ,0);  
    c71c:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c720:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c724:	63 51       	subi	r22, 0x13	; 19
    c726:	71 09       	sbc	r23, r1
    c728:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c72c:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c730:	40 e0       	ldi	r20, 0x00	; 0
    c732:	50 e0       	ldi	r21, 0x00	; 0
    c734:	03 97       	sbiw	r24, 0x03	; 3
    c736:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
checkmonster(player2.x , player2.y -22 ,0);
    c73a:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c73e:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c742:	66 51       	subi	r22, 0x16	; 22
    c744:	71 09       	sbc	r23, r1
    c746:	40 e0       	ldi	r20, 0x00	; 0
    c748:	50 e0       	ldi	r21, 0x00	; 0
    c74a:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c74e:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c752:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
if (player2.y > oldy )   checkmonster(player2.x + 4, player2.y ,0 );
    c756:	60 91 9e 09 	lds	r22, 0x099E	; 0x80099e <player2+0x2>
    c75a:	70 91 9f 09 	lds	r23, 0x099F	; 0x80099f <player2+0x3>
    c75e:	80 91 fc 09 	lds	r24, 0x09FC	; 0x8009fc <oldy>
    c762:	90 91 fd 09 	lds	r25, 0x09FD	; 0x8009fd <oldy+0x1>
    c766:	86 17       	cp	r24, r22
    c768:	97 07       	cpc	r25, r23
    c76a:	4c f4       	brge	.+18     	; 0xc77e <moveplayer2+0x512>
    c76c:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c770:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c774:	40 e0       	ldi	r20, 0x00	; 0
    c776:	50 e0       	ldi	r21, 0x00	; 0
    c778:	04 96       	adiw	r24, 0x04	; 4
    c77a:	0e 94 92 5d 	call	0xbb24	; 0xbb24 <checkmonster>
player2.ximpulse = 0;    
    c77e:	10 92 a7 09 	sts	0x09A7, r1	; 0x8009a7 <player2+0xb>
player2.yimpulse = 0;
    c782:	10 92 a8 09 	sts	0x09A8, r1	; 0x8009a8 <player2+0xc>
if ( player2.x < 8 ) player2.x = 8;
    c786:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c78a:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c78e:	08 97       	sbiw	r24, 0x08	; 8
    c790:	34 f4       	brge	.+12     	; 0xc79e <moveplayer2+0x532>
    c792:	88 e0       	ldi	r24, 0x08	; 8
    c794:	90 e0       	ldi	r25, 0x00	; 0
    c796:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    c79a:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
if ( player2.x > 232 ) player2.x = 232;    
    c79e:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    c7a2:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    c7a6:	89 3e       	cpi	r24, 0xE9	; 233
    c7a8:	91 05       	cpc	r25, r1
    c7aa:	3c f0       	brlt	.+14     	; 0xc7ba <moveplayer2+0x54e>
    c7ac:	88 ee       	ldi	r24, 0xE8	; 232
    c7ae:	90 e0       	ldi	r25, 0x00	; 0
    c7b0:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    c7b4:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
    c7b8:	08 95       	ret
    c7ba:	08 95       	ret

0000c7bc <scrollmonster>:
}


void scrollmonster(int x)
{
if (owl.onscreen) owl.x2 =  owl.x2 + ( x << 2 );
    c7bc:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <owl+0x9>
    c7c0:	22 23       	and	r18, r18
    c7c2:	79 f0       	breq	.+30     	; 0xc7e2 <scrollmonster+0x26>
    c7c4:	40 91 b2 09 	lds	r20, 0x09B2	; 0x8009b2 <owl+0x4>
    c7c8:	50 91 b3 09 	lds	r21, 0x09B3	; 0x8009b3 <owl+0x5>
    c7cc:	9c 01       	movw	r18, r24
    c7ce:	22 0f       	add	r18, r18
    c7d0:	33 1f       	adc	r19, r19
    c7d2:	22 0f       	add	r18, r18
    c7d4:	33 1f       	adc	r19, r19
    c7d6:	24 0f       	add	r18, r20
    c7d8:	35 1f       	adc	r19, r21
    c7da:	30 93 b3 09 	sts	0x09B3, r19	; 0x8009b3 <owl+0x5>
    c7de:	20 93 b2 09 	sts	0x09B2, r18	; 0x8009b2 <owl+0x4>
if (blob.onscreen) blob.x2 =  blob.x2 + ( x << 2 );
    c7e2:	20 91 5f 09 	lds	r18, 0x095F	; 0x80095f <blob+0x9>
    c7e6:	22 23       	and	r18, r18
    c7e8:	71 f0       	breq	.+28     	; 0xc806 <scrollmonster+0x4a>
    c7ea:	88 0f       	add	r24, r24
    c7ec:	99 1f       	adc	r25, r25
    c7ee:	88 0f       	add	r24, r24
    c7f0:	99 1f       	adc	r25, r25
    c7f2:	20 91 5a 09 	lds	r18, 0x095A	; 0x80095a <blob+0x4>
    c7f6:	30 91 5b 09 	lds	r19, 0x095B	; 0x80095b <blob+0x5>
    c7fa:	82 0f       	add	r24, r18
    c7fc:	93 1f       	adc	r25, r19
    c7fe:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    c802:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
    c806:	08 95       	ret

0000c808 <setowl>:
}

void setowl(int x, int y )
{
if ( MonsteronScreen == true ) return;       
    c808:	20 91 9b 09 	lds	r18, 0x099B	; 0x80099b <MonsteronScreen>
    c80c:	21 11       	cpse	r18, r1
    c80e:	38 c0       	rjmp	.+112    	; 0xc880 <setowl+0x78>
if ( owl.onscreen == true ) return;    
    c810:	20 91 b7 09 	lds	r18, 0x09B7	; 0x8009b7 <owl+0x9>
    c814:	21 11       	cpse	r18, r1
    c816:	34 c0       	rjmp	.+104    	; 0xc880 <setowl+0x78>
owl.x = x * 8;
    c818:	33 e0       	ldi	r19, 0x03	; 3
    c81a:	88 0f       	add	r24, r24
    c81c:	99 1f       	adc	r25, r25
    c81e:	3a 95       	dec	r19
    c820:	e1 f7       	brne	.-8      	; 0xc81a <setowl+0x12>
    c822:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <owl+0x1>
    c826:	80 93 ae 09 	sts	0x09AE, r24	; 0x8009ae <owl>
if (scrolltiles > 0 )  owl.x = 15 * 16;
    c82a:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    c82e:	88 23       	and	r24, r24
    c830:	31 f0       	breq	.+12     	; 0xc83e <setowl+0x36>
    c832:	80 ef       	ldi	r24, 0xF0	; 240
    c834:	90 e0       	ldi	r25, 0x00	; 0
    c836:	90 93 af 09 	sts	0x09AF, r25	; 0x8009af <owl+0x1>
    c83a:	80 93 ae 09 	sts	0x09AE, r24	; 0x8009ae <owl>
owl.y = y * 8;     
    c83e:	83 e0       	ldi	r24, 0x03	; 3
    c840:	66 0f       	add	r22, r22
    c842:	77 1f       	adc	r23, r23
    c844:	8a 95       	dec	r24
    c846:	e1 f7       	brne	.-8      	; 0xc840 <setowl+0x38>
    c848:	70 93 b1 09 	sts	0x09B1, r23	; 0x8009b1 <owl+0x3>
    c84c:	60 93 b0 09 	sts	0x09B0, r22	; 0x8009b0 <owl+0x2>
owl.x2 = owl.x << 2;        
    c850:	80 91 ae 09 	lds	r24, 0x09AE	; 0x8009ae <owl>
    c854:	90 91 af 09 	lds	r25, 0x09AF	; 0x8009af <owl+0x1>
    c858:	88 0f       	add	r24, r24
    c85a:	99 1f       	adc	r25, r25
    c85c:	88 0f       	add	r24, r24
    c85e:	99 1f       	adc	r25, r25
    c860:	90 93 b3 09 	sts	0x09B3, r25	; 0x8009b3 <owl+0x5>
    c864:	80 93 b2 09 	sts	0x09B2, r24	; 0x8009b2 <owl+0x4>
owl.ximpulse = -1;
    c868:	8f ef       	ldi	r24, 0xFF	; 255
    c86a:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <owl+0x7>
owl.yimpulse = 0;    
    c86e:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <owl+0x8>
owl.onscreen = true;
    c872:	81 e0       	ldi	r24, 0x01	; 1
    c874:	80 93 b7 09 	sts	0x09B7, r24	; 0x8009b7 <owl+0x9>
owl.alive = true; 
    c878:	80 93 b8 09 	sts	0x09B8, r24	; 0x8009b8 <owl+0xa>
MonsteronScreen = true;     
    c87c:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <MonsteronScreen>
    c880:	08 95       	ret

0000c882 <setblob>:
}

void setblob(int x, int y )
{
if ( MonsteronScreen == true ) return;    
    c882:	20 91 9b 09 	lds	r18, 0x099B	; 0x80099b <MonsteronScreen>
    c886:	21 11       	cpse	r18, r1
    c888:	38 c0       	rjmp	.+112    	; 0xc8fa <setblob+0x78>
if ( blob.onscreen == true ) return;    
    c88a:	20 91 5f 09 	lds	r18, 0x095F	; 0x80095f <blob+0x9>
    c88e:	21 11       	cpse	r18, r1
    c890:	34 c0       	rjmp	.+104    	; 0xc8fa <setblob+0x78>
blob.x = x * 8;
    c892:	33 e0       	ldi	r19, 0x03	; 3
    c894:	88 0f       	add	r24, r24
    c896:	99 1f       	adc	r25, r25
    c898:	3a 95       	dec	r19
    c89a:	e1 f7       	brne	.-8      	; 0xc894 <setblob+0x12>
    c89c:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    c8a0:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
if (scrolltiles > 0 )  blob.x = 15 * 16;
    c8a4:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    c8a8:	88 23       	and	r24, r24
    c8aa:	31 f0       	breq	.+12     	; 0xc8b8 <setblob+0x36>
    c8ac:	80 ef       	ldi	r24, 0xF0	; 240
    c8ae:	90 e0       	ldi	r25, 0x00	; 0
    c8b0:	90 93 57 09 	sts	0x0957, r25	; 0x800957 <blob+0x1>
    c8b4:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <blob>
blob.y = y * 8;     
    c8b8:	83 e0       	ldi	r24, 0x03	; 3
    c8ba:	66 0f       	add	r22, r22
    c8bc:	77 1f       	adc	r23, r23
    c8be:	8a 95       	dec	r24
    c8c0:	e1 f7       	brne	.-8      	; 0xc8ba <setblob+0x38>
    c8c2:	70 93 59 09 	sts	0x0959, r23	; 0x800959 <blob+0x3>
    c8c6:	60 93 58 09 	sts	0x0958, r22	; 0x800958 <blob+0x2>
blob.x2 = blob.x << 2;        
    c8ca:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <blob>
    c8ce:	90 91 57 09 	lds	r25, 0x0957	; 0x800957 <blob+0x1>
    c8d2:	88 0f       	add	r24, r24
    c8d4:	99 1f       	adc	r25, r25
    c8d6:	88 0f       	add	r24, r24
    c8d8:	99 1f       	adc	r25, r25
    c8da:	90 93 5b 09 	sts	0x095B, r25	; 0x80095b <blob+0x5>
    c8de:	80 93 5a 09 	sts	0x095A, r24	; 0x80095a <blob+0x4>
blob.ximpulse = -2;
    c8e2:	8e ef       	ldi	r24, 0xFE	; 254
    c8e4:	80 93 5d 09 	sts	0x095D, r24	; 0x80095d <blob+0x7>
blob.yimpulse = 0;    
    c8e8:	10 92 5e 09 	sts	0x095E, r1	; 0x80095e <blob+0x8>
blob.onscreen = true;
    c8ec:	81 e0       	ldi	r24, 0x01	; 1
    c8ee:	80 93 5f 09 	sts	0x095F, r24	; 0x80095f <blob+0x9>
blob.alive = true;   
    c8f2:	80 93 60 09 	sts	0x0960, r24	; 0x800960 <blob+0xa>
MonsteronScreen = true;    
    c8f6:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <MonsteronScreen>
    c8fa:	08 95       	ret

0000c8fc <drawlevel>:
                }
     		}
}

void drawlevel(int x)
{
    c8fc:	6f 92       	push	r6
    c8fe:	7f 92       	push	r7
    c900:	8f 92       	push	r8
    c902:	bf 92       	push	r11
    c904:	cf 92       	push	r12
    c906:	df 92       	push	r13
    c908:	ef 92       	push	r14
    c90a:	ff 92       	push	r15
    c90c:	0f 93       	push	r16
    c90e:	1f 93       	push	r17
    c910:	cf 93       	push	r28
    c912:	df 93       	push	r29
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c914:	01 e0       	ldi	r16, 0x01	; 1
    c916:	e1 2c       	mov	r14, r1
    c918:	f1 2c       	mov	r15, r1
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    c91a:	c1 2c       	mov	r12, r1
    c91c:	d1 2c       	mov	r13, r1
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c91e:	be 2c       	mov	r11, r14
    c920:	36 01       	movw	r6, r12
    c922:	c0 e0       	ldi	r28, 0x00	; 0
    c924:	d0 e0       	ldi	r29, 0x00	; 0

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    {
if ( level == 0 )   c=pgm_read_byte(&(intro0[(yi*levelwidth)+xi]));
    c926:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <level>
    c92a:	81 11       	cpse	r24, r1
    c92c:	04 c0       	rjmp	.+8      	; 0xc936 <drawlevel+0x3a>
    c92e:	f3 01       	movw	r30, r6
    c930:	e1 58       	subi	r30, 0x81	; 129
    c932:	fa 4c       	sbci	r31, 0xCA	; 202
    c934:	35 c0       	rjmp	.+106    	; 0xc9a0 <drawlevel+0xa4>
if ( level == 1 )   c=pgm_read_byte(&(level1[(yi*levelwidth)+xi]));
    c936:	81 30       	cpi	r24, 0x01	; 1
    c938:	21 f4       	brne	.+8      	; 0xc942 <drawlevel+0x46>
    c93a:	f3 01       	movw	r30, r6
    c93c:	ed 56       	subi	r30, 0x6D	; 109
    c93e:	ff 4c       	sbci	r31, 0xCF	; 207
    c940:	2f c0       	rjmp	.+94     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 2 )   c=pgm_read_byte(&(level2[(yi*levelwidth)+xi]));
    c942:	82 30       	cpi	r24, 0x02	; 2
    c944:	21 f4       	brne	.+8      	; 0xc94e <drawlevel+0x52>
    c946:	f3 01       	movw	r30, r6
    c948:	e9 55       	subi	r30, 0x59	; 89
    c94a:	f4 4d       	sbci	r31, 0xD4	; 212
    c94c:	29 c0       	rjmp	.+82     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 3 )   c=pgm_read_byte(&(level3[(yi*levelwidth)+xi]));
    c94e:	83 30       	cpi	r24, 0x03	; 3
    c950:	21 f4       	brne	.+8      	; 0xc95a <drawlevel+0x5e>
    c952:	f3 01       	movw	r30, r6
    c954:	e5 54       	subi	r30, 0x45	; 69
    c956:	f9 4d       	sbci	r31, 0xD9	; 217
    c958:	23 c0       	rjmp	.+70     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 4 )   c=pgm_read_byte(&(level4[(yi*levelwidth)+xi]));
    c95a:	84 30       	cpi	r24, 0x04	; 4
    c95c:	21 f4       	brne	.+8      	; 0xc966 <drawlevel+0x6a>
    c95e:	f3 01       	movw	r30, r6
    c960:	e1 53       	subi	r30, 0x31	; 49
    c962:	fe 4d       	sbci	r31, 0xDE	; 222
    c964:	1d c0       	rjmp	.+58     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 5 )   c=pgm_read_byte(&(level5[(yi*levelwidth)+xi]));
    c966:	85 30       	cpi	r24, 0x05	; 5
    c968:	21 f4       	brne	.+8      	; 0xc972 <drawlevel+0x76>
    c96a:	f3 01       	movw	r30, r6
    c96c:	ed 51       	subi	r30, 0x1D	; 29
    c96e:	f3 4e       	sbci	r31, 0xE3	; 227
    c970:	17 c0       	rjmp	.+46     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 6 )   c=pgm_read_byte(&(level6[(yi*levelwidth)+xi]));    
    c972:	86 30       	cpi	r24, 0x06	; 6
    c974:	21 f4       	brne	.+8      	; 0xc97e <drawlevel+0x82>
    c976:	f3 01       	movw	r30, r6
    c978:	e9 50       	subi	r30, 0x09	; 9
    c97a:	f8 4e       	sbci	r31, 0xE8	; 232
    c97c:	11 c0       	rjmp	.+34     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 7 )   c=pgm_read_byte(&(level7[(yi*levelwidth)+xi]));  
    c97e:	87 30       	cpi	r24, 0x07	; 7
    c980:	21 f4       	brne	.+8      	; 0xc98a <drawlevel+0x8e>
    c982:	f3 01       	movw	r30, r6
    c984:	e5 5f       	subi	r30, 0xF5	; 245
    c986:	fc 4e       	sbci	r31, 0xEC	; 236
    c988:	0b c0       	rjmp	.+22     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 8 )   c=pgm_read_byte(&(level8[(yi*levelwidth)+xi]));  
    c98a:	88 30       	cpi	r24, 0x08	; 8
    c98c:	21 f4       	brne	.+8      	; 0xc996 <drawlevel+0x9a>
    c98e:	f3 01       	movw	r30, r6
    c990:	e1 5e       	subi	r30, 0xE1	; 225
    c992:	f1 4f       	sbci	r31, 0xF1	; 241
    c994:	05 c0       	rjmp	.+10     	; 0xc9a0 <drawlevel+0xa4>
if ( level == 9 )   c=pgm_read_byte(&(level9[(yi*levelwidth)+xi]));  
    c996:	89 30       	cpi	r24, 0x09	; 9
    c998:	21 f4       	brne	.+8      	; 0xc9a2 <drawlevel+0xa6>
    c99a:	f3 01       	movw	r30, r6
    c99c:	ed 5c       	subi	r30, 0xCD	; 205
    c99e:	f6 4f       	sbci	r31, 0xF6	; 246
    c9a0:	14 91       	lpm	r17, Z
    destx = xi * 2;
    
    if ( c == 1 ) DrawMap2(destx  ,yi *2  ,ground);
    c9a2:	11 30       	cpi	r17, 0x01	; 1
    c9a4:	19 f4       	brne	.+6      	; 0xc9ac <drawlevel+0xb0>
    c9a6:	45 ea       	ldi	r20, 0xA5	; 165
    c9a8:	53 e8       	ldi	r21, 0x83	; 131
    c9aa:	d1 c0       	rjmp	.+418    	; 0xcb4e <drawlevel+0x252>
    if ( c == 2 ) DrawMap2(destx  ,yi *2  ,block0);
    c9ac:	12 30       	cpi	r17, 0x02	; 2
    c9ae:	19 f4       	brne	.+6      	; 0xc9b6 <drawlevel+0xba>
    c9b0:	43 eb       	ldi	r20, 0xB3	; 179
    c9b2:	53 e8       	ldi	r21, 0x83	; 131
    c9b4:	cc c0       	rjmp	.+408    	; 0xcb4e <drawlevel+0x252>
    if ( c == 3 ) DrawMap2(destx  ,yi *2  ,block1);
    c9b6:	13 30       	cpi	r17, 0x03	; 3
    c9b8:	19 f4       	brne	.+6      	; 0xc9c0 <drawlevel+0xc4>
    c9ba:	4d ea       	ldi	r20, 0xAD	; 173
    c9bc:	53 e8       	ldi	r21, 0x83	; 131
    c9be:	c7 c0       	rjmp	.+398    	; 0xcb4e <drawlevel+0x252>
    if ( c == 4 ) DrawMap2(destx  ,yi *2  ,block2);
    c9c0:	14 30       	cpi	r17, 0x04	; 4
    c9c2:	19 f4       	brne	.+6      	; 0xc9ca <drawlevel+0xce>
    c9c4:	43 e6       	ldi	r20, 0x63	; 99
    c9c6:	53 e8       	ldi	r21, 0x83	; 131
    c9c8:	c2 c0       	rjmp	.+388    	; 0xcb4e <drawlevel+0x252>
    if ( c == 5 ) DrawMap2(destx  ,yi *2  ,ground1);
    c9ca:	15 30       	cpi	r17, 0x05	; 5
    c9cc:	19 f4       	brne	.+6      	; 0xc9d4 <drawlevel+0xd8>
    c9ce:	4d e9       	ldi	r20, 0x9D	; 157
    c9d0:	53 e8       	ldi	r21, 0x83	; 131
    c9d2:	bd c0       	rjmp	.+378    	; 0xcb4e <drawlevel+0x252>
    if ( c == 6 ) DrawMap2(destx  ,yi *2  ,ground2);
    c9d4:	16 30       	cpi	r17, 0x06	; 6
    c9d6:	19 f4       	brne	.+6      	; 0xc9de <drawlevel+0xe2>
    c9d8:	45 e9       	ldi	r20, 0x95	; 149
    c9da:	53 e8       	ldi	r21, 0x83	; 131
    c9dc:	b8 c0       	rjmp	.+368    	; 0xcb4e <drawlevel+0x252>
    if ( c == 7 ) DrawMap2(destx  ,yi *2  ,block3);
    c9de:	17 30       	cpi	r17, 0x07	; 7
    c9e0:	19 f4       	brne	.+6      	; 0xc9e8 <drawlevel+0xec>
    c9e2:	4d e5       	ldi	r20, 0x5D	; 93
    c9e4:	53 e8       	ldi	r21, 0x83	; 131
    c9e6:	b3 c0       	rjmp	.+358    	; 0xcb4e <drawlevel+0x252>
    if ( c == 8 ) DrawMap2(destx  ,yi *2  ,ground3);
    c9e8:	18 30       	cpi	r17, 0x08	; 8
    c9ea:	19 f4       	brne	.+6      	; 0xc9f2 <drawlevel+0xf6>
    c9ec:	4d e8       	ldi	r20, 0x8D	; 141
    c9ee:	53 e8       	ldi	r21, 0x83	; 131
    c9f0:	ae c0       	rjmp	.+348    	; 0xcb4e <drawlevel+0x252>
    if ( c == 9 ) DrawMap2(destx  ,yi *2  ,block4);
    c9f2:	19 30       	cpi	r17, 0x09	; 9
    c9f4:	19 f4       	brne	.+6      	; 0xc9fc <drawlevel+0x100>
    c9f6:	47 e8       	ldi	r20, 0x87	; 135
    c9f8:	53 e8       	ldi	r21, 0x83	; 131
    c9fa:	a9 c0       	rjmp	.+338    	; 0xcb4e <drawlevel+0x252>
    if ( c == 10 ) DrawMap2(destx ,yi *2  ,block5);
    c9fc:	1a 30       	cpi	r17, 0x0A	; 10
    c9fe:	19 f4       	brne	.+6      	; 0xca06 <drawlevel+0x10a>
    ca00:	41 e8       	ldi	r20, 0x81	; 129
    ca02:	53 e8       	ldi	r21, 0x83	; 131
    ca04:	a4 c0       	rjmp	.+328    	; 0xcb4e <drawlevel+0x252>
    if ( c == 11 ) DrawMap2(destx ,yi *2  ,tube0);
    ca06:	1b 30       	cpi	r17, 0x0B	; 11
    ca08:	19 f4       	brne	.+6      	; 0xca10 <drawlevel+0x114>
    ca0a:	48 e1       	ldi	r20, 0x18	; 24
    ca0c:	53 e8       	ldi	r21, 0x83	; 131
    ca0e:	9f c0       	rjmp	.+318    	; 0xcb4e <drawlevel+0x252>
    if ( c == 12 ) DrawMap2(destx ,yi *2  ,tube1);
    ca10:	1c 30       	cpi	r17, 0x0C	; 12
    ca12:	19 f4       	brne	.+6      	; 0xca1a <drawlevel+0x11e>
    ca14:	42 e1       	ldi	r20, 0x12	; 18
    ca16:	53 e8       	ldi	r21, 0x83	; 131
    ca18:	9a c0       	rjmp	.+308    	; 0xcb4e <drawlevel+0x252>
    if ( c == 13 ) DrawMap2(destx ,yi *2  ,tube2);
    ca1a:	1d 30       	cpi	r17, 0x0D	; 13
    ca1c:	19 f4       	brne	.+6      	; 0xca24 <drawlevel+0x128>
    ca1e:	4c e0       	ldi	r20, 0x0C	; 12
    ca20:	53 e8       	ldi	r21, 0x83	; 131
    ca22:	95 c0       	rjmp	.+298    	; 0xcb4e <drawlevel+0x252>
    if ( c == 14 ) DrawMap2(destx ,yi *2  ,tube3);
    ca24:	1e 30       	cpi	r17, 0x0E	; 14
    ca26:	19 f4       	brne	.+6      	; 0xca2e <drawlevel+0x132>
    ca28:	46 e0       	ldi	r20, 0x06	; 6
    ca2a:	53 e8       	ldi	r21, 0x83	; 131
    ca2c:	90 c0       	rjmp	.+288    	; 0xcb4e <drawlevel+0x252>
    if ( c == 15 ) DrawMap2(destx ,yi *2  ,tube4);
    ca2e:	1f 30       	cpi	r17, 0x0F	; 15
    ca30:	19 f4       	brne	.+6      	; 0xca38 <drawlevel+0x13c>
    ca32:	40 e0       	ldi	r20, 0x00	; 0
    ca34:	53 e8       	ldi	r21, 0x83	; 131
    ca36:	8b c0       	rjmp	.+278    	; 0xcb4e <drawlevel+0x252>
    if ( c == 16 ) DrawMap2(destx ,yi *2  ,tube5);
    ca38:	10 31       	cpi	r17, 0x10	; 16
    ca3a:	19 f4       	brne	.+6      	; 0xca42 <drawlevel+0x146>
    ca3c:	4a ef       	ldi	r20, 0xFA	; 250
    ca3e:	52 e8       	ldi	r21, 0x82	; 130
    ca40:	86 c0       	rjmp	.+268    	; 0xcb4e <drawlevel+0x252>
    if ( c == 31 ) DrawMap2(destx ,yi *2  ,bush1);
    ca42:	1f 31       	cpi	r17, 0x1F	; 31
    ca44:	19 f4       	brne	.+6      	; 0xca4c <drawlevel+0x150>
    ca46:	48 e4       	ldi	r20, 0x48	; 72
    ca48:	53 e8       	ldi	r21, 0x83	; 131
    ca4a:	81 c0       	rjmp	.+258    	; 0xcb4e <drawlevel+0x252>
    if ( c == 32 ) DrawMap2(destx ,yi *2  ,bush2);
    ca4c:	10 32       	cpi	r17, 0x20	; 32
    ca4e:	19 f4       	brne	.+6      	; 0xca56 <drawlevel+0x15a>
    ca50:	42 e4       	ldi	r20, 0x42	; 66
    ca52:	53 e8       	ldi	r21, 0x83	; 131
    ca54:	7c c0       	rjmp	.+248    	; 0xcb4e <drawlevel+0x252>
    if ( c == 33 ) DrawMap2(destx ,yi *2  ,bush3);
    ca56:	11 32       	cpi	r17, 0x21	; 33
    ca58:	19 f4       	brne	.+6      	; 0xca60 <drawlevel+0x164>
    ca5a:	4c e3       	ldi	r20, 0x3C	; 60
    ca5c:	53 e8       	ldi	r21, 0x83	; 131
    ca5e:	77 c0       	rjmp	.+238    	; 0xcb4e <drawlevel+0x252>
    if ( c == 34 ) DrawMap2(destx ,yi *2  ,bush4);
    ca60:	12 32       	cpi	r17, 0x22	; 34
    ca62:	19 f4       	brne	.+6      	; 0xca6a <drawlevel+0x16e>
    ca64:	46 e3       	ldi	r20, 0x36	; 54
    ca66:	53 e8       	ldi	r21, 0x83	; 131
    ca68:	72 c0       	rjmp	.+228    	; 0xcb4e <drawlevel+0x252>
    if ( c == 35 ) DrawMap2(destx ,yi *2  ,cloud0);
    ca6a:	13 32       	cpi	r17, 0x23	; 35
    ca6c:	19 f4       	brne	.+6      	; 0xca74 <drawlevel+0x178>
    ca6e:	40 e3       	ldi	r20, 0x30	; 48
    ca70:	53 e8       	ldi	r21, 0x83	; 131
    ca72:	6d c0       	rjmp	.+218    	; 0xcb4e <drawlevel+0x252>
    if ( c == 36 ) DrawMap2(destx ,yi *2  ,cloud1);
    ca74:	14 32       	cpi	r17, 0x24	; 36
    ca76:	19 f4       	brne	.+6      	; 0xca7e <drawlevel+0x182>
    ca78:	4a e2       	ldi	r20, 0x2A	; 42
    ca7a:	53 e8       	ldi	r21, 0x83	; 131
    ca7c:	68 c0       	rjmp	.+208    	; 0xcb4e <drawlevel+0x252>
    if ( c == 37 ) DrawMap2(destx ,yi *2  ,cloud2);
    ca7e:	15 32       	cpi	r17, 0x25	; 37
    ca80:	19 f4       	brne	.+6      	; 0xca88 <drawlevel+0x18c>
    ca82:	44 e2       	ldi	r20, 0x24	; 36
    ca84:	53 e8       	ldi	r21, 0x83	; 131
    ca86:	63 c0       	rjmp	.+198    	; 0xcb4e <drawlevel+0x252>
    if ( c == 38 ) DrawMap2(destx ,yi *2  ,cloud3);
    ca88:	16 32       	cpi	r17, 0x26	; 38
    ca8a:	19 f4       	brne	.+6      	; 0xca92 <drawlevel+0x196>
    ca8c:	4e e1       	ldi	r20, 0x1E	; 30
    ca8e:	53 e8       	ldi	r21, 0x83	; 131
    ca90:	5e c0       	rjmp	.+188    	; 0xcb4e <drawlevel+0x252>
    if ( c == 39 ) {DrawMap2(destx ,yi *2 ,bridge0);DrawMap2(destx +1 ,yi *2  ,bridge0);DrawMap2(destx  ,yi *2 +1 ,nb);DrawMap2(destx +1 ,yi *2 +1 ,nb);};
    ca92:	17 32       	cpi	r17, 0x27	; 39
    ca94:	c1 f4       	brne	.+48     	; 0xcac6 <drawlevel+0x1ca>
    ca96:	4f ed       	ldi	r20, 0xDF	; 223
    ca98:	52 e8       	ldi	r21, 0x82	; 130
    ca9a:	6c 2f       	mov	r22, r28
    ca9c:	8b 2d       	mov	r24, r11
    ca9e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    caa2:	4f ed       	ldi	r20, 0xDF	; 223
    caa4:	52 e8       	ldi	r21, 0x82	; 130
    caa6:	6c 2f       	mov	r22, r28
    caa8:	80 2f       	mov	r24, r16
    caaa:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    caae:	43 ed       	ldi	r20, 0xD3	; 211
    cab0:	52 e8       	ldi	r21, 0x82	; 130
    cab2:	8c 2e       	mov	r8, r28
    cab4:	83 94       	inc	r8
    cab6:	68 2d       	mov	r22, r8
    cab8:	8b 2d       	mov	r24, r11
    caba:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cabe:	43 ed       	ldi	r20, 0xD3	; 211
    cac0:	52 e8       	ldi	r21, 0x82	; 130
    cac2:	68 2d       	mov	r22, r8
    cac4:	3e c0       	rjmp	.+124    	; 0xcb42 <drawlevel+0x246>
    if ( c == 21 ) DrawMap2(destx ,yi *2  ,mush0);
    cac6:	15 31       	cpi	r17, 0x15	; 21
    cac8:	19 f4       	brne	.+6      	; 0xcad0 <drawlevel+0x1d4>
    caca:	44 ef       	ldi	r20, 0xF4	; 244
    cacc:	52 e8       	ldi	r21, 0x82	; 130
    cace:	3f c0       	rjmp	.+126    	; 0xcb4e <drawlevel+0x252>
    if ( c == 22 ) DrawMap2(destx ,yi *2  ,mush1);
    cad0:	16 31       	cpi	r17, 0x16	; 22
    cad2:	19 f4       	brne	.+6      	; 0xcada <drawlevel+0x1de>
    cad4:	4e ee       	ldi	r20, 0xEE	; 238
    cad6:	52 e8       	ldi	r21, 0x82	; 130
    cad8:	3a c0       	rjmp	.+116    	; 0xcb4e <drawlevel+0x252>
    if ( c == 23 ) DrawMap2(destx ,yi *2  ,mush2);
    cada:	17 31       	cpi	r17, 0x17	; 23
    cadc:	19 f4       	brne	.+6      	; 0xcae4 <drawlevel+0x1e8>
    cade:	48 ee       	ldi	r20, 0xE8	; 232
    cae0:	52 e8       	ldi	r21, 0x82	; 130
    cae2:	35 c0       	rjmp	.+106    	; 0xcb4e <drawlevel+0x252>
    if ( c == 24 ) DrawMap2(destx ,yi *2  ,mush3);	
    cae4:	18 31       	cpi	r17, 0x18	; 24
    cae6:	19 f4       	brne	.+6      	; 0xcaee <drawlevel+0x1f2>
    cae8:	42 ee       	ldi	r20, 0xE2	; 226
    caea:	52 e8       	ldi	r21, 0x82	; 130
    caec:	30 c0       	rjmp	.+96     	; 0xcb4e <drawlevel+0x252>
    if ( c == 25 ) DrawMap2(destx ,yi *2  ,door0);
    caee:	19 31       	cpi	r17, 0x19	; 25
    caf0:	19 f4       	brne	.+6      	; 0xcaf8 <drawlevel+0x1fc>
    caf2:	4b e7       	ldi	r20, 0x7B	; 123
    caf4:	53 e8       	ldi	r21, 0x83	; 131
    caf6:	2b c0       	rjmp	.+86     	; 0xcb4e <drawlevel+0x252>
    if ( c == 26 ) DrawMap2(destx ,yi *2  ,door1);
    caf8:	1a 31       	cpi	r17, 0x1A	; 26
    cafa:	19 f4       	brne	.+6      	; 0xcb02 <drawlevel+0x206>
    cafc:	45 e7       	ldi	r20, 0x75	; 117
    cafe:	53 e8       	ldi	r21, 0x83	; 131
    cb00:	26 c0       	rjmp	.+76     	; 0xcb4e <drawlevel+0x252>
    if ( c == 27 ) DrawMap2(destx ,yi *2  ,door2);
    cb02:	1b 31       	cpi	r17, 0x1B	; 27
    cb04:	19 f4       	brne	.+6      	; 0xcb0c <drawlevel+0x210>
    cb06:	4f e6       	ldi	r20, 0x6F	; 111
    cb08:	53 e8       	ldi	r21, 0x83	; 131
    cb0a:	21 c0       	rjmp	.+66     	; 0xcb4e <drawlevel+0x252>
    if ( c == 28 ) DrawMap2(destx ,yi *2  ,door3);
    cb0c:	1c 31       	cpi	r17, 0x1C	; 28
    cb0e:	19 f4       	brne	.+6      	; 0xcb16 <drawlevel+0x21a>
    cb10:	49 e6       	ldi	r20, 0x69	; 105
    cb12:	53 e8       	ldi	r21, 0x83	; 131
    cb14:	1c c0       	rjmp	.+56     	; 0xcb4e <drawlevel+0x252>
    if ( c == 29 ) {DrawMap2(destx ,yi *2  ,spike0); DrawMap2(destx + 1 ,yi *2  ,spike0); };
    cb16:	1d 31       	cpi	r17, 0x1D	; 29
    cb18:	49 f4       	brne	.+18     	; 0xcb2c <drawlevel+0x230>
    cb1a:	4f e5       	ldi	r20, 0x5F	; 95
    cb1c:	52 e8       	ldi	r21, 0x82	; 130
    cb1e:	6c 2f       	mov	r22, r28
    cb20:	8b 2d       	mov	r24, r11
    cb22:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cb26:	4f e5       	ldi	r20, 0x5F	; 95
    cb28:	52 e8       	ldi	r21, 0x82	; 130
    cb2a:	0a c0       	rjmp	.+20     	; 0xcb40 <drawlevel+0x244>
    if ( c == 30 ) {DrawMap2(destx ,yi *2  ,spike1); DrawMap2(destx + 1 ,yi *2  ,spike1); };
    cb2c:	1e 31       	cpi	r17, 0x1E	; 30
    cb2e:	59 f4       	brne	.+22     	; 0xcb46 <drawlevel+0x24a>
    cb30:	4b e5       	ldi	r20, 0x5B	; 91
    cb32:	52 e8       	ldi	r21, 0x82	; 130
    cb34:	6c 2f       	mov	r22, r28
    cb36:	8b 2d       	mov	r24, r11
    cb38:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cb3c:	4b e5       	ldi	r20, 0x5B	; 91
    cb3e:	52 e8       	ldi	r21, 0x82	; 130
    cb40:	6c 2f       	mov	r22, r28
    cb42:	80 2f       	mov	r24, r16
    cb44:	06 c0       	rjmp	.+12     	; 0xcb52 <drawlevel+0x256>
    if ( c == 41 ) DrawMap2(destx ,yi *2  ,diamond0); 
    cb46:	19 32       	cpi	r17, 0x29	; 41
    cb48:	39 f4       	brne	.+14     	; 0xcb58 <drawlevel+0x25c>
    cb4a:	47 e5       	ldi	r20, 0x57	; 87
    cb4c:	53 e8       	ldi	r21, 0x83	; 131
    cb4e:	6c 2f       	mov	r22, r28
    cb50:	8b 2d       	mov	r24, r11
    cb52:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cb56:	0d c0       	rjmp	.+26     	; 0xcb72 <drawlevel+0x276>
    if ( c == 50 ) setowl(destx,  yi *2);    
    cb58:	12 33       	cpi	r17, 0x32	; 50
    cb5a:	29 f4       	brne	.+10     	; 0xcb66 <drawlevel+0x26a>
    cb5c:	be 01       	movw	r22, r28
    cb5e:	c7 01       	movw	r24, r14
    cb60:	0e 94 04 64 	call	0xc808	; 0xc808 <setowl>
    cb64:	06 c0       	rjmp	.+12     	; 0xcb72 <drawlevel+0x276>
    if ( c == 51 ) setblob(destx, yi *2);    
    cb66:	13 33       	cpi	r17, 0x33	; 51
    cb68:	21 f4       	brne	.+8      	; 0xcb72 <drawlevel+0x276>
    cb6a:	be 01       	movw	r22, r28
    cb6c:	c7 01       	movw	r24, r14
    cb6e:	0e 94 41 64 	call	0xc882	; 0xc882 <setblob>
    cb72:	22 96       	adiw	r28, 0x02	; 2
    cb74:	8a e5       	ldi	r24, 0x5A	; 90
    cb76:	68 0e       	add	r6, r24
    cb78:	71 1c       	adc	r7, r1
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    {
    for (yi = 0; yi < 14; yi++)
    cb7a:	cc 31       	cpi	r28, 0x1C	; 28
    cb7c:	d1 05       	cpc	r29, r1
    cb7e:	09 f0       	breq	.+2      	; 0xcb82 <drawlevel+0x286>
    cb80:	d2 ce       	rjmp	.-604    	; 0xc926 <drawlevel+0x2a>
int xi;
int yi;
char c;
int destx;

for (xi = 0; xi < 16; xi++)
    cb82:	8f ef       	ldi	r24, 0xFF	; 255
    cb84:	c8 1a       	sub	r12, r24
    cb86:	d8 0a       	sbc	r13, r24
    cb88:	82 e0       	ldi	r24, 0x02	; 2
    cb8a:	e8 0e       	add	r14, r24
    cb8c:	f1 1c       	adc	r15, r1
    cb8e:	0e 5f       	subi	r16, 0xFE	; 254
    cb90:	80 e2       	ldi	r24, 0x20	; 32
    cb92:	e8 16       	cp	r14, r24
    cb94:	f1 04       	cpc	r15, r1
    cb96:	09 f0       	breq	.+2      	; 0xcb9a <drawlevel+0x29e>
    cb98:	c2 ce       	rjmp	.-636    	; 0xc91e <drawlevel+0x22>
    if ( c == 50 ) setowl(destx,  yi *2);    
    if ( c == 51 ) setblob(destx, yi *2);    
    }
    }

}
    cb9a:	df 91       	pop	r29
    cb9c:	cf 91       	pop	r28
    cb9e:	1f 91       	pop	r17
    cba0:	0f 91       	pop	r16
    cba2:	ff 90       	pop	r15
    cba4:	ef 90       	pop	r14
    cba6:	df 90       	pop	r13
    cba8:	cf 90       	pop	r12
    cbaa:	bf 90       	pop	r11
    cbac:	8f 90       	pop	r8
    cbae:	7f 90       	pop	r7
    cbb0:	6f 90       	pop	r6
    cbb2:	08 95       	ret

0000cbb4 <updatelevel>:

void updatelevel()
{
    cbb4:	cf 92       	push	r12
    cbb6:	df 92       	push	r13
    cbb8:	ef 92       	push	r14
    cbba:	ff 92       	push	r15
    cbbc:	1f 93       	push	r17
    cbbe:	cf 93       	push	r28
    cbc0:	df 93       	push	r29
    cbc2:	c0 e0       	ldi	r28, 0x00	; 0
    cbc4:	d0 e0       	ldi	r29, 0x00	; 0
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    cbc6:	e1 2c       	mov	r14, r1
    cbc8:	f1 2c       	mov	r15, r1
    {
if (level == 0)    c=pgm_read_byte(&(intro0[(yi*levelwidth)+scrolltiles+16]));        
    cbca:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <level>
    cbce:	81 11       	cpse	r24, r1
    cbd0:	08 c0       	rjmp	.+16     	; 0xcbe2 <updatelevel+0x2e>
    cbd2:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cbd6:	fe 01       	movw	r30, r28
    cbd8:	e8 0f       	add	r30, r24
    cbda:	f1 1d       	adc	r31, r1
    cbdc:	e1 57       	subi	r30, 0x71	; 113
    cbde:	fa 4c       	sbci	r31, 0xCA	; 202
    cbe0:	59 c0       	rjmp	.+178    	; 0xcc94 <updatelevel+0xe0>
if (level == 1)    c=pgm_read_byte(&(level1[(yi*levelwidth)+scrolltiles+16]));
    cbe2:	81 30       	cpi	r24, 0x01	; 1
    cbe4:	41 f4       	brne	.+16     	; 0xcbf6 <updatelevel+0x42>
    cbe6:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cbea:	fe 01       	movw	r30, r28
    cbec:	e8 0f       	add	r30, r24
    cbee:	f1 1d       	adc	r31, r1
    cbf0:	ed 55       	subi	r30, 0x5D	; 93
    cbf2:	ff 4c       	sbci	r31, 0xCF	; 207
    cbf4:	4f c0       	rjmp	.+158    	; 0xcc94 <updatelevel+0xe0>
if (level == 2)    c=pgm_read_byte(&(level2[(yi*levelwidth)+scrolltiles+16]));
    cbf6:	82 30       	cpi	r24, 0x02	; 2
    cbf8:	41 f4       	brne	.+16     	; 0xcc0a <updatelevel+0x56>
    cbfa:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cbfe:	fe 01       	movw	r30, r28
    cc00:	e8 0f       	add	r30, r24
    cc02:	f1 1d       	adc	r31, r1
    cc04:	e9 54       	subi	r30, 0x49	; 73
    cc06:	f4 4d       	sbci	r31, 0xD4	; 212
    cc08:	45 c0       	rjmp	.+138    	; 0xcc94 <updatelevel+0xe0>
if (level == 3)    c=pgm_read_byte(&(level3[(yi*levelwidth)+scrolltiles+16]));
    cc0a:	83 30       	cpi	r24, 0x03	; 3
    cc0c:	41 f4       	brne	.+16     	; 0xcc1e <updatelevel+0x6a>
    cc0e:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc12:	fe 01       	movw	r30, r28
    cc14:	e8 0f       	add	r30, r24
    cc16:	f1 1d       	adc	r31, r1
    cc18:	e5 53       	subi	r30, 0x35	; 53
    cc1a:	f9 4d       	sbci	r31, 0xD9	; 217
    cc1c:	3b c0       	rjmp	.+118    	; 0xcc94 <updatelevel+0xe0>
if (level == 4)    c=pgm_read_byte(&(level4[(yi*levelwidth)+scrolltiles+16]));
    cc1e:	84 30       	cpi	r24, 0x04	; 4
    cc20:	41 f4       	brne	.+16     	; 0xcc32 <updatelevel+0x7e>
    cc22:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc26:	fe 01       	movw	r30, r28
    cc28:	e8 0f       	add	r30, r24
    cc2a:	f1 1d       	adc	r31, r1
    cc2c:	e1 52       	subi	r30, 0x21	; 33
    cc2e:	fe 4d       	sbci	r31, 0xDE	; 222
    cc30:	31 c0       	rjmp	.+98     	; 0xcc94 <updatelevel+0xe0>
if (level == 5)    c=pgm_read_byte(&(level5[(yi*levelwidth)+scrolltiles+16]));
    cc32:	85 30       	cpi	r24, 0x05	; 5
    cc34:	41 f4       	brne	.+16     	; 0xcc46 <updatelevel+0x92>
    cc36:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc3a:	fe 01       	movw	r30, r28
    cc3c:	e8 0f       	add	r30, r24
    cc3e:	f1 1d       	adc	r31, r1
    cc40:	ed 50       	subi	r30, 0x0D	; 13
    cc42:	f3 4e       	sbci	r31, 0xE3	; 227
    cc44:	27 c0       	rjmp	.+78     	; 0xcc94 <updatelevel+0xe0>
if (level == 6)    c=pgm_read_byte(&(level6[(yi*levelwidth)+scrolltiles+16]));
    cc46:	86 30       	cpi	r24, 0x06	; 6
    cc48:	41 f4       	brne	.+16     	; 0xcc5a <updatelevel+0xa6>
    cc4a:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc4e:	fe 01       	movw	r30, r28
    cc50:	e8 0f       	add	r30, r24
    cc52:	f1 1d       	adc	r31, r1
    cc54:	e9 5f       	subi	r30, 0xF9	; 249
    cc56:	f7 4e       	sbci	r31, 0xE7	; 231
    cc58:	1d c0       	rjmp	.+58     	; 0xcc94 <updatelevel+0xe0>
if (level == 7)    c=pgm_read_byte(&(level7[(yi*levelwidth)+scrolltiles+16]));
    cc5a:	87 30       	cpi	r24, 0x07	; 7
    cc5c:	41 f4       	brne	.+16     	; 0xcc6e <updatelevel+0xba>
    cc5e:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc62:	fe 01       	movw	r30, r28
    cc64:	e8 0f       	add	r30, r24
    cc66:	f1 1d       	adc	r31, r1
    cc68:	e5 5e       	subi	r30, 0xE5	; 229
    cc6a:	fc 4e       	sbci	r31, 0xEC	; 236
    cc6c:	13 c0       	rjmp	.+38     	; 0xcc94 <updatelevel+0xe0>
if (level == 8)    c=pgm_read_byte(&(level8[(yi*levelwidth)+scrolltiles+16]));
    cc6e:	88 30       	cpi	r24, 0x08	; 8
    cc70:	41 f4       	brne	.+16     	; 0xcc82 <updatelevel+0xce>
    cc72:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc76:	fe 01       	movw	r30, r28
    cc78:	e8 0f       	add	r30, r24
    cc7a:	f1 1d       	adc	r31, r1
    cc7c:	e1 5d       	subi	r30, 0xD1	; 209
    cc7e:	f1 4f       	sbci	r31, 0xF1	; 241
    cc80:	09 c0       	rjmp	.+18     	; 0xcc94 <updatelevel+0xe0>
if (level == 9)    c=pgm_read_byte(&(level9[(yi*levelwidth)+scrolltiles+16]));
    cc82:	89 30       	cpi	r24, 0x09	; 9
    cc84:	41 f4       	brne	.+16     	; 0xcc96 <updatelevel+0xe2>
    cc86:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cc8a:	fe 01       	movw	r30, r28
    cc8c:	e8 0f       	add	r30, r24
    cc8e:	f1 1d       	adc	r31, r1
    cc90:	ed 5b       	subi	r30, 0xBD	; 189
    cc92:	f6 4f       	sbci	r31, 0xF6	; 246
    cc94:	14 91       	lpm	r17, Z
    xi = yi << 1;
    cc96:	67 01       	movw	r12, r14
    cc98:	cc 0c       	add	r12, r12
    cc9a:	dd 1c       	adc	r13, r13
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    cc9c:	11 11       	cpse	r17, r1
    cc9e:	10 c0       	rjmp	.+32     	; 0xccc0 <updatelevel+0x10c>
    cca0:	49 eb       	ldi	r20, 0xB9	; 185
    cca2:	53 e8       	ldi	r21, 0x83	; 131
    cca4:	6c 2d       	mov	r22, r12
    cca6:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ccaa:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    ccae:	8c e0       	ldi	r24, 0x0C	; 12
    ccb0:	e8 16       	cp	r14, r24
    ccb2:	f1 04       	cpc	r15, r1
    ccb4:	49 f5       	brne	.+82     	; 0xcd08 <updatelevel+0x154>
    ccb6:	61 e0       	ldi	r22, 0x01	; 1
    ccb8:	6c 0d       	add	r22, r12
    ccba:	49 eb       	ldi	r20, 0xB9	; 185
    ccbc:	53 e8       	ldi	r21, 0x83	; 131
    ccbe:	0f c0       	rjmp	.+30     	; 0xccde <updatelevel+0x12a>
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    ccc0:	11 30       	cpi	r17, 0x01	; 1
    ccc2:	19 f4       	brne	.+6      	; 0xccca <updatelevel+0x116>
    ccc4:	45 ea       	ldi	r20, 0xA5	; 165
    ccc6:	53 e8       	ldi	r21, 0x83	; 131
    ccc8:	09 c0       	rjmp	.+18     	; 0xccdc <updatelevel+0x128>
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    ccca:	12 30       	cpi	r17, 0x02	; 2
    cccc:	19 f4       	brne	.+6      	; 0xccd4 <updatelevel+0x120>
    ccce:	43 eb       	ldi	r20, 0xB3	; 179
    ccd0:	53 e8       	ldi	r21, 0x83	; 131
    ccd2:	04 c0       	rjmp	.+8      	; 0xccdc <updatelevel+0x128>
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    ccd4:	13 30       	cpi	r17, 0x03	; 3
    ccd6:	69 f5       	brne	.+90     	; 0xcd32 <updatelevel+0x17e>
    ccd8:	4d ea       	ldi	r20, 0xAD	; 173
    ccda:	53 e8       	ldi	r21, 0x83	; 131
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    ccdc:	6c 2d       	mov	r22, r12
    ccde:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cce2:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cce6:	10 c0       	rjmp	.+32     	; 0xcd08 <updatelevel+0x154>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    cce8:	12 33       	cpi	r17, 0x32	; 50
    ccea:	09 f0       	breq	.+2      	; 0xccee <updatelevel+0x13a>
    ccec:	f5 c0       	rjmp	.+490    	; 0xced8 <updatelevel+0x324>
    ccee:	49 eb       	ldi	r20, 0xB9	; 185
    ccf0:	53 e8       	ldi	r21, 0x83	; 131
    ccf2:	6c 2d       	mov	r22, r12
    ccf4:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ccf8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    ccfc:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cd00:	b6 01       	movw	r22, r12
    cd02:	90 e0       	ldi	r25, 0x00	; 0
    cd04:	0e 94 04 64 	call	0xc808	; 0xc808 <setowl>
int xi;
int yi;
char c;

    
    for (yi = 0; yi < 13; yi++)
    cd08:	8f ef       	ldi	r24, 0xFF	; 255
    cd0a:	e8 1a       	sub	r14, r24
    cd0c:	f8 0a       	sbc	r15, r24
    cd0e:	c6 5a       	subi	r28, 0xA6	; 166
    cd10:	df 4f       	sbci	r29, 0xFF	; 255
    cd12:	8d e0       	ldi	r24, 0x0D	; 13
    cd14:	e8 16       	cp	r14, r24
    cd16:	f1 04       	cpc	r15, r1
    cd18:	09 f0       	breq	.+2      	; 0xcd1c <updatelevel+0x168>
    cd1a:	57 cf       	rjmp	.-338    	; 0xcbca <updatelevel+0x16>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    cd1c:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cd20:	8e 5f       	subi	r24, 0xFE	; 254
if(destX>=32)destX=0; 
    cd22:	80 32       	cpi	r24, 0x20	; 32
    cd24:	18 f4       	brcc	.+6      	; 0xcd2c <updatelevel+0x178>
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    }
//block2 -> block1
    
destX++;
destX++;
    cd26:	80 93 b9 09 	sts	0x09B9, r24	; 0x8009b9 <destX>
    cd2a:	e7 c0       	rjmp	.+462    	; 0xcefa <updatelevel+0x346>
if(destX>=32)destX=0; 
    cd2c:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <destX>
}
    cd30:	e4 c0       	rjmp	.+456    	; 0xcefa <updatelevel+0x346>
    if ( c == 0 ) DrawMap2(destX,xi  ,bigblue0);
    if ( c == 0 && yi == 12 ) DrawMap2(destX,xi + 1  ,bigblue0);    
    if ( c == 1 ) DrawMap2(destX  ,xi  ,ground);
    if ( c == 2 ) DrawMap2(destX  ,xi  ,block0);
    if ( c == 3 ) DrawMap2(destX  ,xi  ,block1);
    if ( c == 4 ) DrawMap2(destX  ,xi  ,block2);
    cd32:	14 30       	cpi	r17, 0x04	; 4
    cd34:	19 f4       	brne	.+6      	; 0xcd3c <updatelevel+0x188>
    cd36:	43 e6       	ldi	r20, 0x63	; 99
    cd38:	53 e8       	ldi	r21, 0x83	; 131
    cd3a:	d0 cf       	rjmp	.-96     	; 0xccdc <updatelevel+0x128>
    if ( c == 5 ) DrawMap2(destX  ,xi  ,ground1);
    cd3c:	15 30       	cpi	r17, 0x05	; 5
    cd3e:	19 f4       	brne	.+6      	; 0xcd46 <updatelevel+0x192>
    cd40:	4d e9       	ldi	r20, 0x9D	; 157
    cd42:	53 e8       	ldi	r21, 0x83	; 131
    cd44:	cb cf       	rjmp	.-106    	; 0xccdc <updatelevel+0x128>
    if ( c == 6 ) DrawMap2(destX  ,xi  ,ground2);
    cd46:	16 30       	cpi	r17, 0x06	; 6
    cd48:	19 f4       	brne	.+6      	; 0xcd50 <updatelevel+0x19c>
    cd4a:	45 e9       	ldi	r20, 0x95	; 149
    cd4c:	53 e8       	ldi	r21, 0x83	; 131
    cd4e:	c6 cf       	rjmp	.-116    	; 0xccdc <updatelevel+0x128>
    if ( c == 7 ) DrawMap2(destX  ,xi  ,block3);
    cd50:	17 30       	cpi	r17, 0x07	; 7
    cd52:	19 f4       	brne	.+6      	; 0xcd5a <updatelevel+0x1a6>
    cd54:	4d e5       	ldi	r20, 0x5D	; 93
    cd56:	53 e8       	ldi	r21, 0x83	; 131
    cd58:	c1 cf       	rjmp	.-126    	; 0xccdc <updatelevel+0x128>
    if ( c == 8 ) DrawMap2(destX  ,xi  ,ground3);
    cd5a:	18 30       	cpi	r17, 0x08	; 8
    cd5c:	19 f4       	brne	.+6      	; 0xcd64 <updatelevel+0x1b0>
    cd5e:	4d e8       	ldi	r20, 0x8D	; 141
    cd60:	53 e8       	ldi	r21, 0x83	; 131
    cd62:	bc cf       	rjmp	.-136    	; 0xccdc <updatelevel+0x128>
    if ( c == 9 ) DrawMap2(destX  ,xi  ,block4);
    cd64:	19 30       	cpi	r17, 0x09	; 9
    cd66:	19 f4       	brne	.+6      	; 0xcd6e <updatelevel+0x1ba>
    cd68:	47 e8       	ldi	r20, 0x87	; 135
    cd6a:	53 e8       	ldi	r21, 0x83	; 131
    cd6c:	b7 cf       	rjmp	.-146    	; 0xccdc <updatelevel+0x128>
    if ( c == 10 ) DrawMap2(destX ,xi  ,block5);
    cd6e:	1a 30       	cpi	r17, 0x0A	; 10
    cd70:	19 f4       	brne	.+6      	; 0xcd78 <updatelevel+0x1c4>
    cd72:	41 e8       	ldi	r20, 0x81	; 129
    cd74:	53 e8       	ldi	r21, 0x83	; 131
    cd76:	b2 cf       	rjmp	.-156    	; 0xccdc <updatelevel+0x128>
    if ( c == 11 ) DrawMap2(destX ,xi  ,tube0);
    cd78:	1b 30       	cpi	r17, 0x0B	; 11
    cd7a:	19 f4       	brne	.+6      	; 0xcd82 <updatelevel+0x1ce>
    cd7c:	48 e1       	ldi	r20, 0x18	; 24
    cd7e:	53 e8       	ldi	r21, 0x83	; 131
    cd80:	ad cf       	rjmp	.-166    	; 0xccdc <updatelevel+0x128>
    if ( c == 12 ) DrawMap2(destX ,xi  ,tube1);
    cd82:	1c 30       	cpi	r17, 0x0C	; 12
    cd84:	19 f4       	brne	.+6      	; 0xcd8c <updatelevel+0x1d8>
    cd86:	42 e1       	ldi	r20, 0x12	; 18
    cd88:	53 e8       	ldi	r21, 0x83	; 131
    cd8a:	a8 cf       	rjmp	.-176    	; 0xccdc <updatelevel+0x128>
    if ( c == 13 ) DrawMap2(destX ,xi  ,tube2);
    cd8c:	1d 30       	cpi	r17, 0x0D	; 13
    cd8e:	19 f4       	brne	.+6      	; 0xcd96 <updatelevel+0x1e2>
    cd90:	4c e0       	ldi	r20, 0x0C	; 12
    cd92:	53 e8       	ldi	r21, 0x83	; 131
    cd94:	a3 cf       	rjmp	.-186    	; 0xccdc <updatelevel+0x128>
    if ( c == 14 ) DrawMap2(destX ,xi  ,tube3);
    cd96:	1e 30       	cpi	r17, 0x0E	; 14
    cd98:	19 f4       	brne	.+6      	; 0xcda0 <updatelevel+0x1ec>
    cd9a:	46 e0       	ldi	r20, 0x06	; 6
    cd9c:	53 e8       	ldi	r21, 0x83	; 131
    cd9e:	9e cf       	rjmp	.-196    	; 0xccdc <updatelevel+0x128>
    if ( c == 15 ) DrawMap2(destX ,xi  ,tube4);
    cda0:	1f 30       	cpi	r17, 0x0F	; 15
    cda2:	19 f4       	brne	.+6      	; 0xcdaa <updatelevel+0x1f6>
    cda4:	40 e0       	ldi	r20, 0x00	; 0
    cda6:	53 e8       	ldi	r21, 0x83	; 131
    cda8:	99 cf       	rjmp	.-206    	; 0xccdc <updatelevel+0x128>
    if ( c == 16 ) DrawMap2(destX ,xi  ,tube5);
    cdaa:	10 31       	cpi	r17, 0x10	; 16
    cdac:	19 f4       	brne	.+6      	; 0xcdb4 <updatelevel+0x200>
    cdae:	4a ef       	ldi	r20, 0xFA	; 250
    cdb0:	52 e8       	ldi	r21, 0x82	; 130
    cdb2:	94 cf       	rjmp	.-216    	; 0xccdc <updatelevel+0x128>
    if ( c == 31 ) DrawMap2(destX ,xi  ,bush1);
    cdb4:	1f 31       	cpi	r17, 0x1F	; 31
    cdb6:	19 f4       	brne	.+6      	; 0xcdbe <updatelevel+0x20a>
    cdb8:	48 e4       	ldi	r20, 0x48	; 72
    cdba:	53 e8       	ldi	r21, 0x83	; 131
    cdbc:	8f cf       	rjmp	.-226    	; 0xccdc <updatelevel+0x128>
    if ( c == 32 ) DrawMap2(destX ,xi  ,bush2);
    cdbe:	10 32       	cpi	r17, 0x20	; 32
    cdc0:	19 f4       	brne	.+6      	; 0xcdc8 <updatelevel+0x214>
    cdc2:	42 e4       	ldi	r20, 0x42	; 66
    cdc4:	53 e8       	ldi	r21, 0x83	; 131
    cdc6:	8a cf       	rjmp	.-236    	; 0xccdc <updatelevel+0x128>
    if ( c == 33 ) DrawMap2(destX ,xi  ,bush3);
    cdc8:	11 32       	cpi	r17, 0x21	; 33
    cdca:	19 f4       	brne	.+6      	; 0xcdd2 <updatelevel+0x21e>
    cdcc:	4c e3       	ldi	r20, 0x3C	; 60
    cdce:	53 e8       	ldi	r21, 0x83	; 131
    cdd0:	85 cf       	rjmp	.-246    	; 0xccdc <updatelevel+0x128>
    if ( c == 34 ) DrawMap2(destX ,xi  ,bush4);
    cdd2:	12 32       	cpi	r17, 0x22	; 34
    cdd4:	19 f4       	brne	.+6      	; 0xcddc <updatelevel+0x228>
    cdd6:	46 e3       	ldi	r20, 0x36	; 54
    cdd8:	53 e8       	ldi	r21, 0x83	; 131
    cdda:	80 cf       	rjmp	.-256    	; 0xccdc <updatelevel+0x128>
    if ( c == 35 ) DrawMap2(destX ,xi  ,cloud0);
    cddc:	13 32       	cpi	r17, 0x23	; 35
    cdde:	19 f4       	brne	.+6      	; 0xcde6 <updatelevel+0x232>
    cde0:	40 e3       	ldi	r20, 0x30	; 48
    cde2:	53 e8       	ldi	r21, 0x83	; 131
    cde4:	7b cf       	rjmp	.-266    	; 0xccdc <updatelevel+0x128>
    if ( c == 36 ) DrawMap2(destX ,xi  ,cloud1);
    cde6:	14 32       	cpi	r17, 0x24	; 36
    cde8:	19 f4       	brne	.+6      	; 0xcdf0 <updatelevel+0x23c>
    cdea:	4a e2       	ldi	r20, 0x2A	; 42
    cdec:	53 e8       	ldi	r21, 0x83	; 131
    cdee:	76 cf       	rjmp	.-276    	; 0xccdc <updatelevel+0x128>
    if ( c == 37 ) DrawMap2(destX ,xi  ,cloud2);
    cdf0:	15 32       	cpi	r17, 0x25	; 37
    cdf2:	19 f4       	brne	.+6      	; 0xcdfa <updatelevel+0x246>
    cdf4:	44 e2       	ldi	r20, 0x24	; 36
    cdf6:	53 e8       	ldi	r21, 0x83	; 131
    cdf8:	71 cf       	rjmp	.-286    	; 0xccdc <updatelevel+0x128>
    if ( c == 38 ) DrawMap2(destX ,xi  ,cloud3);
    cdfa:	16 32       	cpi	r17, 0x26	; 38
    cdfc:	19 f4       	brne	.+6      	; 0xce04 <updatelevel+0x250>
    cdfe:	4e e1       	ldi	r20, 0x1E	; 30
    ce00:	53 e8       	ldi	r21, 0x83	; 131
    ce02:	6c cf       	rjmp	.-296    	; 0xccdc <updatelevel+0x128>
    if ( c == 39 ) {DrawMap2(destX,xi  ,bridge0);DrawMap2(destX +1 ,xi,bridge0);DrawMap2(destX  ,xi + 1 ,nb);DrawMap2(destX +1 ,xi + 1 ,nb);};
    ce04:	17 32       	cpi	r17, 0x27	; 39
    ce06:	e1 f4       	brne	.+56     	; 0xce40 <updatelevel+0x28c>
    ce08:	4f ed       	ldi	r20, 0xDF	; 223
    ce0a:	52 e8       	ldi	r21, 0x82	; 130
    ce0c:	6c 2d       	mov	r22, r12
    ce0e:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ce12:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    ce16:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ce1a:	4f ed       	ldi	r20, 0xDF	; 223
    ce1c:	52 e8       	ldi	r21, 0x82	; 130
    ce1e:	6c 2d       	mov	r22, r12
    ce20:	8f 5f       	subi	r24, 0xFF	; 255
    ce22:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    ce26:	c3 94       	inc	r12
    ce28:	43 ed       	ldi	r20, 0xD3	; 211
    ce2a:	52 e8       	ldi	r21, 0x82	; 130
    ce2c:	6c 2d       	mov	r22, r12
    ce2e:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ce32:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    ce36:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ce3a:	43 ed       	ldi	r20, 0xD3	; 211
    ce3c:	52 e8       	ldi	r21, 0x82	; 130
    ce3e:	43 c0       	rjmp	.+134    	; 0xcec6 <updatelevel+0x312>
    if ( c == 21 ) DrawMap2(destX ,xi  ,mush0);
    ce40:	15 31       	cpi	r17, 0x15	; 21
    ce42:	19 f4       	brne	.+6      	; 0xce4a <updatelevel+0x296>
    ce44:	44 ef       	ldi	r20, 0xF4	; 244
    ce46:	52 e8       	ldi	r21, 0x82	; 130
    ce48:	49 cf       	rjmp	.-366    	; 0xccdc <updatelevel+0x128>
    if ( c == 22 ) DrawMap2(destX ,xi  ,mush1);
    ce4a:	16 31       	cpi	r17, 0x16	; 22
    ce4c:	19 f4       	brne	.+6      	; 0xce54 <updatelevel+0x2a0>
    ce4e:	4e ee       	ldi	r20, 0xEE	; 238
    ce50:	52 e8       	ldi	r21, 0x82	; 130
    ce52:	44 cf       	rjmp	.-376    	; 0xccdc <updatelevel+0x128>
    if ( c == 23 ) DrawMap2(destX ,xi  ,mush2);
    ce54:	17 31       	cpi	r17, 0x17	; 23
    ce56:	19 f4       	brne	.+6      	; 0xce5e <updatelevel+0x2aa>
    ce58:	48 ee       	ldi	r20, 0xE8	; 232
    ce5a:	52 e8       	ldi	r21, 0x82	; 130
    ce5c:	3f cf       	rjmp	.-386    	; 0xccdc <updatelevel+0x128>
    if ( c == 24 ) DrawMap2(destX ,xi  ,mush3);	
    ce5e:	18 31       	cpi	r17, 0x18	; 24
    ce60:	19 f4       	brne	.+6      	; 0xce68 <updatelevel+0x2b4>
    ce62:	42 ee       	ldi	r20, 0xE2	; 226
    ce64:	52 e8       	ldi	r21, 0x82	; 130
    ce66:	3a cf       	rjmp	.-396    	; 0xccdc <updatelevel+0x128>
    if ( c == 25 ) DrawMap2(destX ,xi  ,door0);	
    ce68:	19 31       	cpi	r17, 0x19	; 25
    ce6a:	19 f4       	brne	.+6      	; 0xce72 <updatelevel+0x2be>
    ce6c:	4b e7       	ldi	r20, 0x7B	; 123
    ce6e:	53 e8       	ldi	r21, 0x83	; 131
    ce70:	35 cf       	rjmp	.-406    	; 0xccdc <updatelevel+0x128>
    if ( c == 26 ) DrawMap2(destX ,xi  ,door1);	
    ce72:	1a 31       	cpi	r17, 0x1A	; 26
    ce74:	19 f4       	brne	.+6      	; 0xce7c <updatelevel+0x2c8>
    ce76:	45 e7       	ldi	r20, 0x75	; 117
    ce78:	53 e8       	ldi	r21, 0x83	; 131
    ce7a:	30 cf       	rjmp	.-416    	; 0xccdc <updatelevel+0x128>
    if ( c == 27 ) DrawMap2(destX ,xi  ,door2);	
    ce7c:	1b 31       	cpi	r17, 0x1B	; 27
    ce7e:	19 f4       	brne	.+6      	; 0xce86 <updatelevel+0x2d2>
    ce80:	4f e6       	ldi	r20, 0x6F	; 111
    ce82:	53 e8       	ldi	r21, 0x83	; 131
    ce84:	2b cf       	rjmp	.-426    	; 0xccdc <updatelevel+0x128>
    if ( c == 28 ) DrawMap2(destX ,xi  ,door3);	    
    ce86:	1c 31       	cpi	r17, 0x1C	; 28
    ce88:	19 f4       	brne	.+6      	; 0xce90 <updatelevel+0x2dc>
    ce8a:	49 e6       	ldi	r20, 0x69	; 105
    ce8c:	53 e8       	ldi	r21, 0x83	; 131
    ce8e:	26 cf       	rjmp	.-436    	; 0xccdc <updatelevel+0x128>
    if ( c == 29 ) {DrawMap2(destX ,xi  ,spike0);DrawMap2(destX + 1,xi  ,spike0);};	
    ce90:	1d 31       	cpi	r17, 0x1D	; 29
    ce92:	61 f4       	brne	.+24     	; 0xceac <updatelevel+0x2f8>
    ce94:	4f e5       	ldi	r20, 0x5F	; 95
    ce96:	52 e8       	ldi	r21, 0x82	; 130
    ce98:	6c 2d       	mov	r22, r12
    ce9a:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ce9e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cea2:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cea6:	4f e5       	ldi	r20, 0x5F	; 95
    cea8:	52 e8       	ldi	r21, 0x82	; 130
    ceaa:	0d c0       	rjmp	.+26     	; 0xcec6 <updatelevel+0x312>
    if ( c == 30 ) {DrawMap2(destX ,xi  ,spike1);DrawMap2(destX + 1,xi  ,spike1);};
    ceac:	1e 31       	cpi	r17, 0x1E	; 30
    ceae:	71 f4       	brne	.+28     	; 0xcecc <updatelevel+0x318>
    ceb0:	4b e5       	ldi	r20, 0x5B	; 91
    ceb2:	52 e8       	ldi	r21, 0x82	; 130
    ceb4:	6c 2d       	mov	r22, r12
    ceb6:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    ceba:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    cebe:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cec2:	4b e5       	ldi	r20, 0x5B	; 91
    cec4:	52 e8       	ldi	r21, 0x82	; 130
    cec6:	6c 2d       	mov	r22, r12
    cec8:	8f 5f       	subi	r24, 0xFF	; 255
    ceca:	0b cf       	rjmp	.-490    	; 0xcce2 <updatelevel+0x12e>
    if ( c == 41 ) DrawMap2(destX ,xi  ,diamond0);
    cecc:	19 32       	cpi	r17, 0x29	; 41
    cece:	09 f0       	breq	.+2      	; 0xced2 <updatelevel+0x31e>
    ced0:	0b cf       	rjmp	.-490    	; 0xcce8 <updatelevel+0x134>
    ced2:	47 e5       	ldi	r20, 0x57	; 87
    ced4:	53 e8       	ldi	r21, 0x83	; 131
    ced6:	02 cf       	rjmp	.-508    	; 0xccdc <updatelevel+0x128>
    if ( c == 50 ) {DrawMap2(destX,xi  ,bigblue0);setowl(  destX ,xi );};
    if ( c == 51 ) {DrawMap2(destX,xi  ,bigblue0);setblob( destX ,xi );};
    ced8:	13 33       	cpi	r17, 0x33	; 51
    ceda:	09 f0       	breq	.+2      	; 0xcede <updatelevel+0x32a>
    cedc:	15 cf       	rjmp	.-470    	; 0xcd08 <updatelevel+0x154>
    cede:	49 eb       	ldi	r20, 0xB9	; 185
    cee0:	53 e8       	ldi	r21, 0x83	; 131
    cee2:	6c 2d       	mov	r22, r12
    cee4:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cee8:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    ceec:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    cef0:	b6 01       	movw	r22, r12
    cef2:	90 e0       	ldi	r25, 0x00	; 0
    cef4:	0e 94 41 64 	call	0xc882	; 0xc882 <setblob>
    cef8:	07 cf       	rjmp	.-498    	; 0xcd08 <updatelevel+0x154>
//block2 -> block1
    
destX++;
destX++;
if(destX>=32)destX=0; 
}
    cefa:	df 91       	pop	r29
    cefc:	cf 91       	pop	r28
    cefe:	1f 91       	pop	r17
    cf00:	ff 90       	pop	r15
    cf02:	ef 90       	pop	r14
    cf04:	df 90       	pop	r13
    cf06:	cf 90       	pop	r12
    cf08:	08 95       	ret

0000cf0a <initmonster>:
MonsteronScreen = true;    
}

void initmonster()
{
owl.onscreen = false;   
    cf0a:	10 92 b7 09 	sts	0x09B7, r1	; 0x8009b7 <owl+0x9>
blob.onscreen = false;   
    cf0e:	10 92 5f 09 	sts	0x095F, r1	; 0x80095f <blob+0x9>
MonsteronScreen = false;
    cf12:	10 92 9b 09 	sts	0x099B, r1	; 0x80099b <MonsteronScreen>
    cf16:	08 95       	ret

0000cf18 <movelevel>:
}

void movelevel()
{
if (player.x >= 150 && (scrolltiles + 15 <= levelwidth )) {
    cf18:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    cf1c:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    cf20:	86 39       	cpi	r24, 0x96	; 150
    cf22:	91 05       	cpc	r25, r1
    cf24:	94 f1       	brlt	.+100    	; 0xcf8a <movelevel+0x72>
    cf26:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cf2a:	90 e0       	ldi	r25, 0x00	; 0
    cf2c:	8c 34       	cpi	r24, 0x4C	; 76
    cf2e:	91 05       	cpc	r25, r1
    cf30:	64 f5       	brge	.+88     	; 0xcf8a <movelevel+0x72>
Scroll(1 ,0);   
    cf32:	60 e0       	ldi	r22, 0x00	; 0
    cf34:	81 e0       	ldi	r24, 0x01	; 1
    cf36:	0e 94 2e 53 	call	0xa65c	; 0xa65c <Scroll>
Levelx  = Levelx + 1;
    cf3a:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    cf3e:	8f 5f       	subi	r24, 0xFF	; 255
    cf40:	80 93 f7 09 	sts	0x09F7, r24	; 0x8009f7 <Levelx>
player.x = player.x - 1;
    cf44:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    cf48:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    cf4c:	01 97       	sbiw	r24, 0x01	; 1
    cf4e:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    cf52:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player2.x = player2.x -1;
    cf56:	80 91 9c 09 	lds	r24, 0x099C	; 0x80099c <player2>
    cf5a:	90 91 9d 09 	lds	r25, 0x099D	; 0x80099d <player2+0x1>
    cf5e:	01 97       	sbiw	r24, 0x01	; 1
    cf60:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    cf64:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
scrollmonster(-1);
    cf68:	8f ef       	ldi	r24, 0xFF	; 255
    cf6a:	9f ef       	ldi	r25, 0xFF	; 255
    cf6c:	0e 94 de 63 	call	0xc7bc	; 0xc7bc <scrollmonster>
if ( Levelx >= 16 )
    cf70:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    cf74:	80 31       	cpi	r24, 0x10	; 16
    cf76:	48 f0       	brcs	.+18     	; 0xcf8a <movelevel+0x72>
{
updatelevel();
    cf78:	0e 94 da 65 	call	0xcbb4	; 0xcbb4 <updatelevel>
scrolltiles++; 
    cf7c:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    cf80:	8f 5f       	subi	r24, 0xFF	; 255
    cf82:	80 93 fe 09 	sts	0x09FE, r24	; 0x8009fe <scrolltiles>
Levelx = 0;    
    cf86:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
    cf8a:	08 95       	ret

0000cf8c <updatetime>:
void vsync_callback() {
	time++;
}

void updatetime(uint32_t val)
{
    cf8c:	cf 92       	push	r12
    cf8e:	df 92       	push	r13
    cf90:	ef 92       	push	r14
    cf92:	ff 92       	push	r15
	uint32_t tmp;
	tmp = val;
	tmp /= 60;
    cf94:	2c e3       	ldi	r18, 0x3C	; 60
    cf96:	30 e0       	ldi	r19, 0x00	; 0
    cf98:	40 e0       	ldi	r20, 0x00	; 0
    cf9a:	50 e0       	ldi	r21, 0x00	; 0
    cf9c:	0e 94 82 6c 	call	0xd904	; 0xd904 <__udivmodsi4>
    tmp = 99 - tmp ;
    cfa0:	83 e6       	ldi	r24, 0x63	; 99
    cfa2:	c8 2e       	mov	r12, r24
    cfa4:	d1 2c       	mov	r13, r1
    cfa6:	e1 2c       	mov	r14, r1
    cfa8:	f1 2c       	mov	r15, r1
    cfaa:	c2 1a       	sub	r12, r18
    cfac:	d3 0a       	sbc	r13, r19
    cfae:	e4 0a       	sbc	r14, r20
    cfb0:	f5 0a       	sbc	r15, r21
    if ( leveltime >  tmp || leveltime  == 0  ) printtileint( 26 ,0,leveltime,2); 
    cfb2:	40 91 f4 09 	lds	r20, 0x09F4	; 0x8009f4 <leveltime>
    cfb6:	84 2f       	mov	r24, r20
    cfb8:	90 e0       	ldi	r25, 0x00	; 0
    cfba:	a0 e0       	ldi	r26, 0x00	; 0
    cfbc:	b0 e0       	ldi	r27, 0x00	; 0
    cfbe:	c8 16       	cp	r12, r24
    cfc0:	d9 06       	cpc	r13, r25
    cfc2:	ea 06       	cpc	r14, r26
    cfc4:	fb 06       	cpc	r15, r27
    cfc6:	10 f0       	brcs	.+4      	; 0xcfcc <updatetime+0x40>
    cfc8:	41 11       	cpse	r20, r1
    cfca:	09 c0       	rjmp	.+18     	; 0xcfde <updatetime+0x52>
    cfcc:	50 e0       	ldi	r21, 0x00	; 0
    cfce:	22 e0       	ldi	r18, 0x02	; 2
    cfd0:	30 e0       	ldi	r19, 0x00	; 0
    cfd2:	60 e0       	ldi	r22, 0x00	; 0
    cfd4:	70 e0       	ldi	r23, 0x00	; 0
    cfd6:	8a e1       	ldi	r24, 0x1A	; 26
    cfd8:	90 e0       	ldi	r25, 0x00	; 0
    cfda:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
    leveltime = tmp;
    cfde:	c0 92 f4 09 	sts	0x09F4, r12	; 0x8009f4 <leveltime>
    if (leveltime == 0 ) timeisup = true;
    cfe2:	c1 10       	cpse	r12, r1
    cfe4:	03 c0       	rjmp	.+6      	; 0xcfec <updatetime+0x60>
    cfe6:	81 e0       	ldi	r24, 0x01	; 1
    cfe8:	80 93 55 09 	sts	0x0955, r24	; 0x800955 <timeisup>
    
}
    cfec:	ff 90       	pop	r15
    cfee:	ef 90       	pop	r14
    cff0:	df 90       	pop	r13
    cff2:	cf 90       	pop	r12
    cff4:	08 95       	ret

0000cff6 <playintro>:

void playintro()
{
    cff6:	0f 93       	push	r16
    cff8:	cf 93       	push	r28
    cffa:	df 93       	push	r29

introplaying = true;
    cffc:	c1 e0       	ldi	r28, 0x01	; 1
    cffe:	c0 93 72 09 	sts	0x0972, r28	; 0x800972 <introplaying>
Levelx = 0;
    d002:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
scrolltiles = 0;
    d006:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
player2.x = 21;
    d00a:	85 e1       	ldi	r24, 0x15	; 21
    d00c:	90 e0       	ldi	r25, 0x00	; 0
    d00e:	90 93 9d 09 	sts	0x099D, r25	; 0x80099d <player2+0x1>
    d012:	80 93 9c 09 	sts	0x099C, r24	; 0x80099c <player2>
player2.y = 191;
    d016:	8f eb       	ldi	r24, 0xBF	; 191
    d018:	90 e0       	ldi	r25, 0x00	; 0
    d01a:	90 93 9f 09 	sts	0x099F, r25	; 0x80099f <player2+0x3>
    d01e:	80 93 9e 09 	sts	0x099E, r24	; 0x80099e <player2+0x2>
player2.touchground = true;
    d022:	c0 93 a6 09 	sts	0x09A6, r28	; 0x8009a6 <player2+0xa>
player.x = 8;
    d026:	28 e0       	ldi	r18, 0x08	; 8
    d028:	30 e0       	ldi	r19, 0x00	; 0
    d02a:	30 93 62 09 	sts	0x0962, r19	; 0x800962 <player+0x1>
    d02e:	20 93 61 09 	sts	0x0961, r18	; 0x800961 <player>
player.y = 191;
    d032:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    d036:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
player.touchground = true;
    d03a:	c0 93 6b 09 	sts	0x096B, r28	; 0x80096b <player+0xa>
player.jumping = false;
    d03e:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
player.jumpreleased = true;
    d042:	c0 93 6f 09 	sts	0x096F, r28	; 0x80096f <player+0xe>
initlevel();
    d046:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>
initmonster();
    d04a:	0e 94 85 67 	call	0xcf0a	; 0xcf0a <initmonster>
setheadline();    
    d04e:	0e 94 8d 5b 	call	0xb71a	; 0xb71a <setheadline>
drawlevel(Levelx);
    d052:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    d056:	90 e0       	ldi	r25, 0x00	; 0
    d058:	0e 94 7e 64 	call	0xc8fc	; 0xc8fc <drawlevel>
setheadline();
    d05c:	0e 94 8d 5b 	call	0xb71a	; 0xb71a <setheadline>
MapSprite2(0 ,melli0 ,0);
    d060:	40 e0       	ldi	r20, 0x00	; 0
    d062:	63 ed       	ldi	r22, 0xD3	; 211
    d064:	73 e5       	ldi	r23, 0x53	; 83
    d066:	80 e0       	ldi	r24, 0x00	; 0
    d068:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MapSprite2(spriteInd ,man0,0);
    d06c:	40 e0       	ldi	r20, 0x00	; 0
    d06e:	6b ea       	ldi	r22, 0xAB	; 171
    d070:	73 e5       	ldi	r23, 0x53	; 83
    d072:	86 e0       	ldi	r24, 0x06	; 6
    d074:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);      
    d078:	40 e0       	ldi	r20, 0x00	; 0
    d07a:	65 e8       	ldi	r22, 0x85	; 133
    d07c:	73 e5       	ldi	r23, 0x53	; 83
    d07e:	8c e0       	ldi	r24, 0x0C	; 12
    d080:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
score = 0;
    d084:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <score+0x1>
    d088:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <score>
leveltime = 99;
    d08c:	83 e6       	ldi	r24, 0x63	; 99
    d08e:	80 93 f4 09 	sts	0x09F4, r24	; 0x8009f4 <leveltime>
time = 0;
    d092:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d096:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d09a:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d09e:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
lives = 3;    
    d0a2:	83 e0       	ldi	r24, 0x03	; 3
    d0a4:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
level = 0;
    d0a8:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <level>
bonus = 0;
    d0ac:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    d0b0:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
scrolltiles = 0;
    d0b4:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
Screen.scrollX = 0;
    d0b8:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
destX = 0;
    d0bc:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <destX>
Levelx = 0;
    d0c0:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
setheadline();
    d0c4:	0e 94 8d 5b 	call	0xb71a	; 0xb71a <setheadline>
printheadlineintro();
    d0c8:	0e 94 74 58 	call	0xb0e8	; 0xb0e8 <printheadlineintro>
player.direction = 'r';
    d0cc:	82 e7       	ldi	r24, 0x72	; 114
    d0ce:	80 93 68 09 	sts	0x0968, r24	; 0x800968 <player+0x7>
player.action = 'w';
    d0d2:	87 e7       	ldi	r24, 0x77	; 119
    d0d4:	80 93 67 09 	sts	0x0967, r24	; 0x800967 <player+0x6>
player.facing = 0;
    d0d8:	10 92 66 09 	sts	0x0966, r1	; 0x800966 <player+0x5>
    d0dc:	10 92 65 09 	sts	0x0965, r1	; 0x800965 <player+0x4>
player.ximpulse = 1; 
    d0e0:	c0 93 6c 09 	sts	0x096C, r28	; 0x80096c <player+0xb>
FadeIn(1, true);
    d0e4:	61 e0       	ldi	r22, 0x01	; 1
    d0e6:	81 e0       	ldi	r24, 0x01	; 1
    d0e8:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
{
player.action = 'j';
    d0ec:	da e6       	ldi	r29, 0x6A	; 106
player.direction = 'r';
player.action = 'w';
player.facing = 0;
player.ximpulse = 1; 
FadeIn(1, true);
while(introplaying )
    d0ee:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    d0f2:	88 23       	and	r24, r24
    d0f4:	09 f4       	brne	.+2      	; 0xd0f8 <playintro+0x102>
    d0f6:	f6 c0       	rjmp	.+492    	; 0xd2e4 <playintro+0x2ee>
{
moveplayer();  
    d0f8:	0e 94 67 5e 	call	0xbcce	; 0xbcce <moveplayer>
moveplayer2();
    d0fc:	0e 94 36 61 	call	0xc26c	; 0xc26c <moveplayer2>
movemonster(); 
    d100:	0e 94 02 5c 	call	0xb804	; 0xb804 <movemonster>
WaitVsync(1); 
    d104:	81 e0       	ldi	r24, 0x01	; 1
    d106:	90 e0       	ldi	r25, 0x00	; 0
    d108:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
drawmonster();       
    d10c:	0e 94 9a 5b 	call	0xb734	; 0xb734 <drawmonster>
movelevel();
    d110:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <movelevel>
drawplayer();
    d114:	0e 94 b2 54 	call	0xa964	; 0xa964 <drawplayer>
drawplayer2();        
    d118:	0e 94 5e 55 	call	0xaabc	; 0xaabc <drawplayer2>
  



player.ximpulse = 1;
    d11c:	c0 93 6c 09 	sts	0x096C, r28	; 0x80096c <player+0xb>
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    d120:	40 91 97 09 	lds	r20, 0x0997	; 0x800997 <time>
    d124:	50 91 98 09 	lds	r21, 0x0998	; 0x800998 <time+0x1>
    d128:	60 91 99 09 	lds	r22, 0x0999	; 0x800999 <time+0x2>
    d12c:	70 91 9a 09 	lds	r23, 0x099A	; 0x80099a <time+0x3>
    d130:	43 3d       	cpi	r20, 0xD3	; 211
    d132:	51 05       	cpc	r21, r1
    d134:	61 05       	cpc	r22, r1
    d136:	71 05       	cpc	r23, r1
    d138:	28 f4       	brcc	.+10     	; 0xd144 <playintro+0x14e>
    d13a:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    d13e:	81 11       	cpse	r24, r1
    d140:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xb>
    lx = 12 + destX;
    d144:	80 91 b9 09 	lds	r24, 0x09B9	; 0x8009b9 <destX>
    d148:	90 e0       	ldi	r25, 0x00	; 0
    d14a:	9c 01       	movw	r18, r24
    d14c:	24 5f       	subi	r18, 0xF4	; 244
    d14e:	3f 4f       	sbci	r19, 0xFF	; 255
    if (lx >= 32 ) lx = lx - 32;
    d150:	20 32       	cpi	r18, 0x20	; 32
    d152:	31 05       	cpc	r19, r1
    d154:	2c f4       	brge	.+10     	; 0xd160 <playintro+0x16a>



player.ximpulse = 1;
if ( time <= 210 && introplaying ) player.ximpulse = 0;
    lx = 12 + destX;
    d156:	30 93 fa 09 	sts	0x09FA, r19	; 0x8009fa <lx+0x1>
    d15a:	20 93 f9 09 	sts	0x09F9, r18	; 0x8009f9 <lx>
    d15e:	05 c0       	rjmp	.+10     	; 0xd16a <playintro+0x174>
    if (lx >= 32 ) lx = lx - 32;
    d160:	44 97       	sbiw	r24, 0x14	; 20
    d162:	90 93 fa 09 	sts	0x09FA, r25	; 0x8009fa <lx+0x1>
    d166:	80 93 f9 09 	sts	0x09F9, r24	; 0x8009f9 <lx>
    
if ( ( time ==  60  || time ==  240  ) && introplaying ) DrawMap2(  lx,  18 ,press0 ); 
    d16a:	4c 33       	cpi	r20, 0x3C	; 60
    d16c:	51 05       	cpc	r21, r1
    d16e:	61 05       	cpc	r22, r1
    d170:	71 05       	cpc	r23, r1
    d172:	29 f0       	breq	.+10     	; 0xd17e <playintro+0x188>
    d174:	40 3f       	cpi	r20, 0xF0	; 240
    d176:	51 05       	cpc	r21, r1
    d178:	61 05       	cpc	r22, r1
    d17a:	71 05       	cpc	r23, r1
    d17c:	59 f4       	brne	.+22     	; 0xd194 <playintro+0x19e>
    d17e:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    d182:	88 23       	and	r24, r24
    d184:	39 f0       	breq	.+14     	; 0xd194 <playintro+0x19e>
    d186:	40 e8       	ldi	r20, 0x80	; 128
    d188:	52 e8       	ldi	r21, 0x82	; 130
    d18a:	62 e1       	ldi	r22, 0x12	; 18
    d18c:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d190:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
if ( ( time ==  150 || time ==  330  ) && introplaying ) {
    d194:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d198:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d19c:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d1a0:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d1a4:	86 39       	cpi	r24, 0x96	; 150
    d1a6:	91 05       	cpc	r25, r1
    d1a8:	a1 05       	cpc	r26, r1
    d1aa:	b1 05       	cpc	r27, r1
    d1ac:	31 f0       	breq	.+12     	; 0xd1ba <playintro+0x1c4>
    d1ae:	8a 34       	cpi	r24, 0x4A	; 74
    d1b0:	91 40       	sbci	r25, 0x01	; 1
    d1b2:	a1 05       	cpc	r26, r1
    d1b4:	b1 05       	cpc	r27, r1
    d1b6:	09 f0       	breq	.+2      	; 0xd1ba <playintro+0x1c4>
    d1b8:	44 c0       	rjmp	.+136    	; 0xd242 <playintro+0x24c>
    d1ba:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    d1be:	88 23       	and	r24, r24
    d1c0:	09 f4       	brne	.+2      	; 0xd1c4 <playintro+0x1ce>
    d1c2:	3f c0       	rjmp	.+126    	; 0xd242 <playintro+0x24c>
    DrawMap2(  lx,  18 ,nb );   
    d1c4:	43 ed       	ldi	r20, 0xD3	; 211
    d1c6:	52 e8       	ldi	r21, 0x82	; 130
    d1c8:	62 e1       	ldi	r22, 0x12	; 18
    d1ca:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d1ce:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 1,  18 ,nb ); 
    d1d2:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d1d6:	43 ed       	ldi	r20, 0xD3	; 211
    d1d8:	52 e8       	ldi	r21, 0x82	; 130
    d1da:	62 e1       	ldi	r22, 0x12	; 18
    d1dc:	8f 5f       	subi	r24, 0xFF	; 255
    d1de:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 2,  18 ,nb ); 
    d1e2:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d1e6:	43 ed       	ldi	r20, 0xD3	; 211
    d1e8:	52 e8       	ldi	r21, 0x82	; 130
    d1ea:	62 e1       	ldi	r22, 0x12	; 18
    d1ec:	8e 5f       	subi	r24, 0xFE	; 254
    d1ee:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 3,  18 ,nb ); 
    d1f2:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d1f6:	43 ed       	ldi	r20, 0xD3	; 211
    d1f8:	52 e8       	ldi	r21, 0x82	; 130
    d1fa:	62 e1       	ldi	r22, 0x12	; 18
    d1fc:	8d 5f       	subi	r24, 0xFD	; 253
    d1fe:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 4,  18 ,nb ); 
    d202:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d206:	43 ed       	ldi	r20, 0xD3	; 211
    d208:	52 e8       	ldi	r21, 0x82	; 130
    d20a:	62 e1       	ldi	r22, 0x12	; 18
    d20c:	8c 5f       	subi	r24, 0xFC	; 252
    d20e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 5,  18 ,nb ); 
    d212:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d216:	43 ed       	ldi	r20, 0xD3	; 211
    d218:	52 e8       	ldi	r21, 0x82	; 130
    d21a:	62 e1       	ldi	r22, 0x12	; 18
    d21c:	8b 5f       	subi	r24, 0xFB	; 251
    d21e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 6,  18 ,nb ); 
    d222:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d226:	43 ed       	ldi	r20, 0xD3	; 211
    d228:	52 e8       	ldi	r21, 0x82	; 130
    d22a:	62 e1       	ldi	r22, 0x12	; 18
    d22c:	8a 5f       	subi	r24, 0xFA	; 250
    d22e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    DrawMap2(  lx + 7,  18 ,nb ); 
    d232:	80 91 f9 09 	lds	r24, 0x09F9	; 0x8009f9 <lx>
    d236:	43 ed       	ldi	r20, 0xD3	; 211
    d238:	52 e8       	ldi	r21, 0x82	; 130
    d23a:	62 e1       	ldi	r22, 0x12	; 18
    d23c:	89 5f       	subi	r24, 0xF9	; 249
    d23e:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
    
};


if  ( ( player.x == 149 && scrolltiles == 14 && Levelx == 2 ) || ( player.x == 149 && scrolltiles == 23 && Levelx == 10 ) || ( player.x == 149 && scrolltiles == 32 && Levelx == 10 )  || ( player.x == 149 && scrolltiles == 42 && Levelx == 10 ) )
    d242:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <player>
    d246:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <player+0x1>
    d24a:	85 39       	cpi	r24, 0x95	; 149
    d24c:	91 05       	cpc	r25, r1
    d24e:	31 f5       	brne	.+76     	; 0xd29c <playintro+0x2a6>
    d250:	80 91 fe 09 	lds	r24, 0x09FE	; 0x8009fe <scrolltiles>
    d254:	8e 30       	cpi	r24, 0x0E	; 14
    d256:	31 f4       	brne	.+12     	; 0xd264 <playintro+0x26e>
    d258:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    d25c:	82 30       	cpi	r24, 0x02	; 2
    d25e:	09 f0       	breq	.+2      	; 0xd262 <playintro+0x26c>
    d260:	46 cf       	rjmp	.-372    	; 0xd0ee <playintro+0xf8>
    d262:	0c c0       	rjmp	.+24     	; 0xd27c <playintro+0x286>
    d264:	87 31       	cpi	r24, 0x17	; 23
    d266:	29 f0       	breq	.+10     	; 0xd272 <playintro+0x27c>
    d268:	80 32       	cpi	r24, 0x20	; 32
    d26a:	19 f0       	breq	.+6      	; 0xd272 <playintro+0x27c>
    d26c:	8a 32       	cpi	r24, 0x2A	; 42
    d26e:	09 f0       	breq	.+2      	; 0xd272 <playintro+0x27c>
    d270:	3e cf       	rjmp	.-388    	; 0xd0ee <playintro+0xf8>
    d272:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    d276:	8a 30       	cpi	r24, 0x0A	; 10
    d278:	09 f0       	breq	.+2      	; 0xd27c <playintro+0x286>
    d27a:	39 cf       	rjmp	.-398    	; 0xd0ee <playintro+0xf8>
{
player.action = 'j';
    d27c:	d0 93 67 09 	sts	0x0967, r29	; 0x800967 <player+0x6>
player.yimpulse = 0;
    d280:	10 92 6d 09 	sts	0x096D, r1	; 0x80096d <player+0xc>
player.jumping = true;
    d284:	c0 93 6e 09 	sts	0x096E, r28	; 0x80096e <player+0xd>
player.touchground = false;
    d288:	10 92 6b 09 	sts	0x096B, r1	; 0x80096b <player+0xa>
player.jumpreleased = false;
    d28c:	10 92 6f 09 	sts	0x096F, r1	; 0x80096f <player+0xe>
player.jumpcounter++ ; 
    d290:	80 91 70 09 	lds	r24, 0x0970	; 0x800970 <player+0xf>
    d294:	8f 5f       	subi	r24, 0xFF	; 255
    d296:	80 93 70 09 	sts	0x0970, r24	; 0x800970 <player+0xf>
    d29a:	29 cf       	rjmp	.-430    	; 0xd0ee <playintro+0xf8>
};  
if ( player.x  == 160 ) time = 0;   
    d29c:	80 3a       	cpi	r24, 0xA0	; 160
    d29e:	91 05       	cpc	r25, r1
    d2a0:	49 f4       	brne	.+18     	; 0xd2b4 <playintro+0x2be>
    d2a2:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d2a6:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d2aa:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d2ae:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
    d2b2:	1d cf       	rjmp	.-454    	; 0xd0ee <playintro+0xf8>
if ( player.x >= 206 ) player.ximpulse = 0;
    d2b4:	8e 3c       	cpi	r24, 0xCE	; 206
    d2b6:	91 05       	cpc	r25, r1
    d2b8:	1c f0       	brlt	.+6      	; 0xd2c0 <playintro+0x2ca>
    d2ba:	10 92 6c 09 	sts	0x096C, r1	; 0x80096c <player+0xb>
    d2be:	04 c0       	rjmp	.+8      	; 0xd2c8 <playintro+0x2d2>
if ( player.x >= 180 && time > 420 ) { 
    d2c0:	84 3b       	cpi	r24, 0xB4	; 180
    d2c2:	91 05       	cpc	r25, r1
    d2c4:	0c f4       	brge	.+2      	; 0xd2c8 <playintro+0x2d2>
    d2c6:	13 cf       	rjmp	.-474    	; 0xd0ee <playintro+0xf8>
    d2c8:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d2cc:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d2d0:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d2d4:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d2d8:	85 3a       	cpi	r24, 0xA5	; 165
    d2da:	91 40       	sbci	r25, 0x01	; 1
    d2dc:	a1 05       	cpc	r26, r1
    d2de:	b1 05       	cpc	r27, r1
    d2e0:	08 f4       	brcc	.+2      	; 0xd2e4 <playintro+0x2ee>
    d2e2:	05 cf       	rjmp	.-502    	; 0xd0ee <playintro+0xf8>
                                 
                                      break; };
};

FadeOut(5,true); 
    d2e4:	61 e0       	ldi	r22, 0x01	; 1
    d2e6:	85 e0       	ldi	r24, 0x05	; 5
    d2e8:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
player.x = 8;
    d2ec:	88 e0       	ldi	r24, 0x08	; 8
    d2ee:	90 e0       	ldi	r25, 0x00	; 0
    d2f0:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <player+0x1>
    d2f4:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <player>
player.y = 191;
    d2f8:	8f eb       	ldi	r24, 0xBF	; 191
    d2fa:	90 e0       	ldi	r25, 0x00	; 0
    d2fc:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <player+0x3>
    d300:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <player+0x2>
MoveSprite(0 ,player.x -7 ,player.y - 21  ,2 ,3);
    d304:	03 e0       	ldi	r16, 0x03	; 3
    d306:	22 e0       	ldi	r18, 0x02	; 2
    d308:	4a ea       	ldi	r20, 0xAA	; 170
    d30a:	61 e0       	ldi	r22, 0x01	; 1
    d30c:	80 e0       	ldi	r24, 0x00	; 0
    d30e:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>

}
    d312:	df 91       	pop	r29
    d314:	cf 91       	pop	r28
    d316:	0f 91       	pop	r16
    d318:	08 95       	ret

0000d31a <showgetready>:

void showgetready()
{
    d31a:	0f 93       	push	r16
FadeOut(0, true);
    d31c:	61 e0       	ldi	r22, 0x01	; 1
    d31e:	80 e0       	ldi	r24, 0x00	; 0
    d320:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
Screen.scrollX = 0;
    d324:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d328:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>

printheadline();
    d32c:	0e 94 2f 58 	call	0xb05e	; 0xb05e <printheadline>
printtileint( 26 ,0,99,2); 
    d330:	22 e0       	ldi	r18, 0x02	; 2
    d332:	30 e0       	ldi	r19, 0x00	; 0
    d334:	43 e6       	ldi	r20, 0x63	; 99
    d336:	50 e0       	ldi	r21, 0x00	; 0
    d338:	60 e0       	ldi	r22, 0x00	; 0
    d33a:	70 e0       	ldi	r23, 0x00	; 0
    d33c:	8a e1       	ldi	r24, 0x1A	; 26
    d33e:	90 e0       	ldi	r25, 0x00	; 0
    d340:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d344:	03 e0       	ldi	r16, 0x03	; 3
    d346:	22 e0       	ldi	r18, 0x02	; 2
    d348:	4c ee       	ldi	r20, 0xEC	; 236
    d34a:	6c ee       	ldi	r22, 0xEC	; 236
    d34c:	80 e0       	ldi	r24, 0x00	; 0
    d34e:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d352:	02 e0       	ldi	r16, 0x02	; 2
    d354:	22 e0       	ldi	r18, 0x02	; 2
    d356:	4c ee       	ldi	r20, 0xEC	; 236
    d358:	6c ee       	ldi	r22, 0xEC	; 236
    d35a:	8c e0       	ldi	r24, 0x0C	; 12
    d35c:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
DrawMap2(  11, 10  ,get0 ); 
    d360:	44 e9       	ldi	r20, 0x94	; 148
    d362:	52 e8       	ldi	r21, 0x82	; 130
    d364:	6a e0       	ldi	r22, 0x0A	; 10
    d366:	8b e0       	ldi	r24, 0x0B	; 11
    d368:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
WaitVsync(1);  
    d36c:	81 e0       	ldi	r24, 0x01	; 1
    d36e:	90 e0       	ldi	r25, 0x00	; 0
    d370:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
FadeIn(0, true);
    d374:	61 e0       	ldi	r22, 0x01	; 1
    d376:	80 e0       	ldi	r24, 0x00	; 0
    d378:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>
time = 0;
    d37c:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d380:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d384:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d388:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
while ( time < 240 )
    d38c:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d390:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d394:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d398:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d39c:	80 3f       	cpi	r24, 0xF0	; 240
    d39e:	91 05       	cpc	r25, r1
    d3a0:	a1 05       	cpc	r26, r1
    d3a2:	b1 05       	cpc	r27, r1
    d3a4:	80 f4       	brcc	.+32     	; 0xd3c6 <showgetready+0xac>
{ time++;    
    d3a6:	01 96       	adiw	r24, 0x01	; 1
    d3a8:	a1 1d       	adc	r26, r1
    d3aa:	b1 1d       	adc	r27, r1
    d3ac:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <time>
    d3b0:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <time+0x1>
    d3b4:	a0 93 99 09 	sts	0x0999, r26	; 0x800999 <time+0x2>
    d3b8:	b0 93 9a 09 	sts	0x099A, r27	; 0x80099a <time+0x3>
WaitVsync(1);    
    d3bc:	81 e0       	ldi	r24, 0x01	; 1
    d3be:	90 e0       	ldi	r25, 0x00	; 0
    d3c0:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    d3c4:	e3 cf       	rjmp	.-58     	; 0xd38c <showgetready+0x72>
};
 FadeOut(0, true);    
    d3c6:	61 e0       	ldi	r22, 0x01	; 1
    d3c8:	80 e0       	ldi	r24, 0x00	; 0
};
    d3ca:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d3cc:	0c 94 69 54 	jmp	0xa8d2	; 0xa8d2 <FadeOut>

0000d3d0 <showgameover>:
};

void showgameover()
{
    d3d0:	0f 93       	push	r16
FadeOut(0, true);
    d3d2:	61 e0       	ldi	r22, 0x01	; 1
    d3d4:	80 e0       	ldi	r24, 0x00	; 0
    d3d6:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
Screen.scrollX = 0;
    d3da:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d3de:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d3e2:	03 e0       	ldi	r16, 0x03	; 3
    d3e4:	22 e0       	ldi	r18, 0x02	; 2
    d3e6:	4c ee       	ldi	r20, 0xEC	; 236
    d3e8:	6c ee       	ldi	r22, 0xEC	; 236
    d3ea:	80 e0       	ldi	r24, 0x00	; 0
    d3ec:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d3f0:	02 e0       	ldi	r16, 0x02	; 2
    d3f2:	22 e0       	ldi	r18, 0x02	; 2
    d3f4:	4c ee       	ldi	r20, 0xEC	; 236
    d3f6:	6c ee       	ldi	r22, 0xEC	; 236
    d3f8:	8c e0       	ldi	r24, 0x0C	; 12
    d3fa:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
DrawMap2(  11, 10  ,over0 ); 
    d3fe:	47 e7       	ldi	r20, 0x77	; 119
    d400:	52 e8       	ldi	r21, 0x82	; 130
    d402:	6a e0       	ldi	r22, 0x0A	; 10
    d404:	8b e0       	ldi	r24, 0x0B	; 11
    d406:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
WaitVsync(1);  
    d40a:	81 e0       	ldi	r24, 0x01	; 1
    d40c:	90 e0       	ldi	r25, 0x00	; 0
    d40e:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
FadeIn(0, true);
    d412:	61 e0       	ldi	r22, 0x01	; 1
    d414:	80 e0       	ldi	r24, 0x00	; 0
    d416:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>
time = 0;
    d41a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d41e:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d422:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d426:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
while ( time < 240 )
    d42a:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d42e:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d432:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d436:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d43a:	80 3f       	cpi	r24, 0xF0	; 240
    d43c:	91 05       	cpc	r25, r1
    d43e:	a1 05       	cpc	r26, r1
    d440:	b1 05       	cpc	r27, r1
    d442:	80 f4       	brcc	.+32     	; 0xd464 <showgameover+0x94>
{ time++;    
    d444:	01 96       	adiw	r24, 0x01	; 1
    d446:	a1 1d       	adc	r26, r1
    d448:	b1 1d       	adc	r27, r1
    d44a:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <time>
    d44e:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <time+0x1>
    d452:	a0 93 99 09 	sts	0x0999, r26	; 0x800999 <time+0x2>
    d456:	b0 93 9a 09 	sts	0x099A, r27	; 0x80099a <time+0x3>
WaitVsync(1);    
    d45a:	81 e0       	ldi	r24, 0x01	; 1
    d45c:	90 e0       	ldi	r25, 0x00	; 0
    d45e:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    d462:	e3 cf       	rjmp	.-58     	; 0xd42a <showgameover+0x5a>
};
 FadeOut(0, true);    
    d464:	61 e0       	ldi	r22, 0x01	; 1
    d466:	80 e0       	ldi	r24, 0x00	; 0
};
    d468:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d46a:	0c 94 69 54 	jmp	0xa8d2	; 0xa8d2 <FadeOut>

0000d46e <showtimesup>:
};
void showtimesup()
{
    d46e:	0f 93       	push	r16
FadeOut(0, true);
    d470:	61 e0       	ldi	r22, 0x01	; 1
    d472:	80 e0       	ldi	r24, 0x00	; 0
    d474:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
Screen.scrollX = 0;
    d478:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d47c:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d480:	03 e0       	ldi	r16, 0x03	; 3
    d482:	22 e0       	ldi	r18, 0x02	; 2
    d484:	4c ee       	ldi	r20, 0xEC	; 236
    d486:	6c ee       	ldi	r22, 0xEC	; 236
    d488:	80 e0       	ldi	r24, 0x00	; 0
    d48a:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d48e:	02 e0       	ldi	r16, 0x02	; 2
    d490:	22 e0       	ldi	r18, 0x02	; 2
    d492:	4c ee       	ldi	r20, 0xEC	; 236
    d494:	6c ee       	ldi	r22, 0xEC	; 236
    d496:	8c e0       	ldi	r24, 0x0C	; 12
    d498:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
DrawMap2(  11, 10  ,timeup0 ); 
    d49c:	4f e6       	ldi	r20, 0x6F	; 111
    d49e:	52 e8       	ldi	r21, 0x82	; 130
    d4a0:	6a e0       	ldi	r22, 0x0A	; 10
    d4a2:	8b e0       	ldi	r24, 0x0B	; 11
    d4a4:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
WaitVsync(1);  
    d4a8:	81 e0       	ldi	r24, 0x01	; 1
    d4aa:	90 e0       	ldi	r25, 0x00	; 0
    d4ac:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
FadeIn(0, true);
    d4b0:	61 e0       	ldi	r22, 0x01	; 1
    d4b2:	80 e0       	ldi	r24, 0x00	; 0
    d4b4:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>
time = 0;
    d4b8:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d4bc:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d4c0:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d4c4:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
while ( time < 240 )
    d4c8:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d4cc:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d4d0:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d4d4:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d4d8:	80 3f       	cpi	r24, 0xF0	; 240
    d4da:	91 05       	cpc	r25, r1
    d4dc:	a1 05       	cpc	r26, r1
    d4de:	b1 05       	cpc	r27, r1
    d4e0:	80 f4       	brcc	.+32     	; 0xd502 <showtimesup+0x94>
{ time++;    
    d4e2:	01 96       	adiw	r24, 0x01	; 1
    d4e4:	a1 1d       	adc	r26, r1
    d4e6:	b1 1d       	adc	r27, r1
    d4e8:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <time>
    d4ec:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <time+0x1>
    d4f0:	a0 93 99 09 	sts	0x0999, r26	; 0x800999 <time+0x2>
    d4f4:	b0 93 9a 09 	sts	0x099A, r27	; 0x80099a <time+0x3>
WaitVsync(1);    
    d4f8:	81 e0       	ldi	r24, 0x01	; 1
    d4fa:	90 e0       	ldi	r25, 0x00	; 0
    d4fc:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    d500:	e3 cf       	rjmp	.-58     	; 0xd4c8 <showtimesup+0x5a>
};
 FadeOut(0, true);    
    d502:	61 e0       	ldi	r22, 0x01	; 1
    d504:	80 e0       	ldi	r24, 0x00	; 0
};
    d506:	0f 91       	pop	r16
time = 0;
while ( time < 240 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d508:	0c 94 69 54 	jmp	0xa8d2	; 0xa8d2 <FadeOut>

0000d50c <showcongratulation>:
};
void showcongratulation()
{
    d50c:	0f 93       	push	r16
FadeOut(0, true);
    d50e:	61 e0       	ldi	r22, 0x01	; 1
    d510:	80 e0       	ldi	r24, 0x00	; 0
    d512:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
Screen.scrollX = 0;
    d516:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
initlevel();
    d51a:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>
MoveSprite(0 ,-20 ,-20 ,2 ,3);
    d51e:	03 e0       	ldi	r16, 0x03	; 3
    d520:	22 e0       	ldi	r18, 0x02	; 2
    d522:	4c ee       	ldi	r20, 0xEC	; 236
    d524:	6c ee       	ldi	r22, 0xEC	; 236
    d526:	80 e0       	ldi	r24, 0x00	; 0
    d528:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(owlIndex ,-20 ,-20  ,2 ,2);
    d52c:	02 e0       	ldi	r16, 0x02	; 2
    d52e:	22 e0       	ldi	r18, 0x02	; 2
    d530:	4c ee       	ldi	r20, 0xEC	; 236
    d532:	6c ee       	ldi	r22, 0xEC	; 236
    d534:	8c e0       	ldi	r24, 0x0C	; 12
    d536:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
DrawMap2(  9, 10  ,congra0 ); 
    d53a:	43 e6       	ldi	r20, 0x63	; 99
    d53c:	52 e8       	ldi	r21, 0x82	; 130
    d53e:	6a e0       	ldi	r22, 0x0A	; 10
    d540:	89 e0       	ldi	r24, 0x09	; 9
    d542:	0e 94 c2 53 	call	0xa784	; 0xa784 <DrawMap>
FadeIn(0, true);
    d546:	61 e0       	ldi	r22, 0x01	; 1
    d548:	80 e0       	ldi	r24, 0x00	; 0
    d54a:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>
time = 0;
    d54e:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d552:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d556:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d55a:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
while ( time < 480 )
    d55e:	80 91 97 09 	lds	r24, 0x0997	; 0x800997 <time>
    d562:	90 91 98 09 	lds	r25, 0x0998	; 0x800998 <time+0x1>
    d566:	a0 91 99 09 	lds	r26, 0x0999	; 0x800999 <time+0x2>
    d56a:	b0 91 9a 09 	lds	r27, 0x099A	; 0x80099a <time+0x3>
    d56e:	80 3e       	cpi	r24, 0xE0	; 224
    d570:	21 e0       	ldi	r18, 0x01	; 1
    d572:	92 07       	cpc	r25, r18
    d574:	a1 05       	cpc	r26, r1
    d576:	b1 05       	cpc	r27, r1
    d578:	80 f4       	brcc	.+32     	; 0xd59a <showcongratulation+0x8e>
{ time++;    
    d57a:	01 96       	adiw	r24, 0x01	; 1
    d57c:	a1 1d       	adc	r26, r1
    d57e:	b1 1d       	adc	r27, r1
    d580:	80 93 97 09 	sts	0x0997, r24	; 0x800997 <time>
    d584:	90 93 98 09 	sts	0x0998, r25	; 0x800998 <time+0x1>
    d588:	a0 93 99 09 	sts	0x0999, r26	; 0x800999 <time+0x2>
    d58c:	b0 93 9a 09 	sts	0x099A, r27	; 0x80099a <time+0x3>
WaitVsync(1);    
    d590:	81 e0       	ldi	r24, 0x01	; 1
    d592:	90 e0       	ldi	r25, 0x00	; 0
    d594:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    d598:	e2 cf       	rjmp	.-60     	; 0xd55e <showcongratulation+0x52>
};
 FadeOut(0, true);    
    d59a:	61 e0       	ldi	r22, 0x01	; 1
    d59c:	80 e0       	ldi	r24, 0x00	; 0
};
    d59e:	0f 91       	pop	r16
time = 0;
while ( time < 480 )
{ time++;    
WaitVsync(1);    
};
 FadeOut(0, true);    
    d5a0:	0c 94 69 54 	jmp	0xa8d2	; 0xa8d2 <FadeOut>

0000d5a4 <main>:
};
int main(){ 
ClearVram();    
    d5a4:	0e 94 3b 47 	call	0x8e76	; 0x8e76 <ClearVram>
FadeOut(0, true);
    d5a8:	61 e0       	ldi	r22, 0x01	; 1
    d5aa:	80 e0       	ldi	r24, 0x00	; 0
    d5ac:	0e 94 69 54 	call	0xa8d2	; 0xa8d2 <FadeOut>
SetTileTable(uMTiles);
    d5b0:	8b ed       	ldi	r24, 0xDB	; 219
    d5b2:	93 e5       	ldi	r25, 0x53	; 83
    d5b4:	0e 94 56 47 	call	0x8eac	; 0x8eac <SetTileTable>
SetSpritesTileTable(uMSprites);
    d5b8:	83 e3       	ldi	r24, 0x33	; 51
    d5ba:	90 e4       	ldi	r25, 0x40	; 64
    d5bc:	0e 94 36 47 	call	0x8e6c	; 0x8e6c <SetSpritesTileTable>
InitMusicPlayer(patches);
    d5c0:	84 ec       	ldi	r24, 0xC4	; 196
    d5c2:	9e e3       	ldi	r25, 0x3E	; 62
    d5c4:	0e 94 c0 48 	call	0x9180	; 0x9180 <InitMusicPlayer>
Screen.scrollY=0;  
    d5c8:	10 92 5f 08 	sts	0x085F, r1	; 0x80085f <screen_scrollY>
Screen.overlayHeight=OVERLAY_LINES;
    d5cc:	10 92 5b 08 	sts	0x085B, r1	; 0x80085b <Screen>
    
SetUserPostVsyncCallback(vsync_callback);
    d5d0:	8e e9       	ldi	r24, 0x9E	; 158
    d5d2:	94 e5       	ldi	r25, 0x54	; 84
    d5d4:	0e 94 90 47 	call	0x8f20	; 0x8f20 <SetUserPostVsyncCallback>
while(1)
{
introplaying = true; 
    d5d8:	d1 e0       	ldi	r29, 0x01	; 1
Levelx = 0;
scrolltiles = 0;
player.x = 8;
    d5da:	88 e0       	ldi	r24, 0x08	; 8
    d5dc:	e8 2e       	mov	r14, r24
    d5de:	f1 2c       	mov	r15, r1
player.y = 191;
    d5e0:	9f eb       	ldi	r25, 0xBF	; 191
    d5e2:	c9 2e       	mov	r12, r25
    d5e4:	d1 2c       	mov	r13, r1
isplaying = true;
while (isplaying)
{

showgetready();
isplaying = true;
    d5e6:	c1 e0       	ldi	r28, 0x01	; 1
finished = false;
died = false;
timeisup = false;    
Levelx = 0;
scrolltiles = 0;
player2.x = 21;
    d5e8:	25 e1       	ldi	r18, 0x15	; 21
    d5ea:	82 2e       	mov	r8, r18
    d5ec:	91 2c       	mov	r9, r1
player2.y = 191;
    d5ee:	3f eb       	ldi	r19, 0xBF	; 191
    d5f0:	a3 2e       	mov	r10, r19
    d5f2:	b1 2c       	mov	r11, r1
player.x = 8;
    d5f4:	48 e0       	ldi	r20, 0x08	; 8
    d5f6:	64 2e       	mov	r6, r20
    d5f8:	71 2c       	mov	r7, r1
Screen.overlayHeight=OVERLAY_LINES;
    
SetUserPostVsyncCallback(vsync_callback);
while(1)
{
introplaying = true; 
    d5fa:	d0 93 72 09 	sts	0x0972, r29	; 0x800972 <introplaying>
Levelx = 0;
    d5fe:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
scrolltiles = 0;
    d602:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
player.x = 8;
    d606:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    d60a:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    d60e:	d0 92 64 09 	sts	0x0964, r13	; 0x800964 <player+0x3>
    d612:	c0 92 63 09 	sts	0x0963, r12	; 0x800963 <player+0x2>
destX = 0;
    d616:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <destX>
level = 0;
    d61a:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <level>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d61e:	02 e0       	ldi	r16, 0x02	; 2
    d620:	22 e0       	ldi	r18, 0x02	; 2
    d622:	4c ee       	ldi	r20, 0xEC	; 236
    d624:	6c ee       	ldi	r22, 0xEC	; 236
    d626:	8c e0       	ldi	r24, 0x0C	; 12
    d628:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);  
    d62c:	03 e0       	ldi	r16, 0x03	; 3
    d62e:	22 e0       	ldi	r18, 0x02	; 2
    d630:	4c ee       	ldi	r20, 0xEC	; 236
    d632:	6c ee       	ldi	r22, 0xEC	; 236
    d634:	80 e0       	ldi	r24, 0x00	; 0
    d636:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
while(introplaying) playintro();
    d63a:	80 91 72 09 	lds	r24, 0x0972	; 0x800972 <introplaying>
    d63e:	88 23       	and	r24, r24
    d640:	19 f0       	breq	.+6      	; 0xd648 <main+0xa4>
    d642:	0e 94 fb 67 	call	0xcff6	; 0xcff6 <playintro>
    d646:	f9 cf       	rjmp	.-14     	; 0xd63a <main+0x96>
    
score = 0;
    d648:	10 92 79 09 	sts	0x0979, r1	; 0x800979 <score+0x1>
    d64c:	10 92 78 09 	sts	0x0978, r1	; 0x800978 <score>
lives = 3; 
    d650:	83 e0       	ldi	r24, 0x03	; 3
    d652:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
level = startlevel;
    d656:	d0 93 88 09 	sts	0x0988, r29	; 0x800988 <level>
isplaying = true;
    d65a:	d0 93 f3 09 	sts	0x09F3, r29	; 0x8009f3 <isplaying>
exitgame = false;
    d65e:	10 92 96 09 	sts	0x0996, r1	; 0x800996 <exitgame>
Levelx = 0;
    d662:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
scrolltiles = 0;
    d666:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
player.x = 8;
    d66a:	f0 92 62 09 	sts	0x0962, r15	; 0x800962 <player+0x1>
    d66e:	e0 92 61 09 	sts	0x0961, r14	; 0x800961 <player>
player.y = 191;
    d672:	d0 92 64 09 	sts	0x0964, r13	; 0x800964 <player+0x3>
    d676:	c0 92 63 09 	sts	0x0963, r12	; 0x800963 <player+0x2>
destX = 0;
    d67a:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <destX>
score = 0;
StartSong(midisong);
    d67e:	8b e6       	ldi	r24, 0x6B	; 107
    d680:	9a e3       	ldi	r25, 0x3A	; 58
    d682:	0e 94 db 48 	call	0x91b6	; 0x91b6 <StartSong>
MapSprite2(0 ,melli0 ,0);
MapSprite2(spriteInd ,man0 ,0);
MapSprite2(owlIndex ,owl0 ,0);   
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
MoveSprite(0 , - 20 , -20 ,2 ,3);    
leveltime = 99;
    d686:	13 e6       	ldi	r17, 0x63	; 99
player.x = 8;
player.y = 191;
destX = 0;
score = 0;
StartSong(midisong);
while (lives > 0 )
    d688:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    d68c:	88 23       	and	r24, r24
    d68e:	09 f4       	brne	.+2      	; 0xd692 <main+0xee>
    d690:	0e c1       	rjmp	.+540    	; 0xd8ae <main+0x30a>
{
isplaying = true;
    d692:	d0 93 f3 09 	sts	0x09F3, r29	; 0x8009f3 <isplaying>
while (isplaying)
    d696:	80 91 f3 09 	lds	r24, 0x09F3	; 0x8009f3 <isplaying>
    d69a:	88 23       	and	r24, r24
    d69c:	a9 f3       	breq	.-22     	; 0xd688 <main+0xe4>
{

showgetready();
    d69e:	0e 94 8d 69 	call	0xd31a	; 0xd31a <showgetready>
isplaying = true;
    d6a2:	c0 93 f3 09 	sts	0x09F3, r28	; 0x8009f3 <isplaying>
finished = false;
    d6a6:	10 92 f2 09 	sts	0x09F2, r1	; 0x8009f2 <finished>
died = false;
    d6aa:	10 92 f8 09 	sts	0x09F8, r1	; 0x8009f8 <died>
timeisup = false;    
    d6ae:	10 92 55 09 	sts	0x0955, r1	; 0x800955 <timeisup>
Levelx = 0;
    d6b2:	10 92 f7 09 	sts	0x09F7, r1	; 0x8009f7 <Levelx>
scrolltiles = 0;
    d6b6:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
player2.x = 21;
    d6ba:	90 92 9d 09 	sts	0x099D, r9	; 0x80099d <player2+0x1>
    d6be:	80 92 9c 09 	sts	0x099C, r8	; 0x80099c <player2>
player2.y = 191;
    d6c2:	b0 92 9f 09 	sts	0x099F, r11	; 0x80099f <player2+0x3>
    d6c6:	a0 92 9e 09 	sts	0x099E, r10	; 0x80099e <player2+0x2>
player.x = 8;
    d6ca:	70 92 62 09 	sts	0x0962, r7	; 0x800962 <player+0x1>
    d6ce:	60 92 61 09 	sts	0x0961, r6	; 0x800961 <player>
player.y = 191;
    d6d2:	b0 92 64 09 	sts	0x0964, r11	; 0x800964 <player+0x3>
    d6d6:	a0 92 63 09 	sts	0x0963, r10	; 0x800963 <player+0x2>
destX = 0;
    d6da:	10 92 b9 09 	sts	0x09B9, r1	; 0x8009b9 <destX>
player2.touchground = true;
    d6de:	c0 93 a6 09 	sts	0x09A6, r28	; 0x8009a6 <player2+0xa>
player.touchground = true;
    d6e2:	c0 93 6b 09 	sts	0x096B, r28	; 0x80096b <player+0xa>
player.jumping = false;
    d6e6:	10 92 6e 09 	sts	0x096E, r1	; 0x80096e <player+0xd>
player.jumpreleased = true;
    d6ea:	c0 93 6f 09 	sts	0x096F, r28	; 0x80096f <player+0xe>
initlevel();
    d6ee:	0e 94 3a 57 	call	0xae74	; 0xae74 <initlevel>
initmonster();
    d6f2:	0e 94 85 67 	call	0xcf0a	; 0xcf0a <initmonster>
MapSprite2(0 ,melli0 ,0);
    d6f6:	40 e0       	ldi	r20, 0x00	; 0
    d6f8:	63 ed       	ldi	r22, 0xD3	; 211
    d6fa:	73 e5       	ldi	r23, 0x53	; 83
    d6fc:	80 e0       	ldi	r24, 0x00	; 0
    d6fe:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MapSprite2(spriteInd ,man0 ,0);
    d702:	40 e0       	ldi	r20, 0x00	; 0
    d704:	6b ea       	ldi	r22, 0xAB	; 171
    d706:	73 e5       	ldi	r23, 0x53	; 83
    d708:	86 e0       	ldi	r24, 0x06	; 6
    d70a:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MapSprite2(owlIndex ,owl0 ,0);   
    d70e:	40 e0       	ldi	r20, 0x00	; 0
    d710:	65 e8       	ldi	r22, 0x85	; 133
    d712:	73 e5       	ldi	r23, 0x53	; 83
    d714:	8c e0       	ldi	r24, 0x0C	; 12
    d716:	0e 94 48 53 	call	0xa690	; 0xa690 <MapSprite2>
MoveSprite(owlIndex , - 20 , -20 ,2 ,2);
    d71a:	02 e0       	ldi	r16, 0x02	; 2
    d71c:	22 e0       	ldi	r18, 0x02	; 2
    d71e:	4c ee       	ldi	r20, 0xEC	; 236
    d720:	6c ee       	ldi	r22, 0xEC	; 236
    d722:	8c e0       	ldi	r24, 0x0C	; 12
    d724:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
MoveSprite(0 , - 20 , -20 ,2 ,3);    
    d728:	03 e0       	ldi	r16, 0x03	; 3
    d72a:	22 e0       	ldi	r18, 0x02	; 2
    d72c:	4c ee       	ldi	r20, 0xEC	; 236
    d72e:	6c ee       	ldi	r22, 0xEC	; 236
    d730:	80 e0       	ldi	r24, 0x00	; 0
    d732:	0e 94 95 53 	call	0xa72a	; 0xa72a <MoveSprite>
leveltime = 99;
    d736:	10 93 f4 09 	sts	0x09F4, r17	; 0x8009f4 <leveltime>
time = 0;
    d73a:	10 92 97 09 	sts	0x0997, r1	; 0x800997 <time>
    d73e:	10 92 98 09 	sts	0x0998, r1	; 0x800998 <time+0x1>
    d742:	10 92 99 09 	sts	0x0999, r1	; 0x800999 <time+0x2>
    d746:	10 92 9a 09 	sts	0x099A, r1	; 0x80099a <time+0x3>
bonus = 0;
    d74a:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    d74e:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
scrolltiles = 0;
    d752:	10 92 fe 09 	sts	0x09FE, r1	; 0x8009fe <scrolltiles>
Screen.scrollX = 0;
    d756:	10 92 5e 08 	sts	0x085E, r1	; 0x80085e <screen_scrollX>
setheadline();    
    d75a:	0e 94 8d 5b 	call	0xb71a	; 0xb71a <setheadline>
drawlevel(Levelx);
    d75e:	80 91 f7 09 	lds	r24, 0x09F7	; 0x8009f7 <Levelx>
    d762:	90 e0       	ldi	r25, 0x00	; 0
    d764:	0e 94 7e 64 	call	0xc8fc	; 0xc8fc <drawlevel>
printheadline();   
    d768:	0e 94 2f 58 	call	0xb05e	; 0xb05e <printheadline>
FadeIn(1, true);   
    d76c:	61 e0       	ldi	r22, 0x01	; 1
    d76e:	81 e0       	ldi	r24, 0x01	; 1
    d770:	0e 94 5d 54 	call	0xa8ba	; 0xa8ba <FadeIn>

play = true;
    d774:	c0 93 89 09 	sts	0x0989, r28	; 0x800989 <play>

while(play)
    d778:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <play>
    d77c:	88 23       	and	r24, r24
    d77e:	09 f4       	brne	.+2      	; 0xd782 <main+0x1de>
    d780:	80 c0       	rjmp	.+256    	; 0xd882 <main+0x2de>
{
    
moveplayer(); 
    d782:	0e 94 67 5e 	call	0xbcce	; 0xbcce <moveplayer>
moveplayer2();
    d786:	0e 94 36 61 	call	0xc26c	; 0xc26c <moveplayer2>
movemonster();
    d78a:	0e 94 02 5c 	call	0xb804	; 0xb804 <movemonster>
WaitVsync(1); 
    d78e:	81 e0       	ldi	r24, 0x01	; 1
    d790:	90 e0       	ldi	r25, 0x00	; 0
    d792:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
drawmonster();   
    d796:	0e 94 9a 5b 	call	0xb734	; 0xb734 <drawmonster>
movelevel();
    d79a:	0e 94 8c 67 	call	0xcf18	; 0xcf18 <movelevel>
drawplayer(); 
    d79e:	0e 94 b2 54 	call	0xa964	; 0xa964 <drawplayer>
drawplayer2(); 
    d7a2:	0e 94 5e 55 	call	0xaabc	; 0xaabc <drawplayer2>
//drawplayer();   

//movemonster();
//drawmonster();    

updatetime(time);
    d7a6:	60 91 97 09 	lds	r22, 0x0997	; 0x800997 <time>
    d7aa:	70 91 98 09 	lds	r23, 0x0998	; 0x800998 <time+0x1>
    d7ae:	80 91 99 09 	lds	r24, 0x0999	; 0x800999 <time+0x2>
    d7b2:	90 91 9a 09 	lds	r25, 0x099A	; 0x80099a <time+0x3>
    d7b6:	0e 94 c6 67 	call	0xcf8c	; 0xcf8c <updatetime>
    if ( player.y > 240) 
    d7ba:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <player+0x2>
    d7be:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <player+0x3>
    d7c2:	81 3f       	cpi	r24, 0xF1	; 241
    d7c4:	91 05       	cpc	r25, r1
    d7c6:	c4 f0       	brlt	.+48     	; 0xd7f8 <main+0x254>
    {
    died = true;
    d7c8:	c0 93 f8 09 	sts	0x09F8, r28	; 0x8009f8 <died>
    lives--;    
    d7cc:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    d7d0:	81 50       	subi	r24, 0x01	; 1
    d7d2:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
    isplaying = false; 
    d7d6:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    d7da:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    bonus = 0; 
    d7de:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    d7e2:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
    TriggerFx(9,0xff,true);
    d7e6:	41 e0       	ldi	r20, 0x01	; 1
    d7e8:	6f ef       	ldi	r22, 0xFF	; 255
    d7ea:	89 e0       	ldi	r24, 0x09	; 9
    d7ec:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240); 
    d7f0:	80 ef       	ldi	r24, 0xF0	; 240
    d7f2:	90 e0       	ldi	r25, 0x00	; 0
    d7f4:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>

    };

    if (timeisup)
    d7f8:	80 91 55 09 	lds	r24, 0x0955	; 0x800955 <timeisup>
    d7fc:	88 23       	and	r24, r24
    d7fe:	19 f1       	breq	.+70     	; 0xd846 <main+0x2a2>
    {
    printtileint( 26 ,0,leveltime,2);
    d800:	40 91 f4 09 	lds	r20, 0x09F4	; 0x8009f4 <leveltime>
    d804:	50 e0       	ldi	r21, 0x00	; 0
    d806:	22 e0       	ldi	r18, 0x02	; 2
    d808:	30 e0       	ldi	r19, 0x00	; 0
    d80a:	60 e0       	ldi	r22, 0x00	; 0
    d80c:	70 e0       	ldi	r23, 0x00	; 0
    d80e:	8a e1       	ldi	r24, 0x1A	; 26
    d810:	90 e0       	ldi	r25, 0x00	; 0
    d812:	0e 94 08 56 	call	0xac10	; 0xac10 <printtileint>
    TriggerFx(9,0xff,true);
    d816:	41 e0       	ldi	r20, 0x01	; 1
    d818:	6f ef       	ldi	r22, 0xFF	; 255
    d81a:	89 e0       	ldi	r24, 0x09	; 9
    d81c:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240);   
    d820:	80 ef       	ldi	r24, 0xF0	; 240
    d822:	90 e0       	ldi	r25, 0x00	; 0
    d824:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    showtimesup();
    d828:	0e 94 37 6a 	call	0xd46e	; 0xd46e <showtimesup>
    lives--;    
    d82c:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    d830:	81 50       	subi	r24, 0x01	; 1
    d832:	80 93 ad 09 	sts	0x09AD, r24	; 0x8009ad <lives>
    bonus = 0;  
    d836:	10 92 f1 09 	sts	0x09F1, r1	; 0x8009f1 <bonus+0x1>
    d83a:	10 92 f0 09 	sts	0x09F0, r1	; 0x8009f0 <bonus>
    isplaying = false; 
    d83e:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    d842:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    };
      if (finished)
    d846:	80 91 f2 09 	lds	r24, 0x09F2	; 0x8009f2 <finished>
    d84a:	88 23       	and	r24, r24
    d84c:	09 f4       	brne	.+2      	; 0xd850 <main+0x2ac>
    d84e:	94 cf       	rjmp	.-216    	; 0xd778 <main+0x1d4>
    {
    TriggerFx(10,0xff,true);      
    d850:	41 e0       	ldi	r20, 0x01	; 1
    d852:	6f ef       	ldi	r22, 0xFF	; 255
    d854:	8a e0       	ldi	r24, 0x0A	; 10
    d856:	0e 94 b8 49 	call	0x9370	; 0x9370 <TriggerFx>
    WaitVsync(240);   
    d85a:	80 ef       	ldi	r24, 0xF0	; 240
    d85c:	90 e0       	ldi	r25, 0x00	; 0
    d85e:	0e 94 01 54 	call	0xa802	; 0xa802 <WaitVsync>
    level++;    
    d862:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <level>
    d866:	8f 5f       	subi	r24, 0xFF	; 255
    d868:	80 93 88 09 	sts	0x0988, r24	; 0x800988 <level>
    StartSong(midisong);
    d86c:	8b e6       	ldi	r24, 0x6B	; 107
    d86e:	9a e3       	ldi	r25, 0x3A	; 58
    d870:	0e 94 db 48 	call	0x91b6	; 0x91b6 <StartSong>
    isplaying = false; 
    d874:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    d878:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    finished = false;
    d87c:	10 92 f2 09 	sts	0x09F2, r1	; 0x8009f2 <finished>
    d880:	7b cf       	rjmp	.-266    	; 0xd778 <main+0x1d4>
   
    };  
 
};

if (lives <= 0 ) showgameover();   
    d882:	80 91 ad 09 	lds	r24, 0x09AD	; 0x8009ad <lives>
    d886:	81 11       	cpse	r24, r1
    d888:	02 c0       	rjmp	.+4      	; 0xd88e <main+0x2ea>
    d88a:	0e 94 e8 69 	call	0xd3d0	; 0xd3d0 <showgameover>

if  (level > maxlevel  ) 
    d88e:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <level>
    d892:	8a 30       	cpi	r24, 0x0A	; 10
    d894:	08 f4       	brcc	.+2      	; 0xd898 <main+0x2f4>
    d896:	ff ce       	rjmp	.-514    	; 0xd696 <main+0xf2>
{   showcongratulation();
    d898:	0e 94 86 6a 	call	0xd50c	; 0xd50c <showcongratulation>
    isplaying = false; 
    d89c:	10 92 f3 09 	sts	0x09F3, r1	; 0x8009f3 <isplaying>
    play = false;
    d8a0:	10 92 89 09 	sts	0x0989, r1	; 0x800989 <play>
    finished = false;
    d8a4:	10 92 f2 09 	sts	0x09F2, r1	; 0x8009f2 <finished>
    lives = 0;
    d8a8:	10 92 ad 09 	sts	0x09AD, r1	; 0x8009ad <lives>
    d8ac:	f4 ce       	rjmp	.-536    	; 0xd696 <main+0xf2>
 
};
};
};
StopSong();
    d8ae:	0e 94 04 49 	call	0x9208	; 0x9208 <StopSong>

    
};
    d8b2:	a3 ce       	rjmp	.-698    	; 0xd5fa <main+0x56>

0000d8b4 <__udivmodhi4>:
    d8b4:	aa 1b       	sub	r26, r26
    d8b6:	bb 1b       	sub	r27, r27
    d8b8:	51 e1       	ldi	r21, 0x11	; 17
    d8ba:	07 c0       	rjmp	.+14     	; 0xd8ca <__udivmodhi4_ep>

0000d8bc <__udivmodhi4_loop>:
    d8bc:	aa 1f       	adc	r26, r26
    d8be:	bb 1f       	adc	r27, r27
    d8c0:	a6 17       	cp	r26, r22
    d8c2:	b7 07       	cpc	r27, r23
    d8c4:	10 f0       	brcs	.+4      	; 0xd8ca <__udivmodhi4_ep>
    d8c6:	a6 1b       	sub	r26, r22
    d8c8:	b7 0b       	sbc	r27, r23

0000d8ca <__udivmodhi4_ep>:
    d8ca:	88 1f       	adc	r24, r24
    d8cc:	99 1f       	adc	r25, r25
    d8ce:	5a 95       	dec	r21
    d8d0:	a9 f7       	brne	.-22     	; 0xd8bc <__udivmodhi4_loop>
    d8d2:	80 95       	com	r24
    d8d4:	90 95       	com	r25
    d8d6:	bc 01       	movw	r22, r24
    d8d8:	cd 01       	movw	r24, r26
    d8da:	08 95       	ret

0000d8dc <__divmodhi4>:
    d8dc:	97 fb       	bst	r25, 7
    d8de:	07 2e       	mov	r0, r23
    d8e0:	16 f4       	brtc	.+4      	; 0xd8e6 <__divmodhi4+0xa>
    d8e2:	00 94       	com	r0
    d8e4:	07 d0       	rcall	.+14     	; 0xd8f4 <__divmodhi4_neg1>
    d8e6:	77 fd       	sbrc	r23, 7
    d8e8:	09 d0       	rcall	.+18     	; 0xd8fc <__divmodhi4_neg2>
    d8ea:	0e 94 5a 6c 	call	0xd8b4	; 0xd8b4 <__udivmodhi4>
    d8ee:	07 fc       	sbrc	r0, 7
    d8f0:	05 d0       	rcall	.+10     	; 0xd8fc <__divmodhi4_neg2>
    d8f2:	3e f4       	brtc	.+14     	; 0xd902 <__divmodhi4_exit>

0000d8f4 <__divmodhi4_neg1>:
    d8f4:	90 95       	com	r25
    d8f6:	81 95       	neg	r24
    d8f8:	9f 4f       	sbci	r25, 0xFF	; 255
    d8fa:	08 95       	ret

0000d8fc <__divmodhi4_neg2>:
    d8fc:	70 95       	com	r23
    d8fe:	61 95       	neg	r22
    d900:	7f 4f       	sbci	r23, 0xFF	; 255

0000d902 <__divmodhi4_exit>:
    d902:	08 95       	ret

0000d904 <__udivmodsi4>:
    d904:	a1 e2       	ldi	r26, 0x21	; 33
    d906:	1a 2e       	mov	r1, r26
    d908:	aa 1b       	sub	r26, r26
    d90a:	bb 1b       	sub	r27, r27
    d90c:	fd 01       	movw	r30, r26
    d90e:	0d c0       	rjmp	.+26     	; 0xd92a <__udivmodsi4_ep>

0000d910 <__udivmodsi4_loop>:
    d910:	aa 1f       	adc	r26, r26
    d912:	bb 1f       	adc	r27, r27
    d914:	ee 1f       	adc	r30, r30
    d916:	ff 1f       	adc	r31, r31
    d918:	a2 17       	cp	r26, r18
    d91a:	b3 07       	cpc	r27, r19
    d91c:	e4 07       	cpc	r30, r20
    d91e:	f5 07       	cpc	r31, r21
    d920:	20 f0       	brcs	.+8      	; 0xd92a <__udivmodsi4_ep>
    d922:	a2 1b       	sub	r26, r18
    d924:	b3 0b       	sbc	r27, r19
    d926:	e4 0b       	sbc	r30, r20
    d928:	f5 0b       	sbc	r31, r21

0000d92a <__udivmodsi4_ep>:
    d92a:	66 1f       	adc	r22, r22
    d92c:	77 1f       	adc	r23, r23
    d92e:	88 1f       	adc	r24, r24
    d930:	99 1f       	adc	r25, r25
    d932:	1a 94       	dec	r1
    d934:	69 f7       	brne	.-38     	; 0xd910 <__udivmodsi4_loop>
    d936:	60 95       	com	r22
    d938:	70 95       	com	r23
    d93a:	80 95       	com	r24
    d93c:	90 95       	com	r25
    d93e:	9b 01       	movw	r18, r22
    d940:	ac 01       	movw	r20, r24
    d942:	bd 01       	movw	r22, r26
    d944:	cf 01       	movw	r24, r30
    d946:	08 95       	ret

0000d948 <__itoa_ncheck>:
    d948:	bb 27       	eor	r27, r27
    d94a:	4a 30       	cpi	r20, 0x0A	; 10
    d94c:	31 f4       	brne	.+12     	; 0xd95a <__itoa_ncheck+0x12>
    d94e:	99 23       	and	r25, r25
    d950:	22 f4       	brpl	.+8      	; 0xd95a <__itoa_ncheck+0x12>
    d952:	bd e2       	ldi	r27, 0x2D	; 45
    d954:	90 95       	com	r25
    d956:	81 95       	neg	r24
    d958:	9f 4f       	sbci	r25, 0xFF	; 255
    d95a:	0c 94 b0 6c 	jmp	0xd960	; 0xd960 <__utoa_common>

0000d95e <__utoa_ncheck>:
    d95e:	bb 27       	eor	r27, r27

0000d960 <__utoa_common>:
    d960:	fb 01       	movw	r30, r22
    d962:	55 27       	eor	r21, r21
    d964:	aa 27       	eor	r26, r26
    d966:	88 0f       	add	r24, r24
    d968:	99 1f       	adc	r25, r25
    d96a:	aa 1f       	adc	r26, r26
    d96c:	a4 17       	cp	r26, r20
    d96e:	10 f0       	brcs	.+4      	; 0xd974 <__utoa_common+0x14>
    d970:	a4 1b       	sub	r26, r20
    d972:	83 95       	inc	r24
    d974:	50 51       	subi	r21, 0x10	; 16
    d976:	b9 f7       	brne	.-18     	; 0xd966 <__utoa_common+0x6>
    d978:	a0 5d       	subi	r26, 0xD0	; 208
    d97a:	aa 33       	cpi	r26, 0x3A	; 58
    d97c:	08 f0       	brcs	.+2      	; 0xd980 <__utoa_common+0x20>
    d97e:	a9 5d       	subi	r26, 0xD9	; 217
    d980:	a1 93       	st	Z+, r26
    d982:	00 97       	sbiw	r24, 0x00	; 0
    d984:	79 f7       	brne	.-34     	; 0xd964 <__utoa_common+0x4>
    d986:	b1 11       	cpse	r27, r1
    d988:	b1 93       	st	Z+, r27
    d98a:	11 92       	st	Z+, r1
    d98c:	cb 01       	movw	r24, r22
    d98e:	0c 94 c9 6c 	jmp	0xd992	; 0xd992 <strrev>

0000d992 <strrev>:
    d992:	dc 01       	movw	r26, r24
    d994:	fc 01       	movw	r30, r24
    d996:	67 2f       	mov	r22, r23
    d998:	71 91       	ld	r23, Z+
    d99a:	77 23       	and	r23, r23
    d99c:	e1 f7       	brne	.-8      	; 0xd996 <strrev+0x4>
    d99e:	32 97       	sbiw	r30, 0x02	; 2
    d9a0:	04 c0       	rjmp	.+8      	; 0xd9aa <strrev+0x18>
    d9a2:	7c 91       	ld	r23, X
    d9a4:	6d 93       	st	X+, r22
    d9a6:	70 83       	st	Z, r23
    d9a8:	62 91       	ld	r22, -Z
    d9aa:	ae 17       	cp	r26, r30
    d9ac:	bf 07       	cpc	r27, r31
    d9ae:	c8 f3       	brcs	.-14     	; 0xd9a2 <strrev+0x10>
    d9b0:	08 95       	ret

0000d9b2 <_exit>:
    d9b2:	f8 94       	cli

0000d9b4 <__stop_program>:
    d9b4:	ff cf       	rjmp	.-2      	; 0xd9b4 <__stop_program>
